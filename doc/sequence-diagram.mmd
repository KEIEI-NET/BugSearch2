```mermaid
sequenceDiagram
    %% コードレビューシステム シーケンス図 v2.1.0

    participant User as ユーザー
    participant Batch as バッチファイル
    participant CLI as CLI
    participant Main as codex_review_severity.py
    participant Index as インデックス処理
    participant Encoder as エンコーダー
    participant Danger as 危険度分析
    participant Overview as create_overview_report.py
    participant Detail as analyze_dangerous_files_detailed.py
    participant Merge as merge_detailed_reports.py
    participant Report as レポート

    %% バッチ実行フロー
    rect rgb(240, 248, 255)
        note over User,Report: 自動実行フロー（推奨）
        User->>Batch: run_detailed_analysis_auto.bat実行
        Batch->>Batch: ファイル数自動検出
        Batch->>CLI: codex_review_severity.py index ./src --profile-index
        CLI->>Main: インデックス作成開始
    end

    %% インデックス作成シーケンス
    rect rgb(255, 248, 240)
        note over Main,Report: Phase 1: インデックス作成（27.88秒）
        Main->>Index: create_index(./src)

        loop 27,884ファイル（seen）
            Index->>Index: check_file_size()
            alt ファイルサイズ ≤ 4MB
                Index->>Encoder: detect_encoding(file_path)
                Encoder->>Encoder: try UTF-8
                alt UTF-8失敗
                    Encoder->>Encoder: try CP932
                    alt CP932失敗
                        Encoder->>Encoder: try Shift-JIS
                        alt Shift-JIS失敗
                            Encoder->>Encoder: try Latin-1
                        end
                    end
                end
                Encoder-->>Index: encoding detected
                Index->>Index: read_file(encoding)
                Index->>Index: save to .advice_index.pickle
            else ファイルサイズ > 4MB
                Index->>Report: log to large_files_over_limit.log
            end
        end

        Index-->>Main: indexed=15,710
        Main-->>CLI: [SUMMARY] indexed=15710 seen=27884
    end

    %% 危険度分析シーケンス
    rect rgb(240, 255, 240)
        note over Main,Report: Phase 2: 危険度分析（--all オプション）
        Batch->>CLI: codex_review_severity.py advise --all
        CLI->>Main: parse_args(["advise", "--all"])
        Main->>Index: load_index()
        Index-->>Main: 15,710 documents

        Main->>Danger: analyze_all_files()
        loop 15,710ファイル
            Danger->>Danger: apply_rules(text)
            Danger->>Danger: detect_problems()
            Danger->>Danger: calculate_severity_score()
        end

        Danger->>Danger: categorize_by_score()
        note over Danger: 緊急: 392件（スコア15+）<br/>高: 423件（スコア10-14）<br/>中: 1,785件（スコア5-9）<br/>低: 0件（スコア1-4）

        Danger->>Report: write src_complete_danger_analysis.md
        Danger-->>Main: 2,600 problematic files
    end

    %% 概要レポート生成
    rect rgb(245, 245, 255)
        note over Main,Report: Phase 3: 概要レポート生成
        Batch->>CLI: python create_overview_report.py
        CLI->>Overview: 実行開始
        Overview->>Report: read src_complete_danger_analysis.md
        Overview->>Overview: parse_dangerous_files()
        Overview->>Overview: categorize_by_priority()
        Overview->>Report: write AI分析.md
        Overview-->>CLI: 概要レポート作成完了
    end

    %% バッチ詳細分析
    rect rgb(255, 240, 245)
        note over Main,Report: Phase 4: バッチ詳細分析（6バッチ）

        loop バッチ1〜6
            Batch->>CLI: python analyze_dangerous_files_detailed.py [1-6]
            CLI->>Detail: バッチ処理開始
            Detail->>Report: read AI分析.md
            Detail->>Detail: get_batch_files(batch_num)

            note over Detail: バッチ1-5: 500ファイル<br/>バッチ6: 100ファイル

            loop 各ファイル
                Detail->>Detail: read_source_file()
                Detail->>Detail: analyze_problems()
                Detail->>Detail: generate_improvements()
                Detail->>Detail: analyze_full_source()
            end

            Detail->>Report: write AI分析_詳細_改善版_batch[1-6].md
            Detail-->>CLI: バッチ完了
        end
    end

    %% レポート統合
    rect rgb(240, 255, 255)
        note over Main,Report: Phase 5: レポート統合
        Batch->>CLI: python merge_detailed_reports.py
        CLI->>Merge: 統合開始

        loop バッチ1〜6
            Merge->>Report: read AI分析_詳細_改善版_batch[1-6].md
            Merge->>Merge: extract_content()
            Merge->>Merge: append_to_final()
        end

        Merge->>Report: write AI分析_詳細_改善版_完全版.md (24.3MB)
        Merge-->>CLI: 統合完了: 2,600ファイル分析
        CLI-->>User: 全処理完了
    end

    %% エラーハンドリング
    rect rgb(255, 230, 230)
        note over User,Report: エラーハンドリング（v2.1.0改善）
        alt UnicodeEncodeError (CP932)
            Detail->>Detail: 絵文字削除（v2.1.0で修正済み）
            Merge->>Merge: 絵文字削除（v2.1.0で修正済み）
        else エンコーディングエラー
            Encoder->>Index: 複数エンコーディング試行
            Index->>Index: 最終的にLatin-1で読み込み
        else 大容量ファイル
            Index->>Report: log_and_skip()
        else タイムアウト（120秒）
            Detail->>Detail: バッチ分割で回避
        end
    end
```