classDiagram
    class CodexReviewSeverity {
        -VERSION: string
        -MAX_FILE_SIZE_MB: int
        -BATCH_SIZE: int
        +main(args) void
        +parse_arguments() ArgumentParser
        +handle_index_command() void
        +handle_advise_command() void
        +get_total_indexed_count() int
    }

    class IndexManager {
        -index_file: Path
        -meta_file: Path
        -max_file_size_mb: float
        -profile_output: Path
        +create_index(path, profile) Dict
        +load_index() List
        +save_index(documents) void
        +save_metadata(stats) void
        -check_file_size(path) bool
        -profile_performance(stats) void
    }

    class EncodingDetector {
        -SUPPORTED_ENCODINGS: List
        +detect_encoding(file_path) string
        -try_decode_utf8(data) string
        -try_decode_cp932(data) string
        -try_decode_sjis(data) string
        -try_decode_latin1(data) string
    }

    class Document {
        +file_path: string
        +content: string
        +encoding: string
        +size_bytes: int
        +language: string
        +indexed_at: datetime
    }

    class DangerAnalyzer {
        -PROBLEM_SCORES: Dict
        +analyze_all_files(documents, use_all) List
        +calculate_severity_score(problems) int
        -detect_n_plus_one(text) bool
        -detect_select_star(text) bool
        -detect_float_money(text) bool
        -detect_xss(text) bool
        -detect_dialog_overuse(text) bool
    }

    class DangerResult {
        +file_path: string
        +problems: List
        +severity_score: int
        +language: string
        +category: string
    }

    class OverviewReportGenerator {
        +input_file: Path
        +output_file: Path
        +generate() void
        +parse_danger_analysis() List
        +categorize_by_priority() Dict
        +write_overview_report(data) void
    }

    class DetailedAnalyzer {
        -batch_size: int
        -batch_num: int
        +analyze_batch(batch_num) void
        +read_source_file(path) string
        +analyze_problems(file_info) string
        +generate_improvements(problems) string
        +analyze_full_source(source) string
        +write_batch_report(analyses) void
    }

    class ReportMerger {
        +batch_files: List
        +output_file: Path
        +merge_reports() void
        +extract_content(batch_file) string
        +create_header() string
        +create_footer(stats) string
        -remove_emojis(text) string
    }

    class BatchController {
        +auto_detect_files: bool
        +run_all_phases() void
        +execute_index_phase() int
        +execute_danger_analysis(file_count) void
        +execute_overview_generation() void
        +execute_batch_analysis() void
        +execute_report_merge() void
    }

    class LargeFileLogger {
        +log_file: Path
        +log_large_file(path, size) void
        +get_large_files() List
    }

    CodexReviewSeverity --> IndexManager : uses
    CodexReviewSeverity --> DangerAnalyzer : uses
    CodexReviewSeverity --> BatchController : delegates

    BatchController --> IndexManager : controls
    BatchController --> DangerAnalyzer : controls
    BatchController --> OverviewReportGenerator : controls
    BatchController --> DetailedAnalyzer : controls
    BatchController --> ReportMerger : controls

    IndexManager --> EncodingDetector : uses
    IndexManager --> Document : creates
    IndexManager --> LargeFileLogger : uses

    DangerAnalyzer --> DangerResult : creates

    OverviewReportGenerator --> DangerResult : processes

    DetailedAnalyzer --> DangerResult : reads

    ReportMerger --> DetailedAnalyzer : merges output