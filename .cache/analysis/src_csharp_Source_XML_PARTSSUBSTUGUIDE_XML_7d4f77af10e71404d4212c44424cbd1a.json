{
  "path": "src/csharp/Source/XML/PARTSSUBSTUGUIDE.XML",
  "severity": 15,
  "problems": [],
  "original_code": "﻿<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definfo>\n\t<!-- ガイドフォームの設定  -->\n\t<GuideDef>\n\t\t<FormTitle>部品代替ガイド</FormTitle>\n\t\t<FormMassge>代替商品を選択してください</FormMassge>\n\t\t<FormMassgeFontColor>MediumSpringGreen</FormMassgeFontColor>\n\t\t<FormHeight>645</FormHeight>\n\t\t<FormWidth>700</FormWidth>\n\t\t<StyleMode>new</StyleMode>\n\t\t<StartPosition>CenterParent</StartPosition>\n\t\t<StartPositionTop>0</StartPositionTop>\n\t\t<StartPositionLeft>0</StartPositionLeft>\n\t\t<ViewerSW>\n\t\t\t<SWName>通常表示</SWName>\n\t\t\t<SWParam>0</SWParam>\n\t\t</ViewerSW>\n\t\t<ViewerSW>\n\t\t\t<SWName>全メーカー表示</SWName>\n\t\t\t<SWParam>10</SWParam>\n\t\t</ViewerSW>\n\t</GuideDef>\n\t<!-- 選択対象データViewerの設定  -->\n\t<ViewerDef>\n\t\t<ViewerInfo>\n\t\t\t<ColName>代替元メーカーコード</ColName>\n\t\t\t<ColKey>ChgSrcMakerCd</ColKey>\n\t\t\t<ColWith>150</ColWith>\n\t\t\t<ColDataType>int</ColDataType>\n\t\t</ViewerInfo>\n\t\t<ViewerInfo>\n\t\t\t<ColName>代替元品番</ColName>\n\t\t\t<ColKey>ChgSrcGoodsNo</ColKey>\n\t\t\t<ColWith>200</ColWith>\n\t\t\t<ColDataType>string</ColDataType>\n\t\t</ViewerInfo>\n\t\t<ViewerInfo>\n\t\t\t<ColName>代替先メーカーコー",
  "analysis": "## 1. 問題の詳細分析\n1. **外部 DLL の未検証ロード（SerchAssm）**  \n   `PMKEN09092A.DLL` をそのまま指定しているため、配置ディレクトリに同名の DLL を置かれると、アプリケーションが悪意ある DLL をロードしてしまいます（DLL ハイジャック）。最悪の場合、アプリケーション権限で任意コードを実行される恐れがあります。\n\n2. **数値型の不適切な利用によるデータ破損（ColDataType=int）**  \n   メーカーコードを `int` 型として扱うと、先頭のゼロが落ちたり、数字以外が含まれるコード（例：アルファベットを含む品番）が取得時に例外を引き起こします。結果的にユーザーが誤った部品を選択したり、検索結果が空になるなど、業務影響が発生します。\n\n3. **要素名のタイプミス（FormMassge / ColWith / Serch〜）**  \n   UI 表示や検索ロジックを担当するコードは通常「Message」「Width」「Search」といった正しいタグ名を参照します。誤字のままだと設定値が反映されず、ユーザーにメッセージが表示されない、列幅が変わらない、検索が動作しない等の不具合を招きます。\n\n## 2. 改善コード\n### Before（問題のあるコード）\n```\n<SearchDef>\n\t<SerchName>Broadleaf.Application.Controller.PartsSubstUAcs</SerchName>\n\t<SerchAssm>PMKEN09092A.DLL</SerchAssm>\n\t<SerchInfoRoot>\n\t\t<SerchInfo type=\"string\">EnterpriseCode</SerchInfo>\n\t</SerchInfoRoot>\n</SearchDef>\n\n<ViewerInfo>\n\t<ColName>代替元メーカーコード</ColName>\n\t<ColKey>ChgSrcMakerCd</ColKey>\n\t<ColWith>150</ColWith>\n\t<ColDataType>int</ColDataType>\n</ViewerInfo>\n\n<FormMassge>代替商品を選択してください</FormMassge>\n<FormMassgeFontColor>MediumSpringGreen</FormMassgeFontColor>\n```\n\n### After（改善後のコード）\n```\n<SearchDef>\n\t<SearchName>Broadleaf.Application.Controller.PartsSubstUAcs</SearchName>\n\t<SearchAssembly strongName=\"PMKEN09092A, Version=1.0.0.0, Culture=neutral, PublicKeyToken=YOURTOKEN\">\n\t\t$(AppBase)\\Bin\\PMKEN09092A.dll\n\t</SearchAssembly>\n\t<SearchInfoRoot>\n\t\t<SearchInfo type=\"string\">EnterpriseCode</SearchInfo>\n\t</SearchInfoRoot>\n</SearchDef>\n\n<ViewerInfo>\n\t<ColName>代替元メーカーコード</ColName>\n\t<ColKey>ChgSrcMakerCd</ColKey>\n\t<ColWidth>150</ColWidth>\n\t<ColDataType>string</ColDataType>\n</ViewerInfo>\n\n<FormMessage>代替商品を選択してください</FormMessage>\n<FormMessageFontColor>#00FA9A</FormMessageFontColor>\n```\n※ `strongName` やファイルパスは実際の署名情報／正規パスに置き換えてください。\n\n## 3. 追加の改善提案\n- **XML スキーマ (XSD) による検証**  \n  要素名や型の誤りを構成ファイル読み込み時に検出できるよう、XSD を用意し、ロード時にバリデーションを行うことを推奨します。\n\n- **デジタル署名検証**  \n  ロード対象 DLL の Authenticode 署名や強名をアプリ側で検証し、不正なバイナリを拒否する仕組みを導入すると安全性が高まります。\n\n- **設定ファイルのアクセス制御**  \n  XML ファイルに改竄が入らないよう、配置フォルダに対する書き込み権限を最小化し、監査ログを有効にしてください。",
  "model_used": "gpt-5-codex"
}