{
  "path": "src/csharp/Source/XML/EMPLOYEEGUIDE.XML",
  "severity": 15,
  "problems": [],
  "original_code": "﻿<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definfo>\n\t<!-- ガイドフォームの設定  -->\n\t<GuideDef>\n\t\t<FormTitle>従業員ガイド</FormTitle>\n\t\t<FormMassge>従業員を選択してください</FormMassge>\n\t\t<FormMassgeFontColor>MediumSpringGreen</FormMassgeFontColor>\n\t\t<FormHeight>645</FormHeight>\n\t\t<FormWidth>400</FormWidth>\n\t\t<StyleMode>new</StyleMode>\n\t\t<StartPosition>CenterParent</StartPosition>\n\t\t<StartPositionTop>0</StartPositionTop>\n\t\t<StartPositionLeft>0</StartPositionLeft>\n\t\t<SearchType>2</SearchType>\n\t\t<SearchCondition>\n\t\t\t<ColName>開始ｺｰﾄﾞ(従業員)</ColName>\n\t\t\t<ColKey>EmployeeCode</ColKey>\n\t\t\t<ColLength>4</ColLength>\n\t\t\t<ColImeMode>0</ColImeMode>\n\t\t</SearchCondition>\n\t\t<SearchCondition>\n\t\t\t<ColName>絞込名称(従業員)</ColName>\n\t\t\t<ColKey>Name</ColKey>\n\t\t\t<ColLength>30</ColLength>\n\t\t\t<ColImeMode>1</ColImeMode>\n\t\t</SearchCondition>\n\t</GuideDef>\n\t<!-- 選択対象データViewerの設定  -->\n\t<ViewerDef>\n\t\t<ViewerInfo>\n\t\t\t<ColName>従業員コード</ColName>\n\t\t\t<ColKey>EmployeeCode</ColKey>\n\t\t\t<ColWith>80</ColWith>\n\t\t\t<ColDataType>string</ColDataType>\n\t\t</ViewerInfo>\n\t",
  "analysis": "## 1. 問題の詳細分析\n1. **ログインパスワードを平文で返却している**  \n   `<SelectedInfo type=\"string\">LoginPassword</SelectedInfo>` が設定されているため、ガイドを通じて取得された従業員情報にログインパスワードの平文が含まれます。  \n   - 平文パスワードは漏えい時の被害が極めて大きく、認証情報の不正取得・不正ログインにつながります。  \n   - アプリケーション内部で参照できた場合も、ログやメモリダンプから漏えいするリスクがあります。  \n   - セキュリティベストプラクティス（PCI DSS、NIST 等）では、平文パスワードの保存・配布は禁止されています。\n\n2. **「必要最小限の情報のみ取得する」という原則に反する**  \n   ログイン処理に用いるパスワードをガイド（検索・閲覧）用の XML に含める必要はなく、最小権限の原則にも反しています。\n\n## 2. 改善コード\n### Before（問題のあるコード）\n```xml\n<SelectedInfoDef>\n    ...\n    <SelectedInfo type=\"string\">LoginId</SelectedInfo>\n    <SelectedInfo type=\"string\">LoginPassword</SelectedInfo>\n    <SelectedInfo type=\"int\">SecurityLevel</SelectedInfo>\n    ...\n</SelectedInfoDef>\n```\n\n### After（改善後のコード）\n```xml\n<SelectedInfoDef>\n    ...\n    <SelectedInfo type=\"string\">LoginId</SelectedInfo>\n    <!-- パスワードは返却しない -->\n    <SelectedInfo type=\"int\">SecurityLevel</SelectedInfo>\n    ...\n</SelectedInfoDef>\n```\n\n> もし業務要件上 “認証情報” をどうしても参照する必要があるなら、平文ではなくハッシュ化済みフィールド（例: `LoginPasswordHash`）を別途返却し、それを表示・編集不可にする等の措置が必要です。ただし、原則は返却しない設計にしてください。\n\n## 3. 追加の改善提案\n- **認証情報の扱いを全面的に見直す**  \n  - アプリケーション内でパスワードを取り扱う際は、平文保存・送信を禁止し、ハッシュ化（ソルト付き）や鍵管理を徹底してください。\n  - ガイドや検索機能など閲覧を目的とした機能では、認証情報を取得させない設計に改め、最小権限の原則を徹底しましょう。\n\n- **監査・ログの見直し**  \n  - 既存ログに平文パスワードが残っていないか確認し、必要に応じてマスク処理・削除を行ってください。\n\n- **フィールド命名の表記揺れ修正（任意改善）**  \n  - `FormMassge` → `FormMessage`、`ColWith` → `ColWidth` など typo を正すことで、可読性と保守性が向上します。\n\n- **セキュリティ教育とコードレビューの強化**  \n  - 開発チーム全体でセキュリティ方針・ベストプラクティスを共有し、レビュープロセスで認証情報の扱いを常にチェックするようにしてください。",
  "model_used": "gpt-5-codex"
}