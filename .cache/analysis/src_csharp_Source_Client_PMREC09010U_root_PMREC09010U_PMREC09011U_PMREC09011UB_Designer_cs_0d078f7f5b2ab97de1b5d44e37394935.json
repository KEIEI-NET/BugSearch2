{
  "path": "src/csharp/Source/Client/PMREC09010U.root/PMREC09010U/PMREC09011U/PMREC09011UB.Designer.cs",
  "severity": 15,
  "problems": [],
  "original_code": "﻿namespace Broadleaf.Windows.Forms\n{\n    partial class PMREC09011UB\n    {\n        /// <summary> \n        /// 必要なデザイナ変数です。\n        /// </summary>\n        private System.ComponentModel.IContainer components = null;\n\n        /// <summary> \n        /// 使用中のリソースをすべてクリーンアップします。\n        /// </summary>\n        /// <param name=\"disposing\">マネージ リソースが破棄される場合 true、破棄されない場合は false です。</param>\n        protected override void Dispose(bool disposing)\n        {\n            if (disposing && (components != null))\n            {\n                components.Dispose();\n            }\n            base.Dispose(disposing);\n        }\n\n        #region コンポーネント デザイナで生成されたコード\n\n        /// <summary> \n        /// デザイナ サポートに必要なメソッドです。このメソッドの内容を \n        /// コード エディタで変更しないでください。\n        /// </summary>\n        private void InitializeComponent()\n        {\n            this.components = new System.ComponentModel.Container();\n            Infragistics.Win.Appearance appearance5 = new Infragistics.Win.Appearance();\n            I",
  "analysis": "## 1. 問題の詳細分析\n\n1. **同一キーの ControlContainerTool を複数生成している**  \n   `controlContainerTool1` と `controlContainerTool9` のように、同一キー (`\"ButtonTool_RowDelete1\"` 等) を持つ `ControlContainerTool` を複数生成しています。  \n   Infragistics の `UltraWinToolbars` ではツールキーは一意であることが前提であり、同じキーを Tools コレクションに複数回追加すると `ArgumentException` が発生し、画面の初期化そのものが失敗します。さらに、ツールごとの設定が意図せず上書きされるため、メンテナンス性と信頼性が低下する危険があります。\n\n2. **コントロール名や表示文字列をリテラルで埋め込んでいる**  \n   `ControlContainerTool.ControlName` やラベルキャプションなどがすべて文字列リテラルで記述されています。  \n   これにより、関連ボタンをリネームした際に実行時エラー（対象コントロールが見つからず機能しない）が発生しやすく、また表示文字列の国際化（多言語化）が困難になります。長期運用時の保守性を著しく落とす要因です。\n\n## 2. 改善コード\n\n### Before（問題のあるコード）\n```csharp\nInfragistics.Win.UltraWinToolbars.ControlContainerTool controlContainerTool1 = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(\"ButtonTool_RowDelete1\");\nInfragistics.Win.UltraWinToolbars.ControlContainerTool controlContainerTool2 = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(\"ButtonTool_AllRowDelete\");\nInfragistics.Win.UltraWinToolbars.ControlContainerTool controlContainerTool3 = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(\"ButtonTool_Revival\");\n...\nInfragistics.Win.UltraWinToolbars.ControlContainerTool controlContainerTool9 = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(\"ButtonTool_RowDelete1\");\nInfragistics.Win.UltraWinToolbars.ControlContainerTool controlContainerTool10 = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(\"ButtonTool_AllRowDelete\");\nInfragistics.Win.UltraWinToolbars.ControlContainerTool controlContainerTool11 = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(\"ButtonTool_Revival\");\n...\ncontrolContainerTool1.ControlName = \"btnRowDelete1\";\nlabelTool1.SharedProps.Caption = \"削除行復活\";\n```\n\n### After（改善後のコード）\n```csharp\n// 先頭付近にツールキーを集約\nprivate static class ToolbarToolKeys\n{\n    internal const string RowDelete      = \"ButtonTool_RowDelete1\";\n    internal const string AllRowDelete   = \"ButtonTool_AllRowDelete\";\n    internal const string Revival        = \"ButtonTool_Revival\";\n    internal const string GetPriceDate   = \"ButtonTool_GetPriceDate\";\n    internal const string RowInsert      = \"ControlContainerTool_RowInsert\";\n    internal const string RowCut         = \"ControlContainerTool_RowCut\";\n    internal const string RowCopy        = \"ControlContainerTool_RowCopy\";\n    internal const string RowPaste       = \"ControlContainerTool_RowPaste\";\n    internal const string RowDeleteAlt   = \"ControlContainerTool_RowDelete\";\n    internal const string BlankLabel     = \"LabelTool_Blank\";\n    internal const string StandardLabel  = \"LabelTool_Standard\";\n}\n\n// InitializeComponent 内\nvar toolRowDelete      = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(ToolbarToolKeys.RowDelete);\nvar toolAllRowDelete   = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(ToolbarToolKeys.AllRowDelete);\nvar toolRevival        = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(ToolbarToolKeys.Revival);\nvar toolGetPriceDate   = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(ToolbarToolKeys.GetPriceDate);\nvar toolRowInsert      = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(ToolbarToolKeys.RowInsert);\nvar toolRowCut         = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(ToolbarToolKeys.RowCut);\nvar toolRowCopy        = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(ToolbarToolKeys.RowCopy);\nvar toolRowPaste       = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(ToolbarToolKeys.RowPaste);\nvar toolRowDeleteAlt   = new Infragistics.Win.UltraWinToolbars.ControlContainerTool(ToolbarToolKeys.RowDeleteAlt);\nvar labelBlank         = new Infragistics.Win.UltraWinToolbars.LabelTool(ToolbarToolKeys.BlankLabel);\nvar labelStandard      = new Infragistics.Win.UltraWinToolbars.LabelTool(ToolbarToolKeys.StandardLabel);\n\n// 関連付けは nameof / リソース経由で行う\ntoolRowDelete.ControlName     = nameof(this.btnRowDelete1);\ntoolAllRowDelete.ControlName  = nameof(this.btnAllRowDelete);\ntoolRevival.ControlName       = nameof(this.btnRevival);\ntoolGetPriceDate.ControlName  = nameof(this.btnGetPriceDate);\ntoolRowInsert.ControlName     = nameof(this.btnRowInsert);\ntoolRowCut.ControlName        = nameof(this.btnRowCut);\ntoolRowCopy.ControlName       = nameof(this.btnRowCopy);\ntoolRowPaste.ControlName      = nameof(this.btnRowPaste);\ntoolRowDeleteAlt.ControlName  = nameof(this.btnRowDelete);\n\n// 文字列はリソース化（Properties/Resources.resx に定義）\nlabelStandard.SharedProps.Caption = Properties.Resources.ToolbarCaption_RestoreDeletedRows;\nlabelBlank.SharedProps.Caption    = Properties.Resources.ToolbarCaption_Blank;\n\n// Tools コレクションへユニークに追加\nthis.ultraToolbarsManager1.Tools.AddRange(new Infragistics.Win.UltraWinToolbars.ToolBase[]\n{\n    toolRowDelete,\n    toolAllRowDelete,\n    toolRevival,\n    toolGetPriceDate,\n    toolRowInsert,\n    toolRowCut,\n    toolRowCopy,\n    toolRowPaste,\n    toolRowDeleteAlt,\n    labelBlank,\n    labelStandard\n});\n\n// 各ツールバーへの配置時は既存ツールを参照\nultraToolbar1.NonInheritedTools.AddRange(new Infragistics.Win.UltraWinToolbars.ToolBase[]\n{\n    this.ultraToolbarsManager1.Tools[ToolbarToolKeys.RowDelete],\n    this.ultraToolbarsManager1.Tools[ToolbarToolKeys.AllRowDelete],\n    this.ultraToolbarsManager1.Tools[ToolbarToolKeys.Revival],\n    this.ultraToolbarsManager1.Tools[ToolbarToolKeys.StandardLabel]\n});\n\nultraToolbar2.NonInheritedTools.AddRange(new Infragistics.Win.UltraWinToolbars.ToolBase[]\n{\n    this.ultraToolbarsManager1.Tools[ToolbarToolKeys.RowInsert],\n    this.ultraToolbarsManager1.Tools[ToolbarToolKeys.RowCut],\n    this.ultraToolbarsManager1.Tools[ToolbarToolKeys.RowCopy],\n    this.ultraToolbarsManager1.Tools[ToolbarToolKeys.RowPaste],\n    this.ultraToolbarsManager1.Tools[ToolbarToolKeys.RowDeleteAlt],\n    this.ultraToolbarsManager1.Tools[ToolbarToolKeys.BlankLabel],\n    this.ultraToolbarsManager1.Tools[ToolbarToolKeys.GetPriceDate]\n});\n```\n\n> ※ `Properties.Resources.ToolbarCaption_***` は新たに resx に追加してください。  \n> ※ `btnRowDelete1` などのボタン名は実際のコントロール名に合わせてください。\n\n## 3. 追加の改善提案\n\n- **Designer ファイルを直接修正しない運用**  \n  自動生成コードは再生成時に上書きされます。上記のような共通キー定義やリソース参照は、部分クラス（`PMREC09011UB.cs`）側にヘルパー関数を用意し、`OnLoad` 等で再設定する運用の方が安全です。\n\n- **ボタンのイベント購読解除を明示**  \n  `Dispose(bool disposing)` でイベント購読を解除し、長寿命の静的イベントにぶら下がらないようにすることでメモリリークを防止できます。\n\n- **ユニットテスト/UITest の追加**  \n  ツールバー構築処理をテストし、定義済みキーの重複やリソースの欠落を検知できる簡易検証（`Tools.ContainsKey` など）を入れると、デザイナー変更時の不具合を早期に捕捉できます。",
  "model_used": "gpt-5-codex"
}