//****************************************************************************//
// システム         : .NSシリーズ
// プログラム名称   : 得意先電子元帳
// プログラム概要   : 得意先電子元帳 フォームクラス
//----------------------------------------------------------------------------//
//                (c)Copyright  2008 Broadleaf Co.,Ltd.
//============================================================================//
// 履歴
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 徳永 俊詞
// 作 成 日  2008/09/02  修正内容 : 新規作成
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 鈴木 正臣
// 修 正 日  2008/11/10  修正内容 : 全体的に修正（MANTIS対応＋単体テスト）
//                                  赤伝発行処理の実装
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 忍 幸史
// 作 成 日  2009/02/02  修正内容 : 排他制御処理追加
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 照田 貴志
// 作 成 日  2009/02/10  修正内容 : 不具合対応[10726][10647][10679][10668][10651][11134][11383][11432][11438]
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 照田 貴志
// 作 成 日  2009/02/14  修正内容 : 不具合対応[11381][11391][11494][11550][11552]
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 忍 幸史
// 作 成 日  2009/02/16  修正内容 : 不具合対応[11594]
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 照田 貴志
// 作 成 日  2009/02/17  修正内容 : 不具合対応[11609]
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 上野 俊治
// 作 成 日  2009/02/19  修正内容 : 不具合対応[11670]
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 上野 俊治
// 作 成 日  2009/02/20  修正内容 : 不具合対応[11670]
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 鈴木 正臣
// 作 成 日  2009/02/23  修正内容 : 不具合対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 忍 幸史
// 作 成 日  2009/02/25  修正内容 : 不具合対応[7882]
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 上野 俊治
// 作 成 日  2009/05/11  修正内容 : 不具合対応[13264]
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 30413 犬飼
// 作 成 日  2009/05/12  修正内容 : 不具合対応[13253]
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 30413 犬飼
// 作 成 日  2009/05/18  修正内容 : 不具合対応[13312]
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 30413 犬飼
// 作 成 日  2009/05/27  修正内容 : 不具合対応[13321]
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木 正臣
// 作 成 日  2009/08/10  修正内容 : 見出貼付機能の追加（売伝で貼付可能）
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木 正臣
// 作 成 日  2009/08/24  修正内容 : 過去分表示対応（売上履歴データからの抽出）
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木 正臣
// 作 成 日  2009/10/07  修正内容 : 不具合修正・要望対応
//                               : ①抽出の高速化
//                               : ②抽出中断機能の追加
//                               : ③得意先ガイドの変更（簡易版→詳細版）
//                               : ④明細グリッドの左右アローキー（←、→）で
//                               :   左端から前行右端／右端から次行左端へ移動しないよう変更
//                               : ⑤伝票区分のデフォルト値を「売上／返品」に変更
//                               : ⑥20,000件オーバー時に20,000件分を表示可能に変更
//                               : ⑦20,000件オーバー時のメッセージを変更
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 張莉莉
// 作 成 日  2009/09/07  修正内容 : PM.NS-2-A 車輛管理
//                                  赤伝発行時の車輌情報登録内容に項目を追加
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 張莉莉
// 作 成 日  2009/10/15  修正内容 : 走行距離の表示形式をカンマ編集へ変更
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 張莉莉
// 作 成 日  2009/10/22  修正内容 : Mentis：0014427 仕様変更
//                                : 抽出条件の管理番号を文字列入力可能に変更、また、管理番号検索条件の追加する。
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木 正臣
// 作 成 日  2009/10/19  修正内容 : ①伝票発行時刻の追加
//                               : ②履歴分の赤伝発行を可能に変更（履歴の場合は受注残数ﾁｪｯｸしない）
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木 正臣
// 作 成 日  2009/10/28  修正内容 : Redmine#987の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22008 長内 数馬
// 作 成 日  2009/11/18  修正内容 : 赤伝選択チェック時、品番が空白 ＯＲ メーカーが０の場合に
//                                  品番検索をしないように修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木 正臣
// 作 成 日  2009/11/24  修正内容 : Mantis 0014180
//                                  伝票表示／明細表示グリッドで列を並べ替えた後、
//                                  次回起動時に正しい並び順にならない不具合を修正。
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 呉元嘯
// 作 成 日  2009/11/25  修正内容 : PM.NS保守依頼③ 不具合対応
//                                  ①赤伝発行時に返品理由コードが更新されない
//                                  ②赤伝を掛売上（現金売上）にして発行すると、返品可能数が増える現象を修正
//                                  ③赤伝発行時の売上金額の不正
//                                  ④売上全体設定の取得不具合
//                                  ⑤返品時在庫登録時の不具合
//                                  ⑥再発行時の行選択を明細から行えるように修正
//                                  ⑦選択してる行を明細タブと伝票タブでリンクするように修正
//                                  ⑧赤伝発行時の伝票印刷確認ダイアログを出さずに印刷するように修正
//                                  ⑨赤伝発行がキャンセルされた場合は、データの再抽出を行わないように修正
//                                  ⑩伝票再発行時の伝票印刷確認ダイアログを出さずに印刷するように修正
//                                  ⑪伝票再発行後は再発行のチェックボックスを外すように修正
//                                  ⑫返品伝票金額の表示不具合対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 呉元嘯
// 作 成 日  2009/12/15  修正内容 : PM.NS保守依頼③ 不具合対応
//                                  Redmine#1890、#1911、#1919対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 呉元嘯
// 作 成 日  2009/12/28  修正内容 : PM.NS保守依頼④ 不具合対応
//                                  ①明細表示行数を拡大させる件の修正
//                                  ②明細のタイトル欄が見づらい件の修正
//                                  ③返品伝票をテキスト出力した場合、返品伝票の金額プラスで出力されている件の修正
//                                  ④赤伝発行や、伝票再発行をファンクションボタンで操作出来ない件の修正
//                                  ⑤品番の抽出条件で、ハイフン無しで入力された場合にハイフン付も対象とするように修正
//                                  ⑥抽出条件項目のデフォルトの入力モードを変更する件の修正
//                                  ⑦単価、原価に変更があった明細を赤伝発行タブに表示する際、売上伝票入力の明細部同様にセルの背景色を変更する
//                                  ⑧商品マスタ未登録品を赤伝発行した場合、無条件で商品マスタに追加される件の修正
//                                  ⑨品番未入力の明細を赤伝発行する場合の倉庫コードの入力制御の変更
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 呉元嘯
// 作 成 日  2010/01/12  修正内容 : PM.NS保守依頼④ 不具合対応
//                                  年のみ入力した年式の伝票を売上伝票入力で正常に見出貼付できるように変更する
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 呉元嘯
// 作 成 日  2010/01/14  修正内容 : Redmine#2421、#2423の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 呉元嘯
// 作 成 日  2010/01/22  修正内容 : Redmine#2566、#2567の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 呉元嘯
// 作 成 日  2010/01/25  修正内容 : Redmine#2593の対応
//----------------------------------------------------------------------------//
// 管理番号  10600008-00 作成担当 : 呉元嘯
// 作 成 日  2010/01/29  修正内容 : 4次改良 不具合対応
//                                  ①返品不可設定機能の追加
//                                  ②赤伝発行後に、発行した赤伝にカーソル移動するように修正
//                                  ③赤伝発行時の伝票備考に、元黒伝票の備考を引用可能にするように修正
//                                  ④テキスト出力設定画面のファイル名の必須入力チェックを削除するように修正
//                                  ⑤赤伝発行画面に、備考コードを入力出来るように修正
//                                  ⑥テキスト出力、Excel出力機能をオプション化するように修正
//                                  ⑦列サイズの自動調整のチェックボックスに関して、画面を閉じた場合の記憶対象とするように修正
//                                  ⑧Excel出力時の排他処理の不正を修正
//                                  ⑨返品時在庫登録「1:しない」で赤伝発行した場合に在庫があれば更新するように修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 呉元嘯
// 作 成 日  2010/02/04  修正内容 : Redmine#2805の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 呉元嘯
// 作 成 日  2010/02/20  修正内容 : Redmine#2983の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 21024　佐々木 健
// 作 成 日  2010/02/22  修正内容 : テキスト出力、Excel出力、赤伝発行のセキュリティ対応(MANTIS[0015012])
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 30517　夏野 駿希
// 作 成 日  2010/03/25  修正内容 : Mantis.15198　赤伝発行画面の伝票区分切替で返品理由のコード入力テキストボックスが消えない件の修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018  鈴木 正臣
// 作 成 日  2010/04/02  修正内容 : MANTIS:15241の対応（見出貼付修正。車種名カナの対応。）
//                                  ①CustPtrSalesDetailDataSet.xsdに項目"ModelHalfName"追加。
//                                  ②車種名カナ(ModelHalfName)のカラムは非表示に設定する。
//                                  ③見出貼付用データに車種名カナ(ModelHalfName)をセットする。
//                                  ④CustPtrSalesDetailDataSet.xsdでFirstEntryDateの型がStringになっていない為修正。(保守組込漏れ)
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 30517　夏野 駿希
// 作 成 日  2010/04/07  修正内容 : Mantis.15259　赤伝発行時にカーソルが発行明細へ移動しない件の修正
//                                  Mantis.15264　F5の赤伝発行をキャンセルすると車輌備考が消える件の修正
//                                  Mantis.15265　赤伝発行タブの備考欄に備考１しかなかった場合、エンターで赤伝発行がかからない件の修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 30517　夏野 駿希
// 作 成 日  2010/04/15  修正内容 : Mantis.15309　テキスト出力対応
//                                : Mantis.15323　不具合対応
//                                                ①伝票・明細で検索後クリアボタンを押すと押せるボタンが存在する
//                                                ②請求で出力時に、画面の前回残が、「前々々回残＋前々回残＋前回残」の合計になっていない
//                                                ③残高一覧表示で、自動調整にチェックを付けていても、再検索など行った時に、自動調整されない
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : gaoyh
// 作 成 日  2010/04/27  修正内容 : 1007D　受注マスタ（車両）自由検索型式固定番号配列の追加対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : gaoyh
// 作 成 日  2010/05/04  修正内容 : 1007E　セキュリティ管理「再発行」の追加（６次改良）
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 呉元嘯
// 作 成 日  2010/06/08  修正内容 : 障害・改良対応７月リリース分対応
//                                  ①COL幅保存処理の不具合対応
//                                  ②得意先コードをガイドから選択した場合の不具合対応
//                                  ③ツールバーの表示・非表示設定を保持するように変更
//                                  ④テキスト出力先が保存されない不具合の対応
//                                  ⑤売上履歴データから伝票再発行を可能へ変更
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 呉元嘯
// 作 成 日  2010/06/18  修正内容 : 備考コードの取得変更対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木正臣
// 作 成 日  2010/07/20  修正内容 : 成果物統合２
//                               :   ①赤伝の備考にセットする日付を「元黒の売上日」に修正。
//                               :   ②残高一覧タブで抽出すると「赤伝」ボタンが無効になる障害を修正。
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木正臣
// 作 成 日  2010/07/21  修正内容 : 成果物統合２
//                               :   ①残高合計の抽出でタイムアウトエラー等発生した場合にＰＧ強制終了せずメッセージ表示するよう修正。
//                               :   ②得意先請求金額マスタにレコードが無い場合、画面上の売上日(開始)以降を抽出するよう変更。
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木正臣
// 作 成 日  2010/07/27  修正内容 : 成果物統合２
//                               :   ・明細グリッドの列幅自動調整の不具合修正。
//                               : （※2010/01/29になぜか削除されているので、障害改良対応７月で修正依頼したが、2010/06/08の対応が不正。）
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 呉元嘯
// 作 成 日  2010/08/05  修正内容 : 障害・改良対応8月リリース分対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木正臣
// 作 成 日  2010/08/18  修正内容 : 締次ロック対応。ロックタイムアウトエラーのメッセージ変更。
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 呉元嘯
// 作 成 日  2010/08/31  修正内容 : Redmine#14006対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : caowj
// 作 成 日  2010/09/01  修正内容 : Redmine#14073対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : tianjw
// 作 成 日  2010/09/16  修正内容 : Redmine#14543対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : liyp
// 作 成 日  2010/09/29  修正内容 : Redmine#14876対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木正臣
// 作 成 日  2010/11/02  修正内容 : Adobe Reader9以降だと終了時エラー発生する件の対応。(WebBrowser解放処理の修正)
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : liyp
// 作 成 日  2010/12/20  修正内容 : 赤伝発行入力の入力可否制御変更（MANTIS: 16394）
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : yangmj
// 作 成 日  2010/12/20  修正内容 : 障害・改良対応12月リリース分対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : yangmj
// 作 成 日  2011/01/21  修正内容 : readmine#18652の修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 曹文傑
// 作 成 日  2011/01/27  修正内容 : readmine#18652の修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 曹文傑
// 作 成 日  2011/01/31  修正内容 : readmine#18652の修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : liyp
// 作 成 日  2011/02/09  修正内容 : 障害報告 #18842 赤伝発行入力の入力可否制御について
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : yangmj
// 作 成 日  2011/02/16  修正内容 : 障害報告 #18992、#18993、#18996、#19000の修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : yangmj
// 作 成 日  2011/02/17  修正内容 : 障害報告 #19055の修正
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 周雨
// 作 成 日  2011/07/12  修正内容 : 連番 796
//                                  検索する文字列に「a,e,i,l,m,n,r,s,t,y」いずれかの文字で全列検索すると全行が対象になる。
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 王飛３
// 作 成 日  2011/07/13  修正内容 : 連番 795
//                                  標準価格で並び替えるとおかしい（ｶﾝﾏを含めた文字列として処理されているよう）
//                                  ⇒画面コピー
//                                  ⇒列フィルタのサンプルの表示順も同じ
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 朱宝軍
// 作 成 日  2011/07/18  修正内容 : 回答区分追加対応
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 周雨
// 作 成 日  2011/08/04  修正内容 : redmine #23387 連番No.796
//                                  検索する文字列に「a,e,i,l,m,n,r,s,t,y」いずれかの文字で全列検索すると全行が対象になる。
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : duzg
// 作 成 日  2011/08/06  修正内容 : 赤伝発行時、データ送信対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : douch
// 作 成 日  2011/08/08  修正内容 : 障害報告 #23459: SCMオプションコードを利用
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : zhubj
// 作 成 日  2011/08/09  修正内容 : 障害報告 #23483: プロジェクトNo1 PCC for NS（SCM）改良 プロジェクト課題管理表_No10
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : zhubj
// 作 成 日  2011/08/11  修正内容 : 障害報告 #23483: プロジェクトNo1 PCC for NS（SCM）改良 プロジェクト課題管理表_No10
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : zhubj
// 作 成 日  2011/08/11  修正内容 : redmine  #23574: 自動回答コンボボックスに「全て」を追加対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : zhubj
// 作 成 日  2011/08/16  修正内容 : redmine  #23651: 送信ダイアログの「送信する」チェックボックス状態対応
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 許雁波
// 作 成 日  2011/08/18  修正内容 : 連番729 明細複写処理を新規する。
//----------------------------------------------------------------------------//
// 管理番号  　　　　　　作成担当 : 李占川
// 作 成 日  2011/08/31  修正内容 : Redmine#24110 備考のチェック処理を追加する。
//----------------------------------------------------------------------------//
// 管理番号  　　　　　　作成担当 : 李占川
// 作 成 日  2011/09/08  修正内容 : Redmine#24110 桁数を設定しない場合、入力できないの対応
//----------------------------------------------------------------------------//
// 管理番号  　　　　　　作成担当 : 田建委
// 作 成 日  2011/09/14  修正内容 : redmine#24670 明細表示のタブを選択している際の複写後のメッセージの変更
//----------------------------------------------------------------------------//
// 管理番号  　　　　　　作成担当 : 周正雨
// 作 成 日  2011/09/17  修正内容 : redmine#25225 赤伝発行時はリモ伝の発行はしない
//----------------------------------------------------------------------------//
// 管理番号  　　　　　　作成担当 : wangqx
// 作 成 日  2011/09/28  修正内容 : redmine#25595 赤伝発行時はリモ伝の発行処理を追加する
//----------------------------------------------------------------------------//
// 管理番号  　　　　　　作成担当 : 凌小青
// 作 成 日  2011/10/26  修正内容 : Redmine#26256の対応
//----------------------------------------------------------------------------//
// 管理番号  　　　　　　作成担当 : yangmj
// 作 成 日  2011/10/27  修正内容 : redmine#26291 原価印字の対応
//----------------------------------------------------------------------------//
// 管理番号  　　　　　　作成担当 : 李小路
// 作 成 日  2011/11/23  修正内容 : redmine#7861 得意先電子元帳／粗利率の追加他
//----------------------------------------------------------------------------//
// 管理番号  　　　　　　作成担当 : 楊洋
// 作 成 日  2011/11/28  修正内容 : redmine#8172 得意先電子元帳/(BLﾊﾟｰﾂｵｰﾀﾞｰｼｽﾃﾑ)問合せ番号の追加
//----------------------------------------------------------------------------//
// 管理番号  　　　　　　作成担当 : 朱 猛
// 作 成 日  2011/11/29  修正内容 : Redmine#8382 得意先電子元帳の各項目間隔の調整
//----------------------------------------------------------------------------//
// 管理番号  　　　　　　作成担当 : 凌小青
// 作 成 日  2011/12/06  修正内容 : Redmine#8080の対応
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : liusy
// 作 成 日  2011/12/15  修正内容 : 2012/01/25配信分 Redmine#26660 得意先電子元帳/画面Gridのクリアの修正
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : gezh
// 修 正 日  2011/12/15  修正内容 : 2012/01/25配信分 Redmine#26667 Enterキーのフォーカス遷移の修正
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : 李小路
// 修 正 日  2011/12/22  修正内容 : 2012/01/25配信分、Redmine#27459 
//                                  得意先電子元帳/赤伝の発行
//----------------------------------------------------------------------------//
// 管理番号  　　　　　　作成担当 : wangf
// 作 成 日  2011/12/30  修正内容 : Redmine#27660の対応
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : 鄧潘ハ
// 作 成 日  2012/03/02  修正内容 : 2012/03/28配信分、Redmine#26667 
//                                  細部から↑キーでヘッダ部へカーソルが移動しなくなったについての対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : gezh
// 修 正 日  2012/03/29  修正内容 : 2012/05/24配信分 Redmine#29149 得意先電子元帳　赤伝返品手数料入力時の販売区分についての対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : gezh
// 修 正 日  2012/04/01  修正内容 : 2012/05/24配信分 Redmine#29250 得意先電子元帳　得意先電子元帳　データ更新日時の追加についての対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 30744 湯上 千加子
// 修 正 日  2012/06/01  修正内容 : 得意先電子元帳　残高一覧表示の抽出拠点追加
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 20073 西 毅
// 作 成 日  2012/06/08  修正内容 : 起動時の速度改善
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 30744 湯上 千加子
// 修 正 日  2012/06/20  修正内容 : システムテスト障害№110　残高一覧表示後、他のタブへ移動した時の拠点名称の表示について対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 20073 西 毅
// 作 成 日  2012/06/22  修正内容 : 2012/06/08 修正分を今回配信分に含めない為、
//                                  一時的に削除
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田 靖之
// 作 成 日  2012/06/26  修正内容 : №880 年式を入力した伝票の見出し貼り付けを行うと、年式が貼りつかない件の対応
// 　　　　　　　　　　　　　　　　　　　 （「全体初期表示設定」の「元号表示区分（年式）」が”和暦”に設定されている場合に発生）
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : liusy
// 作 成 日  2012/08/08  修正内容 : Redmine#31530 得意先電子元帳 得意先注番の項目名修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : FSI菅原　要
// 作 成 日  2012/08/22  修正内容 : 得意先電子元帳 赤伝発行入力画面　仕入日の追加
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/09/10  修正内容 : 仕入伝票番号に全角が入力できるように修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 董桂鈺
// 作 成 日  2012/10/18  修正内容 : 2012/11/14配信分 Redmine#32869 得意先電子元帳 印刷するとソート順の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : yangmj
// 作 成 日  2012/11/15  修正内容 : 2013/01/16配信分 Redmine#33269 請求先情報の印刷の対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 30744 湯上 千加子
// 作 成 日  2012/10/17  修正内容 : SCM障害№10414対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本　利明
// 作 成 日  2012/12/19  修正内容 : 山形部品オプション対応（赤伝発行時の制御）
//                                  ①サーバーのシステム日付で売上日をチェック
//                                  ②サーバーのシステム日付を初期表示
//                                  ③仕入伝票番号を非表示
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : wangf
// 修 正 日  2013/01/10  修正内容 : Redmine#31740の対応
//                                : 仕入先電子元帳のウインドウからの得意先電子元帳を起動するとグローバル変数初期化。
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : wangf
// 修 正 日  2013/01/30  修正内容 : Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応
//                                : 残高集計のタイミングをずらす
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : zhaimm
// 修 正 日  2013/02/06  修正内容 : 10801804-00 2013/03/13配信分の緊急対応
//                                : Redmine#34572の対応 得意先コードを入れても拠点コードにリンクしていない
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : wangf
// 修 正 日  2013/02/16  修正内容 : Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応
//                                : ①残高集計をファンクションキー「残高照会(F2)」と連動させる
//                                : ②検索(F10)後に基本条件を変更時、メッセージを表示時に残高をクリアしないように変更
//                                : ③検索(F10)後に条件変更が無い場合は、残高集計を実行しても再集計をしないように変更
//                                : ④「残高集計」ボタンへのフォーカス遷移変更
//----------------------------------------------------------------------------//
// 管理番号  10806793-00 作成担当 : FSI菅原　要
// 作 成 日  2013/01/15  修正内容 : 仕入返品予定データ作成対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本　利明
// 作 成 日  2013/02/22  修正内容 : 山形部品オプションの取得位置を修正
//----------------------------------------------------------------------------//
// 管理番号  10806793-00 作成担当 : FSI斎藤 和宏
// 作 成 日  2013/02/27  修正内容 : 仕入返品予定データ作成時に元伝票削除されていた場合のメッセージ表示対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本　利明
// 作 成 日  2013/03/07  修正内容 : ↓キー押下での検索後に明細にフォーカス移動する
//----------------------------------------------------------------------------//
// 管理番号  10800003-00 作成担当 : 孫東響
// 修 正 日  2013/02/28  修正内容 : 2013/05/15配信分
//                                : Redmine#34811 ①条件部分の備考２と備考３のガイド修正
//                                  ②赤伝発行入力の備考１～３、コード手入力して、論理削除した備考も表示されてしまう
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : caohh
// 作 成 日  2013/03/12  修正内容 : 2013/05/15配信分
//                                : Redmine#35017 起動後、抽出を行わずにグリッドをクリックし→キーを押すとエラー発生された
//----------------------------------------------------------------------------//
// 管理番号  10800003-00 作成担当 : zhaimm
// 修 正 日  2013/03/18  修正内容 : 2013/05/15配信分 Redmine#34807得意先電子元帳の対応
//                                : ①検索時：0詰めデータと0詰めなしデータも抽出対象とする
//                                  ②赤伝発行時：売上伝票入力の仕様と同様、0詰めを行う
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 30744 湯上 千加子
// 作 成 日  2013/03/13  修正内容 : テキスト出力改良 与信差異額の追加
//----------------------------------------------------------------------------//
// 管理番号  10800003-00 作成担当 : shijx
// 作 成 日  2013/03/29  修正内容 : 10800003-00　2013/05/15配信分 Redmine#35205得意先電子元帳の対応
//                                : 出力したExcelファイルに項目名称はテストケースと違い
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本　利明
// 作 成 日  2013/04/19  修正内容 : 赤伝・再発行時の印刷確認ダイアログ表示制御を追加
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本　利明
// 作 成 日  2013/04/26  修正内容 : 赤伝発行時に在庫品の原価修正不可
//----------------------------------------------------------------------------//
// 管理番号  10900269-00 作成担当 : FSI厚川 宏
// 修 正 日  2013/03/25  修正内容 : SPK車台番号文字列対応に伴う車台番号(VINコード)による抽出を可能にする
//----------------------------------------------------------------------------//
// 管理番号  10901273-00 作成担当 : liusy
// 修 正 日  2013/05/20  修正内容 : 藤木自動車 得意先電子元帳 テキスト出力時の和暦対応
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 脇田 靖之
// 修 正 日  2013/06/25  修正内容 : 赤伝発行時のリモート伝票発行の不具合対応
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 脇田 靖之
// 修 正 日  2013/08/01  修正内容 : 仕掛一覧№2050対応
//                                  複写(F11)の年式を和暦不具合対応と8桁フォーマット対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : liusy
// 修 正 日  2013/09/18  修正内容 : #40275「得意先電子元帳の赤伝発行で伝票番号が飛び番になる」対応
//                                  直接にF5で、赤伝発行時にエラーの修正                   
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : gezh
// 修 正 日  2013/10/10  修正内容 : Redmine#40654「設定画面「赤伝発行」が「任意」のとき、画面の起動時にエラーが発生」対応                   
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 吉岡
// 修 正 日  2014/01/30  修正内容 : Redmine#41771　異なる税率の行を選択した状態で赤伝発行押下した場合にメッセージを出力
//----------------------------------------------------------------------------//
// 管理番号  10970602-00 作成担当 : 鄧潘ハン
// 作 成 日  K2013/01/23 修正内容 : 特販区分を追加することの登戸個別対応
//----------------------------------------------------------------------------//
// 管理番号  10970602-00 作成担当 : 鄧潘ハン
// 作 成 日  K2014/02/17 修正内容 : 仕入電子元帳から得意先電子元帳を起動出来るが、その場合、登戸オプションが無効になるようで「特販区分」とは表示されない
//----------------------------------------------------------------------------//
// 管理番号  10970681-00 作成担当：陳健
// 修正日    K2014/02/06 修正内容：前橋京和商会個別 得意先電子元帳改良対応
// ---------------------------------------------------------------------------//
// 管理番号  10970681-00 作成担当：陳健
// 修正日    2014/02/21  修正内容：Redmine#42093 OperationCode:5->90
//----------------------------------------------------------------------------//
// 管理番号  11000959-00 作成担当 : 林超凡
// 作 成 日  K2014/05/08 修正内容 : 得意先電子元帳のCSV出力項目に車種メーカーコードを追加する。東亜商会オプションが有効の場合のみ。
//----------------------------------------------------------------------------//
// 管理番号  11000959-00 作成担当 : 林超凡
// 作 成 日  K2014/05/27 修正内容 : Redmine#42597 出力位置を変更できるようにする。東亜商会個別対応
//----------------------------------------------------------------------------//
// 管理番号  11000959-00 作成担当 : 林超凡
// 作 成 日  K2014/05/28 修正内容 : Redmine#42764 受入テスト障害対応。東亜商会個別対応
//----------------------------------------------------------------------------//
// 管理番号  11070091-00 作成担当 : zhujw
// 作 成 日  2014/06/11  修正内容 : RedMine#42650 Windows8.1動作検証結果_得意先電子元帳から起動した他機能が前面表示される 修正
//----------------------------------------------------------------------------//
// 管理番号  11070091-00 作成担当 : 宮本 利明
// 作 成 日  2014/08/08  修正内容 : Windows8.1対応での障害対応
//                                  検索後に拠点コードがゼロカットされる障害を修正
//----------------------------------------------------------------------------//
// 管理番号  11070148-00 作成担当 : 鄧潘ハン
// 作 成 日  2014/08/12  修正内容 : SCM障害No.18の対応   
//----------------------------------------------------------------------------//
// 管理番号  11002291-00 作成担当 : wupf
// 修 正 日  2014/08/13  修正内容 : Redmine＃43184 倉庫コードの障害解除
//----------------------------------------------------------------------------//
// 管理番号  11002291-00 作成担当 : wupf
// 修 正 日  2014/08/19  修正内容 : Redmine＃43184 倉庫コードの障害解除
//----------------------------------------------------------------------------//
// 管理番号  11070148-00 作成担当 : 鄧潘ハン
// 作 成 日  2014/08/26  修正内容 : SCM仕掛一覧№10650  RedMine#43145の対応 
//    ①売仕入同時の仕入伝票を呼び出せない　…　№10650対応
//    ↓これに伴い、以下の既存の障害も修正した
//    ②赤伝発行時に仕入情報を入力しても仕入データが作成されない場合がある。
//    ③SCM回答送信していない伝票に対し、赤伝発行時にSCM回答送信を行うとエラーになる。
//----------------------------------------------------------------------------//
//----------------------------------------------------------------------------//
// 管理番号  11070263-00 作成担当 : 陳永康
// 作 成 日  2014/12/28  修正内容 : 変換後品番の追加対応
//----------------------------------------------------------------------------//
//----------------------------------------------------------------------------//
// 管理番号  11070263-00 作成担当 : 陳永康
// 作 成 日  2015/03/16  修正内容 : 変換後品番 初期値の非表示対応
//----------------------------------------------------------------------------//
// 管理番号  11070149-00 作成担当 : chenyk
// 作 成 日  2014/10/29  修正内容 : Redmine#43863 ESCにて画面キャンセルした後Enter、及び矢印キーにて伝票検索の対応。
//----------------------------------------------------------------------------//
// 管理番号  11070149-00 作成担当 : chenyk
// 作 成 日  2015/01/28  修正内容 : Redmine#43863 ESCにて画面キャンセルした後Enter、及び矢印キーにて伝票検索の対応。
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 王亜楠
// 修 正 日  2015/02/05  修正内容 : テキスト出力件数制限なしモードの追加
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 王亜楠
// 修 正 日  2015/02/25  修正内容 : Redmine#44701
//                                     ①№1.テキスト出力件数制限なし位置の調整
//                                     ②№3.テキスト出力タイトル出力されない対応
//                                     ③№4.テキスト出力条件範囲分割の障害（1.3～1.14：12日の対応）
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 王亜楠
// 修 正 日  2015/03/03  修正内容 : Redmine#44701
//                                  開始売上日・終了売上日が入力されない場合、
//                                  テキスト出力データないなら、メッセージを表示する対応
//----------------------------------------------------------------------------//
// 管理番号  11100842-00 作成担当 : 陳亮
// 修 正 日  K2015/04/27  修正内容 : モモセ部品㈱の個別開発依頼
//                                  得意先電子元帳第二売価を追加する。モモセ部品㈱オプションが有効の場合のみ。
//----------------------------------------------------------------------------//
//----------------------------------------------------------------------------//
// 管理番号  11101427-00 作成担当 : 鮑晶
// 作 成 日  K2015/06/16 修正内容 : メイゴ㈱の個別開発依頼
//                                : 得意先電子元帳「地区」と「分析コード」を追加する。
//                                : メイゴ㈱オプションが有効の場合のみ
//----------------------------------------------------------------------------//
// 管理番号  11100068-00 作成担当 : 脇田 靖之
// 作 成 日  2015/08/21  修正内容 : 東海自動車工業 品証Redmine№4512対応
//                                  入金伝票入力にて売上引当した売上伝票を得意先電子元帳で赤伝した場合、
//                                  入金伝票入力の売上引当情報が不正に表示される
//----------------------------------------------------------------------------//
// 管理番号  11170170-00    作成担当 : 田建委
// 修 正 日  2015/09/17     修正内容 : Redmine#47006 得意先電子元帳の障害対応
//                                     テキスト出力の時、返品金額などをマイナスで出力する対応
//----------------------------------------------------------------------------//
// 管理番号  11270007-00    作成担当 : 脇田 靖之
// 修 正 日  2016/01/21     修正内容 : 仕掛一覧№2808 貸出受注対応
//                                     ①検索条件に「出荷状況」項目を追加
//                                     ②明細表示に計上数、未計上数項目を追加
//----------------------------------------------------------------------------//
// 管理番号  11170206-00    作成担当 : 河原林　一生
// 修 正 日  2016/02/04     修正内容 : 仕入先電子元帳から起動したときに検索でエラーになる件の対応
//----------------------------------------------------------------------------//
// 管理番号  11200090-00 作成担当 : 時シン
// 修 正 日  K2016/02/23 修正内容 : ㈱イケモト 抽出条件にて受注作成区分を追加する対応
//----------------------------------------------------------------------------//
// 管理番号  11270007-00    作成担当 : 脇田 靖之
// 修 正 日  2016/02/26     修正内容 : 仕掛一覧№2808 貸出受注対応
//                                     システムテスト障害一覧_先行配信分№254
//                                     基本条件選択の「出荷状況」チェックボックスのチェック有時に、
//                                     抽出条件選択の「出荷状況」がチェック有りにならない障害対応
//----------------------------------------------------------------------------//
// 管理番号  11200090-00 作成担当 : 時シン
// 修 正 日  K2016/03/07 修正内容 : ㈱イケモト 受注作成区分が「2:通常受注区分」or「3:伝発UOE区分」の場合、受注データが出力できる対応
//----------------------------------------------------------------------------//
// 管理番号  11270116-00  作成担当 : 譚洪
// 作 成 日  K2017/01/05  修正内容 : 得意先電子元帳パッケージ出荷用ソースのマージ
//----------------------------------------------------------------------------//
// 管理番号  11370002-00    作成担当 : 脇田 靖之
// 修 正 日  2017/02/14     修正内容 : 配信後障害、自動入金伝票赤伝不可になる障害対応「2015/08/21」対応　コメントアウト
//----------------------------------------------------------------------------//
// 管理番号  11470152-00  作成担当 : 譚洪
// 作 成 日  2018/09/04   修正内容 : 履歴自動表示機能追加対応
//----------------------------------------------------------------------------//
// 管理番号  11470076-00 作成担当 : 譚洪
// 作 成 日  2019/01/08  修正内容 : 新元号の対応
//----------------------------------------------------------------------------//
// 管理番号  11570163-00    作成担当 : 陳艶丹
// 修 正 日  2019/08/19     修正内容 : PMKOBETSU-1379 テキスト出力操作ログおよび出力時アラートメッセージ追加対応
//----------------------------------------------------------------------------//
// 管理番号  11570208-00    作成担当 : 時シン
// 修 正 日  2020/03/11     修正内容 : PMKOBETSU-2912 軽減税率対応
//----------------------------------------------------------------------------//
// 管理番号  11670305-00 作成担当 : 陳艶丹
// 作 成 日  2020/11/20  修正内容 : PMKOBETSU-4097 TSPインライン機能追加対応
//----------------------------------------------------------------------------//
// 管理番号  11770181-00 作成担当 : 田建委
// 作 成 日  2021/12/13  修正内容 : PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応
//----------------------------------------------------------------------------//
// 管理番号  11870080-00 作成担当 : 仰亮亮
// 作 成 日  2022/05/05  修正内容 : 納品書電子帳簿連携対応
//----------------------------------------------------------------------------//

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.Collections;
using System.IO;  // 2012/06/08 T.Nishi ADD
using System.Diagnostics;//add 2011/08/06 duzg
using System.Globalization;//ADD 2012/06/26 №880

using Broadleaf.Library.Windows.Forms;
using Broadleaf.Library.Resources;      // ConstantManagementの使用に必要(SFCMN00006C)
using Broadleaf.Library.Collections;
using Broadleaf.Windows.Forms;
using Broadleaf.Application.Common;
using Broadleaf.Application.Resources;
using Broadleaf.Application.Remoting;
using Broadleaf.Application.Remoting.ParamData;
using Broadleaf.Application.Remoting.Adapter;
using Broadleaf.Application.Controller;
using Broadleaf.Application.UIData;

using Infragistics.Win;
using System.Reflection;
using System.Threading;
// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
using Broadleaf.Library.Globarization; // SFCMN00002C
// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD
// 2010/02/22 Add >>>
using Broadleaf.Application.Controller.Facade;
using Infragistics.Win.UltraWinGrid;
// 2010/02/22 Add <<<
// --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
using Broadleaf.Drawing.Printing;
using System.Runtime.InteropServices;
// --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<


namespace Broadleaf.Windows.Forms
{
    /// <summary>
    /// 得意先電子元帳 フォームクラス
    /// </summary>
    /// <remarks>
    /// <br>Note       : 得意先電子元帳のフォームクラスです。</br>
    /// <br>Programmer : 30418 徳永 俊詞</br>
    /// <br>Date       : 2008.09.02</br>
    /// <br></br>
    /// <br>UpdateNote : 2008.11.10  22018 鈴木 正臣</br>
    /// <br>               ①全体的に修正（MANTIS対応＋単体テスト）</br>
    /// <br>               ②赤伝発行処理の実装</br>
    /// <br>UpdateNote : 2009.02.02  30414 忍 幸史</br>
    /// <br>               排他制御処理追加</br>
    /// <br>           : 2009/02/10        照田 貴志　不具合対応[10726][10647][10679][10668][10651][11134][11383][11432][11438]</br>
    /// <br>           : 2009/02/14        照田 貴志　不具合対応[11381][11391][11494][11550][11552]</br>
    /// <br>           : 2009/02/16        忍 幸史　不具合対応[11594]</br>
    /// <br>           : 2009/02/17        照田 貴志　不具合対応[11609]</br>
    /// <br>           : 2009/02/19        上野 俊治　不具合対応[11670]</br>
    /// <br>           : 2009/02/20        上野 俊治　不具合対応[11670]</br>
    /// <br>           : 2009/02/23        鈴木 正臣  不具合対応</br>
    /// <br>           : 2009/02/25        忍 幸史  不具合対応[7882]</br>
    /// <br>           : 2009/05/11        上野 俊治　不具合対応[13264]</br>
    /// <br>           : 2009/05/12        30413 犬飼　不具合対応[13253]</br>
    /// <br>           : 2009/05/18        30413 犬飼　不具合対応[13312]</br>
    /// <br>           : 2009/08/10        22018 鈴木 正臣 見出貼付機能の追加（売伝で貼付可能）</br>
    /// <br>           : 2009/08/24        22018 鈴木 正臣 過去分表示対応（売上履歴データからの抽出）</br>
    /// <br>           : 2009/10/07        22018 鈴木 正臣 不具合修正・要望対応</br>
    /// <br>           : 2009/09/07        張莉莉 PM.NS-2-A 車輛管理 赤伝発行時の車輌情報登録内容に項目を追加</br>
    /// <br>           : 2009/10/15        張莉莉 走行距離の表示形式をカンマ編集へ変更</br>
    /// <br>           : 2009/10/22        張莉莉 Mentis：0014427 抽出条件の管理番号を文字列入力可能に変更</br>
    /// <br>           : 2009/10/19        22018 鈴木 正臣 ①伝票発行時刻の追加</br>
    /// <br>           :                                   ②履歴分の赤伝発行を可能に変更（履歴の場合は受注残数ﾁｪｯｸしない）</br>
    /// <br>           : 2009/10/28        張莉莉 Redmine#987の対応</br>
    /// <br>           : 2009/11/25        呉元嘯 PM.NS保守依頼③ 不具合対応</br>
    /// <br>           : 2009/12/15        呉元嘯 Redmine#1890、#1911、#1919対応</br>
    /// <br>           : 2009/12/28        呉元嘯 PM.NS保守依頼④ 不具合対応</br>
    /// <br>           : 2010/01/12        呉元嘯 PM.NS保守依頼④ 不具合対応</br>
    /// <br>           : 2010/01/14        呉元嘯 Redmine#2421、#2423の対応</br>
    /// <br>           : 2010/01/22        呉元嘯 Redmine#2566、#2567の対応</br>
    /// <br>           : 2010/01/25        呉元嘯 Redmine#2593の対応</br>
    /// <br>           : 2010/01/29        呉元嘯 4次改良 不具合対応</br>
    /// <br>           : 2010/02/04        呉元嘯 Redmine#2805の対応</br>
    /// <br>           : 2010/04/02        22018 鈴木 正臣 MANTIS:15241の対応（見出貼付修正。車種名カナの対応。）</br>
    /// <br>           : 2010/06/08        呉元嘯 障害・改良対応７月リリース分対応</br>
    /// <br>           : 2010/06/18        呉元嘯 備考コードの取得変更対応</br>
    /// <br>           : 2010/07/20        22018 鈴木 正臣</br>
    /// <br>                                 成果物統合２</br>
    /// <br>                                 　①赤伝の備考にセットする日付を「元黒の売上日」に修正。
    /// <br>                                 　②残高一覧タブで抽出すると「赤伝」ボタンが無効になる障害を修正。
    /// <br>           : 2010/07/21        22018 鈴木 正臣</br>
    /// <br>                                 成果物統合２</br>
    /// <br>                                 　①残高合計の抽出でタイムアウトエラー等発生した場合にＰＧ強制終了せずメッセージ表示するよう修正。</br>
    /// <br>                                 　②得意先請求金額マスタにレコードが無い場合、画面上の売上日(開始)以降を抽出するよう変更。</br>
    /// <br>           : 2010/08/05       呉元嘯 障害・改良対応8月リリース分対応</br>
    /// <br>           : 2010/08/18        22018 鈴木 正臣</br>
    /// <br>                                 締次ロック対応。ロックタイムアウトエラーのメッセージ変更。</br>
    /// <br>           : 2010/08/31       呉元嘯</br>
    /// <br>                              Redmine#14006対応</br>
    /// <br>           : 2010/09/01       caowj</br>
    /// <br>                              Redmine#14073対応</br>
    /// <br>           : 2010/11/02       22018 鈴木 正臣</br>
    /// <br>           :                    Adobe Reader9以降だと終了時エラー発生する件の対応。(WebBrowser解放処理の修正)</br>
    /// <br>           : 2010/12/20       yangmj</br>
    /// <br>           :                  障害・改良対応12月リリース分対応</br>
    /// <br>           : 2011/01/21       yangmj</br>
    /// <br>                              readmine#18652の修正</br>
    /// <br>           : 2011/01/27       曹文傑</br>
    /// <br>                              readmine#18652の修正</br>
    /// <br>           : 2011/01/31       曹文傑</br>
    /// <br>                              readmine#18652の修正</br>
    /// <br>           : 2011/07/12       周雨</br>
    /// <br>                              連番 796  検索する文字列に「a,e,i,l,m,n,r,s,t,y」いずれかの文字で全列検索すると全行が対象になる。</br>
    /// <br>           : 2011/07/13       王飛３</br>
    /// <br>                              連番 795</br>
    //                                          標準価格で並び替えるとおかしい（ｶﾝﾏを含めた文字列として処理されているよう）
    //                                          ⇒画面コピー
    //                                          ⇒列フィルタのサンプルの表示順も同じ
    /// <br>           : 2011/07/18       朱宝軍</br>
    /// <br>                              回答区分追加対応</br>
    /// <br>           : 2011/08/04       周雨</br>
    /// <br>                              redmine #23387 連番No.796 検索する文字列に「a,e,i,l,m,n,r,s,t,y」いずれかの文字で全列検索すると全行が対象になる。</br>
    /// <br>           : 2011/08/31       李占川</br>
    /// <br>                              Redmine#24110 備考のチェック処理を追加する。</br>
    /// <br>           : 2011/09/08       李占川 Redmine#24110の対応</br>
    /// <br>                              桁数を設定しない場合、入力できない</br>
    /// <br>           : 2011/09/14       田建委 redmine#24670 案件一覧 連番729 でのテスト不具合</br>
    /// <br>                              明細表示のタブを選択している際の複写後のメッセージの変更</br>
    /// <br>           : 2011/10/26       凌小青 Redmine#26256の対応</br> 
    /// <br>           : 2011/10/27       yangmj redmine#26291 原価印字の修正</br>
    /// <br>           : 2011/11/23       李小路 redmine#7861 得意先電子元帳／粗利率の追加他</br>
    /// <br>           : 2011/11/25       yangmj redmine#8080 得意先電子元帳からの返品時、仕入伝票番号にフォーカスがある時ＥＳＣで抜けるとエラーで落ちるの対応</br>
    /// <br>           : 2011/11/28       楊洋 redmine#8172 得意先電子元帳/(BLﾊﾟｰﾂｵｰﾀﾞｰｼｽﾃﾑ)問合せ番号の追加</br>
    /// <br>           : 2011/11/29       朱 猛 Redmine#8382 得意先電子元帳の各項目間隔の調整</br>
    /// <br>           : 2011/12/06       凌小青 Redmine#8080 赤伝発行画面から ESCでヘッダ部に戻ったときに検索(F10) が有効になっていないと項目をクリアの対応</br> 
    /// <br>Update Note: 2011/12/22  liusy</br>
    /// <br>管理番号   : 10707327-00 2012/01/25配信分</br>
    /// <br>             Redmine#26660 得意先電子元帳/画面Gridのクリアの修正</br>
    /// <br>Update Note: 2011/12/15  gezh</br>
    /// <br>管理番号   : 10707327-00 2012/01/25配信分</br>
    /// <br>             Redmine#26667 Enterキーのフォーカス遷移の修正</br>
    /// <br>Update Note: 2011/12/22  李小路</br>
    /// <br>管理番号   : 10707327-00 2012/01/25配信分</br>
    /// <br>             Redmine#27459 得意先電子元帳/赤伝の発行</br>
    /// <br>           : 2011/12/30       wangf Redmine#27660 元黒伝票の得意先注番を赤伝に引き継ぐ</br> 
    /// <br>Update Note: 2012/03/02 鄧潘ハン</br>
    /// <br>管理番号   : 10707327-00 2012/03/28配信分</br>
    /// <br>             Redmine#26667 細部から↑キーでヘッダ部へカーソルが移動しなくなったについての対応</br>
    /// <br>Update Note: 2012/03/29 gezh</br>
    /// <br>管理番号   : 2012/05/24配信分</br>
    /// <br>             Redmine#29149 得意先電子元帳　赤伝返品手数料入力時の販売区分の対応</br>
    /// <br>Update Note: 2012/04/01 gezh</br>
    /// <br>管理番号   : 2012/05/24配信分</br>
    /// <br>             Redmine#29250 得意先電子元帳　得意先電子元帳　データ更新日時の追加についての対応</br>
    /// <br>Update Note: 2012/07/11 No.35 吉岡 孝憲</br>
    /// <br>管理番号   : </br>
    /// <br>             赤伝時に問合せ番号を設定する</br>
    /// <br>Update Note: 2012/08/08  liusy</br>
    /// <br>管理番号   : 10801804-00 2012/09/12配信分</br>
    /// <br>          :  Redmine#31530 得意先電子元帳 得意先注番の項目名修正
    /// <br>Update Note: 2012/09/20 三戸　伸悟</br>
    /// <br>管理番号   : </br>
    /// <br>             №35の戻し</br>
    /// <br>Update Note: 2012/10/25 脇田　靖之</br>
    /// <br>管理番号   : </br>
    /// <br>             赤伝発行入力にて「返品自在庫登録区分：する」で「伝票区分：掛売上」にすると、</br>
    /// <br>             在庫区分が全て”取寄”になってしまう障害を修正</br>
    /// <br>Update Note: 2012/11/15 yangmj</br>
    /// <br>管理番号   : 10801804-00 20130116配信分</br>
    /// <br>             Redmine#33269　請求先情報の印刷の対応</br>
	/// <br>Update Note: 2013/01/10 wangf </br>
	/// <br>           : 10801804-00、Redmine#31740の対応</br>
	/// <br>           : 仕入先電子元帳のウインドウからの得意先電子元帳を起動するとグローバル変数初期化。</br>
	/// <br>Update Note: 2013/01/30 wangf </br>
	/// <br>           : 10801804-00、速度改善関連、Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応</br>
	/// <br>           : 残高集計のタイミングをずらす</br>
    /// <br>Update Note: 2013/02/06 zhaimm </br>
    /// <br>           : 10801804-00 2013/03/13配信分の緊急対応</br>
    /// <br>           : Redmine#34572の対応 得意先コードを入れても拠点コードにリンクしていない</br>
    /// <br>Update Note: 2013/02/16 wangf </br>
    /// <br>           : 10801804-00、速度改善関連、Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応</br>
    /// <br>           : ①残高集計をファンクションキー「残高照会(F2)」と連動させる</br>
    /// <br>           : ②検索(F10)後に基本条件を変更時、メッセージを表示時に残高をクリアしないように変更</br>
    /// <br>           : ③検索(F10)後に条件変更が無い場合は、残高集計を実行しても再集計をしないように変更</br>
    /// <br>           : ④「残高集計」ボタンへのフォーカス遷移変更</br>
    /// <br>Update Note: 2013/03/12 caohh </br>
    /// <br>           : 10801804-00 2013/05/15配信分対応</br>
    /// <br>           : Redmine#35017の対応 起動後、抽出を行わずにグリッドをクリックし→キーを押すとエラー発生された</br>
    /// <br>Update Note: 2013/03/18 zhaimm </br>
    /// <br>           : 10800003-00、2013/05/15配信分、Redmine#34807得意先電子元帳の対応</br>
    /// <br>           : ①検索時：0詰めデータと0詰めなしデータも抽出対象とする</br>
    /// <br>           : ②赤伝発行時：売上伝票入力の仕様と同様、0詰めを行う</br>
    /// <br>Update Note: SPK車台番号文字列対応に伴う車台番号(VINコード)による抽出を可能にする</br>
    /// <br>Programmer : FSI厚川 宏</br>
    /// <br>Date       : 2013/03/25</br>
    /// <br>Update Note: Redmine#40654「設定画面「赤伝発行」が「任意」のとき、画面の起動時にエラーが発生」対応</br>
    /// <br>Programmer : gezh</br>
    /// <br>Date       : 2013/10/10</br>
    /// <br>Update Note: K2013/01/23 鄧潘ハン </br>
    /// <br>           : 特販区分を追加することの登戸個別対応</br>
    /// <br>Update Note: 修正内容：前橋京和商会個別 得意先電子元帳改良対応</br>
    /// <br>Programmer : 陳健</br>
    /// <br>Date       : K2014/02/06</br>
    /// <br>Update Note: 修正内容：Redmine#42093 OperationCode:5->90</br>
    /// <br>Programmer : 陳健</br>
    /// <br>Date       : 2014/02/21</br>
    /// <br>Update Note: K2014/05/08 林超凡 </br>
    /// <br>           : 得意先電子元帳のCSV出力項目に車種メーカーコードを追加する。東亜商会個別対応</br>
    /// <br>Update Note: K2014/05/27 林超凡 </br>
    /// <br>           : Redmine#42597 出力位置を変更できるようにする。東亜商会個別対応</br>
    /// <br>Update Note: K2014/05/28 林超凡 </br>
    /// <br>           : Redmine#42764 受入テスト障害対応。東亜商会個別対応</br>
    /// <br>Update Note: 鄧潘ハン 2014/08/12</br>
    /// <br>管理番号   : 11070148-00</br>
    /// <br>           : SCM障害No.18の対応</br>
    /// <br>UpdateNote : 2014/08/26 鄧潘ハン </br>
    /// <br>管理番号   : 11070148-00　仕掛 №10650　RedMine#43145の対応</br>
    /// <br>           : ①売仕入同時の仕入伝票を呼び出せない</br>
    /// <br>             ②赤伝発行時に仕入情報を入力しても仕入データが作成されない場合がある</br>
    /// <br>             ③SCM回答送信していない伝票に対し、赤伝発行時にSCM回答送信を行うとエラーになる。</br>
    /// <br>Update Note: 2014/12/28 陳永康</br>
    /// <br>管理番号   : 11070263-00</br>
    /// <br>           : 変換後品番の追加対応</br>
    /// <br>Update Note: 2015/03/16 陳永康</br>
    /// <br>管理番号   : 11070263-00</br>
    /// <br>           : 変換後品番 初期値の非表示対応</br>
    /// <br>UpdateNote : 2014/10/29 chenyk</br>
    /// <br>管理番号   : 11070149-00 Redmine#43863の対応</br>
    /// <br>           : ESCにて画面キャンセルした後Enter、及び矢印キーにて伝票検索の対応。</br>
    /// <br>UpdateNote : 2015/01/28 chenyk</br>
    /// <br>管理番号   : 11070149-00 Redmine#43863の対応</br>
    /// <br>           : ESCにて画面キャンセルした後Enter、及び矢印キーにて伝票検索の対応。</br>
    /// <br>UpdateNote : 2015/02/05 王亜楠 </br>
    /// <br>           : テキスト出力件数制限なしモードの追加</br>
    /// <br>UpdateNote : 2015/02/25 王亜楠 Redmine#44701</br>
    /// <br>           : ①№1.テキスト出力件数制限なし位置の調整</br>
    /// <br>           : ②№3.テキスト出力タイトル出力されない対応</br>
    /// <br>           : ③№4.テキスト出力条件範囲分割の障害（1.3～1.14：12日の対応）</br>
    /// <br>UpdateNote : 2015/03/03 王亜楠 Redmine#44701</br>
    /// <br>           : 開始売上日・終了売上日が入力されない場合、テキスト出力データないなら、メッセージを表示する対応</br>
    /// <br>Update Note: K2015/4/27 陳亮</br>
    /// <br>管理番号   : 11100842-00</br>
    /// <br>           : 得意先電子元帳第二売価を追加する。モモセ部品㈱オプションが有効の場合のみ。</br>
    /// <br>Update Note: K2015/06/16 鮑晶</br>
    /// <br>管理番号   : 11101427-00</br>
    /// <br>           : メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
    /// <br>Update Note: 2015/09/17 田建委</br>
    /// <br>管理番号   : 11170170-00</br>
    /// <br>           : Redmine#47006 テキスト出力の時、返品金額などをマイナスで出力する対応</br>
    /// <br>Update Note: 2016/01/21 脇田 靖之</br>
    /// <br>管理番号   : 11270007-00</br>
    /// <br>           : 仕掛一覧№2808 貸出受注対応</br>
    /// <br>           : ①検索条件に「出荷状況」項目を追加</br>
    /// <br>           : ②明細表示に計上数、未計上数項目を追加</br>
    /// <br>Update Note: 2016/02/04 河原林　一生</br>
    /// <br>管理番号   : 11170206-00</br>
    /// <br>           : 仕入先電子元帳から起動したときに検索でエラーになる件の対応</br>
    /// <br>Update Note: K2016/02/23 時シン</br>
    /// <br>管理番号   : 11200090-00 イケモ 得意先電子元帳</br>
    /// <br>           : ㈱イケモト 抽出条件にて受注作成区分を追加する対応</br>
    /// <br>Update Note: K2017/01/05 譚洪</br>
    /// <br>管理番号   : 11270116-00 得意先電子元帳パッケージ出荷用ソースのマージ</br>
    /// <br>Update Note: 2018/09/04 譚洪</br>
    /// <br>管理番号   : 11470152-00</br>
    /// <br>           : 履歴自動表示機能追加対応</br>
    /// <br>Update Note: 2019/08/19 陳艶丹</br>
    /// <br>管理番号   : 11570163-00 PMKOBETSU-1379 テキスト出力操作ログおよび出力時アラートメッセージ追加対応</br>
    /// <br>Update Note: 2020/03/11 時シン</br>
    /// <br>管理番号   : 11570208-00</br>
    /// <br>           : PMKOBETSU-2912 軽減税率対応</br>
    /// <br>           : 伝票タブ、明細タブに「消費税率」項目を追加</br>
    /// <br>Update Note: 2020/11/20 陳艶丹</br>
    /// <br>管理番号   : 11670305-00</br>
    /// <br>           : PMKOBETSU-4097 TSPインライン機能追加対応</br>
    /// <br>Update Note: 2021/12/13 田建委</br>
    /// <br>管理番号   : 11770181-00</br>
    /// <br>           : PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応</br>
    /// <br>Update Note: 2022/05/05 仰亮亮</br>
    /// <br>管理番号   : 11870080-00</br>
    /// <br>           : 納品書電子帳簿連携対応</br>
    /// </remarks>
    public partial class PMKAU04001UA : Form
    {
        #region プライベート変数

        private bool _errorMsgShow = false; // ADD BY wupf 2014/08/13 FOR Redmine＃43184 倉庫コードの障害解除
        // **** アプリケーション共通変数 ****
        private string _enterpriseCode = string.Empty;	    	// 企業コード
        private string _invokerPgId = string.Empty;             // 呼び出し元プログラムID

        // **** ログインユーザーデータ保存 ****
        private string _loginSectionCode = string.Empty;		// 自拠点コード
        //private string _loginSectionGuideNm = "";				// 自拠点名称

        private string _loginUserCd = string.Empty;             // ログインユーザー
        private string _loginUserName = string.Empty;           // ログインユーザー名
        // --- ADD 2009/09/07 ---------->>>>>
        private string slipCd = string.Empty;
        private int _carMngDiv = 0;                             // 得意先の車輌管理区分
        private string _selectedSlipNoCd;                       // check用の伝票番号
        private bool _showFlg = false;
        private Int32 _mailAgeInfo = 0;　　　　　　　　　　　　 // 車両走行距離
        private string _carNoteInfo = string.Empty;             // 車輌備考
        private ArrayList slipNumLt = new ArrayList();
        private ArrayList carMngLt = new ArrayList();
        /// <summary>オプション情報</summary>
        private int _opt_CarMng;
        // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
        /// <summary>PCCオプション情報</summary>
        private int _opt_Pcc;
        // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<

        // ---ADD K2013/01/23  鄧潘ハン---------------------------------->>>>>
        /// <summary>登戸オプション情報</summary>
        private int _opt_Nobuto;
        // ---ADD K2013/01/23  鄧潘ハン----------------------------------<<<<<

        //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
        /// <summary>東亜オプション情報</summary>
        private int _opt_Toua;
        //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<

        // ---- ADD K2015/04/27 陳亮 モモセ部品の第二売価追加 ---->>>>>
        /// <summary>モモセ部品オプション情報</summary>
        private int _opt_Momose;
        // ---- ADD K2015/04/27 陳亮 モモセ部品の第二売価追加 ----<<<<<
        // ---------- ADD 2021/12/13 田建委 PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応 ---------->>>>>
        /// <summary>東海自動車工業オプション情報</summary>
        private int Opt_CtlIssuingAkaden;
        // ---------- ADD 2021/12/13 田建委 PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応 ----------<<<<<

        //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
        private int _salesAreaCd=0;                                 // 販売エリアコード
        private string _salesAreaNm=string.Empty;
        /// <summary>分析コード長さ</summary>
        private const int CUSTANALYS_LENGTH = 32;
        /// <summary>地区</summary>
        private const string SALESAREA_NAME = "SalesAreaName";
        /// <summary>分析コード1</summary>
        private const string CUSTANALYSCODE1_NAME = "CustAnalysCode1";
        /// <summary>分析コード2</summary>
        private const string CUSTANALYSCODE2_NAME = "CustAnalysCode2";
        /// <summary>分析コード3</summary>
        private const string CUSTANALYSCODE3_NAME = "CustAnalysCode3";
        /// <summary>分析コード4</summary>
        private const string CUSTANALYSCODE4_NAME = "CustAnalysCode4";
        /// <summary>分析コード5</summary>
        private const string CUSTANALYSCODE5_NAME = "CustAnalysCode5";
        /// <summary>分析コード6</summary>
        private const string CUSTANALYSCODE6_NAME = "CustAnalysCode6";
        /// <summary>メイゴ㈱オプション情報</summary>
        private int _opt_Meigo;
        //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<

        //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
        /// <summary>イケモト個別オプション情報</summary>
        private int _opt_IKeMoTo;
        //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<

        //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>   
        /// <summary>
        /// 問合せ番号
        /// </summary>
        private Int64 _inquiryNumber;
        private bool flag;  // ADD 2011/12/15 gezh redmine#26667
        public Int64 InquiryNumber
        {
            get { return _inquiryNumber; }
            set { _inquiryNumber = value; }
        }
        //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<

        // --- ADD 2012/12/19 ------------------------------>>>>>
        /// <summary>山形部品オプション情報</summary>
        private int _opt_SalesDateDCtrl; // 日付制御オプション          (OPT-CPM0040)
        private int _opt_StockEntCtrl;   // 売仕入同時入力制御オプション(OPT-CPM0050)
        // --- ADD 2012/12/19 ------------------------------<<<<<
        // --- ADD 2013/04/26 T.Miyamoto ------------------------------>>>>>
        private int _opt_YamagataCustomCtrl; // 山形部品オプション(OPT-CPM0010)
        // --- ADD 2013/04/26 T.Miyamoto ------------------------------<<<<<

        // ----------ADD 2010/01/29---------->>>>>
        /// <summary>テキスト出力オプション情報</summary>
        private int _opt_TextOutput;
        // ----------ADD 2010/01/29----------<<<<<
        // --- ADD 2009/11/25 ---------->>>>>
        private int _retGoodsReasonDiv = 0;                       // 返品理由コード
        private string _retGoodsReason = string.Empty;            // 保存返品理由ガイド選択した値
        // --- ADD 2009/11/25 ----------<<<<<

        private bool isError = false; // ADD 2010/09/29

        private bool isRsError = false; // ADD BY LIUSY 2013/09/18 #40275
        // --- ADD 2009/12/28 ---------->>>>>
        private int _checkCount = 0;                       // 基本条件のCheck数
        // --- ADD 2009/12/28 ----------<<<<<

        private PMKAU04001UC prtSetForm = null;           // 出力条件設定画面 // ADD 2010/10/09
        // -----ADD 2010/12/20 ----->>>>>
        private bool _clearFlg = false;
        // -----ADD 2010/12/20 -----<<<<<
        //ADD 2011/08/04 FOR redmine #23387
        private bool _searchFlg = false;
        //ADD 2011/08/04 FOR redmine #23387
        // --- Add 2011/08/06 duzg for 赤伝発行時、データ送信対応 --->>>
        private SalesSlipInputAcs _salesSlipInputAcs;

        /// <summary>コマンドライン引数</summary>
        private string[] _commandLineArgs;
        // --- ADD 2011/08/31---------->>>>>
        /// <summary>備考</summary>
        private string _beslipNoteNm;
        /// <summary>備考2</summary>
        private string _beslipNote2Nm;
        /// <summary>備考3</summary>
        private string _beslipNote3Nm;
        // --- ADD 2011/08/31----------<<<<<
        private bool isFirstBalance = true;  //ADD wangf 2013/02/16 FOR Redmine#34513
        /// <summary>コマンドライン引数</summary>
        public string[] CommandLineArgs
        {
            set { _commandLineArgs = value; }
            get { return this._commandLineArgs; }
        }
        // --- Add 2011/08/06 duzg for 赤伝発行時、データ送信対応 --->>>
        
         //----- ADD　2018/09/04 譚洪　履歴自動表示の対応------->>>>>
        /// <summary>コマンドライン引数</summary>
        private string[] _salesCommandArgs;

        /// <summary>コマンドライン引数</summary>
        public string[] SalesCommandArgs
        {
            set { _salesCommandArgs = value; }
            get { return this._salesCommandArgs; }
        }
        //----- ADD　2018/09/04 譚洪　履歴自動表示の対応-------<<<<<
        #region ■列挙体
        /// <summary>
        /// オプション有効有無
        /// </summary>
        public enum Option : int
        {
            /// <summary>無効</summary>
            OFF = 0,
            /// <summary>有効</summary>
            ON = 1,
        }

        // 2010/02/22 Add >>>
        /// <summary>
        /// オペレーションコード
        /// </summary>
        public enum OperationCode : int
        {
            /// <summary>テキスト出力</summary>
            TextOut = 1,
            /// <summary>エクセル出力</summary>
            ExcelOut = 2,
            /// <summary>赤伝</summary>
            RedSlip = 3,
            // ----- ADD 2010/05/04 -------------------->>>>>
            /// <summary>再発行</summary>
            ReissueSlip = 4,
            // ----- ADD 2010/05/04 --------------------<<<<<
            // ----- ADD 陳健 K2014/02/06 -------------------->>>>>
            /// <summary>削除指定区分</summary>
            //DeleteFlag = 5    // DEL 陳健 2014/02/21
            DeleteFlag = 90     // ADD 陳健 2014/02/21
            // ----- ADD 陳健 K2014/02/06 --------------------<<<<<
        }
        // 2010/02/22 Add <<<

        // ADD 2012/06/01 ----------------------->>>>>
        /// <summary>
        /// 抽出拠点種別
        /// </summary>
        public enum RemainSectionType : int
        {
            /// <summary>管理拠点</summary>
            Mng = 0,
            /// <summary>請求拠点</summary>
            Claim = 1
        }
        // ADD 2012/06/01 -----------------------<<<<<

        #endregion

        // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
        /// <summary>作業用フォルダパス：(パーツマンインストールフォルダ)\Temp\custeleceBooks</summary>
        private string _sWorkFolderPath = string.Empty;
        /// <summary>作業用フォルダ名</summary>
        private const string _sWorkFolderName = "custeleceBooks";
        /// <summary>ReNameフォルダパス：(パーツマンインストールフォルダ)\Temp\custeleceBooks\Rename</summary> 作業フォルダ\Rename
        private string _sRenameFolderPath = string.Empty;
        /// <summary>作業用フォルダ名</summary>
        private const string _sReNameFolderName = "Rename";
        /// <summary>電子帳簿連携サポート設定XMLファイル名</summary>
        private const string ctXML_EBOOKLINK_FILE_NAME = "MAKAU03000U_EBooksLinkSetting.XML";
        /// <summary>電子帳簿受け渡しフォルダ</summary>
        private const string ctEBooksFolderPath = @"eBooks\eBooks";
        /// <summary>取引先リスト受け渡しフォルダ</summary>
        private const string ctCustomFolderPath = @"eBooks\Customer";
        /// <summary>ログフォルダ</summary>
        private const string CT_LOGFOLDER = @"Log\eBooks";
        /// <summary>仮想プリンタダイアログ制御　プログラムパス</summary>
        private string _sVirtualPrinterControllerPath = string.Empty;
        /// <summary>仮想プリンタダイアログ制御　プログラム名称</summary>
        private const string _sVirtualPrinterControllerPgName = "VirtualPrinterController.exe";
        /// <summary>電帳.DX画面 起動ファイル</summary>
        private const string _eBookLauncherFileName = "eBookLauncher.vbs";
        /// <summary>PDF出力用伝票情報(伝票番号・ 受注ステータス)</summary>
        List<SalesSlipPrintCndtn.SalesSlipKey> _pdfOutputSlipKey;
        private const string PGNAME_STR = "得意先電子元帳";
        private const string ASSID_PMKAU04000U = "PMKAU04000U";
        private const string CT_CUSTOMERCDFOMART = "00000000";
        private const string CT_DATETIMEFOMART = "yyyyMMddHHmmss";
        private const string CT_YMDFOMART = "yyyyMMdd";
        private const string CT_LOGDATETIMEFOMART = "yyyy/MM/dd HH:mm:ss";
        private const string CT_NAME_SALE = "売上";
        private const string CT_MODE = "2";
        private const string CT_SPLITSTR = "_";
        private const char CT_SPLITCHAR = '_';
        private const string CT_STRSPLIT = "\"";
        private const double RATE10 = 0.1;
        private const double RATE8 = 0.08;
        private const string MESS_PRINTERPORT_ERR = "PDFプリンタポートの設定に失敗しました({0})";
        private const string MESS_PRINTERMUTEX_ERR = "PDFプリンタへの出力に失敗しました（排他取得エラー）";
        private const string CT_LOGFILENM = "{0}_custeleceBooks_{1}.txt";
        private const string CT_LOGCOUNT = "{0}件";
        private const string CT_OPLOGMSG = "{0}件を同期　Log：{1}";
        private const string CT_EBOOKSFLPATH = "\\nN2_{0}_{1}.csv";
        private const string CT_CUSTOMERFLPATH = "\\nN7_CustomerRF_Diff_{0}.csv";
        private const int OPERATIONCODE_EBOOKS = 21;
        private const int CT_MUTEX_WAIT_MAX = 360; // 仮想プリンタ出力排他獲得最大待ち時間（6分）
        private const string CT_PORTNAME = "{0}_{1}_{2}_{3}.pdf";
        private const string CT_LOCALPORT = ",XcvMonitor Local Port";
        private const string CT_ZERO = "\0";
        private const string CT_ADDPORT = "AddPort";
        private const string CT_DELETEPORT = "DeletePort";
        private const string CT_PRINTER = "Microsoft Print to PDF";
        private const string CT_DEFALUT_PORTNAME = "PORTPROMPT:";
        /// <summary>今回の電子帳簿対応ではダイアログ表示を使用しない</summary>
        private const string XML_PDFPRINTERSETTINGENABLE = "PMKAU04001U_PDFPrinterSettingEnable.xml";
        /// <summary>ファイル保存ダイアログ表示</summary>
        private bool _fileDialogDisplay = false;
        /// <summary>ポート名</summary>
        private string _portName = string.Empty;
        /// <summary> PDFファイル出力フラグ </summary>
        private bool _pdfPrintEnable = false;
        /// <summary> 3:プリンター内のすべての印刷ジョブを削除します</summary>
        private const int PRINTER_CONTROL_PURGE = 3;
        /// <summary>排他対象名</summary>
        private const string CT_NAME_EBOOK = "Partsman_DenchoDX_VirtualPrinterMutex";
        /// <summary>プリンター 構造体のレベル</summary>
        private const int CT_Printer_Level = 0;
        /// <summary>プリンター 構造体のレベル</summary>
        private const int CT_Printer_Level2 = 2;

        /// <summary>売上データ取得区分　0:売上データ 1:売上履歴データ</summary>
        public enum readModeEnum : int
        {
            /// <summary>売上データ</summary>
            Normal = 0,
            /// <summary>売上履歴データ</summary>
            History = 1,
        }

        /// <summary>課税区分 0:外税 1:非課税 2:内税</summary>
        public enum TaxationCode : int
        {
            /// <summary>外税</summary>
            TaxExc = 0,
            /// <summary>非課税</summary>
            TaxNone = 1,
            /// <summary>内税</summary>
            TaxInc = 2,
        }

        /// <summary>伝票PDF出力 0:する 1:しない 2:電子帳簿出力に従う</summary>
        public enum outPutModeEnum : int
        {
            /// <summary>0:する</summary>
            YES = 0,
            /// <summary>1:しない</summary>
            NO = 1,
            /// <summary>2:電子帳簿出力に従う</summary>
            Other = 2,
        }

        /// <summary>出力伝票区分 0:両方選択なし/1:赤伝/2:再発行/3:両方選択あり </summary>
        private enum outPutSlipTypeEnum : int
        {
            /// <summary>0:両方選択なし</summary>
            No = 0,
            /// <summary>1:赤伝</summary>
            DebitNoteChecked = 1,
            /// <summary>2:再発行</summary>
            RePrintChecked = 2,
            /// <summary>3:両方選択あり</summary>
            All = 3,
        }

        /// <summary>
        /// 消費税転嫁方式
        /// </summary>
        public enum ConsTaxLayMethod : int
        {
            /// <summary>伝票転嫁</summary>
            SlipLay = 0,
            /// <summary>明細転嫁</summary>
            DetailLay = 1,
            /// <summary>請求親</summary>
            DemandParentLay = 2,
            /// <summary>請求子</summary>
            DemandChildLay = 3,
            /// <summary>非課税</summary>
            TaxExempt = 9,
        }

        /// <summary>
        /// 電子帳簿出力
        /// </summary>
        public enum PDFPrint : int
        {
            /// <summary>通常印刷</summary>
            Usually = 0,
            /// <summary>電子帳簿出力</summary>
            EBook = 1,
        }
        // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<

        /// <summary>
        /// 車両管理オプション
        /// </summary>
        public int Opt_CarMng
        {
            get { return this._opt_CarMng; }
            set { this._opt_CarMng = value; }
        }
        // --- ADD 2009/09/07 ----------<<<<<
        // ---------ADD 2010/01/29---------->>>>>
        /// <summary>
        /// テキスト出力オプション情報
        /// </summary>
        public int Opt_TextOutput
        {
            get { return this._opt_TextOutput; }
            set { this._opt_TextOutput = value; }
        }
        // ---------ADD 2010/01/29----------<<<<<

        // **** 表示用 ****
        //private int _characterSize = 11;						// 文字サイズ
        //private int _defaultOpenTabNo = 1;						// 初期表示タブ（明細表示）
        //private int _currentTabNo = 1;							// 現在の表示タブ

        /// <summary>伝票表示タブ 列サイズ自動調整値</summary>
        private bool _columnWidthAutoAdjust_Slip = false;
        /// <summary>明細表示タブ 列サイズ自動調整値</summary>
        private bool _columnWidthAutoAdjust_Detail = false;
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
        ///// <summary>赤伝発行入力タブ 列サイズ自動調整値</summary>
        //private bool _columnWidthAutoAdjust_RedSlip = true;
        ///// <summary>残高一覧表示タブ 列サイズ自動調整値</summary>
        //private bool _columnWidthAutoAdjust_Balance = true;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
        /// <summary>赤伝発行入力タブ 列サイズ自動調整値</summary>
        private bool _columnWidthAutoAdjust_RedSlip = false;
        /// <summary>残高一覧表示タブ 列サイズ自動調整値</summary>
        private bool _columnWidthAutoAdjust_Balance = false;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

        //private long _detailRowCount = 0;						// 明細結果行数
        //private long _balanceRowCount = 0;						// 残高一覧行数
        /// <summary>伝票一覧グリッド選択行数</summary>
        private int _selectedRowCountSlip = 0;
        /// <summary>明細グリッド選択行数</summary>
        private int _selectedRowCountDetail = 0;
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 DEL
        ///// <summary>明細グリッド選択得意先コード</summary>
        //private string _selectedCustomerCd = string.Empty;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
        /// <summary>明細グリッド選択得意先コード</summary>
        private int _selectedCustomerCd;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD
        /// <summary>明細グリッド選択拠点コード</summary>
        private string _selectedSectionCd = string.Empty;

        // **** アクセスクラス ****
        /// <summary>PMKHN04005UA)得意先ガイドフォーム</summary>
        //private PMKHN04005UA _customerGuideForm;
        /// <summary>PMKHN09012A)得意先</summary>
        private CustomerInfoAcs _customerInfoAcs;
        /// <summary>SFKTN09002A)拠点</summary>
        private SecInfoSetAcs _secInfoSetAcs;

        /// <summary>SFTOK09382A)従業員</summary>
        private EmployeeAcs _employeeAcs;
        /// <summary>MAKHN09112A)メーカー</summary>
        private MakerAcs _makerAcs;
        /// <summary>MAKHN04112A)BLコード・品番検索</summary>
        private GoodsAcs _goodsAcs;
        /// <summary>DCKHN09092A)BLコード</summary>
        private BLGoodsCdAcs _blGoodsCdAcs;
        /// <summary>PMKHN09062A)BLグループ</summary>
        private BLGroupUAcs _blGroupUAcs;
        /// <summary>SFCMN09062A)ユーザーガイド</summary>
        private UserGuideAcs _userGuideAcs;
        /// <summary>MAKHN09332A)倉庫</summary>
        private WarehouseAcs _warehouseAcs;
        /// <summary>PMKHN09022A)仕入先</summary>
        private SupplierAcs _supplierAcs;
        /// <summary>DCKHN09212A)売上全体設定</summary>
        private SalesTtlStAcs _salesTtlStAcs;
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
        /// <summary>SFTOK9402)備考設定</summary>
        private NoteGuidAcs _noteGuidAcs;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

        //private IIOWriteControlDB _iIOWriteControlDB;

        // **** 得意先電子元帳プロジェクトクラス ****
        /// <summary>PMKAU04003A)得意先電子元帳+残高一覧</summary>
        private CustPrtSlipSearchAcs _custPtrSearchAcs;
        /// <summary>PMKAU04003AB)得意先電子元帳</summary>
        private CustPtrSalesDetailRedSlipAcs _custPtrRedSlipAcs;
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
        /// <summary>PMKAU04004UA)設定フォーム</summary>
        private PMKAU04004UA _settingForm;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD

        // **** 抽出条件クラス ****
        /// <summary>検索条件クラス 残高・伝票・明細(PMKAU04002EA)</summary>
        private CustPrtPpr _custPrtPpr = null;
        /// <summary>検索条件クラス 残高一覧(PMKAU04002EB)</summary>
        private CustPrtPprBlnce _custPrtPprBlnce = null;
        /// <summary>残高一覧タブをセレクトできるか（得意先または請求先が入力されるまではFalse)</summary>
        private bool _remainTabSelectable = false;

        // ---ADD 2009/02/10 不具合対応[10651] --------------------------------------->>>>>
        //抽出条件に変更があったかどうかの判断用(前回検索時と今回検索直前の値を比較)
        /// <summary>前回検索時抽出条件クラス 残高・伝票・明細(PMKAU04002EA)</summary>
        private CustPrtPpr _custPrtPprBackUp = null;
        /// <summary>前回検索時抽出条件クラス 残高一覧(PMKAU04002EB)</summary>
        private CustPrtPprBlnce _custPrtPprBlnceBackUp = null;
        private string _rl_RemainTypeBackup = string.Empty;
        private int _logicalDelDivBackUp = -1;
        // ---ADD 2009/02/10 不具合対応[10651] ---------------------------------------<<<<<

        // **** 明細データ格納データセットオブジェクト **** 
        /// <summary>明細データ格納データセット</summary>
        private CustPtrSalesDetailDataSet _detailDataSet;

        // **** 締め日関連 ****
        /// <summary>締め日取得用クラス</summary>
        TotalDayCalculator _tCalcAcs = null;
        /// <summary>今回締処理日</summary>
        private DateTime _currentTotalDay;
        /// <summary>今回締処理月</summary>
        private DateTime _currentTotalMonth;
        /// <summary>前回締処理日</summary>
        private DateTime _prevTotalDay;
        /// <summary>前回締処理月</summary>
        private DateTime _prevTotalMonth;
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
        /// <summary>日付取得部品</summary>
        private DateGetAcs _dateGetAcs;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD
        #region DEL 2017/02/14 入金引当チェック
        //// ---------- ADD 2015/08/21 Y.Wakita 東海自動車工業 品証Redmine№4512対応 ---------->>>>>
        ///// <summary>入金引当操作アクセスクラス</summary>
        //private ControlDepsitAlwAcs _controlDepsitAlwAcs;
        //// ---------- ADD 2015/08/21 Y.Wakita 東海自動車工業 品証Redmine№4512対応 ----------<<<<<
        #endregion DEL 2017/02/14 入金引当チェック
        // ---------- ADD 2021/12/13 田建委 PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応 ---------->>>>>
        /// <summary>入金引当操作アクセスクラス</summary>
        private ControlDepsitAlwAcs ControlDepsitAlwAcsObj;
        // ---------- ADD 2021/12/13 田建委 PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応 ---------->>>>>
        // **** 画面設定用 ****

        // **** 文字サイズ ****
        /// <summary>文字サイズ</summary>
        private readonly int[] _fontpitchSize = new int[] { 6, 8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24 };

        // **** タブコントロール用 ****
        /// <summary>選択されたメインタブのキー</summary>
        private string _selectedMainTabKey = string.Empty;
        /// <summary>選択された残高一覧のタブキー</summary>
        private string _selectedRemainTabKey = string.Empty;

        // **** ボタン用イメージリスト ****
        private ImageList _imageList16 = null;                  // イメージリスト

        // **** スキン設定用クラス ****
        private ControlScreenSkin _controlScreenSkin;

        // **** 抽出条件機能（スライダー）でのみ使用 ****
        //int _conditionCount_Numeric = 0;						// 数値項目表示数
        //int _conditionCount_Combo = 0;							// コンボボックス表示数
        //int _conditionCount_String = 0;							// 文字列項目表示数
        //int _conditionCount_String_Guide = 0;                   // ガイドボタン付き文字列項目

        /// <summary>現在のコントロール位置X (スライダー)</summary>
        int _currentLocationX = 0;
        /// <summary>現在のコントロール位置Y (スライダー)</summary>
        int _currentLocationY = 0;


        // **** 赤伝発行タブ内でのみ使用 ****
        // --- DEL 2020/12/21 警告対応 ---------->>>>>
        //bool _editableSupplierSlipNo = true;					// 仕入伝票番号欄の編集制御
        //bool _editableWarehouseCode = true;						// 倉庫コード欄の編集制御
        // --- DEL 2020/12/21 警告対応 ----------<<<<<
        bool _editablePartySalesSlipCd = true;                  // 指示書(仮伝)番号の編集制御（表示制御）売上全体設定に準じる
        bool _editableSlipNote2 = true;                         // 備考２の編集制御（売上全体設定より取得
        bool _editableSlipNote3 = true;                         // 備考３の編集制御（売上全体設定より取得
        // --- DEL 2020/12/21 警告対応 ---------->>>>>
        //bool _editableFeeFields = true;                         // 手数料欄の編集制御
        // --- DEL 2020/12/21 警告対応 ----------<<<<<
        bool _editableSalesCodeDiv = true;                      // 販売区分の編集制御   // ADD 2012/03/29 gezh Redmine#29149

        // --- ADD 2012/12/19 T.Miyamoto ------------------------------>>>>>
        private DateTime _SalesDate;                            // 売上日チェック処理用の変更前日付
        private bool _SalesDateChecking = false;                // 売上日チェック処理の2重チェック回避用
        // --- ADD 2012/12/19 T.Miyamoto ------------------------------<<<<<

        // --------ADD 2010/08/05-------->>>>>
        bool _pointDspDivCd = false;// 小数点表示区分
        // --------ADD 2010/08/05--------<<<<<
        // **** テキスト出力用 ****
        private string _txtexp_FileName = string.Empty;         // 出力ファイル名
        private CustPtrSalesUserConst _userSetting;             // 出力設定XMLからの取得設定
        private string[] _patternSetting;                       // 設定値
        private List<String> _exportColumnNameList;             // 出力カラム名

        // **** あいまい検索を行う項目用 ****
        /// <summary>車種名称</summary>
        private string _srModelFullName = string.Empty;
        /// <summary>車種名称(*抜き文字列)</summary>
        private string _srRvModelFullName = string.Empty;
        /// <summary>型式</summary>
        private string _srFullModel = string.Empty;
        /// <summary>型式(*抜き文字列)</summary>
        private string _srRvFullModel = string.Empty;
        /// <summary>カラー名称</summary>
        private string _srColorName1 = string.Empty;
        /// <summary>カラー名称(*抜き文字列)</summary>
        private string _srRvColorName1 = string.Empty;
        /// <summary>トリム名称</summary>
        private string _srTrimName = string.Empty;
        /// <summary>トリム名称(*抜き文字列)</summary>
        private string _srRvTrimName = string.Empty;
        /// <summary>備考１</summary>
        private string _srSlipNote = string.Empty;
        /// <summary>備考１(*抜き文字列)</summary>
        private string _srRvSlipNote = string.Empty;
        // --- ADD 2009/10/22 ----->>>>>
        /// <summary>管理番号</summary>
        private string _srCarMngCode = string.Empty;
        /// <summary>管理番号(*抜き文字列)</summary>
        private string _srRvCarMngCode = string.Empty;
        // --- ADD 2009/10/22 -----<<<<<

        // --- DEL 2020/12/21 警告対応 ---------->>>>>
        ////---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>
        ///// <summary> 問合せ番号 </summary>
        //private Int64 _swInquiryNumber = 0;
        ////---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<
        // --- DEL 2020/12/21 警告対応 ----------<<<<<

        // --- ADD 2010/08/05 ----->>>>>
        /// <summary>車台番号</summary>
        private string _srSearchFrameNo = string.Empty;
        /// <summary>車台番号(*抜き文字列)</summary>
        private string _srRvSearchFrameNo = string.Empty;
        // --- ADD 2010/08/05 -----<<<<<
        /// <summary>備考２</summary>
        private string _srSlipNote2 = string.Empty;
        /// <summary>備考２(*抜き文字列)</summary>
        private string _srRvSlipNote2 = string.Empty;
        /// <summary>備考３</summary>
        private string _srSlipNote3 = string.Empty;
        /// <summary>備考３(*抜き文字列)</summary>
        private string _srRvSlipNote3 = string.Empty;
        /// <summary>UOEリマーク1</summary>
        private string _srUOERemark1 = string.Empty;
        /// <summary>UOEリマーク1(*抜き文字列)</summary>
        private string _srRvUOERemark1 = string.Empty;
        /// <summary>UOEリマーク2</summary>
        private string _srUOERemark2 = string.Empty;
        /// <summary>UOEリマーク2(*抜き文字列)</summary>
        private string _srRvUOERemark2 = string.Empty;
        /// <summary>品名</summary>
        private string _srGoodsName = string.Empty;
        /// <summary>品名(*抜き文字列)</summary>
        private string _srRvGoodsName = string.Empty;
        /// <summary>品番</summary>
        private string _srGoodsNo = string.Empty;
        /// <summary>品番(*抜き文字列)</summary>
        private string _srRvGoodsNo = string.Empty;
        /// <summary>明細備考</summary>
        private string _srDtlNote = string.Empty;
        /// <summary>明細備考(*抜き文字列)</summary>
        private string _srRvDtlNote = string.Empty;
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
        /// <summary>棚番</summary>
        private string _srWarehouseShelfNo = string.Empty;
        /// <summary>棚番(*抜き文字列)</summary>
        private string _srRvWarehouseShelfNo = string.Empty;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

        // **** コード←→名称を切り替える項目用 ****
        /// <summary>担当者コード</summary>
        private string _swSalesEmployeeCd = string.Empty;
        /// <summary>担当者名</summary>
        private string _swSalesEmployeeName = string.Empty;
        /// <summary>受注者</summary>
        private string _swFrontEmployeeCd = string.Empty;
        /// <summary>受注者名</summary>
        private string _swFrontEmployeeName = string.Empty;
        /// <summary>発行者コード</summary>
        private string _swSalesInputCode = string.Empty;
        /// <summary>発行者名</summary>
        private string _swSalesInputName = string.Empty;
        /// <summary>BLグループコード</summary>
        private int _swBLGroupCode = 0;
        /// <summary>BLグループ名</summary>
        private string _swBLGroupName = string.Empty;
        /// <summary>BLコード</summary>
        private int _swBLGoodsCode = 0;
        /// <summary>BLコード名</summary>
        private string _swBLGoodsName = string.Empty;
        /// <summary>メーカーコード</summary>
        private int _swGoodsMakerCd = 0;
        /// <summary>メーカー名</summary>
        private string _swGoodsMakerName = string.Empty;
        /// <summary>販売区分</summary>
        private int _swSalesCode = 0;
        /// <summary>販売区分名</summary>
        private string _swSalesName = string.Empty;
        /// <summary>自社区分</summary>
        private int _swEnterpriseGanreCode = 0;
        /// <summary>自社区分名</summary>
        private string _swEnterpriseGanreName = string.Empty;
        /// <summary>倉庫コード</summary>
        private string _swWarehouseCd = string.Empty;
        /// <summary>倉庫名</summary>
        private string _swWarehouseName = string.Empty;
        /// <summary>仕入先コード</summary>
        private int _swSupplierCd = 0;
        /// <summary>仕入先名</summary>
        private string _swSupplierName = string.Empty;
        /// <summary>発注先コード</summary>
        private int _swUOESupplierCd = 0;
        /// <summary>発注先名</summary>
        private string _swUOESupplierName = string.Empty;
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
        /// <summary>納入先コード</summary>
        private int _swAddresseeCode = 0;
        /// <summary>納入先名</summary>
        private string _swAddresseeName = string.Empty;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
        /// <summary>商品大分類コード</summary>
        private int _swGoodsLGroup = 0;
        /// <summary>商品中分類コード</summary>
        private int _swGoodsMGroup = 0;
        /// <summary>商品大分類名称</summary>
        private string _swGoodsLGroupName = string.Empty;
        /// <summary>商品中分類名称</summary>
        private string _swGoodsMGroupName = string.Empty;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

        /// <summary>削除指定区分</summary>
        private int _logicalDelDiv = 0;

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
        /// <summary>売上全体設定</summary>
        private SalesTtlSt _salesTtlSt;

        //----ADD 2010/12/20----->>>>>
        private AcptAnOdrTtlSt _acptAnOdrTtlSt;
        //----ADD 2010/12/20-----<<<<<

        /// <summary>前回入力値</summary>
        private PrevInputValue _prevInputValue;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/11 ADD
        /// <summary>赤伝グリッド前回セル</summary>
        private Infragistics.Win.UltraWinGrid.UltraGridCell _prevCellInRedSlip = null;
        /// <summary>赤伝グリッド前回入力倉庫コード</summary>
        private string _prevWarehouseCodeOfRedSlip = string.Empty;
        /// <summary>赤伝グリッド倉庫未取得エラーフラグ</summary>
        private bool _cannotWarehouseCodeOfRedSlipRead = false;
        /// <summary>赤伝グリッド前回入力返品数</summary>
        private double _prevReturnCntOfRedSlip;
        /// <summary>赤伝グリッド前回入力単価</summary>
        private double _prevSalesUnitPriceOfRedSlip;
        /// <summary>赤伝グリッド返品数入力エラーフラグ</summary>
        private bool _cannotReturnCntOfRedSlipInput = false;
        /// ---------- ADD 2012/08/22 ----------<<<<<
        /// <summary>赤伝グリッド仕入伝票番号入力エラーフラグ</summary>
        private bool _cannotStockPartySaleSlipNum = false;
        /// ---------- ADD 2012/08/22 ----------<<<<<
        /// <summary>赤伝合計金額（手数料算出用）</summary>
        private long _redSlipTotalPrice;
        /// <summary>赤伝在庫金額（手数料算出用）</summary>
        private long _redSlipStockPrice;
        // --- ADD 2009/11/25 ---------->>>>>
        /// <summary>赤伝グリッド前回入力金額</summary>
        private long _preSalesMoney = 0;
        // --- ADD 2009/11/25 ----------<<<<<
        /// <summary>赤伝手数料率 取寄</summary>
        private double _feePercent01;
        /// <summary>赤伝手数料率 在庫</summary>
        private double _feePercent02;
        /// <summary>赤伝手数料率 合計</summary>
        private double _feePercentTotal;
        /// <summary>赤伝手数料額 合計</summary>
        private long _feeAmountTotal;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/11 ADD
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 ADD
        /// <summary>中断ダイアログ</summary>
        private SFCMN00299CA _processingDialog = null;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 ADD

        // **** コントロール ****
        private Control _prevControl;
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        // グリッドからの戻り先コントロール(詳細条件の中のControl)
        private Control _gridUpKeyBackControl;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
        // **** グリッド表示用 ****
        // 結合セルの表示設定
        private Infragistics.Win.Appearance _margedCellAppearance;
        // 伝票グリッドカラム制御
        private GridColPosFixController _slipGridColPosCtrl;
        // 明細グリッドカラム制御
        private GridColPosFixController _detailGridColPosCtrl;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/16 ADD
        // グリッド・カラムチューザー制御
        GridColumnChooserControl _gridColumnChooserControl;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/16 ADD

        private bool tabFlg = true;

        // --- ADD 2009/11/25 ---------->>>>>
        // 赤伝発行がキャンセルされた場合は、データの再抽出flag
        private bool _searchSlipFlag = true;
        // 赤伝発行ボタン表示フラグ
        private bool _redSlipBottonFlag = false;
        /// <summary>赤伝グリッド明細行金額の保存</summary>
        private Dictionary<int, long> redMoney = new Dictionary<int, long>();
        private Dictionary<int, long> redStockMoney = new Dictionary<int, long>();
        // --- ADD 2009/11/25 ----------<<<<<

        // 2010/02/22 Add >>>
        private IOperationAuthority _operationAuthority;    // 操作権限の制御オブジェクト
        private Dictionary<OperationCode, bool> _operationAuthorityList;  // 操作権限の制御リスト(直接参照すると遅いのでディクショナリ化)
        // 2010/02/22 Add <<<

        // ------------ADD 2010/01/29------------->>>>>
        //発行した赤伝の先頭の明細の元黒伝票番号
        private string _searchSalesSlipNum = string.Empty;
        // ------------ADD 2010/01/29-------------<<<<<

        // ---ADD 2011/01/31------------>>>>
        // マウスで赤伝タブに移動した、エラーの場合、フォーカス設定用
        private Control _control = null;
        // ---ADD 2011/01/31------------<<<<
        private TextOutPutOprtnHisLogAcs TextOutPutOprtnHisLogAcsObj = null;// ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応
        // --- DEL 2012/09/20 三戸 №35の戻し --------->>>>>>>>>>>>>>>>>>>>>>>>
        //// ADD 2012/07/11 №35 T.Yoshioka ------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        ///// <summary>
        ///// 問合せ番号
        ///// </summary>
        //private long inquiryNumber = 0;
        //// ADD 2012/07/11 №35 T.Yoshioka -------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        // --- DEL 2012/09/20 三戸 №35の戻し ---------<<<<<<<<<<<<<<<<<<<<<<<<

        #endregion // プライベート変数

        #region プライベート定数

        /// <summary>あいまい検索「と一致」ステータス</summary>
        private const int CT_FUZZY_MATCHWITH = 0;
        /// <summary>あいまい検索「で始る」ステータス</summary>
        private const int CT_FUZZY_STARTWITH = 1;
        /// <summary>あいまい検索「を含む」ステータス</summary>
        private const int CT_FUZZY_INCLUDEWITH = 2;
        /// <summary>あいまい検索「で終る」ステータス</summary>
        private const int CT_FUZZY_ENDWITH = 3;

        /// <summary>仕入先電子元帳PGID</summary>
        private const string CT_SUPPLIER_ERECNOTE_PGID = "PMKOU04001U";
        /// <summary>得意先電子元帳PGID</summary>
        private const string CT_CUSTOMER_ERECNOTE_PGID = "PMKAU04001U";
        // ------------ADD 2010/06/08-------------->>>>>
        /// <summary>得意先電子元帳アセンブリID</summary>
        private const string ctAssemblyName = "PMKAU04001UA";
        // ------------ADD 2010/06/08--------------<<<<<
        private const string SP_SALESCODE = "特販区分";// ADD K2013/01/23  鄧潘ハン
        /// <summary>表示列数</summary>
        private const int CT_INITIAL_ROW_COUNT = 3;
        /// <summary>初期表示位置 左上X</summary>
        private const int CT_INITIAL_FIELD_POSITION_X = 13;
        /// <summary>初期表示位置 左上Y</summary>
        private const int CT_INITIAL_FIELD_POSITION_Y = 3;
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>表示間隔 余白</summary>
        //private const int CT_FIELD_INTERVAL_X = 10;
        ///// <summary>表示間隔：ラベル</summary>
        //private const int CT_INTERVAL_LABEL = 106;
        ///// <summary>表示間隔：コンボボックス</summary>
        //private const int CT_INTERVAL_COMBOBOX = 170;
        ///// <summary>表示間隔：入力域(tNedit/tEdit)(付属コントロールなし)</summary>
        //private const int CT_INTERVAL_EDIT = 170;
        ///// <summary>表示間隔：入力域(tNedit/tEdit)(ボタンあり)</summary>
        //private const int CT_INTERVAL_EDIT_WITHBUTTON = 136;
        ///// <summary>表示間隔：入力域(tNedit/tEdit)(あいまい検索あり)</summary>
        //private const int CT_INTERVAL_EDIT_WITHCOMBO = 76;
        ///// <summary>表示間隔：ボタン</summary>
        //private const int CT_INTERVAL_BUTTON = 34;
        ///// <summary>表示間隔：あいまい検索用コンボボックス</summary>
        //private const int CT_INTERVAL_FUZZYCOMBO = 94;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>表示間隔 余白</summary>
        private const int CT_FIELD_INTERVAL_X = 10;
        private const int CT_FIELD_INTERVAL_X2 = 25; // ADD 2011/11/29 zhume Redmine#8382
        private const int CT_FIELD_INTERVAL_X3 = 0;  // ADD 2012/08/22
        /// <summary>表示間隔：ラベル</summary>
        private const int CT_INTERVAL_LABEL = 106;
        /// <summary>表示間隔：コンボボックス</summary>
        private const int CT_INTERVAL_COMBOBOX = 200;
        /// <summary>表示間隔：入力域(tNedit/tEdit)(付属コントロールなし)</summary>
        private const int CT_INTERVAL_EDIT = 200;
        /// <summary>表示間隔：入力域(tNedit/tEdit)(ボタンあり)</summary>
        private const int CT_INTERVAL_EDIT_WITHBUTTON = 175;
        /// <summary>表示間隔：入力域(tNedit/tEdit)(あいまい検索あり)</summary>
        private const int CT_INTERVAL_EDIT_WITHCOMBO = 124;
        /// <summary>表示間隔：ボタン</summary>
        private const int CT_INTERVAL_BUTTON = 25;
        /// <summary>表示間隔：あいまい検索用コンボボックス</summary>
        private const int CT_INTERVAL_FUZZYCOMBO = 76;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
        /// <summary>表示間隔：行</summary>
        private const int CT_INTERVAL_HEIGHT = 26;
        /// <summary>表示：初期フォントサイズ</summary>
        private const int CT_DEF_FONT_SIZE = 11;
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
        private const string SLIPHEADERCOPY_XML_FILE_NAME = "SalesSlipHeaderCopy_PMKAU04000U.xml";
        private const string SALESDTLCOPY_XML_FILE_NAME = "SalesDetailCopy_PMKAU04000U.xml";   // ADD 連番729 2011/08/18
        private const string ENCRYPTION_KEY = "44965615-3203-47ac-a6b0-ea8191390f0b";
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD
        
        private const int CT_GOODSREASON_LENGTH = 100; // ADD BY LIUSY 2013/09/18 #40275
        private const int CT_SLIPNOTE_LENGTH = 30;     // ADD BY LIUSY 2013/09/18 #40275

        //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
        /// <summary>車種メーカーコードクラムの名</summary>
        private const string CL_CARMAKERCODE_NAME = "MakerCode";
        //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
        ///// <summary>車種クラムの名</summary>
        //private const string CL_CARMODELFULLNAME_NAME = "ModelFullName";
        //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<<
        //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<

        // ---- ADD K2015/04/29 陳亮 テキスト出力項目に第二売価を追加する---->>>>>
        /// <summary>第二売価クラムの名</summary>
        private const string CL_SECONDSALEPRICE_NAME = "SecondSalePrice";
        // ---- ADD K2015/04/29 陳亮 テキスト出力項目に第二売価を追加する ----<<<<<

        // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
        /// <summary>伝票区分SelectedIndex(受注)</summary>
        private const int CT_SELECTEDINDEX_ACCEPTANORDER = 4;
        /// <summary>伝票区分SelectedIndex(貸出)</summary>
        private const int CT_SELECTEDINDEX_SHIPMENT = 5;
        // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<
        #endregion // プライベート定数

        #region メッセージ定数

        /// <summary>検索時メッセージ「売上データの取得に失敗しました。」</summary>
        private const string MSG_FAILED2GET_SLIP_DATA = "売上データの取得に失敗しました。";

        /// <summary>検索時メッセージ「残高データの取得に失敗しました。」</summary>
        private const string MSG_FAILED2GET_BALANCE_DATA = "残高データの取得に失敗しました。";

        /// <summary>検索時メッセージ「条件に合致するデータが存在しません。」</summary>
        private const string MSG_MATCHED_DATA_NOT_FOUND = "条件に合致するデータが存在しません。";

        /// <summary>検索時メッセージ「指定された得意先の締め日が取得できません。」</summary>
        private const string MSG_TOTAL_DAY_NOT_FOUND_CUSTOMER = "指定された得意先の締め日が取得できません。";

        /// <summary>検索時メッセージ「指定された請求先の締め日が取得できません。」</summary>
        private const string MSG_TOTAL_DAY_NOT_FOUND_CLAIM = "指定された請求先の締め日が取得できません。";

        // --- ADD m.suzuki 2010/07/21 ---------->>>>>
        /// <summary>検索時メッセージ「抽出可能件数を超えました。抽出条件を変更し、処理し直して下さい。」</summary>
        private const string MSG_EXTRACT_DATA_ERROR = "抽出可能件数を超えました。抽出条件を変更し、処理し直して下さい。";
        // --- ADD m.suzuki 2010/07/21 ----------<<<<<

        /// <summary>チェック時メッセージ「……は入力必須項目です。」</summary>
        private const string MSG_ITEM_MUST_BE_INPUT = " は入力必須項目です。";

        /// <summary>チェック時メッセージ「……は入力することをお勧めします。」</summary>
        private const string MSG_ITEM_SHOULD_BE_INPUT = " は入力することをお勧めします。";

        /// <summary>チェック時メッセージ「開始日を終了日よりも後にすることはできません。」</summary>
        private const string MSG_MUST_BE_CORRECT_CALENDER = "開始日を終了日よりも後にすることはできません。";

        /// <summary>チェック時メッセージ「一年以上の期間を指定することはできません。」</summary>
        private const string MSG_MUST_BE_IN_A_YEAR = "一年以上の期間を指定することはできません。";

        /// <summary>確認メッセージ「処理を続行しますか？」</summary>
        private const string MSG_SHALL_WE_CONTINUE = "処理を続行しますか？";

        /// <summary>チェック時メッセージ「赤伝発行では同一拠点かつ同一得意先の明細以外は同時に選択できません。」</summary>
        private const string MSG_RS_CANNOT_SELECT_NOT_SAME_TARGET = "赤伝発行では同一拠点かつ同一得意先の明細以外は同時に選択できません。";

        /// <summary>チェック時メッセージ「売上月次締日取得の初期処理でエラーが発生しました。」</summary>
        private const string MSG_TOTALDAY_INITIALIE_FAILED = "売上月次締日取得の初期処理でエラーが発生しました。";

        /// <summary>確認時メッセージ「表示内容をテキスト出力します。よろしいですか？」</summary>
        private const string MSG_CONFIRM_OUTPUTFILE = "表示内容をテキスト出力します。\r\nよろしいですか？";

        /// <summary>チェック時メッセージ「出力ファイル名が指定されていません。設定ボタンから設定を行ってください。」</summary>
        private const string MSG_OUTPUTFILENAME_NOTFOUND = "出力ファイル名が指定されていません。設定ボタンから設定を行ってください。";

        /// <summary>チェック時メッセージ「ファイルへの出力に失敗しました。」</summary>
        private const string MSG_OUTPUTFILE_FAILED = "ファイルへの出力に失敗しました。";

        /// <summary>テキストエクスポート成功時メッセージ「 行のデータをファイルへ出力しました。」</summary>
        private const string MSG_OUTPUTFILE_SUCCEEDED = "行のデータをファイルへ出力しました。";

        /// <summary>チェック時メッセージ「出力ファイル名が指定されていません。」</summary>
        private const string MSG_OUTPUTEXCEL_NOFILENAME = "出力ファイル名が指定されていません。";

        /// <summary>EXCELエクスポート成功時メッセージ「EXCELデータを出力しました。」</summary>
        private const string MSG_OUTPUTEXCEL_SUCCEEDED = "EXCELデータを出力しました。";

        /// <summary>検索時メッセージ「指定された文字列が存在する行はありません。」</summary>
        private const string MSG_ROWSEARCH_NOT_FOUND = "指定された文字列が存在する行はありません。";

        /// <summary>印刷時メッセージ「印刷対象となる明細が存在しません。」</summary>
        private const string MSG_NO_SELECTED_DATA = "印刷対象となる明細が存在しません。";

        // ---ADD 2009/02/10 -------------------------------------------------------------------------------->>>>>
        /// <summary>チェック時メッセージ「赤伝発行対象となる明細が存在しません。」</summary>
        private const string MSG_RS_NO_SELECTED_DATA = "赤伝発行対象となる明細が存在しません。";
        // ---ADD 2009/02/10 --------------------------------------------------------------------------------<<<<<
        // --- ADD 2009/02/19 -------------------------------->>>>>
        /// <summary>チェック時メッセージ「売上日が前回締処理日以前となっている為、発行できません。」</summary>
        private const string MSG_RS_SALESDATE_DMD_ERROR = "売上日が前回締処理日以前となっている為、発行できません。";
        /// <summary>チェック時メッセージ「売上日が前回月次更新日以前になっている為、発行できません。」</summary>
        private const string MSG_RS_SALESDATE_MONTHLY_ERROR = "売上日が前回月次処理日以前になっている為、発行できません。";
        // --- ADD 2009/02/19 --------------------------------<<<<<
        // --- ADD 2009/02/20 -------------------------------->>>>>
        /// <summary>チェック時メッセージ「売上日が前回仕入締処理日以前となっている為、発行できません。」</summary>
        private const string MSG_RS_SALESDATE_DMDSUP_ERROR = "売上日が前回仕入締処理日以前となっている為、発行できません。";
        /// <summary>チェック時メッセージ「売上日が前回仕入月次更新日以前になっている為、発行できません。」</summary>
        private const string MSG_RS_SALESDATE_MONTHLYSUP_ERROR = "売上日が前回仕入月次処理日以前になっている為、発行できません。";
        // --- ADD 2009/02/20 --------------------------------<<<<<

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
        /// <summary>チェック時メッセージ「開始売上日が不正です」</summary>
        private const string MSG_ST_SALESDATE_ERROR = "開始売上日が不正です。";
        /// <summary>チェック時メッセージ「終了売上日が不正です」</summary>
        private const string MSG_ED_SALESDATE_ERROR = "終了売上日が不正です。";
        /// <summary>チェック時メッセージ「売上日は３ヶ月の範囲内で入力して下さい。」</summary>
        private const string MSG_SALESDATE_RANGE_ERROR = "売上日は３ヶ月の範囲内で入力して下さい。";
        /// <summary>チェック時メッセージ「開始入力日が不正です」</summary>
        private const string MSG_ST_INPUTDATE_ERROR = "開始入力日が不正です。";
        /// <summary>チェック時メッセージ「終了入力日が不正です」</summary>
        private const string MSG_ED_INPUTDATE_ERROR = "終了入力日が不正です。";
        // ------------ADD 2009/12/28------------->>>>>
        /// <summary>チェック時メッセージ「入力日は３ヶ月の範囲内で入力して下さい。」</summary>
        private const string MSG_INPUTDATE_RANGE_ERROR = "入力日は３ヶ月の範囲内で入力して下さい。";
        // ------------ADD 2009/12/28-------------<<<<<
        /// <summary>チェック時メッセージ「開始年月が不正です」</summary>
        private const string MSG_ST_YM_ERROR = "開始年月が不正です。";
        /// <summary>チェック時メッセージ「終了年月が不正です」</summary>
        private const string MSG_ED_YM_ERROR = "終了年月が不正です。";
        /// <summary>赤伝発行時確認メッセージ「赤伝発行してよろしいですか？」</summary>
        private const string MSG_CONFIRM_REDSLIP = "赤伝発行してよろしいですか？";
        /// <summary>クリア確認メッセージ「表示内容を初期化してよろしいですか？」</summary>
        private const string MSG_CONFIRM_CLEARINPUT = "表示内容を初期化してよろしいですか？";
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 ADD
        /// <summary>明細データ抽出最大件数</summary>
        private const long DATA_COUNT_MAX = 20000;
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 ADD

        // --- ADD 2009/11/25 ---------->>>>>
        /// <summary>発行確認用メッセージ「伝票を再発行してよろしいですか」</summary>
        private const string MSG_CONFIRM_PRINTDISP = "伝票を再発行してよろしいですか？";
        // --- ADD 2009/11/25 ----------<<<<<

        //----- ADD 2015/02/05 王亜楠 -------------------->>>>>
        /// <summary>分割の日数：初期値 11</summary>
        private const int CT_LOOPDAYS = 11;
        //----- ADD 2015/02/05 王亜楠 --------------------<<<<<

        //----- ADD　2018/09/04 譚洪　履歴自動表示の対応------->>>>>
        /// <summary>売上伝票入力PGID</summary>
        private const string CT_SALESSLIP_PGID = "MAHNB01001U";
        /// <summary>検索時メッセージ</summary>
        private const string MSG_SALESSLIP_INPUT = "売上伝票入力で、検索条件となる項目が入力されていません。\r\n{0}を入力してください。";
        /// <summary>基本条件 または 抽出条件に「品番」を選択するのチェック</summary>
        private const string MSG_SALESSLIP = "得意先電子元帳で、品番が条件に設定されていないため、\r\n「履歴検索」はできません。"
                                                 + "\r\n「履歴検索」を実施する場合は、得意先電子元帳の基本条件または\r\n抽出条件に品番を追加してください。";
        /// <summary>拠点</summary>
        private const string MSG_SECTION = "拠点";
        /// <summary>得意先</summary>
        private const string MSG_CUSTOMER = "得意先";
        /// <summary>品番</summary>
        private const string MSG_GOODNO = "品番";
        /// <summary>、</summary>
        private const string CT_SIGN = "、";
        //----- ADD　2018/09/04 譚洪　履歴自動表示の対応-------<<<<<

        //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
        // 最初から
        private const string StartStr = "最初から";
        // 最後まで
        private const string EndStr = "最後まで";
        // アセンブリ名
        private const string AssemblyNm = "得意先電子元帳";
        // メソッド名
        private const string MethodNm = "exportIntoTextFile";
        private const string MethodNm2 = "exportIntoTextFile2";
        private const string MethodNm3 = "outputTextData";
        private const string MethodNm4 = "outputExcelData";
        private const string MethodNm5 = "exportIntoExcelData";
        // 画面条件
        private const string MenuCon = "ファイル名:{0},出力パターン選択:{1}";
        // 元帳残高一覧テキスト出力条件
        private const string BalanceCon = "残高種別:{0},抽出拠点:{1},拠点:{2} ～ {3},得意先:{4} ～ {5},対象年月:{6} ～ {7},与信残高の出力:{8},出力ファイル名:{9}";
        // Excel出力条件
        private const string ExcelCon = "ファイル名:{0}";
        private const string Conditions = "拠点:{0},売上日:{1} ～ {2},得意先:{3}";
        // 出力件数
        private const string CountNumStr = "データ出力件数:{0},";
        // コンマ
        private const string Comma = ",";
        //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<

        #endregion // メッセージ定数

        #region ガイド用定数

        /// <summary>備考ガイド区分コード１</summary>
        public static readonly int CT_DIVCODE_NOTEGUIDEDIVCD_1 = 101;   //伝票備考１
        /// <summary>備考ガイド区分コード２</summary>
        public static readonly int CT_DIVCODE_NOTEGUIDEDIVCD_2 = 102;   //伝票備考２
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
        public static readonly int CT_DIVCODE_NOTEGUIDEDIVCD_3 = 106;   //伝票備考３
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD

        // --- ADD 2009/09/07 ---------->>>>>
        public static readonly int CT_DIVCODE_NOTEGUIDEDIVCD_4 = 201;   //車輌備考
        // --- ADD 2009/09/07 ----------<<<<<

        /// <summary>ユーザーガイド区分コード（返品理由）</summary>
        public static readonly int CT_DIVCODE_USERGUIDEDIVCD_RETGOODSREASON = 91;
        /// <summary>ユーザーガイド区分コード（納品区分）</summary>
        public static readonly int CT_DIVCODE_USERGUIDEDIVCD_DELIVEREDGOODSDIV = 48;

        #endregion // ガイド用定数

        #region 各種設定値

        /// <summary>伝票一覧グリッド 選択行カラー(グラデーションcolor1)</summary>
        private readonly Color _selectedRowBackColor_Slip = Color.FromArgb(216, 235, 253);

        /// <summary>伝票一覧グリッド 選択行カラー(グラデーションcolor2)</summary>
        private readonly Color _selectedRowBackColor2_Slip = Color.FromArgb(101, 144, 218);

        /// <summary>明細グリッド 選択行カラー(グラデーションcolor1)</summary>
        private readonly Color _selectedRowBackColor_Detail = Color.FromArgb(253, 235, 216);

        /// <summary>明細グリッド 選択行カラー(グラデーションcolor2)</summary>
        private readonly Color _selectedRowBackColor2_Detail = Color.FromArgb(218, 144, 101);

        /// <summary>グリッド 赤伝返品 前景カラー</summary>
        private readonly Color _RedSlipRowForeColor = Color.FromArgb(255, 0, 0);

        /// <summary>グリッド 赤伝返品 背景カラー</summary>
        private readonly Color _RedSlipRowBackColor = Color.FromArgb(253, 235, 216);

        /// <summary>グリッド 受注 前景カラー</summary>
        private readonly Color _OrdersRowForeColor = Color.FromArgb(0, 150, 0);

        /// <summary>グリッド 受注 背景カラー</summary>
        private readonly Color _OrdersRowBackColor = Color.FromArgb(150, 255, 150);

        /// <summary>グリッド 出荷 前景カラー</summary>
        private readonly Color _ShippingRowForeColor = Color.FromArgb(0, 0, 255);

        /// <summary>グリッド 出荷 背景カラー</summary>
        private readonly Color _ShippingRowBackColor = Color.FromArgb(216, 235, 253);

        /// <summary>グリッド 入金 前景カラー</summary>
        private readonly Color _DepositRowForeColor = Color.FromArgb(0, 0, 150);

        /// <summary>グリッド 入金 背景カラー</summary>
        private readonly Color _DepositRowBackColor = Color.FromArgb(200, 200, 253);

        /// <summary>選択タブ 背景カラー</summary>
        private readonly Color _SelectedTabBackColor1 = Color.FromArgb(198, 219, 255);

        /// <summary>選択タブ 背景カラー2</summary>
        private readonly Color _SelectedTabBackColor2 = Color.CornflowerBlue;

        /// <summary>非選択タブ 背景カラー</summary>
        private readonly Color _UnSelectedTabBackColor1 = Color.FromArgb(222, 239, 255);

        /// <summary>非選択タブ 背景カラー2</summary>
        private readonly Color _UnSelectedTabBackColor2 = Color.LightSteelBlue;

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
        /// <summary>赤伝グリッド入力不可セル背景色</summary>
        private readonly Color _CellReadOnlyColor = Color.FromArgb(255, 255, 220);
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 ADD
        /// <summary>単価、原価背景色</summary>
        private static readonly Color _CellReadOnlyColor2 = Color.FromArgb(210, 255, 210);


        #endregion // 各種設定値

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
        # region 構造体
        # region [前回値保持]
        /// <summary>
        /// 前回値保持
        /// </summary>
        private struct PrevInputValue
        {
            /// <summary>拠点コード</summary>
            private string _sectionCode;
            /// <summary>得意先コード</summary>
            private int _customerCode;
            /// <summary>請求先コード</summary>
            private int _claimCode;
            // ----------ADD 2009/12/28--------->>>>>
            /// <summary>請求先略称</summary>
            private string _claimName;
            // ----------ADD 2009/12/28---------<<<<<
            /// <summary>赤伝入力担当者コード</summary>
            private string _redInputEmployeeCd;
            /// <summary>赤伝伝票区分コード</summary>
            private int _redSalesSlipCd;
            // ----------ADD 2010/01/29--------->>>>>
            /// <summary>赤伝備考コード1</summary>
            private int _slipNoteCd1;
            /// <summary>赤伝備考1名称</summary>
            private string _slipNoteName1;
            /// <summary>赤伝備考コード2</summary>
            private int _slipNoteCd2;
            /// <summary>赤伝備考2名称</summary>
            private string _slipNoteName2;
            /// <summary>赤伝備考コード3</summary>
            private int _slipNoteCd3;
            /// <summary>赤伝備考3名称</summary>
            private string _slipNoteName3;
            /// <summary>返品理由コード</summary>
            private int _retGoodsReasonCd;
            /// <summary>返品理由名称</summary>
            private string _retGoodsReasonName;
            // ----------ADD 2010/01/29---------<<<<<
            // ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
            /// <summary>売上開始日</summary>
            private DateTime _salesDateSt;
            /// <summary>売上終了日</summary>
            private DateTime _salesDateEd;
            /// <summary>拠点コード残高集計制御用</summary>
            private string _sectionCodeBalance;
            /// <summary>得意先コード残高集計制御用</summary>
            private int _customerCodeBalance;
            // ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<
            /// <summary>
            /// 拠点コード
            /// </summary>
            public string SectionCode
            {
                get { return _sectionCode; }
                set { _sectionCode = value; }
            }
            /// <summary>
            /// 得意先コード
            /// </summary>
            public int CustomerCode
            {
                get { return _customerCode; }
                set { _customerCode = value; }
            }
            /// <summary>
            /// 請求先コード
            /// </summary>
            public int ClaimCode
            {
                get { return _claimCode; }
                set { _claimCode = value; }
            }
            // ---------ADD 2009/12/28--------->>>>>
            /// <summary>
            /// 請求先略称
            /// </summary>
            public string ClaimName
            {
                get { return _claimName; }
                set { _claimName = value; }
            }
            // ---------ADD 2009/12/28---------<<<<<
            /// <summary>
            /// 赤伝入力担当者コード
            /// </summary>
            public string RedInputEmployeeCd
            {
                get { return _redInputEmployeeCd; }
                set { _redInputEmployeeCd = value; }
            }
            /// <summary>
            /// 赤伝伝票区分コード
            /// </summary>
            public int RedSalesSlipCd
            {
                get { return _redSalesSlipCd; }
                set { _redSalesSlipCd = value; }
            }

            // ---------ADD 2010/01/29--------->>>>>
            /// <summary>
            /// 赤伝備考コード1
            /// </summary>
            public int SlipNoteCd1
            {
                get { return _slipNoteCd1; }
                set { _slipNoteCd1 = value; }
            }
            /// <summary>
            /// 赤伝備考1名称
            /// </summary>
            public string SlipNoteName1
            {
                get { return _slipNoteName1; }
                set { _slipNoteName1 = value; }
            }
            /// <summary>
            /// 赤伝備考コード2
            /// </summary>
            public int SlipNoteCd2
            {
                get { return _slipNoteCd2; }
                set { _slipNoteCd2 = value; }
            }
            /// <summary>
            /// 赤伝備考2名称
            /// </summary>
            public string SlipNoteName2
            {
                get { return _slipNoteName2; }
                set { _slipNoteName2 = value; }
            }
            /// <summary>
            /// 赤伝備考コード3
            /// </summary>
            public int SlipNoteCd3
            {
                get { return _slipNoteCd3; }
                set { _slipNoteCd3 = value; }
            }
            /// <summary>
            /// 赤伝備考3名称
            /// </summary>
            public string SlipNoteName3
            {
                get { return _slipNoteName3; }
                set { _slipNoteName3 = value; }
            }
            /// <summary>
            /// 返品理由コード
            /// </summary>
            public int RetGoodsReasonCd
            {
                get { return _retGoodsReasonCd; }
                set { _retGoodsReasonCd = value; }
            }
            /// <summary>
            /// 返品理由名称
            /// </summary>
            public string RetGoodsReasonName
            {
                get { return _retGoodsReasonName; }
                set { _retGoodsReasonName = value; }
            }
            // ---------ADD 2010/01/29---------<<<<<
            // ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
            /// <summary>
            /// 売上開始日
            /// </summary>
            public DateTime SalesDateSt
            {
                get { return _salesDateSt; }
                set { _salesDateSt = value; }
            }
            /// <summary>
            /// 売上終了日
            /// </summary>
            public DateTime SalesDateEd
            {
                get { return _salesDateEd; }
                set { _salesDateEd = value; }
            }
            /// <summary>
            /// 拠点コード残高集計制御用
            /// </summary>
            public string SectionCodeBalance
            {
                get { return _sectionCodeBalance; }
                set { _sectionCodeBalance = value; }
            }
            /// <summary>
            /// 得意先コード残高集計制御用
            /// </summary>
            public int CustomerCodeBalance
            {
                get { return _customerCodeBalance; }
                set { _customerCodeBalance = value; }
            }
            // ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<
        }
        # endregion
        # endregion
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD

        #region プロパティ

        // 2010/02/22 Add >>>
        /// <summary>操作権限の制御オブジェクト</summary>
        private IOperationAuthority MyOpeCtrl
        {
            get
            {
                if (_operationAuthority == null)
                {
                    _operationAuthority = OpeAuthCtrlFacade.CreateReferenceOperationAuthority("PMKAU04000U", this);
                }
                return _operationAuthority;
            }
        }
        /// <summary>操作権限の制御リスト</summary>
        private Dictionary<OperationCode, bool> OpeAuthDictionary
        {
            get
            {
                if (_operationAuthorityList == null)
                {
                    _operationAuthorityList = new Dictionary<OperationCode, bool>();
                    _operationAuthorityList.Add(OperationCode.TextOut, !MyOpeCtrl.Disabled((int)OperationCode.TextOut));
                    _operationAuthorityList.Add(OperationCode.ExcelOut, !MyOpeCtrl.Disabled((int)OperationCode.ExcelOut));
                    _operationAuthorityList.Add(OperationCode.RedSlip, !MyOpeCtrl.Disabled((int)OperationCode.RedSlip));
                    _operationAuthorityList.Add(OperationCode.ReissueSlip, !MyOpeCtrl.Disabled((int)OperationCode.ReissueSlip)); // ADD 2010/05/04
                    _operationAuthorityList.Add(OperationCode.DeleteFlag, !MyOpeCtrl.Disabled((int)OperationCode.DeleteFlag)); // ADD 陳健 K2014/02/06
                }
                return _operationAuthorityList;
            }
        }
        // 2010/02/22 Add <<<

        #endregion

        #region 赤伝関係

        /// <summary>入力モード（赤伝）</summary>
        public static readonly int ctINPUTMODE_SalesSlip_Red = 2;

        /// <summary>売上伝票番号初期値</summary>
        public static readonly string ctDefaultSalesSlipNum = "".PadLeft(9, '0');

        #endregion // 赤伝関係

        #region コンストラクタ

        /// <summary>
        /// コンストラクタ
        /// </summary>
        /// <br>Update Note: K2013/01/23 鄧潘ハン </br>
        /// <br>           : 特販区分を追加することの登戸個別対応</br>
        /// <br>UpdateNote : 2015/02/05 王亜楠 </br>
        /// <br>           : テキスト出力件数制限なしモードの追加</br>
        /// <br>UpdateNote : 2015/02/25 王亜楠 Redmine#44701 No.1 </br>
        /// <br>           : テキスト出力件数制限なし位置の調整</br>
        public PMKAU04001UA()
        {
            InitializeComponent();

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
            // 設定フォーム生成
            _settingForm = new PMKAU04004UA();
            _settingForm.ClearSettingSlipGrid += new EventHandler(SettingForm_ClearSettingSlipGrid);
            _settingForm.ClearSettingDetailGrid += new EventHandler(SettingForm_ClearSettingDetailGrid);
            _settingForm.ClearSettingRedSlipGrid += new EventHandler(SettingForm_ClearSettingRedSlipGrid);
            _settingForm.ClearSettingBalanceGrid += new EventHandler(SettingForm_ClearSettingBalanceGrid);
            _settingForm.TextOutputEvent += new EventHandler(SettingForm_TextOutputEvent); // ADD 2015/02/05 王亜楠

            // 設定読み込み
            _settingForm.Deserialize();

            // グリッド内の結合セル設定
            _margedCellAppearance = new Infragistics.Win.Appearance();
            _margedCellAppearance.BackColor = Color.Lavender;
            _margedCellAppearance.BackColorAlpha = Alpha.Opaque;
            _margedCellAppearance.ForeColor = Color.Black;

            // tRetKeyControl
            // グリッド内でReturnキー押下時の処理を実装する為Circulate=trueにする。
            tRetKeyControl.Circulate = true;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/16 ADD
            _gridColumnChooserControl = new GridColumnChooserControl();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/16 ADD

            _salesSlipInputAcs = SalesSlipInputAcs.GetInstance();// ADD START 2011.08.02 zhubj

            #region ●オプション情報
            this.CacheOptionInfo();　// ADD 2009/09/08

            // ---ADD K2013/01/23  鄧潘ハン---------------------------------->>>>>
            if (this._opt_Nobuto == (int)Option.ON)
            {
                // 画面の特販変更
                this.uCheckSalesCode_base.Text = SP_SALESCODE;
                this.uCheckSalesCode.Text = SP_SALESCODE;
                this.uLabel_SalesCodeTitle.Text = SP_SALESCODE;
            }
            // ---ADD K2013/01/23  鄧潘ハン----------------------------------<<<<
          
            //----- DEL 2015/02/25 王亜楠 Redmine#44701 No.1 -------------------->>>>>
            ////----- ADD 2015/02/05 王亜楠 -------------------->>>>>
            //// パターンを分解
            //_settingForm.Degradation(this._settingForm.UserSetting.SelectedPatternName, out _patternSetting);
            ////----- ADD 2015/02/05 王亜楠 --------------------<<<<<
            //----- DEL 2015/02/25 王亜楠 Redmine#44701 No.1 --------------------<<<<<
            TextOutPutOprtnHisLogAcsObj = new TextOutPutOprtnHisLogAcs();// ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応
          
            #endregion
        }
        /// <summary>
        /// 得意先電子元帳フォームクラスコンストラクタ　Nunit用
        /// </summary>
        /// <remarks>
        /// <br>Note		: 得意先電子元帳フォームクラスの新しいインスタンスを初期化します。</br>
        /// <br>Programmer	: 鮑晶</br>
        /// <br>Date		: K2015/06/16</br>
        /// </remarks>
        public PMKAU04001UA(string param,bool nunit)
        {
            // NUnit テスト
            if (param.Equals("NUnit"))
            {
                // 初期化
                InitializeComponent();
            }
            else
            {
                throw new Exception();
            }
        }

        /// <summary>
        /// 呼び出し元プログラムID込みのコンストラクタ
        /// </summary>
        /// <param name="invokerPgId">呼び出し元プログラムID</param>
		/// <br>Update Note: 2013/01/10 wangf </br>
		/// <br>           : 10801804-00、Redmine#31740の対応</br>
		/// <br>           : 仕入先電子元帳のウインドウからの得意先電子元帳を起動するとグローバル変数初期化。</br>
        /// <br>UpdateNote : 2015/02/05 王亜楠 </br>
        /// <br>           : テキスト出力件数制限なしモードの追加</br>
        /// <br>UpdateNote : 2015/02/25 王亜楠 Redmine#44701 No.1 </br>
        /// <br>           : テキスト出力件数制限なし位置の調整</br>
        /// <br>UpdateNote : 2016/02/04 河原林　一生</br>
        /// <br>           : 仕入先電子元帳から起動したときに検索でエラーになる件の対応</br>
        public PMKAU04001UA(string invokerPgId)
        {
            InitializeComponent();

            // プライベートレベルでPGIDを保存
            this._invokerPgId = invokerPgId;

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
            // 設定フォーム生成
            _settingForm = new PMKAU04004UA();
            _settingForm.ClearSettingSlipGrid += new EventHandler(SettingForm_ClearSettingSlipGrid);
            _settingForm.ClearSettingDetailGrid += new EventHandler(SettingForm_ClearSettingDetailGrid);
            _settingForm.ClearSettingRedSlipGrid += new EventHandler(SettingForm_ClearSettingRedSlipGrid);
            _settingForm.ClearSettingBalanceGrid += new EventHandler(SettingForm_ClearSettingBalanceGrid);
            _settingForm.TextOutputEvent += new EventHandler(SettingForm_TextOutputEvent); // ADD 2015/02/05 王亜楠

            // 設定読み込み
            _settingForm.Deserialize();

            // グリッド内の結合セル設定
            _margedCellAppearance = new Infragistics.Win.Appearance();
            _margedCellAppearance.BackColor = Color.Lavender;
            _margedCellAppearance.BackColorAlpha = Alpha.Opaque;
            _margedCellAppearance.ForeColor = Color.Black;

            // tRetKeyControl
            // グリッド内でReturnキー押下時の処理を実装する為Circulate=trueにする。
            tRetKeyControl.Circulate = true;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
			// ------------ADD wangf 2013/01/10 FOR Redmine#31740--------->>>>
			// グリッド・カラムチューザー制御初期化、ほかの画面から本画面起動なら必要
			_gridColumnChooserControl = new GridColumnChooserControl();
			// ------------ADD wangf 2013/01/10 FOR Redmine#31740---------<<<<

            // ---ADD K2014/02/17  鄧潘ハン---------------------------------->>>>>
            // ---UPD 2016/02/04  m.kawarabayashi ---------------------------------->>>>>
            // オプション情報セット
            this.CacheOptionInfo();
            //// 登戸個別オプションコードの追加
            //Broadleaf.Application.Remoting.ParamData.PurchaseStatus nobutoCustom;
            //nobutoCustom = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_CPM_NobutoCustom);
            //if (nobutoCustom == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            //{
            //    this._opt_Nobuto = (int)Option.ON;
            //}
            //else
            //{
            //    this._opt_Nobuto = (int)Option.OFF;
            //}
            // ---UPD 2016/02/04  m.kawarabayashi ----------------------------------<<<<<

            if (this._opt_Nobuto == (int)Option.ON)
            {
                // 画面の特販変更
                this.uCheckSalesCode_base.Text = SP_SALESCODE;
                this.uCheckSalesCode.Text = SP_SALESCODE;
                this.uLabel_SalesCodeTitle.Text = SP_SALESCODE;
            }
            // ---ADD K2014/02/17  鄧潘ハン---------------------------------<<<<<

            //----- DEL 2015/02/25 王亜楠 Redmine#44701 No.1 -------------------->>>>>
            ////----- ADD 2015/02/05 王亜楠 -------------------->>>>>
            //// パターンを分解
            //_settingForm.Degradation(this._settingForm.UserSetting.SelectedPatternName, out _patternSetting);
            ////----- ADD 2015/02/05 王亜楠 --------------------<<<<<
            //----- DEL 2015/02/25 王亜楠 Redmine#44701 No.1 --------------------<<<<<
        }

        /// <summary>Form.Load イベント</summary>
        /// <param name="sender">対象オブジェクト</param>
        /// <param name="e">イベントパラメータ</param>
        /// <remarks>
        /// <br>フォーム読み込み時の設定取得など</br>
        /// <br>Update Note : 2009/12/28 呉元嘯 PM.NS保守依頼④</br>
        /// <br>              ①明細表示行数を拡大させる件の修正</br>
        /// <br>              ②明細のタイトル欄が見づらい件の修正</br>
        /// <br>Update Note : 2010/01/29 呉元嘯 4次改良</br>
        /// <br>              列サイズの自動調整のチェックボックスに関して、画面を閉じた場合の記憶対象とするように修正</br>
        /// <br>Update Note : 2010/06/08 呉元嘯 ツールバーの表示・非表示設定を保持するように変更</br>
        /// <br>Update Note : 2011/11/28 楊洋 redmine#8172 得意先電子元帳/(BLﾊﾟｰﾂｵｰﾀﾞｰｼｽﾃﾑ)問合せ番号の追加</br>
        /// <br>Update Note : K2014/05/27 林超凡 </br>
        /// <br>            : Redmine#42597 出力位置を変更できるようにする。東亜商会個別対応</br>
        /// <br>Update Note: K2015/06/16 鮑晶</br>
        /// <br>管理番号   : 11101427-00</br>
        /// <br>           : メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
        /// <br>Update Note : K2016/02/23 時シン</br>
        /// <br>              ㈱イケモト 抽出条件にて受注作成区分を追加する対応</br>
        /// <br>Update Note: K2017/01/05 譚洪</br>
        /// <br>管理番号   : 11270116-00 得意先電子元帳パッケージ出荷用ソースのマージ</br>
        /// <br>Update Note: 2018/09/04 譚洪</br>
        /// <br>管理番号   : 11470152-00 履歴自動表示の対応</br>
        /// </remarks>
        private void PMKAU04001UA_Load(object sender, System.EventArgs e)
        {
            //2012/06/22 T.Nishi DEL >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            ////2012/06/08 T.Nishi ADD >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            ////格納ディレクトリがなければ作成
            //if (System.IO.Directory.Exists(ConstantManagement_ClientDirectory.Temp) == false)
            //{
            //    System.IO.Directory.CreateDirectory(ConstantManagement_ClientDirectory.Temp);
            //}
            //int id = System.Diagnostics.Process.GetCurrentProcess().Id;
            //string data = id.ToString();
            //
            ////ファイルのフルパス取得
            //string filepath = ConstantManagement_ClientDirectory.Temp + "\\PMKAU04000U_" + data;
            //
            ////ファイルの作成
            //FileStream stream = File.Create(filepath);
            //stream.Close();
            //
            //stream.Dispose();
            ////2012/06/08 T.Nishi ADD <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
            //2012/06/22 T.Nishi DEL <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
            // -----------ADD 2010/01/29----------->>>>>
            // グリッドカラムサイズ自動調整チェックの復元
            # region [グリッドカラムサイズ自動調整の復元]
            _columnWidthAutoAdjust_Slip = _settingForm.UserSetting.AutoAdjustSlip;
            _columnWidthAutoAdjust_Detail = _settingForm.UserSetting.AutoAdjustDetail;
            _columnWidthAutoAdjust_RedSlip = _settingForm.UserSetting.AutoAdjustRedSlip;
            _columnWidthAutoAdjust_Balance = _settingForm.UserSetting.AutoAdjustBalance;
            # endregion
            // -----------ADD 2010/01/29-----------<<<<<
            // 変数などを初期化
            InitializeVariable();
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/15 ADD
            if (_salesTtlSt == null) return;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/15 ADD

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/08 ADD
            // 赤伝タブ初期表示
            # region [赤伝タブ初期表示]
            ClearRedSlipInput();

            // グリッド設定
            MakeKeyMappingForGrid(this.uGrid_RedSlip);
            # endregion

            // グループ展開状態の復元
            # region [グループ展開状態の復元]
            uExGroupBox_BalanceChart.Expanded = _settingForm.UserSetting.BalanceChartExpanded;
            uExGroupBox_ExtraCondition.Expanded = _settingForm.UserSetting.ExtraConditionExpanded;
            # endregion

            // 詳細条件の復元
            # region [前回使用時の詳細条件を復元]
            // -------------UPD 2009/12/28-------------->>>>>
            if (_settingForm.UserSetting.EnabledConditionList != null)
            {
                // チェック状態の復元
                foreach (Control control in panel_SelectItem.Controls)
                {
                    if (control is Infragistics.Win.UltraWinEditors.UltraCheckEditor)
                    {
                        // チェックが付いているチェックボックスの名称をリストに追加
                        if (_settingForm.UserSetting.EnabledConditionList.Contains(control.Name))
                        {
                            // リストに名前があれば、チェックする
                            (control as Infragistics.Win.UltraWinEditors.UltraCheckEditor).Checked = true;
                        }
                        else
                        {
                            // 名前がなければ、チェックしない
                            (control as Infragistics.Win.UltraWinEditors.UltraCheckEditor).Checked = false;
                        }
                        if (_settingForm.UserSetting.EnabledList != null)
                        {
                            // チェックがEnableているチェックボックスの名称をリストに追加
                            if (_settingForm.UserSetting.EnabledList.Contains(control.Name))
                            {
                                // リストに名前があれば、Enableする
                                (control as Infragistics.Win.UltraWinEditors.UltraCheckEditor).Enabled = false;
                            }
                            else
                            {
                                // 名前がなければ、Enableしない
                                (control as Infragistics.Win.UltraWinEditors.UltraCheckEditor).Enabled = true;
                            }
                        }
                    }
                }
                //// 表示内容に反映
                //ultraDockManager_PaneHidden( sender, null );
            }
            if (_settingForm.UserSetting.EnabledCommonConditionList != null)
            {
                // 基本条件のチェック状態の復元
                this._checkCount = 0;
                foreach (Control control in panel_Base.Controls)
                {
                    if (control is Infragistics.Win.UltraWinEditors.UltraCheckEditor)
                    {
                        // チェックが付いているチェックボックスの名称をリストに追加
                        if (_settingForm.UserSetting.EnabledCommonConditionList.Contains(control.Name))
                        {
                            // リストに名前があれば、チェックする
                            (control as Infragistics.Win.UltraWinEditors.UltraCheckEditor).CheckedChanged -= this.uCheckSalesSlipCdDtl_base_CheckedChanged;
                            (control as Infragistics.Win.UltraWinEditors.UltraCheckEditor).Checked = true;
                            (control as Infragistics.Win.UltraWinEditors.UltraCheckEditor).CheckedChanged += this.uCheckSalesSlipCdDtl_base_CheckedChanged;
                            this._checkCount++;
                        }
                        else
                        {
                            // 名前がなければ、チェックしない
                            (control as Infragistics.Win.UltraWinEditors.UltraCheckEditor).Checked = false;
                        }
                    }
                }
            }
            // 表示内容に反映
            if ((_settingForm.UserSetting.EnabledCommonConditionList != null) || (_settingForm.UserSetting.EnabledConditionList != null))
            {
                ultraDockManager_PaneHidden(sender, null);
            }
            // -------------UPD 2009/12/28--------------<<<<<
            # endregion

            // グリッドカラム情報の復元
            # region [グリッドカラム情報の復元]
            // 伝票グリッド
            this.LoadGridColumnsSetting(ref uGrid_Slip, _settingForm.UserSetting.SlipColumnsList);
            // 明細グリッド
            this.LoadGridColumnsSetting(ref uGrid_Detail, _settingForm.UserSetting.DetailColumnsList);
            // 赤伝グリッド
            this.LoadGridColumnsSetting(ref uGrid_RedSlip, _settingForm.UserSetting.RedSlipColumnsList);
            // 残高グリッド
            this.LoadGridColumnsSetting(ref uGrid_BalanceList, _settingForm.UserSetting.BalanceColumnsList);
            # endregion
            // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
            // 明細グリッドの自動回答情報再修正
            if (this._opt_Pcc == (int)Option.OFF)
            {
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].Hidden = true;
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
            }
            else
            {
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].Hidden = false;
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].Width = 120;
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].Header.Caption = "自動回答";
            }
            // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<

            //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>

            if (this._opt_Pcc == (int)Option.OFF)
            {
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].Hidden = true;
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
            }
            else
            {
                //問合せ番号
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].Hidden = false;
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].Width = 120;
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].Header.Caption = "問合せ番号";
            }

            //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<

            // ADD 陳健 K2014/02/06---------------------->>>>>
            if (!OpeAuthDictionary[OperationCode.DeleteFlag])
            {
                // 基本条件選択と抽出条件選択が削除指定区分を非表示にする。
                this.uCheckDeleteFlag_base.Visible = false;
                this.uCheckDeleteFlag.Visible = false;
                this.uCheckDeleteFlag_base.Checked = false;
                this.uCheckDeleteFlag.Checked = false;
                // 削除指定区分ドロップダウンボックスコントロールを非表示にする。
                this.uLabel_DeleteFlagTitle.Visible = false;
                this.tComboEditor_DeleteFlag.Visible = false;
                // 基本条件選択と抽出条件選択の請求先、入力日開始、入力日終了、自動回答、問合せ番号のLocationを変更する。
                this.uCheckClaimCode.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 15);
                this.uCheckClaimCode_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 15);

                this.uCheckAddUpADateSt.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 2 * 15);
                this.uCheckAddUpADateSt_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 2 * 15);

                this.uCheckAddUpADateEd.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 3 * 15);
                this.uCheckAddUpADateEd_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 3 * 15);

                this.uCheckAutoAnswerDivSCM.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 4 * 15);
                this.uCheckAutoAnswerDivSCM_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 4 * 15);

                this.uCheckInquiryNumber.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 5 * 15);
                this.uCheckInquiryNumber_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 5 * 15);

                //----- DEL K2017/01/05 譚洪 ソースのマージを修正する対応 ----->>>>>
                //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
                // PCCオプションが有効の場合
                //    if (this._opt_Pcc == (int)Option.ON)
                //    {
                //        // 受注作成区分のLocationを変更する
                //        this.uCheckAcptAnOdrMakeDiv.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 6 * 15);
                //        this.uCheckAcptAnOdrMakeDiv_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 6 * 15);
                //    }
                //    // PCCオプションが無効の場合
                //    else
                //    {
                //        // 受注作成区分のLocationを変更する
                //        this.uCheckAcptAnOdrMakeDiv.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 4 * 15);
                //        this.uCheckAcptAnOdrMakeDiv_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 4 * 15);
                //    }
                //    //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<
                //}
                ////----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
                //else
                //{
                //    // PCCオプションが無効の場合
                //    if (this._opt_Pcc != (int)Option.ON)
                //    {
                //        // 受注作成区分のLocationを変更する
                //        this.uCheckAcptAnOdrMakeDiv.Location = new System.Drawing.Point(this.uCheckAddUpADateEd.Location.X, this.uCheckAddUpADateEd.Location.Y + 15);
                //        this.uCheckAcptAnOdrMakeDiv_base.Location = new System.Drawing.Point(this.uCheckAddUpADateEd_base.Location.X, this.uCheckAddUpADateEd_base.Location.Y + 15);
                //    }
                //    else
                //    {
                //        // 受注作成区分のLocationを変更する
                //        this.uCheckAcptAnOdrMakeDiv.Location = new System.Drawing.Point(this.uCheckInquiryNumber.Location.X, this.uCheckInquiryNumber.Location.Y + 15);
                //        this.uCheckAcptAnOdrMakeDiv_base.Location = new System.Drawing.Point(this.uCheckInquiryNumber_base.Location.X, this.uCheckInquiryNumber_base.Location.Y + 15);
                //    }
                //}
                //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<
                //----- DEL K2017/01/05 譚洪 ソースのマージを修正する対応 -----<<<<<


                //----- ADD K2017/01/05 譚洪 ソースのマージを修正する対応 ----->>>>>
                // PCCオプションが有効の場合
                if (this._opt_Pcc == (int)Option.ON)
                {
                    // 出荷状況
                    this.uCheckAddUpRemDiv.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 6 * 15);
                    this.uCheckAddUpRemDiv_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 6 * 15);

                    if (this._opt_Meigo == (int)Option.ON)
                    {
                        // 地区
                        this.ultraCheckEditor_salesArea.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 7 * 15);
                        this.ultraCheckEditor_salesArea_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 7 * 15);

                        // 分析コード
                        this.ultraCheckEditor_custAnalysCode.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 8 * 15);
                        this.ultraCheckEditor_custAnalysCode_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 8 * 15);
                    }

                    if (this._opt_IKeMoTo == (int)Option.ON)
                    {
                        // 受注作成区分
                        this.uCheckAcptAnOdrMakeDiv.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 7 * 15);
                        this.uCheckAcptAnOdrMakeDiv_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 7 * 15);
                    }
                    
                }
                // PCCオプションが無効の場合
                else
                {
                    // 出荷状況
                    this.uCheckAddUpRemDiv.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 4 * 15);
                    this.uCheckAddUpRemDiv_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 4 * 15);


                    if (this._opt_Meigo == (int)Option.ON)
                    {
                        // 地区
                        this.ultraCheckEditor_salesArea.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 5 * 15);
                        this.ultraCheckEditor_salesArea_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 5 * 15);

                        // 分析コード
                        this.ultraCheckEditor_custAnalysCode.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 6 * 15);
                        this.ultraCheckEditor_custAnalysCode_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 6 * 15);
                    }

                    if (this._opt_IKeMoTo == (int)Option.ON)
                    {
                        // 受注作成区分
                        this.uCheckAcptAnOdrMakeDiv.Location = new System.Drawing.Point(this.uCheckDtlNote.Location.X, this.uCheckDtlNote.Location.Y + 5 * 15);
                        this.uCheckAcptAnOdrMakeDiv_base.Location = new System.Drawing.Point(this.uCheckDtlNote_base.Location.X, this.uCheckDtlNote_base.Location.Y + 5 * 15);
                    }
                }
            }
            else
            {
                // PCCオプションが無効の場合
                if (this._opt_Pcc != (int)Option.ON)
                {
                    // 出荷状況
                    this.uCheckAddUpRemDiv.Location = new System.Drawing.Point(this.uCheckAddUpADateEd.Location.X, this.uCheckAddUpADateEd.Location.Y + 15);
                    this.uCheckAddUpRemDiv_base.Location = new System.Drawing.Point(this.uCheckAddUpADateEd_base.Location.X, this.uCheckAddUpADateEd_base.Location.Y + 15);


                    if (this._opt_Meigo == (int)Option.ON)
                    {
                        // 地区
                        this.ultraCheckEditor_salesArea.Location = new System.Drawing.Point(this.uCheckAddUpADateEd.Location.X, this.uCheckAddUpADateEd.Location.Y + 2 * 15);
                        this.ultraCheckEditor_salesArea_base.Location = new System.Drawing.Point(this.uCheckAddUpADateEd_base.Location.X, this.uCheckAddUpADateEd_base.Location.Y + 2 * 15);

                        // 分析コード
                        this.ultraCheckEditor_custAnalysCode.Location = new System.Drawing.Point(this.uCheckAddUpADateEd.Location.X, this.uCheckAddUpADateEd.Location.Y + 3 * 15);
                        this.ultraCheckEditor_custAnalysCode_base.Location = new System.Drawing.Point(this.uCheckAddUpADateEd_base.Location.X, this.uCheckAddUpADateEd_base.Location.Y + 3 * 15);
                    }

                    if (this._opt_IKeMoTo == (int)Option.ON)
                    {
                        // 受注作成区分
                        this.uCheckAcptAnOdrMakeDiv.Location = new System.Drawing.Point(this.uCheckAddUpADateEd.Location.X, this.uCheckAddUpADateEd.Location.Y + 2 * 15);
                        this.uCheckAcptAnOdrMakeDiv_base.Location = new System.Drawing.Point(this.uCheckAddUpADateEd_base.Location.X, this.uCheckAddUpADateEd_base.Location.Y + 2 * 15);
                    }
                }
                else
                {

                    // 出荷状況
                    this.uCheckAddUpRemDiv.Location = new System.Drawing.Point(this.uCheckInquiryNumber.Location.X, this.uCheckInquiryNumber.Location.Y + 15);
                    this.uCheckAddUpRemDiv_base.Location = new System.Drawing.Point(this.uCheckInquiryNumber_base.Location.X, this.uCheckInquiryNumber_base.Location.Y + 15);


                    if (this._opt_Meigo == (int)Option.ON)
                    {
                        // 地区
                        this.ultraCheckEditor_salesArea.Location = new System.Drawing.Point(this.uCheckInquiryNumber.Location.X, this.uCheckInquiryNumber.Location.Y + 2 * 15);
                        this.ultraCheckEditor_salesArea_base.Location = new System.Drawing.Point(this.uCheckInquiryNumber_base.Location.X, this.uCheckInquiryNumber_base.Location.Y + 2 * 15);

                        // 分析コード
                        this.ultraCheckEditor_custAnalysCode.Location = new System.Drawing.Point(this.uCheckInquiryNumber.Location.X, this.uCheckInquiryNumber.Location.Y + 3 * 15);
                        this.ultraCheckEditor_custAnalysCode_base.Location = new System.Drawing.Point(this.uCheckInquiryNumber_base.Location.X, this.uCheckInquiryNumber_base.Location.Y + 3 * 15);
                    }

                    if (this._opt_IKeMoTo == (int)Option.ON)
                    {
                        // 受注作成区分
                        this.uCheckAcptAnOdrMakeDiv.Location = new System.Drawing.Point(this.uCheckInquiryNumber.Location.X, this.uCheckInquiryNumber.Location.Y + 2 * 15);
                        this.uCheckAcptAnOdrMakeDiv_base.Location = new System.Drawing.Point(this.uCheckInquiryNumber_base.Location.X, this.uCheckInquiryNumber_base.Location.Y + 2 * 15);
                    }

                }
            }
            //----- ADD K2017/01/05 譚洪 ソースのマージを修正する対応 -----<<<<<

            // ADD 陳健 K2014/02/06----------------------<<<<<
            //----- UPDATE K2014/05/28 By 林超凡 Redmine#42764 受入テスト障害対応 BEGIN--------->>>>>
            //----- UPDATE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
            ////前回車種メーカーコードカラム表示状態を保存します
            //bool bSalesListMakerCodeHidden = this.uGrid_Slip.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Hidden;
            //bool bSalesDetailMakerCodeHidden = this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Hidden;
            //// 車種メーカーコードカラムの状態設定（伝票と明細）
            //if (this._opt_Toua == Convert.ToInt32(Option.ON))
            //{
            //    //前回車種メーカーコードカラム伝票リスト表示状態の復元
            //    this.uGrid_Slip.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Hidden = bSalesListMakerCodeHidden;
            //    this.uGrid_Slip.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].ExcludeFromColumnChooser =
            //        Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
            //    //前回車種メーカーコードカラム明細リスト表示状態の復元
            //    this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Hidden = bSalesDetailMakerCodeHidden;
            //    this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].ExcludeFromColumnChooser =
            //        Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
            //}
            //else
            //{
            //    this.uGrid_Slip.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Hidden = true;
            //    this.uGrid_Slip.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].ExcludeFromColumnChooser =
            //        Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
            //    this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Hidden = true;
            //    this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].ExcludeFromColumnChooser =
            //        Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
            //}
            //----- UPDATE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<<
            // 車種メーカーコードカラムの状態設定（伝票と明細）
            if (this._opt_Toua == Convert.ToInt32(Option.OFF))
            {
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Hidden = true;
                this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].ExcludeFromColumnChooser =
                    Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
            }
            //----- UPDATE K2014/05/28 By 林超凡 Redmine#42764 受入テスト障害対応 END---------<<<<<

            // -----------DEL 2010/01/29----------->>>>>
            //// グリッドカラムサイズ自動調整チェックの復元
            //# region [グリッドカラムサイズ自動調整の復元]
            //_columnWidthAutoAdjust_Slip = _settingForm.UserSetting.AutoAdjustSlip;
            //_columnWidthAutoAdjust_Detail = _settingForm.UserSetting.AutoAdjustDetail;
            //_columnWidthAutoAdjust_RedSlip = _settingForm.UserSetting.AutoAdjustRedSlip;
            //_columnWidthAutoAdjust_Balance = _settingForm.UserSetting.AutoAdjustBalance;
            //# endregion
            // -----------DEL 2010/01/29-----------<<<<<
            // 設定フォームへのカラム一覧渡し
            _settingForm.SlipColCollection = uGrid_Slip.DisplayLayout.Bands[0].Columns;
            _settingForm.DetailColCollection = uGrid_Detail.DisplayLayout.Bands[0].Columns;

            // グリッドカラム制御
            _slipGridColPosCtrl = new GridColPosFixController(uGrid_Slip);
            _detailGridColPosCtrl = new GridColPosFixController(uGrid_Detail);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/08 ADD

            // 画面を使用可能に
            this.Enabled = true;

            // ------------ADD 2009/12/28----------->>>>>
            adjustGridBotton(_settingForm.UserSetting.AllowRowFiltering, _settingForm.UserSetting.AllowColSwapping, _settingForm.UserSetting.FixedHeaderIndicator);
            // ------------ADD 2009/12/28-----------<<<<<

            // ------------ADD 2010/06/08----------->>>>>
            // ツールバー初期設定処理
            ToolbarManagerCustomizeSettingAcs.LoadToolManagerCustomizeInfo(ctAssemblyName, ref this.tToolbarsManager);
            // ------------ADD 2010/06/08-----------<<<<<

            // --- ADD m.suzuki 2010/07/27 ---------->>>>>
            // 「列自動調整」チェックに関する初期状態の更新の為、CheckedChangedイベントでの処理を実行
            uCheckEditor_StatusBar_AutoFillToGridColumn_CheckedChanged(null, null);
            // --- ADD m.suzuki 2010/07/27 ----------<<<<<

            //----- ADD　2018/09/04 譚洪　履歴自動表示の対応------->>>>>
            // 画面初期表示時、ユーザー設定画面に「タブ制御」タブの初期表示区分の選択値より、タブの初期表示
            if (this._settingForm.UserSetting.InitSelectDisplay == 0)
            {
                this.uTabControl_BlDspRslt.Tabs["uTabControl_BalanceChart"].Selected = true;
            }
            else
            {
                this.uTabControl_BlDspRslt.Tabs["uTabControl_TotalShow"].Selected = true;
            }
            //----- ADD　2018/09/04 譚洪　履歴自動表示の対応-------<<<<<
        }

        /// <summary>
        /// フォーム表示後の処理(初期フォーカスのセット)
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>
        /// <br>Update Note: 2018/09/04 譚洪</br>
        /// <br>管理番号   : 11470152-00 履歴自動表示の対応</br>
        /// </remarks>
        void PMKAU04001UA_Shown(object sender, System.EventArgs e)
        {
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/15 ADD
            if (_salesTtlSt == null) Close();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/15 ADD

            // 初期フォーカス(得意先コード)
            this.tNedit_CustomerCode.Focus();

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            // 拠点コードが正しくゼロ詰めされない場合がある為、(起動の度、結果異なる)
            // 強制的にゼロ詰めする。

            tEdit_SectionCodeAllowZero.Text = uiSetControl1.GetZeroPaddedText(tEdit_SectionCodeAllowZero.Name, tEdit_SectionCodeAllowZero.Text);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

            //----- ADD　2018/09/04 譚洪　履歴自動表示の対応------->>>>>
            if (this.SalesCommandArgs != null && this.SalesCommandArgs.Length == 2)
            {
                if (this.SalesCommandArgs[0].Equals(CT_SALESSLIP_PGID))
                {
                    ShowFromSalesSlip();
                }
            }
            //----- ADD　2018/09/04 譚洪　履歴自動表示の対応-------<<<<<
        }

        //----- ADD　2018/09/04 譚洪　履歴自動表示の対応------->>>>>
        /// <summary>
        /// 売上からの起動画面表示
        /// </summary>
        /// <remarks>
        /// <br>Note       : 2018/09/04 譚洪</br>
        /// <br>管理番号   : 11470152-00 履歴自動表示の対応</br>
        /// </remarks>
        private void ShowFromSalesSlip()
        {
            //　商品取引履歴の検索条件の取得
            if (this.SalesCommandArgs.Length == 2)
            {
                // 引数はキー「：」分割する
                string[] prm = (this.SalesCommandArgs[1]).Split(':');
                if (prm.Length > 4)
                {
                    // 拠点コード
                    this.tEdit_SectionCodeAllowZero.Text = prm[0];
                    // 拠点名称
                    this.uLabel_SectionNm.Text = prm[1];
                    if (prm[2] != "0")
                    {
                        // 得意先コード
                        this.tNedit_CustomerCode.Text = prm[2];
                    }
                    else
                    {
                        // 得意先コード
                        this.tNedit_CustomerCode.Text = string.Empty;
                    }

                    if (!string.IsNullOrEmpty(this.tNedit_CustomerCode.Text))
                    {
                        CustomerInfo customerInfo;
                        Int32 cusCode;
                        Int32.TryParse(prm[2], out cusCode);
                        int status = this._customerInfoAcs.ReadDBData(this._enterpriseCode, cusCode, out customerInfo);
                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL && customerInfo.IsCustomer)
                        {
                            this.uLabel_CustomerName.Text = customerInfo.CustomerSnm.TrimEnd();
                        }
                    }

                    // 履歴取得期間
                    Int32 outMonth;
                    Int32.TryParse(prm[3], out outMonth);
                    if (outMonth == 0)
                    {
                        this.tDateEdit_SalesDateSt.SetDateTime(DateTime.Today);
                    }
                    else
                    {
                        this.tDateEdit_SalesDateSt.SetDateTime(DateTime.Today.AddMonths((-1) * outMonth));
                    }
                    this.tDateEdit_SalesDateEd.SetDateTime(DateTime.Today);

                    //「品番」が基本条件 または 抽出条件に設定されていない場合、エラーメッセージを報告します。
                    if (!this.uCheckGoodsNo.Checked)
                    {
                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                        MSG_SALESSLIP, -1, MessageBoxButtons.OK);
                        // フォーカス(拠点コード)
                        this.tEdit_SectionCodeAllowZero.Focus();
                        return;
                    }
                    else
                    {
                        // 品番
                        this.tEdit_GoodsNo.Text = prm[4];
                        this._srGoodsNo = prm[4];
                    }
                    // 売上伝票入力で「拠点」「得意先」「品番」のいずれかが入力されていない場合のメッセージ
                    string msg = string.Empty;
                    // 拠点入力しない
                    if (string.IsNullOrEmpty(prm[0]))
                    {
                        msg = MSG_SECTION;
                    }

                    // 得意先入力しない
                    if (string.IsNullOrEmpty(this.tNedit_CustomerCode.Text))
                    {
                        if (string.IsNullOrEmpty(msg))
                        {
                            msg = MSG_CUSTOMER;
                        }
                        else
                        {
                            msg += CT_SIGN + MSG_CUSTOMER;
                        }
                    }
                    // 品番入力しない
                    if (string.IsNullOrEmpty(prm[4]))
                    {
                        if (string.IsNullOrEmpty(msg))
                        {
                            msg = MSG_GOODNO;
                        }
                        else
                        {
                            msg += CT_SIGN + MSG_GOODNO;
                        }
                    }

                    if (!string.IsNullOrEmpty(msg))
                    {
                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                        string.Format(MSG_SALESSLIP_INPUT, msg), -1, MessageBoxButtons.OK);
                        if (string.IsNullOrEmpty(prm[0]))
                        {
                            // フォーカス(拠点コード)
                            this.tEdit_SectionCodeAllowZero.Focus();
                        }
                        // 得意先入力しない
                        else if (string.IsNullOrEmpty(this.tNedit_CustomerCode.Text))
                        {
                            // フォーカス(得意先コード)
                            this.tNedit_CustomerCode.Focus();
                        }
                        // 品番入力しない
                        else if (string.IsNullOrEmpty(prm[4]))
                        {
                            // フォーカス(品番)
                            this.tEdit_GoodsNo.Focus();
                        }
                        return;
                    }
                }
            }
        }

        /// <summary>
        /// 売上からの起動画面表示
        /// </summary>
        /// <remarks>
        /// <br>Note       : 2018/09/04 譚洪</br>
        /// <br>管理番号   : 11470152-00 履歴自動表示の対応</br>
        /// </remarks>
        public void ShowCustPrtSlip()
        {
            if (!string.IsNullOrEmpty(this.tEdit_GoodsNo.Text) &&
                   !string.IsNullOrEmpty(this.tEdit_SectionCodeAllowZero.Text) &&
                   !string.IsNullOrEmpty(this.tNedit_CustomerCode.Text))
            {
                // 検索実行
                Control errorControl = SearchSlipDetailList();

                // エラーコントロールに移動
                if (errorControl != null)
                {
                    errorControl.Focus();
                }
            }
        }
        //----- ADD　2018/09/04 譚洪　履歴自動表示の対応-------<<<<<

        /// <summary>
        /// フォームクロージングイベント
        /// </summary>
        /// <param name="sender">対象オブジェクト</param>
        /// <param name="e">イベントパラメータクラス</param>
        /// <remarks>
        /// <br>Note		: フォームクロージングイベントを行う。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2010/06/08</br>
        /// <br>Note		: 設定ファイルの保存先修正</br>
        /// <br>Programmer	: yangmj</br>
        /// <br>Date		: 2010/12/20</br>
        /// </remarks>
        private void PMKAU04001UA_FormClosing(object sender, FormClosingEventArgs e)
        {
            try
            {

            }
            catch (NullReferenceException)
            {
            }

            //-----ADD 2010/12/20----->>>>>
            System.Environment.CurrentDirectory = ConstantManagement_ClientDirectory.NSCurrentDirectory;
            //-----ADD 2010/12/20-----<<<<<
            //今回設定情報の保存(プログラム終了時に実装)
            ToolbarManagerCustomizeSettingAcs.SaveToolManagerCustomizeInfo(ctAssemblyName, this.tToolbarsManager);
        }

        /// <summary>
        /// プライベートレベルの変数などを初期化および初期取得
        /// </summary>
        /// <remarks>
        /// <br>Update Note : 2009/11/25 呉元嘯</br>
        /// <br>              PM.NS保守依頼③</br>
        /// <br>              売上全体設定の取得不具合対応</br>
        /// <br>Update Note : 2009/12/28 呉元嘯</br>
        /// <br>              PM.NS保守依頼④</br>
        /// <br>              赤伝発行や、伝票再発行をファンクションボタンで操作出来ない件の修正</br>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              小数点表示区分を参照し、表示制御を行う</br>
        /// <br>Update Note : 2012/03/29 gezh</br>
        /// <br>              Redmine#29149 得意先電子元帳　赤伝返品手数料入力時の販売区分の対応</br>
		/// <br>Update Note : 2013/01/30 wangf </br>
		/// <br>            : 10801804-00、速度改善関連、Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応</br>
		/// <br>            : 残高集計のタイミングをずらす</br>
        /// <br>Update Note : K2014/05/28 林超凡</br>
        /// <br>            : Redmine#42764 受入テスト障害対応。東亜商会個別対応</br>
        /// <br>UpdateNote  : 2015/02/05 王亜楠 </br>
        /// <br>            : テキスト出力件数制限なしモードの追加</br>
        /// <br>Update Note : K2015/04/27 陳亮 </br>
        /// <br>            : 11100842-00 モモセ部品㈱の個別開発依頼 </br>
        /// <br>            : 得意先電子元帳第二売価を追加する。モモセ部品㈱オプションが有効の場合のみ。</br>
        /// <br>Update Note : 2022/05/05 仰亮亮</br>
        /// <br>            : 11870080-00 納品書電子帳簿連携対応</br>
        /// </remarks>
        private void InitializeVariable()
        {
            int status;

            #region セッション初期値取得

            // アプリケーションに必要となる値を設定する
            // 企業コード
            this._enterpriseCode = LoginInfoAcquisition.EnterpriseCode;

            // 自拠点コード
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 DEL
            //this._loginSectionCode = LoginInfoAcquisition.Employee.BelongSectionCode;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
            this._loginSectionCode = LoginInfoAcquisition.Employee.BelongSectionCode.Trim();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD

            // ログインユーザーコード
            this._loginUserCd = LoginInfoAcquisition.Employee.EmployeeCode;

            // ログインユーザー名
            this._loginUserName = LoginInfoAcquisition.Employee.Name;

            #endregion // セッション初期値取得

            #region アクセスクラス初期化

            // アクセスクラスを初期化
            this._customerInfoAcs = new CustomerInfoAcs();
            this._secInfoSetAcs = new SecInfoSetAcs();

            this._employeeAcs = new EmployeeAcs();
            this._makerAcs = new MakerAcs();
            this._goodsAcs = new GoodsAcs();
            this._blGoodsCdAcs = new BLGoodsCdAcs();
            this._blGroupUAcs = new BLGroupUAcs();
            this._userGuideAcs = new UserGuideAcs();
            this._warehouseAcs = new WarehouseAcs();
            this._supplierAcs = new SupplierAcs();

            this._salesTtlStAcs = new SalesTtlStAcs();

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            this._noteGuidAcs = new NoteGuidAcs();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

            //this._iIOWriteControlDB = (IIOWriteControlDB)MediationIOWriteControlDB.GetIOWriteControlDB();

            #endregion // アクセスクラス初期化

            // 検索条件クラスを初期化
            this._custPrtPpr = new CustPrtPpr();
            this._custPtrRedSlipAcs = new CustPtrSalesDetailRedSlipAcs();
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
            this._custPtrRedSlipAcs.Initialize(_enterpriseCode, _loginSectionCode);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD

            // 残高一覧検索条件クラス
            this._custPrtPprBlnce = new CustPrtPprBlnce();

            // ---ADD 2009/02/10 不具合対応[10651] --------------------------------->>>>>
            // 前回検索時抽出条件クラス
            this._custPrtPprBackUp = null;
            this._custPrtPprBlnceBackUp = null;
            this._rl_RemainTypeBackup = string.Empty;
            this._logicalDelDivBackUp = -1;
            // ---ADD 2009/02/10 不具合対応[10651] ---------------------------------<<<<<

            //--------------------------
            // 画面のセッティング
            //--------------------------

            #region ボタンイメージ設定

            // イメージリストを指定(16x16)
            this._imageList16 = IconResourceManagement.ImageList16;

            // ボタンイメージを設定
            // 共通部分
            this.uButton_SectionGuide.ImageList = this._imageList16;
            this.uButton_SectionGuide.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_ClaimGuide.ImageList = this._imageList16;
            this.uButton_ClaimGuide.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_CustomerGuide.ImageList = this._imageList16;
            this.uButton_CustomerGuide.Appearance.Image = (int)Size16_Index.STAR1;

            // 赤伝発行タブ
            this.uButton_rs_InputEmployee.ImageList = this._imageList16;
            this.uButton_rs_InputEmployee.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_rs_ReturnReason.ImageList = this._imageList16;
            this.uButton_rs_ReturnReason.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_rs_SlipNote.ImageList = this._imageList16;
            this.uButton_rs_SlipNote.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_rs_SlipNote2.ImageList = this._imageList16;
            this.uButton_rs_SlipNote2.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_rs_SlipNote3.ImageList = this._imageList16;
            this.uButton_rs_SlipNote3.Appearance.Image = (int)Size16_Index.STAR1;
            // --- ADD 2009/09/07 ---------->>>>>
            this.uButton_rs_SlipNoteCar.ImageList = this._imageList16;
            this.uButton_rs_SlipNoteCar.Appearance.Image = (int)Size16_Index.STAR1;
            // --- ADD 2009/09/07 ----------<<<<<
            // ADD 2012/03/29 gezh Redmine#29149 --------->>>>>
            this.uButton_rs_SalesCodeDiv.ImageList = this._imageList16;
            this.uButton_rs_SalesCodeDiv.Appearance.Image = (int)Size16_Index.STAR1;
            // ADD 2012/03/29 gezh Redmine#29149 ---------<<<<<
            this.tToolbarsManager.ImageListSmall = this._imageList16;
            this.tToolbarsManager.Tools["LabelTool_RowSearchTitle"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.SEARCH;
            this.tToolbarsManager.Tools["ButtonTool_Close"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.CLOSE;
            this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.SEARCH;
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            this.tToolbarsManager.Tools["ButtonTool_Clear"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.ALLCANCEL;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            this.tToolbarsManager.Tools["ButtonTool_Print"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.PRINT;
            this.tToolbarsManager.Tools["ButtonTool_PDF"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.PREVIEW;
            this.tToolbarsManager.Tools["ButtonTool_ExtractText"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.CSVOUTPUT;
            this.tToolbarsManager.Tools["ButtonTool_ExtractExcel"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.CSVOUTPUT;
            this.tToolbarsManager.Tools["ButtonTool_ReissueSlip"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.SLIP;
            this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.SLIP;
            this.tToolbarsManager.Tools["ButtonTool_Configuration"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.SETUP1;
            this.tToolbarsManager.Tools["ButtonTool_RowSelect"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.DETAILS;
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
            this.tToolbarsManager.Tools["ButtonTool_SlipHeaderCopy"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.SLIPCOPY;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD
            // -------------ADD 2009/12/28-------------->>>>>
            this.tToolbarsManager.Tools["ButtonTool_BalanceChart"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.INDICATIONCHANGE;
            this.tToolbarsManager.Tools["ButtonTool_DetailSelect"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.DECISION;
            this.tToolbarsManager.Tools["ButtonTool_SalesSlipSelect"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.DECISION;
            this.tToolbarsManager.Tools["ButtonTool_CommonCondition"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.INDICATIONCHANGE;
            this.tToolbarsManager.Tools["ButtonTool_ExtraCondition"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.INDICATIONCHANGE;
            this.tToolbarsManager.Tools["ButtonTool_TotalShow"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.INDICATIONCHANGE;
            // -------------ADD 2009/12/28--------------<<<<<
            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
            this.tToolbarsManager.Tools["ButtonTool_EbooksDX"].SharedProps.AppearancesSmall.Appearance.Image = (int)Size16_Index.GUIDE;
            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
			// ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
			// 画面初期化時、得意先コードが空白ので、「残高集計」ボタンが操作不可を設定
			this.uButton_Balance.ImageList = this._imageList16;
			this.uButton_Balance.Appearance.Image = (int)Size16_Index.SEARCH;
			this.uButton_Balance.Enabled = false;
			// ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<

            // 詳細検索条件エリアのボタンイメージを設定
            InitializeExtraConditionFields();

            #endregion // ボタンイメージ設定

            // 全ての詳細検索条件を非表示にし、拡張検索条件の拡張可能グループボックスを不可視に
            SetAllDetailSearchCondition2Hidden();
            this.uExGroupBox_ExtraCondition.Visible = false;

            #region 売上全体設定取得

            // 売上全体設定を取得
            // TODO このSearchAllは将来的にSearchメソッドに変わる可能性あり。
            ArrayList retSalesTtlSt;
            //status = this._salesTtlStAcs.SearchAll(out retSalesTtlSt, this._enterpriseCode);// DEL 2009/11/25
            status = this._salesTtlStAcs.Search(out retSalesTtlSt, this._enterpriseCode);// ADD 2009/11/25
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/15 DEL
                //foreach (SalesTtlSt salesTtlSt in retSalesTtlSt)
                //{
                //    // 自拠点コードと同じものをピックアップ
                //    if (salesTtlSt.SectionCode.Trim() == this._loginSectionCode.Trim())
                //    {
                //        // 伝票備考２表示区分
                //        switch (salesTtlSt.BrSlipNote2DispDiv)
                //        {
                //            // 0:有り　1:無し　（無しの場合、画面項目を非表示)
                //            case 0: this._editableSlipNote2 = true; break;
                //            case 1: this._editableSlipNote2 = false; break;
                //            default: this._editableSlipNote2 = true; break;
                //        }

                //        // 伝票備考３表示区分
                //        switch (salesTtlSt.BrSlipNote3DispDiv)
                //        {
                //            // 0:する　1:しない　（無しの場合、画面項目を非表示)
                //            case 0: this._editableSlipNote3 = true; break;
                //            case 1: this._editableSlipNote3 = false; break;
                //            default: this._editableSlipNote3 = true; break;
                //        }

                //        // 得意先注番表示区分
                //        switch (salesTtlSt.CustOrderNoDispDiv)
                //        {
                //            // 0:しない　1:する　**** 備考とは逆なので注意 ****
                //            case 0: this._editablePartySalesSlipCd = false; break;
                //            case 1: this._editablePartySalesSlipCd = true; break;
                //            default: this._editablePartySalesSlipCd = true; break;
                //        }


                //        break;
                //    }
                //}
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/15 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/15 ADD

                // 売上全体設定
                # region [売上全体設定 取得]
                _salesTtlSt = null;
                SalesTtlSt allSalesTtlSt = null;
                foreach (SalesTtlSt salesTtlSt in retSalesTtlSt)
                {
                    if (salesTtlSt.SectionCode.Trim() == this._loginSectionCode.Trim())
                    {
                        // 拠点別設定
                        _salesTtlSt = salesTtlSt;
                        break;
                    }
                    else if (salesTtlSt.SectionCode.Trim() == string.Empty || salesTtlSt.SectionCode.Trim() == "00")
                    {
                        // 全社設定
                        allSalesTtlSt = salesTtlSt;
                        continue;
                    }
                }
                // 拠点別設定が無ければ全社設定を使用
                if (_salesTtlSt == null)
                {
                    _salesTtlSt = allSalesTtlSt;
                }
                # endregion

                //_salesTtlSt = null;

                // 拠点別設定も全社設定も無ければ終了
                if (_salesTtlSt == null)
                {
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                        "売上全体設定が設定されていません。終了します",
                        status, MessageBoxButtons.OK);
                    return;
                }

                // 売上全体設定による項目表示・非表示設定
                # region [表示・非表示設定]
                // 伝票備考２表示区分
                switch (_salesTtlSt.BrSlipNote2DispDiv)
                {
                    // 0:有り　1:無し　（無しの場合、画面項目を非表示)
                    case 0: this._editableSlipNote2 = true; break;
                    case 1: this._editableSlipNote2 = false; break;
                    default: this._editableSlipNote2 = true; break;
                }

                // 伝票備考３表示区分
                switch (_salesTtlSt.BrSlipNote3DispDiv)
                {
                    // 0:する　1:しない　（無しの場合、画面項目を非表示)
                    case 0: this._editableSlipNote3 = true; break;
                    case 1: this._editableSlipNote3 = false; break;
                    default: this._editableSlipNote3 = true; break;
                }

                // 得意先注番表示区分
                switch (_salesTtlSt.CustOrderNoDispDiv)
                {
                    // 0:しない　1:する　**** 備考とは逆なので注意 ****
                    case 0: this._editablePartySalesSlipCd = false; break;
                    case 1: this._editablePartySalesSlipCd = true; break;
                    default: this._editablePartySalesSlipCd = true; break;
                }

                // ---------ADD 2010/08/05--------->>>>>
                // 売上全体設定の小数点表示区分の取得
                switch (_salesTtlSt.DwnPLCdSpDivCd)
                {
                    case 0: this._pointDspDivCd = false; break;
                    case 1: this._pointDspDivCd = true; break;
                    default: this._pointDspDivCd = false; break;
                }
                // ---------ADD 2010/08/05---------<<<<<

                // ADD 2012/03/29 gezh Redmine#29149 --------->>>>>
                // 売上全体設定の販売区分の取得
                switch (_salesTtlSt.SalesCdDspDivCd)
                {
                    case 0: this._editableSalesCodeDiv = true; break;   // する
                    case 1: this._editableSalesCodeDiv = false; break;  // しない
                    case 2: this._editableSalesCodeDiv = true; break;   // 必須
                    default: this._editableSalesCodeDiv = true; break;
                }
                // ADD 2012/03/29 gezh Redmine#29149 ---------<<<<<
                # endregion

                // 赤伝発行アクセスクラスにプロパティセット
                _custPtrRedSlipAcs.SalesTtlSt = _salesTtlSt;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/15 ADD

                // 赤伝発行入力タブ表示領域調整
                setupRedSlipTabControls();
            }

            #endregion // 売上全体設定取得

            //-----ADD 2010/12/20----->>>>>
            #region ●受発注管理全体設定マスタ DCKHN09232A
            ArrayList aList;
            AcptAnOdrTtlStAcs acptAnOdrTtlStAcs = new AcptAnOdrTtlStAcs();  // 受発注全体設定マスタ
            status = acptAnOdrTtlStAcs.Search(out aList, this._enterpriseCode);
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                if (aList != null)
                {
                    # region [受発注管理全体設定 取得]
                    _acptAnOdrTtlSt = null;
                    AcptAnOdrTtlSt allAcptAnOdrTtlSt = null;
                    foreach (AcptAnOdrTtlSt acptAnOdrTtlSt in aList)
                    {
                        if (acptAnOdrTtlSt.SectionCode.Trim() == this._loginSectionCode.Trim())
                        {
                            // 拠点別設定
                            _acptAnOdrTtlSt = acptAnOdrTtlSt;
                            break;
                        }
                        else if (acptAnOdrTtlSt.SectionCode.Trim() == string.Empty || acptAnOdrTtlSt.SectionCode.Trim() == "00")
                        {
                            // 全社設定
                            allAcptAnOdrTtlSt = acptAnOdrTtlSt;
                            continue;
                        }
                    }
                    // 拠点別設定が無ければ全社設定を使用
                    if (_acptAnOdrTtlSt == null)
                    {
                        _acptAnOdrTtlSt = allAcptAnOdrTtlSt;
                    }
                    # endregion
                }
            }
            #endregion
            //-----ADD 2010/12/20-----<<<<<

            #region 締め日取得

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
            // 日付取得部品
            _dateGetAcs = DateGetAcs.GetInstance();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD

            _tCalcAcs = TotalDayCalculator.GetInstance();

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //// 締日取得前初期処理
            //status = _tCalcAcs.InitializeHisMonthlyAccRec();

            //if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            //{
            //    // 今回および前回の締め日/月を取得(月と日は異なる場合がある)
            //    status = _tCalcAcs.GetHisTotalDayMonthlyAccRec(this._loginSectionCode, out this._prevTotalDay, out this._currentTotalDay, out this._prevTotalMonth, out this._currentTotalMonth);

            //    //if (_prevTotalDay == DateTime.MinValue)
            //    //{
            //    //    // 画面へセット
            //    //    this.tDateEdit_rl_TargetYMSt.Clear();
            //    //    this.tDateEdit_rl_TargetYMEd.Clear();
            //    //}
            //    //else
            //    //{
            //    //    // 画面へセット
            //    //    this.tDateEdit_rl_TargetYMSt.SetDateTime(this._prevTotalMonth); // 前回締処理月
            //    //    this.tDateEdit_rl_TargetYMEd.SetDateTime(this._prevTotalMonth); // 前回締処理月
            //    //}

            //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
            //    if ( _prevTotalDay == DateTime.MinValue )
            //    {
            //        DateTime today = DateTime.Today;
            //        this.tDateEdit_SalesDateSt.SetDateTime( today );
            //        this.tDateEdit_SalesDateEd.SetDateTime( today );
            //    }
            //    else
            //    {
            //        this.tDateEdit_SalesDateSt.SetDateTime( this._prevTotalDay.AddDays( 1 ) );
            //        this.tDateEdit_SalesDateEd.SetDateTime( DateTime.Today );
            //    }
            //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD
            //}
            //else
            //{
            //    // 初期処理失敗
            //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
            //        MSG_TOTALDAY_INITIALIE_FAILED, -1, MessageBoxButtons.OK);
            //}
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

            #endregion // 締め日取得

            // アクセスクラスを初期化し、データセットを取得
            this._custPtrSearchAcs = new CustPrtSlipSearchAcs();
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/23 ADD
            this._custPtrSearchAcs.UpdateSection += new CustPrtSlipSearchAcs.UpdateSectionEventHandler(_custPtrSearchAcs_UpdateSection);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/23 ADD
            this._detailDataSet = this._custPtrSearchAcs.DataSet;
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/15 ADD

            //----- ADD K2014/05/28 By 林超凡 Redmine#42764 受入テスト障害対応 BEGIN--------->>>>>
            // 車種メーカーコードを削除します
            if (this._opt_Toua == Convert.ToInt32(Option.OFF))
            {
                this._detailDataSet.SalesList.Columns.Remove(CL_CARMAKERCODE_NAME);
            }
            //----- ADD K2014/05/28 By 林超凡 Redmine#42764 受入テスト障害対応 END---------<<<<<

            // ---- ADD K2015/04/29 陳亮 モモセ部品の第二売価追加 ---->>>>>
            // 第二売価コードを削除します
            if (this._opt_Momose == Convert.ToInt32(Option.OFF))
            {
                this._detailDataSet.SalesDetail.Columns.Remove(CL_SECONDSALEPRICE_NAME);
            }
            // ---- ADD K2015/04/29 陳亮 モモセ部品の第二売価追加 ----<<<<<

            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
            if (this._opt_Meigo == Convert.ToInt32(Option.OFF))
            {
                #region 伝票表示
                this._detailDataSet.SalesList.Columns.Remove(SALESAREA_NAME);          //地区
                this._detailDataSet.SalesList.Columns.Remove(CUSTANALYSCODE1_NAME);    //分析コード1
                this._detailDataSet.SalesList.Columns.Remove(CUSTANALYSCODE2_NAME);    //分析コード2
                this._detailDataSet.SalesList.Columns.Remove(CUSTANALYSCODE3_NAME);    //分析コード3
                this._detailDataSet.SalesList.Columns.Remove(CUSTANALYSCODE4_NAME);    //分析コード4
                this._detailDataSet.SalesList.Columns.Remove(CUSTANALYSCODE5_NAME);    //分析コード5
                this._detailDataSet.SalesList.Columns.Remove(CUSTANALYSCODE6_NAME);    //分析コード6
                #endregion

                #region 明細表示
                this._detailDataSet.SalesDetail.Columns.Remove(SALESAREA_NAME);        //地区
                this._detailDataSet.SalesDetail.Columns.Remove(CUSTANALYSCODE1_NAME);  //分析コード1 
                this._detailDataSet.SalesDetail.Columns.Remove(CUSTANALYSCODE2_NAME);  //分析コード2
                this._detailDataSet.SalesDetail.Columns.Remove(CUSTANALYSCODE3_NAME);  //分析コード3
                this._detailDataSet.SalesDetail.Columns.Remove(CUSTANALYSCODE4_NAME);  //分析コード4
                this._detailDataSet.SalesDetail.Columns.Remove(CUSTANALYSCODE5_NAME);  //分析コード5
                this._detailDataSet.SalesDetail.Columns.Remove(CUSTANALYSCODE6_NAME);  //分析コード6
                #endregion
            }
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<

            this._custPtrRedSlipAcs.DetailDataSet = this._detailDataSet;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/15 ADD

            // グリッド毎に使用するデータビューを作成
            DataView dViewSlip = new DataView(this._detailDataSet.SalesList);
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
            dViewSlip.Sort = this.GetSlipSortString();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD
            DataView dViewDetail = new DataView(this._detailDataSet.SalesDetail);
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
            dViewDetail.Sort = this.GetDetailSortString();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD
            DataView dViewRedSlip = new DataView(this._detailDataSet.RedSlipDetail);
            DataView dViewBalanceList = new DataView(this._detailDataSet.BalanceList);

            // データソースとしてデータビューを指定
            this.uGrid_Slip.DataSource = dViewSlip;
            this.uGrid_Detail.DataSource = dViewDetail;
            this.uGrid_RedSlip.DataSource = dViewRedSlip;
            this.uGrid_BalanceList.DataSource = dViewBalanceList;

            // グリッドを作成
            // グリッド列初期設定処理
            InitializeGridColumns(this.uGrid_Slip.DisplayLayout.Bands[0].Columns, 0);
            InitializeGridColumns(this.uGrid_Detail.DisplayLayout.Bands[0].Columns, 1);
            InitializeGridColumns(this.uGrid_RedSlip.DisplayLayout.Bands[0].Columns, 2);
            InitializeGridColumns(this.uGrid_BalanceList.DisplayLayout.Bands[0].Columns, 3);

            // 全てのグリッドの自動調整
            autoColumnAdjust(this._columnWidthAutoAdjust_Slip, 0);
            autoColumnAdjust(this._columnWidthAutoAdjust_Detail, 1);
            autoColumnAdjust(this._columnWidthAutoAdjust_RedSlip, 2);
            autoColumnAdjust(this._columnWidthAutoAdjust_Balance, 3);

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/14 ADD
            // テキスト出力で使用する為、テーブルカラムのCaptionをグリッドカラムCaptionで書きかえる
            SettingTableColCaption(_detailDataSet.SalesList, uGrid_Slip);
            SettingTableColCaption(_detailDataSet.SalesDetail, uGrid_Detail);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/14 ADD

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //// 初期表示タブ
            //this._selectedMainTabKey = "uTab_SlipDetail";
            //this.uTabControl.Tabs["uTab_SlipDetail"].Selected = true;
            //this.uCheckEditor_StatusBar_AutoFillToGridColumn.Checked = this._columnWidthAutoAdjust_Detail;
            //autoColumnAdjust(this._columnWidthAutoAdjust_Detail, 0);
            //adjustButtonEnable(1);
            //adjustStatusBarCellExample(true);
            //setToolbarSearchSurface();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

            // 行選択ボタンOFF
            this.tToolbarsManager.Tools["ButtonTool_RowSelect"].SharedProps.Enabled = false;


            // スキンをロード
            this._controlScreenSkin = new ControlScreenSkin();
            List<string> controlNameList = new List<string>();
            controlNameList.Add(this.uExGroupBox_CommonCondition.Name);
            controlNameList.Add(this.uExGroupBox_ExtraCondition.Name);
            controlNameList.Add(this.uExGroupBox_BalanceChart.Name);
            this._controlScreenSkin.SetExceptionCtrl(controlNameList);
            this._controlScreenSkin.LoadSkin();
            this._controlScreenSkin.SettingScreenSkin(this);

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //// 画面をリセット
            //ClearAllField();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

            // 文字サイズ設定
            for (int i = 0; i < this._fontpitchSize.Length; i++)
            {
                this.tComboEditor_StatusBar_FontSize.Items.Add(this._fontpitchSize[i], this._fontpitchSize[i].ToString());
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //this.tComboEditor_StatusBar_FontSize.Text = CT_DEF_FONT_SIZE.ToString();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            this.tComboEditor_StatusBar_FontSize.ValueChanged -= tComboEditor_StatusBar_FontSize_ValueChanged;
            this.tComboEditor_StatusBar_FontSize.Text = CT_DEF_FONT_SIZE.ToString();
            this.tComboEditor_StatusBar_FontSize.ValueChanged += tComboEditor_StatusBar_FontSize_ValueChanged;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //// 画面の初期値をセット
            //this.tEdit_SectionCodeAllowZero.Text = this._loginSectionCode;
            //this.tEdit_SectionCodeAllowZero_Leave(null, null);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

            // ログイン名を表示
            this.tToolbarsManager.Tools["LabelTool_LoginCharge"].SharedProps.Caption = this._loginUserName;

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //// 締め日
            //if (_prevTotalDay == DateTime.MinValue)
            //{
            //    // 画面へセット
            //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 DEL
            //    //this.tDateEdit_rl_TargetYMSt.Clear();
            //    //this.tDateEdit_rl_TargetYMEd.Clear();
            //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 DEL
            //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
            //    // 当月(年月度)取得
            //    DateTime thisYearMonth;
            //    _dateGetAcs.GetThisYearMonth( out thisYearMonth );
            //    this.tDateEdit_rl_TargetYMSt.SetDateTime( thisYearMonth );
            //    this.tDateEdit_rl_TargetYMEd.SetDateTime( thisYearMonth );
            //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD
            //}
            //else
            //{
            //    // 画面へセット
            //    this.tDateEdit_rl_TargetYMSt.SetDateTime(this._prevTotalMonth); // 前回締処理月
            //    this.tDateEdit_rl_TargetYMEd.SetDateTime(this._prevTotalMonth); // 前回締処理月
            //}
            ////this.tDateEdit_SalesDateSt.SetDateTime(this._prevTotalDay.AddDays(1));
            ////this.tDateEdit_SalesDateEd.SetDateTime(DateTime.Now);

            //// 画面の初期値を検索条件クラスにセット
            //// 検索条件クラスと画面上の状態は同一となる
            ////this._custPrtPpr.SectionCode[0] = this._loginSectionCode;

            //// 検索条件クラスから画面へ値をセット

            //// 画面の初期値を設定
            ////this.tEdit_SectionCodeAllowZero.Text = this._loginSectionCode;
            ////this.tEdit_SectionCodeAllowZero_Leave(null, null);

            //// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
            //// 前回入力値保持用
            //_prevInputValue = new PrevInputValue();
            //// 前回値としての初期値セット
            //_prevInputValue.SectionCode = this.tEdit_SectionCodeAllowZero.Text.Trim();
            //_prevInputValue.CustomerCode = 0;
            //_prevInputValue.ClaimCode = 0;
            //_prevInputValue.RedInputEmployeeCd = this.tEdit_rs_InputEmployeeCd.Text.Trim();
            //_prevInputValue.RedSalesSlipCd = 0;
            //// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 ADD
            // 仕入先電子元帳から呼び出された場合は、仕入先電子元帳へのリンクを削除
            if (this._invokerPgId.Equals(CT_SUPPLIER_ERECNOTE_PGID))
            {
                this.tToolbarsManager.Tools["ButtonTool_W_SuppPrtPprRef"].SharedProps.Visible = false;
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 ADD

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            // 初期化
            ClearInputProc();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            // ---ADD 陳艶丹 2020/11/20 PMKOBETSU-4097の対応 ------>>>>
            // 起動パラメータ
             string par = string.Empty;
            if (this.CommandLineArgs != null && this.CommandLineArgs.Length > 0)
            {
                foreach (string str in _commandLineArgs)
                {
                    par += " " + str;
                }
                par = par.Substring(1);
            }
            _custPtrRedSlipAcs.LoginParameter = par;
            // ---ADD 陳艶丹 2020/11/20 PMKOBETSU-4097の対応 ------<<<<
            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
            // 作業用フォルダパス
            _sWorkFolderPath = Path.Combine(ConstantManagement_ClientDirectory.NSCurrentDirectory, Path.Combine(ConstantManagement_ClientDirectory.Temp, _sWorkFolderName));
            // ReNameフォルダパス
            _sRenameFolderPath = Path.Combine(_sWorkFolderPath,_sReNameFolderName);
            // 仮想プリンタダイアログ制御　プログラムパス
            _sVirtualPrinterControllerPath = Path.Combine(ConstantManagement_ClientDirectory.NSCurrentDirectory, _sVirtualPrinterControllerPgName);
            // ファイル保存ダイアログ表示制御
            GetFileDialogDisplay();
            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
        }
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/23 ADD
        /// <summary>
        /// 拠点更新イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="sectionCode"></param>
        /// <param name="sectionName"></param>
        void _custPtrSearchAcs_UpdateSection(object sender, string sectionCode, string sectionName)
        {
            // 表示更新
            this.tEdit_SectionCodeAllowZero.Text = sectionCode.Trim();
            this.uLabel_SectionNm.Text = sectionName.Trim();

            // 前回値
            _prevInputValue.SectionCode = sectionCode.Trim();
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/23 ADD
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/14 ADD
        /// <summary>
        /// データテーブルカラムタイトル設定
        /// </summary>
        /// <param name="salesListDataTable"></param>
        /// <param name="uGrid_Slip"></param>
        private void SettingTableColCaption(DataTable table, Infragistics.Win.UltraWinGrid.UltraGrid grid)
        {
            foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn gridCol in grid.DisplayLayout.Bands[0].Columns)
            {
                try
                {
                    table.Columns[gridCol.Key].Caption = gridCol.Header.Caption;
                }
                catch
                {
                }
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/14 ADD
        #endregion // コンストラクタ

        #region プライベートメソッド

        #region 全ての入力欄をクリア

        /// <summary>
        /// 全ての入力欄をクリアします
        /// </summary>
        /// <br>Update Note : 2013/01/30 wangf </br>
        /// <br>            : 10801804-00、速度改善関連、Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応</br>
        /// <br>            : 残高集計のタイミングをずらす</br>
        private void ClearAllField()
        {
            // 共通条件エリア
            this.tEdit_SectionCodeAllowZero.Clear();
            this.uLabel_SectionNm.Text = string.Empty;
            this.tNedit_CustomerCode.Clear();
            this.uLabel_CustomerName.Text = string.Empty;
            // ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
            this.uButton_Balance.Enabled = false;
            // ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<
            //this.tNedit_ClaimCode.Clear();// DEL 2009/12/28
            //this.uLabel_ClaimName.Text = string.Empty;// DEL 2009/12/28
            this.tEdit_ClaimName.Clear();// ADD 2009/12/28

            // 詳細検索条件エリア

            // 残高照会エリア
            this.uLabel_AddUpYearMonth.Text = string.Empty;
            this.uLabel_ConsTaxLayMethod.Text = string.Empty;

            this.uLabel_AcpOdrTtl2TmBfBlDmd.Text = string.Empty;
            this.uLabel_LastTimeDemand.Text = string.Empty;
            this.uLabel_AfCalBlc.Text = string.Empty;
            this.uLabel_AfCalDemandPrice.Text = string.Empty;
            this.uLabel_OfsThisSalesTax.Text = string.Empty;
            this.uLabel_ThisSalesPriceTotal.Text = string.Empty;
            this.uLabel_ThisTimeDmdNrml.Text = string.Empty;

            this.uLabel_StandardPrice_Total.Text = string.Empty;
            this.uLabel_StandardPrice_Avg.Text = string.Empty;
            this.uLabel_GrossProfitAmount_Total.Text = string.Empty;
            this.uLabel_GrossProfitAmount_Avg.Text = string.Empty;
            this.uLabel_SoldAmount_Total.Text = string.Empty;
            this.uLabel_SoldAmount_Avg.Text = string.Empty;
            this.uLabel_Cost_Avg.Text = string.Empty;
            this.uLabel_Cost_Total.Text = string.Empty;

            this.uLabel_GrossProfitPercentage.Text = string.Empty;

            this.uLabel_SlipCount.Text = string.Empty;
            this.uLabel_DetailCount.Text = string.Empty;
            this.uLabel_Amount.Text = string.Empty;
            this.uLabel_ConsumeTaxAmount.Text = string.Empty;

            // 赤伝発行タブ
            this.uLabel_rs_CustomerName.Text = string.Empty;
            this.uLabel_rs_InputEmployeeName.Text = string.Empty;
            this.uLabel_rs_SectionName.Text = string.Empty;
            this.tEdit_rs_InputEmployeeCd.Clear();
            this.tEdit_rs_ReturnReason.Clear();
            this.tEdit_rs_SlipNote.Clear();
            this.tEdit_rs_SlipNote2.Clear();
            this.tEdit_rs_SlipNote3.Clear();
            // ADD 2012/03/29 gezh Redmine#29149 --------->>>>>
            this.tNedit_SalesCodeDiv.Text = string.Empty;
            this.uLabel_SalesCodeDiv.Text = string.Empty;
            // ADD 2012/03/29 gezh Redmine#29149 ---------<<<<<
            this.tNedit_rs_FeeAmount01.Clear();
            this.tNedit_rs_FeeAmount02.Clear();
            this.tNedit_rs_FeeAmountTotal.Clear();
            this.tNedit_rs_FeePercent01.Clear();
            this.tNedit_rs_FeePercent02.Clear();
            this.tNedit_rs_FeePercentTotal.Clear();
            this.tEdit_rs_PartySalesSlipNo.Clear();
            this.tNedit_rs_ReturnAmountTotal.Clear();
            // -------------ADD 2010/01/29-------------->>>>>
            this.tNedit_RetGoodsReason.Clear();
            this.tNedit_SlipNoteCode.Clear();
            this.tNedit_SlipNote2Code.Clear();
            this.tNedit_SlipNote3Code.Clear();
            // -------------ADD 2010/01/29--------------<<<<<
        }

        #endregion // 全ての入力欄をクリア

        #region 赤伝発行入力タブの表示領域調整

        /// <summary>
        /// 赤伝発行入力タブの表示領域調整
        /// </summary>
        /// <br>Update Note: K2013/01/23 鄧潘ハン </br>
        /// <br>           : 特販区分を追加することの登戸個別対応</br>
        private void setupRedSlipTabControls()
        {
            // 売上全体設定により項目を非表示に

            // 指示書(仮伝)番号
            if (!this._editablePartySalesSlipCd)
            {
                this.tEdit_rs_PartySalesSlipNo.Visible = false;
                this.uLabel_rs_PartySaleSlipNumTitle.Visible = false;
            }

            // 備考２
            if (!this._editableSlipNote2)
            {
                this.tEdit_rs_SlipNote2.Visible = false;
                this.uLabel_rs_SlipNote2Title.Visible = false;
                this.uButton_rs_SlipNote2.Visible = false;
                this.tNedit_SlipNote2Code.Visible = false;// ADD 2010/01/29
            }

            // 備考３
            if (!this._editableSlipNote3)
            {
                this.tEdit_rs_SlipNote3.Visible = false;
                this.uLabel_rs_SlipNote3Title.Visible = false;
                this.uButton_rs_SlipNote3.Visible = false;
                this.tNedit_SlipNote3Code.Visible = false;// ADD 2010/01/29
            }


            // ---ADD K2013/01/23  鄧潘ハン---------------------------------->>>>>
            if (this._opt_Nobuto == (int)Option.ON)
            {
                this.uLabel_rs_SalesCodeDiv.Visible = false;
                this.tNedit_SalesCodeDiv.Visible = false;
                this.uLabel_SalesCodeDiv.Visible = false;
                this.uButton_rs_SalesCodeDiv.Visible = false;
                this.uLabel_rs_fgridTitle07.Location = new System.Drawing.Point(6, 115);
                this.tNedit_rs_ReturnAmountTotal.Location = new System.Drawing.Point(224, 115);
            }
            else
            {
            // 販売区分
            if (!this._editableSalesCodeDiv)
            {
                this.uLabel_rs_SalesCodeDiv.Visible = false;
                this.tNedit_SalesCodeDiv.Visible = false;
                this.uLabel_SalesCodeDiv.Visible = false;
                this.uButton_rs_SalesCodeDiv.Visible = false;
                this.uLabel_rs_fgridTitle07.Location = new System.Drawing.Point(6, 115);
                this.tNedit_rs_ReturnAmountTotal.Location = new System.Drawing.Point(224, 115);
            }
            }
            // ---ADD K2013/01/23  鄧潘ハン----------------------------------<<<<<
            // ---DEL K2013/01/23  鄧潘ハン---------------------------------->>>>>
            // ADD 2012/03/29 gezh Redmine#29149 --------->>>>>
            // 販売区分
            //if (!this._editableSalesCodeDiv)
            //{
            //    this.uLabel_rs_SalesCodeDiv.Visible = false;
            //    this.tNedit_SalesCodeDiv.Visible = false;
            //    this.uLabel_SalesCodeDiv.Visible = false;
            //    this.uButton_rs_SalesCodeDiv.Visible = false;
            //    this.uLabel_rs_fgridTitle07.Location = new System.Drawing.Point(6, 115);
            //    this.tNedit_rs_ReturnAmountTotal.Location = new System.Drawing.Point(224, 115);
            //}
            // ADD 2012/03/29 gezh Redmine#29149 ---------<<<<<
            // ---DEL K2013/01/23  鄧潘ハン----------------------------------<<<<<

            // 手数料入力域のサイズを微調整
            this.tNedit_rs_FeeAmount01.Width = this.uLabel_rs_fgridTitle02.Width;
            this.tNedit_rs_FeeAmount02.Width = this.uLabel_rs_fgridTitle02.Width;
            this.tNedit_rs_FeeAmountTotal.Width = this.uLabel_rs_fgridTitle02.Width;
            this.tNedit_rs_FeePercent01.Width = this.uLabel_rs_fgridTitle03.Width;
            this.tNedit_rs_FeePercent02.Width = this.uLabel_rs_fgridTitle03.Width;
            this.tNedit_rs_FeePercentTotal.Width = this.uLabel_rs_fgridTitle03.Width;
        }

        #endregion // 赤伝発行入力タブの表示領域調整

        #region 詳細検索条件エリア

        /// <summary>
        /// 詳細検索条件エリアのフィールドを初期化、ボタンイメージを設定
        /// </summary>
        /// <br>Update Note : K2015/06/16 鮑晶 </br>
        /// <br>            : メイゴ㈱の個別開発依頼 </br>
        /// <br>            : 得意先電子元帳「地区」と「分析コード」を追加する。</br>
        private void InitializeExtraConditionFields()
        {
            // 検索条件部分
            this.uButton_BlGoodsCode.ImageList = this._imageList16;
            this.uButton_BlGoodsCode.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_BlGroupCode.ImageList = this._imageList16;
            this.uButton_BlGroupCode.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_EnterpriseGanreCode.ImageList = this._imageList16;
            this.uButton_EnterpriseGanreCode.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_FrontEmployeeCd.ImageList = this._imageList16;
            this.uButton_FrontEmployeeCd.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_MakerCd.ImageList = this._imageList16;
            this.uButton_MakerCd.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_SalesCode.ImageList = this._imageList16;
            this.uButton_SalesCode.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_SalesEmployeeCd.ImageList = this._imageList16;
            this.uButton_SalesEmployeeCd.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_SalesInputCode.ImageList = this._imageList16;
            this.uButton_SalesInputCode.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_SupplierCd.ImageList = this._imageList16;
            this.uButton_SupplierCd.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_UOESupplierCd.ImageList = this._imageList16;
            this.uButton_UOESupplierCd.Appearance.Image = (int)Size16_Index.STAR1;

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
            this.uButton_AddresseeCode.ImageList = this._imageList16;
            this.uButton_AddresseeCode.Appearance.Image = (int)Size16_Index.STAR1;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD

            this.uButton_WarehouseCd.ImageList = this._imageList16;
            this.uButton_WarehouseCd.Appearance.Image = (int)Size16_Index.STAR1;

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            this.uButton_SlipNote.ImageList = this._imageList16;
            this.uButton_SlipNote.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_SlipNote2.ImageList = this._imageList16;
            this.uButton_SlipNote2.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_SlipNote3.ImageList = this._imageList16;
            this.uButton_SlipNote3.Appearance.Image = (int)Size16_Index.STAR1;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            this.uButton_GoodsLGroup.ImageList = this._imageList16;
            this.uButton_GoodsLGroup.Appearance.Image = (int)Size16_Index.STAR1;

            this.uButton_GoodsMGroup.ImageList = this._imageList16;
            this.uButton_GoodsMGroup.Appearance.Image = (int)Size16_Index.STAR1;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
            this.uButton_SalesAreaCdGuide.ImageList = this._imageList16;
            this.uButton_SalesAreaCdGuide.Appearance.Image = (int)Size16_Index.STAR1;
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<
        }

        #endregion // 詳細検索条件エリア

        #region 検索条件クラス→画面
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 検索条件クラスの値を画面上に配置
        ///// </summary>
        ///// <returns>成功:true 失敗:false</returns>
        //private bool SetSearchConditionClass2Display()
        //{
        //    // プライベートレベルに保存された検索条件クラス(CustPrtPPr)から画面を作成

        //    // 基本条件エリア

        //    // 拠点コード
        //    this.tEdit_SectionCodeAllowZero.Text = this._custPrtPpr.SectionCode[0].Trim();
        //    this.tEdit_SectionCodeAllowZero_Leave(null, null); // 名称変換

        //    // 得意先コード
        //    this.tNedit_CustomerCode.SetInt(this._custPrtPpr.CustomerCode);
        //    this.tNedit_CustomerCode_Leave(null, null); // 名称変換

        //    // 請求先コード
        //    this.tNedit_ClaimCode.SetInt(this._custPrtPpr.ClaimCode);
        //    this.tNedit_ClaimCode_Leave(null, null); // 名称変換

        //    // 売上日
        //    this.tDateEdit_SalesDateSt.SetDateTime(this._custPrtPpr.St_SalesDate);
        //    this.tDateEdit_SalesDateEd.SetDateTime(this._custPrtPpr.Ed_SalesDate);

        //    // 入力日
        //    this.tDateEdit_AddUpADateSt.SetDateTime(this._custPrtPpr.St_AddUpADate);
        //    this.tDateEdit_AddUpADateEd.SetDateTime(this._custPrtPpr.Ed_AddUpADate);

        //    // 詳細検索条件エリア
        //    // 検索条件がセットされている項目はチェックボックスもONにする

        //    // 伝票区分
        //    if (this._custPrtPpr.SearchType == 0)
        //    {
        //        // 全て
        //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
        //        //this.tComboEditor_SalesSlipCd.Value = "全て";
        //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
        //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
        //        this.tComboEditor_SalesSlipCd.Value = 0;
        //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
        //    }
        //    else if (this._custPrtPpr.SearchType == 1)
        //    {
        //        if (this._custPrtPpr.SalesSlipCd.Length > 1)
        //        {
        //            // 売上/返品
        //            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
        //            //this.tComboEditor_SalesSlipCd.Value = "売上/返品";
        //            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
        //            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
        //            this.tComboEditor_SalesSlipCd.Value = 1;
        //            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
        //        }
        //        else
        //        {
        //            if (this._custPrtPpr.SalesSlipCd[0] == 1)
        //            {
        //                // 返品
        //                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
        //                //this.tComboEditor_SalesSlipCd.Value = "返品";
        //                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
        //                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
        //                this.tComboEditor_SalesSlipCd.Value = 3;
        //                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
        //            }
        //            else
        //            {
        //                if (this._custPrtPpr.AcptAnOdrStatus[0] == 20)
        //                {
        //                    // 受注
        //                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
        //                    this.tComboEditor_SalesSlipCd.Value = "受注";
        //                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
        //                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
        //                    this.tComboEditor_SalesSlipCd.Value = 4;
        //                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
        //                }
        //                else if (this._custPrtPpr.AcptAnOdrStatus[0] == 30)
        //                {
        //                    // 売上
        //                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
        //                    //this.tComboEditor_SalesSlipCd.Value = "売上";
        //                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
        //                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
        //                    this.tComboEditor_SalesSlipCd.Value = 2;
        //                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
        //                }
        //                else if (this._custPrtPpr.AcptAnOdrStatus[0] == 40)
        //                {
        //                    // 貸出
        //                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
        //                    //this.tComboEditor_SalesSlipCd.Value = "貸出";
        //                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
        //                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
        //                    this.tComboEditor_SalesSlipCd.Value = 5;
        //                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
        //                }
        //            }
        //        }
        //    }
        //    else if (this._custPrtPpr.SearchType == 2)
        //    {
        //        // 入金のみ
        //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
        //        //this.tComboEditor_SalesSlipCd.Value = "入金";
        //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
        //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
        //        this.tComboEditor_SalesSlipCd.Value = 6;
        //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
        //    }
        //    else
        //    {
        //        // そういう値はない
        //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
        //        this.tComboEditor_SalesSlipCd.Value = 0;
        //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
        //    }

        //    // 伝票番号
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.SalesSlipNum))
        //    {
        //        this.tEdit_SalesSlipNum.SetInt(int.Parse(this._custPrtPpr.SalesSlipNum.Trim()));
        //        this.uCheckSalesSlipNum.Checked = true;
        //    }

        //    // 担当者コード
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.SalesEmployeeCd))
        //    {
        //        this.tEdit_SalesEmployeeCd.Text = this._custPrtPpr.SalesEmployeeCd.Trim();
        //        this.uCheckSalesEmployeeCd.Checked = true;
        //        this.tEdit_SalesEmployeeCd_Leave(null, null); // 担当者名保存/名称取得
        //    }

        //    // 受注者コード
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.FrontEmployeeCd))
        //    {
        //        this.tEdit_FrontEmployeeCd.Text = this._custPrtPpr.FrontEmployeeCd.Trim();
        //        this.uCheckFrontEmployeeCd.Checked = true;
        //        this.tEdit_FrontEmployeeCd_Leave(null, null); // 受注者名保存/名称取得
        //    }

        //    // 発行者コード
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.SalesInputCode))
        //    {
        //        this.tEdit_SalesInputCode.Text = this._custPrtPpr.SalesInputCode.Trim();
        //        this.uCheckSalesInputCode.Checked = true;
        //        this.tEdit_SalesInputCode_Leave(null, null); // 発行者名保存/名称取得
        //    }

        //    // 管理番号
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.CarMngCode))
        //    {
        //        this.tEdit_CarMngCode.Text = this._custPrtPpr.CarMngCode.Trim();
        //        this.uCheckCarMngCode.Checked = true;
        //    }

        //    // 車種名称
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.ModelFullName))
        //    {
        //        this.tEdit_ModelFullName.Text = this._custPrtPpr.ModelFullName.Trim();
        //        this.uCheckModelFullName.Checked = true;
        //    }

        //    // 型式
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.FullModel))
        //    {
        //        this.tEdit_FullModel.Text = this._custPrtPpr.FullModel.Trim();
        //        this.uCheckFullModel.Checked = true;
        //    }

        //    // 車台No
        //    if (this._custPrtPpr.SearchFrameNo > 0)
        //    {
        //        this.tNedit_SearchFrameNo.SetInt(this._custPrtPpr.SearchFrameNo);
        //        this.uCheckSearchFrameNo.Checked = true;
        //    }

        //    // 得意先注番
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.PartySaleSlipNum))
        //    {
        //        this.tEdit_PartySalesSlipNum.Text = this._custPrtPpr.PartySaleSlipNum.Trim();
        //        this.uCheckPartySalesSlipNum.Checked = true;
        //    }

        //    // カラー名称
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.ColorName1))
        //    {
        //        this.tEdit_ColorName1.Text = this._custPrtPpr.ColorName1.Trim();
        //        this.uCheckColorName1.Checked = true;
        //    }

        //    // トリム名称
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.TrimName))
        //    {
        //        this.tEdit_TrimName.Text = this._custPrtPpr.TrimName.Trim();
        //        this.uCheckTrimName.Checked = true;
        //    }

        //    // UOE送信
        //    this.tComboEditor_DataSendCode.Value = (object)this._custPrtPpr.DataSendCode;

        //    // 備考１
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.SlipNote))
        //    {
        //        this.tEdit_SlipNote.Text = this._custPrtPpr.SlipNote.Trim();
        //        this.uCheckSlipNote.Checked = true;
        //    }

        //    // 備考２
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.SlipNote2))
        //    {
        //        this.tEdit_SlipNote2.Text = this._custPrtPpr.SlipNote2.Trim();
        //        this.uCheckSlipNote2.Checked = true;
        //    }

        //    // 備考３
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.SlipNote3))
        //    {
        //        this.tEdit_SlipNote3.Text = this._custPrtPpr.SlipNote3.Trim();
        //        this.uCheckSlipNote3.Checked = true;
        //    }

        //    // UOEリマーク1
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.UoeRemark1))
        //    {
        //        this.tEdit_UoeRemark1.Text = this._custPrtPpr.UoeRemark1.Trim();
        //        this.uCheckUoeRemark1.Checked = true;
        //    }

        //    // UOEリマーク2
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.UoeRemark2))
        //    {
        //        this.tEdit_UoeRemark2.Text = this._custPrtPpr.UoeRemark2.Trim();
        //        this.uCheckUoeRemark2.Checked = true;
        //    }

        //    // BLグループ
        //    if (this._custPrtPpr.BLGroupCode > 0)
        //    {
        //        this.tEdit_BlGroupCode.Text = this._custPrtPpr.BLGroupCode.ToString();
        //        this.uCheckBLGroupCode.Checked = true;
        //    }

        //    // BLコード
        //    if (this._custPrtPpr.BLGoodsCode > 0)
        //    {
        //        this.tEdit_BlGoodsCode.Text = this._custPrtPpr.BLGoodsCode.ToString();
        //        this.uCheckBLGoodsCode.Checked = true;
        //    }

        //    // 品名
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.GoodsName))
        //    {
        //        this.tEdit_GoodsName.Text = this._custPrtPpr.GoodsName.Trim();
        //        this.uCheckGoodsName.Checked = true;
        //    }

        //    // 品番
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.GoodsNo))
        //    {
        //        this.tEdit_GoodsNo.Text = this._custPrtPpr.GoodsNo.Trim();
        //        this.uCheckGoodsNo.Checked = true;
        //    }

        //    // メーカーコード
        //    if (this._custPrtPpr.GoodsMakerCd > 0)
        //    {
        //        this.tEdit_MakerCd.Text = this._custPrtPpr.GoodsMakerCd.ToString();
        //        this.uCheckGoodsMakerCd.Checked = true;
        //    }

        //    // 販売区分
        //    if (this._custPrtPpr.SalesCode > 0)
        //    {
        //        this.tEdit_SalesCode.Text = this._custPrtPpr.SalesCode.ToString();
        //        this.uCheckSalesCode.Checked = true;
        //    }

        //    // 自社分類
        //    if (this._custPrtPpr.EnterpriseGanreCode > 0)
        //    {
        //        this.tEdit_EnterpriseGanreCode.Text = this._custPrtPpr.EnterpriseGanreCode.ToString();
        //        this.uCheckEnterpriseGanreCode.Checked = true;
        //    }

        //    // 在庫取寄せ区分
        //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 DEL
        //    //this.tComboEditor_SalesOrderDivCd.Value = (object)this._custPrtPpr.SalesOrderDivCd;
        //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 DEL
        //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
        //    this.tComboEditor_SalesOrderDivCd.Value = this._custPrtPpr.SalesOrderDivCd;
        //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD

        //    // 倉庫コード
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.WarehouseCode))
        //    {
        //        this.tEdit_WarehouseCd.Text = this._custPrtPpr.WarehouseCode.Trim();
        //        this.uCheckWarehouseCode.Checked = true;
        //    }

        //    // 仕入伝票番号
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.SupplierSlipNo))
        //    {
        //        this.tEdit_SupplierSlipNo.Text = this._custPrtPpr.SupplierSlipNo.ToString();
        //        this.uCheckSupplierSlipNo.Checked = true;
        //    }

        //    // 仕入先
        //    if (this._custPrtPpr.SupplierCd > 0)
        //    {
        //        this.tEdit_SupplierCd.Text = this._custPrtPpr.SupplierCd.ToString();
        //        this.uCheckSupplierCd.Checked = true;
        //    }

        //    // 発注
        //    if (this._custPrtPpr.UOESupplierCd > 0)
        //    {
        //        this.tEdit_UOESupplierCd.Text = this._custPrtPpr.UOESupplierCd.ToString();
        //        this.uCheckUOESupplierCd.Checked = true;
        //    }

        //    // 明細備考
        //    if (!String.IsNullOrEmpty(this._custPrtPpr.DtlNote))
        //    {
        //        this.tEdit_DtlNote.Text = this._custPrtPpr.DtlNote.Trim();
        //        this.uCheckDtlNote.Checked = true;
        //    }

        //    // 削除区分

        //    return true;
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        #endregion // 検索条件クラス→画面

        #region 画面→検索条件クラス

        /// <summary>
        /// 画面の値を検索条件クラスに保存
        /// </summary>
        /// <returns>正常に変換 true, 値が不正 false</returns>
        /// <br>Update Note : 2011/11/28 楊洋 redmine#8172 得意先電子元帳/(BLﾊﾟｰﾂｵｰﾀﾞｰｼｽﾃﾑ)問合せ番号の追加</br>
        /// <br>Update Note : 2013/03/18 zhaimm 10800003-00 2013/05/15配信分</br>
        /// <br>            : Redmine#34807 検索時：0詰めデータと0詰めなしデータも抽出対象とする</br>
        /// <br>Update Note: SPK車台番号文字列対応に伴う車台番号(VINコード)による抽出を可能にする</br>
        /// <br>Programmer : FSI厚川 宏</br>
        /// <br>Date       : 2013/03/25</br>
        /// <br>Update Note: K2015/06/16 鮑晶</br>
        /// <br>管理番号   : 11101427-00</br>
        /// <br>           : メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
        /// <br>Update Note: 2016/01/21 脇田 靖之</br>
        /// <br>管理番号   : 11270007-00</br>
        /// <br>           : 仕掛一覧№2808 貸出受注対応</br>
        /// <br>           : ①検索条件に「出荷状況」項目を追加</br>
        /// <br>           : ②明細表示に計上数、未計上数項目を追加</br>
        /// <br>Update Note : K2016/02/23 時シン</br>
        /// <br>              ㈱イケモト 抽出条件にて受注作成区分を追加する対応</br>
        /// <br>Update Note : K2016/03/07 時シン</br>
        /// <br>              ㈱イケモト 受注作成区分が「2:通常受注区分」or「3:伝発UOE区分」の場合、受注データが出力できる対応</br>
        private bool SetDisplay2SearchConditionClass()
        {
            // 検索上限
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
            //this._custPrtPpr.SearchCnt = 20001;
            this._custPrtPpr.SearchCnt = DATA_COUNT_MAX + 1;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD

            // 拠点コード
            string[] secCode; //  = new string[1];
            // 入力されていないまたは"00"(全社)の場合はnullでセット
            if (String.IsNullOrEmpty(this.tEdit_SectionCodeAllowZero.Text.Trim()) || this.tEdit_SectionCodeAllowZero.Text.Trim() == "00")
            {
                secCode = null;
            }
            else
            {
                secCode = new string[1];
                secCode[0] = this.tEdit_SectionCodeAllowZero.Text.Trim();
            }
            this._custPrtPpr.SectionCode = secCode;

            // 企業コード
            this._custPrtPpr.EnterpriseCode = this._enterpriseCode;

            // 得意先コード
            this._custPrtPpr.CustomerCode = this.tNedit_CustomerCode.GetInt();

            // 請求先コード
            //this._custPrtPpr.ClaimCode = this.tNedit_ClaimCode.GetInt();// DEL 2009/12/28
            this._custPrtPpr.ClaimCode = this._prevInputValue.ClaimCode;// ADD 2009/12/28

            // 開始売上日付
            this._custPrtPpr.St_SalesDate = this.tDateEdit_SalesDateSt.GetDateTime();

            // 終了売上日付
            this._custPrtPpr.Ed_SalesDate = this.tDateEdit_SalesDateEd.GetDateTime();

            // 開始入力日付
            this._custPrtPpr.St_AddUpADate = this.tDateEdit_AddUpADateSt.GetDateTime();

            // 終了入力日付
            this._custPrtPpr.Ed_AddUpADate = this.tDateEdit_AddUpADateEd.GetDateTime();

            // 受注ステータス
            // 売上伝票区分
            // 伝票検索区分
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
            //if (this.tComboEditor_SalesSlipCd.SelectedIndex > 0)
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
            if (this.tComboEditor_SalesSlipCd.SelectedIndex >= 0)
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
            {
                int[] sAcptAnOdrStatus = new int[1];
                int[] sSalesSlipCd;
                int iSearchType = 0;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
                //switch ((string)this.tComboEditor_SalesSlipCd.SelectedItem.DisplayText)
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
                switch ((int)this.tComboEditor_SalesSlipCd.Value)
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
                {
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
                    //case "全て":
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
                    // 全て
                    case 0:
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
                        {
                            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
                            //sSalesSlipCd = new int[1];
                            //iSearchType = 0;
                            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
                            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
                            sAcptAnOdrStatus = new int[] { 20, 30, 40 };
                            sSalesSlipCd = new int[2];
                            sSalesSlipCd[0] = 0;
                            sSalesSlipCd[1] = 1;
                            iSearchType = 0;
                            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
                            break;
                        }
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
                    //case "売上／返品":
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
                    // 売上／返品
                    case 1:
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
                        {
                            sAcptAnOdrStatus[0] = 30;
                            sSalesSlipCd = new int[2];
                            sSalesSlipCd[0] = 0;
                            sSalesSlipCd[1] = 1;
                            iSearchType = 1;
                            break;
                        }
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
                    //case "売上":
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
                    // 売上
                    case 2:
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
                        {
                            sAcptAnOdrStatus[0] = 30;
                            sSalesSlipCd = new int[1];
                            sSalesSlipCd[0] = 0;
                            iSearchType = 1;
                            break;
                        }
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
                    //case "返品":
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
                    // 返品
                    case 3:
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
                        {
                            sAcptAnOdrStatus[0] = 30;
                            sSalesSlipCd = new int[1];
                            sSalesSlipCd[0] = 1;
                            iSearchType = 1;
                            break;
                        }
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
                    //case "受注":
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
                    // 受注
                    case 4:
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
                        {
                            sAcptAnOdrStatus[0] = 20;
                            sSalesSlipCd = new int[1];
                            sSalesSlipCd[0] = 0;
                            iSearchType = 1;
                            break;
                        }
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
                    //case "貸出":
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
                    // 貸出
                    case 5:
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
                        {
                            sAcptAnOdrStatus[0] = 40;
                            sSalesSlipCd = new int[1];
                            sSalesSlipCd[0] = 0;
                            iSearchType = 1;
                            break;
                        }
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
                    //case "入金":
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
                    // 入金
                    case 6:
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
                        {
                            //sSalesSlipCd = new int[1];        //DEL 2009/02/10 不具合対応[10647]
                            // ---ADD 2009/02/10 不具合対応[10647] ------------------------>>>>>
                            sAcptAnOdrStatus = null;
                            sSalesSlipCd = null;
                            // ---ADD 2009/02/10 不具合対応[10647] ------------------------<<<<<
                            iSearchType = 2;
                            break;
                        }
                    default:
                        {
                            sSalesSlipCd = new int[1];
                            iSearchType = 0;
                            break;
                        }
                }

                //----- ADD K2016/03/07 時シン ㈱イケモト 受注作成区分が「2:通常受注区分」or「3:伝発UOE区分」の場合、受注データが出力できる対応 ----->>>>>
                // イケモト個別オプションオン&受注作成区分が「通常受注伝票」「伝発UOE受注伝票」の場合
                if (this._opt_IKeMoTo == (int)Option.ON &&
                    tComboEditor_AcptAnOdrMakeDiv.Visible &&
                   ((int)this.tComboEditor_AcptAnOdrMakeDiv.SelectedItem.DataValue == 2 || (int)this.tComboEditor_AcptAnOdrMakeDiv.SelectedItem.DataValue == 3))
                {
                    // 受注作成区分が「通常受注伝票」「伝発UOE受注伝票」の場合は、伝票区分に関わらず「受注」固定とする
                    // 伝票区分が入金の場合、Nullでセットするため
                    if (sAcptAnOdrStatus == null)
                    {
                        sAcptAnOdrStatus = new int[] { 20 };
                    }
                    // 伝票区分が入金以外の場合
                    else
                    {
                        sAcptAnOdrStatus[0] = 20;
                    }
                    sSalesSlipCd = new int[1];
                    sSalesSlipCd[0] = 0;
                    iSearchType = 1;
                }
                //----- ADD K2016/03/07 時シン ㈱イケモト 受注作成区分が「2:通常受注区分」or「3:伝発UOE区分」の場合、受注データが出力できる対応 -----<<<<<

                this._custPrtPpr.AcptAnOdrStatus = sAcptAnOdrStatus;
                this._custPrtPpr.SalesSlipCd = sSalesSlipCd;
                this._custPrtPpr.SearchType = iSearchType;
            }


            // 伝票番号
            this._custPrtPpr.SalesSlipNum = this.tEdit_SalesSlipNum.Text.Trim();

            // 担当者
            this._custPrtPpr.SalesEmployeeCd = this._swSalesEmployeeCd;

            // 受注者
            this._custPrtPpr.FrontEmployeeCd = this._swFrontEmployeeCd;

            // 発行者
            this._custPrtPpr.SalesInputCode = this._swSalesInputCode;

            // 管理番号
            //this._custPrtPpr.CarMngCode = this.tEdit_CarMngCode.Text.Trim(); // DEL 2009/10/22

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //// 車種名称
            //this._custPrtPpr.ModelFullName = this.tEdit_ModelFullName.Text.Trim();

            //// 型式
            //this._custPrtPpr.FullModel = this.tEdit_FullModel.Text.Trim();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

            // ---------DEL 2013/03/25---------->>>>>
            //// 車台No
            //this._custPrtPpr.SearchFrameNo = this.tNedit_SearchFrameNo.GetInt();
            // ---------DEL 2013/03/25----------<<<<<

            // ---------ADD 2010/08/05---------->>>>>
            // 車台番号
            this._custPrtPpr.FrameNo = _srSearchFrameNo.Replace("*", "%");
            // ---------ADD 2010/08/05----------<<<<<

            // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
            // 自動回答
            if (tComboEditor_AutoAnswerDivSCM.Visible)
            {
                //this._custPrtPpr.AutoAnswerDivSCM = (int)this.tComboEditor_AutoAnswerDivSCM.SelectedItem.DataValue + 1;// del 2011/08/11 zhubj
                this._custPrtPpr.AutoAnswerDivSCM = (int)this.tComboEditor_AutoAnswerDivSCM.SelectedItem.DataValue;// add 2011/08/11 zhubj
            }
            else
            {
                this._custPrtPpr.AutoAnswerDivSCM = 0;
            }
            // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<

            //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>                             
            //問合せ番号
            if (!string.IsNullOrEmpty(this.tNedit_InquiryNumber.Text.Trim()))
            {
                this._custPrtPpr.InquiryNumber = Convert.ToInt64(this.tNedit_InquiryNumber.Text.Trim());
            }
            else
            {
                this._custPrtPpr.InquiryNumber = 0;
            }
            //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<

            // 指示書(仮伝)番号
            //this._custPrtPpr.PartySaleSlipNum = this.tEdit_PartySalesSlipNum.Text.Trim(); // DEL 2013/03/18 zhaimm Redmine#34807
            this._custPrtPpr.PartySaleSlipNum = GetDevidedPartySalesSlipNums(this.tEdit_PartySalesSlipNum.Text, 9); // ADD 2013/03/18 zhaimm Redmine#34807

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //// カラー名称
            //this._custPrtPpr.ColorName1 = this.tEdit_ColorName1.Text.Trim();

            //// トリム名称
            //this._custPrtPpr.TrimName = this.tEdit_TrimName.Text.Trim();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

            // UOE送信
            if (this.tComboEditor_DataSendCode.SelectedIndex > 0)
            {
                this._custPrtPpr.DataSendCode = (int)this.tComboEditor_DataSendCode.SelectedItem.DataValue;
            }
            // ---ADD 2009/02/10 不具合対応[11438] ----------------------------------------->>>>>
            // 全て選択時
            if (this.tComboEditor_DataSendCode.SelectedIndex == 0)
            {
                this._custPrtPpr.DataSendCode = 0;
            }
            // ---ADD 2009/02/10 不具合対応[11438] -----------------------------------------<<<<<

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //// 備考１
            //this._custPrtPpr.SlipNote = this.tEdit_SlipNote.Text.Trim();

            //// 備考２
            //this._custPrtPpr.SlipNote2 = this.tEdit_SlipNote2.Text.Trim();

            //// 備考３
            //this._custPrtPpr.SlipNote3 = this.tEdit_SlipNote3.Text.Trim();

            //// UOEリマーク１
            //this._custPrtPpr.UoeRemark1 = this.tEdit_UoeRemark1.Text.Trim();

            //// UOEリマーク２
            //this._custPrtPpr.UoeRemark2 = this.tEdit_UoeRemark2.Text.Trim();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

            // BLグループ
            this._custPrtPpr.BLGroupCode = this._swBLGroupCode;

            // BLコード
            this._custPrtPpr.BLGoodsCode = this._swBLGoodsCode;

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //// 品名
            //this._custPrtPpr.GoodsName = this.tEdit_GoodsName.Text.Trim();

            //// 品番
            //this._custPrtPpr.GoodsNo = this.tEdit_GoodsNo.Text.Trim();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

            // メーカーコード
            this._custPrtPpr.GoodsMakerCd = this._swGoodsMakerCd;

            // 販売区分コード
            this._custPrtPpr.SalesCode = this._swSalesCode;

            // 自社分類コード
            this._custPrtPpr.EnterpriseGanreCode = this._swEnterpriseGanreCode;

            // 在庫取寄せ区分
            if (this.tComboEditor_SalesOrderDivCd.SelectedIndex > 0)
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 DEL
                //this._custPrtPpr.SalesOrderDivCd = (int)this.tComboEditor_SalesOrderDivCd.SelectedItem.DataValue;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
                this._custPrtPpr.SalesOrderDivCd = (int)this.tComboEditor_SalesOrderDivCd.Value;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD
            }
            // ---ADD 2009/02/10 不具合対応[11438] ----------------------------------------->>>>>
            // 全て選択時
            if (this.tComboEditor_SalesOrderDivCd.SelectedIndex == 0)
            {
                this._custPrtPpr.SalesOrderDivCd = -1;
            }
            // ---ADD 2009/02/10 不具合対応[11438] -----------------------------------------<<<<<

            // 倉庫コード
            this._custPrtPpr.WarehouseCode = this._swWarehouseCd;

            // 仕入伝票番号
            this._custPrtPpr.SupplierSlipNo = this.tEdit_SupplierSlipNo.Text.Trim();

            // 仕入先
            this._custPrtPpr.SupplierCd = this._swSupplierCd;

            // 発注先
            this._custPrtPpr.UOESupplierCd = this._swUOESupplierCd;

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
            // 納入先
            this._custPrtPpr.AddresseeCode = this._swAddresseeCode;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //// 明細備考
            //this._custPrtPpr.DtlNote = this.tEdit_DtlNote.Text.Trim();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            // 商品属性
            this._custPrtPpr.GoodsKindCode = (int)this.tComboEditor_GoodsKindCode.Value;
            // 商品大分類
            this._custPrtPpr.GoodsLGroup = this._swGoodsLGroup;
            // 商品中分類
            this._custPrtPpr.GoodsMGroup = this._swGoodsMGroup;
            // 売上伝票区分(明細)
            this._custPrtPpr.SalesSlipCdDtl = (int)this.tComboEditor_SalesSlipCdDtl.Value;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            // ↓本来、ＵＩ側で%をセットするのは好ましくないが、現状のリモート処理に合わせる。

            // 車種名称
            this._custPrtPpr.ModelFullName = _srModelFullName.Replace("*", "%");
            // 型式
            this._custPrtPpr.FullModel = _srFullModel.Replace("*", "%");
            // カラー名称
            this._custPrtPpr.ColorName1 = _srColorName1.Replace("*", "%");
            // トリム名称
            this._custPrtPpr.TrimName = _srTrimName.Replace("*", "%");
            // --- ADD 2009/10/22 ----->>>>>
            // 管理番号
            this._custPrtPpr.CarMngCode = _srCarMngCode.Replace("*", "%");
            // --- ADD 2009/10/22 -----<<<<<
            // 備考１
            this._custPrtPpr.SlipNote = _srSlipNote.Replace("*", "%");
            // 備考２
            this._custPrtPpr.SlipNote2 = _srSlipNote2.Replace("*", "%");
            // 備考３
            this._custPrtPpr.SlipNote3 = _srSlipNote3.Replace("*", "%");
            // UOEリマーク１
            this._custPrtPpr.UoeRemark1 = _srUOERemark1.Replace("*", "%");
            // UOEリマーク２
            this._custPrtPpr.UoeRemark2 = _srUOERemark2.Replace("*", "%");
            // 品名
            this._custPrtPpr.GoodsName = _srGoodsName.Replace("*", "%");
            // 品番
            this._custPrtPpr.GoodsNo = _srGoodsNo.Replace("*", "%");
            // 明細備考
            this._custPrtPpr.DtlNote = _srDtlNote.Replace("*", "%");
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            // 棚番
            this._custPrtPpr.WarehouseShelfNo = _srWarehouseShelfNo.Replace("*", "%");
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

            // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
            // 出荷状況
            if (tComboEditor_AddUpRemDiv.Visible)
            {
                this._custPrtPpr.AddUpRemDiv = (int)this.tComboEditor_AddUpRemDiv.SelectedItem.DataValue;
            }
            else
            {
                this._custPrtPpr.AddUpRemDiv = 0;
            }
            // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<

            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
            if (string.IsNullOrEmpty(this.tEdit_SalesAreaNm.Text.Trim())) 
            {
                this._salesAreaCd = 0;
            }
            //地区
            this._custPrtPpr.SalesAreaCode = this._salesAreaCd;
            //分析コード1
            this._custPrtPpr.CustAnalysCode1 = this.tNedit_CustAnalysCode1.GetInt();
            //分析コード2
            this._custPrtPpr.CustAnalysCode2 = this.tNedit_CustAnalysCode2.GetInt();
            //分析コード3
            this._custPrtPpr.CustAnalysCode3 = this.tNedit_CustAnalysCode3.GetInt();
            //分析コード4
            this._custPrtPpr.CustAnalysCode4 = this.tNedit_CustAnalysCode4.GetInt();
            //分析コード5
            this._custPrtPpr.CustAnalysCode5 = this.tNedit_CustAnalysCode5.GetInt();
            //分析コード6
            this._custPrtPpr.CustAnalysCode6 = this.tNedit_CustAnalysCode6.GetInt();
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<

            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
            // 受注作成区分
            // 当該項目は表示する場合
            if (tComboEditor_AcptAnOdrMakeDiv.Visible)
            {
                this._custPrtPpr.AcptAnOdrMakeDiv = (int)this.tComboEditor_AcptAnOdrMakeDiv.SelectedItem.DataValue;
            }
            // 当該項目は表示しない場合
            else
            {
                this._custPrtPpr.AcptAnOdrMakeDiv = 0;
            }
            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<

            // 削除指定区分
            // フィールドのLeaveイベントで取得している

            return true;
        }

        //----- ADD 2013/03/18 zhaimm Redmine#34807 ---------->>>>>
        /// <summary>
        /// 指示書(仮伝)番号0詰めを行う
        /// </summary>
        /// <param name="partySaleSlipNum">指示書(仮伝)番号</param>
        /// <param name="totalWidth">結果として生成される文字列の文字数</param>
        /// <returns>指示書(仮伝)番号</returns>
        /// <remarks>
        /// <br>Note		: 10800003-00、2013/05/15配信分、赤伝発行時：売上伝票入力の仕様と同様、0詰めを行う。</br>
        /// <br>Programmer	: zhaimm</br>
        /// <br>Date		: 2013/03/18</br>
        /// </remarks>
        private string GetDevidedPartySalesSlipNums(string partySaleSlipNum, int totalWidth)
        {
            string objText;
            StringBuilder tmpSb;

            // 空白と「NULL」の場合
            if ((string.IsNullOrEmpty(partySaleSlipNum)) || (string.IsNullOrEmpty(partySaleSlipNum.Trim())))
            {
                return string.Empty;
            }

            objText = partySaleSlipNum.TrimEnd();

            // 「00」の場合、非数字として処理
            if (string.IsNullOrEmpty(objText.Trim('0')))
            {
                return "'" + objText + "'";
            }

            // 非数字の場合
            if (System.Text.RegularExpressions.Regex.IsMatch(objText, @"[^0-9]"))
            {
                objText = "'" + objText.Replace("'", "''") + "'";
            }
            else
            {
                // 数字の場合
                tmpSb = new StringBuilder();
                do
                {
                    tmpSb.Append("'" + objText + "',");
                    objText = "0" + objText;
                }
                while (objText.Length <= totalWidth);

                objText = tmpSb.ToString().TrimEnd(',');
            }

            return objText;
        }
        //----- ADD 2013/03/18 zhaimm Redmine#34807 ----------<<<<<

        #endregion // 画面→検索条件クラス

        #region 列幅自動調整

        /// <summary>
        /// 列幅自動調整
        /// </summary>
        /// <param name="autoAdjust">自動調整するかどうか</param>
        /// <param name="targetGrid">対象となるグリッド 0:伝票一覧, 1:明細, 2:赤伝 3:残高</param>
        /// <br>Update Note : 2010/01/29 呉元嘯</br>
        /// <br>              4次改良 不具合対応</br>
        /// <br>              列サイズの自動調整のチェックボックスに関して、画面を閉じた場合の記憶対象とするように修正</br>
        /// <br>Update Note : 2010/06/08 呉元嘯 COL幅保存処理の不具合対応</br>
        private void autoColumnAdjust(bool autoAdjust, int targetGrid)
        {
            switch (targetGrid)
            {
                #region 伝票一覧グリッド
                case 0:
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                        if (this.uGrid_Slip.DisplayLayout.AutoFitStyle == Infragistics.Win.UltraWinGrid.AutoFitStyle.None && !autoAdjust ||
                             this.uGrid_Slip.DisplayLayout.AutoFitStyle != Infragistics.Win.UltraWinGrid.AutoFitStyle.None && autoAdjust) break;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD

                        // 自動調整プロパティを調整
                        if (autoAdjust)
                        {
                            this.uGrid_Slip.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns;
                        }
                        else
                        {
                            this.uGrid_Slip.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.None;
                        }
                        // 全ての列でサイズ調整
                        for (int i = 0; i < this.uGrid_Slip.DisplayLayout.Bands[0].Columns.Count; i++)
                        {
                            this.uGrid_Slip.DisplayLayout.Bands[0].Columns[i].PerformAutoResize();
                        }
                        break;
                    }
                #endregion // 伝票一覧グリッド

                #region 明細グリッド
                case 1:
                    {
                        // --- UPD m.suzuki 2010/07/27 ---------->>>>>
                        //// -------------UPD 2010/06/08-------------->>>>>
                        ////// -------------DEL 2010/01/29-------------->>>>>
                        ////// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                        //////if (this.uGrid_Detail.DisplayLayout.AutoFitStyle == Infragistics.Win.UltraWinGrid.AutoFitStyle.None && !autoAdjust ||
                        //////    this.uGrid_Detail.DisplayLayout.AutoFitStyle != Infragistics.Win.UltraWinGrid.AutoFitStyle.None && autoAdjust) break;
                        ////// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD
                        ////// -------------DEL 2010/01/29--------------<<<<<
                        //if (this.uGrid_Slip.DisplayLayout.AutoFitStyle == Infragistics.Win.UltraWinGrid.AutoFitStyle.None && !autoAdjust ||
                        //     this.uGrid_Slip.DisplayLayout.AutoFitStyle != Infragistics.Win.UltraWinGrid.AutoFitStyle.None && autoAdjust) break;
                        //// -------------UPD 2010/06/08--------------<<<<<
                        if (this.uGrid_Detail.DisplayLayout.AutoFitStyle == Infragistics.Win.UltraWinGrid.AutoFitStyle.None && !autoAdjust ||
                             this.uGrid_Detail.DisplayLayout.AutoFitStyle != Infragistics.Win.UltraWinGrid.AutoFitStyle.None && autoAdjust) break;
                        // --- UPD m.suzuki 2010/07/27 ----------<<<<<
                        // 自動調整プロパティを調整
                        if (autoAdjust)
                        {
                            this.uGrid_Detail.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns;
                        }
                        else
                        {
                            this.uGrid_Detail.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.None;
                        }
                        // 全ての列でサイズ調整
                        for (int i = 0; i < this.uGrid_Detail.DisplayLayout.Bands[0].Columns.Count; i++)
                        {
                            this.uGrid_Detail.DisplayLayout.Bands[0].Columns[i].PerformAutoResize();
                        }
                        break;
                    }
                #endregion // 明細グリッド

                #region 赤伝グリッド
                case 2:
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                        if (this.uGrid_RedSlip.DisplayLayout.AutoFitStyle == Infragistics.Win.UltraWinGrid.AutoFitStyle.None && !autoAdjust ||
                             this.uGrid_RedSlip.DisplayLayout.AutoFitStyle != Infragistics.Win.UltraWinGrid.AutoFitStyle.None && autoAdjust) break;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD

                        // 自動調整プロパティを調整
                        if (autoAdjust)
                        {
                            this.uGrid_RedSlip.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns;
                        }
                        else
                        {
                            this.uGrid_RedSlip.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.None;
                        }
                        // 全ての列でサイズ調整
                        for (int i = 0; i < this.uGrid_RedSlip.DisplayLayout.Bands[0].Columns.Count; i++)
                        {
                            this.uGrid_RedSlip.DisplayLayout.Bands[0].Columns[i].PerformAutoResize();
                        }
                        break;
                    }
                #endregion // 赤伝グリッド

                #region 残高グリッド
                case 3:
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                        if (this.uGrid_BalanceList.DisplayLayout.AutoFitStyle == Infragistics.Win.UltraWinGrid.AutoFitStyle.None && !autoAdjust ||
                             this.uGrid_BalanceList.DisplayLayout.AutoFitStyle != Infragistics.Win.UltraWinGrid.AutoFitStyle.None && autoAdjust) break;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD

                        // 自動調整プロパティを調整
                        if (autoAdjust)
                        {
                            this.uGrid_BalanceList.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns;
                        }
                        else
                        {
                            this.uGrid_BalanceList.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.None;
                        }
                        // 全ての列でサイズ調整
                        for (int i = 0; i < this.uGrid_BalanceList.DisplayLayout.Bands[0].Columns.Count; i++)
                        {
                            this.uGrid_BalanceList.DisplayLayout.Bands[0].Columns[i].PerformAutoResize();
                        }
                        break;
                    }
                #endregion // 残高グリッド

                default: break;
            }
        }

        #endregion //

        #region 必須項目チェック

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
        ///// <summary>
        ///// 必須項目チェック
        ///// </summary>
        ///// <param name="displayWarning">警告メッセージを表示する</param>
        ///// <returns>必須条件を満たす true, 違反 false</returns>
        //private bool checkItemValues(bool displayWarning)
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>
        private bool CheckItemValues(out Control errorControl)
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
        {
            # region //DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
            //// 現在売上日のみが対象
            ////----------------------
            //// 項目入力チェック
            ////----------------------
            //if (this.tDateEdit_SalesDateSt.GetLongDate() == 0)
            //{
            //    if (displayWarning)
            //    {
            //        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
            //            "売上日（開始）" + MSG_ITEM_MUST_BE_INPUT, -1, MessageBoxButtons.OK);
            //    }
            //    this.tDateEdit_SalesDateSt.Focus();
            //    return false;
            //}

            //if (this.tDateEdit_SalesDateEd.GetLongDate() == 0)
            //{
            //    if (displayWarning)
            //    {
            //        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
            //            "売上日（終了）" + MSG_ITEM_MUST_BE_INPUT, -1, MessageBoxButtons.OK);
            //    }
            //    this.tDateEdit_SalesDateEd.Focus();
            //    return false;
            //}

            ////----------------------
            //// 日付の前後チェック
            ////----------------------
            //if (this.tDateEdit_AddUpADateSt.GetLongDate() - this.tDateEdit_AddUpADateEd.GetLongDate() > 0)
            //{
            //    if (displayWarning)
            //    {
            //        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
            //            MSG_MUST_BE_CORRECT_CALENDER, -1, MessageBoxButtons.OK);
            //    }
            //    this.tDateEdit_AddUpADateSt.Focus();
            //    return false;
            //}

            //if (this.tDateEdit_SalesDateSt.GetLongDate() - this.tDateEdit_SalesDateEd.GetLongDate() > 0)
            //{
            //    if (displayWarning)
            //    {
            //        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
            //            MSG_MUST_BE_CORRECT_CALENDER, -1, MessageBoxButtons.OK);
            //    }
            //    this.tDateEdit_SalesDateSt.Focus();
            //    return false;
            //}
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //// 得意先は警告対象(警告メッセージを出さない場合は実質チェックも行わない)
            //if (displayWarning)
            //{
            //    if (String.IsNullOrEmpty(this.tNedit_CustomerCode.Text.Trim()))
            //    {
            //        // Yes/Noメッセージ
            //        DialogResult result = TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
            //            "得意先コード" + MSG_ITEM_SHOULD_BE_INPUT + MSG_SHALL_WE_CONTINUE, -1, MessageBoxButtons.YesNo);

            //        if (result == DialogResult.No)
            //        {
            //            this.tNedit_CustomerCode.Focus();
            //            return false;
            //        }
            //    }
            //}
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
            # endregion

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            errorControl = null;
            DateGetAcs.CheckDateRangeResult cdrResult;

            //-----------------------------------------------------------
            // 売上日（開始～終了）
            //-----------------------------------------------------------
            # region [売上日]
            //if ( CheckDateRangeForSlip( ref tDateEdit_SalesDateSt, ref tDateEdit_SalesDateEd, out cdrResult, false ) == false ) // DEL 2009/05/11
            if (CheckDateRangeForSlip(ref tDateEdit_SalesDateSt, ref tDateEdit_SalesDateEd, out cdrResult, true) == false) // ADD 2009/05/11
            {
                string errorMessage = string.Empty;
                switch (cdrResult)
                {
                    case DateGetAcs.CheckDateRangeResult.ErrorOfStartInvalid:
                        errorMessage = MSG_ST_SALESDATE_ERROR; // ADD 2009/05/11
                        errorControl = tDateEdit_SalesDateSt; // ADD 2009/05/11
                        break;
                    case DateGetAcs.CheckDateRangeResult.ErrorOfStartNoInput:
                        //errorMessage = MSG_ST_SALESDATE_ERROR; // DEL 2009/05/11
                        //errorControl = tDateEdit_SalesDateSt; // DEL 2009/05/11
                        break;
                    case DateGetAcs.CheckDateRangeResult.ErrorOfEndInvalid:
                        errorMessage = MSG_ED_SALESDATE_ERROR; // ADD 2009/05/11
                        errorControl = tDateEdit_SalesDateEd; // ADD 2009/05/11
                        break;
                    case DateGetAcs.CheckDateRangeResult.ErrorOfEndNoInput:
                        //errorMessage = MSG_ED_SALESDATE_ERROR; // DEL 2009/05/11
                        //errorControl = tDateEdit_SalesDateSt; // DEL 2009/05/11
                        break;
                    case DateGetAcs.CheckDateRangeResult.ErrorOfRangeOver:
                        errorMessage = MSG_SALESDATE_RANGE_ERROR;
                        errorControl = tDateEdit_SalesDateSt;
                        break;
                    case DateGetAcs.CheckDateRangeResult.ErrorOfReverse:
                        errorMessage = MSG_MUST_BE_CORRECT_CALENDER;
                        errorControl = tDateEdit_SalesDateSt;
                        break;
                }

                if (errorMessage != string.Empty && errorControl != null)
                {
                    //// フォーカス移動
                    //errorControl.Focus();

                    // メッセージ表示
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                        errorMessage, -1, MessageBoxButtons.OK);

                    return false; // ADD 2009/05/11
                }
                //return false; // DEL 2009/05/11
            }
            # endregion

            //-----------------------------------------------------------
            // 入力日（開始～終了）
            //-----------------------------------------------------------
            # region [入力日]
            // --- CHG 2009/02/25 障害ID:7882対応------------------------------------------------------>>>>>
            //if ( CheckDateRangeForSlip( ref tDateEdit_AddUpADateSt, ref tDateEdit_AddUpADateEd, out cdrResult, true ) == false )
            //{
            //    string errorMessage = string.Empty;
            //    switch ( cdrResult )
            //    {
            //        case DateGetAcs.CheckDateRangeResult.ErrorOfStartInvalid:
            //        case DateGetAcs.CheckDateRangeResult.ErrorOfStartNoInput:
            //            errorMessage = MSG_ST_INPUTDATE_ERROR;
            //            errorControl = tDateEdit_SalesDateSt;
            //            break;
            //        case DateGetAcs.CheckDateRangeResult.ErrorOfEndInvalid:
            //        case DateGetAcs.CheckDateRangeResult.ErrorOfEndNoInput:
            //            errorMessage = MSG_ED_INPUTDATE_ERROR;
            //            errorControl = tDateEdit_SalesDateSt;
            //            break;
            //        case DateGetAcs.CheckDateRangeResult.ErrorOfReverse:
            //            errorMessage = MSG_MUST_BE_CORRECT_CALENDER;
            //            errorControl = tDateEdit_SalesDateSt;
            //            break;
            //    }

            //    if ( errorMessage != string.Empty && errorControl != null )
            //    {
            //        //// フォーカス移動
            //        //errorControl.Focus();

            //        // メッセージ表示
            //        TMsgDisp.Show( this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
            //            errorMessage, -1, MessageBoxButtons.OK );
            //    }
            //    return false;
            //}

            string errorMessage2 = string.Empty;
            // --- DEL 2020/12/21 警告対応 ---------->>>>>
            //DateGetAcs.CheckDateResult cdResult;
            // --- DEL 2020/12/21 警告対応 ----------<<<<<

            // --------------UPD 2009/12/28-------------->>>>>
            //if (tDateEdit_AddUpADateSt.GetLongDate() != 0)
            //{
            //    cdResult = this._dateGetAcs.CheckDate(ref tDateEdit_AddUpADateSt, true);
            //    if (cdResult == DateGetAcs.CheckDateResult.ErrorOfInvalid)
            //    {
            //        errorMessage2 = MSG_ST_INPUTDATE_ERROR;
            //        errorControl = tDateEdit_AddUpADateSt;
            //    }
            //}

            //if (tDateEdit_AddUpADateEd.GetLongDate() != 0)
            //{
            //    cdResult = this._dateGetAcs.CheckDate(ref tDateEdit_AddUpADateEd, true);
            //    if (cdResult == DateGetAcs.CheckDateResult.ErrorOfInvalid)
            //    {
            //        errorMessage2 = MSG_ED_INPUTDATE_ERROR;
            //        errorControl = tDateEdit_AddUpADateEd;
            //    }
            //}
            if (CheckDateRangeForSlip(ref tDateEdit_AddUpADateSt, ref tDateEdit_AddUpADateEd, out cdrResult, true) == false)
            {
                switch (cdrResult)
                {
                    case DateGetAcs.CheckDateRangeResult.ErrorOfStartInvalid:
                        errorMessage2 = MSG_ST_INPUTDATE_ERROR;
                        errorControl = tDateEdit_AddUpADateSt;
                        break;
                    case DateGetAcs.CheckDateRangeResult.ErrorOfEndInvalid:
                        errorMessage2 = MSG_ED_INPUTDATE_ERROR;
                        errorControl = tDateEdit_AddUpADateEd;
                        break;
                    case DateGetAcs.CheckDateRangeResult.ErrorOfRangeOver:
                        errorMessage2 = MSG_INPUTDATE_RANGE_ERROR;
                        errorControl = tDateEdit_AddUpADateSt;
                        break;
                    case DateGetAcs.CheckDateRangeResult.ErrorOfReverse:
                        errorMessage2 = MSG_MUST_BE_CORRECT_CALENDER;
                        errorControl = tDateEdit_AddUpADateSt;
                        break;
                }
            }
            // --------------UPD 2009/12/28--------------<<<<<
            if (errorMessage2 != string.Empty && errorControl != null)
            {
                // メッセージ表示
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                    errorMessage2, -1, MessageBoxButtons.OK);

                return false;
            }
            // --- CHG 2009/02/25 障害ID:7882対応------------------------------------------------------<<<<<
            # endregion
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

            // 全て正常時のみtrue
            return true;
        }

        #endregion // 必須項目チェック

        #region 月次、締次チェック
        // --- ADD 2009/02/19 -------------------------------->>>>>
        /// <summary>
        /// 月次更新チェック
        /// </summary>
        /// <param name="sectionCode"></param>
        /// <param name="customerCode"></param>
        /// <param name="targetDate"></param>
        /// <returns></returns>
        public bool CheckMonthlyAddUpHis(string sectionCode, int customerCode, DateTime targetDate)
        {
            bool check = false;

            DateTime totalDay;
            check = this._tCalcAcs.CheckMonthlyAccRec(sectionCode, customerCode, targetDate, out totalDay);

            return check;
        }

        /// <summary>
        /// 締次更新チェック
        /// </summary>
        /// <param name="sectionCode">拠点</param>
        /// <param name="customerCode">得意先コード</param>
        /// <param name="salesDate">基準日</param>
        /// <returns></returns>
        public bool CheckDmdC(string sectionCode, int customerCode, DateTime salesDate)
        {
            bool check = false;

            DateTime totalDay;
            check = this._tCalcAcs.CheckDmdC(sectionCode, customerCode, salesDate, out totalDay);

            return check;
        }
        // --- ADD 2009/02/19 --------------------------------<<<<<
        // --- ADD 2009/02/20 -------------------------------->>>>>
        /// <summary>
        /// 仕入月次更新チェック
        /// </summary>
        /// <param name="sectionCd">拠点</param>
        /// <param name="supplierCd">支払先</param>
        /// <param name="stockAddUpDate">計上日</param>
        /// <returns></returns>
        public bool CheckMonthlyAccPayment(string sectionCd, int supplierCd, DateTime stockAddUpDate)
        {
            DateTime prevTotalDay;
            return this._tCalcAcs.CheckMonthlyAccPay(sectionCd, supplierCd, stockAddUpDate, out prevTotalDay);
        }

        /// <summary>
        /// 仕入締次更新チェック
        /// </summary>
        /// <param name="sectionCd">拠点</param>
        /// <param name="supplierCd">仕入先</param>
        /// <param name="stockAddUpDate">計上日</param>
        /// <returns></returns>
        public bool CheckPayment(string sectionCd, int supplierCd, DateTime stockAddUpDate)
        {
            DateTime prevTotalDay;
            return this._tCalcAcs.CheckPayment(sectionCd, supplierCd, stockAddUpDate, out prevTotalDay);
        }
        // --- ADD 2009/02/20 --------------------------------<<<<<
        #endregion

        #region 詳細検索条件非表示

        /// <summary>
        /// 詳細検索条件エリアのコントロールをすべて非表示
        /// </summary>
        /// <br>Update Note : 2011/11/28 楊洋 redmine#8172 得意先電子元帳/(BLﾊﾟｰﾂｵｰﾀﾞｰｼｽﾃﾑ)問合せ番号の追加</br>
        /// <br>Update Note: SPK車台番号文字列対応に伴う車台番号(VINコード)による抽出を可能にする</br>
        /// <br>Programmer : FSI厚川 宏</br>
        /// <br>Date       : 2013/03/25</br>
        /// <br>Update Note: K2015/06/16 鮑晶</br>
        /// <br>管理番号   : 11101427-00</br>
        /// <br>           : メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
        /// <br>Update Note: 2016/01/21 脇田 靖之</br>
        /// <br>管理番号   : 11270007-00</br>
        /// <br>           : 仕掛一覧№2808 貸出受注対応</br>
        /// <br>           : ①検索条件に「出荷状況」項目を追加</br>
        /// <br>           : ②明細表示に計上数、未計上数項目を追加</br>
        /// <br>Update Note: K2016/02/23 時シン</br>
        /// <br>             ㈱イケモト 抽出条件にて受注作成区分を追加する対応</br>
        private void SetAllDetailSearchCondition2Hidden()
        {
            this.uLabel_SalesSlipNumTitle.Visible = false;
            this.tEdit_SalesSlipNum.Visible = false;
            this.uLabel_SalesSlipNumEnd.Visible = false;            //ADD 2009/02/10

            this.uLabel_SalesEmployeeCdTitle.Visible = false;
            this.tEdit_SalesEmployeeCd.Visible = false;
            this.uButton_SalesEmployeeCd.Visible = false;

            this.uLabel_FrontEmployeeCdTitle.Visible = false;
            this.tEdit_FrontEmployeeCd.Visible = false;
            this.uButton_FrontEmployeeCd.Visible = false;

            this.uLabel_SalesInputCodeTitle.Visible = false;
            this.tEdit_SalesInputCode.Visible = false;
            this.uButton_SalesInputCode.Visible = false;

            this.uLabel_CarMngCodeTitle.Visible = false;
            this.tEdit_CarMngCode.Visible = false;
            // ---ADD 2009/10/22 ----->>>>>
            this.tComboEditor_SearchDiv.Visible = false;
            // ---ADD 2009/10/22 -----<<<<<
            this.uLabel_ModelFullNameTitle.Visible = false;
            this.tEdit_ModelFullName.Visible = false;
            this.tComboEditor_ModelFullNameFuzzy.Visible = false;

            this.uLabel_FullModelTitle.Visible = false;
            this.tEdit_FullModel.Visible = false;
            this.tComboEditor_FullModelFuzzy.Visible = false;

            this.uLabel_SearchFrameNoTitle.Visible = false;
            // ---------DEL 2013/03/25---------->>>>>
            //this.tNedit_SearchFrameNo.Visible = false;
            // ---------DEL 2013/03/25----------<<<<<
            // ---------ADD 2013/03/25---------->>>>>
            this.tEdit_SearchFrameNo.Visible = false;
            // ---------ADD 2013/03/25----------<<<<<
            this.tComboEditor_SearchFrameNoFuzzy.Visible = false;// ADD 2010/08/05

            this.uLabel_PartySalesSlipNumTitle.Visible = false;
            this.tEdit_PartySalesSlipNum.Visible = false;

            this.uLabel_ColorName1Title.Visible = false;
            this.tEdit_ColorName1.Visible = false;
            this.tComboEditor_ColorName1Fuzzy.Visible = false;

            this.uLabel_TrimNameTitle.Visible = false;
            this.tEdit_TrimName.Visible = false;
            this.tComboEditor_TrimNameFuzzy.Visible = false;

            this.uLabel_SlipNoteTitle.Visible = false;
            this.tEdit_SlipNote.Visible = false;
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            this.uButton_SlipNote.Visible = false;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
            this.tComboEditor_SlipNoteFuzzy.Visible = false;

            this.uLabel_SlipNote2Title.Visible = false;
            this.tEdit_SlipNote2.Visible = false;
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            this.uButton_SlipNote2.Visible = false;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
            this.tComboEditor_SlipNote2Fuzzy.Visible = false;

            this.uLabel_SlipNote3Title.Visible = false;
            this.tEdit_SlipNote3.Visible = false;
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            this.uButton_SlipNote3.Visible = false;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
            this.tComboEditor_SlipNote3Fuzzy.Visible = false;

            this.uLabel_UoeRemark1Title.Visible = false;
            this.tEdit_UoeRemark1.Visible = false;
            this.tComboEditor_UoeRemark1Fuzzy.Visible = false;

            this.uLabel_UoeRemark2Title.Visible = false;
            this.tEdit_UoeRemark2.Visible = false;
            this.tComboEditor_UoeRemark2Fuzzy.Visible = false;

            this.uLabel_BlGroupCodeTitle.Visible = false;
            this.tEdit_BlGroupCode.Visible = false;
            this.uButton_BlGroupCode.Visible = false;

            this.uLabel_BlGoodsCodeTitle.Visible = false;
            this.tEdit_BlGoodsCode.Visible = false;
            this.uButton_BlGoodsCode.Visible = false;

            this.uLabel_GoodsNameTitle.Visible = false;
            this.tEdit_GoodsName.Visible = false;
            this.tComboEditor_GoodsNameFuzzy.Visible = false;

            this.uLabel_GoodsNoTitle.Visible = false;
            this.tEdit_GoodsNo.Visible = false;
            this.tComboEditor_GoodsNoFuzzy.Visible = false;

            this.uLabel_MakerCdTitle.Visible = false;
            this.tEdit_MakerCd.Visible = false;
            this.uButton_MakerCd.Visible = false;

            this.uLabel_SalesCodeTitle.Visible = false;
            this.tEdit_SalesCode.Visible = false;
            this.uButton_SalesCode.Visible = false;

            this.uLabel_EnterpriseGanreCodeTitle.Visible = false;
            this.tEdit_EnterpriseGanreCode.Visible = false;
            this.uButton_EnterpriseGanreCode.Visible = false;

            this.uLabel_WarehouseCodeTitle.Visible = false;
            this.tEdit_WarehouseCd.Visible = false;
            this.uButton_WarehouseCd.Visible = false;

            this.uLabel_SupplierSlipNoTitle.Visible = false;
            this.tEdit_SupplierSlipNo.Visible = false;

            this.uLabel_SupplierCdTitle.Visible = false;
            this.tEdit_SupplierCd.Visible = false;
            this.uButton_SupplierCd.Visible = false;

            this.uLabel_UOESupplierCdTitle.Visible = false;
            this.tEdit_UOESupplierCd.Visible = false;
            this.uButton_UOESupplierCd.Visible = false;

            this.uLabel_DtlNoteTitle.Visible = false;
            this.tEdit_DtlNote.Visible = false;
            this.tComboEditor_DtlNoteFuzzy.Visible = false;

            this.uLabel_SalesSlipCdTitle.Visible = false;
            this.tComboEditor_SalesSlipCd.Visible = false;

            this.uLabel_DataSendCodeTitle.Visible = false;
            this.tComboEditor_DataSendCode.Visible = false;

            this.uLabel_SalesOrderDivCdTitle.Visible = false;
            this.tComboEditor_SalesOrderDivCd.Visible = false;

            this.uLabel_DeleteFlagTitle.Visible = false;
            this.tComboEditor_DeleteFlag.Visible = false;

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
            this.uLabel_AddresseeCodeTitle.Visible = false;
            this.tEdit_AddresseeCode.Visible = false;
            this.uButton_AddresseeCode.Visible = false;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD

            // ADD 2009/05/27 ------>>>
            this.uLabel_SalesSlipCdDtl.Visible = false;         // 明細区分            
            this.tComboEditor_SalesSlipCdDtl.Visible = false;

            this.uLabel_GoodsLGroup.Visible = false;            // 商品大分類
            this.tEdit_GoodsLGroup.Visible = false;
            this.uButton_GoodsLGroup.Visible = false;

            this.uLabel_GoodsMGroup.Visible = false;            // 商品中分類
            this.tEdit_GoodsMGroup.Visible = false;
            this.uButton_GoodsMGroup.Visible = false;

            this.uLabel_GoodsKindCode.Visible = false;          // 商品属性
            this.tComboEditor_GoodsKindCode.Visible = false;

            this.uLabel_WarehouseShelfNo.Visible = false;       // 棚番
            this.tEdit_WarehouseShelfNo.Visible = false;
            this.tComboEditor_WarehouseShelfNoFuzzy.Visible = false;
            // ADD 2009/05/27 ------<<<
            // ----------ADD 2009/12/28----------->>>>>
            this.uLabel_ClaimTitle.Visible = false;
            this.tEdit_ClaimName.Visible = false;            // 請求先
            this.uButton_ClaimGuide.Visible = false;         // 請求先ボタン
            this.uLabel_AddUpADateTitle_St.Visible = false;
            this.tDateEdit_AddUpADateSt.Visible = false;     // 入力日開始
            this.uLabel_AddUpADateTitle_Ed.Visible = false;
            this.tDateEdit_AddUpADateEd.Visible = false;     // 入力日終了
            // ----------ADD 2009/12/28-----------<<<<<
            // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
            this.uLabel_AutoAnswerDivSCM.Visible = false;
            this.tComboEditor_AutoAnswerDivSCM.Visible = false;     // 自動回答
            // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<
            //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>
            //問合せ番号
            this.uLabel_InquiryNumber.Visible = false;
            this.tNedit_InquiryNumber.Visible = false;
            //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<
            // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
            // 出荷状況
            this.uLabel_AddUpRemDiv.Visible = false;
            this.tComboEditor_AddUpRemDiv.Visible = false;
            // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
            this.ultraLabel_salesArea.Visible = false;
            this.tEdit_SalesAreaNm.Visible = false;
            this.uButton_SalesAreaCdGuide.Visible = false;                   //地区
            this.ultraLabel_custAnalysCode.Visible = false;
            this.tNedit_CustAnalysCode1.Visible = false;
            this.tNedit_CustAnalysCode2.Visible = false;
            this.tNedit_CustAnalysCode3.Visible = false;
            this.tNedit_CustAnalysCode4.Visible = false;
            this.tNedit_CustAnalysCode5.Visible = false;
            this.tNedit_CustAnalysCode6.Visible = false;                     //分析コード
            if (this._opt_Meigo == Convert.ToInt32(Option.OFF))
            {
                this.ultraCheckEditor_salesArea.Visible = false;
                this.ultraCheckEditor_salesArea_base.Visible = false;        //地区 
                this.ultraCheckEditor_custAnalysCode.Visible = false;
                this.ultraCheckEditor_custAnalysCode_base.Visible = false;  //分析コード
            }
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<

            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
            // 受注作成区分
            this.uLabel_AcptAnOdrMakeDiv.Visible = false;
            this.tComboEditor_AcptAnOdrMakeDiv.Visible = false;
            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<
        }

        #endregion // 詳細検索条件非表示

        #region グリッド作成

        /// <summary>
        /// グリッド列の初期化
        /// </summary>
        /// <param name="Columns"></param>
        /// <param name="tabNo"></param>
        /// <remarks>
        /// <br>Update Note : 2009/11/25 呉元嘯</br>
        /// <br>              PM.NS保守依頼③ 不具合対応</br>
        /// <br>              赤伝発行入力タブのグリッドのカラムに金額を追加</br>
        /// <br>Update Note : 2009/12/28 呉元嘯</br>
        /// <br>              PM.NS保守依頼④ 不具合対応</br>
        /// <br>              明細のタイトル欄が見づらい件の修正</br>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              小数点表示区分を参照し、表示制御を行う</br>
        /// <br>Update Note:  2010/08/31 呉元嘯</br>
        /// <br>              Redmine#14006対応</br>
        /// <br>Update Note:  2010/12/20 yangmj</br>
        /// <br>              計上元受注№・計上元貸出№の表示内容修正</br>
        /// <br>Update Note:  2011/11/28 楊洋</br>
        /// <br>              得意先電子元帳/(BLﾊﾟｰﾂｵｰﾀﾞｰｼｽﾃﾑ)問合せ番号の追加</br>   
        /// <br>Update Note:  2013/03/29 shijx</br>
        /// <br>           :  10800003-00　2013/05/15配信分 Redmine#35205得意先電子元帳の対応</br>
        /// <br>           :  出力したExcelファイルに項目名称はテストケースと違い</br>      
        /// <br>Update Note: K2013/01/23 鄧潘ハン </br>
        /// <br>           : 特販区分を追加することの登戸個別対応</br>
        /// <br>Update Note:  K2014/05/08 林超凡 </br>
        /// <br>           :  得意先電子元帳のCSV出力項目に車種メーカーコードを追加する、東亜商会個別対応</br>
        /// <br>Update Note:  K2014/05/27 林超凡 </br>
        /// <br>           :  Redmine#42597 出力位置を変更できるようにする。東亜商会個別対応</br>
        /// <br>Update Note:  K2014/05/28 林超凡 </br>
        /// <br>           :  Redmine#42764 受入テスト障害対応。東亜商会個別対応</br>
        /// <br>Update Note: K2015/4/27 陳亮</br>
        /// <br>           : 11100842-00 モモセ部品㈱の個別開発依頼
        /// <br>           : 得意先電子元帳第二売価を追加する。モモセ部品㈱オプションが有効の場合のみ。</br>
        /// <br>Update Note:  K2015/06/16 鮑晶</br>
        /// <br>管理番号   :  11101427-00</br>
        /// <br>           :  メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
        /// <br>Update Note: 2016/01/21 脇田 靖之</br>
        /// <br>管理番号   : 11270007-00</br>
        /// <br>           : 仕掛一覧№2808 貸出受注対応</br>
        /// <br>           : ①検索条件に「出荷状況」項目を追加</br>
        /// <br>           : ②明細表示に計上数、未計上数項目を追加</br>
        /// <br>Update Note: 2020/03/11 時シン</br>
        /// <br>管理番号   : 11570208-00</br>
        /// <br>           : PMKOBETSU-2912 軽減税率対応</br>
        /// <br>           : 伝票タブ、明細タブに「消費税率」項目を追加</br>
        /// </remarks>
        private void InitializeGridColumns(Infragistics.Win.UltraWinGrid.ColumnsCollection Columns, int tabNo)
        {
            // 表示形式のある列で使用
            string formatCurrency = "#,##0;-#,##0;";

            string formatRate = "0.00%";        //#7861 2011/11/23 ADD
            string formatConsTaxRate = "0%";    // ADD 時シン 2020/03/11 PMKOBETSU-2912
            //string formatPrice      = "#,##0.00";
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 DEL
            //string formatCount      = "0.00";
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
            string formatFraction = "#,##0.00;-#,##0.00;";
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD
            string formatDate = "yyyy/MM/dd";
            string formatYearMonth = "yyyy/MM";

            // 表示位置初期値
            int visiblePosition = 1;

            // 一旦、全ての列を非表示にする。
            foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn column in Columns)
            {
                //非表示設定
                column.Hidden = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 DEL
                //column.AllowRowFiltering = Infragistics.Win.DefaultableBoolean.True;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
                // -----------UPD 2009/12/28------------>>>>>
                //if ( tabNo != 2 )
                //{
                //    column.AllowRowFiltering = Infragistics.Win.DefaultableBoolean.True;
                //}
                if (tabNo != 2)
                {
                    // 伝票と明細グリッド
                    if (tabNo == 0 || tabNo == 1)
                    {
                        if (_settingForm.UserSetting.AllowRowFiltering == 1)
                        {
                            column.AllowRowFiltering = Infragistics.Win.DefaultableBoolean.False;
                        }
                        else
                        {
                            column.AllowRowFiltering = Infragistics.Win.DefaultableBoolean.True;
                        }
                    }
                    else
                    {
                        column.AllowRowFiltering = Infragistics.Win.DefaultableBoolean.True;
                    }
                }
                // -----------UPD 2009/12/28------------<<<<<
                else
                {
                    column.AllowRowFiltering = Infragistics.Win.DefaultableBoolean.False;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD
                column.AutoEdit = false;
                column.CellActivation = Infragistics.Win.UltraWinGrid.Activation.NoEdit;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                column.ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                column.Header.Fixed = false;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
            }

            //--------------------------------------------------------------------------------
            //  表示するカラム情報
            //--------------------------------------------------------------------------------

            switch (tabNo)
            {
                case 0:
                    {
                        #region 伝票表示タブ

                        // 選択チェックボックス
                        // カラムチューザ：対象外　フォーマット：通常
                        Columns[this._detailDataSet.SalesList.SelectionColumn.ColumnName].Hidden = false;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                        //Columns[this._detailDataSet.SalesList.SelectionColumn.ColumnName].Width = 30;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesList.SelectionColumn.ColumnName].Width = 50;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesList.SelectionColumn.ColumnName].Style = Infragistics.Win.UltraWinGrid.ColumnStyle.CheckBox;
                        Columns[this._detailDataSet.SalesList.SelectionColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Center;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/14 DEL
                        //Columns[this._detailDataSet.SalesList.SelectionColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/14 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/14 ADD
                        Columns[this._detailDataSet.SalesList.SelectionColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/14 ADD
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                        //Columns[this._detailDataSet.SalesList.SelectionColumn.ColumnName].Header.Caption = "";
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesList.SelectionColumn.ColumnName].Header.Caption = "選択";
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesList.SelectionColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.SelectionColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesList.SelectionColumn.ColumnName].CellAppearance.BackColor = _margedCellAppearance.BackColor;
                        Columns[this._detailDataSet.SalesList.SelectionColumn.ColumnName].CellAppearance.BackColor2 = _margedCellAppearance.BackColor2;
                        Columns[this._detailDataSet.SalesList.SelectionColumn.ColumnName].Header.Fixed = true;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

                        // データ区分（出金・入金）
                        // カラムチューザ：対象外　フォーマット：表示しない
                        Columns[this._detailDataSet.SalesList.DataDivColumn.ColumnName].Hidden = true;
                        //Columns[this._detailDataSet.SalesList.DataDivColumn.ColumnName].Key = "Slip_DataDiv";
                        Columns[this._detailDataSet.SalesList.DataDivColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;


                        // 伝票日付
                        // カラムチューザ：対象　　フォーマット：日付（yyyy/mm/dd）
                        Columns[this._detailDataSet.SalesList.SalesDateColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.SalesDateColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.SalesDateColumn.ColumnName].Format = formatDate;
                        Columns[this._detailDataSet.SalesList.SalesDateColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.SalesDateColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.SalesDateColumn.ColumnName].Header.Caption = "伝票日付";
                        Columns[this._detailDataSet.SalesList.SalesDateColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.SalesDateColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesList.SalesDateColumn.ColumnName].Header.Fixed = true;
                        SettingMergedCell(Columns[this._detailDataSet.SalesList.SalesDateColumn.ColumnName]);
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

                        // 伝票番号
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Width = 110;
                        //Columns[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Key = "Slip_SalesSlipNo";
                        //Columns[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Format = formatZero8;
                        Columns[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Header.Caption = "伝票番号";
                        Columns[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Header.Fixed = true;
                        SettingMergedCell(Columns[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName]);
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

                        // 区分
                        // カラムチューザ：対象外　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.SalesSlipCdColumn.ColumnName].Hidden = true;
                        //Columns[this._detailDataSet.SalesList.SalesSlipCdColumn.ColumnName].Key = "Slip_SalesSlipCd";
                        Columns[this._detailDataSet.SalesList.SalesSlipCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 区分名
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.SalesSlipCdNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.SalesSlipCdNameColumn.ColumnName].Width = 80;
                        //Columns[this._detailDataSet.SalesList.SalesSlipCdNameColumn.ColumnName].Key = "Slip_SalesSlipCdName";
                        Columns[this._detailDataSet.SalesList.SalesSlipCdNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Center;
                        Columns[this._detailDataSet.SalesList.SalesSlipCdNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.SalesSlipCdNameColumn.ColumnName].Header.Caption = "区分";
                        Columns[this._detailDataSet.SalesList.SalesSlipCdNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.SalesSlipCdNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 担当者名
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.SalesEmployeeNmColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.SalesEmployeeNmColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.SalesEmployeeNmColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.SalesEmployeeNmColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.SalesEmployeeNmColumn.ColumnName].Header.Caption = "担当者名";
                        Columns[this._detailDataSet.SalesList.SalesEmployeeNmColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.SalesEmployeeNmColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 金額
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName].Format = formatCurrency;
                        Columns[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName].Header.Caption = "金額";
                        Columns[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 消費税
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName].Format = formatCurrency;
                        Columns[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName].Header.Caption = "消費税";
                        Columns[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // ADD 時シン 2020/03/11 PMKOBETSU-2912 -------->>>>> 
                        Columns[this._detailDataSet.SalesList.ConsTaxRateColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.ConsTaxRateColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesList.ConsTaxRateColumn.ColumnName].Format = formatConsTaxRate;
                        Columns[this._detailDataSet.SalesList.ConsTaxRateColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesList.ConsTaxRateColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.ConsTaxRateColumn.ColumnName].Header.Caption = "消費税率";
                        Columns[this._detailDataSet.SalesList.ConsTaxRateColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.ConsTaxRateColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // ADD 時シン 2020/03/11 PMKOBETSU-2912 --------<<<<<

                        // 粗利
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName].Format = formatCurrency;
                        Columns[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName].Header.Caption = "粗利";
                        Columns[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 DEL
                        //// 類別番号
                        //// カラムチューザ：対象　　フォーマット：文字列（数値）
                        //Columns[this._detailDataSet.SalesList.CategoryNoColumn.ColumnName].Hidden = false;
                        //Columns[this._detailDataSet.SalesList.CategoryNoColumn.ColumnName].Width = 80;
                        //Columns[this._detailDataSet.SalesList.CategoryNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        //Columns[this._detailDataSet.SalesList.CategoryNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.SalesList.CategoryNoColumn.ColumnName].Header.Caption = "類別番号";
                        //Columns[this._detailDataSet.SalesList.CategoryNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        //Columns[this._detailDataSet.SalesList.CategoryNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                        // 類別型式
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.CategoryNoColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.CategoryNoColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.CategoryNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.CategoryNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.CategoryNoColumn.ColumnName].Header.Caption = "類別型式";
                        Columns[this._detailDataSet.SalesList.CategoryNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.CategoryNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD

                        //----- UPDATE K2014/05/28 By 林超凡 Redmine#42764 受入テスト障害対応 BEGIN--------->>>>>
                        ////----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
                        //// 車種メーカーコード
                        //// カラムチューザ：対象外
                        //// Excel出力設定
                        ////----- UPDATE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
                        ////Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Hidden = true;
                        ////Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        //if (this._opt_Toua == Convert.ToInt32(Option.ON))
                        //{
                        //    Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Hidden = false;
                        //    Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //}
                        //else
                        //{
                        //    Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Hidden = true;
                        //    Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        //}
                        ////----- UPDATE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<<                                                
                        //Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Width = 120;
                        //Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        //Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Header.Caption = "車種メーカーコード";
                        //Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        //Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        //Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Format = GetCarMakerFormat();
                        ////----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
                        // 車種メーカーコード
                        // カラムチューザ：対象
                        // Excel出力設定
                        if (this._opt_Toua == Convert.ToInt32(Option.ON))
                        {
                            Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Width = 120;
                            Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Header.Caption = "車種メーカーコード";
                            Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                            Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Format = GetCarMakerFormat();
                        }
                        //----- UPDATE K2014/05/28 By 林超凡 Redmine#42764 受入テスト障害対応 END---------<<<<<

                        // 車種
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.ModelFullNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.ModelFullNameColumn.ColumnName].Width = 120;
                        Columns[this._detailDataSet.SalesList.ModelFullNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.ModelFullNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.ModelFullNameColumn.ColumnName].Header.Caption = "車種";
                        Columns[this._detailDataSet.SalesList.ModelFullNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.ModelFullNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // --- ADD m.suzuki 2010/04/02 ---------->>>>>
                        // 車種名カナ
                        // カラムチューザ：対象外
                        Columns[this._detailDataSet.SalesList.ModelHalfNameColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesList.ModelHalfNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        // --- ADD m.suzuki 2010/04/02 ----------<<<<<

                        // 年式
                        // カラムチューザ：対象　　フォーマット：文字列（数値）
                        Columns[this._detailDataSet.SalesList.FirstEntryDateColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.FirstEntryDateColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesList.FirstEntryDateColumn.ColumnName].Format = formatYearMonth;
                        Columns[this._detailDataSet.SalesList.FirstEntryDateColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesList.FirstEntryDateColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.FirstEntryDateColumn.ColumnName].Header.Caption = "年式";
                        Columns[this._detailDataSet.SalesList.FirstEntryDateColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.FirstEntryDateColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 車台No
                        // カラムチューザ：対象　　フォーマット：文字列（数値）
                        Columns[this._detailDataSet.SalesList.FrameNoColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.FrameNoColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesList.FrameNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesList.FrameNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.FrameNoColumn.ColumnName].Header.Caption = "車台No";
                        Columns[this._detailDataSet.SalesList.FrameNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.FrameNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 型式
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.FullModelColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.FullModelColumn.ColumnName].Width = 110;
                        Columns[this._detailDataSet.SalesList.FullModelColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.FullModelColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.FullModelColumn.ColumnName].Header.Caption = "型式";
                        Columns[this._detailDataSet.SalesList.FullModelColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.FullModelColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 備考１
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.SlipNoteColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.SlipNoteColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.SlipNoteColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.SlipNoteColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.SlipNoteColumn.ColumnName].Header.Caption = "備考１";
                        Columns[this._detailDataSet.SalesList.SlipNoteColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.SlipNoteColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 備考２
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.SlipNote2Column.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.SlipNote2Column.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.SlipNote2Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.SlipNote2Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.SlipNote2Column.ColumnName].Header.Caption = "備考２";
                        Columns[this._detailDataSet.SalesList.SlipNote2Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.SlipNote2Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 備考３
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.SlipNote3Column.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.SlipNote3Column.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.SlipNote3Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.SlipNote3Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.SlipNote3Column.ColumnName].Header.Caption = "備考３";
                        Columns[this._detailDataSet.SalesList.SlipNote3Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.SlipNote3Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 受注者
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.FrontEmployeeNmColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.FrontEmployeeNmColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.FrontEmployeeNmColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.FrontEmployeeNmColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.FrontEmployeeNmColumn.ColumnName].Header.Caption = "受注者";
                        Columns[this._detailDataSet.SalesList.FrontEmployeeNmColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.FrontEmployeeNmColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 発行者
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.SalesInputNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.SalesInputNameColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.SalesInputNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.SalesInputNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.SalesInputNameColumn.ColumnName].Header.Caption = "発行者";
                        Columns[this._detailDataSet.SalesList.SalesInputNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.SalesInputNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 得意先コード
                        // カラムチューザ：対象　　フォーマット：文字列(数値)
                        Columns[this._detailDataSet.SalesList.CustomerCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.CustomerCodeColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesList.CustomerCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesList.CustomerCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.CustomerCodeColumn.ColumnName].Header.Caption = "得意先コード";
                        Columns[this._detailDataSet.SalesList.CustomerCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.CustomerCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
                        Columns[this._detailDataSet.SalesList.CustomerCodeColumn.ColumnName].Format = GetCustomerFormat();
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD

                        // 得意先名
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.CustomerSnmColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.CustomerSnmColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.CustomerSnmColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.CustomerSnmColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.CustomerSnmColumn.ColumnName].Header.Caption = "得意先名";
                        Columns[this._detailDataSet.SalesList.CustomerSnmColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.CustomerSnmColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 指示書(仮伝)番号
                        // カラムチューザ：対象　　フォーマット：文字列(数値)
                        Columns[this._detailDataSet.SalesList.PartySaleSlipNumColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.PartySaleSlipNumColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesList.PartySaleSlipNumColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.PartySaleSlipNumColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.SalesList.PartySaleSlipNumColumn.ColumnName].Header.Caption = "得意先注番"; //DEL liusy 2012/08/08 for Redmine#31530
                        Columns[this._detailDataSet.SalesList.PartySaleSlipNumColumn.ColumnName].Header.Caption = "指示書(仮伝)番号"; //ADD liusy 2012/08/08 for Redmine#31530
                        Columns[this._detailDataSet.SalesList.PartySaleSlipNumColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.PartySaleSlipNumColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 管理No
                        // カラムチューザ：対象　　フォーマット：文字列(数値)
                        Columns[this._detailDataSet.SalesList.CarMngCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.CarMngCodeColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesList.CarMngCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.CarMngCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.CarMngCodeColumn.ColumnName].Header.Caption = "管理No";
                        Columns[this._detailDataSet.SalesList.CarMngCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.CarMngCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 計上元受注No
                        // カラムチューザ：対象　　フォーマット：文字列(数値)
                        Columns[this._detailDataSet.SalesList.AcceptAnOrderNoColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.AcceptAnOrderNoColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesList.AcceptAnOrderNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesList.AcceptAnOrderNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.AcceptAnOrderNoColumn.ColumnName].Header.Caption = "計上元受注No";
                        Columns[this._detailDataSet.SalesList.AcceptAnOrderNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.AcceptAnOrderNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 計上先出荷No
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.ShipmSalesSlipNumColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.ShipmSalesSlipNumColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesList.ShipmSalesSlipNumColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesList.ShipmSalesSlipNumColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //-----UPD 2010/12/20 ----->>>>>
                        //Columns[this._detailDataSet.SalesList.ShipmSalesSlipNumColumn.ColumnName].Header.Caption = "計上元出荷No";
                        Columns[this._detailDataSet.SalesList.ShipmSalesSlipNumColumn.ColumnName].Header.Caption = "計上元貸出No";
                        //-----UPD 2010/12/20 -----<<<<<
                        Columns[this._detailDataSet.SalesList.ShipmSalesSlipNumColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.ShipmSalesSlipNumColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // UOEリマーク1
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.UoeRemark1Column.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.UoeRemark1Column.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.UoeRemark1Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.UoeRemark1Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.UoeRemark1Column.ColumnName].Header.Caption = "UOEリマーク1";
                        Columns[this._detailDataSet.SalesList.UoeRemark1Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.UoeRemark1Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // UOEリマーク2
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.UoeRemark2Column.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.UoeRemark2Column.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.UoeRemark2Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.UoeRemark2Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.UoeRemark2Column.ColumnName].Header.Caption = "UOEリマーク2";
                        Columns[this._detailDataSet.SalesList.UoeRemark2Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.UoeRemark2Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 拠点コード
                        // カラムチューザ：対象外　フォーマット：非表示
                        Columns[this._detailDataSet.SalesList.SectionCdColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesList.SectionCdColumn.ColumnName].Width = 80;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                        //Columns[this._detailDataSet.SalesList.SectionCdColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesList.SectionCdColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesList.SectionCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                        //Columns[this._detailDataSet.SalesList.SectionCdColumn.ColumnName].Header.Caption = "拠点";
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesList.SectionCdColumn.ColumnName].Header.Caption = "拠点コード";
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesList.SectionCdColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.SectionCdColumn.ColumnName].Header.VisiblePosition = visiblePosition++;


                        // 拠点
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.SectionGuideNmColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.SectionGuideNmColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesList.SectionGuideNmColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.SectionGuideNmColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                        //Columns[this._detailDataSet.SalesList.SectionGuideNmColumn.ColumnName].Header.Caption = "拠点";
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesList.SectionGuideNmColumn.ColumnName].Header.Caption = "拠点名";
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesList.SectionGuideNmColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.SectionGuideNmColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // カラー名称
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.ColorName1Column.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.ColorName1Column.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.ColorName1Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.ColorName1Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.ColorName1Column.ColumnName].Header.Caption = "カラー名称";
                        Columns[this._detailDataSet.SalesList.ColorName1Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.ColorName1Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // トリム名称
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.TrimNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.TrimNameColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.TrimNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.TrimNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.TrimNameColumn.ColumnName].Header.Caption = "トリム名称";
                        Columns[this._detailDataSet.SalesList.TrimNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.TrimNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 得意先伝票番号
                        // カラムチューザ：対象　　フォーマット：文字列(数値)
                        Columns[this._detailDataSet.SalesList.CustSlipNoColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.CustSlipNoColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesList.CustSlipNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesList.CustSlipNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.CustSlipNoColumn.ColumnName].Header.Caption = "得意先伝票番号";
                        Columns[this._detailDataSet.SalesList.CustSlipNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.CustSlipNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 計上日
                        // カラムチューザ：対象　　フォーマット：文字列(数値)
                        Columns[this._detailDataSet.SalesList.AddUpADateColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.AddUpADateColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.AddUpADateColumn.ColumnName].Format = formatDate;
                        Columns[this._detailDataSet.SalesList.AddUpADateColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.AddUpADateColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.AddUpADateColumn.ColumnName].Header.Caption = "計上日";
                        Columns[this._detailDataSet.SalesList.AddUpADateColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.AddUpADateColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 商品区分
                        Columns[this._detailDataSet.SalesList.EnterpriseGanreCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.EnterpriseGanreCodeColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesList.EnterpriseGanreCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesList.EnterpriseGanreCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.EnterpriseGanreCodeColumn.ColumnName].Header.Caption = "商品区分";
                        Columns[this._detailDataSet.SalesList.EnterpriseGanreCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.EnterpriseGanreCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 DEL
                        //// 売掛区分
                        //// カラムチューザ：対象　　フォーマット：文字列(数値)
                        //Columns[this._detailDataSet.SalesList.AccRecDivCdColumn.ColumnName].Hidden = false;
                        //Columns[this._detailDataSet.SalesList.AccRecDivCdColumn.ColumnName].Width = 70;
                        //Columns[this._detailDataSet.SalesList.AccRecDivCdColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        //Columns[this._detailDataSet.SalesList.AccRecDivCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.SalesList.AccRecDivCdColumn.ColumnName].Header.Caption = "売掛区分";
                        //Columns[this._detailDataSet.SalesList.AccRecDivCdColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        //Columns[this._detailDataSet.SalesList.AccRecDivCdColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                        // 売掛区分
                        // カラムチューザ：非対象　　フォーマット：数値
                        Columns[this._detailDataSet.SalesList.AccRecDivCdColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesList.AccRecDivCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        // 売掛区分名称
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesList.AccRecDivCdNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.AccRecDivCdNameColumn.ColumnName].Width = 70;
                        Columns[this._detailDataSet.SalesList.AccRecDivCdNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.AccRecDivCdNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.AccRecDivCdNameColumn.ColumnName].Header.Caption = "売掛区分";
                        Columns[this._detailDataSet.SalesList.AccRecDivCdNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.AccRecDivCdNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD

                        // 赤伝区分
                        // カラムチューザ：対象　　フォーマット：文字列(数値)
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 DEL
                        //Columns[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].Hidden = false;
                        //Columns[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].Width = 50;
                        //Columns[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        //Columns[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].Header.Caption = "赤伝区分";
                        //Columns[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        //Columns[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                        Columns[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].Width = 50;
                        Columns[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        Columns[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].Header.Caption = "赤伝区分";
                        Columns[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
                        // 納入先コード
                        Columns[this._detailDataSet.SalesList.AddresseeCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.AddresseeCodeColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesList.AddresseeCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesList.AddresseeCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.AddresseeCodeColumn.ColumnName].Header.Caption = "納入先コード";
                        Columns[this._detailDataSet.SalesList.AddresseeCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.AddresseeCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        Columns[this._detailDataSet.SalesList.AddresseeCodeColumn.ColumnName].Format = GetCustomerFormat();

                        // 納入先名
                        Columns[this._detailDataSet.SalesList.AddresseeNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.AddresseeNameColumn.ColumnName].Width = 120;
                        Columns[this._detailDataSet.SalesList.AddresseeNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.AddresseeNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.AddresseeNameColumn.ColumnName].Header.Caption = "納入先名";
                        Columns[this._detailDataSet.SalesList.AddresseeNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.AddresseeNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/09 ADD
                        // 入力日
                        // カラムチューザ：対象　　フォーマット：文字列(数値)
                        Columns[this._detailDataSet.SalesList.InputDayColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.InputDayColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesList.InputDayColumn.ColumnName].Format = formatDate;
                        Columns[this._detailDataSet.SalesList.InputDayColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.InputDayColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.InputDayColumn.ColumnName].Header.Caption = "入力日";
                        Columns[this._detailDataSet.SalesList.InputDayColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.InputDayColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/09 ADD

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.24 ADD
                        // 履歴区分
                        // カラムチューザ：対象
                        Columns[this._detailDataSet.SalesList.HistoryDivNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.HistoryDivNameColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesList.HistoryDivNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.HistoryDivNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.HistoryDivNameColumn.ColumnName].Header.Caption = "履歴";
                        Columns[this._detailDataSet.SalesList.HistoryDivNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.HistoryDivNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.24 ADD
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/19 ADD
                        // 伝票発行時刻
                        // カラムチューザ：対象
                        Columns[this._detailDataSet.SalesList.SlipPrintTimeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.SlipPrintTimeColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesList.SlipPrintTimeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesList.SlipPrintTimeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.SlipPrintTimeColumn.ColumnName].Header.Caption = "伝票発行時刻";
                        Columns[this._detailDataSet.SalesList.SlipPrintTimeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.SlipPrintTimeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/19 ADD
                        // ADD 2012/04/01 gezh Redmine#29250 ------------------------------------------------->>>>>
                        // 更新日時
                        // カラムチューザ：対象　　フォーマット：日付(yyyy/MM/dd HH:mm:ss)
                        Columns[this._detailDataSet.SalesList.UpdateDateTimeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesList.UpdateDateTimeColumn.ColumnName].Width = 160;
                        Columns[this._detailDataSet.SalesList.UpdateDateTimeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesList.UpdateDateTimeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesList.UpdateDateTimeColumn.ColumnName].Header.Caption = "更新日時";
                        Columns[this._detailDataSet.SalesList.UpdateDateTimeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesList.UpdateDateTimeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // ADD 2012/04/01 gezh Redmine#29250 -------------------------------------------------<<<<<

                        //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
                        if (this._opt_Meigo == Convert.ToInt32(Option.ON))
                        {
                            #region 伝票表示
                            Columns[this._detailDataSet.SalesList.SalesAreaNameColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesList.SalesAreaNameColumn.ColumnName].Width = 120;
                            Columns[this._detailDataSet.SalesList.SalesAreaNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                            Columns[this._detailDataSet.SalesList.SalesAreaNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesList.SalesAreaNameColumn.ColumnName].Header.Caption = "地区";
                            Columns[this._detailDataSet.SalesList.SalesAreaNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesList.SalesAreaNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                            Columns[this._detailDataSet.SalesList.CustAnalysCode1Column.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode1Column.ColumnName].Width = 130;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode1Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode1Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode1Column.ColumnName].Header.Caption = "分析コード1";
                            Columns[this._detailDataSet.SalesList.CustAnalysCode1Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode1Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                            Columns[this._detailDataSet.SalesList.CustAnalysCode2Column.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode2Column.ColumnName].Width = 130;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode2Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode2Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode2Column.ColumnName].Header.Caption = "分析コード2";
                            Columns[this._detailDataSet.SalesList.CustAnalysCode2Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode2Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                            Columns[this._detailDataSet.SalesList.CustAnalysCode3Column.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode3Column.ColumnName].Width = 130;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode3Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode3Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode3Column.ColumnName].Header.Caption = "分析コード3";
                            Columns[this._detailDataSet.SalesList.CustAnalysCode3Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode3Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                            Columns[this._detailDataSet.SalesList.CustAnalysCode4Column.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode4Column.ColumnName].Width = 130;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode4Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode4Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode4Column.ColumnName].Header.Caption = "分析コード4";
                            Columns[this._detailDataSet.SalesList.CustAnalysCode4Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode4Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                            Columns[this._detailDataSet.SalesList.CustAnalysCode5Column.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode5Column.ColumnName].Width = 130;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode5Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode5Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode5Column.ColumnName].Header.Caption = "分析コード5";
                            Columns[this._detailDataSet.SalesList.CustAnalysCode5Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode5Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                            Columns[this._detailDataSet.SalesList.CustAnalysCode6Column.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode6Column.ColumnName].Width = 130;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode6Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode6Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode6Column.ColumnName].Header.Caption = "分析コード6";
                            Columns[this._detailDataSet.SalesList.CustAnalysCode6Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesList.CustAnalysCode6Column.ColumnName].Header.VisiblePosition = visiblePosition++;
                            #endregion
                        }
                        //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<

                        //--------------------------------------------------------------------------------
                        //  カラムチューザを有効にする
                        //--------------------------------------------------------------------------------
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/16 DEL
                        //this.uGrid_Slip.DisplayLayout.ColumnChooserEnabled = Infragistics.Win.DefaultableBoolean.True;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/16 DEL
                        this.uGrid_Slip.DisplayLayout.Override.RowSelectorHeaderStyle = Infragistics.Win.UltraWinGrid.RowSelectorHeaderStyle.ColumnChooserButton;
                        this.uGrid_Slip.DisplayLayout.Override.RowSelectorWidth = 24;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/16 ADD
                        _gridColumnChooserControl.Add(this.uGrid_Slip);
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/16 ADD

                        // カラムチューザボタンの外観を設定
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
                        this.uGrid_Slip.DisplayLayout.Override.RowSelectorAppearance.BackColor = Color.FromArgb(89, 135, 214);
                        this.uGrid_Slip.DisplayLayout.Override.RowSelectorAppearance.BackColor2 = Color.FromArgb(7, 59, 150);
                        this.uGrid_Slip.DisplayLayout.Override.RowSelectorAppearance.BackGradientStyle = GradientStyle.Vertical;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD
                        this.uGrid_Slip.DisplayLayout.Override.RowSelectorHeaderAppearance.BackColor = this.uGrid_Slip.DisplayLayout.Override.RowSelectorAppearance.BackColor;
                        this.uGrid_Slip.DisplayLayout.Override.RowSelectorHeaderAppearance.BackColor2 = this.uGrid_Slip.DisplayLayout.Override.RowSelectorAppearance.BackColor2;
                        this.uGrid_Slip.DisplayLayout.Override.RowSelectorHeaderAppearance.BackGradientStyle = this.uGrid_Slip.DisplayLayout.Override.RowSelectorAppearance.BackGradientStyle;
                        this.uGrid_Slip.ImageList = Broadleaf.Library.Resources.IconResourceManagement.ImageList16;
                        this.uGrid_Slip.DisplayLayout.Override.RowSelectorHeaderAppearance.Image = (int)Broadleaf.Library.Resources.Size16_Index.STAR1;

                        // 列幅自動調整を設定値にしたがって行う
                        autoColumnAdjust(_columnWidthAutoAdjust_Slip, 0);

                        #endregion // 伝票表示タブ
                        break;
                    }
                case 1:
                    {
                        #region 明細タブ

                        // 選択チェックボックス
                        // カラムチューザ：対象外　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Hidden = false;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                        Columns[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Width = 30;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Width = 50;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Style = Infragistics.Win.UltraWinGrid.ColumnStyle.CheckBox;
                        Columns[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Center;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/14 DEL
                        //Columns[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/14 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/14 ADD
                        Columns[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/14 ADD
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                        //Columns[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Header.Caption = "";
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Header.Caption = "選択";
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].CellAppearance.BackColor = _margedCellAppearance.BackColor;
                        Columns[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].CellAppearance.BackColor2 = _margedCellAppearance.BackColor2;
                        Columns[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Header.Fixed = true;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

                        // データ区分（出金・入金）
                        // カラムチューザ：対象外　フォーマット：表示しない
                        Columns[this._detailDataSet.SalesDetail.DataDivColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesDetail.DataDivColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 行No
                        // 非表示
                        // カラムチューザ：対象外　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 伝票日付
                        // カラムチューザ：対象　　フォーマット：日付（yyyy/mm/dd）
                        Columns[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName].Format = formatDate;
                        Columns[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName].Header.Caption = "伝票日付";
                        Columns[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName].Header.Fixed = true;
                        SettingMergedCell(Columns[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName]);
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

                        // 伝票番号
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Header.Caption = "伝票番号";
                        Columns[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Header.Fixed = true;
                        SettingMergedCell(Columns[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName]);
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

                        // 行No
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName].Width = 40;
                        Columns[this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName].Header.Caption = "行No";
                        Columns[this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 区分
                        // カラムチューザ：対象外　フォーマット：非表示
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 区分名
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName].Header.Caption = "区分";
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                        // 明細区分
                        // カラムチューザ：対象外　フォーマット：非表示
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdDtlColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdDtlColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 明細区分名
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdDtlNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdDtlNameColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdDtlNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdDtlNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdDtlNameColumn.ColumnName].Header.Caption = "明細区分";
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdDtlNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SalesSlipCdDtlNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

                        // 担当者名
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.SalesEmployeeNmColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SalesEmployeeNmColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.SalesEmployeeNmColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.SalesEmployeeNmColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SalesEmployeeNmColumn.ColumnName].Header.Caption = "担当者名";
                        Columns[this._detailDataSet.SalesDetail.SalesEmployeeNmColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SalesEmployeeNmColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 品名
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.GoodsNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.GoodsNameColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.GoodsNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.GoodsNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.GoodsNameColumn.ColumnName].Header.Caption = "品名";
                        Columns[this._detailDataSet.SalesDetail.GoodsNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.GoodsNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 品番
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName].Header.Caption = "品番";
                        Columns[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 金額(伝票)
                        // 非表示
                        // カラムチューザ：対象外　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.SalesTotalTaxExcColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesDetail.SalesTotalTaxExcColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // BLコード
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.BLGoodsCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.BLGoodsCodeColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.SalesDetail.BLGoodsCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.BLGoodsCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.BLGoodsCodeColumn.ColumnName].Header.Caption = "BLｺｰﾄﾞ";
                        Columns[this._detailDataSet.SalesDetail.BLGoodsCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.BLGoodsCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                        Columns[this._detailDataSet.SalesDetail.BLGoodsCodeColumn.ColumnName].Format = GetBLCodeFormat();
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD

                        // BLグループ
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.BLGroupCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.BLGroupCodeColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.SalesDetail.BLGroupCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.BLGroupCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.BLGroupCodeColumn.ColumnName].Header.Caption = "BLｸﾞﾙｰﾌﾟ";
                        Columns[this._detailDataSet.SalesDetail.BLGroupCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.BLGroupCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                        Columns[this._detailDataSet.SalesDetail.BLGroupCodeColumn.ColumnName].Format = GetBLGroupFormat();
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                        // 中分類コード
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupColumn.ColumnName].Header.Caption = "中分類コード";
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupColumn.ColumnName].Format = GetGoodsMGroupFormat();

                        // 中分類名
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupNameColumn.ColumnName].Width = 120;
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupNameColumn.ColumnName].Header.Caption = "中分類名";
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.GoodsMGroupNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 大分類コード
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupColumn.ColumnName].Header.Caption = "大分類コード";
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupColumn.ColumnName].Format = GetGoodsLGroupFormat();

                        // 大分類名
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupNameColumn.ColumnName].Width = 120;
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupNameColumn.ColumnName].Header.Caption = "大分類名";
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.GoodsLGroupNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

                        // 数量
                        // カラムチューザ：対象　　フォーマット：数値
                        Columns[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName].Width = 70;
                        //Columns[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName].Format = formatFraction;// DEL 2010/08/31
                        Columns[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName].Header.Caption = "数量";
                        Columns[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // -----------ADD 2010/08/31---------->>>>>
                        if (this._pointDspDivCd)
                        {
                            // 小数点表示区分：する
                            Columns[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName].Format = formatFraction;
                        }
                        else
                        {
                            // 小数点表示区分：しない
                            Columns[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName].Format = formatCurrency;
                        }
                        // -----------ADD 2010/08/31----------<<<<<

                        // 標準価格
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName].Width = 80;
                        //Columns[this._detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName].Format = formatCurrency;
                        Columns[this._detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName].Header.Caption = "標準価格";
                        Columns[this._detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 小数点表示区分：しない
                        Columns[this._detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName].Format = formatCurrency;                        //ADD 2011/07/13


                        // オープン価格区分
                        // 非表示
                        // カラムチューザ：対象外　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.OpenPriceDivColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesDetail.OpenPriceDivColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 単価
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Width = 80;
                        //Columns[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Format = formatCurrency;// DEL 2010/08/05
                        Columns[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Header.Caption = "単価";
                        Columns[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // -----------ADD 2010/08/05---------->>>>>
                        if (this._pointDspDivCd)
                        {
                            // 小数点表示区分：する
                            Columns[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Format = formatFraction;
                        }
                        else
                        {
                            // 小数点表示区分：しない
                            Columns[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Format = formatCurrency;
                        }
                        // -----------ADD 2010/08/05----------<<<<<
                        // 原価
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName].Width = 80;
                        //Columns[this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName].Format = formatCurrency;// DEL 2010/08/31
                        Columns[this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName].Format = formatFraction;// ADD 2010/08/31
                        Columns[this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName].Header.Caption = "原価";
                        Columns[this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 金額（明細）
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName].Format = formatCurrency;
                        Columns[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName].Header.Caption = "金額";
                        Columns[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 消費税
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName].Format = formatCurrency;
                        Columns[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName].Header.Caption = "消費税";
                        Columns[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // ADD 時シン 2020/03/11 PMKOBETSU-2912 -------->>>>>
                        Columns[this._detailDataSet.SalesDetail.ConsTaxRateColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.ConsTaxRateColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.ConsTaxRateColumn.ColumnName].Format = formatConsTaxRate;
                        Columns[this._detailDataSet.SalesDetail.ConsTaxRateColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.ConsTaxRateColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.ConsTaxRateColumn.ColumnName].Header.Caption = "消費税率";
                        Columns[this._detailDataSet.SalesDetail.ConsTaxRateColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.ConsTaxRateColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // ADD 時シン 2020/03/11 PMKOBETSU-2912 --------<<<<<

                        // 消費税転嫁方式
                        // 非表示
                        // カラムチューザ：対象外　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.ConsTaxLayMethodColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesDetail.ConsTaxLayMethodColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 DEL
                        //// 売上伝票合計（粗利）
                        //// カラムチューザ：対象　　フォーマット：金額
                        //Columns[this._detailDataSet.SalesDetail.SalesTotalTaxIncColumn.ColumnName].Hidden = false;
                        //Columns[this._detailDataSet.SalesDetail.SalesTotalTaxIncColumn.ColumnName].Width = 80;
                        //Columns[this._detailDataSet.SalesDetail.SalesTotalTaxIncColumn.ColumnName].Format = formatCurrency;
                        //Columns[this._detailDataSet.SalesDetail.SalesTotalTaxIncColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        //Columns[this._detailDataSet.SalesDetail.SalesTotalTaxIncColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.SalesDetail.SalesTotalTaxIncColumn.ColumnName].Header.Caption = "粗利";
                        //Columns[this._detailDataSet.SalesDetail.SalesTotalTaxIncColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        //Columns[this._detailDataSet.SalesDetail.SalesTotalTaxIncColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
                        // 粗利（明細）
                        // カラムチューザ：対象　フォーマット：金額
                        Columns[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName].Format = formatCurrency;
                        Columns[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName].Header.Caption = "粗利";
                        Columns[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  #7861 2011/11/23 ADD
                        // 粗利率（明細）
                        Columns[this._detailDataSet.SalesDetail.GrossProfitMarginColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.GrossProfitMarginColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.GrossProfitMarginColumn.ColumnName].Format = formatRate;
                        Columns[this._detailDataSet.SalesDetail.GrossProfitMarginColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.GrossProfitMarginColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.GrossProfitMarginColumn.ColumnName].Header.Caption = "粗利率";
                        Columns[this._detailDataSet.SalesDetail.GrossProfitMarginColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.GrossProfitMarginColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  #7861 2011/11/23 ADD


                        // 原価金額計
                        // 非表示
                        // カラムチューザ：対象外　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.TotalCostColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesDetail.TotalCostColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 DEL
                        //// 類別番号
                        //// カラムチューザ：対象　　フォーマット：数値
                        //Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].Hidden = false;
                        //Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].Width = 70;
                        ////Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].Format = formatCount;
                        //Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        //Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].Header.Caption = "類別番号";
                        //Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        //Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                        // 類別型式
                        // カラムチューザ：対象　　フォーマット：数値
                        Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].Header.Caption = "類別型式";
                        Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD

                        //----- UPDATE K2014/05/28 By 林超凡 Redmine#42764 受入テスト障害対応 BEGIN--------->>>>>
                        ////----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
                        //// 車種メーカーコード
                        //// カラムチューザ：対象外
                        //// Excel出力設定
                        ////----- UPDATE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
                        ////Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Hidden = true;
                        ////Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        //if (this._opt_Toua == Convert.ToInt32(Option.ON))
                        //{
                        //    Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Hidden = false;
                        //    Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //}
                        //else
                        //{
                        //    Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Hidden = true;
                        //    Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        //}
                        ////----- UPDATE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<< 
                        //Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Width = 120;
                        //Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        //Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Header.Caption = "車種メーカーコード";
                        //Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        //Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        //Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Format = GetCarMakerFormat();
                        ////----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
                        // 車種メーカーコード
                        // カラムチューザ：対象
                        // Excel出力設定
                        if (this._opt_Toua == Convert.ToInt32(Option.ON))
                        {
                            Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Width = 120;
                            Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Header.Caption = "車種メーカーコード";
                            Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                            Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Format = GetCarMakerFormat();
                        }
                        //----- UPDATE K2014/05/28 By 林超凡 Redmine#42764 受入テスト障害対応 END---------<<<<<

                        // 車種
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.ModelFullNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.ModelFullNameColumn.ColumnName].Width = 110;
                        Columns[this._detailDataSet.SalesDetail.ModelFullNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.ModelFullNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.ModelFullNameColumn.ColumnName].Header.Caption = "車種";
                        Columns[this._detailDataSet.SalesDetail.ModelFullNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.ModelFullNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // --- ADD m.suzuki 2010/04/02 ---------->>>>>
                        // 車種名カナ
                        // カラムチューザ：対象外
                        Columns[this._detailDataSet.SalesDetail.ModelHalfNameColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesDetail.ModelHalfNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        // --- ADD m.suzuki 2010/04/02 ----------<<<<<

                        // 年式
                        // カラムチューザ：対象　　フォーマット：数値
                        Columns[this._detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName].Width = 70;
                        Columns[this._detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName].Format = formatYearMonth;
                        Columns[this._detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName].Header.Caption = "年式";
                        Columns[this._detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 車台No
                        // カラムチューザ：対象　　フォーマット：数値
                        Columns[this._detailDataSet.SalesDetail.FrameNoColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.FrameNoColumn.ColumnName].Width = 70;
                        //Columns[this._detailDataSet.SalesDetail.SearchFrameNoColumn.ColumnName].Format = formatCount;
                        Columns[this._detailDataSet.SalesDetail.FrameNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.FrameNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.FrameNoColumn.ColumnName].Header.Caption = "車台No";
                        Columns[this._detailDataSet.SalesDetail.FrameNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.FrameNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 型式
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.FullModelColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.FullModelColumn.ColumnName].Width = 110;
                        Columns[this._detailDataSet.SalesDetail.FullModelColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.FullModelColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.FullModelColumn.ColumnName].Header.Caption = "型式";
                        Columns[this._detailDataSet.SalesDetail.FullModelColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.FullModelColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 備考１
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName].Header.Caption = "備考１";
                        Columns[this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 備考２
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.SlipNote2Column.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SlipNote2Column.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.SlipNote2Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.SlipNote2Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SlipNote2Column.ColumnName].Header.Caption = "備考２";
                        Columns[this._detailDataSet.SalesDetail.SlipNote2Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SlipNote2Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 備考３
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.SlipNote3Column.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SlipNote3Column.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.SlipNote3Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.SlipNote3Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SlipNote3Column.ColumnName].Header.Caption = "備考３";
                        Columns[this._detailDataSet.SalesDetail.SlipNote3Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SlipNote3Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 受注者
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.FrontEmployeeNmColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.FrontEmployeeNmColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.FrontEmployeeNmColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.FrontEmployeeNmColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.FrontEmployeeNmColumn.ColumnName].Header.Caption = "受注者";
                        Columns[this._detailDataSet.SalesDetail.FrontEmployeeNmColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.FrontEmployeeNmColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 発行者
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.SalesInputNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SalesInputNameColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.SalesInputNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.SalesInputNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SalesInputNameColumn.ColumnName].Header.Caption = "発行者";
                        Columns[this._detailDataSet.SalesDetail.SalesInputNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SalesInputNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 得意先コード
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName].Header.Caption = "得意先コード";
                        Columns[this._detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
                        Columns[this._detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName].Format = GetCustomerFormat();
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD

                        // 得意先名
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.CustomerSnmColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.CustomerSnmColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.CustomerSnmColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.CustomerSnmColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.CustomerSnmColumn.ColumnName].Header.Caption = "得意先";
                        Columns[this._detailDataSet.SalesDetail.CustomerSnmColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.CustomerSnmColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 仕入先コード
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.SupplierCdColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SupplierCdColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.SupplierCdColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.SupplierCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SupplierCdColumn.ColumnName].Header.Caption = "仕入先コード";
                        Columns[this._detailDataSet.SalesDetail.SupplierCdColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SupplierCdColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
                        Columns[this._detailDataSet.SalesDetail.SupplierCdColumn.ColumnName].Format = GetSupplierFormat();
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD

                        // 仕入先名
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.SupplierSnmColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SupplierSnmColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.SupplierSnmColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.SupplierSnmColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SupplierSnmColumn.ColumnName].Header.Caption = "仕入先";
                        Columns[this._detailDataSet.SalesDetail.SupplierSnmColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SupplierSnmColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 指示書(仮伝)番号
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.SalesList.PartySaleSlipNumColumn.ColumnName].Header.Caption = "得意先注番"; //DEL liusy 2012/08/08 for Redmine#31530
                        Columns[this._detailDataSet.SalesList.PartySaleSlipNumColumn.ColumnName].Header.Caption = "指示書(仮伝)番号"; //ADD liusy 2012/08/08 for Redmine#31530
                        Columns[this._detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 管理No
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName].Header.Caption = "管理No";
                        Columns[this._detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 計上元受注No
                        // カラムチューザ：対象　　フォーマット：数値だが表示は通常
                        Columns[this._detailDataSet.SalesDetail.AcceptAnOrderNoColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.AcceptAnOrderNoColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.AcceptAnOrderNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.AcceptAnOrderNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.AcceptAnOrderNoColumn.ColumnName].Header.Caption = "計上元受注No";
                        Columns[this._detailDataSet.SalesDetail.AcceptAnOrderNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.AcceptAnOrderNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 計上先出荷No
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.ShipSalesSlipNumColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.ShipSalesSlipNumColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.ShipSalesSlipNumColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.ShipSalesSlipNumColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //-----UPD 2010/12/20 ----->>>>>
                        //Columns[this._detailDataSet.SalesDetail.ShipSalesSlipNumColumn.ColumnName].Header.Caption = "計上元出荷No";
                        Columns[this._detailDataSet.SalesDetail.ShipSalesSlipNumColumn.ColumnName].Header.Caption = "計上元貸出No";
                        //-----UPD 2010/12/20 -----<<<<<
                        Columns[this._detailDataSet.SalesDetail.ShipSalesSlipNumColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.ShipSalesSlipNumColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 元黒No
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.SrcSalesSlipNumColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SrcSalesSlipNumColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.SrcSalesSlipNumColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.SrcSalesSlipNumColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SrcSalesSlipNumColumn.ColumnName].Header.Caption = "元黒No";
                        Columns[this._detailDataSet.SalesDetail.SrcSalesSlipNumColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SrcSalesSlipNumColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 商品区分
                        Columns[this._detailDataSet.SalesDetail.EnterpriseGanreCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.EnterpriseGanreCodeColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.EnterpriseGanreCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.EnterpriseGanreCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.EnterpriseGanreCodeColumn.ColumnName].Header.Caption = "商品区分";
                        Columns[this._detailDataSet.SalesDetail.EnterpriseGanreCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.EnterpriseGanreCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                        // 商品属性
                        // カラムチューザ：対象外　　フォーマット：数値だが表示は通常
                        Columns[this._detailDataSet.SalesDetail.GoodsKindCodeColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesDetail.GoodsKindCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 商品属性名
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.GoodsKindCodeNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.GoodsKindCodeNameColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.GoodsKindCodeNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.GoodsKindCodeNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.GoodsKindCodeNameColumn.ColumnName].Header.Caption = "商品属性";
                        Columns[this._detailDataSet.SalesDetail.GoodsKindCodeNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.GoodsKindCodeNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

                        // 在庫取寄せ区分
                        // カラムチューザ：対象外　　フォーマット：数値だが表示は通常
                        Columns[this._detailDataSet.SalesDetail.SalesOrderDivCdColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesDetail.SalesOrderDivCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 在庫取寄区分名
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.SalesOrderDivCdNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SalesOrderDivCdNameColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.SalesOrderDivCdNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.SalesOrderDivCdNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SalesOrderDivCdNameColumn.ColumnName].Header.Caption = "在庫取寄区分";
                        Columns[this._detailDataSet.SalesDetail.SalesOrderDivCdNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SalesOrderDivCdNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 倉庫コード
                        // カラムチューザ：対象外　フォーマット：非表示
                        Columns[this._detailDataSet.SalesDetail.WarehouseCdColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesDetail.WarehouseCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 倉庫
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.WarehouseNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.WarehouseNameColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.WarehouseNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.WarehouseNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.WarehouseNameColumn.ColumnName].Header.Caption = "倉庫";
                        Columns[this._detailDataSet.SalesDetail.WarehouseNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.WarehouseNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                        // 棚番
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.WarehouseShelfNoColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.WarehouseShelfNoColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.WarehouseShelfNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.WarehouseShelfNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.WarehouseShelfNoColumn.ColumnName].Header.Caption = "棚番";
                        Columns[this._detailDataSet.SalesDetail.WarehouseShelfNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.WarehouseShelfNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

                        // 同時仕入No
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 DEL
                        //// カラムチューザ：対象　　フォーマット：数値だが表示は通常
                        //Columns[this._detailDataSet.SalesDetail.SupplierSlipNoColumn.ColumnName].Hidden = false;
                        //Columns[this._detailDataSet.SalesDetail.SupplierSlipNoColumn.ColumnName].Width = 100;
                        //Columns[this._detailDataSet.SalesDetail.SupplierSlipNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        //Columns[this._detailDataSet.SalesDetail.SupplierSlipNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.SalesDetail.SupplierSlipNoColumn.ColumnName].Header.Caption = "同時仕入No";
                        //Columns[this._detailDataSet.SalesDetail.SupplierSlipNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        //Columns[this._detailDataSet.SalesDetail.SupplierSlipNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.StockPartySaleSlipNumColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.StockPartySaleSlipNumColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.StockPartySaleSlipNumColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.StockPartySaleSlipNumColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.StockPartySaleSlipNumColumn.ColumnName].Header.Caption = "同時仕入No";
                        Columns[this._detailDataSet.SalesDetail.StockPartySaleSlipNumColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.StockPartySaleSlipNumColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD

                        // 発注先コード
                        // カラムチューザ：対象　　フォーマット：数値だが表示は通常
                        Columns[this._detailDataSet.SalesDetail.UOESupplierCdColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.UOESupplierCdColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.UOESupplierCdColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.UOESupplierCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.UOESupplierCdColumn.ColumnName].Header.Caption = "発注先コード";
                        Columns[this._detailDataSet.SalesDetail.UOESupplierCdColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.UOESupplierCdColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
                        Columns[this._detailDataSet.SalesDetail.UOESupplierCdColumn.ColumnName].Format = GetSupplierFormat();
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD

                        // 発注先
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.UOESupplierSnmColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.UOESupplierSnmColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.UOESupplierSnmColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.UOESupplierSnmColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.UOESupplierSnmColumn.ColumnName].Header.Caption = "発注先";
                        Columns[this._detailDataSet.SalesDetail.UOESupplierSnmColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.UOESupplierSnmColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // UOEリマーク1
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.UOERemark1Column.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.UOERemark1Column.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.UOERemark1Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.UOERemark1Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.UOERemark1Column.ColumnName].Header.Caption = "UOEリマーク1";
                        Columns[this._detailDataSet.SalesDetail.UOERemark1Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.UOERemark1Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // UOEリマーク2
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.UOERemark2Column.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.UOERemark2Column.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.UOERemark2Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.UOERemark2Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.UOERemark2Column.ColumnName].Header.Caption = "UOEリマーク2";
                        Columns[this._detailDataSet.SalesDetail.UOERemark2Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.UOERemark2Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 販売区分
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.GuideNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.GuideNameColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.GuideNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.GuideNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;


                        // ---ADD K2013/01/23  鄧潘ハン---------------------------------->>>>>
                        if (this._opt_Nobuto == (int)Option.ON)
                        {
                            Columns[this._detailDataSet.SalesDetail.GuideNameColumn.ColumnName].Header.Caption = SP_SALESCODE;
                        }
                        else
                        {
                        Columns[this._detailDataSet.SalesDetail.GuideNameColumn.ColumnName].Header.Caption = "販売区分";
                        }
                        // ---ADD K2013/01/23   鄧潘ハン----------------------------------<<<<<
                        //Columns[this._detailDataSet.SalesDetail.GuideNameColumn.ColumnName].Header.Caption = "販売区分";// DEL K2013/01/23  鄧潘ハン
                        Columns[this._detailDataSet.SalesDetail.GuideNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.GuideNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 拠点コード
                        // カラムチューザ：対象外　フォーマット：非表示
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                        //Columns[this._detailDataSet.SalesDetail.SectionCdColumn.ColumnName].Hidden = true;
                        //Columns[this._detailDataSet.SalesDetail.SectionCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesDetail.SectionCdColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SectionCdColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.SectionCdColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.SectionCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SectionCdColumn.ColumnName].Header.Caption = "拠点コード";
                        Columns[this._detailDataSet.SalesDetail.SectionCdColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SectionCdColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

                        // 拠点
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.SectionGuideNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SectionGuideNameColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.SectionGuideNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.SectionGuideNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                        //Columns[this._detailDataSet.SalesDetail.SectionGuideNameColumn.ColumnName].Header.Caption = "拠点";
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesDetail.SectionGuideNameColumn.ColumnName].Header.Caption = "拠点名";
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesDetail.SectionGuideNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SectionGuideNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 明細備考
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.DtlNoteColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.DtlNoteColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.DtlNoteColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.DtlNoteColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.DtlNoteColumn.ColumnName].Header.Caption = "明細備考";
                        Columns[this._detailDataSet.SalesDetail.DtlNoteColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.DtlNoteColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // カラー名
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.ColorName1Column.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.ColorName1Column.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.ColorName1Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.ColorName1Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.ColorName1Column.ColumnName].Header.Caption = "カラー名";
                        Columns[this._detailDataSet.SalesDetail.ColorName1Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.ColorName1Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // トリム名
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.TrimNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.TrimNameColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.TrimNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.TrimNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.TrimNameColumn.ColumnName].Header.Caption = "トリム名";
                        Columns[this._detailDataSet.SalesDetail.TrimNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.TrimNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 算出価格
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcLPriceColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcLPriceColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcLPriceColumn.ColumnName].Format = formatCurrency;
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcLPriceColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcLPriceColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcLPriceColumn.ColumnName].Header.Caption = "算出価格";
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcLPriceColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcLPriceColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 算出売価
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcSalUnPrcColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcSalUnPrcColumn.ColumnName].Width = 80;
                        //Columns[this._detailDataSet.SalesDetail.StdUnPrcSalUnPrcColumn.ColumnName].Format = formatCurrency;// DEL 2010/08/31
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcSalUnPrcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcSalUnPrcColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcSalUnPrcColumn.ColumnName].Header.Caption = "算出売価";
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcSalUnPrcColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcSalUnPrcColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // -----------ADD 2010/08/31---------->>>>>
                        if (this._pointDspDivCd)
                        {
                            // 小数点表示区分：する
                            Columns[this._detailDataSet.SalesDetail.StdUnPrcSalUnPrcColumn.ColumnName].Format = formatFraction;
                        }
                        else
                        {
                            // 小数点表示区分：しない
                            Columns[this._detailDataSet.SalesDetail.StdUnPrcSalUnPrcColumn.ColumnName].Format = formatCurrency;
                        }
                        // -----------ADD 2010/08/31----------<<<<<

                        // 算出原価
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcUnCstColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcUnCstColumn.ColumnName].Width = 80;
                        //Columns[this._detailDataSet.SalesDetail.StdUnPrcUnCstColumn.ColumnName].Format = formatCurrency;// DEL 2010/08/31
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcUnCstColumn.ColumnName].Format = formatFraction;// ADD 2010/08/31
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcUnCstColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcUnCstColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcUnCstColumn.ColumnName].Header.Caption = "算出原価";
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcUnCstColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.StdUnPrcUnCstColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // メーカーコード
                        // カラムチューザ：対象　　フォーマット：数値だが表示は通常
                        Columns[this._detailDataSet.SalesDetail.GoodsMakerCdColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.GoodsMakerCdColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.GoodsMakerCdColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.GoodsMakerCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                        //Columns[this._detailDataSet.SalesDetail.GoodsMakerCdColumn.ColumnName].Header.Caption = "メーカー";
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesDetail.GoodsMakerCdColumn.ColumnName].Header.Caption = "メーカーコード";
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesDetail.GoodsMakerCdColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.GoodsMakerCdColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
                        Columns[this._detailDataSet.SalesDetail.GoodsMakerCdColumn.ColumnName].Format = GetMakerFormat();
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD

                        // メーカー
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.MakerNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.MakerNameColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.MakerNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.MakerNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                        //Columns[this._detailDataSet.SalesDetail.MakerNameColumn.ColumnName].Header.Caption = "メーカー";
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesDetail.MakerNameColumn.ColumnName].Header.Caption = "メーカー名";
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        Columns[this._detailDataSet.SalesDetail.MakerNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.MakerNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 DEL
                        //// 原価（粗利）
                        //// カラムチューザ：対象　　フォーマット：金額
                        //Columns[this._detailDataSet.SalesDetail.CostColumn.ColumnName].Hidden = false;
                        //Columns[this._detailDataSet.SalesDetail.CostColumn.ColumnName].Width = 80;
                        //Columns[this._detailDataSet.SalesDetail.CostColumn.ColumnName].Format = formatCurrency;
                        //Columns[this._detailDataSet.SalesDetail.CostColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        //Columns[this._detailDataSet.SalesDetail.CostColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.SalesDetail.CostColumn.ColumnName].Header.Caption = "粗利";
                        //Columns[this._detailDataSet.SalesDetail.CostColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        //Columns[this._detailDataSet.SalesDetail.CostColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 DEL

                        // 得意先伝票番号
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.CustSlipNoColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.CustSlipNoColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.CustSlipNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.CustSlipNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.CustSlipNoColumn.ColumnName].Header.Caption = "得意先伝票番号";
                        Columns[this._detailDataSet.SalesDetail.CustSlipNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.CustSlipNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 計上日
                        // カラムチューザ：対象　　フォーマット：日付（yyyy/mm/dd）
                        Columns[this._detailDataSet.SalesDetail.AddUpADateColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.AddUpADateColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.AddUpADateColumn.ColumnName].Format = formatDate;
                        Columns[this._detailDataSet.SalesDetail.AddUpADateColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.AddUpADateColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.AddUpADateColumn.ColumnName].Header.Caption = "計上日";
                        Columns[this._detailDataSet.SalesDetail.AddUpADateColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.AddUpADateColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 売掛区分
                        // カラムチューザ：対象外　フォーマット：非表示
                        Columns[this._detailDataSet.SalesDetail.AccRecDivCdColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesDetail.AccRecDivCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 売掛区分名
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.SalesDetail.AccRecDivCdNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.AccRecDivCdNameColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.AccRecDivCdNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.AccRecDivCdNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.AccRecDivCdNameColumn.ColumnName].Header.Caption = "売掛区分";
                        Columns[this._detailDataSet.SalesDetail.AccRecDivCdNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.AccRecDivCdNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 赤伝区分
                        // カラムチューザ：対象　　フォーマット：通常
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 DEL
                        //Columns[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].Hidden = false;
                        //Columns[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].Width = 100;
                        //Columns[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        //Columns[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].Header.Caption = "赤伝区分";
                        //Columns[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        //Columns[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                        Columns[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        Columns[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].Header.Caption = "赤伝区分";
                        Columns[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
                        // 納入先コード
                        Columns[this._detailDataSet.SalesDetail.AddresseeCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.AddresseeCodeColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.AddresseeCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.AddresseeCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.AddresseeCodeColumn.ColumnName].Header.Caption = "納入先コード";
                        Columns[this._detailDataSet.SalesDetail.AddresseeCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.AddresseeCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        Columns[this._detailDataSet.SalesDetail.AddresseeCodeColumn.ColumnName].Format = GetCustomerFormat();

                        // 納入先名
                        Columns[this._detailDataSet.SalesDetail.AddresseeNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.AddresseeNameColumn.ColumnName].Width = 120;
                        Columns[this._detailDataSet.SalesDetail.AddresseeNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.AddresseeNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.AddresseeNameColumn.ColumnName].Header.Caption = "納入先名";
                        Columns[this._detailDataSet.SalesDetail.AddresseeNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.AddresseeNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/09 ADD
                        // 入力日
                        // カラムチューザ：対象　　フォーマット：文字列(数値)
                        Columns[this._detailDataSet.SalesDetail.InputDayColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.InputDayColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.InputDayColumn.ColumnName].Format = formatDate;
                        Columns[this._detailDataSet.SalesDetail.InputDayColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.InputDayColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.InputDayColumn.ColumnName].Header.Caption = "入力日";
                        Columns[this._detailDataSet.SalesDetail.InputDayColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.InputDayColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/09 ADD

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.24 ADD
                        // 履歴区分
                        // カラムチューザ：対象
                        Columns[this._detailDataSet.SalesDetail.HistoryDivNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.HistoryDivNameColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.HistoryDivNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.HistoryDivNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.HistoryDivNameColumn.ColumnName].Header.Caption = "履歴";
                        Columns[this._detailDataSet.SalesDetail.HistoryDivNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.HistoryDivNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.24 ADD
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/19 ADD
                        // 伝票発行時刻
                        // カラムチューザ：対象
                        Columns[this._detailDataSet.SalesDetail.SlipPrintTimeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SlipPrintTimeColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.SalesDetail.SlipPrintTimeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.SlipPrintTimeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SlipPrintTimeColumn.ColumnName].Header.Caption = "伝票発行時刻";
                        Columns[this._detailDataSet.SalesDetail.SlipPrintTimeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SlipPrintTimeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/19 ADD

                        //--------------------------------------------------------------------------------
                        //  カラムチューザを有効にする
                        //--------------------------------------------------------------------------------
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/16 DEL
                        //this.uGrid_Detail.DisplayLayout.ColumnChooserEnabled = Infragistics.Win.DefaultableBoolean.True;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/16 DEL
                        this.uGrid_Detail.DisplayLayout.Override.RowSelectorHeaderStyle = Infragistics.Win.UltraWinGrid.RowSelectorHeaderStyle.ColumnChooserButton;
                        this.uGrid_Detail.DisplayLayout.Override.RowSelectorWidth = 24;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/16 ADD
                        _gridColumnChooserControl.Add(this.uGrid_Detail);
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/16 ADD

                        // カラムチューザボタンの外観を設定		
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
                        this.uGrid_Detail.DisplayLayout.Override.RowSelectorAppearance.BackColor = Color.FromArgb(89, 135, 214);
                        this.uGrid_Detail.DisplayLayout.Override.RowSelectorAppearance.BackColor2 = Color.FromArgb(7, 59, 150);
                        this.uGrid_Detail.DisplayLayout.Override.RowSelectorAppearance.BackGradientStyle = GradientStyle.Vertical;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD
                        this.uGrid_Detail.DisplayLayout.Override.RowSelectorHeaderAppearance.BackColor = this.uGrid_Detail.DisplayLayout.Override.RowSelectorAppearance.BackColor;
                        this.uGrid_Detail.DisplayLayout.Override.RowSelectorHeaderAppearance.BackColor2 = this.uGrid_Detail.DisplayLayout.Override.RowSelectorAppearance.BackColor2;
                        this.uGrid_Detail.DisplayLayout.Override.RowSelectorHeaderAppearance.BackGradientStyle = this.uGrid_Detail.DisplayLayout.Override.RowSelectorAppearance.BackGradientStyle;
                        this.uGrid_Detail.ImageList = Broadleaf.Library.Resources.IconResourceManagement.ImageList16;
                        this.uGrid_Detail.DisplayLayout.Override.RowSelectorHeaderAppearance.Image = (int)Broadleaf.Library.Resources.Size16_Index.STAR1;
                        // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
                        // 自動回答
                        if (this._opt_Pcc == (int)Option.ON)
                        {
                            Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].Width = 120;
                            Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                            Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].Header.Caption = "自動回答";
                            Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        }
                        else
                        {
                            Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].Hidden = true;
                            Columns[this._detailDataSet.SalesDetail.AutoAnswerDivSCMColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        }
                        // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<

                        //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>
                        if (this._opt_Pcc == (int)Option.ON)
                        {
                            //問合せ番号
                            // カラムチューザ：対象　　フォーマット：通常
                            Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].Width = 100;
                            Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].Header.Caption = "問合せ番号";
                            Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        }
                        else
                        {
                            Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].Hidden = true;
                            Columns[this._detailDataSet.SalesDetail.InquiryNumberColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        }

                        //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<
                        // ADD 2012/04/01 gezh Redmine#29250 ------------------------------------------------->>>>>
                        // 更新日時
                        // カラムチューザ：対象　　フォーマット：日付(yyyy/MM/dd HH:mm:ss)
                        Columns[this._detailDataSet.SalesDetail.UpdateDateTimeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.UpdateDateTimeColumn.ColumnName].Width = 160;
                        Columns[this._detailDataSet.SalesDetail.UpdateDateTimeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.UpdateDateTimeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.UpdateDateTimeColumn.ColumnName].Header.Caption = "更新日時";
                        Columns[this._detailDataSet.SalesDetail.UpdateDateTimeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.UpdateDateTimeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // ADD 2012/04/01 gezh Redmine#29250 -------------------------------------------------<<<<<
                        //--- ADD 陳永康 2014/12/28 変換後品番の追加対応 ----------------->>>>>
                        // 変換後品番
                        //Columns[this._detailDataSet.SalesDetail.ChangeGoodsNoColumn.ColumnName].Hidden = false; //DEL 陳永康 2015/03/16 変換後品番 初期値の非表示対応
                        Columns[this._detailDataSet.SalesDetail.ChangeGoodsNoColumn.ColumnName].Hidden = true; //ADD 陳永康 2015/03/16 変換後品番 初期値の非表示対応
                        Columns[this._detailDataSet.SalesDetail.ChangeGoodsNoColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.ChangeGoodsNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.SalesDetail.ChangeGoodsNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.ChangeGoodsNoColumn.ColumnName].Header.Caption = "変換後品番";
                        Columns[this._detailDataSet.SalesDetail.ChangeGoodsNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.ChangeGoodsNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        //--- ADD 陳永康 2014/12/28 変換後品番の追加対応 -----------------<<<<<

                        // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
                        // 計上数
                        Columns[this._detailDataSet.SalesDetail.SalesRecognitionCntColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SalesRecognitionCntColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.SalesRecognitionCntColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.SalesRecognitionCntColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SalesRecognitionCntColumn.ColumnName].Header.Caption = "計上数";
                        Columns[this._detailDataSet.SalesDetail.SalesRecognitionCntColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SalesRecognitionCntColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        if (this._pointDspDivCd)
                        {
                            // 小数点表示区分：する
                            Columns[this._detailDataSet.SalesDetail.SalesRecognitionCntColumn.ColumnName].Format = formatFraction;
                        }
                        else
                        {
                            // 小数点表示区分：しない
                            Columns[this._detailDataSet.SalesDetail.SalesRecognitionCntColumn.ColumnName].Format = formatCurrency;
                        }

                        // 未計上数
                        Columns[this._detailDataSet.SalesDetail.SalesNotRecognitionCntColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.SalesDetail.SalesNotRecognitionCntColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.SalesDetail.SalesNotRecognitionCntColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.SalesDetail.SalesNotRecognitionCntColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.SalesDetail.SalesNotRecognitionCntColumn.ColumnName].Header.Caption = "未計上数";
                        Columns[this._detailDataSet.SalesDetail.SalesNotRecognitionCntColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.SalesDetail.SalesNotRecognitionCntColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        if (this._pointDspDivCd)
                        {
                            // 小数点表示区分：する
                            Columns[this._detailDataSet.SalesDetail.SalesNotRecognitionCntColumn.ColumnName].Format = formatFraction;
                        }
                        else
                        {
                            // 小数点表示区分：しない
                            Columns[this._detailDataSet.SalesDetail.SalesNotRecognitionCntColumn.ColumnName].Format = formatCurrency;
                        }
                        // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<

                        // ---- ADD K2015/04/27 陳亮 モモセ部品の第二売価追加 ---->>>>>
                        // 第二売価
                        // カラムチューザ：対象　　フォーマット：金額
                        if (this._opt_Momose == Convert.ToInt32(Option.ON))
                        {
                            Columns[this._detailDataSet.SalesDetail.SecondSalePriceColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesDetail.SecondSalePriceColumn.ColumnName].Width = 160;
                            Columns[this._detailDataSet.SalesDetail.SecondSalePriceColumn.ColumnName].Format = formatCurrency;
                            Columns[this._detailDataSet.SalesDetail.SecondSalePriceColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesDetail.SecondSalePriceColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesDetail.SecondSalePriceColumn.ColumnName].Header.Caption = "第二売価";
                            Columns[this._detailDataSet.SalesDetail.SecondSalePriceColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesDetail.SecondSalePriceColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        }
                        // ---- ADD K2015/04/27 陳亮 モモセ部品の第二売価追加 ----<<<<<

                        //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
                       if (this._opt_Meigo == Convert.ToInt32(Option.ON))
                        {
                            #region 明細表示
                            Columns[this._detailDataSet.SalesDetail.SalesAreaNameColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesDetail.SalesAreaNameColumn.ColumnName].Width = 120;
                            Columns[this._detailDataSet.SalesDetail.SalesAreaNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                            Columns[this._detailDataSet.SalesDetail.SalesAreaNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesDetail.SalesAreaNameColumn.ColumnName].Header.Caption = "地区";
                            Columns[this._detailDataSet.SalesDetail.SalesAreaNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesDetail.SalesAreaNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode1Column.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode1Column.ColumnName].Width = 130;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode1Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode1Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode1Column.ColumnName].Header.Caption = "分析コード1";
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode1Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode1Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode2Column.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode2Column.ColumnName].Width = 130;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode2Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode2Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode2Column.ColumnName].Header.Caption = "分析コード2";
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode2Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode2Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode3Column.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode3Column.ColumnName].Width = 130;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode3Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode3Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode3Column.ColumnName].Header.Caption = "分析コード3";
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode3Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode3Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode4Column.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode4Column.ColumnName].Width = 130;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode4Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode4Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode4Column.ColumnName].Header.Caption = "分析コード4";
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode4Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode4Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode5Column.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode5Column.ColumnName].Width = 130;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode5Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode5Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode5Column.ColumnName].Header.Caption = "分析コード5";
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode5Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode5Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode6Column.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode6Column.ColumnName].Width = 130;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode6Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode6Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode6Column.ColumnName].Header.Caption = "分析コード6";
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode6Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.SalesDetail.CustAnalysCode6Column.ColumnName].Header.VisiblePosition = visiblePosition++;
                            #endregion
                        }
                        //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<

                        // 列幅自動調整を設定値にしたがって行う
                        autoColumnAdjust(_columnWidthAutoAdjust_Detail, 1);

                        #endregion // 明細タブ
                        break;
                    }
                case 2:
                    {
                        #region 赤伝発行入力タブ

                        // 品名
                        // カラムチューザ：対象　フォーマット：通常
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNameColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNameColumn.ColumnName].Header.Caption = "品名";
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNameColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNameColumn.ColumnName].CellAppearance.BackColor = _CellReadOnlyColor;
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNameColumn.ColumnName].CellAppearance.BackColorDisabled = _CellReadOnlyColor;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 ADD


                        // 品番
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNoColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNoColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNoColumn.ColumnName].Header.Caption = "品番";
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNoColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNoColumn.ColumnName].CellAppearance.BackColor = _CellReadOnlyColor;
                        Columns[this._detailDataSet.RedSlipDetail.GoodsNoColumn.ColumnName].CellAppearance.BackColorDisabled = _CellReadOnlyColor;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 ADD

                        // 可能数
                        // カラムチューザ：対象　　フォーマット：数値
                        Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].Width = 60;
                        Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].Format = formatFraction;
                        Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].Header.Caption = "可能数";
                        Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
                        Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                        Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].CellAppearance.BackColor = _CellReadOnlyColor;
                        Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].CellAppearance.BackColorDisabled = _CellReadOnlyColor;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 ADD

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 DEL
                        //// 仕入
                        //// カラムチューザ：対象　　フォーマット：通常
                        //Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].Hidden = false;
                        //Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].Width = 50;
                        //Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Center;
                        //Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].Header.Caption = "仕入";
                        //Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        //Columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
                        // 仕入
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].Width = 50;
                        Columns[this._detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Center;
                        Columns[this._detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].Header.Caption = "仕入";
                        Columns[this._detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        Columns[this._detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                        Columns[this._detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].CellAppearance.BackColor = _CellReadOnlyColor;
                        Columns[this._detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].CellAppearance.BackColorDisabled = _CellReadOnlyColor;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 ADD

                        // 仕入伝票番号
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Header.Caption = "仕入伝票番号";
                        Columns[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        //Columns[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].EditorControl = Infragistics.Win.UltraWinEditors.UltraNumericEditor;
                        Columns[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].AutoEdit = true;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/08 ADD
                        Columns[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/08 ADD

                        // --- ADD 2012/08/22 ---------->>>>>
                        // 仕入日
                        // カラムチューザ：対象　　フォーマット：日付
                        Columns[this._detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].Width = 130;
                        Columns[this._detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].Style = Infragistics.Win.UltraWinGrid.ColumnStyle.Date;
                        Columns[this._detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].Header.Caption = "仕入日";
                        Columns[this._detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        Columns[this._detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].AutoEdit = true;
                        Columns[this._detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit;
                        // --- ADD 2012/08/22 ----------<<<<<

                        // 返品数
                        // カラムチューザ：対象　　フォーマット：数値
                        Columns[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName].Width = 60;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName].Format = formatFraction;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName].Header.Caption = "返品数";
                        Columns[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        //Columns[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName].EditorControl = Infragistics.Win.UltraWinEditors.UltraNumericEditor;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName].AutoEdit = true;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/08 ADD
                        Columns[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/08 ADD

                        // 単価
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Width = 60;
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Format = formatFraction;
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Header.Caption = "単価";
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 ADD

                        // --- ADD 2009/11/25 ---------->>>>>
                        // 金額
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName].Width = 60;
                        Columns[this._detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName].Format = formatCurrency;
                        Columns[this._detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName].Header.Caption = "金額";
                        Columns[this._detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        Columns[this._detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit;
                        // --- ADD 2009/11/25 ----------<<<<<

                        // 原価
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].Width = 60;
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].Format = formatFraction;
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].Header.Caption = "原価";
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
                        Columns[this._detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 ADD

                        // 在庫取寄区分
                        // カラムチューザ：対象外　フォーマット：－－
                        Columns[this._detailDataSet.RedSlipDetail.SalesOrderDivCdColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.RedSlipDetail.SalesOrderDivCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
                        Columns[this._detailDataSet.RedSlipDetail.SalesOrderDivCdColumn.ColumnName].CellAppearance.BackColor = _CellReadOnlyColor;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 ADD

                        // 在庫取寄区分名
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName].Width = 50;
                        Columns[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName].Header.Caption = "在庫取寄区分";
                        Columns[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
                        Columns[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                        Columns[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName].CellAppearance.BackColor = _CellReadOnlyColor;
                        Columns[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName].CellAppearance.BackColorDisabled = _CellReadOnlyColor;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 ADD

                        // 倉庫コード
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Width = 50;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/11 DEL
                        //Columns[this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/11 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/11 ADD
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/11 ADD
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Header.Caption = "倉庫コード";
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/08 ADD
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/08 ADD

                        // 倉庫名称
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName].Header.Caption = "倉庫";
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName].CellAppearance.BackColor = _CellReadOnlyColor;
                        Columns[this._detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName].CellAppearance.BackColorDisabled = _CellReadOnlyColor;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 ADD

                        // 棚番
                        // カラムチューザ：対象　　フォーマット：通常
                        Columns[this._detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].Width = 70;
                        Columns[this._detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].Header.Caption = "棚番";
                        Columns[this._detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/11 ADD
                        Columns[this._detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                        Columns[this._detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].CellAppearance.BackColor = _CellReadOnlyColor;
                        Columns[this._detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].CellAppearance.BackColorDisabled = _CellReadOnlyColor;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/11 ADD

                        // 返品後数
                        // カラムチューザ：対象　　フォーマット：数値
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].Width = 60;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].Format = formatFraction;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].Header.Caption = "返品後数";
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].CellAppearance.BackColor = _CellReadOnlyColor;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].CellAppearance.BackColorDisabled = _CellReadOnlyColor;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 ADD

                        // 受注残
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].Width = 60;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].Format = formatFraction;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].Header.Caption = "返品後数";
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].CellActivation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].CellAppearance.BackColor = _CellReadOnlyColor;
                        Columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].CellAppearance.BackColorDisabled = _CellReadOnlyColor;

                        //-----ADD 2010/12/20 ----->>>>>
                        // 得意先コード
                        // カラムチューザ：対象　　フォーマット：文字列(数値)
                        Columns[this._detailDataSet.RedSlipDetail.CustomerCodeColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.RedSlipDetail.CustomerCodeColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.RedSlipDetail.CustomerCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.RedSlipDetail.CustomerCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.CustomerCodeColumn.ColumnName].Header.Caption = "得意先コード";
                        Columns[this._detailDataSet.RedSlipDetail.CustomerCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.CustomerCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        Columns[this._detailDataSet.RedSlipDetail.CustomerCodeColumn.ColumnName].Format = GetCustomerFormat();
                        //-----ADD 2010/12/20 -----<<<<<
                        //------------ADD wangf 2011/12/30 FOR Redmine#27660--------->>>>>>>>
                        // 指示書(仮伝)番号
                        // カラムチューザ：対象　　フォーマット：文字列(数値)
                        Columns[this._detailDataSet.RedSlipDetail.PartySaleSlipNumColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.RedSlipDetail.PartySaleSlipNumColumn.ColumnName].Width = 80;
                        Columns[this._detailDataSet.RedSlipDetail.PartySaleSlipNumColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.RedSlipDetail.PartySaleSlipNumColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.SalesList.PartySaleSlipNumColumn.ColumnName].Header.Caption = "得意先注番"; //DEL liusy 2012/08/08 for Redmine#31530
                        Columns[this._detailDataSet.SalesList.PartySaleSlipNumColumn.ColumnName].Header.Caption = "指示書(仮伝)番号"; //ADD liusy 2012/08/08 for Redmine#31530
                        Columns[this._detailDataSet.RedSlipDetail.PartySaleSlipNumColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.PartySaleSlipNumColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 備考１
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.RedSlipDetail.SlipNoteColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNoteColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNoteColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNoteColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNoteColumn.ColumnName].Header.Caption = "備考１";
                        Columns[this._detailDataSet.RedSlipDetail.SlipNoteColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNoteColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 備考２
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.RedSlipDetail.SlipNote2Column.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNote2Column.ColumnName].Width = 100;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNote2Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNote2Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNote2Column.ColumnName].Header.Caption = "備考２";
                        Columns[this._detailDataSet.RedSlipDetail.SlipNote2Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNote2Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 備考３
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.RedSlipDetail.SlipNote3Column.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNote3Column.ColumnName].Width = 100;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNote3Column.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNote3Column.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNote3Column.ColumnName].Header.Caption = "備考３";
                        Columns[this._detailDataSet.RedSlipDetail.SlipNote3Column.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.SlipNote3Column.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // DateAndSlipNo
                        // カラムチューザ：対象　　フォーマット：文字列
                        Columns[this._detailDataSet.RedSlipDetail.DateAndSlipNoColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.RedSlipDetail.DateAndSlipNoColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.RedSlipDetail.DateAndSlipNoColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // --- DEL 2012/08/22 ---------->>>>>
                        //Columns[this._detailDataSet.RedSlipDetail.DateAndSlipNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        // --- DEL 2012/08/22 ----------<<<<<
                        // --- ADD 2012/08/22 ---------->>>>>
                        Columns[this._detailDataSet.RedSlipDetail.DateAndSlipNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        // --- ADD 2012/08/22 ----------<<<<<
                        Columns[this._detailDataSet.RedSlipDetail.DateAndSlipNoColumn.ColumnName].Header.Caption = "DateAndSlipNo";
                        Columns[this._detailDataSet.RedSlipDetail.DateAndSlipNoColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.RedSlipDetail.DateAndSlipNoColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        //------------ADD wangf 2011/12/30 FOR Redmine#27660---------<<<<<<<<

                        //--------------------------------------------------------------------------------
                        //  カラムチューザを有効にする
                        //--------------------------------------------------------------------------------
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/16 DEL
                        //this.uGrid_RedSlip.DisplayLayout.ColumnChooserEnabled = Infragistics.Win.DefaultableBoolean.True;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/16 DEL
                        this.uGrid_RedSlip.DisplayLayout.Override.RowSelectorHeaderStyle = Infragistics.Win.UltraWinGrid.RowSelectorHeaderStyle.ColumnChooserButton;
                        this.uGrid_RedSlip.DisplayLayout.Override.RowSelectorWidth = 24;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/16 ADD
                        _gridColumnChooserControl.Add(this.uGrid_RedSlip);
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/16 ADD

                        // カラムチューザボタンの外観を設定		
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
                        this.uGrid_Slip.DisplayLayout.Override.RowSelectorAppearance.BackColor = Color.FromArgb(89, 135, 214);
                        this.uGrid_Slip.DisplayLayout.Override.RowSelectorAppearance.BackColor2 = Color.FromArgb(7, 59, 150);
                        this.uGrid_Slip.DisplayLayout.Override.RowSelectorAppearance.BackGradientStyle = GradientStyle.Vertical;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD
                        this.uGrid_RedSlip.DisplayLayout.Override.RowSelectorHeaderAppearance.BackColor = this.uGrid_Slip.DisplayLayout.Override.RowSelectorAppearance.BackColor;
                        this.uGrid_RedSlip.DisplayLayout.Override.RowSelectorHeaderAppearance.BackColor2 = this.uGrid_Slip.DisplayLayout.Override.RowSelectorAppearance.BackColor2;
                        this.uGrid_RedSlip.DisplayLayout.Override.RowSelectorHeaderAppearance.BackGradientStyle = this.uGrid_Slip.DisplayLayout.Override.RowSelectorAppearance.BackGradientStyle;
                        this.uGrid_RedSlip.ImageList = Broadleaf.Library.Resources.IconResourceManagement.ImageList16;
                        this.uGrid_RedSlip.DisplayLayout.Override.RowSelectorHeaderAppearance.Image = (int)Broadleaf.Library.Resources.Size16_Index.STAR1;

                        // 列幅自動調整を設定値にしたがって行う
                        autoColumnAdjust(_columnWidthAutoAdjust_RedSlip, 2);

                        #endregion // 赤伝発行入力タブ
                        break;
                    }
                case 3:
                    {
                        #region 残高表示タブ

                        // 行No
                        // カラムチューザ：非対象　　フォーマット：非表示
                        Columns[this._detailDataSet.BalanceList.RowNoColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.RowNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 計上日
                        // カラムチューザ：対象　　フォーマット：日付
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].Header.Caption = "計上日";
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].Format = formatDate;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                        // 前回残高
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].Header.Caption = "前回残高";
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 今回入金額
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].Header.Caption = "今回入金額";
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 繰越残高
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].Header.Caption = "繰越残高";
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 今回売上
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].Header.Caption = "今回売上";
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 返品値引
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].Header.Caption = "返品値引";
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 純売上額
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].Header.Caption = "純売上額";
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 消費税
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].Header.Caption = "消費税";
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 今回合計
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].Header.Caption = "今回合計";
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 今回残高
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].Header.Caption = "今回残高";
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 伝票枚数
                        // カラムチューザ：対象　　フォーマット：文字
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].Width = 90;
                        //Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].Format = formatCurrency;
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].Header.Caption = "伝票枚数";
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        /* ---DEL 2009/02/10 -------------------------------------------------------------------------------------------------------------->>>>>
                        // 拠点
                        // カラムチューザ：対象　　フォーマット：文字
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Format = formatCurrency;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Header.Caption = "拠点";
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                           ---DEL 2009/02/10 --------------------------------------------------------------------------------------------------------------<<<<< */

                        // 2010/04/15 Add >>>
                        // 拠点コード
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 得意先コード
                        Columns[this._detailDataSet.BalanceList.CustomerCodeColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.CustomerCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 得意先名
                        Columns[this._detailDataSet.BalanceList.CustomerNameColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.CustomerNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        // 2010/04/15 Add <<<

                        // ADD 2013/03/13 神姫産業-与信調査 対応----------------------------------------->>>>>
                        // 請求区分
                        Columns[this._detailDataSet.BalanceList.ClaimSectionCodeColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.ClaimSectionCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 与信区分
                        Columns[this._detailDataSet.BalanceList.CreditMngCodeColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.CreditMngCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 与信額
                        Columns[this._detailDataSet.BalanceList.CreditMoneyColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.CreditMoneyColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 警告与信額
                        Columns[this._detailDataSet.BalanceList.WarningCreditMoneyColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.WarningCreditMoneyColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 与信売掛残高
                        Columns[this._detailDataSet.BalanceList.PrsntAccRecBalanceColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.PrsntAccRecBalanceColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 請求締日
                        Columns[this._detailDataSet.BalanceList.TotalDayColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.TotalDayColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 月次締日
                        Columns[this._detailDataSet.BalanceList.CompanyTotalDayColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.CompanyTotalDayColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 請求・月次差異額
                        Columns[this._detailDataSet.BalanceList.DifferenceColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.DifferenceColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 与信額差異
                        Columns[this._detailDataSet.BalanceList.CreditDifferenceColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.CreditDifferenceColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 売掛区分
                        Columns[this._detailDataSet.BalanceList.AccRecDivCdColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.AccRecDivCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        // ADD 2013/03/13 神姫産業-与信調査 対応-----------------------------------------<<<<<


                        //--------------------------------------------------------------------------------
                        //  カラムチューザを有効にする
                        //--------------------------------------------------------------------------------
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/16 DEL
                        //this.uGrid_BalanceList.DisplayLayout.ColumnChooserEnabled = Infragistics.Win.DefaultableBoolean.True;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/16 DEL
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorHeaderStyle = Infragistics.Win.UltraWinGrid.RowSelectorHeaderStyle.ColumnChooserButton;
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorWidth = 24;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/16 ADD
                        _gridColumnChooserControl.Add(this.uGrid_BalanceList);
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/16 ADD

                        // カラムチューザボタンの外観を設定		
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorAppearance.BackColor = Color.FromArgb(89, 135, 214);
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorAppearance.BackColor2 = Color.FromArgb(7, 59, 150);
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorAppearance.BackGradientStyle = GradientStyle.Vertical;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorHeaderAppearance.BackColor = this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorAppearance.BackColor;
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorHeaderAppearance.BackColor2 = this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorAppearance.BackColor2;
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorHeaderAppearance.BackGradientStyle = this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorAppearance.BackGradientStyle;
                        this.uGrid_BalanceList.ImageList = Broadleaf.Library.Resources.IconResourceManagement.ImageList16;
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorHeaderAppearance.Image = (int)Broadleaf.Library.Resources.Size16_Index.STAR1;

                        // 列幅自動調整を設定値にしたがって行う
                        // 2010/04/15 >>>
                        //autoColumnAdjust(_columnWidthAutoAdjust_Balance, 0);
                        autoColumnAdjust(_columnWidthAutoAdjust_Balance, 3);
                        // 2010/04/15 <<<

                        #endregion // 残高表示タブ

                        break;
                    }
                // 2010/04/15 Add >>>
                case 4:
                    {
                        #region 出力用残高リスト

                        // 行No
                        // カラムチューザ：非対象　　フォーマット：非表示
                        Columns[this._detailDataSet.BalanceList.RowNoColumn.ColumnName].Hidden = true;
                        Columns[this._detailDataSet.BalanceList.RowNoColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                        // 拠点コード
                        // カラムチューザ：非対象　　フォーマット：通常
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        //Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Header.Caption = "拠点コード"; // DEL 2010/10/09
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Header.Caption = "拠点"; // ADD 2010/10/09
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // 得意先コード
                        // カラムチューザ：非対象　　フォーマット：通常
                        Columns[this._detailDataSet.BalanceList.CustomerCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.CustomerCodeColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.BalanceList.CustomerCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.BalanceList.CustomerCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        //Columns[this._detailDataSet.BalanceList.CustomerCodeColumn.ColumnName].Header.Caption = "得意先コード"; // DEL 2010/10/09
                        Columns[this._detailDataSet.BalanceList.CustomerCodeColumn.ColumnName].Header.Caption = "請求先"; // ADD 2010/10/09
                        Columns[this._detailDataSet.BalanceList.CustomerCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.CustomerCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 得意先名
                        // カラムチューザ：非対象　　フォーマット：通常
                        Columns[this._detailDataSet.BalanceList.CustomerNameColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.CustomerNameColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.BalanceList.CustomerNameColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.BalanceList.CustomerNameColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        //Columns[this._detailDataSet.BalanceList.CustomerNameColumn.ColumnName].Header.Caption = "得意先"; // DEL 2010/10/09
                        Columns[this._detailDataSet.BalanceList.CustomerNameColumn.ColumnName].Header.Caption = "請求先名"; // ADD 2010/10/09
                        Columns[this._detailDataSet.BalanceList.CustomerNameColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.CustomerNameColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 計上日
                        // カラムチューザ：対象　　フォーマット：日付
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].Width = 100;
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].Header.Caption = "計上日";
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.AddUpDateColumn.ColumnName].Format = formatDate;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                        // 前回残高
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].Header.Caption = "前回残高";
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.LastTimeBlcColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 今回入金額
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].Header.Caption = "今回入金額";
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.ThisTimeDmdNrmlColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 繰越残高
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].Header.Caption = "繰越残高";
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.ThisTimeTtlBlcColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 今回売上
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].Header.Caption = "今回売上"; // DEL 2010/10/09
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].Header.Caption = "今回売上額"; // ADD 2010/10/09
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.ThisTimeSalesColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 返品値引
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].Header.Caption = "返品値引"; // DEL 2010/10/09
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].Header.Caption = "返品・値引額"; // ADD 2010/10/09
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.SalesPriceRgdsDisColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 純売上額
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].Header.Caption = "純売上額";
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.OfsThisTimeSalesColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 消費税
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        //Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].Header.Caption = "消費税"; // DEL 2010/10/09
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].Header.Caption = "消費税額"; // ADD 2010/10/09
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.OfsThisSalesTaxColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 今回合計
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].Header.Caption = "今回合計";
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.ThisSalesPricTotalColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 今回残高
                        // カラムチューザ：対象　　フォーマット：金額
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].Header.Caption = "今回残高";
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.AfCalBlcColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // 伝票枚数
                        // カラムチューザ：対象　　フォーマット：文字
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].Width = 90;
                        //Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].Format = formatCurrency;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].Format = formatCurrency;
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].Header.Caption = "伝票枚数";
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.SalesSlipCountColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                        // ADD 2013/03/13 神姫産業-与信調査 対応----------------------------------------->>>>>
                        // 与信残高出力の時
                        if (prtSetForm.CustPrtPprBlnce.CreditMoneyOutputDiv)
                        {
                            // 請求拠点
                            // カラムチューザ：対象　　フォーマット：通常
                            Columns[this._detailDataSet.BalanceList.ClaimSectionCodeColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.BalanceList.ClaimSectionCodeColumn.ColumnName].Width = 100;
                            Columns[this._detailDataSet.BalanceList.ClaimSectionCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                            Columns[this._detailDataSet.BalanceList.ClaimSectionCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                            Columns[this._detailDataSet.BalanceList.ClaimSectionCodeColumn.ColumnName].Header.Caption = "請求拠点";
                            Columns[this._detailDataSet.BalanceList.ClaimSectionCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.BalanceList.ClaimSectionCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                            // 与信区分
                            // カラムチューザ：対象　　フォーマット：通常
                            Columns[this._detailDataSet.BalanceList.CreditMngCodeColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.BalanceList.CreditMngCodeColumn.ColumnName].Width = 100;
                            Columns[this._detailDataSet.BalanceList.CreditMngCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                            Columns[this._detailDataSet.BalanceList.CreditMngCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                            Columns[this._detailDataSet.BalanceList.CreditMngCodeColumn.ColumnName].Header.Caption = "与信区分";
                            Columns[this._detailDataSet.BalanceList.CreditMngCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.BalanceList.CreditMngCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                            // 与信額
                            // カラムチューザ：対象　　フォーマット：金額
                            Columns[this._detailDataSet.BalanceList.CreditMoneyColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.BalanceList.CreditMoneyColumn.ColumnName].Width = 90;
                            Columns[this._detailDataSet.BalanceList.CreditMoneyColumn.ColumnName].Format = formatCurrency;
                            Columns[this._detailDataSet.BalanceList.CreditMoneyColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.BalanceList.CreditMoneyColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.BalanceList.CreditMoneyColumn.ColumnName].Header.Caption = "与信額";
                            Columns[this._detailDataSet.BalanceList.CreditMoneyColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.BalanceList.CreditMoneyColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                            // 警告与信額
                            // カラムチューザ：対象　　フォーマット：金額
                            Columns[this._detailDataSet.BalanceList.WarningCreditMoneyColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.BalanceList.WarningCreditMoneyColumn.ColumnName].Width = 90;
                            Columns[this._detailDataSet.BalanceList.WarningCreditMoneyColumn.ColumnName].Format = formatCurrency;
                            Columns[this._detailDataSet.BalanceList.WarningCreditMoneyColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.BalanceList.WarningCreditMoneyColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.BalanceList.WarningCreditMoneyColumn.ColumnName].Header.Caption = "警告与信額";
                            Columns[this._detailDataSet.BalanceList.WarningCreditMoneyColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.BalanceList.WarningCreditMoneyColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                            // 与信売掛残高
                            // カラムチューザ：対象　　フォーマット：金額
                            Columns[this._detailDataSet.BalanceList.PrsntAccRecBalanceColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.BalanceList.PrsntAccRecBalanceColumn.ColumnName].Width = 90;
                            Columns[this._detailDataSet.BalanceList.PrsntAccRecBalanceColumn.ColumnName].Format = formatCurrency;
                            Columns[this._detailDataSet.BalanceList.PrsntAccRecBalanceColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.BalanceList.PrsntAccRecBalanceColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.BalanceList.PrsntAccRecBalanceColumn.ColumnName].Header.Caption = "与信売掛残高";
                            Columns[this._detailDataSet.BalanceList.PrsntAccRecBalanceColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.BalanceList.PrsntAccRecBalanceColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                            // 請求締日
                            // カラムチューザ：対象　　フォーマット：通常
                            Columns[this._detailDataSet.BalanceList.TotalDayColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.BalanceList.TotalDayColumn.ColumnName].Width = 100;
                            Columns[this._detailDataSet.BalanceList.TotalDayColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                            Columns[this._detailDataSet.BalanceList.TotalDayColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                            Columns[this._detailDataSet.BalanceList.TotalDayColumn.ColumnName].Header.Caption = "請求締日";
                            Columns[this._detailDataSet.BalanceList.TotalDayColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.BalanceList.TotalDayColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                            // 月次締日
                            // カラムチューザ：対象　　フォーマット：通常
                            Columns[this._detailDataSet.BalanceList.CompanyTotalDayColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.BalanceList.CompanyTotalDayColumn.ColumnName].Width = 100;
                            Columns[this._detailDataSet.BalanceList.CompanyTotalDayColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                            Columns[this._detailDataSet.BalanceList.CompanyTotalDayColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                            Columns[this._detailDataSet.BalanceList.CompanyTotalDayColumn.ColumnName].Header.Caption = "月次締日";
                            Columns[this._detailDataSet.BalanceList.CompanyTotalDayColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.BalanceList.CompanyTotalDayColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                            // 請求・月次差異額
                            // カラムチューザ：対象　　フォーマット：通常
                            Columns[this._detailDataSet.BalanceList.DifferenceColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.BalanceList.DifferenceColumn.ColumnName].Width = 100;
                            Columns[this._detailDataSet.BalanceList.DifferenceColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                            Columns[this._detailDataSet.BalanceList.DifferenceColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                            //Columns[this._detailDataSet.BalanceList.DifferenceColumn.ColumnName].Header.Caption = "請求月次差異額"; // DEL 2013/03/29 shijx Redmine#35205
                            Columns[this._detailDataSet.BalanceList.DifferenceColumn.ColumnName].Header.Caption = "請求・月次差異額"; // ADD 2013/03/29 shijx Redmine#35205
                            Columns[this._detailDataSet.BalanceList.DifferenceColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.BalanceList.DifferenceColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                            // 与信額差異
                            // カラムチューザ：対象　　フォーマット：金額
                            Columns[this._detailDataSet.BalanceList.CreditDifferenceColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.BalanceList.CreditDifferenceColumn.ColumnName].Width = 90;
                            Columns[this._detailDataSet.BalanceList.CreditDifferenceColumn.ColumnName].Format = formatCurrency;
                            Columns[this._detailDataSet.BalanceList.CreditDifferenceColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                            Columns[this._detailDataSet.BalanceList.CreditDifferenceColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                            Columns[this._detailDataSet.BalanceList.CreditDifferenceColumn.ColumnName].Header.Caption = "与信額差異";
                            Columns[this._detailDataSet.BalanceList.CreditDifferenceColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.BalanceList.CreditDifferenceColumn.ColumnName].Header.VisiblePosition = visiblePosition++;

                            // 売掛区分
                            // カラムチューザ：対象　　フォーマット：通常
                            Columns[this._detailDataSet.BalanceList.AccRecDivCdColumn.ColumnName].Hidden = false;
                            Columns[this._detailDataSet.BalanceList.AccRecDivCdColumn.ColumnName].Width = 100;
                            Columns[this._detailDataSet.BalanceList.AccRecDivCdColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Left;
                            Columns[this._detailDataSet.BalanceList.AccRecDivCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                            Columns[this._detailDataSet.BalanceList.AccRecDivCdColumn.ColumnName].Header.Caption = "売掛区分";
                            Columns[this._detailDataSet.BalanceList.AccRecDivCdColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                            Columns[this._detailDataSet.BalanceList.AccRecDivCdColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                        }
                        // 与信残高出力なしの時
                        else
                        {
                            // 請求区分
                            Columns[this._detailDataSet.BalanceList.ClaimSectionCodeColumn.ColumnName].Hidden = true;
                            Columns[this._detailDataSet.BalanceList.ClaimSectionCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                            // 与信区分
                            Columns[this._detailDataSet.BalanceList.CreditMngCodeColumn.ColumnName].Hidden = true;
                            Columns[this._detailDataSet.BalanceList.CreditMngCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                            // 与信額
                            Columns[this._detailDataSet.BalanceList.CreditMoneyColumn.ColumnName].Hidden = true;
                            Columns[this._detailDataSet.BalanceList.CreditMoneyColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                            // 警告与信額
                            Columns[this._detailDataSet.BalanceList.WarningCreditMoneyColumn.ColumnName].Hidden = true;
                            Columns[this._detailDataSet.BalanceList.WarningCreditMoneyColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                            // 与信売掛残高
                            Columns[this._detailDataSet.BalanceList.PrsntAccRecBalanceColumn.ColumnName].Hidden = true;
                            Columns[this._detailDataSet.BalanceList.PrsntAccRecBalanceColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                            // 請求締日
                            Columns[this._detailDataSet.BalanceList.TotalDayColumn.ColumnName].Hidden = true;
                            Columns[this._detailDataSet.BalanceList.TotalDayColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                            // 月次締日
                            Columns[this._detailDataSet.BalanceList.CompanyTotalDayColumn.ColumnName].Hidden = true;
                            Columns[this._detailDataSet.BalanceList.CompanyTotalDayColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                            // 請求・月次差異額
                            Columns[this._detailDataSet.BalanceList.DifferenceColumn.ColumnName].Hidden = true;
                            Columns[this._detailDataSet.BalanceList.DifferenceColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                            // 与信額差異
                            Columns[this._detailDataSet.BalanceList.CreditDifferenceColumn.ColumnName].Hidden = true;
                            Columns[this._detailDataSet.BalanceList.CreditDifferenceColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;

                            // 売掛区分
                            Columns[this._detailDataSet.BalanceList.AccRecDivCdColumn.ColumnName].Hidden = true;
                            Columns[this._detailDataSet.BalanceList.AccRecDivCdColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
                        }

                        // ADD 2013/03/13 神姫産業-与信調査 対応-----------------------------------------<<<<<

                        /* ---DEL 2009/02/10 -------------------------------------------------------------------------------------------------------------->>>>>
                        // 拠点
                        // カラムチューザ：対象　　フォーマット：文字
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Hidden = false;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Width = 90;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Format = formatCurrency;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].CellAppearance.TextHAlign = Infragistics.Win.HAlign.Right;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].ExcludeFromColumnChooser = Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Header.Caption = "拠点";
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Header.Appearance.TextHAlign = Infragistics.Win.HAlign.Default;
                        Columns[this._detailDataSet.BalanceList.SectionCodeColumn.ColumnName].Header.VisiblePosition = visiblePosition++;
                           ---DEL 2009/02/10 --------------------------------------------------------------------------------------------------------------<<<<< */

                        //--------------------------------------------------------------------------------
                        //  カラムチューザを有効にする
                        //--------------------------------------------------------------------------------
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/16 DEL
                        //this.uGrid_BalanceList.DisplayLayout.ColumnChooserEnabled = Infragistics.Win.DefaultableBoolean.True;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/16 DEL
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorHeaderStyle = Infragistics.Win.UltraWinGrid.RowSelectorHeaderStyle.ColumnChooserButton;
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorWidth = 24;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/16 ADD
                        _gridColumnChooserControl.Add(this.uGrid_BalanceList);
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/16 ADD

                        // カラムチューザボタンの外観を設定		
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorAppearance.BackColor = Color.FromArgb(89, 135, 214);
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorAppearance.BackColor2 = Color.FromArgb(7, 59, 150);
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorAppearance.BackGradientStyle = GradientStyle.Vertical;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorHeaderAppearance.BackColor = this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorAppearance.BackColor;
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorHeaderAppearance.BackColor2 = this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorAppearance.BackColor2;
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorHeaderAppearance.BackGradientStyle = this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorAppearance.BackGradientStyle;
                        this.uGrid_BalanceList.ImageList = Broadleaf.Library.Resources.IconResourceManagement.ImageList16;
                        this.uGrid_BalanceList.DisplayLayout.Override.RowSelectorHeaderAppearance.Image = (int)Broadleaf.Library.Resources.Size16_Index.STAR1;

                        // 列幅自動調整を設定値にしたがって行う
                        autoColumnAdjust(_columnWidthAutoAdjust_Balance, 3);

                        #endregion

                        break;
                    }
                // 2010/04/15 Add <<<
                default:
                    {
                        break;
                    }
            }
        }

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
        /// <summary>
        /// セル結合設定処理
        /// </summary>
        /// <param name="ultraGridColumn"></param>
        private void SettingMergedCell(Infragistics.Win.UltraWinGrid.UltraGridColumn column)
        {
            //--------------------------------------------------
            // CellAppearanceを強制的に統一する
            //--------------------------------------------------
            column.MergedCellAppearance = _margedCellAppearance;
            column.CellAppearance.BackColor = _margedCellAppearance.BackColor;
            column.CellAppearance.BackColor2 = _margedCellAppearance.BackColor2;
            column.CellAppearance.TextVAlign = VAlign.Top;

            //--------------------------------------------------
            // セル結合設定
            //--------------------------------------------------
            column.MergedCellStyle = Infragistics.Win.UltraWinGrid.MergedCellStyle.Always;
            column.MergedCellEvaluationType = Infragistics.Win.UltraWinGrid.MergedCellEvaluationType.MergeSameText;
            column.MergedCellContentArea = Infragistics.Win.UltraWinGrid.MergedCellContentArea.VisibleRect;

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/20 ADD
            // セル結合判定クラス
            CustomMergedCellEvaluator customMergedCellEvaluator = new CustomMergedCellEvaluator();

            if (column.Key == _detailDataSet.SalesDetail.SalesDateColumn.ColumnName)
            {
                // 日付
                customMergedCellEvaluator.JoinColList.Add(_detailDataSet.SalesDetail.SalesDateColumn.ColumnName);
            }
            else
            {
                // 伝票番号
                // (伝票番号)
                customMergedCellEvaluator.JoinColList.Add(_detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName);
                // (伝票区分)
                customMergedCellEvaluator.JoinColList.Add(_detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName);
            }
            column.MergedCellEvaluator = customMergedCellEvaluator;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/20 ADD
        }
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/20 ADD
        # region [グリッドセル結合判定クラス]
        /// <summary>
        /// グリッドセル結合判定クラス(カスタマイズ)
        /// </summary>
        private class CustomMergedCellEvaluator : Infragistics.Win.UltraWinGrid.IMergedCellEvaluator
        {
            /// <summary>結合条件セルリスト</summary>
            private List<string> _joinColList;
            /// <summary>
            /// 結合条件セルリスト
            /// </summary>
            public List<string> JoinColList
            {
                get { return _joinColList; }
                set { _joinColList = value; }
            }

            /// <summary>
            /// コンストラクタ
            /// </summary>
            public CustomMergedCellEvaluator()
            {
                _joinColList = new List<string>();
            }

            /// <summary>
            /// セル結合判定処理
            /// </summary>
            /// <param name="row1"></param>
            /// <param name="row2"></param>
            /// <param name="column"></param>
            /// <returns></returns>
            public bool ShouldCellsBeMerged(Infragistics.Win.UltraWinGrid.UltraGridRow row1, Infragistics.Win.UltraWinGrid.UltraGridRow row2, Infragistics.Win.UltraWinGrid.UltraGridColumn column)
            {
                foreach (string joinColName in JoinColList)
                {
                    if (!EqualCellValue(row1, row2, joinColName)) return false;
                }
                return true;
            }
            /// <summary>
            /// セルValue比較処理
            /// </summary>
            /// <param name="row1"></param>
            /// <param name="row2"></param>
            /// <param name="columnName"></param>
            /// <returns></returns>
            private bool EqualCellValue(Infragistics.Win.UltraWinGrid.UltraGridRow row1, Infragistics.Win.UltraWinGrid.UltraGridRow row2, string columnName)
            {
                return (row1.Cells[columnName].Value.ToString() == row2.Cells[columnName].Value.ToString());
            }
        }
        # endregion
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/20 ADD

        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
        # region [コードフォーマット取得処理]
        /// <summary>
        /// 得意先コードフォーマット取得
        /// </summary>
        /// <returns></returns>
        private string GetCustomerFormat()
        {
            return GetFormat("tNedit_CustomerCode");
        }
        /// <summary>
        /// 仕入先コードフォーマット取得
        /// </summary>
        /// <returns></returns>
        private string GetSupplierFormat()
        {
            return GetFormat("tNedit_SupplierCd");
        }
        //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
        /// <summary>
        /// 車種メーカーコードフォーマット取得
        /// </summary>
        /// <returns></returns>
        private string GetCarMakerFormat()
        {
            return GetFormat("tNedit_CarMakerCd");
        }
        //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
        /// <summary>
        /// メーカーコードフォーマット取得
        /// </summary>
        /// <returns></returns>
        private string GetMakerFormat()
        {
            return GetFormat("tNedit_GoodsMakerCd");
        }
        /// <summary>
        /// ＢＬコードフォーマット取得
        /// </summary>
        /// <returns></returns>
        private string GetBLCodeFormat()
        {
            return GetFormat("tNedit_BLGoodsCode");
        }
        /// <summary>
        /// ＢＬグループコードフォーマット取得
        /// </summary>
        /// <returns></returns>
        private string GetBLGroupFormat()
        {
            return GetFormat("tNedit_BLGloupCode");
        }
        /// <summary>
        /// 中分類コードフォーマット取得
        /// </summary>
        /// <returns></returns>
        private string GetGoodsMGroupFormat()
        {
            return GetFormat("tNedit_GoodsMGroup");
        }
        /// <summary>
        /// 大分類コードフォーマット取得
        /// </summary>
        /// <returns></returns>
        private string GetGoodsLGroupFormat()
        {
            return GetFormat("tNedit_GoodsLGroup");
        }
        /// <summary>
        /// 汎用フォーマット取得処理
        /// </summary>
        /// <param name="editName"></param>
        /// <returns></returns>
        private string GetFormat(string editName)
        {
            string format = string.Empty;

            UiSet uiset;
            this.uiSetControl1.ReadUISet(out uiset, editName);
            if (uiset != null)
            {
                format = string.Format("{0};-{0};''", new string('0', uiset.Column));
            }

            return format;
        }
        # endregion
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD
        #endregion // グリッド作成

        #region グリッド行背景色変更

        #region 行の背景色変更処理

        /// <summary>
        /// 行の背景色変更処理
        /// </summary>
        /// <param name="isSelected">bool 選択されている</param>
        /// <param name="gridRow">行オブジェクト</param>
        /// <param name="targetGrid">対象となるグリッド 0:伝票一覧, 1:明細</param>
        private void RowColorChange(bool isSelected, Infragistics.Win.UltraWinGrid.UltraGridRow gridRow, int targetGrid)
        {
            if (gridRow == null) return;

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
            //// 対象行が選択されているかそうでないかで配色が異なる
            //if (isSelected)
            //{
            //    if (targetGrid == 0)
            //    {
            //        // 伝票一覧グリッド用の色を設定
            //        gridRow.Appearance.BackColor = _selectedRowBackColor_Slip;
            //        gridRow.Appearance.BackColor2 = _selectedRowBackColor2_Slip;
            //    }
            //    else
            //    {
            //        // 明細一覧用の色を設定
            //        gridRow.Appearance.BackColor = _selectedRowBackColor_Detail;
            //        gridRow.Appearance.BackColor2 = _selectedRowBackColor2_Detail;
            //    }
            //    // グラデーションを設定
            //    gridRow.Appearance.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical;
            //}
            //else
            //{
            //    // 背景色を標準の配色に戻す
            //    if (gridRow.Index % 2 == 1)
            //    {
            //        gridRow.Appearance.BackColor = Color.Lavender;
            //    }
            //    else
            //    {
            //        gridRow.Appearance.BackColor = Color.White;
            //    }
            //    // グラデーションを設定
            //    gridRow.Appearance.BackGradientStyle = Infragistics.Win.GradientStyle.Default;
            //}
            //// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            //// 結合セルの表示設定を既定に戻す
            //if ( targetGrid == 0 )
            //{
            //    gridRow.Cells[_detailDataSet.SalesList.SalesDateColumn.ColumnName].Appearance = _margedCellAppearance;
            //    gridRow.Cells[_detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Appearance = _margedCellAppearance;
            //}
            //else
            //{
            //    gridRow.Cells[_detailDataSet.SalesDetail.SalesDateColumn.ColumnName].Appearance = _margedCellAppearance;
            //    gridRow.Cells[_detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Appearance = _margedCellAppearance;
            //}
            //// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            Infragistics.Win.Appearance cellApp = new Infragistics.Win.Appearance();

            if (isSelected)
            {
                if (targetGrid == 0)
                {
                    cellApp.BackColor = _selectedRowBackColor_Slip;
                    cellApp.BackColor2 = _selectedRowBackColor2_Slip;
                }
                else
                {
                    cellApp.BackColor = _selectedRowBackColor_Detail;
                    cellApp.BackColor2 = _selectedRowBackColor2_Detail;
                }
                cellApp.BackGradientStyle = GradientStyle.Vertical;
            }
            else
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/03/09 DEL
                //if ( gridRow.Index % 2 == 1 )
                //{
                //    cellApp.BackColor = Color.Lavender;
                //    cellApp.BackColor2 = Color.Lavender;
                //}
                //else
                //{
                //    cellApp.BackColor = Color.White;
                //    cellApp.BackColor2 = Color.White;
                //}
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/03/09 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/03/09 ADD
                cellApp.BackColor = Color.White;
                cellApp.BackColor2 = Color.White;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/03/09 ADD
                cellApp.BackGradientStyle = GradientStyle.Default;
            }

            if (targetGrid == 0)
            {
                foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                {
                    // チェックボックス不要なセルはCheckBox表示しない
                    if (cell.Column.Key == _detailDataSet.SalesList.SelectionColumn.ColumnName &&
                         cell.Value == DBNull.Value)
                    {
                        cell.Style = Infragistics.Win.UltraWinGrid.ColumnStyle.Edit;
                        cell.Appearance.BackColor = _margedCellAppearance.BackColor;
                        cell.Appearance.BackColor2 = _margedCellAppearance.BackColor2;
                        continue;
                    }
                    // 結合セルのカラムとチェックボックスカラムは迂回
                    if (cell.Column.Key == _detailDataSet.SalesList.SelectionColumn.ColumnName ||
                         cell.Column.Key == _detailDataSet.SalesList.SalesDateColumn.ColumnName ||
                         cell.Column.Key == _detailDataSet.SalesList.SalesSlipNumColumn.ColumnName)
                    {
                        continue;
                    }
                    cell.Appearance.BackColor = cellApp.BackColor;
                    cell.Appearance.BackColor2 = cellApp.BackColor2;
                    cell.Appearance.BackGradientStyle = cellApp.BackGradientStyle;
                }
            }
            else
            {
                foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                {
                    // チェックボックス不要なセルはCheckBox表示しない
                    if (cell.Column.Key == _detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName &&
                         cell.Value == DBNull.Value)
                    {
                        cell.Style = Infragistics.Win.UltraWinGrid.ColumnStyle.Edit;

                        cell.Appearance.BackColor = _margedCellAppearance.BackColor;
                        cell.Appearance.BackColor2 = _margedCellAppearance.BackColor2;
                        continue;
                    }
                    // 結合セルのカラムとチェックボックスカラムは迂回
                    if (cell.Column.Key == _detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName ||
                         cell.Column.Key == _detailDataSet.SalesDetail.SalesDateColumn.ColumnName ||
                         cell.Column.Key == _detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName)
                    {
                        continue;
                    }
                    cell.Appearance.BackColor = cellApp.BackColor;
                    cell.Appearance.BackColor2 = cellApp.BackColor2;
                    cell.Appearance.BackGradientStyle = cellApp.BackGradientStyle;
                }
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
        }

        #endregion // 行の背景色変更処理

        #region 行の背景色変更処理(伝票区分ごとの前景色・背景色)

        /// <summary>
        /// 行の背景色変更処理(伝票区分ごとの前景色・背景色)
        /// </summary>
        /// <param name="isSelected">bool 選択されている</param>
        /// <param name="gridRow">行オブジェクト</param>
        /// <param name="targetGrid">対象となるグリッド 0:伝票一覧, 1:明細</param>
        /// <param name="slipType">0: 赤伝/返品 1:受注 2:出荷 3: 入金 4:商品値引</param>
        private void RowColorChange_SlipType(bool isSelected, Infragistics.Win.UltraWinGrid.UltraGridRow gridRow, int targetGrid, int slipType)
        {
            if (gridRow == null) return;

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
            //// 対象行が選択されているかそうでないかで配色が異なる
            //if (isSelected)
            //{
            //    if (targetGrid == 0)
            //    {
            //        // 伝票一覧グリッド用の色を設定
            //        gridRow.Appearance.BackColor = _selectedRowBackColor_Slip;
            //        gridRow.Appearance.BackColor2 = _selectedRowBackColor2_Slip;
            //    }
            //    else
            //    {
            //        // 明細一覧用の色を設定
            //        gridRow.Appearance.BackColor = _selectedRowBackColor_Detail;
            //        gridRow.Appearance.BackColor2 = _selectedRowBackColor2_Detail;
            //    }
            //    // グラデーションを設定
            //    gridRow.Appearance.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical;
            //}
            //else
            //{
            //    // 背景色を標準の配色に戻す
            //    if (gridRow.Index % 2 == 1)
            //    {
            //        if (slipType == 0) // 赤伝/返品
            //        {
            //            gridRow.Appearance.ForeColor = this._RedSlipRowForeColor;
            //            gridRow.Appearance.BackColor = this._RedSlipRowBackColor;
            //        }
            //        else if (slipType == 1) // 受注
            //        {
            //            gridRow.Appearance.ForeColor = this._OrdersRowForeColor;
            //            gridRow.Appearance.BackColor = this._OrdersRowBackColor;
            //        }
            //        else if (slipType == 2) // 出荷
            //        {
            //            gridRow.Appearance.ForeColor = this._ShippingRowForeColor;
            //            gridRow.Appearance.BackColor = this._ShippingRowBackColor;
            //        }
            //        else if (slipType == 3) // 入金
            //        {
            //            gridRow.Appearance.ForeColor = this._DepositRowForeColor;
            //            gridRow.Appearance.BackColor = this._DepositRowBackColor;
            //        }
            //        else
            //        {
            //            gridRow.Appearance.BackColor = Color.Lavender;
            //        }
            //    }
            //    else
            //    {
            //        if (slipType == 0) // 赤伝/返品
            //        {
            //            gridRow.Appearance.ForeColor = this._RedSlipRowForeColor;
            //            gridRow.Appearance.BackColor = this._RedSlipRowBackColor;
            //        }
            //        else if (slipType == 1) // 受注
            //        {
            //            gridRow.Appearance.ForeColor = this._OrdersRowForeColor;
            //            gridRow.Appearance.BackColor = this._OrdersRowBackColor;
            //        }
            //        else if (slipType == 2) // 出荷
            //        {
            //            gridRow.Appearance.ForeColor = this._ShippingRowForeColor;
            //            gridRow.Appearance.BackColor = this._ShippingRowBackColor;
            //        }
            //        else if (slipType == 3) // 入金
            //        {
            //            gridRow.Appearance.ForeColor = this._DepositRowForeColor;
            //            gridRow.Appearance.BackColor = this._DepositRowBackColor;
            //        }
            //        else
            //        {
            //            gridRow.Appearance.BackColor = Color.White;
            //        }
            //    }
            //    // グラデーションを設定
            //    gridRow.Appearance.BackGradientStyle = Infragistics.Win.GradientStyle.Default;
            //}
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            Infragistics.Win.Appearance cellApp = new Infragistics.Win.Appearance();
            cellApp.ForeColor = Color.Black; // 初期化

            if (isSelected)
            {
                if (targetGrid == 0)
                {
                    // 伝票一覧グリッド用の色を設定
                    cellApp.BackColor = _selectedRowBackColor_Slip;
                    cellApp.BackColor2 = _selectedRowBackColor2_Slip;
                }
                else
                {
                    // 明細一覧用の色を設定
                    cellApp.BackColor = _selectedRowBackColor_Detail;
                    cellApp.BackColor2 = _selectedRowBackColor2_Detail;
                }
                // グラデーションを設定
                cellApp.BackGradientStyle = Infragistics.Win.GradientStyle.Vertical;
            }
            else
            {
                // 背景色を標準の配色に戻す
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/03/09 DEL
                //if ( gridRow.Index % 2 == 1 )
                //{
                //    if ( slipType == 0 ) // 赤伝/返品
                //    {
                //        cellApp.ForeColor = this._RedSlipRowForeColor;
                //        cellApp.BackColor = this._RedSlipRowBackColor;
                //    }
                //    else if ( slipType == 1 ) // 受注
                //    {
                //        cellApp.ForeColor = this._OrdersRowForeColor;
                //        cellApp.BackColor = this._OrdersRowBackColor;
                //    }
                //    else if ( slipType == 2 ) // 出荷
                //    {
                //        cellApp.ForeColor = this._ShippingRowForeColor;
                //        cellApp.BackColor = this._ShippingRowBackColor;
                //    }
                //    else if ( slipType == 3 ) // 入金
                //    {
                //        cellApp.ForeColor = this._DepositRowForeColor;
                //        cellApp.BackColor = this._DepositRowBackColor;
                //    }
                //    else
                //    {
                //        cellApp.BackColor = Color.Lavender;
                //    }
                //}
                //else
                //{
                //    if ( slipType == 0 ) // 赤伝/返品
                //    {
                //        cellApp.ForeColor = this._RedSlipRowForeColor;
                //        cellApp.BackColor = this._RedSlipRowBackColor;
                //    }
                //    else if ( slipType == 1 ) // 受注
                //    {
                //        cellApp.ForeColor = this._OrdersRowForeColor;
                //        cellApp.BackColor = this._OrdersRowBackColor;
                //    }
                //    else if ( slipType == 2 ) // 出荷
                //    {
                //        cellApp.ForeColor = this._ShippingRowForeColor;
                //        cellApp.BackColor = this._ShippingRowBackColor;
                //    }
                //    else if ( slipType == 3 ) // 入金
                //    {
                //        cellApp.ForeColor = this._DepositRowForeColor;
                //        cellApp.BackColor = this._DepositRowBackColor;
                //    }
                //    else
                //    {
                //        cellApp.BackColor = Color.White;
                //    }
                //}
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/03/09 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/03/09 ADD
                if (slipType == 0) // 赤伝/返品
                {
                    cellApp.ForeColor = this._RedSlipRowForeColor;
                    cellApp.BackColor = this._RedSlipRowBackColor;
                }
                else if (slipType == 1) // 受注
                {
                    cellApp.ForeColor = this._OrdersRowForeColor;
                    cellApp.BackColor = this._OrdersRowBackColor;
                }
                else if (slipType == 2) // 出荷
                {
                    cellApp.ForeColor = this._ShippingRowForeColor;
                    cellApp.BackColor = this._ShippingRowBackColor;
                }
                else if (slipType == 3) // 入金
                {
                    cellApp.ForeColor = this._DepositRowForeColor;
                    cellApp.BackColor = this._DepositRowBackColor;
                }
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                else if (slipType == 4) // 商品値引
                {
                    cellApp.ForeColor = this._RedSlipRowForeColor;
                    cellApp.BackColor = Color.White;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
                else
                {
                    cellApp.BackColor = Color.White;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/03/09 ADD
                // グラデーションを設定
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
                //cellApp.BackGradientStyle = Infragistics.Win.GradientStyle.Default;
                cellApp.BackGradientStyle = Infragistics.Win.GradientStyle.None;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD
            }

            if (targetGrid == 0)
            {
                foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                {
                    if (cell.Column.Key == _detailDataSet.SalesList.SelectionColumn.ColumnName ||
                         cell.Column.Key == _detailDataSet.SalesList.SalesDateColumn.ColumnName ||
                         cell.Column.Key == _detailDataSet.SalesList.SalesSlipNumColumn.ColumnName)
                    {
                        continue;
                    }
                    cell.Appearance.BackColor = cellApp.BackColor;
                    cell.Appearance.BackColor2 = cellApp.BackColor2;
                    cell.Appearance.BackGradientStyle = cellApp.BackGradientStyle;
                    cell.Appearance.ForeColor = cellApp.ForeColor;
                }
            }
            else
            {
                foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                {
                    if (cell.Column.Key == _detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName ||
                         cell.Column.Key == _detailDataSet.SalesDetail.SalesDateColumn.ColumnName ||
                         cell.Column.Key == _detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName)
                    {
                        continue;
                    }
                    cell.Appearance.BackColor = cellApp.BackColor;
                    cell.Appearance.BackColor2 = cellApp.BackColor2;
                    cell.Appearance.BackGradientStyle = cellApp.BackGradientStyle;
                    cell.Appearance.ForeColor = cellApp.ForeColor;
                }
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
        }

        #endregion // 行の背景色変更処理(伝票区分ごとの前景色・背景色)

        #region 全ての行の背景色変更

        /// <summary>
        /// 全ての行の背景色変更
        /// </summary>
        /// <param name="isSelected">bool 選択されている</param>
        /// <param name="targetGrid">対象とするグリッド 0:伝票一覧, 1:明細, 2:赤伝発行</param>
        private void RowColorChangeAll(bool isSelected, int targetGrid)
        {
            switch (targetGrid)
            {
                case 0:
                    {
                        foreach (Infragistics.Win.UltraWinGrid.UltraGridRow row in this.uGrid_Slip.Rows)
                        {
                            RowColorChange(isSelected, row, targetGrid);
                        }
                        break;
                    }
                case 1:
                    {
                        foreach (Infragistics.Win.UltraWinGrid.UltraGridRow row in this.uGrid_Detail.Rows)
                        {
                            RowColorChange(isSelected, row, targetGrid);
                        }
                        break;
                    }
                case 2:
                    {
                        foreach (Infragistics.Win.UltraWinGrid.UltraGridRow row in this.uGrid_RedSlip.Rows)
                        {
                            RowColorChange(isSelected, row, 0);
                        }
                        break;
                    }
                case 3:
                    {
                        //foreach (Infragistics.Win.UltraWinGrid.UltraGridRow row in this.uGrid_R.Rows)
                        //{
                        //RowColorChange(isSelected, row, 0);
                        //}
                        break;
                    }
                default:
                    {
                        break;
                    }
            }
        }
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 ADD
        /// <summary>
        /// グリッドのチェックボックス制御処理（検索後）
        /// </summary>
        private void SetGridCheckBoxEnabled()
        {
            // 伝票表示グリッド
            foreach (Infragistics.Win.UltraWinGrid.UltraGridRow row in this.uGrid_Slip.Rows)
            {
                // DBNullならチェックボックス表示しない
                if (row.Cells[_detailDataSet.SalesList.SelectionColumn.ColumnName].Value == DBNull.Value)
                {
                    row.Cells[_detailDataSet.SalesList.SelectionColumn.ColumnName].Style = Infragistics.Win.UltraWinGrid.ColumnStyle.Edit;
                }
            }
            // 明細表示グリッド
            foreach (Infragistics.Win.UltraWinGrid.UltraGridRow row in this.uGrid_Detail.Rows)
            {
                // DBNullならチェックボックス表示しない
                if (row.Cells[_detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Value == DBNull.Value)
                {
                    row.Cells[_detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Style = Infragistics.Win.UltraWinGrid.ColumnStyle.Edit;
                }
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 ADD
        #endregion // 全ての行の背景色変更

        #region 全ての行の背景色変更(伝票区分ごとの背景・前景色)

        /// <summary>
        /// 全ての行の背景色変更(伝票区分ごとの背景・前景色)
        /// </summary>
        /// <param name="isSelected">bool 選択されている</param>
        /// <param name="rows">行コレクション</param>
        /// <param name="targetGrid">対象とするグリッド 0:伝票一覧, 1:明細, 2:赤伝発行</param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              売上伝票入力時金額変更した場合明細の色を変えて表示しているが、得意先電子元帳でも同様に色を変えて表示する。</br>
        private void RowColorChangeAll_SlipType(bool isSelected, Infragistics.Win.UltraWinGrid.RowsCollection rows, int targetGrid)
        {
            switch (targetGrid)
            {
                // 赤伝・残高はない
                case 0:
                    {
                        // 受注などの行のみ色を変える
                        foreach (Infragistics.Win.UltraWinGrid.UltraGridRow row in rows)
                        {
                            if ((int)row.Cells[this._detailDataSet.SalesList.DataDivColumn.ColumnName].Value == 1) // 入金
                            {
                                this.RowColorChange_SlipType(false, row, targetGrid, 3);
                            }
                            else
                            {
                                if ((int)row.Cells[this._detailDataSet.SalesList.SalesSlipCdColumn.ColumnName].Value == 1) // 返品
                                {
                                    this.RowColorChange_SlipType(false, row, targetGrid, 0);
                                }
                                else
                                {
                                    if (row.Cells[this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName].Value.ToString() == "赤伝") // 赤伝
                                    {
                                        this.RowColorChange_SlipType(false, row, targetGrid, 0);
                                    }
                                    else
                                    {
                                        if ((int)row.Cells[this._detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName].Value == 20) // 受注
                                        {
                                            this.RowColorChange_SlipType(false, row, targetGrid, 1);
                                        }
                                        else if ((int)row.Cells[this._detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName].Value == 40) // 出荷
                                        {
                                            this.RowColorChange_SlipType(false, row, targetGrid, 2);
                                        }
                                    }
                                }
                            }
                        }
                        break;
                    }
                case 1:
                    {
                        // 受注などの行のみ色を変える
                        foreach (Infragistics.Win.UltraWinGrid.UltraGridRow row in rows)
                        {
                            if ((int)row.Cells[this._detailDataSet.SalesDetail.DataDivColumn.ColumnName].Value == 1) // 入金
                            {
                                this.RowColorChange_SlipType(false, row, targetGrid, 3);
                            }
                            else
                            {
                                if ((int)row.Cells[this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName].Value == 1) // 返品
                                {
                                    this.RowColorChange_SlipType(false, row, targetGrid, 0);
                                }
                                else
                                {
                                    if (row.Cells[this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName].Value.ToString() == "赤伝") // 赤伝
                                    {
                                        this.RowColorChange_SlipType(false, row, targetGrid, 0);
                                    }
                                    else
                                    {
                                        if ((int)row.Cells[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName].Value == 20) // 受注
                                        {
                                            this.RowColorChange_SlipType(false, row, targetGrid, 1);
                                        }
                                        else if ((int)row.Cells[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName].Value == 40) // 出荷
                                        {
                                            this.RowColorChange_SlipType(false, row, targetGrid, 2);
                                        }
                                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                                        else if ((string)row.Cells[this._detailDataSet.SalesDetail.SalesSlipCdDtlNameColumn.ColumnName].Value == "商品値引")
                                        {
                                            this.RowColorChange_SlipType(false, row, targetGrid, 4);
                                        }
                                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

                                    }
                                }

                                // -----------ADD 2010/08/05------------>>>>>
                                #region 売単価、原単価、定価のバックカラー設定
                                int salesRowNo = (int)row.Cells[_detailDataSet.SalesDetail.RowNoColumn.ColumnName].Value;
                                this.DetailGridSalesUnitCostColorSetting(row, salesRowNo);
                                this.DetailGridSalesUnitPriceColorSetting(row, salesRowNo);
                                this.DetailGridListPriceColorSetting(row, salesRowNo);
                                #endregion
                                // -----------ADD 2010/08/05------------<<<<<
                            }
                        }
                        break;
                    }
                default:
                    {
                        break;
                    }
            }
        }

        #endregion // 全ての行の背景色変更(伝票区分ごとの背景・前景色)

        #endregion // グリッド行背景色変更

        #endregion // プライベートメソッド

        #region 検索
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
        /// <summary>
        /// 日付範囲チェック処理（残高一覧表示の対象年月用）
        /// </summary>
        /// <param name="stEdit"></param>
        /// <param name="edEdit"></param>
        /// <param name="result"></param>
        /// <returns></returns>
        private bool CheckDateRange(ref TDateEdit stEdit, ref TDateEdit edEdit, out DateGetAcs.CheckDateRangeResult result)
        {
            result = _dateGetAcs.CheckDateRange(DateGetAcs.YmdType.Year, 1, ref stEdit, ref edEdit, false);
            return (result == DateGetAcs.CheckDateRangeResult.OK);
        }
        /// <summary>
        /// 日付範囲チェック処理（伝票・明細抽出の売上日付・入力日付用）
        /// </summary>
        /// <param name="stEdit"></param>
        /// <param name="edEdit"></param>
        /// <param name="result"></param>
        /// <param name="allowNoInput"></param>
        /// <returns></returns>
        private bool CheckDateRangeForSlip(ref TDateEdit stEdit, ref TDateEdit edEdit, out DateGetAcs.CheckDateRangeResult result, bool allowNoInput)
        {
            int range = 3;
            if (allowNoInput) range = 0;

            result = _dateGetAcs.CheckDateRange(DateGetAcs.YmdType.YearMonth, range, ref stEdit, ref edEdit, allowNoInput);
            return (result == DateGetAcs.CheckDateRangeResult.OK);
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
        ///// <summary>
        ///// メニューの検索ボタンクリック
        ///// </summary>
        ///// <returns>status:リモート側のステータス他、-1はエラー</returns>
        ///// <remarks>伝票および明細のデータを取得します</remarks>
        //private int SearchSlipDetailList()
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
        /// <summary>
        /// 検索実行処理
        /// </summary>
        /// <returns>エラーコントロール</returns>
        /// <remarks>
        /// <br>Update Note : 2009/11/25 呉元嘯</br>
        /// <br>              PM.NS保守依頼③</br>
        /// <br>              再発行時の行選択を明細から行えるように修正</br>
        /// <br>Update Note : 2009/12/28 呉元嘯</br>
        /// <br>              PM.NS保守依頼④</br>
        /// <br>              明細表示行数を拡大させる件の修正</br>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              小数点表示区分を参照し、表示制御を行う</br>
        /// <br>Update Note:  2010/08/31 呉元嘯</br>
        /// <br>              Redmine#14006対応</br>
        /// <br>Update Note:  2010/09/01 caowj</br>
        /// <br>              Redmine#14073対応</br>
        /// <br>Update Note:  2010/12/20 yangmj</br>
        /// <br>              赤伝発行ボタンの実行可否制御の修正</br>
        /// <br>              該当データ無し時のエラー修正</br>
		/// <br>Update Note : 2013/01/30 wangf </br>
		/// <br>            : 10801804-00、速度改善関連、Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応</br>
		/// <br>            : 残高集計のタイミングをずらす</br>
        /// <br>Update Note : 2013/02/16 wangf </br>
        /// <br>            : 10801804-00、速度改善関連、Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応</br>
        /// <br>            : ①残高集計をファンクションキー「残高照会(F2)」と連動させる</br>
        /// <br>            : ②検索(F10)後に基本条件を変更時、メッセージを表示時に残高をクリアしないように変更</br>
        /// <br>            : ③検索(F10)後に条件変更が無い場合は、残高集計を実行しても再集計をしないように変更</br>
        /// <br>            : ④「残高集計」ボタンへのフォーカス遷移変更</br>
        /// </remarks>
        private Control SearchSlipDetailList()
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
        {
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 ADD
            long dataCount = 0;
            _custPtrSearchAcs.ExtractCancelFlag = false;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 ADD

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            Control errorControl = null;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

            int status = 0;

            // --- DEL m.suzuki 2010/07/20 ---------->>>>>
            //this._redSlipBottonFlag = false;// ADD 2009/11/25
            // --- DEL m.suzuki 2010/07/20 ----------<<<<<

            if (this._selectedMainTabKey == "uTab_RemainList")
            {
                #region 残高一覧取得

                // 残高一覧タブが表示されている場合は残高一覧を取得

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 DEL
                ////-----------------------
                //// 日付をチェック
                ////-----------------------
                //if (this.tDateEdit_rl_TargetYMSt.GetDateTime() > this.tDateEdit_rl_TargetYMEd.GetDateTime())
                //{
                //    // 日付チェック失敗
                //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                //        MSG_MUST_BE_CORRECT_CALENDER, -1, MessageBoxButtons.OK);
                //    return -1;
                //}

                //if (this.tDateEdit_rl_TargetYMSt.GetDateTime().AddYears(1) < this.tDateEdit_rl_TargetYMEd.GetDateTime())
                //{
                //    // 日付チェック失敗
                //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                //        MSG_MUST_BE_IN_A_YEAR, -1, MessageBoxButtons.OK);
                //    return -1;
                //}
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 DEL
                // 2010/04/15 Add >>>
                if (!this._remainTabSelectable)
                {
                    TMsgDisp.Show(
                        this,
                        emErrorLevel.ERR_LEVEL_INFO,
                        this.Name,
                        "残高一覧を表示するには、得意先コードまたは請求先コードを入力して下さい",
                        -1,
                        MessageBoxButtons.OK);
                    if (this.uExGroupBox_CommonCondition.Expanded)
                    {
                        this.tNedit_CustomerCode.Focus();
                        this.tNedit_CustomerCode.SelectAll();
                    }
                    return null;
                }
                // 2010/04/15 Add <<<
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                // 日付範囲チェック処理
                DateGetAcs.CheckDateRangeResult cdrResult;
                if (CheckDateRange(ref tDateEdit_rl_TargetYMSt, ref tDateEdit_rl_TargetYMEd, out cdrResult) == false)
                {
                    switch (cdrResult)
                    {
                        case DateGetAcs.CheckDateRangeResult.ErrorOfEndInvalid:
                        case DateGetAcs.CheckDateRangeResult.ErrorOfEndNoInput:
                            {
                                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                                    MSG_ED_YM_ERROR, -1, MessageBoxButtons.OK);
                                return tDateEdit_rl_TargetYMEd;
                            }
                        case DateGetAcs.CheckDateRangeResult.ErrorOfRangeOver:
                            {
                                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                                    MSG_MUST_BE_IN_A_YEAR, -1, MessageBoxButtons.OK);
                                return tDateEdit_rl_TargetYMSt;
                            }
                        case DateGetAcs.CheckDateRangeResult.ErrorOfReverse:
                            {
                                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                                    MSG_MUST_BE_CORRECT_CALENDER, -1, MessageBoxButtons.OK);
                                return tDateEdit_rl_TargetYMSt;
                            }
                        case DateGetAcs.CheckDateRangeResult.ErrorOfStartInvalid:
                        case DateGetAcs.CheckDateRangeResult.ErrorOfStartNoInput:
                            {
                                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                                    MSG_ST_YM_ERROR, -1, MessageBoxButtons.OK);
                                return tDateEdit_rl_TargetYMSt;
                            }
                    }
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD
                // ---ADD 2009/02/10 不具合対応[10651] ---------------------------------------------------------------------->>>>>
                #region パラメータセット
                //-----------------------
                // パラメータをセット
                //-----------------------

                // 企業コード
                this._custPrtPprBlnce.EnterpriseCode = this._enterpriseCode;

                // 拠点コード
                if (String.IsNullOrEmpty(this.tEdit_SectionCodeAllowZero.Text.Trim()) || this.tEdit_SectionCodeAllowZero.Text.Trim() == "00")
                {
                    this._custPrtPprBlnce.SectionCode = null;
                }
                else
                {
                    string[] sectionCode = new string[1];
                    sectionCode[0] = this.tEdit_SectionCodeAllowZero.Text.Trim();
                    this._custPrtPprBlnce.SectionCode = sectionCode;
                }

                // 得意先コード
                this._custPrtPprBlnce.CustomerCode = this.tNedit_CustomerCode.GetInt();

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 DEL
                //// 請求先コード
                //if (this.tNedit_ClaimCode.GetInt() == 0 && this.tNedit_CustomerCode.GetInt() > 0)
                //{
                //    // 得意先>0,請求先=0のとき、請求先コードは得意先マスタから取得
                //    int customerCode = this.tNedit_CustomerCode.GetInt();
                //    CustomerInfo customerInfo;
                //    status = this._customerInfoAcs.ReadDBData(this._enterpriseCode, customerCode, out customerInfo);

                //    if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                //    {
                //        this._custPrtPprBlnce.ClaimCode = customerInfo.ClaimCode;
                //    }
                //    else
                //    {
                //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                //        //return status;
                //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                //        return tNedit_CustomerCode;
                //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //    }
                //}
                //else
                //{
                //    this._custPrtPprBlnce.ClaimCode = this.tNedit_ClaimCode.GetInt();
                //}
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 ADD
                //this._custPrtPprBlnce.ClaimCode = this.tNedit_ClaimCode.GetInt();// DEL 2009/12/28
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 ADD

                this._custPrtPprBlnce.ClaimCode = this._prevInputValue.ClaimCode;// ADD 2009/12/28
                // 開始対象年月
                this._custPrtPprBlnce.St_AddUpYearMonth = this.tDateEdit_rl_TargetYMSt.GetDateTime();

                // 終了対象年月
                this._custPrtPprBlnce.Ed_AddUpYearMonth = this.tDateEdit_rl_TargetYMEd.GetDateTime();

                // ADD 2012/06/01 ----------------------->>>>>
                // 抽出拠点種別
                this._custPrtPprBlnce.RemainSectionType = Int32.Parse(this.tComboEditor_rl_RemainSectionType.SelectedItem.DataValue.ToString());
                // ADD 2012/06/01 -----------------------<<<<<

                #endregion

                // 検索条件比較(前回検索時から変更があるかどうか)
                if (CompareCustPrtPprBlnce(this._custPrtPprBlnce, this._custPrtPprBlnceBackUp,
                                            this.tComboEditor_rl_RemainType.SelectedItem.DataValue.ToString(), this._rl_RemainTypeBackup))
                {
                    #region フォーカス制御
                    uGrid_BalanceList.Focus();
                    if (uGrid_BalanceList.Rows.Count > 0 && uGrid_BalanceList.Rows[0].Cells.Count > 0)
                    {
                        //uGrid_BalanceList.Rows[0].Cells[0].Activate();
                        //uGrid_BalanceList.Rows[0].Cells[0].Selected = true;
                        uGrid_BalanceList.Rows[0].Activate();
                        //uGrid_BalanceList.Rows[0].Selected = true;
                    }
                    #endregion

                    return null;
                }
                // ---ADD 2009/02/10 不具合対応[10651] ----------------------------------------------------------------------<<<<<

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // クリア
                this._detailDataSet.BalanceTotal.Clear();

                SFCMN00299CA processingDialog = new SFCMN00299CA();
                try
                {
                    processingDialog.Title = "抽出処理";
                    processingDialog.Message = "現在、データ抽出中です。";
                    processingDialog.DispCancelButton = false;
                    processingDialog.Show((Form)this.Parent);
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                    /* ---DEL 2009/02/10 不具合対応[10651] ---------------------------------------------------------------------->>>>>
                    //-----------------------
                    // パラメータをセット
                    //-----------------------

                    // 企業コード
                    this._custPrtPprBlnce.EnterpriseCode = this._enterpriseCode;

                    // 拠点コード
                    if ( String.IsNullOrEmpty( this.tEdit_SectionCodeAllowZero.Text.Trim() ) || this.tEdit_SectionCodeAllowZero.Text.Trim() == "00" )
                    {
                        this._custPrtPprBlnce.SectionCode = null;
                    }
                    else
                    {
                        string[] sectionCode = new string[1];
                        sectionCode[0] = this.tEdit_SectionCodeAllowZero.Text.Trim();
                        this._custPrtPprBlnce.SectionCode = sectionCode;
                    }

                    // 得意先コード
                    this._custPrtPprBlnce.CustomerCode = this.tNedit_CustomerCode.GetInt();

                    // 請求先コード
                    if ( this.tNedit_ClaimCode.GetInt() == 0 && this.tNedit_CustomerCode.GetInt() > 0 )
                    {
                        // 得意先>0,請求先=0のとき、請求先コードは得意先マスタから取得
                        int customerCode = this.tNedit_CustomerCode.GetInt();
                        CustomerInfo customerInfo;
                        status = this._customerInfoAcs.ReadDBData( this._enterpriseCode, customerCode, out customerInfo );

                        if ( status == (int)ConstantManagement.DB_Status.ctDB_NORMAL )
                        {
                            this._custPrtPprBlnce.ClaimCode = customerInfo.ClaimCode;
                        }
                        else
                        {
                            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                            //return status;
                            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                            return tNedit_CustomerCode;
                            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        }
                    }
                    else
                    {
                        this._custPrtPprBlnce.ClaimCode = this.tNedit_ClaimCode.GetInt();
                    }

                    // 開始対象年月
                    this._custPrtPprBlnce.St_AddUpYearMonth = this.tDateEdit_rl_TargetYMSt.GetDateTime();

                    // 終了対象年月
                    this._custPrtPprBlnce.Ed_AddUpYearMonth = this.tDateEdit_rl_TargetYMEd.GetDateTime();
                       ---DEL 2009/02/10 不具合対応[10651] ----------------------------------------------------------------------<<<<< */
                    // 検索実行
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/03/04 DEL
                    //status = this._custPtrSearchAcs.SearchBalance( this._custPrtPprBlnce, Int32.Parse( this.tComboEditor_rl_RemainType.SelectedItem.DataValue.ToString() ) );
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/03/04 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/03/04 ADD
                    status = this._custPtrSearchAcs.SearchBalance(ref this._custPrtPprBlnce, Int32.Parse(this.tComboEditor_rl_RemainType.SelectedItem.DataValue.ToString()));
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/03/04 ADD

                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                }
                finally
                {
                    processingDialog.Dispose();
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 返り値が正常な場合はデータセットの中にデータがある
                if ((status == (int)ConstantManagement.DB_Status.ctDB_NOT_FOUND) ||
                        (status == (int)ConstantManagement.DB_Status.ctDB_EOF))
                {
                    // 条件に合うデータなし
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                        MSG_MATCHED_DATA_NOT_FOUND, -1, MessageBoxButtons.OK);

                    // ---ADD 2009/02/10 不具合対応[10651] -------------------------------------------------------->>>>>
                    //前回検索条件格納
                    this._custPrtPprBlnceBackUp = null;
                    this._rl_RemainTypeBackup = string.Empty;
                    // ---ADD 2009/02/10 不具合対応[10651] --------------------------------------------------------<<<<<
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                    //return status;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                    return null;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                }
                else if (status != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                {
                    // それ以外のステータス
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                        MSG_FAILED2GET_BALANCE_DATA, status, MessageBoxButtons.OK);
                    // ---ADD 2009/02/10 不具合対応[10651] -------------------------------------------------------->>>>>
                    //前回検索条件格納
                    this._custPrtPprBlnceBackUp = null;
                    this._rl_RemainTypeBackup = string.Empty;
                    // ---ADD 2009/02/10 不具合対応[10651] --------------------------------------------------------<<<<<
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                    //return status;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                    return null;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                }

                #endregion // 残高一覧取得

                // ---ADD 2009/02/10 不具合対応[10651] -------------------------------------------------------->>>>>
                //前回検索条件格納
                this._custPrtPprBlnceBackUp = this._custPrtPprBlnce.Clone();
                this._rl_RemainTypeBackup = this.tComboEditor_rl_RemainType.SelectedItem.DataValue.ToString();
                // ---ADD 2009/02/10 不具合対応[10651] --------------------------------------------------------<<<<<
            }
            else
            {
                //-----ADD 2010/12/20------>>>>>
                bool beRedSlipBottonFlag = this._redSlipBottonFlag;
                //-----ADD 2010/12/20------<<<<<
                // --- ADD m.suzuki 2010/07/20 ---------->>>>>
                this._redSlipBottonFlag = false;
                // --- ADD m.suzuki 2010/07/20 ----------<<<<<

                #region 売上一覧取得

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // 必須入力チェック
                if (!CheckItemValues(out errorControl)) return errorControl;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // ---ADD 2009/02/10 不具合対応[10651] --------------------------->>>>>
                // 画面上の項目からパラメータを作成
                if (!SetDisplay2SearchConditionClass())
                {
                    return null;
                }

                this._logicalDelDiv = (int)tComboEditor_DeleteFlag.SelectedItem.DataValue;
                //-----ADD 2010/12/20------>>>>>
                if (!_clearFlg)
                {
                    //-----ADD 2010/12/20------<<<<<
                    // 検索条件比較(前回検索時から変更があるかどうか)
                    if (CompareCustPrtPpr(this._custPrtPpr, this._custPrtPprBackUp))
                    {
                        #region フォーカス制御
                        switch (this._selectedMainTabKey)
                        {
                            case "uTab_SlipList":
                                {
                                    // 伝票表示グリッドタブ
                                    uGrid_Slip.Focus();
                                    if (uGrid_Slip.Rows.Count > 0 && uGrid_Slip.Rows[0].Cells.Count > 0)
                                    {
                                        uGrid_Slip.Rows[0].Cells[0].Activate();
                                        uGrid_Slip.Rows[0].Cells[0].Selected = true;
                                    }
                                    if (uGrid_Detail.Rows.Count > 0 && uGrid_Detail.Rows[0].Cells.Count > 0)
                                    {
                                        uGrid_Detail.Rows[0].Cells[0].Activate();
                                        uGrid_Detail.Rows[0].Cells[0].Selected = true;
                                    }
                                }
                                break;
                            case "uTab_SlipDetail":
                                {
                                    // 明細表示グリッドタブ
                                    uGrid_Detail.Focus();
                                    if (uGrid_Slip.Rows.Count > 0 && uGrid_Slip.Rows[0].Cells.Count > 0)
                                    {
                                        uGrid_Slip.Rows[0].Cells[0].Activate();
                                        uGrid_Slip.Rows[0].Cells[0].Selected = true;
                                    }
                                    if (uGrid_Detail.Rows.Count > 0 && uGrid_Detail.Rows[0].Cells.Count > 0)
                                    {
                                        uGrid_Detail.Rows[0].Cells[0].Activate();
                                        uGrid_Detail.Rows[0].Cells[0].Selected = true;
                                    }
                                }
                                break;
                            case "uTab_RedSlip":
                                {
                                    // 赤伝タブ
                                    tComboEditor_rs_SalesSlipCd.Focus();
                                }
                                break;
                        }
                        #endregion

                        //-----ADD 2010/12/20------>>>>>
                        this._redSlipBottonFlag = beRedSlipBottonFlag;
                        //-----ADD 2010/12/20------<<<<<
                        return null;
                    }
                    else
                    {
                        // ----ADD 2010/12/20 ------->>>>>
                        // 検索ボタンをクリックの場合、選択されたのデータをclear
                        if (this._selectedMainTabKey != "uTab_RemainList")
                        {
                            this._selectedSlipNoCd = string.Empty;
                            slipCd = string.Empty;
                            tEdit_rs_SlipNoteCar.Text = string.Empty;
                            tNedit_Mileage.Clear();
                            this.uLabel_rs_SlipNoteCarTitle.Visible = false;
                            this.tEdit_rs_SlipNoteCar.Visible = false;
                            this.uButton_rs_SlipNoteCar.Visible = false;
                            this.uLabel_rs_MileageTitle.Visible = false;
                            this.tNedit_Mileage.Visible = false;
                            this.uLabel_rs_Km.Visible = false;
                            _showFlg = false;
                            carMngLt.Clear();
                            slipNumLt.Clear();
                            this._selectedRowCountDetail = 0;
                        }
                        // ----ADD 2010/12/20 -------<<<<<
                    }
                    this._logicalDelDivBackUp = this._logicalDelDiv;
                    //-----ADD 2010/12/20------>>>>>
                }
                else
                {
                    _clearFlg = false;
                }
                //-----ADD 2010/12/20------<<<<<

                // ---ADD 2009/02/10 不具合対応[10651] ---------------------------<<<<<

                // データセットをクリア
                this._detailDataSet.SalesList.Clear();
                this._detailDataSet.SalesDetail.Clear();
                this._detailDataSet.BalanceTotal.Clear();
                // ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
                // 残高集計情報削除
                this.BalanceClear();
                isFirstBalance = true;  // ADD wangf 2013/02/16 FOR Redmine#34513
                // ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
                this._detailDataSet.RedSlipDetail.Clear();
                _redSlipTotalPrice = 0;
                _redSlipStockPrice = 0;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD

                // 行選択ボタンOFF
                this.tToolbarsManager.Tools["ButtonTool_RowSelect"].SharedProps.Enabled = false;

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                //// 必須項目チェック
                ////if (!checkItemValues(false)) return -1;     // 警告メッセージ出さない
                //if (!checkItemValues(true)) return -1;    // 警告メッセージ出す
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
                //SFCMN00299CA processingDialog = new SFCMN00299CA();
                _processingDialog = new SFCMN00299CA();
                SFCMN00299CA processingDialog = _processingDialog;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD
                try
                {
                    processingDialog.Title = "抽出処理";
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
                    //processingDialog.Message = "現在、データ抽出中です。";
                    processingDialog.Message = "現在、データ抽出中です。(ESCで中断します)";
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD

                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
                    //processingDialog.DispCancelButton = false;
                    processingDialog.DispCancelButton = true;
                    processingDialog.CancelButtonClick += new EventHandler(processingDialog_CancelButtonClick);
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD
                    processingDialog.Show((Form)this.Parent);
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                    /* ---DEL 2009/02/10 不具合対応[10651] ------------------------------->>>>>
                    // 画面上の項目からパラメータを作成
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                    //if ( !SetDisplay2SearchConditionClass() ) return -1;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                    if ( !SetDisplay2SearchConditionClass() ) return null;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                       ---DEL 2009/02/10 不具合対応[10651] -------------------------------<<<<< */

                    // パラメータクラスを使って検索開始
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
                    //status = this._custPtrSearchAcs.Search( this._custPrtPpr, this._logicalDelDiv );
                    if (_custPtrSearchAcs.ExtractCancelFlag == false)
                    {
                        status = this._custPtrSearchAcs.Search(this._custPrtPpr, this._logicalDelDiv, out dataCount);
                    }
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD

                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD

                    this.Activate(); // ADD BY zhujw 2014/06/11 RedMine#42650 Windows8.1動作検証結果_得意先電子元帳から起動した他機能が前面表示される 修正
                }
                finally
                {
                    processingDialog.Dispose();
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 DEL
                //// 返り値が正常な場合はデータセットの中にデータがある
                //if ((status == (int)ConstantManagement.DB_Status.ctDB_NOT_FOUND) ||
                //        (status == (int)ConstantManagement.DB_Status.ctDB_EOF))
                //{
                //    // 条件に合うデータなし
                //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                //        MSG_MATCHED_DATA_NOT_FOUND, -1, MessageBoxButtons.OK);
                //    // ---ADD 2009/02/10 不具合対応[10651] ----------------------------->>>>>
                //    //前回検索条件格納
                //    this._custPrtPprBackUp = null;
                //    this._logicalDelDivBackUp = -1;
                //    // ---ADD 2009/02/10 不具合対応[10651] -----------------------------<<<<<
                //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 DEL
                //    //// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                //    ////return status;
                //    //// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                //    //// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                //    //return null;
                //    //// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 DEL
                //}
                //else if (status != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                //{
                //    // それ以外のステータス
                //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                //        MSG_FAILED2GET_SLIP_DATA, status, MessageBoxButtons.OK);
                //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 DEL
                //    //// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                //    ////return status;
                //    //// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                //    //// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                //    //return null;
                //    //// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 DEL
                //}
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 DEL

                // 全てのグリッドの背景色を調整
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
                //RowColorChangeAll( false, 0 );
                //RowColorChangeAll( false, 1 );
                SetGridCheckBoxEnabled();
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD
                RowColorChangeAll_SlipType(false, this.uGrid_Slip.Rows, 0);
                RowColorChangeAll_SlipType(false, this.uGrid_Detail.Rows, 1);

                // 行選択ボタンON
                this.tToolbarsManager.Tools["ButtonTool_RowSelect"].SharedProps.Enabled = true;

                // 残高表示のデータテーブルからUIへ
                // ただし、残高表示データが複数返ってきた場合は出さない（得意先未設定の場合など）
                // 1件特定できた場合のみ表示
                if (this._detailDataSet.BalanceTotal.Rows.Count == 1)
                {
					// ------------DEL wangf 2013/01/30 FOR Redmine#34513--------->>>>
					//// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/23 ADD
					//if ((bool)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ExistsTotalColumn] == true)
					//{
					//    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/23 ADD
					//    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/23 DEL
					//    # region // DEL
					//    //// 前々々回残高
					//    //this.uLabel_AcpOdrTtl2TmBfBlDmd.Text = ((long)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.AcpOdrTtl2TmBfBlDmdColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //// 前々回残高
					//    //this.uLabel_LastTimeDemand.Text = ((long)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.LastTimeDemandColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //// 前回残高
					//    //this.uLabel_AfCalDemandPrice.Text = ((long)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.AfCalDemandPriceColumn.ColumnName]).ToString("#,###;-#,###;");

					//    //// 今回売上
					//    //this.uLabel_ThisSalesPriceTotal.Text = (Double.Parse(this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ThisSalesPriceTotalColumn.ColumnName].ToString())).ToString("#,###;-#,###;");
					//    //// 消費税(売)
					//    //this.uLabel_OfsThisSalesTax.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.OfsThisSalesTaxColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //// 今回入金
					//    //this.uLabel_ThisTimeDmdNrml.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ThisTimeDmdNrmlColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //// 請求残高
					//    //this.uLabel_AfCalBlc.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.AfCalBlcColumn.ColumnName]).ToString("#,###;-#,###;");

					//    //// 請求範囲
					//    //this.uLabel_AddUpYearMonth.Text = this._prevTotalDay.ToString("yyyy年MM月dd日") + "～" + this.tDateEdit_SalesDateEd.GetDateTime().ToString("yyyy年MM月dd日");
					//    //// 税転嫁方式
					//    //string consTaxLayMethod = this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ConsTaxLayMethodColumn.ColumnName].ToString();
					//    //switch (consTaxLayMethod)
					//    //{
					//    //    case "0": this.uLabel_ConsTaxLayMethod.Text = "伝票単位"; break;
					//    //    case "1": this.uLabel_ConsTaxLayMethod.Text = "明細単位"; break;
					//    //    case "2": this.uLabel_ConsTaxLayMethod.Text = "請求親"; break;
					//    //    case "3": this.uLabel_ConsTaxLayMethod.Text = "請求子"; break;
					//    //    case "9": this.uLabel_ConsTaxLayMethod.Text = "非課税"; break;
					//    //    default: this.uLabel_ConsTaxLayMethod.Text = ""; break;
					//    //}

					//    ////--------------------
					//    //// 合計タブ
					//    ////--------------------
					//    //// 標準価格
					//    //this.uLabel_StandardPrice_Total.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.StandardPrice_TotalColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //this.uLabel_StandardPrice_Avg.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.StandardPrice_AvgColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //// 売上金額
					//    //this.uLabel_SoldAmount_Total.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.SoldAmount_TotalColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //this.uLabel_SoldAmount_Avg.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.SoldAmount_AvgColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //// 原価
					//    //this.uLabel_Cost_Total.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.Cost_TotalColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //this.uLabel_Cost_Avg.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.Cost_AvgColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //// 粗利
					//    //this.uLabel_GrossProfitAmount_Total.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.GrossProfitAmount_TotalColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //this.uLabel_GrossProfitAmount_Avg.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.GrossProfitAmount_AvgColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //// 粗利率
					//    //this.uLabel_GrossProfitPercentage.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.GrossProfitPercentageColumn.ColumnName]).ToString("#,###;-#,###;") + "%";
					//    //// 伝票枚数
					//    //this.uLabel_SlipCount.Text = ((int)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.SlipCountColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //// 明細数
					//    //this.uLabel_DetailCount.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.DetailCountColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //// 数量
					//    //this.uLabel_Amount.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.AmountColumn.ColumnName]).ToString("#,###;-#,###;");
					//    //// 消費税
					//    //this.uLabel_ConsumeTaxAmount.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ConsumeTaxAmountColumn.ColumnName]).ToString("#,###;-#,###;");
					//    # endregion
					//    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/23 DEL
					//    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/23 ADD


					//    // 税転嫁方式区分
					//    string consTaxLayMethod = this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ConsTaxLayMethodColumn.ColumnName].ToString();

					//    if ((bool)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.IsParentColumn.ColumnName])
					//    {
					//        //----------------------------------
					//        // 親の場合
					//        //----------------------------------
					//        // 前々々回残高
					//        this.uLabel_AcpOdrTtl2TmBfBlDmd.Text = ((long)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.AcpOdrTtl2TmBfBlDmdColumn.ColumnName]).ToString("#,##0;-#,##0;");
					//        // 前々回残高
					//        this.uLabel_LastTimeDemand.Text = ((long)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.LastTimeDemandColumn.ColumnName]).ToString("#,##0;-#,##0;");
					//        // 前回残高
					//        this.uLabel_AfCalDemandPrice.Text = ((long)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.AfCalDemandPriceColumn.ColumnName]).ToString("#,##0;-#,##0;");

					//        // 今回売上
					//        this.uLabel_ThisSalesPriceTotal.Text = (Double.Parse(this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ThisSalesPriceTotalColumn.ColumnName].ToString())).ToString("#,##0;-#,##0;");
					//        // 消費税(売)
					//        this.uLabel_OfsThisSalesTax.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.OfsThisSalesTaxColumn.ColumnName]).ToString("#,##0;-#,##0;");
					//        // 今回入金
					//        this.uLabel_ThisTimeDmdNrml.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ThisTimeDmdNrmlColumn.ColumnName]).ToString("#,##0;-#,##0;");
					//        // 請求残高
					//        this.uLabel_AfCalBlc.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.AfCalBlcColumn.ColumnName]).ToString("#,##0;-#,##0;");
					//    }
					//    else
					//    {
					//        //----------------------------------
					//        // 子の場合
					//        //----------------------------------
					//        // 前々々回残高
					//        this.uLabel_AcpOdrTtl2TmBfBlDmd.Text = string.Empty;
					//        // 前々回残高
					//        this.uLabel_LastTimeDemand.Text = string.Empty;
					//        // 前回残高
					//        this.uLabel_AfCalDemandPrice.Text = string.Empty;

					//        // 今回売上
					//        this.uLabel_ThisSalesPriceTotal.Text = (Double.Parse(this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ThisSalesPriceTotalColumn.ColumnName].ToString())).ToString("#,##0;-#,##0;");
					//        // 消費税(売)
					//        this.uLabel_OfsThisSalesTax.Text = string.Empty;
					//        // 今回入金
					//        this.uLabel_ThisTimeDmdNrml.Text = string.Empty;
					//        // 請求残高
					//        this.uLabel_AfCalBlc.Text = string.Empty;
					//    }

					//    // 請求範囲
					//    string addUpYearMonthText = string.Empty;
					//    DateTime stDate = (DateTime)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.DmdStDayColumn.ColumnName];
					//    DateTime edDate = (DateTime)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.TotalDayColumn.ColumnName];

					//    if (stDate != DateTime.MinValue)
					//    {
					//        addUpYearMonthText += stDate.ToString("yyyy年MM月dd日");
					//    }
					//    else
					//    {
					//        addUpYearMonthText += new string(' ', 14);
					//    }
					//    addUpYearMonthText += "～";
					//    if (edDate != DateTime.MinValue)
					//    {
					//        addUpYearMonthText += edDate.ToString("yyyy年MM月dd日");
					//    }
					//    this.uLabel_AddUpYearMonth.Text = addUpYearMonthText;


					//    // 税転嫁方式
					//    switch (consTaxLayMethod)
					//    {
					//        case "0": this.uLabel_ConsTaxLayMethod.Text = "伝票単位"; break;
					//        case "1": this.uLabel_ConsTaxLayMethod.Text = "明細単位"; break;
					//        case "2": this.uLabel_ConsTaxLayMethod.Text = "請求親"; break;
					//        case "3": this.uLabel_ConsTaxLayMethod.Text = "請求子"; break;
					//        case "9": this.uLabel_ConsTaxLayMethod.Text = "非課税"; break;
					//        default: this.uLabel_ConsTaxLayMethod.Text = ""; break;
					//    }
					//    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/23 ADD

					//    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/23 ADD
					//}
					//else
					//{
					//    // 空白表示

					//    // 前々々回残高
					//    this.uLabel_AcpOdrTtl2TmBfBlDmd.Text = string.Empty;
					//    // 前々回残高
					//    this.uLabel_LastTimeDemand.Text = string.Empty;
					//    // 前回残高
					//    this.uLabel_AfCalDemandPrice.Text = string.Empty;
					//    // 今回売上
					//    this.uLabel_ThisSalesPriceTotal.Text = string.Empty;
					//    // 消費税(売)
					//    this.uLabel_OfsThisSalesTax.Text = string.Empty;
					//    // 今回入金
					//    this.uLabel_ThisTimeDmdNrml.Text = string.Empty;
					//    // 請求残高
					//    this.uLabel_AfCalBlc.Text = string.Empty;
					//    // 請求範囲
					//    this.uLabel_AddUpYearMonth.Text = string.Empty;
					//    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/20 ADD
					//    // 税転嫁方式
					//    this.uLabel_ConsTaxLayMethod.Text = string.Empty;
					//    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/20 ADD
					//}
					// ------------DEL wangf 2013/01/30 FOR Redmine#34513---------<<<<

                    //--------------------
                    // 合計タブ
                    //--------------------
                    // 標準価格
                    this.uLabel_StandardPrice_Total.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.StandardPrice_TotalColumn.ColumnName]).ToString("#,##0;-#,##0;");
                    this.uLabel_StandardPrice_Avg.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.StandardPrice_AvgColumn.ColumnName]).ToString("#,##0;-#,##0;");
                    // 売上金額
                    // ---------UPD 2010/08/05-------->>>>>
                    // ---------UPD 2010/09/01-------->>>>>
                    this.uLabel_SoldAmount_Total.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.SoldAmount_TotalColumn.ColumnName]).ToString("#,##0;-#,##0;");
                    this.uLabel_SoldAmount_Avg.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.SoldAmount_AvgColumn.ColumnName]).ToString("#,##0;-#,##0;");
                    //if (this._pointDspDivCd)
                    //{
                    //    // 小数点表示区分：する
                    //    this.uLabel_SoldAmount_Total.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.SoldAmount_TotalColumn.ColumnName]).ToString("#,##0.00;-#,##0.00;");
                    //    this.uLabel_SoldAmount_Avg.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.SoldAmount_AvgColumn.ColumnName]).ToString("#,##0.00;-#,##0.00;");
                    //}
                    //else
                    //{
                    //    // 小数点表示区分：しない
                    //    this.uLabel_SoldAmount_Total.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.SoldAmount_TotalColumn.ColumnName]).ToString("#,##0;-#,##0;");
                    //    this.uLabel_SoldAmount_Avg.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.SoldAmount_AvgColumn.ColumnName]).ToString("#,##0;-#,##0;");
                    //}
                    // ---------UPD 2010/09/01--------<<<<<
                    // ---------UPD 2010/08/05--------<<<<<
                    // 原価
                    // ---------UPD 2010/08/31-------->>>>>
                    //this.uLabel_Cost_Total.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.Cost_TotalColumn.ColumnName]).ToString( "#,##0;-#,##0;" );
                    //this.uLabel_Cost_Avg.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.Cost_AvgColumn.ColumnName]).ToString( "#,##0;-#,##0;" );
                    this.uLabel_Cost_Total.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.Cost_TotalColumn.ColumnName]).ToString("#,##0.00;-#,##0.00;");
                    this.uLabel_Cost_Avg.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.Cost_AvgColumn.ColumnName]).ToString("#,##0.00;-#,##0.00;");
                    // ---------UPD 2010/08/31--------<<<<<
                    // 粗利
                    this.uLabel_GrossProfitAmount_Total.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.GrossProfitAmount_TotalColumn.ColumnName]).ToString("#,##0;-#,##0;");
                    this.uLabel_GrossProfitAmount_Avg.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.GrossProfitAmount_AvgColumn.ColumnName]).ToString("#,##0;-#,##0;");
                    // 粗利率
                    this.uLabel_GrossProfitPercentage.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.GrossProfitPercentageColumn.ColumnName]).ToString("#,##0;-#,##0;") + "%";
                    // 伝票枚数
                    this.uLabel_SlipCount.Text = ((int)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.SlipCountColumn.ColumnName]).ToString("#,##0;-#,##0;");
                    // 明細数
                    this.uLabel_DetailCount.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.DetailCountColumn.ColumnName]).ToString("#,##0;-#,##0;");
                    // 数量
                    // ---------UPD 2010/08/31-------->>>>>
                    //this.uLabel_Amount.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.AmountColumn.ColumnName]).ToString( "#,##0.00;-#,##0.00;" ); // m.suzuki 2009.03.04 #,##0→#,##0.00
                    if (this._pointDspDivCd)
                    {
                        // 小数点表示区分：する
                        this.uLabel_Amount.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.AmountColumn.ColumnName]).ToString("#,##0.00;-#,##0.00;");
                    }
                    else
                    {
                        // 小数点表示区分：しない
                        this.uLabel_Amount.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.AmountColumn.ColumnName]).ToString("#,##0;-#,##0;");
                    }
                    // ---------UPD 2010/08/31--------<<<<<
                    // 消費税
                    this.uLabel_ConsumeTaxAmount.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ConsumeTaxAmountColumn.ColumnName]).ToString("#,##0;-#,##0;");
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/23 ADD

                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/29 DEL
                    //this.uExGroupBox_BalanceChart.Expanded = true;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/29 DEL
                }
                else
                {
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/23 ADD
                    // 該当データなし時は空白表示

                    // 前々々回残高
                    this.uLabel_AcpOdrTtl2TmBfBlDmd.Text = string.Empty;
                    // 前々回残高
                    this.uLabel_LastTimeDemand.Text = string.Empty;
                    // 前回残高
                    this.uLabel_AfCalDemandPrice.Text = string.Empty;
                    // 今回売上
                    this.uLabel_ThisSalesPriceTotal.Text = string.Empty;
                    // 消費税(売)
                    this.uLabel_OfsThisSalesTax.Text = string.Empty;
                    // 今回入金
                    this.uLabel_ThisTimeDmdNrml.Text = string.Empty;
                    // 請求残高
                    this.uLabel_AfCalBlc.Text = string.Empty;
                    // 請求範囲
                    this.uLabel_AddUpYearMonth.Text = string.Empty;
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/20 ADD
                    // 税転嫁方式
                    uLabel_ConsTaxLayMethod.Text = string.Empty;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/20 ADD


                    // 標準価格
                    this.uLabel_StandardPrice_Total.Text = string.Empty;
                    this.uLabel_StandardPrice_Avg.Text = string.Empty;
                    // 売上金額
                    this.uLabel_SoldAmount_Total.Text = string.Empty;
                    this.uLabel_SoldAmount_Avg.Text = string.Empty;
                    // 原価
                    this.uLabel_Cost_Total.Text = string.Empty;
                    this.uLabel_Cost_Avg.Text = string.Empty;
                    // 粗利
                    this.uLabel_GrossProfitAmount_Total.Text = string.Empty;
                    this.uLabel_GrossProfitAmount_Avg.Text = string.Empty;
                    // 粗利率
                    this.uLabel_GrossProfitPercentage.Text = string.Empty;
                    // 伝票枚数
                    this.uLabel_SlipCount.Text = string.Empty;
                    // 明細数
                    this.uLabel_DetailCount.Text = string.Empty;
                    // 数量
                    this.uLabel_Amount.Text = string.Empty;
                    // 消費税
                    this.uLabel_ConsumeTaxAmount.Text = string.Empty;

                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/23 ADD

                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/23 DEL
                    //this.uExGroupBox_BalanceChart.Expanded = false;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/23 DEL
                }


                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 ADD
                // 返り値が正常な場合はデータセットの中にデータがある
                if ((status == (int)ConstantManagement.DB_Status.ctDB_NOT_FOUND) ||
                        (status == (int)ConstantManagement.DB_Status.ctDB_EOF))
                {
                    // 条件に合うデータなし
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                        MSG_MATCHED_DATA_NOT_FOUND, -1, MessageBoxButtons.OK);
                    //前回検索条件格納
                    this._custPrtPprBackUp = null;
                    this._logicalDelDivBackUp = -1;
                    // -----ADD 2010/12/20 ----->>>>>
                    _clearFlg = true;
                    // -----ADD 2010/12/20 -----<<<<<
                }
                // --- ADD m.suzuki 2010/07/21 ---------->>>>>
                else if (status == (int)ConstantManagement.DB_Status.ctDB_ERROR)
                {
                    // エラー発生(残高抽出時にタイムアウト発生した場合など)
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                        MSG_EXTRACT_DATA_ERROR, -1, MessageBoxButtons.OK);
                    //前回検索条件格納
                    this._custPrtPprBackUp = null;
                    this._logicalDelDivBackUp = -1;
                }
                // --- ADD m.suzuki 2010/07/21 ----------<<<<<
                else if (status != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                {
                    // それ以外のステータス
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                        MSG_FAILED2GET_SLIP_DATA, status, MessageBoxButtons.OK);
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/15 ADD
                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                {
                    switch (this._selectedMainTabKey)
                    {
                        case "uTab_SlipList":
                            {
                                // 伝票表示グリッドタブ
                                uGrid_Slip.Focus();
                                if (uGrid_Slip.Rows.Count > 0 && uGrid_Slip.Rows[0].Cells.Count > 0)
                                {
                                    uGrid_Slip.Rows[0].Cells[0].Activate();
                                    uGrid_Slip.Rows[0].Cells[0].Selected = true;
                                }
                                if (uGrid_Detail.Rows.Count > 0 && uGrid_Detail.Rows[0].Cells.Count > 0)
                                {
                                    uGrid_Detail.Rows[0].Cells[0].Activate();
                                    uGrid_Detail.Rows[0].Cells[0].Selected = true;
                                }
                            }
                            break;
                        case "uTab_SlipDetail":
                            {
                                // 明細表示グリッドタブ
                                uGrid_Detail.Focus();
                                if (uGrid_Slip.Rows.Count > 0 && uGrid_Slip.Rows[0].Cells.Count > 0)
                                {
                                    uGrid_Slip.Rows[0].Cells[0].Activate();
                                    uGrid_Slip.Rows[0].Cells[0].Selected = true;
                                }
                                if (uGrid_Detail.Rows.Count > 0 && uGrid_Detail.Rows[0].Cells.Count > 0)
                                {
                                    uGrid_Detail.Rows[0].Cells[0].Activate();
                                    uGrid_Detail.Rows[0].Cells[0].Selected = true;
                                }
                            }
                            break;
                        case "uTab_RedSlip":
                            {
                                // 赤伝タブ
                                tComboEditor_rs_SalesSlipCd.Focus();
                            }
                            break;
                    }
                    //----------- ADD 2009/11/25 ---------->>>>>
                    if (uGrid_Slip.Rows.Count > 0 && uGrid_Detail.Rows.Count > 0)
                    {
                        if (this.tNedit_CustomerCode.GetInt() != 0 && !this.tEdit_SectionCodeAllowZero.Value.Equals("00"))
                        {
                            this._redSlipBottonFlag = true;
                        }
                    }
                    //----------- ADD 2009/11/25 ----------<<<<<

                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/15 ADD

                #endregion // 売上一覧取得
                // ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
                if (0 != this.tNedit_CustomerCode.GetInt())
                {
                    this._prevInputValue.SectionCodeBalance = this.tEdit_SectionCodeAllowZero.Text.Trim();
                    this._prevInputValue.CustomerCodeBalance = this.tNedit_CustomerCode.GetInt();
                    this._prevInputValue.SalesDateSt = this.tDateEdit_SalesDateSt.GetDateTime();
                    this._prevInputValue.SalesDateEd = this.tDateEdit_SalesDateEd.GetDateTime();
                    // 詳細グリッド検索の場合、「残高集計」ボタンは操作可
                    this.uButton_Balance.Enabled = true;
                }
                // ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<
                // ------------ADD wangf 2013/02/16 FOR Redmine#34513--------->>>>
                else
                {
                    this._prevInputValue.SectionCodeBalance = this.tEdit_SectionCodeAllowZero.Text.Trim();
                    this._prevInputValue.CustomerCodeBalance = this.tNedit_CustomerCode.GetInt();
                    this._prevInputValue.SalesDateSt = this.tDateEdit_SalesDateSt.GetDateTime();
                    this._prevInputValue.SalesDateEd = this.tDateEdit_SalesDateEd.GetDateTime();
                    // 詳細グリッド検索の場合、「残高集計」ボタンは操作不可
                    this.uButton_Balance.Enabled = false;
                }
                // ------------ADD wangf 2013/02/16 FOR Redmine#34513---------<<<<
                // ---ADD 2009/02/10 不具合対応[10651] ----------------------------->>>>>
                //前回検索条件格納
                this._custPrtPprBackUp = this._custPrtPpr.Clone();
                this._logicalDelDivBackUp = this._logicalDelDiv;
                // ---ADD 2009/02/10 不具合対応[10651] -----------------------------<<<<<
            }

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/15 ADD
            // グリッドフィルタ解除 (検索結果が更新された時、紛らわしい為)
            // ---DEL 2010/09/01 ----------------------------->>>>>
            //uGrid_Slip.DisplayLayout.Bands[0].ColumnFilters.ClearAllFilters();
            //uGrid_Detail.DisplayLayout.Bands[0].ColumnFilters.ClearAllFilters();
            //uGrid_RedSlip.DisplayLayout.Bands[0].ColumnFilters.ClearAllFilters();
            //uGrid_BalanceList.DisplayLayout.Bands[0].ColumnFilters.ClearAllFilters();
            // ---DEL 2010/09/01 -----------------------------<<<<<
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/15 ADD

            if (this._selectedMainTabKey == "uTab_SlipList") adjustButtonEnable(0);
            else if (this._selectedMainTabKey == "uTab_SlipDetail") adjustButtonEnable(1);
            else if (this._selectedMainTabKey == "uTab_RedSlip") adjustButtonEnable(2);
            else if (this._selectedMainTabKey == "uTab_RemainList") adjustButtonEnable(3);

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 ADD
            if (_custPtrSearchAcs.ExtractCancelFlag == true)
            {
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                    "処理を中断しました。",
                    status, MessageBoxButtons.OK);
                // -----ADD 2010/12/20 ----->>>>>
                _clearFlg = true;
                // -----ADD 2010/12/20 -----<<<<<
            }
            else if (dataCount > DATA_COUNT_MAX)
            {
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                    string.Format("データ件数が{0:#,##0}件を超えました。", DATA_COUNT_MAX),
                    status, MessageBoxButtons.OK);
            }
            _custPtrSearchAcs.ExtractCancelFlag = false;

            // -----ADD 2010/12/20 ----->>>>>
            if (_clearFlg)
            {
                //前回検索条件格納
                this._custPrtPprBackUp = null;
                this._logicalDelDivBackUp = -1;
                return this.tEdit_SectionCodeAllowZero;
            }
            // -----ADD 2010/12/20 -----<<<<<
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 ADD

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
            //return status;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            return null;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
        }

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 ADD
        /// <summary>
        /// 中断ボタン押下
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void processingDialog_CancelButtonClick(object sender, EventArgs e)
        {
            // 抽出キャンセル
            CancelExtract();
        }
        /// <summary>
        /// 抽出キャンセル
        /// </summary>
        private void CancelExtract()
        {
            // 抽出キャンセル
            _custPtrSearchAcs.ExtractCancelFlag = true;
            if (_processingDialog != null)
            {
                _processingDialog.Message = "中断します。";
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 ADD

        // ---ADD 2009/02/10 不具合対応[10651] ---------------------------------------------------->>>>>
        /// <summary>
        /// 入力値比較
        /// </summary>
        /// <param name="custPrtPpr1">前回入力値</param>
        /// <param name="custPrtPpr2">今回入力値</param>
        /// <returns>True：変更なし、False：変更あり</returns>
        private bool CompareCustPrtPpr(CustPrtPpr custPrtPpr, CustPrtPpr custPrtPprBackUp)
        {
            if (custPrtPprBackUp == null)
            {
                return false;
            }

            // 削除指定区分
            if (this._logicalDelDiv.Equals(this._logicalDelDivBackUp) == false)
            {
                return false;
            }

            ArrayList arrayList = custPrtPpr.Compare(custPrtPprBackUp);

            // 配列以外の比較
            for (int i = 0; i <= arrayList.Count - 1; i++)
            {
                if ((arrayList[i].ToString() != "SectionCode") &&           //拠点コード
                    (arrayList[i].ToString() != "AcptAnOdrStatus") &&       //受注ステータス
                    (arrayList[i].ToString() != "SalesSlipCd"))             //売上伝票区分
                {
                    return false;
                }
            }

            // 配列の比較(拠点コード)
            if (arrayList.Contains("SectionCode") == true)
            {
                if ((custPrtPpr.SectionCode == null) || (custPrtPprBackUp.SectionCode == null))
                {
                    return false;
                }
                if (custPrtPpr.SectionCode.Length != custPrtPprBackUp.SectionCode.Length)
                {
                    return false;
                }
                for (int i = 0; i <= custPrtPpr.SectionCode.Length - 1; i++)
                {
                    if (custPrtPpr.SectionCode[i].Equals(custPrtPprBackUp.SectionCode[i]) == false)
                    {
                        return false;
                    }
                }
            }
            // 配列の比較(受注ステータス)
            if (arrayList.Contains("AcptAnOdrStatus") == true)
            {
                if ((custPrtPpr.AcptAnOdrStatus == null) || (custPrtPprBackUp.AcptAnOdrStatus == null))
                {
                    return false;
                }
                if (custPrtPpr.AcptAnOdrStatus.Length != custPrtPprBackUp.AcptAnOdrStatus.Length)
                {
                    return false;
                }
                for (int i = 0; i <= custPrtPpr.AcptAnOdrStatus.Length - 1; i++)
                {
                    if (custPrtPpr.AcptAnOdrStatus[i].Equals(custPrtPprBackUp.AcptAnOdrStatus[i]) == false)
                    {
                        return false;
                    }
                }
            }
            // 配列の比較(売上伝票区分)
            if (arrayList.Contains("SalesSlipCd") == true)
            {
                if ((custPrtPpr.SalesSlipCd == null) || (custPrtPprBackUp.SalesSlipCd == null))
                {
                    return false;
                }
                if (custPrtPpr.SalesSlipCd.Length != custPrtPprBackUp.SalesSlipCd.Length)
                {
                    return false;
                }
                for (int i = 0; i <= custPrtPpr.SalesSlipCd.Length - 1; i++)
                {
                    if (custPrtPpr.SalesSlipCd[i].Equals(custPrtPprBackUp.SalesSlipCd[i]) == false)
                    {
                        return false;
                    }
                }
            }

            return true;
        }

        /// <summary>
        /// 入力値比較
        /// </summary>
        /// <param name="custPrtPprBlnce"></param>
        /// <param name="custPrtPprBlnceBackUp"></param>
        /// <param name="rl_RemainType"></param>
        /// <param name="rl_RemainTypeBackup"></param>
        /// <returns></returns>
        private bool CompareCustPrtPprBlnce(CustPrtPprBlnce custPrtPprBlnce, CustPrtPprBlnce custPrtPprBlnceBackUp, string rl_RemainType, string rl_RemainTypeBackup)
        {
            if (custPrtPprBlnceBackUp == null)
            {
                return false;
            }

            // 残高種別の比較
            if (rl_RemainType.Equals(rl_RemainTypeBackup) == false)
            {
                return false;
            }

            ArrayList arrayList = custPrtPprBlnce.Compare(custPrtPprBlnceBackUp);

            // 配列以外の比較
            for (int i = 0; i <= arrayList.Count - 1; i++)
            {
                if (arrayList[i].ToString() != "SectionCode")               //拠点コード
                {
                    return false;
                }
            }

            // 配列の比較(拠点コード)
            if (arrayList.Contains("SectionCode") == true)
            {
                if ((custPrtPprBlnce.SectionCode == null) || (custPrtPprBlnceBackUp.SectionCode == null))
                {
                    return false;
                }
                if (custPrtPprBlnce.SectionCode.Length != custPrtPprBlnceBackUp.SectionCode.Length)
                {
                    return false;
                }
                for (int i = 0; i <= custPrtPprBlnce.SectionCode.Length - 1; i++)
                {
                    if (custPrtPprBlnce.SectionCode[i].Equals(custPrtPprBlnceBackUp.SectionCode[i]) == false)
                    {
                        return false;
                    }
                }
            }

            return true;
        }
        // ---ADD 2009/02/10 不具合対応[10651] ----------------------------------------------------<<<<<
        #endregion // 検索

        #region イベント

        #region 得意先選択ガイドボタンクリック時イベント

        /// <summary>
        /// 得意先選択ガイドボタンクリック時発生イベント
        /// </summary>
        /// <param name="sender">PMKHN4002Eフォームオブジェクト</param>
        /// <param name="customerSearchRet">得意先情報戻り値クラス(PMKHN4002E)</param>
        private void CustomerSearchForm_CustomerSelect(object sender, CustomerSearchRet customerSearchRet)
        {
            // イベントハンドラを渡した相手から戻り値クラスを受け取れなければ終了
            if (customerSearchRet == null) return;

            // DBデータを読み出す(キャッシュを使用)
            CustomerInfo customerInfo;
            int status = this._customerInfoAcs.ReadDBData(customerSearchRet.EnterpriseCode, customerSearchRet.CustomerCode, true, out customerInfo);

            // ステータスによりエラーメッセージを出力
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                if (customerInfo == null)
                {
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                        "選択した得意先は得意先情報入力が行われていない為、使用出来ません。",
                        status, MessageBoxButtons.OK);
                    return;
                }
                // --- ADD 2009/09/07 ---------->>>>>
                else
                {
                    this._carMngDiv = customerInfo.CarMngDivCd;
                }
                // --- ADD 2009/09/07 ----------<<<<<
            }
            else if (status == (int)ConstantManagement.DB_Status.ctDB_NOT_FOUND)
            {
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                    "選択した得意先は既に削除されています。",
                    status, MessageBoxButtons.OK);
                return;
            }
            else
            {
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOPDISP, this.Name,
                    "得意先情報の取得に失敗しました。",
                    status, MessageBoxButtons.OK);
                return;
            }

            // 得意先情報をUIに設定
            this.tNedit_CustomerCode.SetInt(customerInfo.CustomerCode);
            this.uLabel_CustomerName.Text = customerInfo.CustomerSnm.TrimEnd();
            // ------------ADD zhaimm 2013/02/06 FOR Redmine#34572--------->>>>
            if (customerInfo.CustomerCode != _prevInputValue.CustomerCode)
            {
                if (this._salesTtlSt != null)
                {
                    // 拠点表示区分が「0:標準」、「2:表示無し」の場合は、得意先の管理拠点をセット
                    if ((this._salesTtlSt.SectDspDivCd == 0) || (this._salesTtlSt.SectDspDivCd == 2))
                    {
                        if (!string.IsNullOrEmpty(customerInfo.MngSectionCode.Trim()))
                        {
                            this.tEdit_SectionCodeAllowZero.Text = customerInfo.MngSectionCode.TrimEnd();
                            this.uLabel_SectionNm.Text = customerInfo.MngSectionName.TrimEnd();
                            this._prevInputValue.SectionCode = customerInfo.MngSectionCode.TrimEnd();
                        }
                        else
                        {
                            // ログイン拠点情報を取得
                            SecInfoSet sectionInfo;
                            int status1 = this._secInfoSetAcs.Read(out sectionInfo, this._enterpriseCode, this._loginSectionCode.Trim());

                            // ステータスが正常の場合
                            if (status1 == (int)ConstantManagement.DB_Status.ctDB_NORMAL && sectionInfo.LogicalDeleteCode == 0)
                            {
                                this.tEdit_SectionCodeAllowZero.Text = sectionInfo.SectionCode.TrimEnd();
                                this.uLabel_SectionNm.Text = sectionInfo.SectionGuideNm.TrimEnd();
                                _prevInputValue.SectionCode = sectionInfo.SectionCode.TrimEnd(); ;
                            }
                        }
                    }
                }
            }
            // ------------ADD zhaimm 2013/02/06 FOR Redmine#34572---------<<<<
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
            _prevInputValue.CustomerCode = customerInfo.CustomerCode;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD
        }

        #endregion // 得意先選択ガイドボタンクリック時イベント

        #region 請求先選択ガイドボタンクリック時イベント

        /// <summary>
        /// 請求先選択ガイドボタンクリック時発生イベント
        /// </summary>
        /// <param name="sender">対象オブジェクト</param>
        /// <param name="customerSearchRet">請求先情報戻り値クラス(PMKHN4002E)</param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private void CustomerSearchForm_ClaimSelect(object sender, CustomerSearchRet customerSearchRet)
        {
            // イベントハンドラを渡した相手から戻り値クラスを受け取れなければ終了
            if (customerSearchRet == null) return;

            // DBデータを読み出す(キャッシュを使用)
            CustomerInfo customerInfo;
            int status = this._customerInfoAcs.ReadDBData(customerSearchRet.EnterpriseCode, customerSearchRet.CustomerCode, true, out customerInfo);

            // ステータスによりエラーメッセージを出力
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                if (customerInfo == null)
                {
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                        "選択した得意先は得意先情報入力が行われていない為、使用出来ません。",
                        status, MessageBoxButtons.OK);
                    return;
                }
            }
            else if (status == (int)ConstantManagement.DB_Status.ctDB_NOT_FOUND)
            {
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                    "選択した得意先は既に削除されています。",
                    status, MessageBoxButtons.OK);
                return;
            }
            else
            {
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOPDISP, this.Name,
                    "得意先情報の取得に失敗しました。",
                    status, MessageBoxButtons.OK);
                return;
            }

            // 請求先情報をUIに設定
            // -------------UPD 2009/12/28-------------->>>>>
            //this.tNedit_ClaimCode.SetInt(customerInfo.CustomerCode);
            //this.uLabel_ClaimName.Text = customerInfo.CustomerSnm.TrimEnd();
            //this.tEdit_ClaimName.Text = customerInfo.CustomerSnm.TrimEnd();// DEL 2010/08/05
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
            _prevInputValue.ClaimCode = customerInfo.CustomerCode;
            _prevInputValue.ClaimName = customerInfo.CustomerSnm.TrimEnd();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD
            // -------------UPD 2009/12/28--------------<<<<<
            // -----------ADD 2010/08/05------------>>>>>
            if (_prevInputValue.ClaimCode != 0)
            {
                this.tEdit_ClaimName.Text = _prevInputValue.ClaimCode.ToString("D8") + ":" + _prevInputValue.ClaimName;
            }
            // -----------ADD 2010/08/05------------<<<<<
        }

        #endregion // 請求先選択ガイドボタンクリック時イベント

        #endregion // イベント

        #region コントロールイベント

        #region ガイドボタン

        #region 拠点

        /// <summary>
        /// 拠点
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uButton_SectionGuide_Click(object sender, EventArgs e)
        {
            // 拠点ガイド表示
            SecInfoSet sectionInfo;
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 DEL
            //int status = this._secInfoSetAcs.ExecuteGuid(this._enterpriseCode, false, out sectionInfo);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
            int status = this._secInfoSetAcs.ExecuteGuid(this._enterpriseCode, true, out sectionInfo);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD

            // ステータスが正常時のみ情報をUIにセット
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                this.tEdit_SectionCodeAllowZero.Text = sectionInfo.SectionCode.Trim();
                this.uLabel_SectionNm.Text = sectionInfo.SectionGuideNm.Trim();
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
                _prevInputValue.SectionCode = sectionInfo.SectionCode.Trim();
                // 次フォーカス
                this.tNedit_CustomerCode.Focus();
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 DEL
            //else
            //{
            //    this.tEdit_SectionCodeAllowZero.Clear();
            //    this.uLabel_SectionNm.Text = "";
            //}
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 DEL
        }

        #endregion // 拠点

        #region 得意先

        /// <summary>
        /// 得意先ガイドボタンクリック
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/06/08 呉元嘯 得意先コードをガイドから選択した場合の不具合対応</br>
        private void uButton_CustomerGuide_Click(object sender, EventArgs e)
        {
            // 得意先ガイド表示
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
            //PMKHN04005UA customerSearchForm = new PMKHN04005UA(PMKHN04005UA.SEARCHMODE_CUSTOMER_ONLY, PMKHN04005UA.EXECUTEMODE_GUIDE_ONLY);
            //customerSearchForm.CustomerSelect += new PMKHN04005UA.CustomerSelectEventHandler( this.CustomerSearchForm_CustomerSelect );
            PMKHN04001UA customerSearchForm = new PMKHN04001UA(PMKHN04001UA.SEARCHMODE_CUSTOMER_ONLY, PMKHN04001UA.EXECUTEMODE_GUIDE_ONLY);
            customerSearchForm.CustomerSelect += new CustomerSelectEventHandler(this.CustomerSearchForm_CustomerSelect);
            customerSearchForm.ForcedAutoSearch = true;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD
            //customerSearchForm.ShowDialog(this);
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
            //DialogResult result = customerSearchForm.ShowDialog();
            DialogResult result = customerSearchForm.ShowDialog(this);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD
            if (result == DialogResult.OK)
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
                //this.tNedit_ClaimCode.Focus();// DEL 2009/12/28
                this.tDateEdit_SalesDateSt.Focus();// ADD 2009/12/28
                //if ( this.tNedit_CustomerCode.GetInt() == _prevInputValue.CustomerCode ) return;// DEL 2010/06/08
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD

                // 締め日設定を取得
                int status = this._tCalcAcs.GetTotalDayDmdC(this.tNedit_CustomerCode.GetInt(), out this._prevTotalDay, out this._currentTotalDay);
                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                {
                    // 日付更新
                    if (this._prevTotalDay == DateTime.MinValue)
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 DEL
                        //this.tDateEdit_SalesDateSt.Clear();
                        //this.tDateEdit_SalesDateEd.Clear();
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
                        DateTime today = DateTime.Today;
                        this.tDateEdit_SalesDateSt.SetDateTime(today);
                        this.tDateEdit_SalesDateEd.SetDateTime(today);
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD
                    }
                    else
                    {
                        this.tDateEdit_SalesDateSt.SetDateTime(this._prevTotalDay.AddDays(1));
                        this.tDateEdit_SalesDateEd.SetDateTime(DateTime.Now);
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 ADD
                        if (this._prevTotalDay.AddDays(1) > DateTime.Today)
                        {
                            this.tDateEdit_SalesDateEd.SetDateTime(this._prevTotalDay.AddDays(1));
                        }
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 ADD
                    }
                }
                else
                {
                    // 締め日データなし
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                        MSG_TOTAL_DAY_NOT_FOUND_CUSTOMER, -1, MessageBoxButtons.OK);

                    // 名称をクリア
                    this.uLabel_CustomerName.Text = string.Empty;

                    // 請求先も未入力であれば残高一覧タブが選択不能に
                    //if (this.tNedit_ClaimCode.GetInt() == 0) this._remainTabSelectable = false;// DEL 2009/12/28
                    if (this._prevInputValue.ClaimCode == 0) this._remainTabSelectable = false;// ADD 2009/12/28
                    return;
                }
                this._remainTabSelectable = true;
            }
            else
            {
                // 残高一覧タブを選択不能に
                //if (this.tNedit_CustomerCode.GetInt() == 0 && this.tNedit_ClaimCode.GetInt() == 0) this._remainTabSelectable = false;// DEL 2009/12/28
                if (this.tNedit_CustomerCode.GetInt() == 0 && this._prevInputValue.ClaimCode == 0) this._remainTabSelectable = false;// ADD 2009/12/28
            }
        }

        #endregion // 得意先

        #region 請求先

        /// <summary>
        /// 請求先ガイドボタンクリック
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uButton_ClaimGuide_Click(object sender, EventArgs e)
        {
            // 請求先ガイド表示
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
            //PMKHN04005UA customerSearchForm = new PMKHN04005UA(PMKHN04005UA.SEARCHMODE_CUSTOMER_ONLY, PMKHN04005UA.EXECUTEMODE_GUIDE_ONLY);
            //customerSearchForm.CustomerSelect += new PMKHN04005UA.CustomerSelectEventHandler(this.CustomerSearchForm_ClaimSelect);
            PMKHN04001UA customerSearchForm = new PMKHN04001UA(PMKHN04001UA.SEARCHMODE_CUSTOMER_ONLY, PMKHN04001UA.EXECUTEMODE_GUIDE_ONLY);
            customerSearchForm.CustomerSelect += new CustomerSelectEventHandler(this.CustomerSearchForm_ClaimSelect);
            customerSearchForm.ForcedAutoSearch = true;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD
            DialogResult result = customerSearchForm.ShowDialog(this);
            if (result == DialogResult.OK)
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
                // -------------UPD 2009/12/28-------------->>>>>
                //this.tDateEdit_SalesDateSt.Focus();
                //if ( this.tNedit_ClaimCode.GetInt() == _prevInputValue.ClaimCode ) return;
                Control nextControl = null;
                if (this.uCheckClaimCode_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_ClaimName.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_ClaimName.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28--------------<<<<<
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD
                // 締め日設定を取得
                //int status = this._tCalcAcs.GetTotalDayDmdC(this.tNedit_ClaimCode.GetInt(), out this._prevTotalDay, out this._currentTotalDay);// DEL 2009/12/28
                int status = this._tCalcAcs.GetTotalDayDmdC(this._prevInputValue.ClaimCode, out this._prevTotalDay, out this._currentTotalDay);// ADD 2009/12/28
                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                {
                    // 日付更新
                    if (this._prevTotalDay == DateTime.MinValue)
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 DEL
                        //this.tDateEdit_SalesDateSt.Clear();
                        //this.tDateEdit_SalesDateEd.Clear();
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
                        DateTime today = DateTime.Today;
                        this.tDateEdit_SalesDateSt.SetDateTime(today);
                        this.tDateEdit_SalesDateEd.SetDateTime(today);
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD
                    }
                    else
                    {
                        this.tDateEdit_SalesDateSt.SetDateTime(this._prevTotalDay.AddDays(1));
                        this.tDateEdit_SalesDateEd.SetDateTime(DateTime.Now);
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 ADD
                        if (this._prevTotalDay.AddDays(1) > DateTime.Today)
                        {
                            this.tDateEdit_SalesDateEd.SetDateTime(this._prevTotalDay.AddDays(1));
                        }
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 ADD
                    }
                }
                else
                {
                    // 締め日データなし
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                        MSG_TOTAL_DAY_NOT_FOUND_CUSTOMER, -1, MessageBoxButtons.OK);

                    // 名称をクリア
                    this.uLabel_CustomerName.Text = string.Empty;

                    // 請求先も未入力であれば残高一覧タブが選択不能に
                    //if (this.tNedit_ClaimCode.GetInt() == 0) this._remainTabSelectable = false;// DEL 2009/12/28
                    if (this._prevInputValue.ClaimCode == 0) this._remainTabSelectable = false;// ADD 2009/12/28
                    return;
                }

                this._remainTabSelectable = true;
            }
            else
            {
                // 残高一覧タブを選択不能に
                //if (this.tNedit_CustomerCode.GetInt() == 0 && this.tNedit_ClaimCode.GetInt() == 0) this._remainTabSelectable = false;// DEL 2009/12/28
                if (this.tNedit_CustomerCode.GetInt() == 0 && this._prevInputValue.ClaimCode == 0) this._remainTabSelectable = false;// ADD 2009/12/28
            }
        }

        #endregion // 請求先

        #region 担当者

        /// <summary>
        /// 担当者ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private void uButton_SalesEmployeeCd_Click(object sender, EventArgs e)
        {
            // ガイド表示
            Employee employeeInfo;
            int status;

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 DEL
            //// 拠点が入力されていれば拠点コードあり、クリアされていれば全拠点表示
            //string sectionCode = this.tEdit_SectionCodeAllowZero.Text.Trim();
            //if (sectionCode.Length > 0)
            //{
            //    // 拠点入力あり
            //    status = this._employeeAcs.ExecuteGuid(this._enterpriseCode, false, sectionCode, out employeeInfo);
            //}
            //else
            //{
            //    // 拠点なし（全拠点）
            //    status = this._employeeAcs.ExecuteGuid(this._enterpriseCode, true, out employeeInfo);
            //}
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
            status = this._employeeAcs.ExecuteGuid(this._enterpriseCode, true, out employeeInfo);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD

            // ステータスが正常の場合
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // 名前をUIにセット、コードはメモリ内に保存
                //this.tEdit_SalesEmployeeCd.Text = employeeInfo.Name.TrimEnd();// DEL 2010/08/05
                this._swSalesEmployeeName = employeeInfo.Name.TrimEnd();
                this._swSalesEmployeeCd = employeeInfo.EmployeeCode;
                // -----------ADD 2010/08/05------------>>>>>
                if (!string.IsNullOrEmpty(_swSalesEmployeeCd))
                {
                    this.tEdit_SalesEmployeeCd.Text = this._swSalesEmployeeCd.Trim().PadLeft(4, '0') + ":" + _swSalesEmployeeName;
                }
                // -----------ADD 2010/08/05------------<<<<<

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // -------------UPD 2009/12/28--------------->>>>>
                //Control nextControl = GetNextControl( tEdit_SalesEmployeeCd.Name );
                //if ( nextControl != null ) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckSalesEmployeeCd_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_SalesEmployeeCd.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_SalesEmployeeCd.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28---------------<<<<<
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            }
        }

        #endregion // 担当者

        #region 受注者

        /// <summary>
        /// 受注者ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private void uButton_FrontEmployeeCd_Click(object sender, EventArgs e)
        {
            // ガイド表示
            Employee employeeInfo;
            int status;

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 DEL
            //// 拠点が入力されていれば拠点コードあり、クリアされていれば全拠点表示
            //string sectionCode = this.tEdit_SectionCodeAllowZero.Text.Trim();
            //if (sectionCode.Length > 0)
            //{
            //    // 拠点入力あり
            //    status = this._employeeAcs.ExecuteGuid(this._enterpriseCode, false, sectionCode, out employeeInfo);
            //}
            //else
            //{
            //    // 拠点なし（全拠点）
            //    status = this._employeeAcs.ExecuteGuid(this._enterpriseCode, true, out employeeInfo);
            //}
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
            status = this._employeeAcs.ExecuteGuid(this._enterpriseCode, true, out employeeInfo);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD

            // ステータスが正常の場合
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // 名前をUIにセット、コードはメモリ内に保存
                //this.tEdit_FrontEmployeeCd.Text = employeeInfo.Name.TrimEnd();// DEL 2010/08/05
                this._swFrontEmployeeName = employeeInfo.Name.TrimEnd();
                this._swFrontEmployeeCd = employeeInfo.EmployeeCode;
                // -----------ADD 2010/08/05------------>>>>>
                if (!string.IsNullOrEmpty(_swFrontEmployeeCd))
                {
                    this.tEdit_FrontEmployeeCd.Text = this._swFrontEmployeeCd.Trim().PadLeft(4, '0') + ":" + _swFrontEmployeeName;
                }
                // -----------ADD 2010/08/05------------<<<<<

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // -------------UPD 2009/12/28--------------->>>>>
                //Control nextControl = GetNextControl(tEdit_FrontEmployeeCd.Name);
                //if (nextControl != null) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckFrontEmployeeCd_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_FrontEmployeeCd.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_FrontEmployeeCd.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28---------------<<<<<

                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            }
        }

        #endregion // 受注者

        #region 発行者

        /// <summary>
        /// 発行者ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private void uButton_SalesInputCode_Click(object sender, EventArgs e)
        {
            // ガイド表示
            Employee employeeInfo;
            int status;

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 DEL
            //// 拠点が入力されていれば拠点コードあり、クリアされていれば全拠点表示
            //string sectionCode = this.tEdit_SectionCodeAllowZero.Text.Trim();
            //if (sectionCode.Length > 0)
            //{
            //    // 拠点入力あり
            //    status = this._employeeAcs.ExecuteGuid(this._enterpriseCode, false, sectionCode, out employeeInfo);
            //}
            //else
            //{
            //    // 拠点なし（全拠点）
            //    status = this._employeeAcs.ExecuteGuid(this._enterpriseCode, true, out employeeInfo);
            //}
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
            status = this._employeeAcs.ExecuteGuid(this._enterpriseCode, true, out employeeInfo);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD

            // ステータスが正常の場合
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // 名前をUIにセット、コードはメモリ内に保存
                //this.tEdit_SalesInputCode.Text = employeeInfo.Name.TrimEnd();// DEL 2010/08/05
                this._swSalesInputName = employeeInfo.Name.TrimEnd();
                this._swSalesInputCode = employeeInfo.EmployeeCode;

                // -----------ADD 2010/08/05------------>>>>>
                if (!string.IsNullOrEmpty(_swSalesInputCode))
                {
                    this.tEdit_SalesInputCode.Text = this._swSalesInputCode.Trim().PadLeft(4, '0') + ":" + _swSalesInputName;
                }
                // -----------ADD 2010/08/05------------<<<<<

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // -------------UPD 2009/12/28--------------->>>>>
                //Control nextControl = GetNextControl( tEdit_SalesInputCode.Name );
                //if ( nextControl != null ) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckSalesInputCode_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_SalesInputCode.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_SalesInputCode.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28---------------<<<<<
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            }
        }

        #endregion // 発行者

        #region BLグループ

        /// <summary>
        /// BLグループガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private void uButton_BlGroupCode_Click(object sender, EventArgs e)
        {
            // ガイド表示
            BLGroupU blGroupUInfo;
            int status = this._blGroupUAcs.ExecuteGuid(this._enterpriseCode, out blGroupUInfo);

            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                //this.tEdit_BlGroupCode.Text = blGroupUInfo.BLGroupName;// DEL 2010/08/05
                this._swBLGroupCode = blGroupUInfo.BLGroupCode;
                this._swBLGroupName = blGroupUInfo.BLGroupName;

                // -----------ADD 2010/08/05------------>>>>>
                if (_swBLGroupCode != 0)
                {
                    this.tEdit_BlGroupCode.Text = this._swBLGroupCode.ToString("D5") + ":" + _swBLGroupName;
                }
                // -----------ADD 2010/08/05------------<<<<<
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // -------------UPD 2009/12/28--------------->>>>>
                //Control nextControl = GetNextControl( tEdit_BlGroupCode.Name );
                //if ( nextControl != null ) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckBLGroupCode_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_BlGroupCode.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_BlGroupCode.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28---------------<<<<<
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            }
        }

        #endregion // BLグループ

        #region BLコード

        /// <summary>
        /// BLコードガイドクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private void uButton_BlGoodsCode_Click(object sender, EventArgs e)
        {
            // コードから名称へ変換
            BLGoodsCdUMnt blGoodsUnit;
            int status = this._blGoodsCdAcs.ExecuteGuid(this._enterpriseCode, out blGoodsUnit);
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                //this.tEdit_BlGoodsCode.Text = blGoodsUnit.BLGoodsFullName;// DEL 2010/08/05
                this._swBLGoodsCode = blGoodsUnit.BLGoodsCode;
                //this._swBLGoodsName = blGoodsUnit.BLGoodsFullName;// DEL 2010/08/05

                // -----------ADD 2010/08/05------------>>>>>
                this._swBLGoodsName = blGoodsUnit.BLGoodsHalfName;
                if (_swBLGoodsCode != 0)
                {
                    this.tEdit_BlGoodsCode.Text = this._swBLGoodsCode.ToString("D5") + ":" + _swBLGoodsName;
                }
                // -----------ADD 2010/08/05------------<<<<<
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // -------------UPD 2009/12/28--------------->>>>>
                //Control nextControl = GetNextControl( tEdit_BlGoodsCode.Name );
                //if ( nextControl != null ) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckBLGoodsCode_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_BlGoodsCode.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_BlGoodsCode.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28---------------<<<<<
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            }
        }

        #endregion // BLコード

        #region 倉庫

        /// <summary>
        /// 倉庫ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private void uButton_WarehouseCd_Click(object sender, EventArgs e)
        {
            // 拠点コードを取得
            string sectioncode = this.tEdit_SectionCodeAllowZero.Text.Trim();
            int status = 0;

            // コードから名称へ変換
            Warehouse warehouseInfo;

            // 拠点コードが入力されていれば拠点内、なければ全拠点表示
            if (!String.IsNullOrEmpty(sectioncode))
            {
                status = this._warehouseAcs.ExecuteGuid(out warehouseInfo, this._enterpriseCode, sectioncode);
            }
            else
            {
                status = this._warehouseAcs.ExecuteGuid(out warehouseInfo, this._enterpriseCode);
            }

            // 戻り値が正常であれば
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // UI上には名前をセット、コードはメモリ内に格納
                //this.tEdit_WarehouseCd.Text = warehouseInfo.WarehouseName;// DEL 2010/08/05
                this._swWarehouseCd = warehouseInfo.WarehouseCode;
                this._swWarehouseName = warehouseInfo.WarehouseName;

                // -----------ADD 2010/08/05------------>>>>>
                if (!string.IsNullOrEmpty(_swWarehouseCd))
                {
                    this.tEdit_WarehouseCd.Text = this._swWarehouseCd.Trim().PadLeft(4, '0') + ":" + _swWarehouseName;
                }
                // -----------ADD 2010/08/05------------<<<<<

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // -------------UPD 2009/12/28--------------->>>>>
                //Control nextControl = GetNextControl( tEdit_WarehouseCd.Name );
                //if ( nextControl != null ) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckWarehouseCode_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_WarehouseCd.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_WarehouseCd.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28---------------<<<<<
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            }
        }

        #endregion // 倉庫

        #region 仕入先

        /// <summary>
        /// 仕入先ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private void uButton_SupplierCd_Click(object sender, EventArgs e)
        {
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //// 拠点コードを取得
            //string sectionCode = this.tEdit_SectionCodeAllowZero.Text.Trim();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

            // コードから名称へ変換
            Supplier supplierInfo;
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //int status = this._supplierAcs.ExecuteGuid(out supplierInfo, this._enterpriseCode, sectionCode);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            int status = this._supplierAcs.ExecuteGuid(out supplierInfo, this._enterpriseCode, string.Empty);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                //this.tEdit_SectionCodeAllowZero.Text = supplierInfo.SupplierSnm;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // -------------UPD 2009/12/28--------------->>>>>
                //this.tEdit_SupplierCd.Text = supplierInfo.SupplierSnm;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                this._swSupplierCd = supplierInfo.SupplierCd;
                //this._swSupplierName = supplierInfo.SupplierSnm;
                // 仕入先マスタ.仕入先略称が入力されていた場合には仕入先マスタ.仕入先略称を表示
                if (!string.IsNullOrEmpty(supplierInfo.SupplierSnm))
                {
                    this._swSupplierName = supplierInfo.SupplierSnm;
                }
                // 仕入先マスタ.仕入先略称が未入力の場合には仕入先マスタ.仕入先名1を表示
                else if (!string.IsNullOrEmpty(supplierInfo.SupplierNm1))
                {
                    this._swSupplierName = supplierInfo.SupplierNm1;
                }
                // 仕入先マスタ.仕入先名称1が未入力の場合には仕入先マスタ.仕入先カナを表示
                else
                {
                    this._swSupplierName = supplierInfo.SupplierKana;
                }
                // ----------UPD 2010/08/05--------->>>>>
                //this.tEdit_SupplierCd.Text = this._swSupplierName;
                if (_swSupplierCd != 0)
                {
                    this.tEdit_SupplierCd.Text = this._swSupplierCd.ToString("D6") + ":" + this._swSupplierName;
                }
                // ----------UPD 2010/08/05---------<<<<<
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                //Control nextControl = GetNextControl( tEdit_SupplierCd.Name );
                //if ( nextControl != null ) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckSupplierCd_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_SupplierCd.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_SupplierCd.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28---------------<<<<<
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            }
        }

        #endregion // 仕入先

        #region 発注先

        /// <summary>
        /// 発注先ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private void uButton_UOESupplierCd_Click(object sender, EventArgs e)
        {
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //// 拠点コードを取得
            //string sectionCode = this.tEdit_SectionCodeAllowZero.Text.Trim();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

            // コードから名称へ変換
            Supplier supplierInfo;
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //int status = this._supplierAcs.ExecuteGuid(out supplierInfo, this._enterpriseCode, sectionCode);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            int status = this._supplierAcs.ExecuteGuid(out supplierInfo, this._enterpriseCode, string.Empty);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // -------------UPD 2010/01/29-------------->>>>>
                //this.tEdit_UOESupplierCd.Text = supplierInfo.SupplierSnm;
                this._swUOESupplierCd = supplierInfo.SupplierCd;
                //this._swUOESupplierName = supplierInfo.SupplierSnm;
                // 仕入先マスタ.仕入先略称が入力されていた場合には仕入先マスタ.仕入先略称を表示
                if (!string.IsNullOrEmpty(supplierInfo.SupplierSnm))
                {
                    this._swUOESupplierName = supplierInfo.SupplierSnm;
                }
                // 仕入先マスタ.仕入先略称が未入力の場合には仕入先マスタ.仕入先名1を表示
                else if (!string.IsNullOrEmpty(supplierInfo.SupplierNm1))
                {
                    this._swUOESupplierName = supplierInfo.SupplierNm1;
                }
                // 仕入先マスタ.仕入先名称1が未入力の場合には仕入先マスタ.仕入先カナを表示
                else
                {
                    this._swUOESupplierName = supplierInfo.SupplierKana;
                }
                // -----------UPD 2010/08/05------------>>>>>
                //this.tEdit_UOESupplierCd.Text = this._swUOESupplierName;
                if (_swUOESupplierCd != 0)
                {
                    this.tEdit_UOESupplierCd.Text = this._swUOESupplierCd.ToString("D6") + ":" + _swUOESupplierName;
                }
                // -----------UPD 2010/08/05------------<<<<<
                // -------------UPD 2010/01/29--------------<<<<<
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // -------------UPD 2009/12/28--------------->>>>>
                //Control nextControl = GetNextControl( tEdit_UOESupplierCd.Name );
                //if ( nextControl != null ) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckUOESupplierCd_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_UOESupplierCd.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_UOESupplierCd.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28---------------<<<<<
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            }
        }

        #endregion // 発注先

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
        # region 納入先
        /// <summary>
        /// 納入先ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uButton_AddresseeCode_Click(object sender, EventArgs e)
        {
            // 得意先ガイド表示
            //PMKHN04005UA customerSearchForm = new PMKHN04005UA( PMKHN04005UA.SEARCHMODE_RECEIVER, PMKHN04005UA.EXECUTEMODE_GUIDE_ONLY );
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
            //PMKHN04005UA customerSearchForm = new PMKHN04005UA( PMKHN04005UA.SEARCHMODE_NORMAL, PMKHN04005UA.EXECUTEMODE_GUIDE_ONLY );
            //customerSearchForm.CustomerSelect += new PMKHN04005UA.CustomerSelectEventHandler( customerSearchForm_AddresseeSelect );
            PMKHN04001UA customerSearchForm = new PMKHN04001UA(PMKHN04001UA.SEARCHMODE_NORMAL, PMKHN04001UA.EXECUTEMODE_GUIDE_ONLY);
            customerSearchForm.CustomerSelect += new CustomerSelectEventHandler(customerSearchForm_AddresseeSelect);
            customerSearchForm.ForcedAutoSearch = true;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
            //DialogResult result = customerSearchForm.ShowDialog();
            DialogResult result = customerSearchForm.ShowDialog(this);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD
            if (result == DialogResult.OK)
            {
                // -------------UPD 2009/12/28--------------->>>>>
                //Control nextControl = GetNextControl( tEdit_AddresseeCode.Name );
                //if ( nextControl != null ) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckAddresseeCode_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_AddresseeCode.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_AddresseeCode.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28---------------<<<<<
            }
        }
        /// <summary>
        /// 納入先選択イベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="customerSearchRet"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        void customerSearchForm_AddresseeSelect(object sender, CustomerSearchRet customerSearchRet)
        {
            //this.tEdit_AddresseeCode.Text = customerSearchRet.Name + customerSearchRet.Name2;// DEL 2010/08/05
            this._swAddresseeCode = customerSearchRet.CustomerCode;
            this._swAddresseeName = customerSearchRet.Name + customerSearchRet.Name2;
            // -----------ADD 2010/08/05------------>>>>>
            if (_swAddresseeCode != 0)
            {
                this.tEdit_AddresseeCode.Text = this._swAddresseeCode.ToString("D8") + ":" + _swAddresseeName;
            }
            // -----------ADD 2010/08/05------------<<<<<
        }
        # endregion
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
        # region [商品大分類]
        /// <summary>
        /// 商品大分類ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private void uButton_GoodsLGroup_Click(object sender, EventArgs e)
        {
            UserGdBd userGdBd;

            // ガイド起動
            int status = this._goodsAcs.ExecuteUserGuideGuid(this._enterpriseCode, out userGdBd, (int)GoodsAcs.emUserGuideCode.GoodsLGroup);

            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                //this.tEdit_GoodsLGroup.Text = userGdBd.GuideName;// DEL 2010/08/05
                this._swGoodsLGroup = userGdBd.GuideCode;
                this._swGoodsLGroupName = userGdBd.GuideName.Trim();

                // -----------ADD 2010/08/05------------>>>>>
                if (_swGoodsLGroup != 0)
                {
                    this.tEdit_GoodsLGroup.Text = this._swGoodsLGroup.ToString("D4") + ":" + _swGoodsLGroupName;
                }
                // -----------ADD 2010/08/05------------<<<<<
                // 次フォーカス
                // -------------UPD 2009/12/28--------------->>>>>
                //Control nextControl = GetNextControl( tEdit_GoodsLGroup.Name );
                //if ( nextControl != null ) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckGoodsLGroup_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_GoodsLGroup.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_GoodsLGroup.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28---------------<<<<<
            }
        }
        # endregion

        # region [商品中分類]
        /// <summary>
        /// 商品中分類ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private void uButton_GoodsMGroup_Click(object sender, EventArgs e)
        {
            GoodsGroupU goodsMGroup;

            // ガイド起動
            int status = this._goodsAcs.ExecuteGoodsMGroupGuid(this._enterpriseCode, out goodsMGroup);

            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                //this.tEdit_GoodsMGroup.Text = goodsMGroup.GoodsMGroupName;// DEL 2010/08/05
                this._swGoodsMGroup = goodsMGroup.GoodsMGroup;
                this._swGoodsMGroupName = goodsMGroup.GoodsMGroupName;
                // -----------ADD 2010/08/05------------>>>>>
                if (_swGoodsMGroup != 0)
                {
                    this.tEdit_GoodsMGroup.Text = this._swGoodsMGroup.ToString("D4") + ":" + _swGoodsMGroupName;
                }
                // -----------ADD 2010/08/05------------<<<<<

                // 次フォーカス
                // -------------UPD 2009/12/28--------------->>>>>
                //Control nextControl = GetNextControl( tEdit_GoodsMGroup.Name );
                //if ( nextControl != null ) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckGoodsMGroup_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_GoodsMGroup.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_GoodsMGroup.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28---------------<<<<<
            }
        }
        # endregion
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

        #region 販売区分

        /// <summary>
        /// 販売区分ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        /// <br>Update Note: K2013/01/23 鄧潘ハン </br>
        /// <br>           : 特販区分を追加することの登戸個別対応</br>
        private void uButton_SalesCode_Click(object sender, EventArgs e)
        {
            int userGuideDivCd_SalesCode = 71;  // 販売区分：71

            // コードから名称へ変換
            UserGdHd userGuideHdInfo;
            UserGdBd userGuideBdInfo;
            int status = this._userGuideAcs.ExecuteGuid(this._enterpriseCode, out userGuideHdInfo, out userGuideBdInfo, userGuideDivCd_SalesCode);
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                //this.tEdit_SalesCode.Text = userGuideBdInfo.GuideName;// DEL 2010/08/05
                this._swSalesCode = userGuideBdInfo.GuideCode;
                this._swSalesName = userGuideBdInfo.GuideName;
                // -----------ADD 2010/08/05------------>>>>>
                // ---ADD K2013/01/23  鄧潘ハン---------------------------------->>>>>
                // 登戸オプションの場合
                if (this._opt_Nobuto == (int)Option.ON)
                {
                    if (_swSalesCode != 0)
                    {
                        this.tEdit_SalesCode.Text = this._swSalesCode.ToString() + ":" + _swSalesName;
                    }
                }
                else
                {
                if (_swSalesCode != 0)
                {
                    this.tEdit_SalesCode.Text = this._swSalesCode.ToString("D4") + ":" + _swSalesName;
                }
                }
                // ---ADD K2013/01/23  鄧潘ハン----------------------------------<<<<<


                // ---DEL K2013/01/23  鄧潘ハン---------------------------------->>>>>
                //if (_swSalesCode != 0)
                //{
                //    this.tEdit_SalesCode.Text = this._swSalesCode.ToString("D4") + ":" + _swSalesName;
                //}
                // ---DEL K2013/01/23  鄧潘ハン----------------------------------<<<<<
                // -----------ADD 2010/08/05------------<<<<<

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // -------------UPD 2009/12/28--------------->>>>>
                //Control nextControl = GetNextControl( tEdit_SalesCode.Name );
                //if ( nextControl != null ) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckSalesCode_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_SalesCode.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_SalesCode.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28---------------<<<<<
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            }
        }

        #endregion // 販売区分

        #region 自社分類

        /// <summary>
        /// 自社分類ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private void uButton_EnterpriseGanreCode_Click(object sender, EventArgs e)
        {
            int userGuideDivCd_EnterpriseGanreCode = 41;  // 自社分類：41

            // ガイド表示
            UserGdHd userGuideHdInfo;
            UserGdBd userGuideBdInfo;
            int status = this._userGuideAcs.ExecuteGuid(this._enterpriseCode, out userGuideHdInfo, out userGuideBdInfo, userGuideDivCd_EnterpriseGanreCode);
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                //this.tEdit_EnterpriseGanreCode.Text = userGuideBdInfo.GuideName;// DEL 2010/08/05
                this._swEnterpriseGanreCode = userGuideBdInfo.GuideCode;
                this._swEnterpriseGanreName = userGuideBdInfo.GuideName;
                // -----------ADD 2010/08/05------------>>>>>
                if (_swEnterpriseGanreCode != 0)
                {
                    this.tEdit_EnterpriseGanreCode.Text = this._swEnterpriseGanreCode.ToString("D4") + ":" + _swEnterpriseGanreName;
                }
                // -----------ADD 2010/08/05------------<<<<<
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // -------------UPD 2009/12/28--------------->>>>>
                //Control nextControl = GetNextControl( tEdit_EnterpriseGanreCode.Name );
                //if ( nextControl != null ) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckEnterpriseGanreCode_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_EnterpriseGanreCode.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_EnterpriseGanreCode.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28---------------<<<<<
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            }
        }

        #endregion // 自社分類

        #region メーカー

        /// <summary>
        /// メーカーガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private void uButton_MakerCd_Click(object sender, EventArgs e)
        {
            // コードから名称へ変換
            MakerUMnt makerInfo;
            int status = this._makerAcs.ExecuteGuid(this._enterpriseCode, out makerInfo);

            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // ----------UPD 2010/08/05---------->>>>>
                //this.tEdit_MakerCd.Text = makerInfo.MakerName;
                //this._swGoodsMakerName = makerInfo.MakerName;
                this._swGoodsMakerCd = makerInfo.GoodsMakerCd;
                this._swGoodsMakerName = makerInfo.MakerKanaName;
                if (_swGoodsMakerCd != 0)
                {
                    this.tEdit_MakerCd.Text = _swGoodsMakerCd.ToString("D4") + ":" + _swGoodsMakerName;
                }
                // ----------UPD 2010/08/05----------<<<<<
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // -------------UPD 2009/12/28--------------->>>>>
                //Control nextControl = GetNextControl( tEdit_MakerCd.Name );
                //if ( nextControl != null ) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckGoodsMakerCd_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_MakerCd.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_MakerCd.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28---------------<<<<<
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            }
        }

        #endregion // メーカー

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
        # region 赤伝発行担当者
        /// <summary>
        /// 赤伝発行担当者ガイドボタン
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uButton_rs_InputEmployee_Click(object sender, EventArgs e)
        {
            // ガイド表示
            Employee employeeInfo;
            int status;
            status = this._employeeAcs.ExecuteGuid(this._enterpriseCode, true, out employeeInfo);

            // ステータスが正常の場合
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // コードと名称をセット
                this.tEdit_rs_InputEmployeeCd.Text = employeeInfo.EmployeeCode.TrimEnd();
                this.uLabel_rs_InputEmployeeName.Text = employeeInfo.Name.TrimEnd();
            }
        }
        # endregion
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD

        #endregion // ガイドボタン

        #region 入力欄イベント

        #region 拠点
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
        /// <summary>
        /// 拠点コードEnterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_SectionCodeAllowZero_Enter(object sender, EventArgs e)
        {
            // ゼロ詰め解除
            this.tEdit_SectionCodeAllowZero.Text = this.uiSetControl1.GetZeroPadCanceledText("tEdit_SectionCode", this.tEdit_SectionCodeAllowZero.Text);
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD
        // --- ADD 2014/08/08 T.Miyamoto ------------------------------>>>>>
        private void tEdit_SectionCodeAllowZero_Leave(object sender, EventArgs e)
        {
            // ゼロ詰め
            tEdit_SectionCodeAllowZero.Text = uiSetControl1.GetZeroPaddedText(tEdit_SectionCodeAllowZero.Name, tEdit_SectionCodeAllowZero.Text);
        }
        // --- ADD 2014/08/08 T.Miyamoto ------------------------------<<<<<

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 拠点コードLeaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_SectionCodeAllowZero_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string sectionCode = this.tEdit_SectionCodeAllowZero.Text.Trim().PadLeft(2, '0');

        //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
        //    if ( _prevInputValue.SectionCode == sectionCode )
        //    {
        //        this.tEdit_SectionCodeAllowZero.Text = sectionCode;
        //        return;
        //    }
        //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD

        //    // 0または00は「全社」
        //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 DEL
        //    //if (sectionCode == "00")
        //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 DEL
        //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
        //    if ( sectionCode == "00" )
        //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD
        //    {
        //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
        //        sectionCode = "00";
        //        _prevInputValue.SectionCode = sectionCode;
        //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD
        //        this.tEdit_SectionCodeAllowZero.Text = sectionCode;
        //        this.uLabel_SectionNm.Text = "全社";
        //        return;
        //    }
        //    else if (!String.IsNullOrEmpty(sectionCode.Trim()))
        //    {
        //        // 拠点情報を取得
        //        SecInfoSet sectionInfo;
        //        int status = this._secInfoSetAcs.Read(out sectionInfo, this._enterpriseCode, sectionCode);

        //        // ステータスが正常の場合はUIにセット
        //        if ( status == (int)ConstantManagement.DB_Status.ctDB_NORMAL )
        //        {
        //            this.tEdit_SectionCodeAllowZero.Text = sectionInfo.SectionCode.TrimEnd();
        //            this.uLabel_SectionNm.Text = sectionInfo.SectionGuideNm.TrimEnd();
        //            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
        //            _prevInputValue.SectionCode = sectionCode;
        //            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD
        //            return;
        //        }
        //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
        //        else
        //        {
        //            tEdit_SectionCodeAllowZero.Text = _prevInputValue.SectionCode;
        //            return;
        //        }
        //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD
        //    }
        //    this.tEdit_SectionCodeAllowZero.Clear();
        //    this.uLabel_SectionNm.Text = string.Empty;
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// 拠点名称取得処理
        /// </summary>
        /// <param name="code"></param>
        /// <param name="name"></param>
        /// <returns></returns>
        /// <br>Update Note: 2010/09/29 liyp</br>
        /// <br>             Redmine#14876 テキスト出力対応</br>
        private bool ReadSectionCodeAllowZeroName(out string code, out string name)
        {
            // 入力値を取得
            string sectionCode = this.tEdit_SectionCodeAllowZero.Text.Trim().PadLeft(2, '0');
            code = sectionCode;
            name = uLabel_SectionNm.Text;

            if (_prevInputValue.SectionCode == sectionCode)
            {
                this.tEdit_SectionCodeAllowZero.Text = sectionCode;
                return true;
            }

            // 00:全社
            if (sectionCode == "00")
            {
                sectionCode = "00";
                _prevInputValue.SectionCode = sectionCode;
                code = sectionCode;
                name = "全社";
                return true;
            }
            else if (!String.IsNullOrEmpty(sectionCode.Trim()))
            {
                // 拠点情報を取得
                SecInfoSet sectionInfo;
                int status = this._secInfoSetAcs.Read(out sectionInfo, this._enterpriseCode, sectionCode);

                // ステータスが正常の場合はUIにセット
                //if ( status == (int)ConstantManagement.DB_Status.ctDB_NORMAL ) // DEL 2010/09/29
                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL && sectionInfo.LogicalDeleteCode == 0) // ADD 2010/09/29
                {

                    code = sectionInfo.SectionCode.TrimEnd();
                    name = sectionInfo.SectionGuideNm.TrimEnd();
                    _prevInputValue.SectionCode = code;
                    return true;
                }
                else
                {
                    isError = true; // 2010/09/29
                    code = uiSetControl1.GetZeroPadCanceledText("tEdit_SectionCode", _prevInputValue.SectionCode);
                    return false;
                }
            }
            else
            {
                code = string.Empty;
                name = string.Empty;
                _prevInputValue.SectionCode = code;
                return true;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        #endregion // 拠点

        #region 得意先

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 得意先コード入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tNedit_CustomerCode_Leave(object sender, EventArgs e)
        //{
        //    int customerCode = this.tNedit_CustomerCode.GetInt();

        //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
        //    if ( _prevInputValue.CustomerCode == customerCode ) return;
        //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD

        //    if ( customerCode > 0 )
        //    {
        //        CustomerInfo customerInfo;
        //        int status = this._customerInfoAcs.ReadDBData( this._enterpriseCode, customerCode, out customerInfo );

        //        if ( status == (int)ConstantManagement.DB_Status.ctDB_NORMAL )
        //        {
        //            this.uLabel_CustomerName.Text = customerInfo.CustomerSnm.TrimEnd();

        //            // 締め日設定を取得
        //            status = this._tCalcAcs.GetTotalDayDmdC( customerCode, out this._prevTotalDay, out this._currentTotalDay );
        //            if ( status == (int)ConstantManagement.DB_Status.ctDB_NORMAL )
        //            {
        //                // 日付更新
        //                if ( this._prevTotalDay == DateTime.MinValue )
        //                {
        //                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 DEL
        //                    //this.tDateEdit_SalesDateSt.Clear();
        //                    //this.tDateEdit_SalesDateEd.Clear();
        //                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 DEL
        //                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
        //                    DateTime today = DateTime.Today;
        //                    this.tDateEdit_SalesDateSt.SetDateTime( today );
        //                    this.tDateEdit_SalesDateEd.SetDateTime( today );
        //                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD
        //                }
        //                else
        //                {
        //                    this.tDateEdit_SalesDateSt.SetDateTime( this._prevTotalDay.AddDays( 1 ) );
        //                    this.tDateEdit_SalesDateEd.SetDateTime( DateTime.Now );
        //                }
        //                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
        //                _prevInputValue.CustomerCode = customerCode;
        //                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD
        //            }
        //            else
        //            {
        //                // 締め日データなし
        //                TMsgDisp.Show( this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
        //                    MSG_TOTAL_DAY_NOT_FOUND_CUSTOMER, -1, MessageBoxButtons.OK );

        //                // 名称をクリア
        //                this.uLabel_CustomerName.Text = string.Empty;

        //                // 請求先も未入力であれば残高一覧タブが選択不能に
        //                if ( this.tNedit_ClaimCode.GetInt() == 0 ) this._remainTabSelectable = false;
        //                return;
        //            }

        //            this._remainTabSelectable = true;
        //            return;
        //        }
        //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
        //        else
        //        {
        //            this.tNedit_CustomerCode.SetInt( _prevInputValue.CustomerCode );
        //            return;
        //        }
        //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD
        //    }
        //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
        //    else
        //    {
        //        _prevInputValue.CustomerCode = customerCode;
        //        this.uLabel_CustomerName.Text = string.Empty;
        //    }
        //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD

        //    // 名称をクリア
        //    this.uLabel_CustomerName.Text = string.Empty;
        //    // 請求先も未入力であれば残高一覧タブが選択不能に
        //    if (this.tNedit_ClaimCode.GetInt() == 0) this._remainTabSelectable = false;
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// 得意先名称取得
        /// </summary>
        /// <param name="code"></param>
        /// <param name="code"></param>
        /// <returns></returns>
        /// <br>Update Note: 2010/09/21 liyp</br>
        /// <br>             Redmine#14876 テキスト出力対応</br>
        private bool ReadCustomerName(out int code)
        {
            int customerCode = this.tNedit_CustomerCode.GetInt();
            code = customerCode;

            if (_prevInputValue.CustomerCode == customerCode) return true;

            // ---ADD 2009/02/10 不具合対応[10668] ----------------------------->>>>>
            // 2010/04/15 Del 未入力時もタブは切り替えない >>>
            //// 未入力時は明細へタブを切り替え
            ////int claimCode = this.tNedit_ClaimCode.GetInt();// DEL 2009/12/28
            //int claimCode = this._prevInputValue.ClaimCode;// ADD 2009/12/28
            //if ((customerCode == 0) && (claimCode == 0))
            //{
            //    if (this._selectedMainTabKey == "uTab_RemainList")
            //    {
            //        this._selectedMainTabKey = "uTab_SlipDetail";
            //        this.uTabControl.Tabs["uTab_SlipDetail"].Selected = true;
            //    }
            //}
            // 2010/04/15 Del <<<

            //残高一覧グリッド内容クリア
            this._detailDataSet.BalanceList.Clear();
            // ---ADD 2009/02/10 不具合対応[10668] -----------------------------<<<<<

            if (customerCode > 0)
            {
                CustomerInfo customerInfo;
                int status = this._customerInfoAcs.ReadDBData(this._enterpriseCode, customerCode, out customerInfo);

                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL && customerInfo.IsCustomer)
                {
                    this.uLabel_CustomerName.Text = customerInfo.CustomerSnm.TrimEnd();

                    // 締め日設定を取得
                    status = this._tCalcAcs.GetTotalDayDmdC(customerCode, out this._prevTotalDay, out this._currentTotalDay);
                    //if ( status == (int)ConstantManagement.DB_Status.ctDB_NORMAL) // DEL 2010/09/29
                    if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL && customerInfo.LogicalDeleteCode == 0) // ADD 2010/09/29
                    {

                        // 日付更新
                        if (this._prevTotalDay == DateTime.MinValue)
                        {
                            DateTime today = DateTime.Today;
                            this.tDateEdit_SalesDateSt.SetDateTime(today);
                            this.tDateEdit_SalesDateEd.SetDateTime(today);
                        }
                        else
                        {
                            this.tDateEdit_SalesDateSt.SetDateTime(this._prevTotalDay.AddDays(1));
                            this.tDateEdit_SalesDateEd.SetDateTime(DateTime.Now);
                            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 ADD
                            if (this._prevTotalDay.AddDays(1) > DateTime.Today)
                            {
                                this.tDateEdit_SalesDateEd.SetDateTime(this._prevTotalDay.AddDays(1));
                            }
                            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 ADD
                        }
                        _prevInputValue.CustomerCode = customerCode;
                        this._remainTabSelectable = true;
                    }
                    else
                    {
                        // 締め日データなし
                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                            MSG_TOTAL_DAY_NOT_FOUND_CUSTOMER, -1, MessageBoxButtons.OK);

                        // 名称をクリア
                        this.uLabel_CustomerName.Text = string.Empty;

                        // 請求先も未入力であれば残高一覧タブが選択不能に
                        //if ( this.tNedit_ClaimCode.GetInt() == 0 ) this._remainTabSelectable = false;// DEL 2009/12/28
                        if (this._prevInputValue.ClaimCode == 0) this._remainTabSelectable = false;// ADD 2009/12/28
                    }

                    // ------------ADD zhaimm 2013/02/06 FOR Redmine#34572--------->>>>
                    if (this._salesTtlSt != null)
                    {
                        // 拠点表示区分が「0:標準」、「2:表示無し」の場合は、得意先の管理拠点をセット
                        if ((this._salesTtlSt.SectDspDivCd == 0) || (this._salesTtlSt.SectDspDivCd == 2))
                        {
                            if (!string.IsNullOrEmpty(customerInfo.MngSectionCode.Trim()))
                            {
                                this.tEdit_SectionCodeAllowZero.Text = customerInfo.MngSectionCode.TrimEnd();
                                this.uLabel_SectionNm.Text = customerInfo.MngSectionName.TrimEnd();
                                this._prevInputValue.SectionCode = customerInfo.MngSectionCode.TrimEnd();
                            }
                            else
                            {
                                // ログイン拠点情報を取得
                                SecInfoSet sectionInfo;
                                int status1 = this._secInfoSetAcs.Read(out sectionInfo, this._enterpriseCode, this._loginSectionCode.Trim());

                                // ステータスが正常の場合
                                if (status1 == (int)ConstantManagement.DB_Status.ctDB_NORMAL && sectionInfo.LogicalDeleteCode == 0)
                                {
                                    this.tEdit_SectionCodeAllowZero.Text = sectionInfo.SectionCode.TrimEnd();
                                    this.uLabel_SectionNm.Text = sectionInfo.SectionGuideNm.TrimEnd();
                                    _prevInputValue.SectionCode = sectionInfo.SectionCode.TrimEnd(); ;
                                }
                            }
                        }
                    }
                    // ------------ADD zhaimm 2013/02/06 FOR Redmine#34572---------<<<<
                    return true;
                }
                else
                {
                    isError = true; // 2010/09/29
                    code = _prevInputValue.CustomerCode;
                    //this.tNedit_CustomerCode.SetInt( _prevInputValue.CustomerCode );
                    return false;
                }
            }
            else
            {
                _prevInputValue.CustomerCode = customerCode;
                this.uLabel_CustomerName.Text = string.Empty;
                // 名称をクリア
                this.uLabel_CustomerName.Text = string.Empty;
                // 請求先も未入力であれば残高一覧タブが選択不能に
                //if ( this.tNedit_ClaimCode.GetInt() == 0 ) this._remainTabSelectable = false;// DEL 2009/12/28
                if (this._prevInputValue.ClaimCode == 0) this._remainTabSelectable = false;// ADD 2009/12/28
                return true;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        #endregion // 得意先

        #region 請求先
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tNedit_ClaimCode_Leave(object sender, EventArgs e)
        //{
        //    int claimCode = this.tNedit_ClaimCode.GetInt();
        //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
        //    if ( _prevInputValue.ClaimCode == claimCode ) return;
        //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD

        //    if ( claimCode > 0 )
        //    {
        //        CustomerInfo customerInfo;
        //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        //        //int status = this._customerInfoAcs.ReadStaticMemoryData( out customerInfo, this._enterpriseCode, claimCode );
        //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        //        int status = this._customerInfoAcs.ReadDBData( this._enterpriseCode, claimCode, out customerInfo );
        //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        //        if ( status == (int)ConstantManagement.DB_Status.ctDB_NORMAL )
        //        {
        //            this.uLabel_ClaimName.Text = customerInfo.CustomerSnm.TrimEnd();

        //            // 締め日設定を取得
        //            status = this._tCalcAcs.GetTotalDayDmdC( claimCode, out this._prevTotalDay, out this._currentTotalDay );
        //            if ( status == (int)ConstantManagement.DB_Status.ctDB_NORMAL )
        //            {
        //                // 日付更新
        //                if ( this._prevTotalDay == DateTime.MinValue )
        //                {
        //                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 DEL
        //                    //this.tDateEdit_SalesDateSt.Clear();
        //                    //this.tDateEdit_SalesDateEd.Clear();
        //                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 DEL
        //                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
        //                    DateTime today = DateTime.Today;
        //                    this.tDateEdit_SalesDateSt.SetDateTime( today );
        //                    this.tDateEdit_SalesDateEd.SetDateTime( today );
        //                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD
        //                }
        //                else
        //                {
        //                    this.tDateEdit_SalesDateSt.SetDateTime( this._prevTotalDay.AddDays( 1 ) );
        //                    this.tDateEdit_SalesDateEd.SetDateTime( DateTime.Now );
        //                }
        //                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
        //                _prevInputValue.ClaimCode = claimCode;
        //                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD
        //            }
        //            else
        //            {
        //                // 締め日データなし
        //                TMsgDisp.Show( this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
        //                    MSG_TOTAL_DAY_NOT_FOUND_CLAIM, -1, MessageBoxButtons.OK );

        //                // 名称をクリア
        //                this.uLabel_ClaimName.Text = string.Empty;

        //                // 得意先も未入力であれば残高一覧タブが選択不能に
        //                if ( this.tNedit_CustomerCode.GetInt() == 0 ) this._remainTabSelectable = false;
        //                return;
        //            }

        //            this._remainTabSelectable = true;
        //            return;
        //        }
        //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
        //        else
        //        {
        //            this.tNedit_ClaimCode.SetInt( _prevInputValue.ClaimCode );
        //            return;
        //        }
        //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD
        //    }
        //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
        //    else
        //    {
        //        // クリア
        //        _prevInputValue.ClaimCode = claimCode;
        //        this.uLabel_ClaimName.Text = string.Empty;
        //    }
        //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD

        //    // 名称をクリア
        //    this.uLabel_ClaimName.Text = string.Empty;
        //    // 請求先も未入力であれば残高一覧タブが選択不能に
        //    if (this.tNedit_CustomerCode.GetInt() == 0) this._remainTabSelectable = false;
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// 請求先名称取得
        /// </summary>
        /// <param name="code"></param>
        /// <returns></returns>
        private bool ReadClaimName(out int code)
        {
            // -------------UPD 2009/12/28-------------->>>>>
            //int claimCode = this.tNedit_ClaimCode.GetInt();
            // 入力値を取得
            int claimCode;
            try
            {
                claimCode = Int32.Parse(this.tEdit_ClaimName.Text.Trim());
            }
            catch
            {
                claimCode = 0;
            }
            // -------------UPD 2009/12/28--------------<<<<<
            code = claimCode;

            if (_prevInputValue.ClaimCode == claimCode) return true;

            // ---ADD 2009/02/10 不具合対応[10668] ----------------------------->>>>>
            int customerCode = this.tNedit_CustomerCode.GetInt();
            // 未入力時は明細へタブを切り替え
            if ((customerCode == 0) && (claimCode == 0))
            {
                if (this._selectedMainTabKey == "uTab_RemainList")
                {
                    this._selectedMainTabKey = "uTab_SlipDetail";
                    this.uTabControl.Tabs["uTab_SlipDetail"].Selected = true;
                }
            }

            //残高一覧グリッド内容クリア
            this._detailDataSet.BalanceList.Clear();
            // ---ADD 2009/02/10 不具合対応[10668] -----------------------------<<<<<

            if (claimCode > 0)
            {
                CustomerInfo customerInfo;
                int status = this._customerInfoAcs.ReadDBData(this._enterpriseCode, claimCode, out customerInfo);

                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL && customerInfo.IsCustomer)
                {
                    //this.uLabel_ClaimName.Text = customerInfo.CustomerSnm.TrimEnd();// DEL 2009/12/28

                    // 締め日設定を取得
                    status = this._tCalcAcs.GetTotalDayDmdC(claimCode, out this._prevTotalDay, out this._currentTotalDay);
                    if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                    {
                        // 日付更新
                        if (this._prevTotalDay == DateTime.MinValue)
                        {
                            DateTime today = DateTime.Today;
                            this.tDateEdit_SalesDateSt.SetDateTime(today);
                            this.tDateEdit_SalesDateEd.SetDateTime(today);
                        }
                        else
                        {
                            this.tDateEdit_SalesDateSt.SetDateTime(this._prevTotalDay.AddDays(1));
                            this.tDateEdit_SalesDateEd.SetDateTime(DateTime.Now);
                            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 ADD
                            if (this._prevTotalDay.AddDays(1) > DateTime.Today)
                            {
                                this.tDateEdit_SalesDateEd.SetDateTime(this._prevTotalDay.AddDays(1));
                            }
                            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 ADD
                        }
                        _prevInputValue.ClaimCode = claimCode;
                        _prevInputValue.ClaimName = customerInfo.CustomerSnm.TrimEnd();// ADD 2009/12/28
                        this._remainTabSelectable = true;
                    }
                    else
                    {
                        // 締め日データなし
                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                            MSG_TOTAL_DAY_NOT_FOUND_CLAIM, -1, MessageBoxButtons.OK);

                        // 名称をクリア
                        //this.uLabel_ClaimName.Text = string.Empty;// DEL 2009/12/28
                        // 得意先も未入力であれば残高一覧タブが選択不能に
                        if (this.tNedit_CustomerCode.GetInt() == 0) this._remainTabSelectable = false;
                    }
                    return true;
                }
                else
                {
                    //this.tNedit_ClaimCode.SetInt( _prevInputValue.ClaimCode );
                    code = _prevInputValue.ClaimCode;
                    return false;
                }
            }
            else
            {
                // クリア
                _prevInputValue.ClaimCode = claimCode;
                //this.uLabel_ClaimName.Text = string.Empty;// DEL 2009/12/28
                _prevInputValue.ClaimName = string.Empty;// ADD 2009/12/28

                // 名称をクリア
                //this.uLabel_ClaimName.Text = string.Empty;// DEL 2009/12/28
                // 請求先も未入力であれば残高一覧タブが選択不能に
                if (this.tNedit_CustomerCode.GetInt() == 0) this._remainTabSelectable = false;

                return true;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
        #endregion // 請求先

        // 以下の担当者から発注先の各入力欄は、フォーカス移動時にコード←→名称変換を行う
        // また、同一のフィールドをコードおよび名称で使用するため、最大文字長の調整も行う
        // Enter時に入力コードの最大文字長、Leave時には表示用名称の最大文字長
        // 文字長の設定は行わない

        #region 担当者
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 担当者入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_SalesEmployeeCd_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_SalesEmployeeCd.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        try
        //        {
        //            // 入力値が変わっていた場合のみコード変換
        //            if (inputValue != this._swSalesEmployeeCd)
        //            {
        //                // 入力された値をプライベートレベルで保存
        //                this._swSalesEmployeeCd = inputValue;

        //                // コードから名称へ変換
        //                Employee employeeInfo;
        //                int status = this._employeeAcs.Read(out employeeInfo, this._enterpriseCode, this._swSalesEmployeeCd);
        //                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
        //                {
        //                    this._swSalesEmployeeName = employeeInfo.Name;
        //                }
        //            }

        //            // Leave時に名称に置き換え
        //            //this.tEdit_SalesEmployeeCd.ExtEdit.Column = 40;
        //            this.tEdit_SalesEmployeeCd.Text = this._swSalesEmployeeName;
        //        }
        //        catch
        //        {
        //            // 文字が不正な場合は空文字を保存し、項目をクリア
        //            this._swSalesEmployeeCd = string.Empty;
        //            this.tEdit_SalesEmployeeCd.Clear();
        //        }
        //    }
        //    else
        //    {
        //        // そうでなければ空文字を保存
        //        this._swSalesEmployeeCd = string.Empty;
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// 担当者名称取得
        /// </summary>
        /// <param name="code"></param>
        /// <returns></returns>
        private bool ReadSalesEmployeeName(out string code)
        {
            // 入力値を取得
            string inputValue = this.tEdit_SalesEmployeeCd.Text.Trim();
            code = inputValue;

            // 空でなければ処理開始
            if (!string.IsNullOrEmpty(inputValue))
            {
                try
                {
                    // 入力値が変わっていた場合のみコード変換
                    if (inputValue != this._swSalesEmployeeCd)
                    {
                        // コードから名称へ変換
                        Employee employeeInfo;
                        int status = this._employeeAcs.Read(out employeeInfo, this._enterpriseCode, inputValue);
                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            this._swSalesEmployeeCd = inputValue;
                            this._swSalesEmployeeName = employeeInfo.Name;
                            code = _swSalesEmployeeCd;
                            return true;
                        }
                        else
                        {
                            // 戻す
                            code = uiSetControl1.GetZeroPadCanceledText(tEdit_SalesEmployeeCd.Name, _swSalesEmployeeCd);
                            return false;
                        }
                    }
                    return true;
                }
                catch
                {
                    // 戻す
                    code = uiSetControl1.GetZeroPadCanceledText(tEdit_SalesEmployeeCd.Name, _swSalesEmployeeCd);
                    return false;
                }
            }
            else
            {
                this._swSalesEmployeeCd = string.Empty;
                this._swSalesEmployeeName = string.Empty;
                code = _swSalesEmployeeCd;
                return true;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        /// <summary>
        /// 担当者入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_SalesEmployeeCd_Enter(object sender, System.EventArgs e)
        {
            // 担当者コードが保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._swSalesEmployeeCd))
            {
                this.tEdit_SalesEmployeeCd.Text = this._swSalesEmployeeCd.Trim();
            }

            // 最大文字長を調整
            //this.tEdit_SalesEmployeeCd.ExtEdit.Column = 4;
        }

        #endregion // 担当者

        #region 受注者
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 受注者入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_FrontEmployeeCd_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_FrontEmployeeCd.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        try
        //        {
        //            // 入力値が変わっていた場合のみコード変換
        //            if (inputValue != this._swFrontEmployeeCd)
        //            {
        //                // 入力された値をプライベートレベルで保存
        //                this._swFrontEmployeeCd = inputValue;

        //                // コードから名称へ変換
        //                Employee employeeInfo;
        //                int status = this._employeeAcs.Read(out employeeInfo, this._enterpriseCode, this._swFrontEmployeeCd);
        //                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
        //                {
        //                    this._swFrontEmployeeName = employeeInfo.Name;
        //                }
        //            }

        //            // Leave時に名称に置き換え
        //            //this.tEdit_FrontEmployeeCd.ExtEdit.Column = 40;
        //            this.tEdit_FrontEmployeeCd.Text = this._swFrontEmployeeName;
        //        }
        //        catch
        //        {
        //            // 文字が不正な場合は空文字を保存し、項目をクリア
        //            this._swFrontEmployeeCd = string.Empty;
        //            this.tEdit_FrontEmployeeCd.Clear();
        //        }
        //    }
        //    else
        //    {
        //        // そうでなければ空文字を保存
        //        this._swFrontEmployeeCd = string.Empty;
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// 受注者名称取得
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private bool ReadFrontEmployeeName(out string code)
        {
            // 入力値を取得
            string inputValue = this.tEdit_FrontEmployeeCd.Text.Trim();
            code = inputValue;

            // 空でなければ処理開始
            if (!string.IsNullOrEmpty(inputValue))
            {
                try
                {
                    // 入力値が変わっていた場合のみコード変換
                    if (inputValue != this._swFrontEmployeeCd)
                    {
                        // コードから名称へ変換
                        Employee employeeInfo;
                        int status = this._employeeAcs.Read(out employeeInfo, this._enterpriseCode, inputValue);
                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            this._swFrontEmployeeCd = inputValue;
                            this._swFrontEmployeeName = employeeInfo.Name;
                            code = _swFrontEmployeeCd;
                            return true;
                        }
                        else
                        {
                            // 戻す
                            code = uiSetControl1.GetZeroPadCanceledText(tEdit_FrontEmployeeCd.Name, _swFrontEmployeeCd);
                            return false;
                        }
                    }
                    return true;
                }
                catch
                {
                    // 戻す
                    code = uiSetControl1.GetZeroPadCanceledText(tEdit_FrontEmployeeCd.Name, _swFrontEmployeeCd);
                    return false;
                }
            }
            else
            {
                this._swFrontEmployeeCd = string.Empty;
                this._swFrontEmployeeName = string.Empty;
                code = _swFrontEmployeeCd;
                return true;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        /// <summary>
        /// 受注者入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_FrontEmployeeCd_Enter(object sender, System.EventArgs e)
        {
            // 受注者コードが保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._swFrontEmployeeCd))
            {
                this.tEdit_FrontEmployeeCd.Text = this._swFrontEmployeeCd.Trim();
            }

            // 最大文字長を入力コードに調整
            //this.tEdit_FrontEmployeeCd.ExtEdit.Column = 4;
        }


        #endregion // 受注者

        #region 発行者

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 発行者入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_SalesInputCode_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_SalesInputCode.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        try
        //        {
        //            // 入力値が変わっていた場合のみコード変換
        //            if (inputValue != this._swSalesInputCode)
        //            {
        //                // 入力された値をプライベートレベルで保存
        //                this._swSalesInputCode = inputValue;

        //                // コードから名称へ変換
        //                Employee employeeInfo;
        //                int status = this._employeeAcs.Read(out employeeInfo, this._enterpriseCode, this._swSalesInputCode);
        //                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
        //                {
        //                    this._swSalesInputName = employeeInfo.Name;
        //                }
        //            }

        //            // Leave時に名称に置き換え
        //            //this.tEdit_SalesInputCode.ExtEdit.Column = 40;
        //            this.tEdit_SalesInputCode.Text = this._swSalesInputName;
        //        }
        //        catch
        //        {
        //            // 文字が不正な場合は空文字を保存し、項目をクリア
        //            this._swSalesInputCode = string.Empty;
        //            this.tEdit_SalesInputCode.Clear();
        //        }
        //    }
        //    else
        //    {
        //        // そうでなければ空文字を保存
        //        this._swSalesInputCode = string.Empty;
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// 発行者名称取得
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private bool ReadSalesInputName(out string code)
        {
            // 入力値を取得
            string inputValue = this.tEdit_SalesInputCode.Text.Trim();
            code = inputValue;

            // 空でなければ処理開始
            if (!string.IsNullOrEmpty(inputValue))
            {
                try
                {
                    // 入力値が変わっていた場合のみコード変換
                    if (inputValue != this._swSalesInputCode)
                    {
                        // コードから名称へ変換
                        Employee employeeInfo;
                        int status = this._employeeAcs.Read(out employeeInfo, this._enterpriseCode, inputValue);
                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            this._swSalesInputCode = inputValue;
                            this._swSalesInputName = employeeInfo.Name;
                            code = _swSalesInputCode;
                            return true;
                        }
                        else
                        {
                            // 戻す
                            code = uiSetControl1.GetZeroPadCanceledText(tEdit_SalesInputCode.Name, _swSalesInputCode);
                            return false;
                        }
                    }
                    return true;
                }
                catch
                {
                    // 戻す
                    code = uiSetControl1.GetZeroPadCanceledText(tEdit_SalesInputCode.Name, _swSalesInputCode);
                    return false;
                }
            }
            else
            {
                this._swSalesInputCode = string.Empty;
                this._swSalesInputName = string.Empty;
                code = string.Empty;
                return true;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        /// <summary>
        /// 発行者入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_SalesInputCode_Enter(object sender, System.EventArgs e)
        {
            // 発行者コードが保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._swSalesInputCode))
            {
                this.tEdit_SalesInputCode.Text = this._swSalesInputCode.Trim();
            }

            // 最大文字長を入力コードに調整
            //this.tEdit_SalesInputCode.ExtEdit.Column = 4;
        }

        #endregion // 発行者

        #region BLグループコード

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// BLグループコード名取得
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_BlGroupCode_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_BlGroupCode.Text.Trim();

        //    try
        //    {
        //        // 空でなければ処理開始
        //        if (!string.IsNullOrEmpty(inputValue))
        //        {
        //            // 入浴された値をプライベートレベルで保存
        //            this._swBLGroupCode = int.Parse(inputValue);

        //            // コードから名称へ変換
        //            //int status = this._blGroupUAcs.

        //            // 名称に置き換え

        //            //this.tEdit_BlGroupCode.ExtEdit.Column = 40;
        //        }
        //    }
        //    catch
        //    {
        //        // 文字が不正であれば
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// グループコード名称取得
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private bool ReadBlGroupName(out int code)
        {
            // 入力値を取得
            int inputValue;
            try
            {
                inputValue = Int32.Parse(this.tEdit_BlGroupCode.Text.Trim());
            }
            catch
            {
                inputValue = 0;
            }
            code = inputValue;

            // 空でなければ処理開始
            if (inputValue != 0)
            {
                try
                {
                    // 入力値が変わっていた場合のみコード変換
                    if (inputValue != this._swBLGroupCode)
                    {
                        // コードから名称へ変換
                        BLGroupU blGroup;
                        int status = this._blGroupUAcs.Search(out blGroup, this._enterpriseCode, inputValue);
                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            this._swBLGroupCode = inputValue;
                            this._swBLGroupName = blGroup.BLGroupName;
                            code = _swBLGroupCode;
                            return true;
                        }
                        else
                        {
                            // 戻す
                            code = _swBLGroupCode;
                            return false;
                        }
                    }
                    return true;
                }
                catch
                {
                    // 戻す
                    code = _swBLGroupCode;
                    return false;
                }
            }
            else
            {
                this._swBLGroupCode = 0;
                this._swBLGroupName = string.Empty;
                code = _swBLGroupCode;
                return true;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        /// <summary>
        /// BLグループコードEnterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_BlGroupCode_Enter(object sender, System.EventArgs e)
        {
            // BLグループコードが保存されていれば置き換え
            if (this._swBLGroupCode > 0)
            {
                this.tEdit_BlGroupCode.Text = this._swBLGroupCode.ToString();
            }

            // 最大文字長を入力コードに調整
            //this.tEdit_BlGroupCode.ExtEdit.Column = 5;
        }


        #endregion // BLグループコード

        #region BLコード
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// BLコード入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_BlGoodsCode_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_BlGoodsCode.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        try
        //        {
        //            // 入力値が変わっていた場合のみコード変換
        //            int blcode = int.Parse(inputValue);
        //            if (blcode != this._swBLGoodsCode)
        //            {
        //                // 入力された値をプライベートレベルで保存
        //                this._swBLGoodsCode = blcode;

        //                // コードから名称へ変換
        //                BLGoodsCdUMnt blGoodsUnit;
        //                int status = this._blGoodsCdAcs.Read(out blGoodsUnit, this._enterpriseCode, this._swBLGoodsCode);
        //                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
        //                {
        //                    this._swBLGoodsName = blGoodsUnit.BLGoodsFullName;
        //                }
        //            }

        //            // Leave時に名称に置き換え
        //            //this.tEdit_BlGoodsCode.ExtEdit.Column = 40;
        //            this.tEdit_BlGoodsCode.Text = this._swBLGoodsName;
        //        }
        //        catch
        //        {
        //            // 文字が不正な場合は0を保存し、項目をクリア
        //            this._swBLGroupCode = 0;
        //            this.tEdit_BlGoodsCode.Clear();
        //        }
        //    }
        //    else
        //    {
        //        // そうでなければ0を保存
        //        this._swBLGroupCode = 0;
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// BLコード名称取得
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private bool ReadBlCodeName(out int code)
        {
            // 入力値を取得
            int inputValue;
            try
            {
                inputValue = Int32.Parse(this.tEdit_BlGoodsCode.Text.Trim());
            }
            catch
            {
                inputValue = 0;
            }
            code = inputValue;

            // 空でなければ処理開始
            if (inputValue != 0)
            {
                try
                {
                    // 入力値が変わっていた場合のみコード変換
                    if (inputValue != this._swBLGoodsCode)
                    {
                        // コードから名称へ変換
                        BLGoodsCdUMnt blGoodsCd;
                        int status = _blGoodsCdAcs.Read(out blGoodsCd, this._enterpriseCode, inputValue);

                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            this._swBLGoodsCode = inputValue;
                            //this._swBLGoodsName = blGoodsCd.BLGoodsFullName;// DEL 2010/08/05
                            this._swBLGoodsName = blGoodsCd.BLGoodsHalfName;
                            code = _swBLGoodsCode;
                            return true;
                        }
                        else
                        {
                            // 戻す
                            code = _swBLGoodsCode;
                            return false;
                        }
                    }
                    return true;
                }
                catch
                {
                    // 戻す
                    code = _swBLGoodsCode;
                    return false;
                }
            }
            else
            {
                this._swBLGoodsCode = 0;
                this._swBLGoodsName = string.Empty;
                code = _swBLGoodsCode;
                return true;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        /// <summary>
        /// BLコード入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_BlGoodsCode_Enter(object sender, System.EventArgs e)
        {
            // BLコードが保存されていれば置き換え
            if (this._swBLGoodsCode > 0)
            {
                this.tEdit_BlGoodsCode.Text = this._swBLGoodsCode.ToString();
            }

            // 最大文字長を入力コードに調整
            //this.tEdit_BlGoodsCode.ExtEdit.Column = 5;
        }

        #endregion // BLコード

        #region メーカー

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// メーカー入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_MakerCd_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_MakerCd.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        try
        //        {
        //            // 入力値が変わっていた場合のみコード変換
        //            int makercode = int.Parse(inputValue);
        //            if (makercode != this._swGoodsMakerCd)
        //            {
        //                // 入力された値をプライベートレベルで保存
        //                this._swGoodsMakerCd = makercode;

        //                // コードから名称へ変換
        //                MakerUMnt makerInfo;
        //                int status = this._makerAcs.Read(out makerInfo, this._enterpriseCode, this._swGoodsMakerCd);
        //                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
        //                {
        //                    this._swGoodsMakerName = makerInfo.MakerName;
        //                }
        //            }

        //            // Leave時に名称に置き換え
        //            //this.tEdit_MakerCd.ExtEdit.Column = 40;
        //            this.tEdit_MakerCd.Text = this._swGoodsMakerName;
        //        }
        //        catch
        //        {
        //            // 文字が不正な場合は0を保存し、項目をクリア
        //            this._swGoodsMakerCd = 0;
        //            this.tEdit_MakerCd.Clear();
        //        }
        //    }
        //    else
        //    {
        //        // そうでなければ0を保存
        //        this._swGoodsMakerCd = 0;
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// メーカー名称取得
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        private bool ReadGoodsMakerName(out int code)
        {
            // 入力値を取得
            int inputValue;
            try
            {
                inputValue = Int32.Parse(this.tEdit_MakerCd.Text.Trim());
            }
            catch
            {
                inputValue = 0;
            }
            code = inputValue;

            // 空でなければ処理開始
            if (inputValue != 0)
            {
                try
                {
                    // 入力値が変わっていた場合のみコード変換
                    if (inputValue != this._swGoodsMakerCd)
                    {
                        // コードから名称へ変換
                        MakerUMnt makerInfo;
                        int status = this._makerAcs.Read(out makerInfo, this._enterpriseCode, inputValue);

                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            this._swGoodsMakerCd = inputValue;
                            //this._swGoodsMakerName = makerInfo.MakerName;// DEL 2010/08/05
                            this._swGoodsMakerName = makerInfo.MakerKanaName;// ADD 2010/08/05
                            code = _swGoodsMakerCd;
                            return true;
                        }
                        else
                        {
                            // 戻す
                            code = _swGoodsMakerCd;
                            return false;
                        }
                    }
                    return true;
                }
                catch
                {
                    // 戻す
                    code = _swGoodsMakerCd;
                    return false;
                }
            }
            else
            {
                this._swGoodsMakerCd = 0;
                this._swGoodsMakerName = string.Empty;
                code = _swGoodsMakerCd;
                return true;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        /// <summary>
        /// メーカー入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_MakerCd_Enter(object sender, System.EventArgs e)
        {
            // メーカーコードが保存されていれば置き換え
            if (this._swGoodsMakerCd > 0)
            {
                this.tEdit_MakerCd.Text = this._swGoodsMakerCd.ToString();
            }

            // 最大文字長を入力コードに調整
            //this.tEdit_MakerCd.ExtEdit.Column = 4;
        }

        #endregion // メーカー

        #region 販売区分
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 販売区分入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_SalesCode_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_SalesCode.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        try
        //        {
        //            // 入力値が変わっていた場合のみコード変換
        //            int salescode = int.Parse(inputValue);
        //            if (salescode != this._swSalesCode)
        //            {
        //                // 入力された値をプライベートレベルで保存
        //                this._swSalesCode = salescode;
        //                int userGuideDivCd_SalesCode = 71;  // 販売区分：71

        //                // コードから名称へ変換
        //                UserGdBd userGuideBdInfo;
        //                int status = this._userGuideAcs.ReadStaticMemory(out userGuideBdInfo, userGuideDivCd_SalesCode, this._swSalesCode);
        //                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
        //                {
        //                    this._swSalesName = userGuideBdInfo.GuideName;
        //                }
        //            }

        //            // Leave時に名称に置き換え
        //            this.tEdit_SalesCode.Text = this._swSalesName;
        //        }
        //        catch
        //        {
        //            // 文字が不正な場合は0を保存し、項目をクリア
        //            this._swSalesCode = 0;
        //            this.tEdit_SalesCode.Clear();
        //        }
        //    }
        //    else
        //    {
        //        // そうでなければ0を保存
        //        this._swSalesCode = 0;
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// 販売区分名称取得
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private bool ReadSalesCodeName(out int code)
        {
            // 入力値を取得
            int inputValue;
            try
            {
                inputValue = Int32.Parse(this.tEdit_SalesCode.Text.Trim());
            }
            catch
            {
                inputValue = 0;
            }
            code = inputValue;

            // 空でなければ処理開始
            if (inputValue != 0)
            {
                try
                {
                    // 入力値が変わっていた場合のみコード変換
                    if (inputValue != this._swSalesCode)
                    {
                        // コードから名称へ変換
                        int userGuideDivCd_SalesCode = 71;  // 販売区分：71

                        // コードから名称へ変換
                        UserGdBd userGuideBdInfo;
                        UserGuideAcsData userGuideAcsData = UserGuideAcsData.UserBodyData;
                        int status = this._userGuideAcs.ReadBody(out userGuideBdInfo, this._enterpriseCode, userGuideDivCd_SalesCode, inputValue, ref userGuideAcsData);

                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            this._swSalesCode = inputValue;
                            this._swSalesName = userGuideBdInfo.GuideName;
                            code = _swSalesCode;
                            return true;
                        }
                        else
                        {
                            // 戻す
                            code = _swSalesCode;
                            return false;
                        }
                    }
                    return true;
                }
                catch
                {
                    // 戻す
                    code = _swSalesCode;
                    return false;
                }
            }
            else
            {
                this._swSalesCode = 0;
                this._swSalesName = string.Empty;
                code = _swSalesCode;
                return true;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        /// <summary>
        /// 販売区分入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_SalesCode_Enter(object sender, System.EventArgs e)
        {
            // 販売区分コードが保存されていれば置き換え
            if (this._swSalesCode > 0)
            {
                this.tEdit_SalesCode.Text = this._swSalesCode.ToString();
            }
        }

        #endregion // 販売区分

        #region 自社分類

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 自社分類入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_EnterpriseGanreCode_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_EnterpriseGanreCode.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        try
        //        {
        //            // 入力値が変わっていた場合のみコード変換
        //            int enterpriseganrecode = int.Parse(inputValue);
        //            if (enterpriseganrecode != this._swSalesCode)
        //            {
        //                // 入力された値をプライベートレベルで保存
        //                this._swEnterpriseGanreCode = enterpriseganrecode;
        //                int userGuideDivCd_EnterpriseGanreCode = 41;  // 自社分類：41

        //                // コードから名称へ変換
        //                UserGdBd userGuideBdInfo;
        //                int status = this._userGuideAcs.ReadStaticMemory(out userGuideBdInfo, userGuideDivCd_EnterpriseGanreCode, this._swEnterpriseGanreCode);
        //                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
        //                {
        //                    this._swEnterpriseGanreName = userGuideBdInfo.GuideName;
        //                }
        //            }

        //            // Leave時に名称に置き換え
        //            this.tEdit_EnterpriseGanreCode.Text = this._swEnterpriseGanreName;
        //        }
        //        catch
        //        {
        //            // 文字が不正な場合は0を保存し、項目をクリア
        //            this._swEnterpriseGanreCode = 0;
        //            this.tEdit_EnterpriseGanreCode.Clear();
        //        }
        //    }
        //    else
        //    {
        //        // そうでなければ0を保存
        //        this._swEnterpriseGanreCode = 0;
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// 商品区分（旧:自社分類）名称取得
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private bool ReadEnterpriseGanreName(out int code)
        {
            // 入力値を取得
            int inputValue;
            try
            {
                inputValue = Int32.Parse(this.tEdit_EnterpriseGanreCode.Text.Trim());
            }
            catch
            {
                inputValue = 0;
            }
            code = inputValue;

            // 空でなければ処理開始
            if (inputValue != 0)
            {
                try
                {
                    // 入力値が変わっていた場合のみコード変換
                    if (inputValue != this._swEnterpriseGanreCode)
                    {
                        // コードから名称へ変換
                        int userGuideDivCd_EnterpriseGanreCode = 41;  // 自社分類：41

                        // コードから名称へ変換
                        UserGdBd userGuideBdInfo;
                        UserGuideAcsData userGuideAcsData = UserGuideAcsData.UserBodyData;
                        int status = this._userGuideAcs.ReadBody(out userGuideBdInfo, this._enterpriseCode, userGuideDivCd_EnterpriseGanreCode, inputValue, ref userGuideAcsData);

                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            this._swEnterpriseGanreCode = inputValue;
                            this._swEnterpriseGanreName = userGuideBdInfo.GuideName;
                            code = _swEnterpriseGanreCode;
                            return true;
                        }
                        else
                        {
                            // 戻す
                            code = _swEnterpriseGanreCode;
                            return false;
                        }
                    }
                    return true;
                }
                catch
                {
                    // 戻す
                    code = _swEnterpriseGanreCode;
                    return false;
                }
            }
            else
            {
                this._swEnterpriseGanreCode = 0;
                this._swEnterpriseGanreName = string.Empty;
                code = _swEnterpriseGanreCode;
                return true;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        /// <summary>
        /// 自社分類入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_EnterpriseGanreCode_Enter(object sender, System.EventArgs e)
        {
            // 自社分類コードが保存されていれば置き換え
            if (this._swEnterpriseGanreCode > 0)
            {
                this.tEdit_EnterpriseGanreCode.Text = this._swEnterpriseGanreCode.ToString();
            }
        }

        #endregion // 自社分類

        #region 倉庫

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 倉庫入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_WarehouseCd_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_WarehouseCd.Text.Trim();

        //    // 拠点コードを取得
        //    string sectioncode = this.tEdit_SectionCodeAllowZero.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        try
        //        {
        //            // 入力値が変わっていた場合のみコード変換
        //            if (inputValue != this._swWarehouseCd)
        //            {
        //                // 入力された値をプライベートレベルで保存
        //                this._swWarehouseCd = inputValue;

        //                // コードから名称へ変換
        //                Warehouse warehouseInfo;
        //                int status = this._warehouseAcs.Read(out warehouseInfo, this._enterpriseCode, sectioncode, this._swWarehouseCd);
        //                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
        //                {
        //                    this._swWarehouseName = warehouseInfo.WarehouseName;
        //                }
        //            }

        //            // Leave時に名称に置き換え
        //            this.tEdit_WarehouseCd.Text = this._swWarehouseName;
        //        }
        //        catch
        //        {
        //            // 文字が不正な場合は空文字を保存し、項目をクリア
        //            this._swWarehouseCd = string.Empty;
        //            this.tEdit_WarehouseCd.Clear();
        //        }
        //    }
        //    else
        //    {
        //        // そうでなければ空文字を保存
        //        this._swWarehouseCd = string.Empty;
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// 倉庫名称取得
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private bool ReadWarehouseName(out string code)
        {
            // 入力値を取得
            string inputValue = this.tEdit_WarehouseCd.Text.Trim();
            code = inputValue;

            // 空でなければ処理開始
            if (!string.IsNullOrEmpty(inputValue))
            {
                try
                {
                    // 入力値が変わっていた場合のみコード変換
                    if (inputValue != this._swWarehouseCd)
                    {
                        // コードから名称へ変換
                        Warehouse warehouseInfo;
                        int status = this._warehouseAcs.Read(out warehouseInfo, this._enterpriseCode, string.Empty, inputValue);
                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            this._swWarehouseCd = inputValue;
                            this._swWarehouseName = warehouseInfo.WarehouseName;
                            code = _swWarehouseCd;
                            return true;
                        }
                        else
                        {
                            // 戻す
                            code = uiSetControl1.GetZeroPadCanceledText(tEdit_WarehouseCd.Name, _swWarehouseCd);
                            return false;
                        }
                    }
                    return true;
                }
                catch
                {
                    // 戻す
                    code = uiSetControl1.GetZeroPadCanceledText(tEdit_WarehouseCd.Name, _swWarehouseCd);
                    return false;
                }
            }
            else
            {
                this._swWarehouseCd = string.Empty;
                this._swWarehouseName = string.Empty;
                code = _swWarehouseCd;
                return true;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        /// <summary>
        /// 倉庫入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_WarehouseCd_Enter(object sender, System.EventArgs e)
        {
            // 倉庫コードが保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._swWarehouseCd))
            {
                this.tEdit_WarehouseCd.Text = this._swWarehouseCd.Trim();
            }
        }

        #endregion // 倉庫

        #region 仕入先

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 仕入先入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_SupplierCd_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_SupplierCd.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        try
        //        {
        //            // 入力値が変わっていた場合のみコード変換
        //            int suppliercd = int.Parse(inputValue);
        //            if (suppliercd != this._swSupplierCd)
        //            {
        //                // 入力された値をプライベートレベルで保存
        //                this._swSupplierCd = suppliercd;

        //                // コードから名称へ変換
        //                Supplier supplierInfo;
        //                int status = this._supplierAcs.Read(out supplierInfo, this._enterpriseCode, this._swSupplierCd);
        //                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
        //                {
        //                    this._swSupplierName = supplierInfo.SupplierSnm;
        //                }
        //            }

        //            // Leave時に名称に置き換え
        //            this.tEdit_SupplierCd.Text = this._swSupplierName;
        //        }
        //        catch
        //        {
        //            // 文字が不正な場合は0を保存し、項目をクリア
        //            this._swSupplierCd = 0;
        //            this.tEdit_SupplierCd.Clear();
        //        }
        //    }
        //    else
        //    {
        //        // そうでなければ0を保存
        //        this._swSupplierCd = 0;
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// 仕入先名称取得
        /// </summary>
        /// <param name="code"></param>
        /// <returns></returns>
        private bool ReadSupplierName(out int code)
        {
            // 入力値を取得
            int inputValue;
            try
            {
                inputValue = Int32.Parse(this.tEdit_SupplierCd.Text.Trim());
            }
            catch
            {
                inputValue = 0;
            }
            code = inputValue;

            // 空でなければ処理開始
            if (inputValue != 0)
            {
                try
                {
                    // 入力値が変わっていた場合のみコード変換
                    if (inputValue != this._swSupplierCd)
                    {
                        // コードから名称へ変換
                        Supplier supplierInfo;
                        int status = this._supplierAcs.Read(out supplierInfo, this._enterpriseCode, inputValue);
                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            this._swSupplierCd = inputValue;
                            // -------------UPD 2009/12/28-------------->>>>>
                            //this._swSupplierName = supplierInfo.SupplierSnm;
                            // 仕入先マスタ.仕入先略称が入力されていた場合には仕入先マスタ.仕入先略称を表示
                            if (!string.IsNullOrEmpty(supplierInfo.SupplierSnm))
                            {
                                this._swSupplierName = supplierInfo.SupplierSnm;
                            }
                            // 仕入先マスタ.仕入先略称が未入力の場合には仕入先マスタ.仕入先名1を表示
                            else if (!string.IsNullOrEmpty(supplierInfo.SupplierNm1))
                            {
                                this._swSupplierName = supplierInfo.SupplierNm1;
                            }
                            // 仕入先マスタ.仕入先名称1が未入力の場合には仕入先マスタ.仕入先カナを表示
                            else
                            {
                                this._swSupplierName = supplierInfo.SupplierKana;
                            }
                            // -------------UPD 2009/12/28--------------<<<<<
                            code = _swSupplierCd;
                            return true;
                        }
                        else
                        {
                            // 戻す
                            code = _swSupplierCd;
                            return false;
                        }
                    }
                    return true;
                }
                catch
                {
                    // 戻す
                    code = _swSupplierCd;
                    return false;
                }
            }
            else
            {
                this._swSupplierCd = 0;
                this._swSupplierName = string.Empty;
                code = _swSupplierCd;
                return true;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        /// <summary>
        /// 仕入先入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_SupplierCd_Enter(object sender, System.EventArgs e)
        {
            // 仕入先コードが保存されていれば置き換え
            if (this._swSupplierCd > 0)
            {
                this.tEdit_SupplierCd.Text = this._swSupplierCd.ToString();
            }
        }

        #endregion // 仕入先

        #region 発注先

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 発注先入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_UOESupplierCd_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_UOESupplierCd.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        try
        //        {
        //            // 入力値が変わっていた場合のみコード変換
        //            int uoesuppliercd = int.Parse(inputValue);
        //            if (uoesuppliercd != this._swUOESupplierCd)
        //            {
        //                // 入力された値をプライベートレベルで保存
        //                this._swUOESupplierCd = uoesuppliercd;

        //                // コードから名称へ変換
        //                Supplier supplierInfo;
        //                int status = this._supplierAcs.Read(out supplierInfo, this._enterpriseCode, this._swUOESupplierCd);
        //                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
        //                {
        //                    this._swUOESupplierName = supplierInfo.SupplierSnm;
        //                }
        //            }

        //            // Leave時に名称に置き換え
        //            this.tEdit_UOESupplierCd.Text = this._swUOESupplierName;
        //        }
        //        catch
        //        {
        //            // 文字が不正な場合は0を保存し、項目をクリア
        //            this._swUOESupplierCd = 0;
        //            this.tEdit_UOESupplierCd.Clear();
        //        }
        //    }
        //    else
        //    {
        //        // そうでなければ0を保存
        //        this._swUOESupplierCd = 0;
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// 発注先名称取得処理
        /// </summary>
        /// <param name="code"></param>
        /// <returns></returns>
        private bool ReadUOESupplierName(out int code)
        {
            // 入力値を取得
            int inputValue;
            try
            {
                inputValue = Int32.Parse(this.tEdit_UOESupplierCd.Text.Trim());
            }
            catch
            {
                inputValue = 0;
            }
            code = inputValue;

            // 空でなければ処理開始
            if (inputValue != 0)
            {
                try
                {
                    // 入力値が変わっていた場合のみコード変換
                    if (inputValue != this._swUOESupplierCd)
                    {
                        // コードから名称へ変換
                        Supplier supplierInfo;
                        int status = this._supplierAcs.Read(out supplierInfo, this._enterpriseCode, inputValue);
                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            this._swUOESupplierCd = inputValue;
                            // -------------UPD 2010/01/29-------------->>>>>
                            //this._swUOESupplierName = supplierInfo.SupplierSnm;
                            // 仕入先マスタ.仕入先略称が入力されていた場合には仕入先マスタ.仕入先略称を表示
                            if (!string.IsNullOrEmpty(supplierInfo.SupplierSnm))
                            {
                                this._swUOESupplierName = supplierInfo.SupplierSnm;
                            }
                            // 仕入先マスタ.仕入先略称が未入力の場合には仕入先マスタ.仕入先名1を表示
                            else if (!string.IsNullOrEmpty(supplierInfo.SupplierNm1))
                            {
                                this._swUOESupplierName = supplierInfo.SupplierNm1;
                            }
                            // 仕入先マスタ.仕入先名称1が未入力の場合には仕入先マスタ.仕入先カナを表示
                            else
                            {
                                this._swUOESupplierName = supplierInfo.SupplierKana;
                            }
                            // -------------UPD 2010/01/29--------------<<<<<
                            code = _swUOESupplierCd;
                            return true;
                        }
                        else
                        {
                            // 戻す
                            code = _swUOESupplierCd;
                            return false;
                        }
                    }
                    return true;
                }
                catch
                {
                    // 戻す
                    code = _swUOESupplierCd;
                    return false;
                }
            }
            else
            {
                this._swUOESupplierCd = 0;
                this._swUOESupplierName = string.Empty;
                code = _swUOESupplierCd;
                return true;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        /// <summary>
        /// 発注先入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_UOESupplierCd_Enter(object sender, System.EventArgs e)
        {
            // 発注先コードが保存されていれば置き換え
            if (this._swUOESupplierCd > 0)
            {
                this.tEdit_UOESupplierCd.Text = this._swUOESupplierCd.ToString();
            }
        }

        #endregion // 発注先

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
        # region 納入先
        /// <summary>
        /// 納入先名称取得
        /// </summary>
        /// <param name="code"></param>
        /// <returns></returns>
        private bool ReadAddresseeName(out int code)
        {
            // 入力値を取得
            int inputValue;
            try
            {
                inputValue = Int32.Parse(this.tEdit_AddresseeCode.Text.Trim());
            }
            catch
            {
                inputValue = 0;
            }
            code = inputValue;

            // 空でなければ処理開始
            if (inputValue != 0)
            {
                try
                {
                    // 入力値が変わっていた場合のみコード変換
                    if (inputValue != this._swAddresseeCode)
                    {
                        // コードから名称へ変換
                        CustomerInfo customer;
                        int status = _customerInfoAcs.ReadDBData(this._enterpriseCode, inputValue, out customer);
                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            this._swAddresseeCode = inputValue;
                            this._swAddresseeName = customer.Name + customer.Name2;
                            code = _swAddresseeCode;
                            return true;
                        }
                        else
                        {
                            // 戻す
                            code = _swAddresseeCode;
                            return false;
                        }
                    }
                    return true;
                }
                catch
                {
                    // 戻す
                    code = _swAddresseeCode;
                    return false;
                }
            }
            else
            {
                this._swAddresseeCode = 0;
                this._swAddresseeName = string.Empty;
                code = _swAddresseeCode;
                return true;
            }
        }
        /// <summary>
        /// 納入先入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_AddresseeCode_Enter(object sender, EventArgs e)
        {
            // コードが保存されていれば置き換え
            if (this._swAddresseeCode > 0)
            {
                this.tEdit_AddresseeCode.Text = this._swAddresseeCode.ToString();
            }
        }
        # endregion
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
        # region 商品大分類
        /// <summary>
        /// 商品大分類名称取得
        /// </summary>
        /// <param name="code"></param>
        /// <returns></returns>
        private bool ReadGoodsLGroupName(out int code)
        {
            // 入力値を取得
            int inputValue;
            try
            {
                inputValue = Int32.Parse(this.tEdit_GoodsLGroup.Text.Trim());
            }
            catch
            {
                inputValue = 0;
            }
            code = inputValue;

            // 空でなければ処理開始
            if (inputValue != 0)
            {
                try
                {
                    // 入力値が変わっていた場合のみコード変換
                    if (inputValue != this._swGoodsLGroup)
                    {
                        // コードから名称へ変換

                        UserGdBdU userGdBd;
                        int status = _goodsAcs.GetGoodsLGroup(this._enterpriseCode, inputValue, out userGdBd);
                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            this._swGoodsLGroup = inputValue;
                            this._swGoodsLGroupName = userGdBd.GuideName;
                            code = _swGoodsLGroup;
                            return true;
                        }
                        else
                        {
                            // 戻す
                            code = _swGoodsLGroup;
                            return false;
                        }
                    }
                    return true;
                }
                catch
                {
                    // 戻す
                    code = _swGoodsLGroup;
                    return false;
                }
            }
            else
            {
                this._swGoodsLGroup = 0;
                this._swGoodsLGroupName = string.Empty;
                code = _swGoodsLGroup;
                return true;
            }
        }
        /// <summary>
        /// 棚番入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_GoodsLGroup_Enter(object sender, System.EventArgs e)
        {
            // コードが保存されていれば置き換え
            if (this._swGoodsLGroup > 0)
            {
                this.tEdit_GoodsLGroup.Text = this._swGoodsLGroup.ToString();
            }
        }
        # endregion

        # region 商品中分類
        /// <summary>
        /// 商品中分類名称取得
        /// </summary>
        /// <param name="code"></param>
        /// <returns></returns>
        private bool ReadGoodsMGroupName(out int code)
        {
            // 入力値を取得
            int inputValue;
            try
            {
                inputValue = Int32.Parse(this.tEdit_GoodsMGroup.Text.Trim());
            }
            catch
            {
                inputValue = 0;
            }
            code = inputValue;

            // 空でなければ処理開始
            if (inputValue != 0)
            {
                try
                {
                    // 入力値が変わっていた場合のみコード変換
                    if (inputValue != this._swGoodsMGroup)
                    {
                        // コードから名称へ変換
                        GoodsGroupU goodsMGroup;
                        int status = _goodsAcs.GetGoodsMGroup(this._enterpriseCode, inputValue, out goodsMGroup);
                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            this._swGoodsMGroup = inputValue;
                            this._swGoodsMGroupName = goodsMGroup.GoodsMGroupName;
                            code = _swGoodsMGroup;
                            return true;
                        }
                        else
                        {
                            // 戻す
                            code = _swGoodsMGroup;
                            return false;
                        }
                    }
                    return true;
                }
                catch
                {
                    // 戻す
                    code = _swGoodsMGroup;
                    return false;
                }
            }
            else
            {
                this._swGoodsMGroup = 0;
                this._swGoodsMGroupName = string.Empty;
                code = _swGoodsMGroup;
                return true;
            }
        }
        /// <summary>
        /// 商品中分類入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_GoodsMGroup_Enter(object sender, System.EventArgs e)
        {
            // コードが保存されていれば置き換え
            if (this._swGoodsMGroup > 0)
            {
                this.tEdit_GoodsMGroup.Text = this._swGoodsMGroup.ToString();
            }
        }
        # endregion
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

        // 以下の欄については、フォーカス移動時にあいまい条件の判定を行う

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        # region [あいまい検索用テキスト分解処理]
        /// <summary>
        /// あいまい検索用テキスト分解処理
        /// </summary>
        /// <param name="inputValue"></param>
        /// <param name="searchText"></param>
        /// <param name="fuzzyValue"></param>
        private void GetFuzzyInput(string inputValue, out string searchText, out int fuzzyValue)
        {
            if (!string.IsNullOrEmpty(inputValue))
            {
                fuzzyValue = 0;     // コンボボックスの値

                if (!inputValue.Contains("*"))
                {
                    // [*]なし（「と一致」）
                    fuzzyValue = CT_FUZZY_MATCHWITH;
                }
                else if (inputValue.StartsWith("*") && inputValue.EndsWith("*"))
                {
                    // [*]…[*]（「を含む」）
                    fuzzyValue = CT_FUZZY_INCLUDEWITH;
                }
                else if (inputValue.StartsWith("*"))
                {
                    // [*]…（「で終る」）
                    fuzzyValue = CT_FUZZY_ENDWITH;
                }
                else if (inputValue.EndsWith("*"))
                {
                    // …[*]（「で始る」）
                    fuzzyValue = CT_FUZZY_STARTWITH;
                }
                searchText = inputValue.Replace("*", ""); // [*]抜き文字列
            }
            else
            {
                // クリア
                searchText = string.Empty;
                fuzzyValue = 0;
            }
        }
        # endregion

        # region [あいまい検索用テキスト変換処理]
        /// <summary>
        /// あいまい検索用テキスト変換処理
        /// </summary>
        /// <param name="fuzzyValue"></param>
        /// <param name="searchValue"></param>
        /// <returns></returns>
        private string GetFuzzyInputOnChangeFuzzyValue(int fuzzyValue, string searchValue)
        {
            string fullValue = searchValue;

            switch (fuzzyValue)
            {
                // 完全一致
                case CT_FUZZY_MATCHWITH:
                default:
                    fullValue = searchValue;
                    break;
                // あいまい
                case CT_FUZZY_INCLUDEWITH:
                    fullValue = "*" + searchValue + "*";
                    break;
                // 後方一致
                case CT_FUZZY_ENDWITH:
                    fullValue = "*" + searchValue;
                    break;
                // 前方一致
                case CT_FUZZY_STARTWITH:
                    fullValue = searchValue + "*";
                    break;
            }

            return fullValue;
        }
        # endregion
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        #region 車種名称

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 車種名称入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_ModelFullName_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_ModelFullName.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        // [*]が入っているかどうか調査
        //        int targetIndex = inputValue.IndexOf("*");
        //        int comboValue = 0;     // コンボボックスの値

        //        if (targetIndex == -1)
        //        {
        //            // [*]なし（「と一致」）
        //            comboValue = CT_FUZZY_MATCHWITH;
        //        }
        //        else if (inputValue.StartsWith("*") && inputValue.EndsWith("*"))
        //        {
        //            // [*]…[*]（「を含む」）
        //            comboValue = CT_FUZZY_INCLUDEWITH;
        //        }
        //        else if (inputValue.EndsWith("*"))
        //        {
        //            // …[*]（「で終る」）
        //            comboValue = CT_FUZZY_ENDWITH;
        //        }
        //        else if (inputValue.StartsWith("*"))
        //        {
        //            // [*]…（「で始る」）
        //            comboValue = CT_FUZZY_STARTWITH;
        //        }

        //        // 文字列整理
        //        this._srModelFullName = inputValue;                    // 検索文字列を保存
        //        this._srRvModelFullName = inputValue.Replace("*", ""); // [*]抜き文字列

        //        // 画面を更新（Leave時には*抜き文字列を表示）
        //        this.tEdit_ModelFullName.Text = this._srRvModelFullName;
        //        this.tComboEditor_ModelFullNameFuzzy.Value = comboValue;       // コンボボックスを調整
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

        /// <summary>
        /// 車種名称入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_ModelFullName_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りの車種名称が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srModelFullName))
            {
                this.tEdit_ModelFullName.Text = this._srModelFullName;
            }
        }

        #endregion // 車種名称

        #region 型式

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 型式入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_FullModel_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_FullModel.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        // [*]が入っているかどうか調査
        //        int targetIndex = inputValue.IndexOf("*");
        //        int comboValue = 0;     // コンボボックスの値

        //        if (targetIndex == -1)
        //        {
        //            // [*]なし（「と一致」）
        //            comboValue = CT_FUZZY_MATCHWITH;
        //        }
        //        else if (inputValue.StartsWith("*") && inputValue.EndsWith("*"))
        //        {
        //            // [*]…[*]（「を含む」）
        //            comboValue = CT_FUZZY_INCLUDEWITH;
        //        }
        //        else if (inputValue.EndsWith("*"))
        //        {
        //            // …[*]（「で終る」）
        //            comboValue = CT_FUZZY_ENDWITH;
        //        }
        //        else if (inputValue.StartsWith("*"))
        //        {
        //            // [*]…（「で始る」）
        //            comboValue = CT_FUZZY_STARTWITH;
        //        }

        //        // 文字列整理
        //        this._srFullModel = inputValue;                    // 検索文字列を保存
        //        this._srRvFullModel = inputValue.Replace("*", ""); // [*]抜き文字列

        //        // 画面を更新（Leave時には*抜き文字列を表示）
        //        this.tEdit_FullModel.Text = this._srRvFullModel;
        //        this.tComboEditor_FullModelFuzzy.Value = comboValue;       // コンボボックスを調整
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

        /// <summary>
        /// 型式入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_FullModel_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りの型式が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srFullModel))
            {
                this.tEdit_FullModel.Text = this._srFullModel;
            }
        }

        #endregion // 型式

        #region カラー名称

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// カラー名称入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_ColorName1_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_ColorName1.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        // [*]が入っているかどうか調査
        //        int targetIndex = inputValue.IndexOf("*");
        //        int comboValue = 0;     // コンボボックスの値

        //        if (targetIndex == -1)
        //        {
        //            // [*]なし（「と一致」）
        //            comboValue = CT_FUZZY_MATCHWITH;
        //        }
        //        else if (inputValue.StartsWith("*") && inputValue.EndsWith("*"))
        //        {
        //            // [*]…[*]（「を含む」）
        //            comboValue = CT_FUZZY_INCLUDEWITH;
        //        }
        //        else if (inputValue.EndsWith("*"))
        //        {
        //            // …[*]（「で終る」）
        //            comboValue = CT_FUZZY_ENDWITH;
        //        }
        //        else if (inputValue.StartsWith("*"))
        //        {
        //            // [*]…（「で始る」）
        //            comboValue = CT_FUZZY_STARTWITH;
        //        }

        //        // 文字列整理
        //        this._srColorName1 = inputValue;                    // 検索文字列を保存
        //        this._srRvColorName1 = inputValue.Replace("*", ""); // [*]抜き文字列

        //        // 画面を更新（Leave時には*抜き文字列を表示）
        //        this.tEdit_ColorName1.Text = this._srRvColorName1;
        //        this.tComboEditor_ColorName1Fuzzy.Value = comboValue;       // コンボボックスを調整
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

        /// <summary>
        /// カラー名称入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_ColorName1_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りのカラー名称が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srColorName1))
            {
                this.tEdit_ColorName1.Text = this._srColorName1;
            }
        }

        #endregion // カラー名称

        #region トリム名称

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// トリム名称入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_TrimName_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_TrimName.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        // [*]が入っているかどうか調査
        //        int targetIndex = inputValue.IndexOf("*");
        //        int comboValue = 0;     // コンボボックスの値

        //        if (targetIndex == -1)
        //        {
        //            // [*]なし（「と一致」）
        //            comboValue = CT_FUZZY_MATCHWITH;
        //        }
        //        else if (inputValue.StartsWith("*") && inputValue.EndsWith("*"))
        //        {
        //            // [*]…[*]（「を含む」）
        //            comboValue = CT_FUZZY_INCLUDEWITH;
        //        }
        //        else if (inputValue.EndsWith("*"))
        //        {
        //            // …[*]（「で終る」）
        //            comboValue = CT_FUZZY_ENDWITH;
        //        }
        //        else if (inputValue.StartsWith("*"))
        //        {
        //            // [*]…（「で始る」）
        //            comboValue = CT_FUZZY_STARTWITH;
        //        }

        //        // 文字列整理
        //        this._srTrimName = inputValue;                    // 検索文字列を保存
        //        this._srRvTrimName = inputValue.Replace("*", ""); // [*]抜き文字列

        //        // 画面を更新（Leave時には*抜き文字列を表示）
        //        this.tEdit_TrimName.Text = this._srRvTrimName;
        //        this.tComboEditor_TrimNameFuzzy.Value = comboValue;       // コンボボックスを調整
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

        /// <summary>
        /// トリム名称入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_TrimName_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りのトリム名称が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srTrimName))
            {
                this.tEdit_TrimName.Text = this._srTrimName;
            }
        }

        #endregion // トリム名称

        #region 備考１

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 備考１入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_SlipNote_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_SlipNote.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        // [*]が入っているかどうか調査
        //        int targetIndex = inputValue.IndexOf("*");
        //        int comboValue = 0;     // コンボボックスの値

        //        if (targetIndex == -1)
        //        {
        //            // [*]なし（「と一致」）
        //            comboValue = CT_FUZZY_MATCHWITH;
        //        }
        //        else if (inputValue.StartsWith("*") && inputValue.EndsWith("*"))
        //        {
        //            // [*]…[*]（「を含む」）
        //            comboValue = CT_FUZZY_INCLUDEWITH;
        //        }
        //        else if (inputValue.EndsWith("*"))
        //        {
        //            // …[*]（「で終る」）
        //            comboValue = CT_FUZZY_ENDWITH;
        //        }
        //        else if (inputValue.StartsWith("*"))
        //        {
        //            // [*]…（「で始る」）
        //            comboValue = CT_FUZZY_STARTWITH;
        //        }

        //        // 文字列整理
        //        this._srSlipNote = inputValue;                    // 検索文字列を保存
        //        this._srRvSlipNote = inputValue.Replace("*", ""); // [*]抜き文字列

        //        // 画面を更新（Leave時には*抜き文字列を表示）
        //        this.tEdit_SlipNote.Text = this._srRvSlipNote;
        //        this.tComboEditor_SlipNoteFuzzy.Value = comboValue;       // コンボボックスを調整
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

        /// <summary>
        /// 備考１入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_SlipNote_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りの備考１が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srSlipNote))
            {
                this.tEdit_SlipNote.Text = this._srSlipNote;
            }
        }
        // --- ADD 2009/10/22 ----->>>>>
        /// <summary>
        /// 管理番号入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_CarMngCode_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りの管理番号が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srCarMngCode))
            {
                this.tEdit_CarMngCode.Text = this._srCarMngCode;
            }
        }
        // --- ADD 2009/10/22 -----<<<<<

        #endregion // 備考１

        #region 備考２

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 備考２入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_SlipNote2_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_SlipNote2.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        // [*]が入っているかどうか調査
        //        int targetIndex = inputValue.IndexOf("*");
        //        int comboValue = 0;     // コンボボックスの値

        //        if (targetIndex == -1)
        //        {
        //            // [*]なし（「と一致」）
        //            comboValue = CT_FUZZY_MATCHWITH;
        //        }
        //        else if (inputValue.StartsWith("*") && inputValue.EndsWith("*"))
        //        {
        //            // [*]…[*]（「を含む」）
        //            comboValue = CT_FUZZY_INCLUDEWITH;
        //        }
        //        else if (inputValue.EndsWith("*"))
        //        {
        //            // …[*]（「で終る」）
        //            comboValue = CT_FUZZY_ENDWITH;
        //        }
        //        else if (inputValue.StartsWith("*"))
        //        {
        //            // [*]…（「で始る」）
        //            comboValue = CT_FUZZY_STARTWITH;
        //        }

        //        // 文字列整理
        //        this._srSlipNote2 = inputValue;                    // 検索文字列を保存
        //        this._srRvSlipNote2 = inputValue.Replace("*", ""); // [*]抜き文字列

        //        // 画面を更新（Leave時には*抜き文字列を表示）
        //        this.tEdit_SlipNote2.Text = this._srRvSlipNote2;
        //        this.tComboEditor_SlipNote2Fuzzy.Value = comboValue;       // コンボボックスを調整
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

        /// <summary>
        /// 備考２入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_SlipNote2_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りの備考２が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srSlipNote2))
            {
                this.tEdit_SlipNote2.Text = this._srSlipNote2;
            }
        }

        #endregion // 備考２

        #region 備考３

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 備考３入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_SlipNote3_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_SlipNote3.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        // [*]が入っているかどうか調査
        //        int targetIndex = inputValue.IndexOf("*");
        //        int comboValue = 0;     // コンボボックスの値

        //        if (targetIndex == -1)
        //        {
        //            // [*]なし（「と一致」）
        //            comboValue = CT_FUZZY_MATCHWITH;
        //        }
        //        else if (inputValue.StartsWith("*") && inputValue.EndsWith("*"))
        //        {
        //            // [*]…[*]（「を含む」）
        //            comboValue = CT_FUZZY_INCLUDEWITH;
        //        }
        //        else if (inputValue.EndsWith("*"))
        //        {
        //            // …[*]（「で終る」）
        //            comboValue = CT_FUZZY_ENDWITH;
        //        }
        //        else if (inputValue.StartsWith("*"))
        //        {
        //            // [*]…（「で始る」）
        //            comboValue = CT_FUZZY_STARTWITH;
        //        }

        //        // 文字列整理
        //        this._srSlipNote3 = inputValue;                    // 検索文字列を保存
        //        this._srRvSlipNote3 = inputValue.Replace("*", ""); // [*]抜き文字列

        //        // 画面を更新（Leave時には*抜き文字列を表示）
        //        this.tEdit_SlipNote2.Text = this._srRvSlipNote3;
        //        this.tComboEditor_SlipNote3Fuzzy.Value = comboValue;       // コンボボックスを調整
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        /// <summary>
        /// 備考３入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_SlipNote3_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りの備考３が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srSlipNote3))
            {
                this.tEdit_SlipNote3.Text = this._srSlipNote3;
            }
        }

        #endregion // 備考３

        #region UOEリマーク1
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// UOEリマーク１入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_UoeRemark1_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_UoeRemark1.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        // [*]が入っているかどうか調査
        //        int targetIndex = inputValue.IndexOf("*");
        //        int comboValue = 0;     // コンボボックスの値

        //        if (targetIndex == -1)
        //        {
        //            // [*]なし（「と一致」）
        //            comboValue = CT_FUZZY_MATCHWITH;
        //        }
        //        else if (inputValue.StartsWith("*") && inputValue.EndsWith("*"))
        //        {
        //            // [*]…[*]（「を含む」）
        //            comboValue = CT_FUZZY_INCLUDEWITH;
        //        }
        //        else if (inputValue.EndsWith("*"))
        //        {
        //            // …[*]（「で終る」）
        //            comboValue = CT_FUZZY_ENDWITH;
        //        }
        //        else if (inputValue.StartsWith("*"))
        //        {
        //            // [*]…（「で始る」）
        //            comboValue = CT_FUZZY_STARTWITH;
        //        }

        //        // 文字列整理
        //        this._srUOERemark1 = inputValue;                    // 検索文字列を保存
        //        this._srRvUOERemark1 = inputValue.Replace("*", ""); // [*]抜き文字列

        //        // 画面を更新（Leave時には*抜き文字列を表示）
        //        this.tEdit_UoeRemark1.Text = this._srRvUOERemark1;
        //        this.tComboEditor_UoeRemark1Fuzzy.Value = comboValue;       // コンボボックスを調整
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

        /// <summary>
        /// UOEリマーク１入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_UoeRemark1_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りのUOEリマーク１が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srUOERemark1))
            {
                this.tEdit_UoeRemark1.Text = this._srUOERemark1;
            }
        }

        #endregion // UOEリマーク1

        #region UOEリマーク2
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// UOEリマーク2入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_UoeRemark2_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_UoeRemark2.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        // [*]が入っているかどうか調査
        //        int targetIndex = inputValue.IndexOf("*");
        //        int comboValue = 0;     // コンボボックスの値

        //        if (targetIndex == -1)
        //        {
        //            // [*]なし（「と一致」）
        //            comboValue = CT_FUZZY_MATCHWITH;
        //        }
        //        else if (inputValue.StartsWith("*") && inputValue.EndsWith("*"))
        //        {
        //            // [*]…[*]（「を含む」）
        //            comboValue = CT_FUZZY_INCLUDEWITH;
        //        }
        //        else if (inputValue.EndsWith("*"))
        //        {
        //            // …[*]（「で終る」）
        //            comboValue = CT_FUZZY_ENDWITH;
        //        }
        //        else if (inputValue.StartsWith("*"))
        //        {
        //            // [*]…（「で始る」）
        //            comboValue = CT_FUZZY_STARTWITH;
        //        }

        //        // 文字列整理
        //        this._srUOERemark2 = inputValue;                    // 検索文字列を保存
        //        this._srRvUOERemark2 = inputValue.Replace("*", ""); // [*]抜き文字列

        //        // 画面を更新（Leave時には*抜き文字列を表示）
        //        this.tEdit_UoeRemark2.Text = this._srRvUOERemark2;
        //        this.tComboEditor_UoeRemark2Fuzzy.Value = comboValue;       // コンボボックスを調整
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

        /// <summary>
        /// UOEリマーク２入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_UoeRemark2_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りのUOEリマーク１が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srUOERemark2))
            {
                this.tEdit_UoeRemark2.Text = this._srUOERemark2;
            }
        }

        #endregion // UOEリマーク2

        #region 品名
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 品名入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_GoodsName_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_GoodsName.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        // [*]が入っているかどうか調査
        //        int targetIndex = inputValue.IndexOf("*");
        //        int comboValue = 0;     // コンボボックスの値

        //        if (targetIndex == -1)
        //        {
        //            // [*]なし（「と一致」）
        //            comboValue = CT_FUZZY_MATCHWITH;
        //        }
        //        else if (inputValue.StartsWith("*") && inputValue.EndsWith("*"))
        //        {
        //            // [*]…[*]（「を含む」）
        //            comboValue = CT_FUZZY_INCLUDEWITH;
        //        }
        //        else if (inputValue.EndsWith("*"))
        //        {
        //            // …[*]（「で終る」）
        //            comboValue = CT_FUZZY_ENDWITH;
        //        }
        //        else if (inputValue.StartsWith("*"))
        //        {
        //            // [*]…（「で始る」）
        //            comboValue = CT_FUZZY_STARTWITH;
        //        }

        //        // 文字列整理
        //        this._srGoodsName = inputValue;                    // 検索文字列を保存
        //        this._srRvGoodsName = inputValue.Replace("*", ""); // [*]抜き文字列

        //        // 画面を更新（Leave時には*抜き文字列を表示）
        //        this.tEdit_GoodsName.Text = this._srRvGoodsName;
        //        this.tComboEditor_GoodsNameFuzzy.Value = comboValue;       // コンボボックスを調整
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
        /// <summary>
        /// 品名入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_GoodsName_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りの品名が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srGoodsName))
            {
                this.tEdit_GoodsName.Text = this._srGoodsName;
            }
        }

        #endregion // 品名

        #region 品番
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 品番入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_GoodsNo_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_GoodsNo.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        // [*]が入っているかどうか調査
        //        int targetIndex = inputValue.IndexOf("*");
        //        int comboValue = 0;     // コンボボックスの値

        //        if (targetIndex == -1)
        //        {
        //            // [*]なし（「と一致」）
        //            comboValue = CT_FUZZY_MATCHWITH;
        //        }
        //        else if (inputValue.StartsWith("*") && inputValue.EndsWith("*"))
        //        {
        //            // [*]…[*]（「を含む」）
        //            comboValue = CT_FUZZY_INCLUDEWITH;
        //        }
        //        else if (inputValue.EndsWith("*"))
        //        {
        //            // …[*]（「で終る」）
        //            comboValue = CT_FUZZY_ENDWITH;
        //        }
        //        else if (inputValue.StartsWith("*"))
        //        {
        //            // [*]…（「で始る」）
        //            comboValue = CT_FUZZY_STARTWITH;
        //        }

        //        // 文字列整理
        //        this._srGoodsNo = inputValue;                    // 検索文字列を保存
        //        this._srRvGoodsNo = inputValue.Replace("*", ""); // [*]抜き文字列

        //        // 画面を更新（Leave時には*抜き文字列を表示）
        //        this.tEdit_GoodsNo.Text = this._srRvGoodsNo;
        //        this.tComboEditor_GoodsNoFuzzy.Value = comboValue;       // コンボボックスを調整
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

        /// <summary>
        /// 品番入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_GoodsNo_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りの品番が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srGoodsNo))
            {
                this.tEdit_GoodsNo.Text = this._srGoodsNo;
            }
        }

        #endregion // 品番

        #region 明細備考

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
        ///// <summary>
        ///// 明細備考入力欄Leaveイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tEdit_DtlNote_Leave(object sender, EventArgs e)
        //{
        //    // 入力値を取得
        //    string inputValue = this.tEdit_DtlNote.Text.Trim();

        //    // 空でなければ処理開始
        //    if (!string.IsNullOrEmpty(inputValue))
        //    {
        //        // [*]が入っているかどうか調査
        //        int targetIndex = inputValue.IndexOf("*");
        //        int comboValue = 0;     // コンボボックスの値

        //        if (targetIndex == -1)
        //        {
        //            // [*]なし（「と一致」）
        //            comboValue = CT_FUZZY_MATCHWITH;
        //        }
        //        else if (inputValue.StartsWith("*") && inputValue.EndsWith("*"))
        //        {
        //            // [*]…[*]（「を含む」）
        //            comboValue = CT_FUZZY_INCLUDEWITH;
        //        }
        //        else if (inputValue.EndsWith("*"))
        //        {
        //            // …[*]（「で終る」）
        //            comboValue = CT_FUZZY_ENDWITH;
        //        }
        //        else if (inputValue.StartsWith("*"))
        //        {
        //            // [*]…（「で始る」）
        //            comboValue = CT_FUZZY_STARTWITH;
        //        }

        //        // 文字列整理
        //        this._srDtlNote = inputValue;                    // 検索文字列を保存
        //        this._srRvDtlNote = inputValue.Replace("*", ""); // [*]抜き文字列

        //        // 画面を更新（Leave時には*抜き文字列を表示）
        //        this.tEdit_DtlNote.Text = this._srRvDtlNote;
        //        this.tComboEditor_DtlNoteFuzzy.Value = comboValue;       // コンボボックスを調整
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

        /// <summary>
        /// 明細備考入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_DtlNote_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りの明細備考が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srDtlNote))
            {
                this.tEdit_DtlNote.Text = this._srDtlNote;
            }
        }

        #endregion // 明細備考

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
        # region [棚番]
        /// <summary>
        /// 棚番入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tEdit_WarehouseShelfNo_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りの棚番が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srWarehouseShelfNo))
            {
                this.tEdit_WarehouseShelfNo.Text = this._srWarehouseShelfNo;
            }
        }
        # endregion
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

        #region 削除指定区分

        /// <summary>
        /// 削除指定区分Leaveイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tComboEditor_DeleteFlag_Leave(object sender, EventArgs e)
        {
            // 削除区分を保存(初期値は0)
            this._logicalDelDiv = (int)this.tComboEditor_DeleteFlag.SelectedItem.DataValue;
        }

        /// <summary>
        /// 削除指定区分Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tComboEditor_DeleteFlag_Enter(object sender, System.EventArgs e)
        {
            // 削除区分を設定
            this.tComboEditor_DeleteFlag.Value = this._logicalDelDiv;
        }

        #endregion // 削除指定区分

        #region 指定備考情報制御処理
        /// <summary>
        /// 備考コード名称取得
        /// </summary>
        /// <param name="noteGuideDivCode">備考区分</param>
        /// <param name="noteGuideCode">備考コード</param>
        /// <param name="noteGuideName">備考名称</param>
        /// <remarks>
        /// <br>Note		: 備考コード名称取得を行う。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2010/01/29</br>
        /// </remarks>
        private int ReadSlipNoteName(int noteGuideDivCode, int noteGuideCode, out string noteGuideName)
        {
            int status = (int)ConstantManagement.MethodResult.ctFNC_NORMAL;
            noteGuideName = string.Empty;
            try
            {
                // コードから名称へ変換
                NoteGuidBd noteGuidBd;
                status = _noteGuidAcs.Read(out noteGuidBd, this._enterpriseCode, noteGuideDivCode, noteGuideCode);
                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                {
                    //if (noteGuidBd != null)// DEL By 孫東響 2013/02/28 For Redmine#34811②
                    if (noteGuidBd != null && noteGuidBd.LogicalDeleteCode == 0)// ADD By 孫東響 2013/02/28 For Redmine#34811②
                    {
                        noteGuideName = noteGuidBd.NoteGuideName.Trim();
                    }
                    else
                    {
                        status = (int)ConstantManagement.MethodResult.ctFNC_NO_RETURN;
                    }
                }
            }
            catch
            {
                status = (int)ConstantManagement.MethodResult.ctFNC_NO_RETURN;
            }
            return status;
        }
        #endregion // 指定備考情報制御処理
        // ADD 2012/03/29 gezh Redmine#29149 --------->>>>>
        #region 指定販売区分制御処理
        /// <summary>
        /// 販売区分名称取得
        /// </summary>
        /// <param name="salesCode">販売区分コード</param>
        /// <param name="noteGuideName">販売区分名称</param>
        /// <remarks>
        /// <br>Note		: 販売区分名称取得を行う。</br>
        /// <br>Programmer	: gezh</br>
        /// <br>Date		: 2012/03/29</br>
        /// </remarks>
        private bool ReadSalesCodeName(int salesCode, out string guidName)
        {
            // 空でなければ処理開始
            if (salesCode != 0)
            {
                try
                {
                    // コードから名称へ変換
                    int userGuideDivCd_SalesCode = 71;  // 販売区分：71

                    // コードから名称へ変換
                    UserGdBd userGuideBdInfo;
                    UserGuideAcsData userGuideAcsData = UserGuideAcsData.UserBodyData;
                    int status = this._userGuideAcs.ReadBody(out userGuideBdInfo, this._enterpriseCode, userGuideDivCd_SalesCode, salesCode, ref userGuideAcsData);

                    if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                    {
                        guidName = userGuideBdInfo.GuideName;
                        return true;
                    }
                    else
                    {
                        // 戻す
                        guidName = string.Empty;
                        return false;
                    }
                }
                catch
                {
                    // 戻す
                    guidName = string.Empty;
                    return false;
                }
            }
            else
            {
                guidName = string.Empty;
                return true;
            }
        }
        #endregion
        // ADD 2012/03/29 gezh Redmine#29149 ---------<<<<<
        #region 指定返品理由情報制御処理
        /// <summary>
        /// 返品理由コード名称取得
        /// </summary>
        /// <param name="retGoodsReasonDivCode">返品理由区分</param>
        /// <param name="retGoodsReasonCode">返品理由コード</param>
        /// <param name="retGoodsReasonDivName">返品理由名称</param>
        /// <remarks>
        /// <br>Note		: 返品理由コード名称取得を行う。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2010/01/29</br>
        /// </remarks>
        private int ReadRetGoodsReasonName(int retGoodsReasonDivCode, int retGoodsReasonCode, out string retGoodsReasonDivName)
        {
            int status = (int)ConstantManagement.MethodResult.ctFNC_NORMAL;
            retGoodsReasonDivName = string.Empty;
            try
            {
                // コードから名称へ変換
                UserGdBd userGuideBdInfo;
                UserGuideAcsData userGuideAcsData = UserGuideAcsData.UserBodyData;
                status = this._userGuideAcs.ReadBody(out userGuideBdInfo, this._enterpriseCode, retGoodsReasonDivCode, retGoodsReasonCode, ref userGuideAcsData);
                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                {
                    if (userGuideBdInfo != null)
                    {
                        retGoodsReasonDivName = userGuideBdInfo.GuideName.Trim();
                    }
                    else
                    {
                        status = (int)ConstantManagement.MethodResult.ctFNC_NO_RETURN;
                    }
                }
            }
            catch
            {
                status = (int)ConstantManagement.MethodResult.ctFNC_NO_RETURN;
            }
            return status;
        }
        #endregion // 指定返品理由情報制御処理

        /// <summary>
        /// tEdit_rs_ReturnReason_Leave
        /// </summary>
        /// <param name="sender">sender</param>
        /// <param name="e">e</param>
        /// <remarks>
        /// <br>Note		: tEdit_rs_ReturnReason_Leaveを行う。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2010/01/29</br>
        /// </remarks>
        private void tEdit_rs_ReturnReason_Leave(object sender, EventArgs e)
        {
            //返品理由を手入力で変更した場合には、返品理由コードをクリアする。
            if (!this.tEdit_rs_ReturnReason.Text.Equals(this._retGoodsReason))
            {
                this.tNedit_RetGoodsReason.Text = string.Empty;
                this._prevInputValue.RetGoodsReasonCd = 0;
                this._prevInputValue.RetGoodsReasonName = this.tEdit_rs_ReturnReason.Text.Trim();
            }
        }

        // ---------DEL 2013/03/25---------->>>>>
        //// ---------ADD 2010/08/05-------->>>>>
        //#region [車台番号]
        ///// <summary>
        ///// 車台番号入力欄Enterイベント
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void tNedit_SearchFrameNo_Enter(object sender, System.EventArgs e)
        //{
        //    // 編集開始時に[*]入りの管理番号が保存されていれば置き換え
        //    if (!String.IsNullOrEmpty(this._srSearchFrameNo))
        //    {
        //        this.tNedit_SearchFrameNo.Text = this._srSearchFrameNo;
        //    }
        //}
        //#endregion
        //// ---------ADD 2010/08/05--------<<<<<
        // ---------DEL 2013/03/25----------<<<<<
        // ---------ADD 2013/03/25---------->>>>>
        #region [車台番号]
        /// <summary>
        /// 車台番号入力欄Enterイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note: SPK車台番号文字列対応に伴う車台番号(VINコード)による抽出を可能にする</br>
        /// <br>Programmer : FSI厚川 宏</br>
        /// <br>Date       : 2013/03/25</br>
        private void tEdit_SearchFrameNo_Enter(object sender, System.EventArgs e)
        {
            // 編集開始時に[*]入りの管理番号が保存されていれば置き換え
            if (!String.IsNullOrEmpty(this._srSearchFrameNo))
            {
                this.tEdit_SearchFrameNo.Text = this._srSearchFrameNo;
            }
        }
        #endregion
        // ---------ADD 2013/03/25----------<<<<<
        #endregion // 入力欄イベント

        #region 拡張検索条件チェックボックスペイン縮小イベント

        /// <summary>
        /// 拡張検索条件の表示設定用ペインが非表示になったタイミングでのイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>このタイミングでチェックボックスを設定を取得し、表示項目を調整する</remarks>
        void ultraDockManager_PaneHidden(object sender, Infragistics.Win.UltraWinDock.PaneHiddenEventArgs e)
        {
            // 画面の更新を停止
            this.SuspendLayout();
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            DisplayExtraConditions();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

            // 画面更新を再開
            this.ResumeLayout();
        }

        /// <summary>
        /// 詳細条件の表示
        /// </summary>
        /// <br>Update Note : 2009/12/28 呉元嘯 PM.NS保守依頼④</br>
        /// <br>              明細表示行数を拡大させる件の修正</br>
        /// <br>Update Note : 2010/12/20 yangmj </br>
        /// <br>              抽出条件解除時の処理変更</br>
        /// <br>Update Note : 2011/11/28 楊洋</br>
        /// <br>得意先電子元帳/(BLﾊﾟｰﾂｵｰﾀﾞｰｼｽﾃﾑ)問合せ番号の追加</br>
        /// <br>Update Note : SPK車台番号文字列対応に伴う車台番号(VINコード)による抽出を可能にする</br>
        /// <br>Programmer  : FSI厚川 宏</br>
        /// <br>Date        : 2013/03/25</br>
        /// <br>Update Note : K2015/06/16 鮑晶</br>
        /// <br>管理番号    : 11101427-00</br>
        /// <br>            : メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
        /// <br>Update Note : 2016/01/21 脇田 靖之</br>
        /// <br>管理番号    : 11270007-00</br>
        /// <br>            : 仕掛一覧№2808 貸出受注対応</br>
        /// <br>            : ①検索条件に「出荷状況」項目を追加</br>
        /// <br>            : ②明細表示に計上数、未計上数項目を追加</br>
        /// <br>Update Note : K2016/02/23 時シン</br>
        /// <br>              ㈱イケモト 抽出条件にて受注作成区分を追加する対応</br>
        private void DisplayExtraConditions()
        {
            int displayedItemCount = 0;     // 表示されている検索条件の項目数

            // 全ての項目をHiddenに
            SetAllDetailSearchCondition2Hidden();
            // -------------ADD 2009/12/28-------------->>>>>
            int tabIndex = 0;
            #region [基本条件]
            DisplayCommonConditions(out tabIndex);
            #endregion
            // -------------ADD 2009/12/28--------------<<<<<

            this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
            this._currentLocationY = CT_INITIAL_FIELD_POSITION_Y;
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            _gridUpKeyBackControl = null;
            // int tabIndex = 0;// DEL 2009/12/28
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

            // チェックボックスの設定をすべて取得、チェックがついている項目を表示
            // タグで一括管理しようかとも考えたが少し無理が出てきそうなので直接管理

            #region 伝票区分
            // 伝票区分
            // -------------UPD 2009/12/28-------------->>>>>
            //if ( this.uCheckSalesSlipCd.Checked )
            if ((this.uCheckSalesSlipCd.Checked) && (this.uCheckSalesSlipCd.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tComboEditor_SalesSlipCd;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 伝票区分ラベル
                this.uLabel_SalesSlipCdTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesSlipCdTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 伝票区分コンボボックス
                this.tComboEditor_SalesSlipCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SalesSlipCd.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                this.tComboEditor_SalesSlipCd.Width = CT_INTERVAL_COMBOBOX;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_SalesSlipCd.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
                //tComboEditor_SalesSlipCd.SelectedIndex = 0;
                // ----------UPD 2009/12/28------------>>>>>
                //tComboEditor_SalesSlipCd.SelectedIndex = 1; // 1:売上/返品
                if (!this.uCheckSalesSlipCd_base.Checked)
                {
                    tComboEditor_SalesSlipCd.SelectedIndex = 1; // 1:売上/返品
                }
                // ----------UPD 2009/12/28------------<<<<<

                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 伝票区分

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            # region [明細区分]
            // 明細区分
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckSalesSlipCdDtl.Checked)
            if ((this.uCheckSalesSlipCdDtl.Checked) && (this.uCheckSalesSlipCdDtl.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tComboEditor_SalesSlipCdDtl;
                }

                // 明細区分ラベル
                this.uLabel_SalesSlipCdDtl.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesSlipCdDtl.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 明細区分コンボボックス
                this.tComboEditor_SalesSlipCdDtl.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SalesSlipCdDtl.Visible = true;
                this.tComboEditor_SalesSlipCdDtl.Width = CT_INTERVAL_COMBOBOX;
                this.tComboEditor_SalesSlipCdDtl.TabIndex = tabIndex++;
                //this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tComboEditor_SalesSlipCdDtl.SelectedIndex = 0;
                if (!this.uCheckSalesSlipCdDtl_base.Checked)
                {
                    tComboEditor_SalesSlipCdDtl.SelectedIndex = 0;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            # endregion
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

            #region 伝票番号
            // 伝票番号
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckSalesSlipNum.Checked)
            if ((this.uCheckSalesSlipNum.Checked) && (this.uCheckSalesSlipNum.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_SalesSlipNum;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 伝票番号ラベル
                this.uLabel_SalesSlipNumTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesSlipNumTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 伝票番号tNedit
                this.tEdit_SalesSlipNum.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SalesSlipNum.Visible = true;
                this.tEdit_SalesSlipNum.Width = 150;
                this._currentLocationX += 155;

                // 伝票番号ラベル２
                this.uLabel_SalesSlipNumEnd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesSlipNumEnd.Visible = true;
                this.uLabel_SalesSlipNumEnd.Width = 50;

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                //this.tEdit_SalesSlipNum.Width = CT_INTERVAL_EDIT;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_SalesSlipNum.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += 55;//CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X; // DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += 44 + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_SalesSlipNum.Clear();
                if (!this.uCheckSalesSlipNum_base.Checked)
                {
                    tEdit_SalesSlipNum.Clear();
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 伝票番号

            #region 担当者
            // 担当者
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckSalesEmployeeCd.Checked)
            if ((this.uCheckSalesEmployeeCd.Checked) && (this.uCheckSalesEmployeeCd.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_SalesEmployeeCd;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 担当者ラベル
                this.uLabel_SalesEmployeeCdTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesEmployeeCdTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 担当者tEdit
                this.tEdit_SalesEmployeeCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SalesEmployeeCd.Visible = true;
                this.tEdit_SalesEmployeeCd.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_SalesEmployeeCd.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 担当者ガイドボタン
                this.uButton_SalesEmployeeCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_SalesEmployeeCd.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_SalesEmployeeCd.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_swSalesEmployeeCd = string.Empty;
                //_swSalesEmployeeName = string.Empty;
                //tEdit_SalesEmployeeCd.Text = string.Empty;
                if (!this.uCheckSalesEmployeeCd_base.Checked)
                {
                    _swSalesEmployeeCd = string.Empty;
                    _swSalesEmployeeName = string.Empty;
                    tEdit_SalesEmployeeCd.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 担当者

            #region 受注者
            // 受注者
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckFrontEmployeeCd.Checked)
            if ((this.uCheckFrontEmployeeCd.Checked) && (this.uCheckFrontEmployeeCd.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_FrontEmployeeCd;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 受注者ラベル
                this.uLabel_FrontEmployeeCdTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_FrontEmployeeCdTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 受注者tEdit
                this.tEdit_FrontEmployeeCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_FrontEmployeeCd.Visible = true;
                this.tEdit_FrontEmployeeCd.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_FrontEmployeeCd.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 受注者ガイドボタン
                this.uButton_FrontEmployeeCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_FrontEmployeeCd.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_FrontEmployeeCd.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_swFrontEmployeeCd = string.Empty;
                //_swFrontEmployeeName = string.Empty;
                //tEdit_FrontEmployeeCd.Text = string.Empty;
                if (!this.uCheckFrontEmployeeCd_base.Checked)
                {
                    _swFrontEmployeeCd = string.Empty;
                    _swFrontEmployeeName = string.Empty;
                    tEdit_FrontEmployeeCd.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 受注者

            #region 発行者
            // 発行者
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckSalesInputCode.Checked)
            if ((this.uCheckSalesInputCode.Checked) && (this.uCheckSalesInputCode.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_SalesInputCode;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 発行者ラベル
                this.uLabel_SalesInputCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesInputCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 発行者tEdit
                this.tEdit_SalesInputCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SalesInputCode.Visible = true;
                this.tEdit_SalesInputCode.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_SalesInputCode.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 発行者ガイドボタン
                this.uButton_SalesInputCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_SalesInputCode.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_SalesInputCode.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_swSalesInputCode = string.Empty;
                //_swSalesInputName = string.Empty;
                //tEdit_SalesInputCode.Text = string.Empty;
                if (!this.uCheckSalesInputCode_base.Checked)
                {
                    _swSalesInputCode = string.Empty;
                    _swSalesInputName = string.Empty;
                    tEdit_SalesInputCode.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 発行者

            #region 管理番号
            // 管理番号
            // -------------UPD 2009/12/28-------------->>>>>
            //if ( this.uCheckCarMngCode.Checked )
            if ((this.uCheckCarMngCode.Checked) && (this.uCheckCarMngCode.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_CarMngCode;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 管理番号ラベル
                this.uLabel_CarMngCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_CarMngCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 管理番号tNedit
                this.tEdit_CarMngCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_CarMngCode.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                // this.tEdit_CarMngCode.Width = CT_INTERVAL_EDIT;  // DEL 2009/10/22
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_CarMngCode.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                // --- ADD 2009/10/22 ----->>>>>
                this.tEdit_CarMngCode.Width = 124;
                this._currentLocationX += 124 + 1;
                // 管理番号曖昧検索
                this.tComboEditor_SearchDiv.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SearchDiv.Visible = true;
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X - 2;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2 - 2;// ADD 2011/11/29 zhume Redmine#8382
                this.tComboEditor_SearchDiv.TabIndex = tabIndex++;
                // this._currentLocationX += CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X; 
                // --- ADD 2009/10/22 -----<<<<<

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_CarMngCode.Clear();
                if (!this.uCheckCarMngCode_base.Checked)
                {
                    tEdit_CarMngCode.Clear();
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 管理番号

            #region 車種名称
            // 車種名称
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckModelFullName.Checked)
            if ((this.uCheckModelFullName.Checked) && (this.uCheckModelFullName.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_ModelFullName;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 車種名称ラベル
                this.uLabel_ModelFullNameTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_ModelFullNameTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 車種名称tNedit
                this.tEdit_ModelFullName.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_ModelFullName.Visible = true;
                this.tEdit_ModelFullName.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_ModelFullName.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // 車種名称曖昧検索
                this.tComboEditor_ModelFullNameFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_ModelFullNameFuzzy.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_ModelFullNameFuzzy.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_ModelFullName.Text = string.Empty;
                if (!this.uCheckModelFullName_base.Checked)
                {
                    tEdit_ModelFullName.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 車種名称

            #region 型式
            // 型式
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckFullModel.Checked)
            if ((this.uCheckFullModel.Checked) && (this.uCheckFullModel.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_FullModel;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 型式ラベル
                this.uLabel_FullModelTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_FullModelTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 型式tNedit
                this.tEdit_FullModel.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_FullModel.Visible = true;
                this.tEdit_FullModel.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_FullModel.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // 型式曖昧検索
                this.tComboEditor_FullModelFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_FullModelFuzzy.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_FullModelFuzzy.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_FullModel.Text = string.Empty;
                if (!this.uCheckFullModel_base.Checked)
                {
                    tEdit_FullModel.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 型式

            #region 車台No
            // 車台No
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckSearchFrameNo.Checked)
            if ((this.uCheckSearchFrameNo.Checked) && (this.uCheckSearchFrameNo.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    // ---------DEL 2013/03/25---------->>>>>
                    //this._gridUpKeyBackControl = tNedit_SearchFrameNo;
                    // ---------DEL 2013/03/25----------<<<<<
                    // ---------ADD 2013/03/25---------->>>>>
                    this._gridUpKeyBackControl = tEdit_SearchFrameNo;
                    // ---------ADD 2013/03/25----------<<<<<
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 車台Noラベル
                this.uLabel_SearchFrameNoTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SearchFrameNoTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 車台NotNedit
                // ---------DEL 2013/03/25---------->>>>>
                //this.tNedit_SearchFrameNo.Location = new Point(this._currentLocationX, this._currentLocationY);
                //this.tNedit_SearchFrameNo.Visible = true;
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                this.tEdit_SearchFrameNo.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SearchFrameNo.Visible = true;
                // ---------ADD 2013/03/25----------<<<<<
                // ----------UPD 2010/08/05-------->>>>>
                // ---------DEL 2013/03/25---------->>>>>
                ////// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                ////this.tNedit_SearchFrameNo.Width = CT_INTERVAL_EDIT;
                //this.tNedit_SearchFrameNo.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                ////// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                ////// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                //this.tNedit_SearchFrameNo.TabIndex = tabIndex++;
                ////// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                this.tEdit_SearchFrameNo.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                this.tEdit_SearchFrameNo.TabIndex = tabIndex++;
                // ---------ADD 2013/03/25----------<<<<<
                //this._currentLocationX += CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;
                // 車台No曖昧検索
                this.tComboEditor_SearchFrameNoFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SearchFrameNoFuzzy.Visible = true;
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X - 2;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2 - 2;// ADD 2011/11/29 zhume Redmine#8382
                this.tComboEditor_SearchFrameNoFuzzy.TabIndex = tabIndex++;
                // ----------UPD 2010/08/05--------<<<<<
                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tNedit_SearchFrameNo.Clear();
                if (!this.uCheckSearchFrameNo_base.Checked)
                {
                    // ---------DEL 2013/03/25---------->>>>>
                    //tNedit_SearchFrameNo.Clear();
                    // ---------DEL 2013/03/25----------<<<<<
                    // ---------ADD 2013/03/25---------->>>>>
                    tEdit_SearchFrameNo.Clear();
                    // ---------ADD 2013/03/25----------<<<<<
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 車台No

            #region 指示書No
            // 指示書No
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckPartySalesSlipNum.Checked)
            if ((this.uCheckPartySalesSlipNum.Checked) && (this.uCheckPartySalesSlipNum.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_PartySalesSlipNum;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 指示書Noラベル
                this.uLabel_PartySalesSlipNumTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_PartySalesSlipNumTitle.Visible = true;
                //this._currentLocationX += CT_INTERVAL_LABEL;  //DEL liusy 2012/08/08 for Redmine#31530
                this._currentLocationX += CT_INTERVAL_LABEL + 30; //ADD liusy 2012/08/08 for Redmine#31530
                // 指示書No tEdit
                this.tEdit_PartySalesSlipNum.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_PartySalesSlipNum.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                //this.tEdit_PartySalesSlipNum.Width = CT_INTERVAL_EDIT;  //DEL liusy 2012/08/08 for Redmine#31530
                this.tEdit_PartySalesSlipNum.Width = CT_INTERVAL_EDIT - 25; //ADD liusy 2012/08/08 for Redmine#31530 
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_PartySalesSlipNum.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                // ---------- DEL 2012/08/22 ---------->>>>>
                //this._currentLocationX += CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382
                // ---------- DEL 2012/08/22 ----------<<<<<
                this._currentLocationX += CT_INTERVAL_EDIT - 5;// ADD 2012/08/22

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_PartySalesSlipNum.Text = string.Empty;

                if (!this.uCheckPartySalesSlipNum_base.Checked)
                {
                    tEdit_PartySalesSlipNum.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 指示書No

            #region カラー名称
            // カラー名称
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckColorName1.Checked)
            if ((this.uCheckColorName1.Checked) && (this.uCheckColorName1.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_ColorName1;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // カラー名称ラベル
                this.uLabel_ColorName1Title.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_ColorName1Title.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // カラー名称tEdit
                this.tEdit_ColorName1.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_ColorName1.Visible = true;
                this.tEdit_ColorName1.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_ColorName1.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // カラー名称曖昧検索
                this.tComboEditor_ColorName1Fuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_ColorName1Fuzzy.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_ColorName1Fuzzy.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_ColorName1.Text = string.Empty;
                if (!this.uCheckColorName1_base.Checked)
                {
                    tEdit_ColorName1.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // カラー名称

            #region トリム名称
            // トリム名称
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckTrimName.Checked)
            if ((this.uCheckTrimName.Checked) && (this.uCheckTrimName.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_TrimName;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // トリム名称ラベル
                this.uLabel_TrimNameTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_TrimNameTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // トリム名称tEdit
                this.tEdit_TrimName.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_TrimName.Visible = true;
                this.tEdit_TrimName.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_TrimName.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // トリム名称曖昧検索
                this.tComboEditor_TrimNameFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_TrimNameFuzzy.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_TrimNameFuzzy.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_TrimName.Text = string.Empty;
                if (!this.uCheckTrimName_base.Checked)
                {
                    tEdit_TrimName.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // トリム名称

            #region UOE送信
            // UOE送信
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckDataSendCode.Checked)
            if ((this.uCheckDataSendCode.Checked) && (this.uCheckDataSendCode.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tComboEditor_DataSendCode;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // UOE送信ラベル
                this.uLabel_DataSendCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_DataSendCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // UOE送信コンボボックス
                this.tComboEditor_DataSendCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_DataSendCode.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                this.tComboEditor_DataSendCode.Width = CT_INTERVAL_EDIT;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_DataSendCode.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tComboEditor_DataSendCode.SelectedIndex = 0;
                if (!this.uCheckDataSendCode_base.Checked)
                {
                    tComboEditor_DataSendCode.SelectedIndex = 0;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // UOE送信

            #region 備考１
            // 備考１
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckSlipNote.Checked)
            if ((this.uCheckSlipNote.Checked) && (this.uCheckSlipNote.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_SlipNote;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 備考１ラベル
                this.uLabel_SlipNoteTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SlipNoteTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 備考１tEdit
                this.tEdit_SlipNote.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SlipNote.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                //this.tEdit_SlipNote.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                //this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_SlipNote.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_SlipNote.Width = 100;
                this._currentLocationX += 100 + 1;
                // 備考１ガイド
                this.uButton_SlipNote.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_SlipNote.Visible = true;
                this._currentLocationX += 24 + 1;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_SlipNote.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

                // 備考１曖昧検索
                this.tComboEditor_SlipNoteFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SlipNoteFuzzy.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X - 2;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2 - 2;// ADD 2011/11/29 zhume Redmine#8382
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_SlipNoteFuzzy.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_SlipNote.Text = string.Empty;

                if (!this.uCheckSlipNote_base.Checked)
                {
                    tEdit_SlipNote.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 備考１

            #region 備考２
            // 備考２
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckSlipNote2.Checked)
            if ((this.uCheckSlipNote2.Checked) && (this.uCheckSlipNote2.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_SlipNote2;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 備考２ラベル
                this.uLabel_SlipNote2Title.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SlipNote2Title.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 備考２tEdit
                this.tEdit_SlipNote2.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SlipNote2.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                //this.tEdit_SlipNote2.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                //this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_SlipNote2.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_SlipNote2.Width = 100;
                this._currentLocationX += 100 + 1;
                // 備考２ガイド
                this.uButton_SlipNote2.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_SlipNote2.Visible = true;
                this._currentLocationX += 24 + 1;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_SlipNote2.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

                // 備考２曖昧検索
                this.tComboEditor_SlipNote2Fuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SlipNote2Fuzzy.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X - 2;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2 - 2;// ADD 2011/11/29 zhume Redmine#8382
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_SlipNote2Fuzzy.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_SlipNote2.Text = string.Empty;
                if (!this.uCheckSlipNote2_base.Checked)
                {
                    tEdit_SlipNote2.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 備考２

            #region 備考３
            // 備考３
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckSlipNote3.Checked)
            if ((this.uCheckSlipNote3.Checked) && (this.uCheckSlipNote3.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_SlipNote3;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 備考３ラベル
                this.uLabel_SlipNote3Title.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SlipNote3Title.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 備考３tEdit
                this.tEdit_SlipNote3.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SlipNote3.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                //this.tEdit_SlipNote3.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                //this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_SlipNote3.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_SlipNote3.Width = 100;
                this._currentLocationX += 100 + 1;
                // 備考３ガイド
                this.uButton_SlipNote3.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_SlipNote3.Visible = true;
                this._currentLocationX += 24 + 1;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_SlipNote3.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

                // 備考３曖昧検索
                this.tComboEditor_SlipNote3Fuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SlipNote3Fuzzy.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X - 2;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2 - 2;// ADD 2011/11/29 zhume Redmine#8382
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_SlipNote3Fuzzy.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_SlipNote3.Text = string.Empty;
                if (!this.uCheckSlipNote3_base.Checked)
                {
                    tEdit_SlipNote3.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 備考３

            #region UOEリマーク1
            // UOEリマーク1
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckUoeRemark1.Checked)
            if ((this.uCheckUoeRemark1.Checked) && (this.uCheckUoeRemark1.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_UoeRemark1;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // UOEリマーク1ラベル
                this.uLabel_UoeRemark1Title.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_UoeRemark1Title.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // UOEリマーク1tEdit
                this.tEdit_UoeRemark1.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_UoeRemark1.Visible = true;
                this.tEdit_UoeRemark1.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_UoeRemark1.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // UOEリマーク1曖昧検索
                this.tComboEditor_UoeRemark1Fuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_UoeRemark1Fuzzy.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_UoeRemark1Fuzzy.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_UoeRemark1.Text = string.Empty;
                if (!this.uCheckUoeRemark1_base.Checked)
                {
                    tEdit_UoeRemark1.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // UOEリマーク1

            #region UOEリマーク2
            // UOEリマーク2
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckUoeRemark2.Checked)
            if ((this.uCheckUoeRemark2.Checked) && (this.uCheckUoeRemark2.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_UoeRemark2;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // UOEリマーク2ラベル
                this.uLabel_UoeRemark2Title.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_UoeRemark2Title.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // UOEリマーク2tEdit
                this.tEdit_UoeRemark2.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_UoeRemark2.Visible = true;
                this.tEdit_UoeRemark2.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_UoeRemark2.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // UOEリマーク2曖昧検索
                this.tComboEditor_UoeRemark2Fuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_UoeRemark2Fuzzy.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_UoeRemark2Fuzzy.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_UoeRemark2.Text = string.Empty;
                if (!this.uCheckUoeRemark2_base.Checked)
                {
                    tEdit_UoeRemark2.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // UOEリマーク2

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            # region [商品大分類]
            // 商品大分類
            // -------------UPD 2009/12/28-------------->>>>>
            //if ( this.uCheckGoodsLGroup.Checked )
            if ((this.uCheckGoodsLGroup.Checked) && (this.uCheckGoodsLGroup.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_GoodsLGroup;
                }

                // 商品大分類ラベル
                this.uLabel_GoodsLGroup.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_GoodsLGroup.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 商品大分類tEdit
                this.tEdit_GoodsLGroup.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_GoodsLGroup.Visible = true;
                this.tEdit_GoodsLGroup.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_GoodsLGroup.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 商品大分類ガイドボタン
                this.uButton_GoodsLGroup.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_GoodsLGroup.Visible = true;
                this.uButton_GoodsLGroup.TabIndex = tabIndex++;
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_swGoodsLGroup = 0;
                //_swGoodsLGroupName = string.Empty;
                //tEdit_GoodsLGroup.Text = string.Empty;
                if (!this.uCheckGoodsLGroup_base.Checked)
                {
                    _swGoodsLGroup = 0;
                    _swGoodsLGroupName = string.Empty;
                    tEdit_GoodsLGroup.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            # endregion

            # region [商品中分類]
            // 商品中分類
            // -------------UPD 2009/12/28-------------->>>>>
            //if ( this.uCheckGoodsMGroup.Checked )
            if ((this.uCheckGoodsMGroup.Checked) && (this.uCheckGoodsMGroup.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_GoodsMGroup;
                }

                // 商品大分類ラベル
                this.uLabel_GoodsMGroup.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_GoodsMGroup.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 商品大分類tEdit
                this.tEdit_GoodsMGroup.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_GoodsMGroup.Visible = true;
                this.tEdit_GoodsMGroup.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_GoodsMGroup.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 商品大分類ガイドボタン
                this.uButton_GoodsMGroup.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_GoodsMGroup.Visible = true;
                this.uButton_GoodsMGroup.TabIndex = tabIndex++;
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_swGoodsMGroup = 0;
                //_swGoodsMGroupName = string.Empty;
                //tEdit_GoodsMGroup.Text = string.Empty;
                if (!this.uCheckGoodsMGroup_base.Checked)
                {
                    _swGoodsMGroup = 0;
                    _swGoodsMGroupName = string.Empty;
                    tEdit_GoodsMGroup.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            # endregion
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

            #region BLグループ
            // BLグループ
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckBLGroupCode.Checked)
            if ((this.uCheckBLGroupCode.Checked) && (this.uCheckBLGroupCode.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_BlGroupCode;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // BLグループラベル
                this.uLabel_BlGroupCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_BlGroupCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // BLグループtEdit
                this.tEdit_BlGroupCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_BlGroupCode.Visible = true;
                this.tEdit_BlGroupCode.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_BlGroupCode.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // BLグループガイドボタン
                this.uButton_BlGroupCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_BlGroupCode.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_BlGroupCode.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_swBLGroupCode = 0;
                //_swBLGroupName = string.Empty;
                //tEdit_BlGroupCode.Text = string.Empty;
                if (!this.uCheckBLGroupCode_base.Checked)
                {
                    _swBLGroupCode = 0;
                    _swBLGroupName = string.Empty;
                    tEdit_BlGroupCode.Text = string.Empty;
                }
                //// ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // BLグループ

            #region BLコード
            // BLコード
            // -------------UPD 2009/12/28-------------->>>>>
            //if ( this.uCheckBLGoodsCode.Checked )
            if ((this.uCheckBLGoodsCode.Checked) && (this.uCheckBLGoodsCode.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_BlGoodsCode;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // BLコードラベル
                this.uLabel_BlGoodsCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_BlGoodsCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // BLコードtEdit
                this.tEdit_BlGoodsCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_BlGoodsCode.Visible = true;
                this.tEdit_BlGoodsCode.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_BlGoodsCode.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // BLコードガイドボタン
                this.uButton_BlGoodsCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_BlGoodsCode.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_BlGoodsCode.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_swBLGoodsCode = 0;
                //_swBLGoodsName = string.Empty;
                //tEdit_BlGoodsCode.Text = string.Empty;
                if (!this.uCheckBLGoodsCode_base.Checked)
                {
                    _swBLGoodsCode = 0;
                    _swBLGoodsName = string.Empty;
                    tEdit_BlGoodsCode.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // BLコード

            #region 品名
            // 品名
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckGoodsName.Checked)
            if ((this.uCheckGoodsName.Checked) && (this.uCheckGoodsName.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_GoodsName;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 品名ラベル
                this.uLabel_GoodsNameTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_GoodsNameTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 品名tEdit
                this.tEdit_GoodsName.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_GoodsName.Visible = true;
                this.tEdit_GoodsName.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_GoodsName.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // 品名曖昧検索
                this.tComboEditor_GoodsNameFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_GoodsNameFuzzy.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_GoodsNameFuzzy.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_GoodsName.Text = string.Empty;
                if (!this.uCheckGoodsName_base.Checked)
                {
                    tEdit_GoodsName.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 品名

            #region 品番
            // 品番
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckGoodsNo.Checked)
            if ((this.uCheckGoodsNo.Checked) && (this.uCheckGoodsNo.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_GoodsNo;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 品番ラベル
                this.uLabel_GoodsNoTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_GoodsNoTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 品番tEdit
                this.tEdit_GoodsNo.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_GoodsNo.Visible = true;
                this.tEdit_GoodsNo.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_GoodsNo.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // 品番曖昧検索
                this.tComboEditor_GoodsNoFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_GoodsNoFuzzy.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_GoodsNoFuzzy.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_GoodsNo.Text = string.Empty;
                if (!this.uCheckGoodsNo_base.Checked)
                {
                    tEdit_GoodsNo.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 品番

            #region メーカー
            // メーカー
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckGoodsMakerCd.Checked)
            if ((this.uCheckGoodsMakerCd.Checked) && (this.uCheckGoodsMakerCd.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_MakerCd;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // メーカーラベル
                this.uLabel_MakerCdTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_MakerCdTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // メーカーtEdit
                this.tEdit_MakerCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_MakerCd.Visible = true;
                this.tEdit_MakerCd.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_MakerCd.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // メーカーガイドボタン
                this.uButton_MakerCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_MakerCd.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_MakerCd.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_swGoodsMakerCd = 0;
                //_swGoodsMakerName = string.Empty;
                //tEdit_MakerCd.Text = string.Empty;
                if (!this.uCheckGoodsMakerCd_base.Checked)
                {
                    _swGoodsMakerCd = 0;
                    _swGoodsMakerName = string.Empty;
                    tEdit_MakerCd.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // メーカー

            #region 販売区分
            // 販売区分
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckSalesCode.Checked)
            if ((this.uCheckSalesCode.Checked) && (this.uCheckSalesCode.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_SalesCode;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 販売区分ラベル
                this.uLabel_SalesCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 販売区分tEdit
                this.tEdit_SalesCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SalesCode.Visible = true;
                this.tEdit_SalesCode.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_SalesCode.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 販売区分ガイドボタン
                this.uButton_SalesCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_SalesCode.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_SalesCode.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_swSalesCode = 0;
                //_swSalesName = string.Empty;
                //tEdit_SalesCode.Text = string.Empty;
                if (!this.uCheckSalesCode_base.Checked)
                {
                    _swSalesCode = 0;
                    _swSalesName = string.Empty;
                    tEdit_SalesCode.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 販売区分

            #region 自社分類
            // 自社分類
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckEnterpriseGanreCode.Checked)
            if ((this.uCheckEnterpriseGanreCode.Checked) && (this.uCheckEnterpriseGanreCode.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_EnterpriseGanreCode;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 自社分類ラベル
                this.uLabel_EnterpriseGanreCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_EnterpriseGanreCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 自社分類tEdit
                this.tEdit_EnterpriseGanreCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_EnterpriseGanreCode.Visible = true;
                this.tEdit_EnterpriseGanreCode.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_EnterpriseGanreCode.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 自社分類ガイドボタン
                this.uButton_EnterpriseGanreCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_EnterpriseGanreCode.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_EnterpriseGanreCode.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_swEnterpriseGanreCode = 0;
                //_swEnterpriseGanreName = string.Empty;
                //tEdit_EnterpriseGanreCode.Text = string.Empty;
                if (!this.uCheckEnterpriseGanreCode_base.Checked)
                {
                    _swEnterpriseGanreCode = 0;
                    _swEnterpriseGanreName = string.Empty;
                    tEdit_EnterpriseGanreCode.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 自社分類

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            # region [商品属性]
            // 商品属性
            // -------------UPD 2009/12/28-------------->>>>>
            //if ( this.uCheckGoodsKindCode.Checked )
            if ((this.uCheckGoodsKindCode.Checked) && (this.uCheckGoodsKindCode.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tComboEditor_GoodsKindCode;
                }

                // 商品属性ラベル
                this.uLabel_GoodsKindCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_GoodsKindCode.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 商品属性コンボボックス
                this.tComboEditor_GoodsKindCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_GoodsKindCode.Visible = true;
                this.tComboEditor_GoodsKindCode.Width = CT_INTERVAL_COMBOBOX;
                this.tComboEditor_GoodsKindCode.TabIndex = tabIndex++;
                //this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tComboEditor_GoodsKindCode.SelectedIndex = 0;
                if (!this.uCheckGoodsKindCode_base.Checked)
                {
                    tComboEditor_GoodsKindCode.SelectedIndex = 0;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            # endregion
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

            #region 在庫取寄区分
            // 在庫取寄区分
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckSalesOrderDivCd.Checked)
            if ((this.uCheckSalesOrderDivCd.Checked) && (this.uCheckSalesOrderDivCd.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tComboEditor_SalesOrderDivCd;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 在庫取寄区分ラベル
                this.uLabel_SalesOrderDivCdTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesOrderDivCdTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 在庫取寄区分コンボボックス
                this.tComboEditor_SalesOrderDivCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SalesOrderDivCd.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                this.tComboEditor_SalesOrderDivCd.Width = CT_INTERVAL_COMBOBOX;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_SalesOrderDivCd.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tComboEditor_SalesOrderDivCd.SelectedIndex = 0;
                if (!this.uCheckSalesOrderDivCd_base.Checked)
                {
                    tComboEditor_SalesOrderDivCd.SelectedIndex = 0;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 在庫取寄区分

            #region 倉庫
            // 倉庫
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckWarehouseCode.Checked)
            if ((this.uCheckWarehouseCode.Checked) && (this.uCheckWarehouseCode.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_WarehouseCd;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 倉庫ラベル
                this.uLabel_WarehouseCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_WarehouseCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 倉庫tEdit
                this.tEdit_WarehouseCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_WarehouseCd.Visible = true;
                this.tEdit_WarehouseCd.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_WarehouseCd.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 倉庫ガイドボタン
                this.uButton_WarehouseCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_WarehouseCd.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_WarehouseCd.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_swWarehouseCd = string.Empty;
                //_swWarehouseName = string.Empty;
                //tEdit_WarehouseCd.Text = string.Empty;
                if (!this.uCheckWarehouseCode_base.Checked)
                {
                    _swWarehouseCd = string.Empty;
                    _swWarehouseName = string.Empty;
                    tEdit_WarehouseCd.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 倉庫

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            # region [棚番]
            // 棚番
            // -------------UPD 2009/12/28-------------->>>>>
            //if ( this.uCheckWarehouseShelfNo.Checked )
            if ((this.uCheckWarehouseShelfNo.Checked) && (this.uCheckWarehouseShelfNo.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_WarehouseShelfNo;
                }

                // 棚番ラベル
                this.uLabel_WarehouseShelfNo.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_WarehouseShelfNo.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 棚番tEdit
                this.tEdit_WarehouseShelfNo.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_WarehouseShelfNo.Visible = true;
                this.tEdit_WarehouseShelfNo.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                this.tEdit_WarehouseShelfNo.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // 棚番曖昧検索
                this.tComboEditor_WarehouseShelfNoFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_WarehouseShelfNoFuzzy.Visible = true;
                this.tComboEditor_WarehouseShelfNoFuzzy.TabIndex = tabIndex++;
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_WarehouseShelfNo.Text = string.Empty;
                if (!this.uCheckWarehouseShelfNo_base.Checked)
                {
                    tEdit_WarehouseShelfNo.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            # endregion
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

            #region 仕入伝票番号
            // 仕入伝票番号
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckSupplierSlipNo.Checked)
            if ((this.uCheckSupplierSlipNo.Checked) && (this.uCheckSupplierSlipNo.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_SupplierSlipNo;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 仕入伝票番号ラベル
                this.uLabel_SupplierSlipNoTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SupplierSlipNoTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 仕入伝票番号 tEdit
                this.tEdit_SupplierSlipNo.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SupplierSlipNo.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                this.tEdit_SupplierSlipNo.Width = CT_INTERVAL_EDIT;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_SupplierSlipNo.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_SupplierSlipNo.Text = string.Empty;
                if (!this.uCheckSupplierSlipNo_base.Checked)
                {
                    tEdit_SupplierSlipNo.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 仕入伝票番号

            #region 仕入先
            // 仕入先
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckSupplierCd.Checked)
            if ((this.uCheckSupplierCd.Checked) && (this.uCheckSupplierCd.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_SupplierCd;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 仕入先ラベル
                this.uLabel_SupplierCdTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SupplierCdTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 仕入先tEdit
                this.tEdit_SupplierCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SupplierCd.Visible = true;
                this.tEdit_SupplierCd.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_SupplierCd.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 仕入先ガイドボタン
                this.uButton_SupplierCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_SupplierCd.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_SupplierCd.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_swSupplierCd = 0;
                //_swSupplierName = string.Empty;
                //tEdit_SupplierCd.Text = string.Empty;
                if (!this.uCheckSupplierCd_base.Checked)
                {
                    _swSupplierCd = 0;
                    _swSupplierName = string.Empty;
                    tEdit_SupplierCd.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 仕入先

            #region 発注先
            // 発注先
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckUOESupplierCd.Checked)
            if ((this.uCheckUOESupplierCd.Checked) && (this.uCheckUOESupplierCd.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_UOESupplierCd;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 発注先ラベル
                this.uLabel_UOESupplierCdTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_UOESupplierCdTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 発注先tEdit
                this.tEdit_UOESupplierCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_UOESupplierCd.Visible = true;
                this.tEdit_UOESupplierCd.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_UOESupplierCd.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 発注先ガイドボタン
                this.uButton_UOESupplierCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_UOESupplierCd.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_UOESupplierCd.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_swUOESupplierCd = 0;
                //_swUOESupplierName = string.Empty;
                //tEdit_UOESupplierCd.Text = string.Empty;
                if (!this.uCheckUOESupplierCd_base.Checked)
                {
                    _swUOESupplierCd = 0;
                    _swUOESupplierName = string.Empty;
                    tEdit_UOESupplierCd.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 発注先

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
            # region 納入先
            // 納入先
            // -------------UPD 2009/12/28-------------->>>>>
            //if ( this.uCheckAddresseeCode.Checked )
            if ((this.uCheckAddresseeCode.Checked) && (this.uCheckAddresseeCode.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_AddresseeCode;
                }

                // 納入先ラベル
                this.uLabel_AddresseeCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_AddresseeCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 納入先tEdit
                this.tEdit_AddresseeCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_AddresseeCode.Visible = true;
                this.tEdit_AddresseeCode.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_AddresseeCode.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 納入先ガイドボタン
                this.uButton_AddresseeCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_AddresseeCode.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.uButton_AddresseeCode.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_swAddresseeCode = 0;
                //_swAddresseeName = string.Empty;
                //tEdit_AddresseeCode.Text = string.Empty;
                if (!this.uCheckAddresseeCode_base.Checked)
                {
                    _swAddresseeCode = 0;
                    _swAddresseeName = string.Empty;
                    tEdit_AddresseeCode.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            # endregion
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD

            #region 明細備考
            // 明細備考
            // -------------UPD 2009/12/28-------------->>>>>
            //if (this.uCheckDtlNote.Checked)
            if ((this.uCheckDtlNote.Checked) && (this.uCheckDtlNote.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tEdit_DtlNote;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 明細備考ラベル
                this.uLabel_DtlNoteTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_DtlNoteTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 明細備考tEdit
                this.tEdit_DtlNote.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_DtlNote.Visible = true;
                this.tEdit_DtlNote.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tEdit_DtlNote.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // 明細備考曖昧検索
                this.tComboEditor_DtlNoteFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_DtlNoteFuzzy.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_DtlNoteFuzzy.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //tEdit_DtlNote.Text = string.Empty;
                if (!this.uCheckDtlNote_base.Checked)
                {
                    tEdit_DtlNote.Text = string.Empty;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 明細備考

            #region 削除指定区分
            // 削除指定区分
            // -------------UPD 2009/12/28-------------->>>>>
            //if ( this.uCheckDeleteFlag.Checked )
            if ((this.uCheckDeleteFlag.Checked) && (this.uCheckDeleteFlag.Enabled == true))
            // -------------UPD 2009/12/28--------------<<<<<
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tComboEditor_DeleteFlag;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                // 削除指定区分ラベル
                this.uLabel_DeleteFlagTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_DeleteFlagTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 削除指定区分コンボボックス
                this.tComboEditor_DeleteFlag.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_DeleteFlag.Visible = true;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                this.tComboEditor_DeleteFlag.Width = CT_INTERVAL_COMBOBOX;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                this.tComboEditor_DeleteFlag.TabIndex = tabIndex++;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                //this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            else
            {
                // ----------UPD 2009/12/28------------>>>>>
                //_logicalDelDiv = 0;
                //tComboEditor_DeleteFlag.SelectedIndex = 0;
                if (!this.uCheckDeleteFlag_base.Checked)
                {
                    _logicalDelDiv = 0;
                    tComboEditor_DeleteFlag.SelectedIndex = 0;
                }
                // ----------UPD 2009/12/28------------<<<<<
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
            #endregion // 削除指定区分

            // -----------ADD 2009/12/29----------->>>>>
            #region 請求先
            // 請求先
            if ((this.uCheckClaimCode.Checked) && (this.uCheckClaimCode.Enabled == true))
            {
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = this.tEdit_ClaimName;
                }

                // 請求先ラベル
                this.uLabel_ClaimTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_ClaimTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 請求先略称
                this.tEdit_ClaimName.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_ClaimName.Visible = true;
                this.tEdit_ClaimName.TabIndex = tabIndex++;
                this.tEdit_ClaimName.Width = CT_INTERVAL_EDIT_WITHBUTTON + 5;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON + 9;
                // 請求先ガイド
                this.uButton_ClaimGuide.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_ClaimGuide.Visible = true;
                //this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X - 9;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X2 - 9;// ADD 2011/11/29 zhume Redmine#8382
                this.uButton_ClaimGuide.TabIndex = tabIndex++;

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            else
            {
                if (!this.uCheckClaimCode_base.Checked)
                {
                    this.tEdit_ClaimName.Text = string.Empty;
                    this._prevInputValue.ClaimCode = 0;
                    this._prevInputValue.ClaimName = string.Empty;
                    int customerCode = this.tNedit_CustomerCode.GetInt();
                    // 未入力時は明細へタブを切り替え
                    if (customerCode == 0)
                    {
                        if (this._selectedMainTabKey == "uTab_RemainList")
                        {
                            this._selectedMainTabKey = "uTab_SlipDetail";
                            this.uTabControl.Tabs["uTab_SlipDetail"].Selected = true;
                        }
                    }
                    //残高一覧グリッド内容クリア
                    this._detailDataSet.BalanceList.Clear();
                    if (this.tNedit_CustomerCode.GetInt() == 0) this._remainTabSelectable = false;
                }
            }
            #endregion // 請求先

            #region 入力日開始
            // 入力日開始
            if ((this.uCheckAddUpADateSt.Checked) && (this.uCheckAddUpADateSt.Enabled == true))
            {
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tDateEdit_AddUpADateSt;
                }

                // 入力日開始ラベル
                this.uLabel_AddUpADateTitle_St.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_AddUpADateTitle_St.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 入力日開始tDateEdit
                this.tDateEdit_AddUpADateSt.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tDateEdit_AddUpADateSt.Visible = true;
                this.tDateEdit_AddUpADateSt.Width = 176;
                this.tDateEdit_AddUpADateSt.TabIndex = tabIndex++;
                //this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            else
            {
                if (!this.uCheckAddUpADateSt_base.Checked)
                {
                    tDateEdit_AddUpADateSt.Clear();
                }
            }
            #endregion // 入力日開始

            #region 入力日終了
            // 入力日終了
            if ((this.uCheckAddUpADateEd.Checked) && ((this.uCheckAddUpADateEd.Enabled == true)))
            {
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tDateEdit_AddUpADateEd;
                }

                // 入力日終了ラベル
                this.uLabel_AddUpADateTitle_Ed.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_AddUpADateTitle_Ed.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 入力日終了tDateEdit
                this.tDateEdit_AddUpADateEd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tDateEdit_AddUpADateEd.Visible = true;
                this.tDateEdit_AddUpADateEd.Width = 176;
                this.tDateEdit_AddUpADateEd.TabIndex = tabIndex++;
                //this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
            }
            else
            {
                if (!this.uCheckAddUpADateEd_base.Checked)
                {
                    tDateEdit_AddUpADateEd.Clear();
                }
            }
            #endregion // 入力日終了
            // -----------ADD 2009/12/29-----------<<<<<
            // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
            #region 自動回答
            if (this._opt_Pcc == (int)Option.ON)
            {
                // 自動回答
                if ((this.uCheckAutoAnswerDivSCM.Checked) && (this.uCheckAutoAnswerDivSCM.Enabled == true))
                {
                    if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                    {
                        this._gridUpKeyBackControl = tComboEditor_AutoAnswerDivSCM;
                    }

                    // 自動回答ラベル
                    this.uLabel_AutoAnswerDivSCM.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.uLabel_AutoAnswerDivSCM.Visible = true;
                    this._currentLocationX += CT_INTERVAL_LABEL;

                    // 自動回答tEdit
                    this.tComboEditor_AutoAnswerDivSCM.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tComboEditor_AutoAnswerDivSCM.Visible = true;
                    this.tComboEditor_AutoAnswerDivSCM.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                    this.tComboEditor_AutoAnswerDivSCM.TabIndex = tabIndex++;
                    //this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;  // DEL 2011/12/01 楊洋 
                    //this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;// ADD 2011/12/01 楊洋 // DEL 2011/11/29 zhume Redmine#8382
                    this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X2;// ADD 2011/12/01 楊洋 // ADD 2011/11/29 zhume Redmine#8382

                    displayedItemCount++;
                    if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                    {
                        this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                        this._currentLocationY += CT_INTERVAL_HEIGHT;
                    }
                }
                else
                {
                    if (!this.uCheckAutoAnswerDivSCM_base.Checked)
                    {
                        tComboEditor_AutoAnswerDivSCM.SelectedIndex = 0;
                    }
                }
            }
            #endregion
            // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<

            //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>
            if (this._opt_Pcc == (int)Option.ON)
            {
                #region 問合せ番号
                if ((this.uCheckInquiryNumber.Checked) && (this.uCheckInquiryNumber.Enabled == true))
                {
                    if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                    {
                        this._gridUpKeyBackControl = tNedit_InquiryNumber;
                    }

                    // 発行者ラベル
                    this.uLabel_InquiryNumber.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.uLabel_InquiryNumber.Visible = true;
                    this._currentLocationX += CT_INTERVAL_LABEL;

                    // 発行者tEdit
                    this.tNedit_InquiryNumber.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tNedit_InquiryNumber.Visible = true;
                    this.tNedit_InquiryNumber.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                    this.tNedit_InquiryNumber.TabIndex = tabIndex++;
                    //this._currentLocationX += CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X;// DEL 2011/11/29 zhume Redmine#8382
                    this._currentLocationX += CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X2;// ADD 2011/11/29 zhume Redmine#8382



                    displayedItemCount++;
                    if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                    {
                        this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                        this._currentLocationY += CT_INTERVAL_HEIGHT;
                    }
                }
                else
                {
                    if (!this.uCheckInquiryNumber_base.Checked)
                    {
                        tEdit_CarMngCode.Clear();
                    }
                }
                #endregion
            }

            //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<

            // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
            #region 出荷状況
            // 出荷状況
            if ((this.uCheckAddUpRemDiv.Checked) && (this.uCheckAddUpRemDiv.Enabled == true))
            {
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._gridUpKeyBackControl = tComboEditor_AddUpRemDiv;
                }

                // 出荷状況ラベル
                this.uLabel_AddUpRemDiv.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_AddUpRemDiv.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 出荷状況コンボボックス
                this.tComboEditor_AddUpRemDiv.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_AddUpRemDiv.Visible = true;
                this.tComboEditor_AddUpRemDiv.Enabled = false;
                this.tComboEditor_AddUpRemDiv.SelectedIndex = 0; // 0:全て
                this.tComboEditor_AddUpRemDiv.Width = CT_INTERVAL_COMBOBOX;
                this.tComboEditor_AddUpRemDiv.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X2;

                displayedItemCount++;
                if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                {
                    this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                    this._currentLocationY += CT_INTERVAL_HEIGHT;
                }
                if (this.tComboEditor_SalesSlipCd.SelectedIndex == CT_SELECTEDINDEX_ACCEPTANORDER ||
                    this.tComboEditor_SalesSlipCd.SelectedIndex == CT_SELECTEDINDEX_SHIPMENT)
                {
                    // 貸出または受注の場合
                    this.tComboEditor_AddUpRemDiv.Enabled = true;
                }
            }
            else
            {
                if (!this.uCheckAddUpRemDiv_base.Checked)
                {
                    tComboEditor_AddUpRemDiv.SelectedIndex = 0; // 0:全て
                }
            }
            #endregion // 出荷状況
            // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<

            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
            if (this._opt_Meigo == Convert.ToInt32(Option.ON))
            {
                #region 地区
                // 地区
                if (this.ultraCheckEditor_salesArea.Checked && !ultraCheckEditor_salesArea_base.Checked)
                {
                    this.ultraLabel_salesArea.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.ultraLabel_salesArea.Visible = true;
                    this.ultraLabel_salesArea.Width = 80;
                    this._currentLocationX += CT_INTERVAL_LABEL;

                    this.tEdit_SalesAreaNm.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tEdit_SalesAreaNm.Visible = true;
                    this.tEdit_SalesAreaNm.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                    this.tEdit_SalesAreaNm.TabIndex = tabIndex++;

                    this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                    this.uButton_SalesAreaCdGuide.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.uButton_SalesAreaCdGuide.Visible = true;
                    this.uButton_SalesAreaCdGuide.TabIndex = tabIndex++;

                    this._currentLocationX += CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X2 - CT_INTERVAL_EDIT_WITHBUTTON;

                    displayedItemCount++;
                    if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                    {
                        this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                        this._currentLocationY += CT_INTERVAL_HEIGHT;
                    }
                }
                else
                {
                    if (!this.ultraCheckEditor_salesArea_base.Checked)
                    {
                        this.tEdit_SalesAreaNm.Text = string.Empty;
                        this._salesAreaNm = string.Empty;
                        this._salesAreaCd = 0;
                    }
                }
                #endregion

                #region 分析コード
                // 分析コード
                if (this.ultraCheckEditor_custAnalysCode.Checked && !ultraCheckEditor_custAnalysCode_base.Checked)
                {
                    this.ultraLabel_custAnalysCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.ultraLabel_custAnalysCode.Visible = true;
                    this._currentLocationX += CT_INTERVAL_LABEL;

                    this.tNedit_CustAnalysCode1.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tNedit_CustAnalysCode1.Visible = true;
                    this.tNedit_CustAnalysCode1.Width = CUSTANALYS_LENGTH;
                    this.tNedit_CustAnalysCode1.TabIndex = tabIndex++;
                    this._currentLocationX += CUSTANALYS_LENGTH+2;
                    this.tNedit_CustAnalysCode2.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tNedit_CustAnalysCode2.Visible = true;
                    this.tNedit_CustAnalysCode2.Width = CUSTANALYS_LENGTH;
                    this.tNedit_CustAnalysCode2.TabIndex = tabIndex++;
                    this._currentLocationX += CUSTANALYS_LENGTH + 2;
                    this.tNedit_CustAnalysCode3.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tNedit_CustAnalysCode3.Visible = true;
                    this.tNedit_CustAnalysCode3.Width = CUSTANALYS_LENGTH;
                    this.tNedit_CustAnalysCode3.TabIndex = tabIndex++;
                    this._currentLocationX += CUSTANALYS_LENGTH + 2;
                    this.tNedit_CustAnalysCode4.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tNedit_CustAnalysCode4.Visible = true;
                    this.tNedit_CustAnalysCode4.Width = CUSTANALYS_LENGTH;
                    this.tNedit_CustAnalysCode4.TabIndex = tabIndex++;
                    this._currentLocationX += CUSTANALYS_LENGTH + 2;
                    this.tNedit_CustAnalysCode5.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tNedit_CustAnalysCode5.Visible = true;
                    this.tNedit_CustAnalysCode5.Width = CUSTANALYS_LENGTH;
                    this.tNedit_CustAnalysCode5.TabIndex = tabIndex++;
                    this._currentLocationX += CUSTANALYS_LENGTH + 2;
                    this.tNedit_CustAnalysCode6.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tNedit_CustAnalysCode6.Visible = true;
                    this.tNedit_CustAnalysCode6.Width = CUSTANALYS_LENGTH;
                    this.tNedit_CustAnalysCode6.TabIndex = tabIndex++;

                    this._currentLocationX += CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X2 - CUSTANALYS_LENGTH*5 - 10;

                    displayedItemCount++;
                    if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                    {
                        this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                        this._currentLocationY += CT_INTERVAL_HEIGHT;
                    }
                }
                else
                {
                    if (!this.ultraCheckEditor_custAnalysCode_base.Checked)
                    {
                        this.tNedit_CustAnalysCode1.Text = string.Empty;
                        this.tNedit_CustAnalysCode2.Text = string.Empty;
                        this.tNedit_CustAnalysCode3.Text = string.Empty;
                        this.tNedit_CustAnalysCode4.Text = string.Empty;
                        this.tNedit_CustAnalysCode5.Text = string.Empty;
                        this.tNedit_CustAnalysCode6.Text = string.Empty;
                    }
                }
                #endregion
            }
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<

            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
            #region 受注作成区分
            if (this._opt_IKeMoTo == (int)Option.ON)
            {
                // 受注作成区分
                if ((this.uCheckAcptAnOdrMakeDiv.Checked) && (this.uCheckAcptAnOdrMakeDiv.Enabled == true))
                {
                    if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                    {
                        this._gridUpKeyBackControl = tComboEditor_AcptAnOdrMakeDiv;
                    }

                    // 受注作成区分ラベル
                    this.uLabel_AcptAnOdrMakeDiv.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.uLabel_AcptAnOdrMakeDiv.Visible = true;
                    this._currentLocationX += CT_INTERVAL_LABEL;

                    // 受注作成区分コンボボックス
                    this.tComboEditor_AcptAnOdrMakeDiv.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tComboEditor_AcptAnOdrMakeDiv.Visible = true;
                    this.tComboEditor_AcptAnOdrMakeDiv.Width = CT_INTERVAL_COMBOBOX;
                    this.tComboEditor_AcptAnOdrMakeDiv.TabIndex = tabIndex++;
                    this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X2;

                    displayedItemCount++;
                    if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0)
                    {
                        this._currentLocationX = CT_INITIAL_FIELD_POSITION_X;
                        this._currentLocationY += CT_INTERVAL_HEIGHT;
                    }
                }
                else
                {
                    if (!this.uCheckAcptAnOdrMakeDiv_base.Checked)
                    {
                        tComboEditor_AcptAnOdrMakeDiv.SelectedIndex = 0;
                    }
                }
            }
            #endregion // 受注作成区分
            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<

            // 拡張検索条件エリアの表示/非表示を設定
            if (displayedItemCount > 0)
            {
                // 一つでも項目がチェックされていれば表示
                this.uExGroupBox_ExtraCondition.Visible = true;
            }
            else
            {
                // 項目が一つもチェックされていなければ非表示
                this.uExGroupBox_ExtraCondition.Visible = false;
            }

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
            //// 展開していなければ展開
            //if ( !this.uExGroupBox_ExtraCondition.Expanded ) this.uExGroupBox_ExtraCondition.Expanded = true;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL

            // 拡張検索条件エリアの高さを計算
            if (displayedItemCount % CT_INITIAL_ROW_COUNT == 0) this._currentLocationY -= CT_INTERVAL_HEIGHT;  // 項目数が3の倍数個の時は改行されているので改行を削除
            this.uExGroupBox_ExtraCondition.Height = this._currentLocationY + CT_INTERVAL_HEIGHT + CT_INTERVAL_HEIGHT;
        }

        /// <summary>
        /// 基本条件の表示
        /// </summary>
        /// <param name="tabIndex">tabIndex</param>
        /// <remarks>
        /// <br>Note		: 基本条件の表示を行いします。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009/12/28</br>
        /// <br>Update Note : 2011/11/29 朱 猛</br>
        /// <br>Redmine#8382得意先電子元帳の各項目間隔の調整</br>
        /// <br>Update Note : SPK車台番号文字列対応に伴う車台番号(VINコード)による抽出を可能にする</br>
        /// <br>Programmer  : FSI厚川 宏</br>
        /// <br>Date        : 2013/03/25</br>
        /// <br>Update Note : K2015/06/16 鮑晶</br>
        /// <br>管理番号    : 11101427-00</br>
        /// <br>            : メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
        /// <br>Update Note : 2016/01/21 脇田 靖之</br>
        /// <br>管理番号    : 11270007-00</br>
        /// <br>            : 仕掛一覧№2808 貸出受注対応</br>
        /// <br>            : ①検索条件に「出荷状況」項目を追加</br>
        /// <br>            : ②明細表示に計上数、未計上数項目を追加</br>
        /// <br>Update Note : K2016/02/23 時シン</br>
        /// <br>              ㈱イケモト 抽出条件にて受注作成区分を追加する対応</br>
        /// </remarks>
        private void DisplayCommonConditions(out int tabIndex)
        {
            tabIndex = 0;
            this._currentLocationX = 372;
            //this._currentLocationY = 24;// DEL 2010/01/14
            this._currentLocationY = 25;// ADD 2010/01/14
            int ctlCnt = 0; // ADD 2011/11/29 zhume Redmine#8382

            #region 伝票区分
            // 伝票区分
            if (this.uCheckSalesSlipCd_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tComboEditor_SalesSlipCd))
                {
                    tComboEditor_SalesSlipCd.SelectedIndex = 1; // 1:売上/返品
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 伝票区分ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_SalesSlipCdTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_SalesSlipCdTitle);
                this.uLabel_SalesSlipCdTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesSlipCdTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 伝票区分コンボボックス
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_SalesSlipCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_SalesSlipCd);
                this.tComboEditor_SalesSlipCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SalesSlipCd.Visible = true;
                this.tComboEditor_SalesSlipCd.Width = CT_INTERVAL_COMBOBOX;
                this.tComboEditor_SalesSlipCd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_SalesSlipCdTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_SalesSlipCd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_SalesSlipCdTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_SalesSlipCd);
                if (!this.uCheckSalesSlipCd.Checked)
                {
                    tComboEditor_SalesSlipCd.SelectedIndex = 1; // 1:売上/返品
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 伝票区分

            # region [明細区分]
            // 明細区分
            if (this.uCheckSalesSlipCdDtl_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tComboEditor_SalesSlipCdDtl))
                {
                    // 明細区分
                    tComboEditor_SalesSlipCdDtl.SelectedIndex = 0;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 明細区分ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_SalesSlipCdDtl);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_SalesSlipCdDtl);
                this.uLabel_SalesSlipCdDtl.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesSlipCdDtl.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 明細区分コンボボックス
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_SalesSlipCdDtl);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_SalesSlipCdDtl);
                this.tComboEditor_SalesSlipCdDtl.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SalesSlipCdDtl.Visible = true;
                this.tComboEditor_SalesSlipCdDtl.Width = CT_INTERVAL_COMBOBOX;
                this.tComboEditor_SalesSlipCdDtl.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_SalesSlipCdDtl);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_SalesSlipCdDtl);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_SalesSlipCdDtl);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_SalesSlipCdDtl);
                if (!this.uCheckSalesSlipCdDtl.Checked)
                {
                    tComboEditor_SalesSlipCdDtl.SelectedIndex = 0;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            # endregion

            #region 伝票番号
            // 伝票番号
            if (this.uCheckSalesSlipNum_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_SalesSlipNum))
                {
                    // 伝票番号
                    tEdit_SalesSlipNum.Clear();
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 伝票番号ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_SalesSlipNumTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_SalesSlipNumTitle);
                this.uLabel_SalesSlipNumTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesSlipNumTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 伝票番号tNedit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_SalesSlipNum);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_SalesSlipNum);
                this.tEdit_SalesSlipNum.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SalesSlipNum.Visible = true;
                this.tEdit_SalesSlipNum.Width = 150;
                this.tEdit_SalesSlipNum.TabIndex = tabIndex++;
                this._currentLocationX += 155;

                // 伝票番号ラベル２
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_SalesSlipNumEnd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_SalesSlipNumEnd);
                this.uLabel_SalesSlipNumEnd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesSlipNumEnd.Visible = true;
                this.uLabel_SalesSlipNumEnd.Width = 50;

                this._currentLocationX += 55;//CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_SalesSlipNumTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_SalesSlipNum);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_SalesSlipNumEnd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_SalesSlipNumTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_SalesSlipNum);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_SalesSlipNumEnd);
                if (!this.uCheckSalesSlipNum.Checked)
                {
                    tEdit_SalesSlipNum.Clear();
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 伝票番号

            #region 担当者
            // 担当者
            if (this.uCheckSalesEmployeeCd_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_SalesEmployeeCd))
                {
                    // 担当者
                    _swSalesEmployeeCd = string.Empty;
                    _swSalesEmployeeName = string.Empty;
                    tEdit_SalesEmployeeCd.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 担当者ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_SalesEmployeeCdTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_SalesEmployeeCdTitle);
                this.uLabel_SalesEmployeeCdTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesEmployeeCdTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 担当者tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_SalesEmployeeCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_SalesEmployeeCd);
                this.tEdit_SalesEmployeeCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SalesEmployeeCd.Visible = true;
                this.tEdit_SalesEmployeeCd.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_SalesEmployeeCd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 担当者ガイドボタン
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_SalesEmployeeCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_SalesEmployeeCd);
                this.uButton_SalesEmployeeCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_SalesEmployeeCd.Visible = true;
                this.uButton_SalesEmployeeCd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_SalesEmployeeCdTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_SalesEmployeeCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_SalesEmployeeCd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_SalesEmployeeCdTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_SalesEmployeeCd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_SalesEmployeeCd);
                if (!this.uCheckSalesEmployeeCd.Checked)
                {
                    _swSalesEmployeeCd = string.Empty;
                    _swSalesEmployeeName = string.Empty;
                    tEdit_SalesEmployeeCd.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 担当者

            #region 受注者
            // 受注者
            if (this.uCheckFrontEmployeeCd_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_FrontEmployeeCd))
                {
                    // 受注者
                    _swFrontEmployeeCd = string.Empty;
                    _swFrontEmployeeName = string.Empty;
                    tEdit_FrontEmployeeCd.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 受注者ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_FrontEmployeeCdTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_FrontEmployeeCdTitle);
                this.uLabel_FrontEmployeeCdTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_FrontEmployeeCdTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 受注者tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_FrontEmployeeCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_FrontEmployeeCd);
                this.tEdit_FrontEmployeeCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_FrontEmployeeCd.Visible = true;
                this.tEdit_FrontEmployeeCd.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_FrontEmployeeCd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 受注者ガイドボタン
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_FrontEmployeeCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_FrontEmployeeCd);
                this.uButton_FrontEmployeeCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_FrontEmployeeCd.Visible = true;
                this.uButton_FrontEmployeeCd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_FrontEmployeeCdTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_FrontEmployeeCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_FrontEmployeeCd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_FrontEmployeeCdTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_FrontEmployeeCd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_FrontEmployeeCd);
                if (!this.uCheckFrontEmployeeCd.Checked)
                {
                    _swFrontEmployeeCd = string.Empty;
                    _swFrontEmployeeName = string.Empty;
                    tEdit_FrontEmployeeCd.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 受注者

            #region 発行者
            // 発行者
            if (this.uCheckSalesInputCode_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_SalesInputCode))
                {
                    // 受注者
                    _swSalesInputCode = string.Empty;
                    _swSalesInputName = string.Empty;
                    tEdit_SalesInputCode.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 発行者ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_SalesInputCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_SalesInputCodeTitle);
                this.uLabel_SalesInputCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesInputCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 発行者tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_SalesInputCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_SalesInputCode);
                this.tEdit_SalesInputCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SalesInputCode.Visible = true;
                this.tEdit_SalesInputCode.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_SalesInputCode.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 発行者ガイドボタン
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_SalesInputCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_SalesInputCode);
                this.uButton_SalesInputCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_SalesInputCode.Visible = true;
                this.uButton_SalesInputCode.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_SalesInputCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_SalesInputCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_SalesInputCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_SalesInputCodeTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_SalesInputCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_SalesInputCode);
                if (!this.uCheckSalesInputCode.Checked)
                {
                    _swSalesInputCode = string.Empty;
                    _swSalesInputName = string.Empty;
                    tEdit_SalesInputCode.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 発行者

            #region 管理番号
            // 管理番号
            if (this.uCheckCarMngCode_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_CarMngCode))
                {
                    // 管理番号
                    tEdit_CarMngCode.Clear();
                    tComboEditor_SearchDiv.Value = CT_FUZZY_MATCHWITH;
                    _srCarMngCode = string.Empty;
                    _srRvCarMngCode = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 管理番号ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_CarMngCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_CarMngCodeTitle);
                this.uLabel_CarMngCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_CarMngCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 管理番号tNedit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_CarMngCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_CarMngCode);
                this.tEdit_CarMngCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_CarMngCode.Visible = true;
                this.tEdit_CarMngCode.TabIndex = tabIndex++;
                this.tEdit_CarMngCode.Width = 124;
                this._currentLocationX += 124 + 1;
                // 管理番号曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_SearchDiv);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_SearchDiv);
                this.tComboEditor_SearchDiv.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SearchDiv.Visible = true;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X - 2;
                this.tComboEditor_SearchDiv.TabIndex = tabIndex++;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_CarMngCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_CarMngCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_SearchDiv);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_CarMngCodeTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_CarMngCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_SearchDiv);
                if (!this.uCheckCarMngCode.Checked)
                {
                    tEdit_CarMngCode.Clear();
                    // ----------ADD 2010/12/20 ---------->>>>>
                    tComboEditor_SearchDiv.Value = CT_FUZZY_MATCHWITH;
                    _srCarMngCode = string.Empty;
                    _srRvCarMngCode = string.Empty;
                    // ----------ADD 2010/12/20 ----------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 管理番号

            #region 車種名称
            // 車種名称
            if (this.uCheckModelFullName_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_ModelFullName))
                {
                    // 車種名称
                    tEdit_ModelFullName.Text = string.Empty;
                    tComboEditor_ModelFullNameFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srModelFullName = string.Empty;
                    _srRvModelFullName = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 車種名称ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_ModelFullNameTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_ModelFullNameTitle);
                this.uLabel_ModelFullNameTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_ModelFullNameTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 車種名称tNedit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_ModelFullName);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_ModelFullName);
                this.tEdit_ModelFullName.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_ModelFullName.Visible = true;
                this.tEdit_ModelFullName.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                this.tEdit_ModelFullName.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // 車種名称曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_ModelFullNameFuzzy);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_ModelFullNameFuzzy);
                this.tComboEditor_ModelFullNameFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_ModelFullNameFuzzy.Visible = true;
                this.tComboEditor_ModelFullNameFuzzy.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_ModelFullNameTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_ModelFullName);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_ModelFullNameFuzzy);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_ModelFullNameTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_ModelFullName);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_ModelFullNameFuzzy);
                if (!this.uCheckModelFullName.Checked)
                {
                    tEdit_ModelFullName.Text = string.Empty;
                    // -------------ADD 2010/12/20 ----------------->>>>>
                    tComboEditor_ModelFullNameFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srModelFullName = string.Empty;
                    _srRvModelFullName = string.Empty;
                    // -------------ADD 2010/12/20 -----------------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 車種名称

            #region 型式
            // 型式
            if (this.uCheckFullModel_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_FullModel))
                {
                    // 型式
                    tEdit_FullModel.Text = string.Empty;
                    tComboEditor_FullModelFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srFullModel = string.Empty;
                    _srRvFullModel = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 型式ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_FullModelTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_FullModelTitle);
                this.uLabel_FullModelTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_FullModelTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 型式tNedit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_FullModel);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_FullModel);
                this.tEdit_FullModel.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_FullModel.Visible = true;
                this.tEdit_FullModel.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                this.tEdit_FullModel.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // 型式曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_FullModelFuzzy);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_FullModelFuzzy);
                this.tComboEditor_FullModelFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_FullModelFuzzy.Visible = true;
                this.tComboEditor_FullModelFuzzy.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_FullModelTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_FullModel);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_FullModelFuzzy);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_FullModelTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_FullModel);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_FullModelFuzzy);
                if (!this.uCheckFullModel.Checked)
                {
                    tEdit_FullModel.Text = string.Empty;
                    // -------------ADD 2010/12/20 ----------------->>>>>
                    tComboEditor_FullModelFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srFullModel = string.Empty;
                    _srRvFullModel = string.Empty;
                    // -------------ADD 2010/12/20 -----------------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 型式

            #region 車台No
            // 車台No
            if (this.uCheckSearchFrameNo_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                // ---------DEL 2013/03/25---------->>>>>
                //if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tNedit_SearchFrameNo))
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_SearchFrameNo))
                // ---------ADD 2013/03/25----------<<<<<
                {
                    // 車台No
                    // ---------DEL 2013/03/25---------->>>>>
                    //tNedit_SearchFrameNo.Clear();
                    // ---------DEL 2013/03/25----------<<<<<
                    // ---------ADD 2013/03/25---------->>>>>
                    tEdit_SearchFrameNo.Clear();
                    // ---------ADD 2013/03/25----------<<<<<
                    tComboEditor_SearchFrameNoFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srSearchFrameNo = string.Empty;
                    _srRvSearchFrameNo = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 車台Noラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_SearchFrameNoTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_SearchFrameNoTitle);
                this.uLabel_SearchFrameNoTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SearchFrameNoTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // ---------DEL 2013/03/25---------->>>>>
                //// 車台NotNedit
                //this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tNedit_SearchFrameNo);
                //this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tNedit_SearchFrameNo);
                //this.tNedit_SearchFrameNo.Location = new Point(this._currentLocationX, this._currentLocationY);
                //this.tNedit_SearchFrameNo.Visible = true;
                ////this.tNedit_SearchFrameNo.Width = CT_INTERVAL_EDIT;// DEL 2010/08/05
                //this.tNedit_SearchFrameNo.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;// ADD 2010/08/05
                //this.tNedit_SearchFrameNo.TabIndex = tabIndex++;
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                // 車台NotEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_SearchFrameNo);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_SearchFrameNo);
                this.tEdit_SearchFrameNo.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SearchFrameNo.Visible = true;
                this.tEdit_SearchFrameNo.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                this.tEdit_SearchFrameNo.TabIndex = tabIndex++;
                // ---------ADD 2013/03/25----------<<<<<

                //this._currentLocationX += CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X;// DEL 2010/08/05
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;// ADD 2010/08/05

                // ----------ADD 2010/08/05----------->>>>>
                // 車台番号曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_SearchFrameNoFuzzy);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_SearchFrameNoFuzzy);
                this.tComboEditor_SearchFrameNoFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SearchFrameNoFuzzy.Visible = true;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X - 2;
                this.tComboEditor_SearchFrameNoFuzzy.TabIndex = tabIndex++;
                // ----------ADD 2010/08/05-----------<<<<<
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_SearchFrameNoTitle);
                // ---------DEL 2013/03/25---------->>>>>
                //this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tNedit_SearchFrameNo);
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_SearchFrameNo);
                // ---------ADD 2013/03/25----------<<<<<
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_SearchFrameNoFuzzy);// ADD 2010/08/05
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_SearchFrameNoTitle);
                // ---------DEL 2013/03/25---------->>>>>
                //this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tNedit_SearchFrameNo);
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_SearchFrameNo);
                // ---------ADD 2013/03/25----------<<<<<
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_SearchFrameNoFuzzy);// ADD 2010/08/05
                if (!this.uCheckSearchFrameNo.Checked)
                {
                    // ---------DEL 2013/03/25---------->>>>>
                    //tNedit_SearchFrameNo.Clear();
                    // ---------DEL 2013/03/25----------<<<<<
                    // ---------ADD 2013/03/25---------->>>>>
                    tEdit_SearchFrameNo.Clear();
                    // ---------ADD 2013/03/25----------<<<<<
                    // -------------ADD 2010/12/20 ----------------->>>>>
                    tComboEditor_SearchFrameNoFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srSearchFrameNo = string.Empty;
                    _srRvSearchFrameNo = string.Empty;
                    // -------------ADD 2010/12/20 -----------------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 車台No

            #region 指示書No
            // 指示書No
            if (this.uCheckPartySalesSlipNum_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_PartySalesSlipNum))
                {
                    // 指示書No
                    tEdit_PartySalesSlipNum.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 指示書Noラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_PartySalesSlipNumTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_PartySalesSlipNumTitle);
                this.uLabel_PartySalesSlipNumTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_PartySalesSlipNumTitle.Visible = true;
                //this._currentLocationX += CT_INTERVAL_LABEL;  //DEL liusy 2012/08/08 for Redmine#31530
                this._currentLocationX += CT_INTERVAL_LABEL + 30; //ADD liusy 2012/08/08 for Redmine#31530

                // 指示書No tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_PartySalesSlipNum);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_PartySalesSlipNum);
                this.tEdit_PartySalesSlipNum.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_PartySalesSlipNum.Visible = true;
                //this.tEdit_PartySalesSlipNum.Width = CT_INTERVAL_EDIT;  //DEL liusy 2012/08/08 for Redmine#31530
                this.tEdit_PartySalesSlipNum.Width = CT_INTERVAL_EDIT - 25; //ADD liusy 2012/08/08 for Redmine#31530
                this.tEdit_PartySalesSlipNum.TabIndex = tabIndex++;
                //this._currentLocationX += CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X; // DEL 2012/08/22
                this._currentLocationX += CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X - 30;   // ADD 2012/08/22
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_PartySalesSlipNumTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_PartySalesSlipNum);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_PartySalesSlipNumTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_PartySalesSlipNum);
                if (!this.uCheckPartySalesSlipNum.Checked)
                {
                    tEdit_PartySalesSlipNum.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 指示書No

            #region カラー名称
            // カラー名称
            if (this.uCheckColorName1_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_ColorName1))
                {
                    // カラー名称
                    tEdit_ColorName1.Text = string.Empty;
                    tComboEditor_ColorName1Fuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srColorName1 = string.Empty;
                    _srRvColorName1 = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // カラー名称ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_ColorName1Title);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_ColorName1Title);
                this.uLabel_ColorName1Title.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_ColorName1Title.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // カラー名称tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_ColorName1);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_ColorName1);
                this.tEdit_ColorName1.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_ColorName1.Visible = true;
                this.tEdit_ColorName1.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                this.tEdit_ColorName1.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // カラー名称曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_ColorName1Fuzzy);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_ColorName1Fuzzy);
                this.tComboEditor_ColorName1Fuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_ColorName1Fuzzy.Visible = true;
                this.tComboEditor_ColorName1Fuzzy.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_ColorName1Title);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_ColorName1);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_ColorName1Fuzzy);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_ColorName1Title);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_ColorName1);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_ColorName1Fuzzy);
                if (!this.uCheckColorName1.Checked)
                {
                    tEdit_ColorName1.Text = string.Empty;
                    // -------------ADD 2010/12/20 ----------------->>>>>
                    tComboEditor_ColorName1Fuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srColorName1 = string.Empty;
                    _srRvColorName1 = string.Empty;
                    // -------------ADD 2010/12/20 -----------------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // カラー名称

            #region トリム名称
            // トリム名称
            if (this.uCheckTrimName_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_TrimName))
                {
                    // トリム名称
                    tEdit_TrimName.Text = string.Empty;
                    tComboEditor_TrimNameFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srTrimName = string.Empty;
                    _srRvTrimName = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // トリム名称ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_TrimNameTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_TrimNameTitle);
                this.uLabel_TrimNameTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_TrimNameTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // トリム名称tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_TrimName);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_TrimName);
                this.tEdit_TrimName.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_TrimName.Visible = true;
                this.tEdit_TrimName.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                this.tEdit_TrimName.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // トリム名称曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_TrimNameFuzzy);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_TrimNameFuzzy);
                this.tComboEditor_TrimNameFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_TrimNameFuzzy.Visible = true;
                this.tComboEditor_TrimNameFuzzy.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_TrimNameTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_TrimName);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_TrimNameFuzzy);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_TrimNameTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_TrimName);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_TrimNameFuzzy);
                if (!this.uCheckTrimName.Checked)
                {
                    tEdit_TrimName.Text = string.Empty;
                    // -------------ADD 2010/12/20 ----------------->>>>>
                    tComboEditor_TrimNameFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srTrimName = string.Empty;
                    _srRvTrimName = string.Empty;
                    // -------------ADD 2010/12/20 -----------------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // トリム名称

            #region UOE送信
            // UOE送信
            if (this.uCheckDataSendCode_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tComboEditor_DataSendCode))
                {
                    // UOE送信
                    tComboEditor_DataSendCode.SelectedIndex = 0;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // UOE送信ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_DataSendCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_DataSendCodeTitle);
                this.uLabel_DataSendCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_DataSendCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // UOE送信コンボボックス
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_DataSendCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_DataSendCode);
                this.tComboEditor_DataSendCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_DataSendCode.Visible = true;
                this.tComboEditor_DataSendCode.Width = CT_INTERVAL_EDIT;
                this.tComboEditor_DataSendCode.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_DataSendCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_DataSendCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_DataSendCodeTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_DataSendCode);
                if (!this.uCheckDataSendCode.Checked)
                {
                    tComboEditor_DataSendCode.SelectedIndex = 0;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // UOE送信

            #region 備考１
            // 備考１
            if (this.uCheckSlipNote_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_SlipNote))
                {
                    // 備考１
                    tEdit_SlipNote.Text = string.Empty;
                    tComboEditor_SlipNoteFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srSlipNote = string.Empty;
                    _srRvSlipNote = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 備考１ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_SlipNoteTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_SlipNoteTitle);
                this.uLabel_SlipNoteTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SlipNoteTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 備考１tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_SlipNote);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_SlipNote);
                this.tEdit_SlipNote.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SlipNote.Visible = true;
                this.tEdit_SlipNote.TabIndex = tabIndex++;
                this.tEdit_SlipNote.Width = 100;
                this._currentLocationX += 100 + 1;
                // 備考１ガイド
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_SlipNote);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_SlipNote);
                this.uButton_SlipNote.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_SlipNote.Visible = true;
                this._currentLocationX += 24 + 1;
                this.uButton_SlipNote.TabIndex = tabIndex++;

                // 備考１曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_SlipNoteFuzzy);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_SlipNoteFuzzy);
                this.tComboEditor_SlipNoteFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SlipNoteFuzzy.Visible = true;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X - 2;
                this.tComboEditor_SlipNoteFuzzy.TabIndex = tabIndex++;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_SlipNoteTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_SlipNote);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_SlipNote);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_SlipNoteFuzzy);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_SlipNoteTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_SlipNote);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_SlipNote);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_SlipNoteFuzzy);
                if (!this.uCheckSlipNote.Checked)
                {
                    tEdit_SlipNote.Text = string.Empty;
                    // -------------ADD 2010/12/20 ----------------->>>>>
                    tComboEditor_SlipNoteFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srSlipNote = string.Empty;
                    _srRvSlipNote = string.Empty;
                    // -------------ADD 2010/12/20 -----------------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 備考１

            #region 備考２
            // 備考２
            if (this.uCheckSlipNote2_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_SlipNote2))
                {
                    // 備考２
                    tEdit_SlipNote2.Text = string.Empty;
                    tComboEditor_SlipNote2Fuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srSlipNote2 = string.Empty;
                    _srRvSlipNote2 = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 備考２ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_SlipNote2Title);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_SlipNote2Title);
                this.uLabel_SlipNote2Title.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SlipNote2Title.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 備考２tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_SlipNote2);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_SlipNote2);
                this.tEdit_SlipNote2.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SlipNote2.Visible = true;
                this.tEdit_SlipNote2.TabIndex = tabIndex++;
                this.tEdit_SlipNote2.Width = 100;
                this._currentLocationX += 100 + 1;
                // 備考２ガイド
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_SlipNote2);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_SlipNote2);
                this.uButton_SlipNote2.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_SlipNote2.Visible = true;
                this._currentLocationX += 24 + 1;
                this.uButton_SlipNote2.TabIndex = tabIndex++;

                // 備考２曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_SlipNote2Fuzzy);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_SlipNote2Fuzzy);
                this.tComboEditor_SlipNote2Fuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SlipNote2Fuzzy.Visible = true;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X - 2;
                this.tComboEditor_SlipNote2Fuzzy.TabIndex = tabIndex++;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_SlipNote2Title);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_SlipNote2);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_SlipNote2);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_SlipNote2Fuzzy);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_SlipNote2Title);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_SlipNote2);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_SlipNote2);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_SlipNote2Fuzzy);
                if (!this.uCheckSlipNote2.Checked)
                {
                    tEdit_SlipNote2.Text = string.Empty;
                    // -------------ADD 2010/12/20 ----------------->>>>>
                    tComboEditor_SlipNote2Fuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srSlipNote2 = string.Empty;
                    _srRvSlipNote2 = string.Empty;
                    // -------------ADD 2010/12/20 -----------------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 備考２

            #region 備考３
            // 備考３
            if (this.uCheckSlipNote3_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_SlipNote3))
                {
                    // 備考３
                    tEdit_SlipNote3.Text = string.Empty;
                    tComboEditor_SlipNote3Fuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srSlipNote3 = string.Empty;
                    _srRvSlipNote3 = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 備考３ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_SlipNote3Title);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_SlipNote3Title);
                this.uLabel_SlipNote3Title.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SlipNote3Title.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 備考３tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_SlipNote3);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_SlipNote3);
                this.tEdit_SlipNote3.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SlipNote3.Visible = true;
                this.tEdit_SlipNote3.TabIndex = tabIndex++;
                this.tEdit_SlipNote3.Width = 100;
                this._currentLocationX += 100 + 1;
                // 備考３ガイド
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_SlipNote3);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_SlipNote3);
                this.uButton_SlipNote3.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_SlipNote3.Visible = true;
                this._currentLocationX += 24 + 1;
                this.uButton_SlipNote3.TabIndex = tabIndex++;

                // 備考３曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_SlipNote3Fuzzy);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_SlipNote3Fuzzy);
                this.tComboEditor_SlipNote3Fuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SlipNote3Fuzzy.Visible = true;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X - 2;
                this.tComboEditor_SlipNote3Fuzzy.TabIndex = tabIndex++;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_SlipNote3Title);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_SlipNote3);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_SlipNote3);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_SlipNote3Fuzzy);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_SlipNote3Title);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_SlipNote3);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_SlipNote3);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_SlipNote3Fuzzy);
                if (!this.uCheckSlipNote3.Checked)
                {
                    tEdit_SlipNote3.Text = string.Empty;
                    // -------------ADD 2010/12/20 ----------------->>>>>
                    tComboEditor_SlipNote3Fuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srSlipNote3 = string.Empty;
                    _srRvSlipNote3 = string.Empty;
                    // -------------ADD 2010/12/20 -----------------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 備考３

            #region UOEリマーク1
            // UOEリマーク1
            if (this.uCheckUoeRemark1_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_UoeRemark1))
                {
                    // UOEリマーク1
                    tEdit_UoeRemark1.Text = string.Empty;
                    tComboEditor_UoeRemark1Fuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srUOERemark1 = string.Empty;
                    _srRvUOERemark1 = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // UOEリマーク1ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_UoeRemark1Title);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_UoeRemark1Title);
                this.uLabel_UoeRemark1Title.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_UoeRemark1Title.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // UOEリマーク1tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_UoeRemark1);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_UoeRemark1);
                this.tEdit_UoeRemark1.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_UoeRemark1.Visible = true;
                this.tEdit_UoeRemark1.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                this.tEdit_UoeRemark1.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // UOEリマーク1曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_UoeRemark1Fuzzy);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_UoeRemark1Fuzzy);
                this.tComboEditor_UoeRemark1Fuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_UoeRemark1Fuzzy.Visible = true;
                this.tComboEditor_UoeRemark1Fuzzy.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_UoeRemark1Title);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_UoeRemark1);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_UoeRemark1Fuzzy);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_UoeRemark1Title);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_UoeRemark1);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_UoeRemark1Fuzzy);
                if (!this.uCheckUoeRemark1.Checked)
                {
                    tEdit_UoeRemark1.Text = string.Empty;
                    // -------------ADD 2010/12/20 ----------------->>>>>
                    tComboEditor_UoeRemark1Fuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srUOERemark1 = string.Empty;
                    _srRvUOERemark1 = string.Empty;
                    // -------------ADD 2010/12/20 -----------------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // UOEリマーク1

            #region UOEリマーク2
            // UOEリマーク2
            if (this.uCheckUoeRemark2_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_UoeRemark2))
                {
                    // UOEリマーク2
                    tEdit_UoeRemark2.Text = string.Empty;
                    tComboEditor_UoeRemark2Fuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srUOERemark2 = string.Empty;
                    _srRvUOERemark2 = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // UOEリマーク2ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_UoeRemark2Title);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_UoeRemark2Title);
                this.uLabel_UoeRemark2Title.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_UoeRemark2Title.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // UOEリマーク2tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_UoeRemark2);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_UoeRemark2);
                this.tEdit_UoeRemark2.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_UoeRemark2.Visible = true;
                this.tEdit_UoeRemark2.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                this.tEdit_UoeRemark2.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // UOEリマーク2曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_UoeRemark2Fuzzy);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_UoeRemark2Fuzzy);
                this.tComboEditor_UoeRemark2Fuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_UoeRemark2Fuzzy.Visible = true;
                this.tComboEditor_UoeRemark2Fuzzy.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;

            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_UoeRemark2Title);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_UoeRemark2);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_UoeRemark2Fuzzy);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_UoeRemark2Title);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_UoeRemark2);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_UoeRemark2Fuzzy);
                if (!this.uCheckUoeRemark2.Checked)
                {
                    tEdit_UoeRemark2.Text = string.Empty;
                    // -------------ADD 2010/12/20 ----------------->>>>>
                    tComboEditor_UoeRemark2Fuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srUOERemark2 = string.Empty;
                    _srRvUOERemark2 = string.Empty;
                    // -------------ADD 2010/12/20 -----------------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // UOEリマーク2

            # region [商品大分類]
            // 商品大分類
            if (this.uCheckGoodsLGroup_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_GoodsLGroup))
                {
                    // 商品大分類
                    _swGoodsLGroup = 0;
                    _swGoodsLGroupName = string.Empty;
                    tEdit_GoodsLGroup.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 商品大分類ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_GoodsLGroup);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_GoodsLGroup);
                this.uLabel_GoodsLGroup.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_GoodsLGroup.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 商品大分類tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_GoodsLGroup);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_GoodsLGroup);
                this.tEdit_GoodsLGroup.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_GoodsLGroup.Visible = true;
                this.tEdit_GoodsLGroup.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_GoodsLGroup.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 商品大分類ガイドボタン
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_GoodsLGroup);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_GoodsLGroup);
                this.uButton_GoodsLGroup.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_GoodsLGroup.Visible = true;
                this.uButton_GoodsLGroup.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_GoodsLGroup);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_GoodsLGroup);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_GoodsLGroup);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_GoodsLGroup);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_GoodsLGroup);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_GoodsLGroup);
                if (!this.uCheckGoodsLGroup.Checked)
                {
                    _swGoodsLGroup = 0;
                    _swGoodsLGroupName = string.Empty;
                    tEdit_GoodsLGroup.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            # endregion

            # region [商品中分類]
            // 商品中分類
            if (this.uCheckGoodsMGroup_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_GoodsMGroup))
                {
                    // 商品中分類
                    _swGoodsMGroup = 0;
                    _swGoodsMGroupName = string.Empty;
                    tEdit_GoodsMGroup.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 商品大分類ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_GoodsMGroup);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_GoodsMGroup);
                this.uLabel_GoodsMGroup.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_GoodsMGroup.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 商品大分類tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_GoodsMGroup);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_GoodsMGroup);
                this.tEdit_GoodsMGroup.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_GoodsMGroup.Visible = true;
                this.tEdit_GoodsMGroup.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_GoodsMGroup.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 商品大分類ガイドボタン
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_GoodsMGroup);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_GoodsMGroup);
                this.uButton_GoodsMGroup.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_GoodsMGroup.Visible = true;
                this.uButton_GoodsMGroup.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;

            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_GoodsMGroup);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_GoodsMGroup);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_GoodsMGroup);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_GoodsMGroup);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_GoodsMGroup);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_GoodsMGroup);
                if (!this.uCheckGoodsMGroup.Checked)
                {
                    _swGoodsMGroup = 0;
                    _swGoodsMGroupName = string.Empty;
                    tEdit_GoodsMGroup.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            # endregion

            #region BLグループ
            // BLグループ
            if (this.uCheckBLGroupCode_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_BlGroupCode))
                {
                    // BLグループ
                    _swBLGroupCode = 0;
                    _swBLGroupName = string.Empty;
                    tEdit_BlGroupCode.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // BLグループラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_BlGroupCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_BlGroupCodeTitle);
                this.uLabel_BlGroupCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_BlGroupCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // BLグループtEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_BlGroupCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_BlGroupCode);
                this.tEdit_BlGroupCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_BlGroupCode.Visible = true;
                this.tEdit_BlGroupCode.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_BlGroupCode.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // BLグループガイドボタン
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_BlGroupCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_BlGroupCode);
                this.uButton_BlGroupCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_BlGroupCode.Visible = true;
                this.uButton_BlGroupCode.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;

            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_BlGroupCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_BlGroupCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_BlGroupCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_BlGroupCodeTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_BlGroupCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_BlGroupCode);
                if (!this.uCheckBLGroupCode.Checked)
                {
                    _swBLGroupCode = 0;
                    _swBLGroupName = string.Empty;
                    tEdit_BlGroupCode.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // BLグループ

            #region BLコード
            // BLコード
            if (this.uCheckBLGoodsCode_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_BlGoodsCode))
                {
                    // BLコード
                    _swBLGoodsCode = 0;
                    _swBLGoodsName = string.Empty;
                    tEdit_BlGoodsCode.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // BLコードラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_BlGoodsCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_BlGoodsCodeTitle);
                this.uLabel_BlGoodsCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_BlGoodsCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // BLコードtEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_BlGoodsCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_BlGoodsCode);
                this.tEdit_BlGoodsCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_BlGoodsCode.Visible = true;
                this.tEdit_BlGoodsCode.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_BlGoodsCode.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // BLコードガイドボタン
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_BlGoodsCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_BlGoodsCode);
                this.uButton_BlGoodsCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_BlGoodsCode.Visible = true;
                this.uButton_BlGoodsCode.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_BlGoodsCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_BlGoodsCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_BlGoodsCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_BlGoodsCodeTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_BlGoodsCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_BlGoodsCode);
                if (!this.uCheckBLGoodsCode.Checked)
                {
                    _swBLGoodsCode = 0;
                    _swBLGoodsName = string.Empty;
                    tEdit_BlGoodsCode.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // BLコード

            #region 品名
            // 品名
            if (this.uCheckGoodsName_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_GoodsName))
                {
                    // 品名
                    tEdit_GoodsName.Text = string.Empty;
                    tComboEditor_GoodsNameFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srGoodsName = string.Empty;
                    _srRvGoodsName = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 品名ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_GoodsNameTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_GoodsNameTitle);
                this.uLabel_GoodsNameTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_GoodsNameTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 品名tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_GoodsName);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_GoodsName);
                this.tEdit_GoodsName.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_GoodsName.Visible = true;
                this.tEdit_GoodsName.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                this.tEdit_GoodsName.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // 品名曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_GoodsNameFuzzy);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_GoodsNameFuzzy);
                this.tComboEditor_GoodsNameFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_GoodsNameFuzzy.Visible = true;
                this.tComboEditor_GoodsNameFuzzy.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_GoodsNameTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_GoodsName);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_GoodsNameFuzzy);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_GoodsNameTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_GoodsName);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_GoodsNameFuzzy);
                if (!this.uCheckGoodsName.Checked)
                {
                    tEdit_GoodsName.Text = string.Empty;
                    // -------------ADD 2010/12/20 ----------------->>>>>
                    tComboEditor_GoodsNameFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srGoodsName = string.Empty;
                    _srRvGoodsName = string.Empty;
                    // -------------ADD 2010/12/20 -----------------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 品名

            #region 品番
            // 品番
            if (this.uCheckGoodsNo_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_GoodsNo))
                {
                    // 品番
                    tEdit_GoodsNo.Text = string.Empty;
                    tComboEditor_GoodsNoFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srGoodsNo = string.Empty;
                    _srRvGoodsNo = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 品番ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_GoodsNoTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_GoodsNoTitle);
                this.uLabel_GoodsNoTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_GoodsNoTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 品番tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_GoodsNo);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_GoodsNo);
                this.tEdit_GoodsNo.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_GoodsNo.Visible = true;
                this.tEdit_GoodsNo.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                this.tEdit_GoodsNo.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // 品番曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_GoodsNoFuzzy);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_GoodsNoFuzzy);
                this.tComboEditor_GoodsNoFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_GoodsNoFuzzy.Visible = true;
                this.tComboEditor_GoodsNoFuzzy.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_GoodsNoTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_GoodsNo);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_GoodsNoFuzzy);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_GoodsNoTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_GoodsNo);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_GoodsNoFuzzy);
                if (!this.uCheckGoodsNo.Checked)
                {
                    tEdit_GoodsNo.Text = string.Empty;
                    // ----------ADD 2010/12/20 --------------->>>>>
                    tComboEditor_GoodsNoFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srGoodsNo = string.Empty;
                    _srRvGoodsNo = string.Empty;
                    // ----------ADD 2010/12/20 ---------------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 品番

            #region メーカー
            // メーカー
            if (this.uCheckGoodsMakerCd_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_MakerCd))
                {
                    // メーカー
                    _swGoodsMakerCd = 0;
                    _swGoodsMakerName = string.Empty;
                    tEdit_MakerCd.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // メーカーラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_MakerCdTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_MakerCdTitle);
                this.uLabel_MakerCdTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_MakerCdTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // メーカーtEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_MakerCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_MakerCd);
                this.tEdit_MakerCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_MakerCd.Visible = true;
                this.tEdit_MakerCd.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_MakerCd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // メーカーガイドボタン
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_MakerCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_MakerCd);
                this.uButton_MakerCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_MakerCd.Visible = true;
                this.uButton_MakerCd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_MakerCdTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_MakerCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_MakerCd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_MakerCdTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_MakerCd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_MakerCd);
                if (!this.uCheckGoodsMakerCd.Checked)
                {
                    _swGoodsMakerCd = 0;
                    _swGoodsMakerName = string.Empty;
                    tEdit_MakerCd.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // メーカー

            #region 販売区分
            // 販売区分
            if (this.uCheckSalesCode_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_SalesCode))
                {
                    // 販売区分
                    _swSalesCode = 0;
                    _swSalesName = string.Empty;
                    tEdit_SalesCode.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 販売区分ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_SalesCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_SalesCodeTitle);
                this.uLabel_SalesCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 販売区分tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_SalesCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_SalesCode);
                this.tEdit_SalesCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SalesCode.Visible = true;
                this.tEdit_SalesCode.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_SalesCode.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 販売区分ガイドボタン
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_SalesCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_SalesCode);
                this.uButton_SalesCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_SalesCode.Visible = true;
                this.uButton_SalesCode.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_SalesCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_SalesCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_SalesCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_SalesCodeTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_SalesCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_SalesCode);
                if (!this.uCheckSalesCode.Checked)
                {
                    _swSalesCode = 0;
                    _swSalesName = string.Empty;
                    tEdit_SalesCode.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 販売区分

            #region 自社分類
            // 自社分類
            if (this.uCheckEnterpriseGanreCode_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_EnterpriseGanreCode))
                {
                    // 自社分類
                    _swEnterpriseGanreCode = 0;
                    _swEnterpriseGanreName = string.Empty;
                    tEdit_EnterpriseGanreCode.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 自社分類ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_EnterpriseGanreCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_EnterpriseGanreCodeTitle);
                this.uLabel_EnterpriseGanreCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_EnterpriseGanreCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 自社分類tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_EnterpriseGanreCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_EnterpriseGanreCode);
                this.tEdit_EnterpriseGanreCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_EnterpriseGanreCode.Visible = true;
                this.tEdit_EnterpriseGanreCode.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_EnterpriseGanreCode.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 自社分類ガイドボタン
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_EnterpriseGanreCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_EnterpriseGanreCode);
                this.uButton_EnterpriseGanreCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_EnterpriseGanreCode.Visible = true;
                this.uButton_EnterpriseGanreCode.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_EnterpriseGanreCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_EnterpriseGanreCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_EnterpriseGanreCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_EnterpriseGanreCodeTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_EnterpriseGanreCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_EnterpriseGanreCode);
                if (!this.uCheckEnterpriseGanreCode.Checked)
                {
                    _swEnterpriseGanreCode = 0;
                    _swEnterpriseGanreName = string.Empty;
                    tEdit_EnterpriseGanreCode.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 自社分類

            # region [商品属性]
            // 商品属性
            if (this.uCheckGoodsKindCode_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tComboEditor_GoodsKindCode))
                {
                    // 商品属性
                    tComboEditor_GoodsKindCode.SelectedIndex = 0;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 商品属性ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_GoodsKindCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_GoodsKindCode);
                this.uLabel_GoodsKindCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_GoodsKindCode.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 商品属性コンボボックス
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_GoodsKindCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_GoodsKindCode);
                this.tComboEditor_GoodsKindCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_GoodsKindCode.Visible = true;
                this.tComboEditor_GoodsKindCode.Width = CT_INTERVAL_COMBOBOX;
                this.tComboEditor_GoodsKindCode.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_GoodsKindCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_GoodsKindCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_GoodsKindCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_GoodsKindCode);
                if (!this.uCheckGoodsKindCode.Checked)
                {
                    tComboEditor_GoodsKindCode.SelectedIndex = 0;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            # endregion

            #region 在庫取寄区分
            // 在庫取寄区分
            if (this.uCheckSalesOrderDivCd_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tComboEditor_SalesOrderDivCd))
                {
                    // 在庫取寄区分
                    tComboEditor_SalesOrderDivCd.SelectedIndex = 0;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 在庫取寄区分ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_SalesOrderDivCdTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_SalesOrderDivCdTitle);
                this.uLabel_SalesOrderDivCdTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SalesOrderDivCdTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 在庫取寄区分コンボボックス
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_SalesOrderDivCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_SalesOrderDivCd);
                this.tComboEditor_SalesOrderDivCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_SalesOrderDivCd.Visible = true;
                this.tComboEditor_SalesOrderDivCd.Width = CT_INTERVAL_COMBOBOX;
                this.tComboEditor_SalesOrderDivCd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_SalesOrderDivCdTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_SalesOrderDivCd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_SalesOrderDivCdTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_SalesOrderDivCd);
                if (!this.uCheckSalesOrderDivCd.Checked)
                {
                    tComboEditor_SalesOrderDivCd.SelectedIndex = 0;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 在庫取寄区分

            #region 倉庫
            // 倉庫
            if (this.uCheckWarehouseCode_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_WarehouseCd))
                {
                    // 倉庫
                    _swWarehouseCd = string.Empty;
                    _swWarehouseName = string.Empty;
                    tEdit_WarehouseCd.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 倉庫ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_WarehouseCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_WarehouseCodeTitle);
                this.uLabel_WarehouseCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_WarehouseCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 倉庫tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_WarehouseCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_WarehouseCd);
                this.tEdit_WarehouseCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_WarehouseCd.Visible = true;
                this.tEdit_WarehouseCd.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_WarehouseCd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 倉庫ガイドボタン
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_WarehouseCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_WarehouseCd);
                this.uButton_WarehouseCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_WarehouseCd.Visible = true;
                this.uButton_WarehouseCd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_WarehouseCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_WarehouseCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_WarehouseCd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_WarehouseCodeTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_WarehouseCd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_WarehouseCd);
                if (!this.uCheckWarehouseCode.Checked)
                {
                    _swWarehouseCd = string.Empty;
                    _swWarehouseName = string.Empty;
                    tEdit_WarehouseCd.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 倉庫

            # region [棚番]
            // 棚番
            if (this.uCheckWarehouseShelfNo_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_WarehouseShelfNo))
                {
                    // 棚番
                    tEdit_WarehouseShelfNo.Text = string.Empty;
                    tComboEditor_WarehouseShelfNoFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srWarehouseShelfNo = string.Empty;
                    _srRvWarehouseShelfNo = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 棚番ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_WarehouseShelfNo);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_WarehouseShelfNo);
                this.uLabel_WarehouseShelfNo.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_WarehouseShelfNo.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 棚番tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_WarehouseShelfNo);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_WarehouseShelfNo);
                this.tEdit_WarehouseShelfNo.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_WarehouseShelfNo.Visible = true;
                this.tEdit_WarehouseShelfNo.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                this.tEdit_WarehouseShelfNo.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // 棚番曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_WarehouseShelfNoFuzzy);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_WarehouseShelfNoFuzzy);
                this.tComboEditor_WarehouseShelfNoFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_WarehouseShelfNoFuzzy.Visible = true;
                this.tComboEditor_WarehouseShelfNoFuzzy.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_WarehouseShelfNo);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_WarehouseShelfNo);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_WarehouseShelfNoFuzzy);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_WarehouseShelfNo);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_WarehouseShelfNo);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_WarehouseShelfNoFuzzy);
                if (!this.uCheckWarehouseShelfNo.Checked)
                {
                    tEdit_WarehouseShelfNo.Text = string.Empty;
                    // -------------ADD 2010/12/20 ----------------->>>>>
                    tComboEditor_WarehouseShelfNoFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srWarehouseShelfNo = string.Empty;
                    _srRvWarehouseShelfNo = string.Empty;
                    // -------------ADD 2010/12/20 -----------------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            # endregion

            #region 仕入伝票番号
            // 仕入伝票番号
            if (this.uCheckSupplierSlipNo_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_SupplierSlipNo))
                {
                    // 仕入伝票番号
                    tEdit_SupplierSlipNo.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 仕入伝票番号ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_SupplierSlipNoTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_SupplierSlipNoTitle);
                this.uLabel_SupplierSlipNoTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SupplierSlipNoTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 仕入伝票番号 tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_SupplierSlipNo);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_SupplierSlipNo);
                this.tEdit_SupplierSlipNo.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SupplierSlipNo.Visible = true;
                this.tEdit_SupplierSlipNo.Width = CT_INTERVAL_EDIT;
                this.tEdit_SupplierSlipNo.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_SupplierSlipNoTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_SupplierSlipNo);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_SupplierSlipNoTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_SupplierSlipNo);
                if (!this.uCheckSupplierSlipNo.Checked)
                {
                    tEdit_SupplierSlipNo.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 仕入伝票番号

            #region 仕入先
            // 仕入先
            if (this.uCheckSupplierCd_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_SupplierCd))
                {
                    // 仕入先
                    _swSupplierCd = 0;
                    _swSupplierName = string.Empty;
                    tEdit_SupplierCd.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 仕入先ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_SupplierCdTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_SupplierCdTitle);
                this.uLabel_SupplierCdTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_SupplierCdTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 仕入先tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_SupplierCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_SupplierCd);
                this.tEdit_SupplierCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_SupplierCd.Visible = true;
                this.tEdit_SupplierCd.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_SupplierCd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 仕入先ガイドボタン
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_SupplierCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_SupplierCd);
                this.uButton_SupplierCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_SupplierCd.Visible = true;
                this.uButton_SupplierCd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_SupplierCdTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_SupplierCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_SupplierCd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_SupplierCdTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_SupplierCd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_SupplierCd);
                if (!this.uCheckSupplierCd.Checked)
                {
                    _swSupplierCd = 0;
                    _swSupplierName = string.Empty;
                    tEdit_SupplierCd.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 仕入先

            #region 発注先
            // 発注先
            if (this.uCheckUOESupplierCd_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_UOESupplierCd))
                {
                    // 発注先
                    _swUOESupplierCd = 0;
                    _swUOESupplierName = string.Empty;
                    tEdit_UOESupplierCd.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 発注先ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_UOESupplierCdTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_UOESupplierCdTitle);
                this.uLabel_UOESupplierCdTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_UOESupplierCdTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 発注先tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_UOESupplierCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_UOESupplierCd);
                this.tEdit_UOESupplierCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_UOESupplierCd.Visible = true;
                this.tEdit_UOESupplierCd.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_UOESupplierCd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 発注先ガイドボタン
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_UOESupplierCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_UOESupplierCd);
                this.uButton_UOESupplierCd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_UOESupplierCd.Visible = true;
                this.uButton_UOESupplierCd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_UOESupplierCdTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_UOESupplierCd);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_UOESupplierCd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_UOESupplierCdTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_UOESupplierCd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_UOESupplierCd);
                if (!this.uCheckUOESupplierCd.Checked)
                {
                    _swUOESupplierCd = 0;
                    _swUOESupplierName = string.Empty;
                    tEdit_UOESupplierCd.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 発注先

            # region 納入先
            // 納入先
            if (this.uCheckAddresseeCode_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_AddresseeCode))
                {
                    // 納入先
                    _swAddresseeCode = 0;
                    _swAddresseeName = string.Empty;
                    tEdit_AddresseeCode.Text = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 納入先ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_AddresseeCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_AddresseeCodeTitle);
                this.uLabel_AddresseeCodeTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_AddresseeCodeTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 納入先tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_AddresseeCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_AddresseeCode);
                this.tEdit_AddresseeCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_AddresseeCode.Visible = true;
                this.tEdit_AddresseeCode.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                this.tEdit_AddresseeCode.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                // 納入先ガイドボタン
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_AddresseeCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_AddresseeCode);
                this.uButton_AddresseeCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_AddresseeCode.Visible = true;
                this.uButton_AddresseeCode.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_AddresseeCodeTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_AddresseeCode);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_AddresseeCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_AddresseeCodeTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_AddresseeCode);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_AddresseeCode);
                if (!this.uCheckAddresseeCode.Checked)
                {
                    _swAddresseeCode = 0;
                    _swAddresseeName = string.Empty;
                    tEdit_AddresseeCode.Text = string.Empty;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            # endregion

            #region 明細備考
            // 明細備考
            if (this.uCheckDtlNote_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_DtlNote))
                {
                    // 明細備考
                    tEdit_DtlNote.Text = string.Empty;
                    tComboEditor_DtlNoteFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srDtlNote = string.Empty;
                    _srRvDtlNote = string.Empty;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 明細備考ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_DtlNoteTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_DtlNoteTitle);
                this.uLabel_DtlNoteTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_DtlNoteTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 明細備考tEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_DtlNote);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_DtlNote);
                this.tEdit_DtlNote.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_DtlNote.Visible = true;
                this.tEdit_DtlNote.Width = CT_INTERVAL_EDIT_WITHCOMBO - 4;
                this.tEdit_DtlNote.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHCOMBO;

                // 明細備考曖昧検索
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_DtlNoteFuzzy);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_DtlNoteFuzzy);
                this.tComboEditor_DtlNoteFuzzy.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_DtlNoteFuzzy.Visible = true;
                this.tComboEditor_DtlNoteFuzzy.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_FUZZYCOMBO + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_DtlNoteTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_DtlNote);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_DtlNoteFuzzy);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_DtlNoteTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_DtlNote);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_DtlNoteFuzzy);
                if (!this.uCheckDtlNote.Checked)
                {
                    tEdit_DtlNote.Text = string.Empty;
                    // -------------ADD 2010/12/20 ----------------->>>>>
                    tComboEditor_DtlNoteFuzzy.Value = CT_FUZZY_MATCHWITH;
                    _srDtlNote = string.Empty;
                    _srRvDtlNote = string.Empty;
                    // -------------ADD 2010/12/20 -----------------<<<<<
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 明細備考

            #region 削除指定区分
            // 削除指定区分
            if (this.uCheckDeleteFlag_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tComboEditor_DeleteFlag))
                {
                    // 削除指定区分
                    _logicalDelDiv = 0;
                    tComboEditor_DeleteFlag.SelectedIndex = 0;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 削除指定区分ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_DeleteFlagTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_DeleteFlagTitle);
                this.uLabel_DeleteFlagTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_DeleteFlagTitle.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 削除指定区分コンボボックス
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_DeleteFlag);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_DeleteFlag);
                this.tComboEditor_DeleteFlag.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_DeleteFlag.Visible = true;
                this.tComboEditor_DeleteFlag.Width = CT_INTERVAL_COMBOBOX;
                this.tComboEditor_DeleteFlag.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_DeleteFlagTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_DeleteFlag);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_DeleteFlagTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_DeleteFlag);
                if (!this.uCheckDeleteFlag.Checked)
                {
                    _logicalDelDiv = 0;
                    tComboEditor_DeleteFlag.SelectedIndex = 0;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 削除指定区分

            #region 請求先
            // 請求先
            if (this.uCheckClaimCode_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_ClaimName))
                {
                    // 請求先
                    this.tEdit_ClaimName.Text = string.Empty;
                    this._prevInputValue.ClaimCode = 0;
                    this._prevInputValue.ClaimName = string.Empty;
                    int customerCode = this.tNedit_CustomerCode.GetInt();
                    // 未入力時は明細へタブを切り替え
                    if (customerCode == 0)
                    {
                        if (this._selectedMainTabKey == "uTab_RemainList")
                        {
                            this._selectedMainTabKey = "uTab_SlipDetail";
                            this.uTabControl.Tabs["uTab_SlipDetail"].Selected = true;
                        }
                    }
                    //残高一覧グリッド内容クリア
                    this._detailDataSet.BalanceList.Clear();
                    if (this.tNedit_CustomerCode.GetInt() == 0) this._remainTabSelectable = false;
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 請求先ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_ClaimTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_ClaimTitle);
                this.uLabel_ClaimTitle.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_ClaimTitle.Visible = true;
                this._currentLocationX += 100;

                // 請求先略称
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_ClaimName);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_ClaimName);
                this.tEdit_ClaimName.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tEdit_ClaimName.Visible = true;
                this.tEdit_ClaimName.TabIndex = tabIndex++;
                this.tEdit_ClaimName.Width = CT_INTERVAL_EDIT_WITHBUTTON + 5;
                this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON + 9;
                // 請求先ガイド
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_ClaimGuide);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_ClaimGuide);
                this.uButton_ClaimGuide.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uButton_ClaimGuide.Visible = true;
                this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X - 9;
                this.uButton_ClaimGuide.TabIndex = tabIndex++;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_ClaimTitle);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_ClaimName);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_ClaimGuide);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_ClaimTitle);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_ClaimName);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_ClaimGuide);
                if (!this.uCheckClaimCode.Checked)
                {
                    this.tEdit_ClaimName.Text = string.Empty;
                    this._prevInputValue.ClaimCode = 0;
                    this._prevInputValue.ClaimName = string.Empty;
                    int customerCode = this.tNedit_CustomerCode.GetInt();
                    // 未入力時は明細へタブを切り替え
                    if (customerCode == 0)
                    {
                        if (this._selectedMainTabKey == "uTab_RemainList")
                        {
                            this._selectedMainTabKey = "uTab_SlipDetail";
                            this.uTabControl.Tabs["uTab_SlipDetail"].Selected = true;
                        }
                    }
                    //残高一覧グリッド内容クリア
                    this._detailDataSet.BalanceList.Clear();
                    if (this.tNedit_CustomerCode.GetInt() == 0) this._remainTabSelectable = false;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 請求先

            #region 入力日開始
            // 入力日開始
            if (this.uCheckAddUpADateSt_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tDateEdit_AddUpADateSt))
                {
                    // 入力日開始
                    tDateEdit_AddUpADateSt.Clear();
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 入力日開始ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_AddUpADateTitle_St);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_AddUpADateTitle_St);
                this.uLabel_AddUpADateTitle_St.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_AddUpADateTitle_St.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 入力日開始tDateEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tDateEdit_AddUpADateSt);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tDateEdit_AddUpADateSt);
                this.tDateEdit_AddUpADateSt.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tDateEdit_AddUpADateSt.Visible = true;
                this.tDateEdit_AddUpADateSt.Width = 176;
                this.tDateEdit_AddUpADateSt.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_AddUpADateTitle_St);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tDateEdit_AddUpADateSt);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_AddUpADateTitle_St);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tDateEdit_AddUpADateSt);
                if (!this.uCheckAddUpADateSt.Checked)
                {
                    tDateEdit_AddUpADateSt.Clear();
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 入力日開始

            #region 入力日終了
            // 入力日終了
            if (this.uCheckAddUpADateEd_base.Checked)
            {
                // -------------ADD 2010/12/20 ----------------->>>>>
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tDateEdit_AddUpADateEd))
                {
                    // 入力日終了
                    tDateEdit_AddUpADateEd.Clear();
                }
                // -------------ADD 2010/12/20 -----------------<<<<<
                // 入力日終了ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_AddUpADateTitle_Ed);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_AddUpADateTitle_Ed);
                this.uLabel_AddUpADateTitle_Ed.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_AddUpADateTitle_Ed.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 入力日終了tDateEdit
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tDateEdit_AddUpADateEd);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tDateEdit_AddUpADateEd);
                this.tDateEdit_AddUpADateEd.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tDateEdit_AddUpADateEd.Visible = true;
                this.tDateEdit_AddUpADateEd.Width = 176;
                this.tDateEdit_AddUpADateEd.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_AddUpADateTitle_Ed);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tDateEdit_AddUpADateEd);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_AddUpADateTitle_Ed);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tDateEdit_AddUpADateEd);
                if (!this.uCheckAddUpADateEd.Checked)
                {
                    tDateEdit_AddUpADateEd.Clear();
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                else
                {
                    ctlCnt++;
                }
                // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
            }
            #endregion // 入力日終了

            // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
            #region 自動回答
            if (this._opt_Pcc == (int)Option.ON)
            {
                // 自動回答
                if (this.uCheckAutoAnswerDivSCM_base.Checked)
                {
                    if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tComboEditor_AutoAnswerDivSCM))
                    {
                        // 自動回答
                        tComboEditor_AutoAnswerDivSCM.SelectedIndex = 0;
                    }
                    // 自動回答ラベル
                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_AutoAnswerDivSCM);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_AutoAnswerDivSCM);
                    this.uLabel_AutoAnswerDivSCM.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.uLabel_AutoAnswerDivSCM.Visible = true;
                    this._currentLocationX += CT_INTERVAL_LABEL;

                    // 自動回答ComboEditor
                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_AutoAnswerDivSCM);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_AutoAnswerDivSCM);
                    this.tComboEditor_AutoAnswerDivSCM.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tComboEditor_AutoAnswerDivSCM.Visible = true;
                    this.tComboEditor_AutoAnswerDivSCM.Width = 176;
                    this.tComboEditor_AutoAnswerDivSCM.TabIndex = tabIndex++;
                    this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;
                }
                else
                {
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_AutoAnswerDivSCM);
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_AutoAnswerDivSCM);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_AutoAnswerDivSCM);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_AutoAnswerDivSCM);
                    if (!this.uCheckAutoAnswerDivSCM.Checked)
                    {
                        tComboEditor_AutoAnswerDivSCM.SelectedIndex = 0;
                    }
                    // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                    else
                    {
                        ctlCnt++;
                    }
                    // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
                }
            }
            #endregion // 自動回答
            // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<

            //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>
            if (this._opt_Pcc == (int)Option.ON)
            {
                #region 問合せ番号
                if (this.uCheckInquiryNumber_base.Checked)
                {
                    if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tNedit_InquiryNumber))
                    {
                        // 問合せ番号
                        tNedit_InquiryNumber.Clear();
                        // --- DEL 2020/12/21 警告対応 ---------->>>>>
                        //_swInquiryNumber = 0;
                        // --- DEL 2020/12/21 警告対応 ----------<<<<<
                    }
                    // 問合せ番号ラベル
                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_InquiryNumber);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_InquiryNumber);
                    this.uLabel_InquiryNumber.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.uLabel_InquiryNumber.Visible = true;
                    this._currentLocationX += CT_INTERVAL_LABEL;

                    // 問合せ番号tNedit
                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tNedit_InquiryNumber);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tNedit_InquiryNumber);
                    this.tNedit_InquiryNumber.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tNedit_InquiryNumber.Visible = true;
                    this.tNedit_InquiryNumber.TabIndex = tabIndex++;
                    this.tNedit_InquiryNumber.Width = 124;
                    this._currentLocationX += 124 + 1;

                }
                else
                {
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_InquiryNumber);
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tNedit_InquiryNumber);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_InquiryNumber);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tNedit_InquiryNumber);
                    if (!this.uCheckInquiryNumber.Checked)
                    {
                        tNedit_InquiryNumber.Clear();
                        // --- DEL 2020/12/21 警告対応 ---------->>>>>
                        //_swInquiryNumber = 0;
                        // --- DEL 2020/12/21 警告対応 ----------<<<<<
                    }
                    // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
                    else
                    {
                        ctlCnt++;
                    }
                    // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<
                }
                #endregion
            }
            //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<

            // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
            #region 出荷状況
            // 出荷状況
            if (this.uCheckAddUpRemDiv_base.Checked)
            {
                if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tComboEditor_AddUpRemDiv))
                {
                    tComboEditor_AddUpRemDiv.SelectedIndex = 0; // 0:全て
                }
                // 出荷状況ラベル
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_AddUpRemDiv);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_AddUpRemDiv);
                this.uLabel_AddUpRemDiv.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.uLabel_AddUpRemDiv.Visible = true;
                this._currentLocationX += CT_INTERVAL_LABEL;

                // 出荷状況コンボボックス
                this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_AddUpRemDiv);
                this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_AddUpRemDiv);
                this.tComboEditor_AddUpRemDiv.Location = new Point(this._currentLocationX, this._currentLocationY);
                this.tComboEditor_AddUpRemDiv.Visible = true;
                this.tComboEditor_AddUpRemDiv.Enabled = false;
                this.tComboEditor_AddUpRemDiv.SelectedIndex = 0; // 0:全て
                this.tComboEditor_AddUpRemDiv.Width = CT_INTERVAL_COMBOBOX;
                this.tComboEditor_AddUpRemDiv.TabIndex = tabIndex++;
                this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;

                if (this.tComboEditor_SalesSlipCd.SelectedIndex == CT_SELECTEDINDEX_ACCEPTANORDER ||
                    this.tComboEditor_SalesSlipCd.SelectedIndex == CT_SELECTEDINDEX_SHIPMENT)
                {
                    // 貸出または受注の場合
                    this.tComboEditor_AddUpRemDiv.Enabled = true;
                }
            }
            else
            {
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_AddUpRemDiv);
                this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_AddUpRemDiv);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_AddUpRemDiv);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_AddUpRemDiv);
                if (!this.uCheckAddUpRemDiv.Checked)
                {
                    tComboEditor_AddUpRemDiv.SelectedIndex = 0; // 0:全て
                }
                else
                {
                    ctlCnt++;
                }
            }
            #endregion // 出荷状況
            // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<

            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
            if(this._opt_Meigo==Convert.ToInt32(Option.ON))
            {
                #region 地区
                // 地区
                if (this.ultraCheckEditor_salesArea_base.Checked)
                {
                    if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tEdit_SalesAreaNm))
                    {
                        tEdit_SalesAreaNm.Text = string.Empty;
                        this._salesAreaCd = 0;
                        this._salesAreaNm = string.Empty;
                    }
                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.ultraLabel_salesArea);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.ultraLabel_salesArea);
                    this.ultraLabel_salesArea.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.ultraLabel_salesArea.Visible = true;
                    this._currentLocationX += CT_INTERVAL_LABEL;

                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tEdit_SalesAreaNm);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tEdit_SalesAreaNm);
                    this.tEdit_SalesAreaNm.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tEdit_SalesAreaNm.Visible = true;
                    this.tEdit_SalesAreaNm.Width = CT_INTERVAL_EDIT_WITHBUTTON - 4;
                    this.tEdit_SalesAreaNm.TabIndex = tabIndex++;
                    this._currentLocationX += CT_INTERVAL_EDIT_WITHBUTTON;

                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uButton_SalesAreaCdGuide);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uButton_SalesAreaCdGuide);
                    this.uButton_SalesAreaCdGuide.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.uButton_SalesAreaCdGuide.Visible = true;
                    this._currentLocationX += CT_INTERVAL_BUTTON + CT_FIELD_INTERVAL_X ;

                    this.uButton_SalesAreaCdGuide.TabIndex = tabIndex++;
                }
                else
                {
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.ultraLabel_salesArea);
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tEdit_SalesAreaNm);
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uButton_SalesAreaCdGuide);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.ultraLabel_salesArea);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tEdit_SalesAreaNm);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uButton_SalesAreaCdGuide);
                    if (!this.ultraCheckEditor_salesArea.Checked)
                    {
                        tEdit_SalesAreaNm.Text = string.Empty;
                        this._salesAreaCd = 0;
                        this._salesAreaNm = String.Empty;
                    }
                    else
                    {
                        ctlCnt++;
                    }
                }
                #endregion

                #region 分析コード
                // 分析コード
                if (this.ultraCheckEditor_custAnalysCode_base.Checked)
                {
                    if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tNedit_CustAnalysCode1))
                    {
                        this.tNedit_CustAnalysCode1.Text = string.Empty;
                        this.tNedit_CustAnalysCode2.Text = string.Empty;
                        this.tNedit_CustAnalysCode3.Text = string.Empty;
                        this.tNedit_CustAnalysCode4.Text = string.Empty;
                        this.tNedit_CustAnalysCode5.Text = string.Empty;
                        this.tNedit_CustAnalysCode6.Text = string.Empty;
                    }
                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.ultraLabel_custAnalysCode);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.ultraLabel_custAnalysCode);
                    this.ultraLabel_custAnalysCode.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.ultraLabel_custAnalysCode.Visible = true;
                    this._currentLocationX += CT_INTERVAL_LABEL;

                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tNedit_CustAnalysCode1);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tNedit_CustAnalysCode1);
                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tNedit_CustAnalysCode2);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tNedit_CustAnalysCode2);
                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tNedit_CustAnalysCode3);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tNedit_CustAnalysCode3);
                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tNedit_CustAnalysCode4);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tNedit_CustAnalysCode4);
                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tNedit_CustAnalysCode5);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tNedit_CustAnalysCode5);
                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tNedit_CustAnalysCode6);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tNedit_CustAnalysCode6);
                    this.tNedit_CustAnalysCode1.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tNedit_CustAnalysCode1.Visible = true;
                    this.tNedit_CustAnalysCode1.Width = CUSTANALYS_LENGTH;
                    this.tNedit_CustAnalysCode1.TabIndex = tabIndex++;
                    this._currentLocationX += CUSTANALYS_LENGTH + 2;
                    this.tNedit_CustAnalysCode2.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tNedit_CustAnalysCode2.Visible = true;
                    this.tNedit_CustAnalysCode2.Width = CUSTANALYS_LENGTH;
                    this.tNedit_CustAnalysCode2.TabIndex = tabIndex++;
                    this._currentLocationX += CUSTANALYS_LENGTH + 2;
                    this.tNedit_CustAnalysCode3.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tNedit_CustAnalysCode3.Visible = true;
                    this.tNedit_CustAnalysCode3.Width = CUSTANALYS_LENGTH;
                    this.tNedit_CustAnalysCode3.TabIndex = tabIndex++;
                    this._currentLocationX += CUSTANALYS_LENGTH + 2;
                    this.tNedit_CustAnalysCode4.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tNedit_CustAnalysCode4.Visible = true;
                    this.tNedit_CustAnalysCode4.Width = CUSTANALYS_LENGTH;
                    this.tNedit_CustAnalysCode4.TabIndex = tabIndex++;
                    this._currentLocationX += CUSTANALYS_LENGTH + 2;
                    this.tNedit_CustAnalysCode5.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tNedit_CustAnalysCode5.Visible = true;
                    this.tNedit_CustAnalysCode5.Width = CUSTANALYS_LENGTH;
                    this.tNedit_CustAnalysCode5.TabIndex = tabIndex++;
                    this._currentLocationX += CUSTANALYS_LENGTH + 2;
                    this.tNedit_CustAnalysCode6.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tNedit_CustAnalysCode6.Visible = true;
                    this.tNedit_CustAnalysCode6.Width = CUSTANALYS_LENGTH;
                    this.tNedit_CustAnalysCode6.TabIndex = tabIndex++;

                    this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X - CUSTANALYS_LENGTH*5 -10;
                }
                else
                {
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.ultraLabel_custAnalysCode);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.ultraLabel_custAnalysCode);
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tNedit_CustAnalysCode1);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tNedit_CustAnalysCode1);
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tNedit_CustAnalysCode2);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tNedit_CustAnalysCode2);
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tNedit_CustAnalysCode3);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tNedit_CustAnalysCode3);
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tNedit_CustAnalysCode4);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tNedit_CustAnalysCode4);
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tNedit_CustAnalysCode5);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tNedit_CustAnalysCode5);
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tNedit_CustAnalysCode6);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tNedit_CustAnalysCode6);
                    if (!this.ultraCheckEditor_custAnalysCode.Checked)
                    {
                        this.tNedit_CustAnalysCode1.Text = string.Empty;
                        this.tNedit_CustAnalysCode2.Text = string.Empty;
                        this.tNedit_CustAnalysCode3.Text = string.Empty;
                        this.tNedit_CustAnalysCode4.Text = string.Empty;
                        this.tNedit_CustAnalysCode5.Text = string.Empty;
                        this.tNedit_CustAnalysCode6.Text = string.Empty;
                    }
                    else
                    {
                        ctlCnt++;
                    }
                }
                #endregion 
            }
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<

            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
            #region 受注作成区分
            if (this._opt_IKeMoTo == (int)Option.ON)
            {
                // 受注作成区分
                if (this.uCheckAcptAnOdrMakeDiv_base.Checked)
                {
                    if (this.ultraExpandableGroupBoxPanel2.Controls.Contains(this.tComboEditor_AcptAnOdrMakeDiv))
                    {
                        // 受注作成区分
                        tComboEditor_AcptAnOdrMakeDiv.SelectedIndex = 0;
                    }
                    // 受注作成区分ラベル
                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.uLabel_AcptAnOdrMakeDiv);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.uLabel_AcptAnOdrMakeDiv);
                    this.uLabel_AcptAnOdrMakeDiv.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.uLabel_AcptAnOdrMakeDiv.Visible = true;
                    this._currentLocationX += CT_INTERVAL_LABEL;

                    // 受注作成区分コンボボックス
                    this.ultraExpandableGroupBoxPanel2.Controls.Remove(this.tComboEditor_AcptAnOdrMakeDiv);
                    this.ultraExpandableGroupBoxPanel1.Controls.Add(this.tComboEditor_AcptAnOdrMakeDiv);
                    this.tComboEditor_AcptAnOdrMakeDiv.Location = new Point(this._currentLocationX, this._currentLocationY);
                    this.tComboEditor_AcptAnOdrMakeDiv.Visible = true;
                    this.tComboEditor_AcptAnOdrMakeDiv.Width = CT_INTERVAL_COMBOBOX;
                    this.tComboEditor_AcptAnOdrMakeDiv.TabIndex = tabIndex++;
                    this._currentLocationX += CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X;
                }
                else
                {
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.uLabel_AcptAnOdrMakeDiv);
                    this.ultraExpandableGroupBoxPanel1.Controls.Remove(this.tComboEditor_AcptAnOdrMakeDiv);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.uLabel_AcptAnOdrMakeDiv);
                    this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tComboEditor_AcptAnOdrMakeDiv);
                    if (!this.uCheckAcptAnOdrMakeDiv.Checked)
                    {
                        tComboEditor_AcptAnOdrMakeDiv.SelectedIndex = 0;
                    }
                    else
                    {
                        ctlCnt++;
                    }
                }
            }
            #endregion // 受注作成区分
            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<

            // -------------ADD 2011/11/29 zhume Redmine#8382 ----------------->>>>>
            if (ctlCnt > 2)
            {
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tLine35);
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tLine36);
                this.tLine35.Location = new Point(CT_INTERVAL_LABEL + CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X / 2 + 25, 0);
                this.tLine36.Location = new Point((CT_INTERVAL_LABEL + CT_INTERVAL_COMBOBOX) * 2 + CT_FIELD_INTERVAL_X + 43, 0);
                this.tLine35.Visible = true;
                this.tLine36.Visible = true;
            }
            else if (ctlCnt > 1)
            {
                this.ultraExpandableGroupBoxPanel2.Controls.Add(this.tLine35);
                this.tLine35.Location = new Point(CT_INTERVAL_LABEL + CT_INTERVAL_COMBOBOX + CT_FIELD_INTERVAL_X / 2 + 25, 0);
                this.tLine35.Visible = true;
                this.tLine36.Visible = false;
            }
            else
            {
                this.tLine35.Visible = false;
                this.tLine36.Visible = false;
            }
            // -------------ADD 2011/11/29 zhume Redmine#8382 -----------------<<<<<

            this.uExGroupBox_CommonCondition.Height = 75;

        }

        #endregion // 拡張検索条件チェックボックスペイン縮小イベント

        #region タブ切替時イベント

        /// <summary>
        /// タブ切替時イベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>
        /// <br>Update Note : 2009/11/25 呉元嘯</br>
        /// <br>              PM.NS保守依頼③ 不具合対応</br>
        /// <br>              選択してる行を明細タブと伝票タブでリンクするように修正</br>
        /// <br>Update Note : 2010/12/20 liyp</br>
        /// <br>            赤伝発行入力の入力可否制御変更（MANTIS: 16394）</br>
        /// <br>Update Note : 2010/12/20 yangmj</br>
        /// <br>              readmine#18652の修正</br>
        /// <br>Update Note : 2011/01/27 曹文傑</br>
        /// <br>              readmine#18652の修正</br>
        /// <br>Update Note : 2011/02/09 liyp</br>
        /// <br>            障害報告 #18842 赤伝発行入力の入力可否制御について</br>
        /// <br>Update Note : 2011/02/16 yangmj</br>
        /// <br>            障害報告 #19000 赤伝発行入力の入力可否制御について</br>
        /// <br>Update Note : 2012/06/01 30744 湯上 千加子</br>
        /// <br>              残高一覧表示の抽出拠点追加に伴う基本条件の変更</br>
        /// <br>Update Note : 2012/06/20 30744 湯上 千加子</br>
        /// <br>              残高一覧表示後、別のタブへ変更する場合の基本条件の値設定の修正</br>
        /// </remarks>
        void uTabControl_SelectedTabChanged(object sender, Infragistics.Win.UltraWinTabControl.SelectedTabChangedEventArgs e)
        {
            // どのタブが選択されているか取得
            string tabKey = e.Tab.Key.ToString();
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
            if (_selectedMainTabKey == tabKey) return;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 ADD
            switch (tabKey)
            {
                case "uTab_SlipList":
                    {
                        this._selectedMainTabKey = "uTab_SlipList";
                        this.uCheckEditor_StatusBar_AutoFillToGridColumn.Checked = this._columnWidthAutoAdjust_Slip;
                        // --- ADD 2009/11/25 ---------->>>>>
                        if (this.uGrid_Detail.ActiveRow != null && this.uGrid_Detail.ActiveCell == null)
                        {
                            ClearSlipActiveRow();
                            LinkDetailToSlip(this.uGrid_Detail.ActiveRow);

                        }
                        // --- ADD 2009/11/25 ----------<<<<<
                        autoColumnAdjust(this._columnWidthAutoAdjust_Slip, 0);
                        adjustButtonEnable(0);
                        adjustStatusBarCellExample(true);
                        setToolbarSearchSurface();  // 行検索ツールバーのプルダウン再設定
                        // -----------------------ADD 2011/01/21 ------------------------->>>>>
                        // 検索(F10)ボタンを無効とする
                        this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = true;
                        //-----------------------ADD 2011/01/21 -------------------------<<<<<
                        // ADD 2012/06/01 ----------------------->>>>>
                        // 残高一覧表示の抽出拠点が請求区分の時、基本条件の拠点コードを前の状態に戻す
                        if (Int32.Parse(this.tComboEditor_rl_RemainSectionType.SelectedItem.DataValue.ToString()).Equals((int)RemainSectionType.Claim))
                        {
                            if (!string.IsNullOrEmpty(this._custPrtPprBlnce.InputSectionCode.Trim()))
                            {
                                tEdit_SectionCodeAllowZero.Text = this._custPrtPprBlnce.InputSectionCode.Trim();
                                uLabel_SectionNm.Text = this._custPrtPprBlnce.InputSectionName.Trim();
                                this._custPrtPprBlnce.InputSectionCode = string.Empty;
                                this._custPrtPprBlnce.InputSectionName = string.Empty;
                                // ADD 2012/06/20 ----------------------------------------------------------->>>>>
                                _prevInputValue.SectionCode = this._custPrtPprBlnce.InputSectionCode.Trim();
                                // ADD 2012/06/20 -----------------------------------------------------------<<<<<
                            }
                        }
                        // ADD 2012/06/01 -----------------------<<<<<
                        break;
                    }
                case "uTab_SlipDetail":
                    {
                        // １伝票のみ選択されていた場合
                        // --- ADD 2009/11/25 ---------->>>>>
                        if (this.uGrid_Slip.ActiveRow != null && this.uGrid_Slip.ActiveCell == null)
                        {
                            ClearSlipDetailActiveRow();
                            LinkSlipToDetail(this.uGrid_Slip.ActiveRow);

                        }
                        // --- ADD 2009/11/25 ----------<<<<<
                        this._selectedMainTabKey = "uTab_SlipDetail";
                        this.uCheckEditor_StatusBar_AutoFillToGridColumn.Checked = this._columnWidthAutoAdjust_Detail;
                        this._selectedRowCountSlip = this._detailDataSet.SalesList.Select("Selection = true").Length;
                        // ----UPD 2009/09/07----------->>>>>
                        //if (e.PreviousSelectedTab.Key.ToString() == "uTab_SlipList" && this._selectedRowCountSlip > 0) ClearRedSlipInput();
                        if (e.PreviousSelectedTab.Key.ToString() == "uTab_SlipList" && this._selectedRowCountSlip > 0)
                        {
                            ClearRedSlipInput();
                            this.carMngLt.Clear();
                        }
                        // ----UPD 2009/09/07-----------<<<<<
                        this._selectedRowCountSlip = this._detailDataSet.SalesList.Select("Selection = true").Length;
                        if (e.PreviousSelectedTab.Key.ToString() == "uTab_SlipList" && this._selectedRowCountSlip == 1)
                        {
                            tabFlg = false;
                            SelectAllDetailFromSelectedSlip();
                            tabFlg = true;
                        }
                        autoColumnAdjust(this._columnWidthAutoAdjust_Detail, 1);
                        adjustButtonEnable(1);
                        adjustStatusBarCellExample(true);
                        setToolbarSearchSurface();  // 行検索ツールバーのプルダウン再設定
                        // ADD 2012/06/01 ----------------------->>>>>
                        // 残高一覧表示の抽出拠点が請求区分の時、基本条件の拠点コードを前の状態に戻す
                        if (Int32.Parse(this.tComboEditor_rl_RemainSectionType.SelectedItem.DataValue.ToString()).Equals((int)RemainSectionType.Claim))
                        {
                            if (!string.IsNullOrEmpty(this._custPrtPprBlnce.InputSectionCode.Trim()))
                            {
                                tEdit_SectionCodeAllowZero.Text = this._custPrtPprBlnce.InputSectionCode.Trim();
                                uLabel_SectionNm.Text = this._custPrtPprBlnce.InputSectionName.Trim();
                                this._custPrtPprBlnce.InputSectionCode = string.Empty;
                                this._custPrtPprBlnce.InputSectionName = string.Empty;
                                // ADD 2012/06/20 ----------------------------------------------------------->>>>>
                                _prevInputValue.SectionCode = this._custPrtPprBlnce.InputSectionCode.Trim();
                                // ADD 2012/06/20 -----------------------------------------------------------<<<<<
                            }
                        }
                        // ADD 2012/06/01 -----------------------<<<<<
                        //this._selectedRowCountSlip = 0;
                        // -----------------------ADD 2011/01/21 ------------------------->>>>>
                        // 検索(F10)ボタンを無効とする
                        this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = true;
                        // -----------------------ADD 2011/01/21 -------------------------<<<<<
                        break;
                    }
                case "uTab_RedSlip":
                    {
                        // ADD 2012/06/01 ----------------------->>>>>
                        // 残高一覧表示の抽出拠点が請求区分の時、基本条件の拠点コードを前の状態に戻す
                        if (Int32.Parse(this.tComboEditor_rl_RemainSectionType.SelectedItem.DataValue.ToString()).Equals((int)RemainSectionType.Claim))
                        {
                            if (!string.IsNullOrEmpty(this._custPrtPprBlnce.InputSectionCode.Trim()))
                            {
                                tEdit_SectionCodeAllowZero.Text = this._custPrtPprBlnce.InputSectionCode.Trim();
                                uLabel_SectionNm.Text = this._custPrtPprBlnce.InputSectionName.Trim();
                                this._custPrtPprBlnce.InputSectionCode = string.Empty;
                                this._custPrtPprBlnce.InputSectionName = string.Empty;
                                // ADD 2012/06/20 ----------------------------------------------------------->>>>>
                                _prevInputValue.SectionCode = this._custPrtPprBlnce.InputSectionCode.Trim();
                                // ADD 2012/06/20 -----------------------------------------------------------<<<<<
                            }
                        }
                        // ADD 2012/06/01 -----------------------<<<<<
                        // add 2011/08/06 duzg----------->>>>>
                        // 赤伝発行場合、伝票番号同じチェック
                        if (this._detailDataSet.RedSlipDetail.Count > 1)
                        {
                            string salesSlipNum = "";
                            bool isDiffSalesSlipNum = false;
                            bool isOnlineKindDiv = false;
                            foreach (DataRow dr in this._detailDataSet.RedSlipDetail.Rows)
                            {
                                if (String.IsNullOrEmpty(salesSlipNum))
                                {
                                    salesSlipNum = dr[this._detailDataSet.RedSlipDetail.SalesSlipNumColumn.ColumnName].ToString();
                                }
                                else
                                {
                                    if (!salesSlipNum.Equals(dr[this._detailDataSet.RedSlipDetail.SalesSlipNumColumn.ColumnName].ToString()))
                                    {
                                        isDiffSalesSlipNum = true;
                                    }
                                }
                                CustomerInfo sendCustomerInfo;
                                int sendCustomerCode = int.Parse(dr[this._detailDataSet.RedSlipDetail.CustomerCodeColumn.ColumnName].ToString());
                                int status = this._customerInfoAcs.ReadDBData(this._enterpriseCode, sendCustomerCode, out sendCustomerInfo);
                                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                                {
                                    if (sendCustomerInfo.OnlineKindDiv == 10)
                                    {
                                        isOnlineKindDiv = true;
                                    }
                                }
                            }
                            if (isOnlineKindDiv && isDiffSalesSlipNum)
                            {
                                //TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, "得意先に送信下伝票を含む場合、複数伝票の選択はできません。", -1, MessageBoxButtons.OK);// DEL 2014/08/12 SCM障害No.18の対応
                                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, "得意先に送信した伝票を含む場合、複数伝票の選択はできません。", -1, MessageBoxButtons.OK);// ADD 2014/08/12 SCM障害No.18の対応
                                this.uTabControl.Tabs[e.PreviousSelectedTab.Key].Selected = true;
                                if (this._control != null)
                                {
                                    this._control.Focus();
                                    this._control = null;
                                }
                                else
                                {
                                    // なし。
                                }
                                break;
                            }
                        }
                        // add 2011/08/06 duzg-----------<<<<<

                        // ADD 2014/01/30 吉岡 #41771 ------------>>>>>>>>>>>>>>>>>
                        string errorMessage;
                        // 異なる税率の行の選択が無いか、チェック
                        if (!CheckTaxRate(out errorMessage))
                        {
                            TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, errorMessage, -1, MessageBoxButtons.OK);
                            this.uTabControl.Tabs[e.PreviousSelectedTab.Key].Selected = true;
                            if (this._control != null)
                            {
                                this._control.Focus();
                                this._control = null;
                            }
                            break;
                        }
                        // ADD 2014/01/30 吉岡 #41771 ------------<<<<<<<<<<<<<<<<<

                        // １伝票のみ選択されていた場合
                        this._selectedMainTabKey = "uTab_RedSlip";
                        this.uCheckEditor_StatusBar_AutoFillToGridColumn.Checked = this._columnWidthAutoAdjust_RedSlip;
                        this._selectedRowCountSlip = this._detailDataSet.SalesList.Select("Selection = true").Length;
                        // ----UPD 2009/09/07----------->>>>>
                        //if (e.PreviousSelectedTab.Key.ToString() == "uTab_SlipList" && this._selectedRowCountSlip > 0) ClearRedSlipInput();
                        if (e.PreviousSelectedTab.Key.ToString() == "uTab_SlipList" && this._selectedRowCountSlip > 0)
                        {
                            ClearRedSlipInput();
                            this.carMngLt.Clear();
                        }
                        // ----UPD 2009/09/07-----------<<<<<
                        this._selectedRowCountSlip = this._detailDataSet.SalesList.Select("Selection = true").Length;
                        if (e.PreviousSelectedTab.Key.ToString() == "uTab_SlipList" && this._selectedRowCountSlip == 1)
                        {
                            tabFlg = false;
                            SelectAllDetailFromSelectedSlip();
                            tabFlg = true;
                        }
                        autoColumnAdjust(this._columnWidthAutoAdjust_RedSlip, 2);
                        adjustButtonEnable(2);
                        adjustStatusBarCellExample(false);
                        setToolbarSearchSurface();  // 行検索ツールバーのプルダウン再設定
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
                        // ---DEL 2011/02/16-------------------->>>>>
                        //// フォーカス
                        //this.tComboEditor_rs_SalesSlipCd.Focus();
                        // ---DEL 2011/02/16--------------------<<<<<
                        // 入力フォーム制御
                        SettingRedSlipFormalBySalesSlipCd();
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 ADD
                        //this._selectedRowCountSlip = 0;

                        // --- ADD 2009/09/07 ---------->>>>>

                        this.tEdit_rs_SlipNoteCar.Value = this._carNoteInfo;
                        //this.tNedit_Mileage.SetInt(this._mailAgeInfo);
                        this.tNedit_Mileage.Text = this._mailAgeInfo.ToString("#,###"); // ADD 2009/10/15

                        // 売上伝票明細選択のチェック
                        string tempSlipNum = "";
                        bool isSingleSlip = true; // 単数売上伝票フラグ
                        foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.carMngLt)
                        {
                            // _carMngDiv == 3 且つ　売上伝票が複数の場合、表示しない
                            if (!string.IsNullOrEmpty(tempSlipNum) &&
                                !tempSlipNum.Equals((string)gridRow.Cells[_detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Value))
                            {
                                this._showFlg = false;
                                isSingleSlip = false;
                                break;
                            }
                            tempSlipNum = (string)gridRow.Cells[_detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Value;

                        }
                        // 単数売上伝票且つ管理番号が非空の場合：表示します
                        if (isSingleSlip && carMngLt != null && carMngLt.Count > 0)
                        {
                            Infragistics.Win.UltraWinGrid.UltraGridRow gridRow = (Infragistics.Win.UltraWinGrid.UltraGridRow)carMngLt[0];
                            if (!string.IsNullOrEmpty((string)gridRow.Cells[_detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName].Value))
                            {
                                this._showFlg = true;
                            }
                        }
                        // 追加項目の表示条件
                        if ((this._opt_CarMng == (int)Option.ON) && (_carMngDiv == 1 || _carMngDiv == 2 || _carMngDiv == 3)
                            && (this._showFlg))
                        {
                            this.uLabel_rs_SlipNoteCarTitle.Visible = true;
                            this.tEdit_rs_SlipNoteCar.Visible = true;
                            this.uButton_rs_SlipNoteCar.Visible = true;
                            this.uLabel_rs_MileageTitle.Visible = true;
                            this.tNedit_Mileage.Visible = true;
                            this.uLabel_rs_Km.Visible = true;
                        }
                        else
                        {
                            this.uLabel_rs_SlipNoteCarTitle.Visible = false;
                            this.tEdit_rs_SlipNoteCar.Visible = false;
                            this.uButton_rs_SlipNoteCar.Visible = false;
                            this.uLabel_rs_MileageTitle.Visible = false;
                            this.tNedit_Mileage.Visible = false;
                            this.uLabel_rs_Km.Visible = false;

                        }
                        // 伝票再発行
                        // -----------------------ADD 2011/01/21 ------------------------->>>>>
                        // 検索(F10)ボタンを無効とする
                        this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = false;
                        // -----------------------ADD 2011/01/21 -------------------------<<<<<
                        // -----------------------ADD 2010/12/20 ------------------------->>>>>
                        // -----------------------UPD 2011/01/27 ------------------------->>>>>
                        //if (tEdit_SectionCodeAllowZero.Text.Trim() == "00" && !string.IsNullOrEmpty(tNedit_CustomerCode.Text.Trim()))
                        //{
                        //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.tEdit_SectionCodeAllowZero.Name,
                        //     "拠点が入力されていない為、赤伝発行はできません。", -1, MessageBoxButtons.OK);
                        //    this.uTabControl.Tabs[e.PreviousSelectedTab.Key].Selected = true;
                        //    this.tEdit_SectionCodeAllowZero.Focus();
                        //    break;
                        //}
                        //if (tEdit_SectionCodeAllowZero.Text.Trim() != "00" && string.IsNullOrEmpty(tNedit_CustomerCode.Text.Trim()))
                        //{
                        //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.tNedit_CustomerCode.Name,
                        //     "得意先が入力されていない為、赤伝発行はできません。", -1, MessageBoxButtons.OK);
                        //    this.uTabControl.Tabs[e.PreviousSelectedTab.Key].Selected = true;
                        //    this.tNedit_CustomerCode.Focus();
                        //    break;
                        //}
                        //if (tEdit_SectionCodeAllowZero.Text.Trim() == "00" && string.IsNullOrEmpty(tNedit_CustomerCode.Text.Trim()))
                        //{
                        //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.tEdit_SectionCodeAllowZero.Name,
                        //     "拠点・得意先が入力されていない為、赤伝発行はできません。", -1, MessageBoxButtons.OK);
                        //    this.uTabControl.Tabs[e.PreviousSelectedTab.Key].Selected = true;
                        //    this.tEdit_SectionCodeAllowZero.Focus();
                        //    break;
                        //}

                        //if (tEdit_SectionCodeAllowZero.Text.Trim() == "00" || string.IsNullOrEmpty(tNedit_CustomerCode.Text.Trim())) //DEL 2011/02/09
                        if (this._custPrtPpr.SectionCode == null || _custPrtPpr.CustomerCode == 0) // ADD 2011/02/09
                        {
                            TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.tEdit_SectionCodeAllowZero.Name,
                            "拠点コード、または、得意先コードが入力されていないため、" + "\r\n" + "赤伝発行は出来ません。", -1, MessageBoxButtons.OK);
                            this.uTabControl.Tabs[e.PreviousSelectedTab.Key].Selected = true;
                            // ---UPD 2011/01/31-------------------->>>>
                            //this.tEdit_SectionCodeAllowZero.Focus();
                            if (this._control != null)
                            {
                                this._control.Focus();
                                this._control = null;
                            }
                            else
                            {
                                // なし。
                            }
                            // ---UPD 2011/01/31--------------------<<<<
                            break;
                        }
                        // ---ADD 2011/02/16-------------------->>>>>
                        else
                        {
                            // フォーカス
                            this.tComboEditor_rs_SalesSlipCd.Focus();
                        }
                        // ---ADD 2011/02/16--------------------<<<<<
                        // -----------------------UPD 2011/01/27 -------------------------<<<<<
                        // -----------------------ADD 2010/12/20 -------------------------<<<<<

                        // --- ADD 2009/09/07 ----------<<<<<


                        break;
                    }
                case "uTab_RemainList":
                    {
                        // 2010/04/15 Del 選択不能フラグが立っていても戻さない >>>
                        // 選択不能フラグが立っていたら前のタブへ
                        //if (!this._remainTabSelectable)
                        //{
                        //    e.PreviousSelectedTab.Selected = true;
                        //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
                        //    TMsgDisp.Show(
                        //        this,
                        //        emErrorLevel.ERR_LEVEL_INFO,
                        //        this.Name,
                        //        "残高一覧を表示するには、得意先コードまたは請求先コードを入力して下さい",
                        //        -1,
                        //        MessageBoxButtons.OK );
                        //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD
                        //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 ADD
                        //    if ( this.uExGroupBox_CommonCondition.Expanded )
                        //    {
                        //        this.tNedit_CustomerCode.Focus();
                        //        this.tNedit_CustomerCode.SelectAll();
                        //    }
                        //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 ADD
                        //}
                        //else
                        //{
                        // 2010/04/15 Del <<<
                        this._selectedMainTabKey = "uTab_RemainList";
                        this.uCheckEditor_StatusBar_AutoFillToGridColumn.Checked = this._columnWidthAutoAdjust_Balance;
                        autoColumnAdjust(this._columnWidthAutoAdjust_Balance, 3);
                        adjustButtonEnable(3);
                        adjustStatusBarCellExample(false);
                        setToolbarSearchSurface();  // 行検索ツールバーのプルダウン再設定
                        //}   // 2010/04/15 Del
                        // -----------------------ADD 2011/01/21 ------------------------->>>>>
                        // 検索(F10)ボタンを無効とする
                        this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = true;
                        // -----------------------ADD 2011/01/21 -------------------------<<<<<
                        // ADD 2012/06/01 ----------------------->>>>>
                        // 残高一覧表示前　入力拠点コード退避
                        this._custPrtPprBlnce.InputSectionCode = tEdit_SectionCodeAllowZero.Text.Trim();
                        this._custPrtPprBlnce.InputSectionName = uLabel_SectionNm.Text.Trim();
                        // ADD 2012/06/01 -----------------------<<<<<
                        break;
                    }
                default: break;
            }

            //MessageBox.Show(tabKey + " が選択されている");
        }

        /// <summary>
        /// ボタンの有効/無効切替
        /// </summary>
        /// <param name="tabIndex"></param>
        /// <remarks>
        /// <br>Update Note : 2009/11/25 呉元嘯</br>
        /// <br>              PM.NS保守依頼③ 不具合対応</br>
        /// <br>              再発行時の行選択を明細から行えるように修正</br>
        /// <br>UpdateNote  : 2015/02/05 王亜楠 </br>
        /// <br>            : テキスト出力件数制限なしモードの追加</br>
        /// <br>UpdateNote  : 2015/02/25 王亜楠 Redmine#44701 No.1 </br>
        /// <br>            : テキスト出力件数制限なし位置の調整</br>
        /// </remarks>
        private void adjustButtonEnable(int tabIndex)
        {
            switch (tabIndex)
            {
                #region 伝票一覧

                // 伝票一覧
                case 0:
                    {
                        if (this._detailDataSet != null)
                        {
                            DataRow[] dataRow = this._detailDataSet.SalesList.Select("(Selection = true) AND (AcptAnOdrStatus = 30)");

                            string slipNo = string.Empty;
                            Dictionary<string, int> dic = new Dictionary<string, int>();
                            foreach (DataRow salesRow in dataRow)
                            {
                                slipNo = salesRow[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].ToString();
                                foreach (DataRow salesDtlRow in _detailDataSet.SalesDetail)
                                {
                                    if (salesDtlRow[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].ToString() == slipNo)
                                    {
                                        if (salesDtlRow[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName] != DBNull.Value)
                                            if (dic.ContainsKey(slipNo) == false)
                                                dic.Add(slipNo, 0);
                                    }
                                }
                            }

                            //if (dic.Count == 0)               //DEL 2009/02/17 不具合対応[11609]
                            // ---ADD 2009/02/17 不具合対応[11609] ------------------------------->>>>>
                            // 1件もチェックが無い場合
                            if (dataRow.Length == 0)
                            {
                                // 伝票再発行
                                this.tToolbarsManager.Tools["ButtonTool_ReissueSlip"].SharedProps.Enabled = false;
                                // 赤伝発行
                                this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = false;
                            }
                            else if (dic.Count == 0)
                            // ---ADD 2009/02/17 不具合対応[11609] -------------------------------<<<<<
                            {
                                // 伝票再発行
                                //this.tToolbarsManager.Tools["ButtonTool_ReissueSlip"].SharedProps.Enabled = false;        //DEL 2009/02/17 不具合対応[11609]
                                this.tToolbarsManager.Tools["ButtonTool_ReissueSlip"].SharedProps.Enabled = true;           //ADD 2009/02/17 不具合対応[11609]      
                                // 赤伝発行
                                this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = false;
                            }
                            else if (dic.Count == 1)
                            {
                                // 伝票再発行
                                this.tToolbarsManager.Tools["ButtonTool_ReissueSlip"].SharedProps.Enabled = true;
                                // 赤伝発行
                                // 2010/04/07 Add 得意先が確定していない場合は赤伝発行不可 >>>
                                if (_redSlipBottonFlag == true)
                                {
                                    // 2010/04/07 Add <<<
                                    this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = true;
                                    // 2010/04/07 Add >>>
                                }
                                else
                                {
                                    this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = false;
                                }
                                // 2010/04/07 Add <<<
                            }
                            else if (dic.Count > 1)
                            {
                                // 伝票再発行
                                this.tToolbarsManager.Tools["ButtonTool_ReissueSlip"].SharedProps.Enabled = true;
                                // 赤伝発行
                                this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = false;
                            }

                            // ---ADD 2009/02/10 不具合対応[11383] --------------------------------------------------------------->>>>>
                            DataRow[] dataRow2 = this._detailDataSet.SalesList.Select("(Selection = true) AND (AcptAnOdrStatus = 20)");
                            DataRow[] dataRow3 = this._detailDataSet.SalesList.Select("(Selection = true) AND (AcptAnOdrStatus = 40)");
                            if ((dataRow2.Length > 0) || (dataRow3.Length > 0))
                            {
                                // 伝票再発行
                                this.tToolbarsManager.Tools["ButtonTool_ReissueSlip"].SharedProps.Enabled = true;
                                // 赤伝発行
                                this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = false;
                            }
                            // ---ADD 2009/02/10 不具合対応[11383] ---------------------------------------------------------------<<<<<

                        }

                        if (this._detailDataSet != null && this._detailDataSet.SalesList.Rows.Count > 0)
                        {
                            // 印刷
                            this.tToolbarsManager.Tools["ButtonTool_Print"].SharedProps.Enabled = true;
                            // PDF出力
                            this.tToolbarsManager.Tools["ButtonTool_PDF"].SharedProps.Enabled = true;
                            // テキスト出力
                            this.tToolbarsManager.Tools["ButtonTool_ExtractText"].SharedProps.Enabled = true;
                            // EXCEL出力
                            this.tToolbarsManager.Tools["ButtonTool_ExtractExcel"].SharedProps.Enabled = true;
                            // 行検索文字列
                            this.tToolbarsManager.Tools["TextBoxTool_SearchWord"].SharedProps.Enabled = true;
                            // 検索列
                            this.tToolbarsManager.Tools["ComboBoxTool_TargetColumn"].SharedProps.Enabled = true;
                            // 行検索ボタン
                            this.tToolbarsManager.Tools["ButtonTool_RowSearchStart"].SharedProps.Enabled = true;
                            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
                            // 見出複写
                            this.tToolbarsManager.Tools["ButtonTool_SlipHeaderCopy"].SharedProps.Enabled = true;
                            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD
                        }
                        else
                        {
                            // 印刷
                            this.tToolbarsManager.Tools["ButtonTool_Print"].SharedProps.Enabled = false;
                            // PDF出力
                            this.tToolbarsManager.Tools["ButtonTool_PDF"].SharedProps.Enabled = false;
                            // テキスト出力
                            this.tToolbarsManager.Tools["ButtonTool_ExtractText"].SharedProps.Enabled = false;
                            // EXCEL出力
                            this.tToolbarsManager.Tools["ButtonTool_ExtractExcel"].SharedProps.Enabled = false;
                            // 行検索文字列
                            this.tToolbarsManager.Tools["TextBoxTool_SearchWord"].SharedProps.Enabled = false;
                            // 検索列
                            this.tToolbarsManager.Tools["ComboBoxTool_TargetColumn"].SharedProps.Enabled = false;
                            // 行検索ボタン
                            this.tToolbarsManager.Tools["ButtonTool_RowSearchStart"].SharedProps.Enabled = false;
                            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
                            // 見出複写
                            this.tToolbarsManager.Tools["ButtonTool_SlipHeaderCopy"].SharedProps.Enabled = false;
                            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD
                        }
                        //----- ADD 2015/02/05 王亜楠 -------------------->>>>>
                        // 抽出件数制限なしの場合、「テキスト出力」ボタン操作可
                        //if (this._patternSetting != null && this._patternSetting.Length >12 && this._patternSetting[12] == "1") // DEL 2015/02/25 王亜楠 Redmine#44701 No.1
                        if (this._settingForm != null && this._settingForm.UserSetting != null && this._settingForm.UserSetting.SearchCountCtrl == 1) // ADD 2015/02/25 王亜楠 Redmine#44701 No.1
                        {
                            // テキスト出力
                            this.tToolbarsManager.Tools["ButtonTool_ExtractText"].SharedProps.Enabled = true;
                        }
                        //----- ADD 2015/02/05 王亜楠 --------------------<<<<<

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
                        CheckButtonToolEnableForSlip();
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD
                        break;
                    }
                #endregion // 伝票一覧

                #region 明細一覧
                // 明細
                case 1:
                    {
                        if (this._detailDataSet != null)
                        {
                            if (this._detailDataSet.SalesDetail.Select("SelectionCheck = true").Length == 0)
                            {
                                // 伝票再発行
                                this.tToolbarsManager.Tools["ButtonTool_ReissueSlip"].SharedProps.Enabled = false;
                                // --- UPD m.suzuki 2010/07/20 ---------->>>>>
                                ////----------- UPD 2009/11/25 ----------->>>>>
                                //// 赤伝発行
                                ////this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = false;
                                //if (this._redSlipBottonFlag == true)
                                //{
                                //    this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = true;
                                //}
                                //else
                                //{
                                //    this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = false;
                                //}
                                ////----------- UPD 2009/11/25 -----------<<<<<
                                this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = false;
                                // --- UPD m.suzuki 2010/07/20 ----------<<<<<
                            }
                            else if (this._detailDataSet.SalesDetail.Select("SelectionCheck = true").Length > 0)
                            {
                                // 伝票再発行
                                // this.tToolbarsManager.Tools["ButtonTool_ReissueSlip"].SharedProps.Enabled = false;// DEL 2009/11/25
                                this.tToolbarsManager.Tools["ButtonTool_ReissueSlip"].SharedProps.Enabled = true;// ADD 2009/11/25
                                // 赤伝発行
                                //---------- UPD 2009/11/25 ----------->>>>>
                                if (this._redSlipBottonFlag == true)
                                {
                                    this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = true;
                                }
                                else
                                {
                                    this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = false;
                                }
                                //---------- UPD 2009/11/25 -----------<<<<<
                            }
                        }


                        if (this._detailDataSet != null && this._detailDataSet.SalesDetail.Rows.Count > 0)
                        {
                            // 印刷
                            this.tToolbarsManager.Tools["ButtonTool_Print"].SharedProps.Enabled = true;
                            // PDF出力
                            this.tToolbarsManager.Tools["ButtonTool_PDF"].SharedProps.Enabled = true;
                            // テキスト出力
                            this.tToolbarsManager.Tools["ButtonTool_ExtractText"].SharedProps.Enabled = true;
                            // EXCEL出力
                            this.tToolbarsManager.Tools["ButtonTool_ExtractExcel"].SharedProps.Enabled = true;
                            // 行検索文字列
                            this.tToolbarsManager.Tools["TextBoxTool_SearchWord"].SharedProps.Enabled = true;
                            // 検索列
                            this.tToolbarsManager.Tools["ComboBoxTool_TargetColumn"].SharedProps.Enabled = true;
                            // 行検索ボタン
                            this.tToolbarsManager.Tools["ButtonTool_RowSearchStart"].SharedProps.Enabled = true;
                            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
                            // 見出複写
                            this.tToolbarsManager.Tools["ButtonTool_SlipHeaderCopy"].SharedProps.Enabled = true;
                            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD
                        }
                        else
                        {
                            // 印刷
                            this.tToolbarsManager.Tools["ButtonTool_Print"].SharedProps.Enabled = false;
                            // PDF出力
                            this.tToolbarsManager.Tools["ButtonTool_PDF"].SharedProps.Enabled = false;
                            // テキスト出力
                            this.tToolbarsManager.Tools["ButtonTool_ExtractText"].SharedProps.Enabled = false;
                            // EXCEL出力
                            this.tToolbarsManager.Tools["ButtonTool_ExtractExcel"].SharedProps.Enabled = false;
                            // 行検索文字列
                            this.tToolbarsManager.Tools["TextBoxTool_SearchWord"].SharedProps.Enabled = false;
                            // 検索列
                            this.tToolbarsManager.Tools["ComboBoxTool_TargetColumn"].SharedProps.Enabled = false;
                            // 行検索ボタン
                            this.tToolbarsManager.Tools["ButtonTool_RowSearchStart"].SharedProps.Enabled = false;
                            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
                            // 見出複写
                            this.tToolbarsManager.Tools["ButtonTool_SlipHeaderCopy"].SharedProps.Enabled = false;
                            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD
                        }
                        //----- ADD 2015/02/05 王亜楠 -------------------->>>>>
                        // 抽出件数制限なしの場合、「テキスト出力」ボタン操作可
                        //if (this._patternSetting != null && this._patternSetting.Length > 12 && this._patternSetting[12] == "1") // DEL 2015/02/25 王亜楠 Redmine#44701 No.1
                        if (this._settingForm != null && this._settingForm.UserSetting != null && this._settingForm.UserSetting.SearchCountCtrl == 1) // ADD 2015/02/25 王亜楠 Redmine#44701 No.1
                        {
                            // テキスト出力
                            this.tToolbarsManager.Tools["ButtonTool_ExtractText"].SharedProps.Enabled = true;
                        }
                        //----- ADD 2015/02/05 王亜楠 --------------------<<<<<
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
                        CheckButtonToolEnableForDetail();
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD
                        break;
                    }
                #endregion // 明細一覧

                #region 赤伝発行
                // 赤伝
                case 2:
                    {
                        // 伝票再発行
                        this.tToolbarsManager.Tools["ButtonTool_ReissueSlip"].SharedProps.Enabled = false;
                        // 赤伝発行
                        //------------- UPD 2009/11/25 ----------->>>>>
                        // 赤伝発行
                        //this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = true;
                        if (this._redSlipBottonFlag == true)
                        {
                            this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = true;
                        }
                        else
                        {
                            this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = false;
                        }

                        //---------- UPD 2009/11/25 -----------<<<<<
                        // 印刷
                        this.tToolbarsManager.Tools["ButtonTool_Print"].SharedProps.Enabled = false;
                        // PDF出力
                        this.tToolbarsManager.Tools["ButtonTool_PDF"].SharedProps.Enabled = false;
                        // テキスト出力
                        this.tToolbarsManager.Tools["ButtonTool_ExtractText"].SharedProps.Enabled = false;
                        // EXCEL出力
                        this.tToolbarsManager.Tools["ButtonTool_ExtractExcel"].SharedProps.Enabled = false;
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
                        // 見出複写
                        this.tToolbarsManager.Tools["ButtonTool_SlipHeaderCopy"].SharedProps.Enabled = false;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD

                        if (this._detailDataSet != null && this._detailDataSet.RedSlipDetail.Rows.Count > 0)
                        {
                            // 行検索文字列
                            this.tToolbarsManager.Tools["TextBoxTool_SearchWord"].SharedProps.Enabled = true;
                            // 検索列
                            this.tToolbarsManager.Tools["ComboBoxTool_TargetColumn"].SharedProps.Enabled = true;
                            // 行検索ボタン
                            this.tToolbarsManager.Tools["ButtonTool_RowSearchStart"].SharedProps.Enabled = true;
                        }
                        else
                        {
                            // 行検索文字列
                            this.tToolbarsManager.Tools["TextBoxTool_SearchWord"].SharedProps.Enabled = false;
                            // 検索列
                            this.tToolbarsManager.Tools["ComboBoxTool_TargetColumn"].SharedProps.Enabled = false;
                            // 行検索ボタン
                            this.tToolbarsManager.Tools["ButtonTool_RowSearchStart"].SharedProps.Enabled = false;
                        }
                        break;
                    }
                #endregion // 赤伝発行

                #region 残高一覧

                // 残高
                case 3:
                    {
                        // 伝票再発行
                        this.tToolbarsManager.Tools["ButtonTool_ReissueSlip"].SharedProps.Enabled = false;
                        // 赤伝発行
                        this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Enabled = false;

                        // 印刷
                        this.tToolbarsManager.Tools["ButtonTool_Print"].SharedProps.Enabled = false;
                        // PDF出力
                        this.tToolbarsManager.Tools["ButtonTool_PDF"].SharedProps.Enabled = false;
                        // テキスト出力
                        // 2010/04/15 >>>
                        //this.tToolbarsManager.Tools["ButtonTool_ExtractText"].SharedProps.Enabled = false;
                        this.tToolbarsManager.Tools["ButtonTool_ExtractText"].SharedProps.Enabled = true;
                        // 2010/04/15 <<<

                        // 2010/04/15 Add >>>
                        // EXCEL出力
                        this.tToolbarsManager.Tools["ButtonTool_ExtractExcel"].SharedProps.Enabled = true;
                        // 2010/04/15 Add <<<

                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
                        // 見出複写
                        this.tToolbarsManager.Tools["ButtonTool_SlipHeaderCopy"].SharedProps.Enabled = false;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD

                        if (this._detailDataSet != null && this._detailDataSet.BalanceList.Rows.Count > 0)
                        {
                            // 2010/04/15 Del >>>
                            //// EXCEL出力
                            //this.tToolbarsManager.Tools["ButtonTool_ExtractExcel"].SharedProps.Enabled = true;
                            // 2010/04/15 Del <<<
                            // 行検索文字列
                            this.tToolbarsManager.Tools["TextBoxTool_SearchWord"].SharedProps.Enabled = true;
                            // 検索列
                            this.tToolbarsManager.Tools["ComboBoxTool_TargetColumn"].SharedProps.Enabled = true;
                            // 行検索ボタン
                            this.tToolbarsManager.Tools["ButtonTool_RowSearchStart"].SharedProps.Enabled = true;
                        }
                        else
                        {
                            // 2010/04/15 Del >>>
                            //// EXCEL出力
                            //this.tToolbarsManager.Tools["ButtonTool_ExtractExcel"].SharedProps.Enabled = false;
                            // 2010/04/15 Del <<<
                            // 行検索文字列
                            this.tToolbarsManager.Tools["TextBoxTool_SearchWord"].SharedProps.Enabled = false;
                            // 検索列
                            this.tToolbarsManager.Tools["ComboBoxTool_TargetColumn"].SharedProps.Enabled = false;
                            // 行検索ボタン
                            this.tToolbarsManager.Tools["ButtonTool_RowSearchStart"].SharedProps.Enabled = false;
                        }
                        break;
                    }

                #endregion // 残高一覧

                default: break;
            }

            // 2010/02/22 Add >>>
            if (!OpeAuthDictionary[OperationCode.RedSlip])
            {
                this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Visible = false;
                this.tToolbarsManager.Tools["ButtonTool_IssueRedSlip"].SharedProps.Shortcut = Shortcut.None;
            }
            if (!OpeAuthDictionary[OperationCode.TextOut])
            {
                this.tToolbarsManager.Tools["ButtonTool_ExtractText"].SharedProps.Visible = false;
                this.tToolbarsManager.Tools["ButtonTool_ExtractText"].SharedProps.Shortcut = Shortcut.None;
            }
            if (!OpeAuthDictionary[OperationCode.ExcelOut])
            {
                this.tToolbarsManager.Tools["ButtonTool_ExtractExcel"].SharedProps.Visible = false;
                this.tToolbarsManager.Tools["ButtonTool_ExtractExcel"].SharedProps.Shortcut = Shortcut.None;
            }
            // 2010/02/22 Add <<<

        }

        /// <summary>
        /// ステータスバー上の凡例のON/OFF
        /// </summary>
        /// <param name="enable"></param>
        private void adjustStatusBarCellExample(bool enable)
        {
            this.uStatusBar_Main.Panels["CellExample01"].Visible = enable;
            this.uStatusBar_Main.Panels["CellExample02"].Visible = enable;
            this.uStatusBar_Main.Panels["CellExample03"].Visible = enable;
            this.uStatusBar_Main.Panels["CellExample04"].Visible = enable;
        }

        #endregion // タブ切替時イベント

        #region 赤伝タブ内コントロールイベント

        #region 備考ガイドボタン

        /// <summary>
        /// 備考ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uButton_rs_SlipNote_Click(object sender, EventArgs e)
        {
            NoteGuidAcs noteGuideAcs = new NoteGuidAcs();
            NoteGuidBd noteGuideBd;

            int status = noteGuideAcs.ExecuteGuide(out noteGuideBd, this._enterpriseCode, CT_DIVCODE_NOTEGUIDEDIVCD_1);
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // ------------UPD 2010/01/29----------->>>>>
                //this.tEdit_rs_SlipNote.Text = noteGuideBd.NoteGuideName;
                //// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/12 ADD
                //// 次フォーカス
                //this.tEdit_rs_SlipNote2.Focus();
                //// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/12 ADD
                this.tNedit_SlipNoteCode.SetInt(noteGuideBd.NoteGuideCode);
                // --- UPD 2011/08/31---------->>>>>
                //this.tEdit_rs_SlipNote.Text = noteGuideBd.NoteGuideName;
                if (noteGuideBd.NoteGuideName.Length > this._custPtrRedSlipAcs.SlipNoteCharCnt)
                {
                    this.tEdit_rs_SlipNote.Text = noteGuideBd.NoteGuideName.Substring(0, this._custPtrRedSlipAcs.SlipNoteCharCnt);
                    this._prevInputValue.SlipNoteName1 = noteGuideBd.NoteGuideName.Substring(0, this._custPtrRedSlipAcs.SlipNoteCharCnt);
                }
                else
                {
                    this.tEdit_rs_SlipNote.Text = noteGuideBd.NoteGuideName;
                    this._prevInputValue.SlipNoteName1 = noteGuideBd.NoteGuideName;
                }
                this._prevInputValue.SlipNoteCd1 = noteGuideBd.NoteGuideCode;
                //this._prevInputValue.SlipNoteName1 = noteGuideBd.NoteGuideName;
                // --- UPD 2011/08/31----------<<<<<
                // 次フォーカス
                if (this.tNedit_SlipNote2Code.Visible)
                {
                    this.tNedit_SlipNote2Code.Focus();
                }
                // ------------UPD 2010/01/29-----------<<<<<
            }
        }

        #endregion // 備考ガイドボタン

        #region 備考2ガイドボタン

        /// <summary>
        /// 備考2ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note: 2010/06/18 呉元嘯 備考コードの取得変更対応</br>
        private void uButton_rs_SlipNote2_Click(object sender, EventArgs e)
        {
            NoteGuidAcs noteGuideAcs = new NoteGuidAcs();
            NoteGuidBd noteGuideBd;

            //int status = noteGuideAcs.ExecuteGuide(out noteGuideBd, this._enterpriseCode, CT_DIVCODE_NOTEGUIDEDIVCD_2);// DEL 2010/06/18
            int status = noteGuideAcs.ExecuteGuide(out noteGuideBd, this._enterpriseCode, CT_DIVCODE_NOTEGUIDEDIVCD_1);// ADD 2010/06/18
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // ------------UPD 2010/01/29----------->>>>>
                //this.tEdit_rs_SlipNote2.Text = noteGuideBd.NoteGuideName;
                //// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/12 ADD
                //// 次フォーカス
                //this.tEdit_rs_SlipNote3.Focus();
                //// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/12 ADD
                this.tNedit_SlipNote2Code.SetInt(noteGuideBd.NoteGuideCode);
                // --- UPD 2011/08/31---------->>>>>
                //this.tEdit_rs_SlipNote2.Text = noteGuideBd.NoteGuideName;
                if (noteGuideBd.NoteGuideName.Length > this._custPtrRedSlipAcs.SlipNote2CharCnt)
                {
                    this.tEdit_rs_SlipNote2.Text = noteGuideBd.NoteGuideName.Substring(0, this._custPtrRedSlipAcs.SlipNote2CharCnt);
                    this._prevInputValue.SlipNoteName2 = noteGuideBd.NoteGuideName.Substring(0, this._custPtrRedSlipAcs.SlipNote2CharCnt);
                }
                else
                {
                    this.tEdit_rs_SlipNote2.Text = noteGuideBd.NoteGuideName;
                    this._prevInputValue.SlipNoteName2 = noteGuideBd.NoteGuideName;
                }
                this._prevInputValue.SlipNoteCd2 = noteGuideBd.NoteGuideCode;
                //this._prevInputValue.SlipNoteName2 = noteGuideBd.NoteGuideName;
                // --- UPD 2011/08/31----------<<<<<
                // 次フォーカス
                if (this.tNedit_SlipNote3Code.Visible)
                {
                    this.tNedit_SlipNote3Code.Focus();
                }
                // ------------UPD 2010/01/29-----------<<<<<
            }
        }

        #endregion // 備考2ガイドボタン

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
        /// <summary>
        /// 備考3ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note: 2010/06/18 呉元嘯 備考コードの取得変更対応</br>
        private void uButton_rs_SlipNote3_Click(object sender, EventArgs e)
        {
            NoteGuidAcs noteGuideAcs = new NoteGuidAcs();
            NoteGuidBd noteGuideBd;

            //int status = noteGuideAcs.ExecuteGuide( out noteGuideBd, this._enterpriseCode, CT_DIVCODE_NOTEGUIDEDIVCD_3 );// DEL 2010/06/18
            int status = noteGuideAcs.ExecuteGuide(out noteGuideBd, this._enterpriseCode, CT_DIVCODE_NOTEGUIDEDIVCD_1);// ADD 2010/06/18
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // ------------UPD 2010/01/29----------->>>>>
                //this.tEdit_rs_SlipNote3.Text = noteGuideBd.NoteGuideName;
                //// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/12 ADD
                //// 次フォーカス
                //if ( tEdit_rs_ReturnReason.Visible )
                //{
                //    this.tEdit_rs_ReturnReason.Focus();
                //}
                //// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/12 ADD
                this.tNedit_SlipNote3Code.SetInt(noteGuideBd.NoteGuideCode);
                // --- UPD 2011/08/31---------->>>>>
                //this.tEdit_rs_SlipNote3.Text = noteGuideBd.NoteGuideName;
                if (noteGuideBd.NoteGuideName.Length > this._custPtrRedSlipAcs.SlipNote3CharCnt)
                {
                    this.tEdit_rs_SlipNote3.Text = noteGuideBd.NoteGuideName.Substring(0, this._custPtrRedSlipAcs.SlipNote3CharCnt);
                    this._prevInputValue.SlipNoteName3 = noteGuideBd.NoteGuideName.Substring(0, this._custPtrRedSlipAcs.SlipNote3CharCnt);
                }
                else
                {
                    this.tEdit_rs_SlipNote3.Text = noteGuideBd.NoteGuideName;
                    this._prevInputValue.SlipNoteName3 = noteGuideBd.NoteGuideName;
                }
                this._prevInputValue.SlipNoteCd3 = noteGuideBd.NoteGuideCode;
                //this._prevInputValue.SlipNoteName3 = noteGuideBd.NoteGuideName;
                // --- UPD 2011/08/31----------<<<<<
                // 次フォーカス
                if (this.tNedit_RetGoodsReason.Visible)
                {
                    this.tNedit_RetGoodsReason.Focus();
                }
                // ------------UPD 2010/01/29-----------<<<<<
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD
        // ADD 2012/03/29 gezh Redmine#29149 --------->>>>>
        /// <summary>
        /// 販売区分ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender">sender</param>
        /// <param name="e">EventArgs</param>
        /// <remarks>
        /// <br>Note       : 販売区分ガイド画面を表示します。</br>
        /// <br>Programmer : gezh</br>
        /// <br>Date       : 2012/03/29</br>
        /// </remarks>
        private void uButton_rs_SalesCodeDiv_Click(object sender, EventArgs e)
        {
            int userGuideDivCd_SalesCode = 71;  // 販売区分：71

            // コードから名称へ変換
            UserGdHd userGuideHdInfo;
            UserGdBd userGuideBdInfo;
            int status = this._userGuideAcs.ExecuteGuid(this._enterpriseCode, out userGuideHdInfo, out userGuideBdInfo, userGuideDivCd_SalesCode);
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                this.tNedit_SalesCodeDiv.Text = userGuideBdInfo.GuideCode.ToString("D4");
                this.uLabel_SalesCodeDiv.Text = userGuideBdInfo.GuideName;
            }
            else
            {
                this.tNedit_SalesCodeDiv.Text = string.Empty;
                this.uLabel_SalesCodeDiv.Text = string.Empty;
            }
        }
        // ADD 2012/03/29 gezh Redmine#29149 ---------<<<<<
        /// <summary>
        /// 車輌備考ガイドボタンクリックイベント
        /// </summary>
        /// <param name="sender">sender</param>
        /// <param name="e">EventArgs</param>
        /// <remarks>
        /// <br>Note       : 車輌備考ガイド画面を表示します。</br>
        /// <br>Programmer : 張莉莉</br>
        /// <br>Date       : 2009/09/07</br>
        /// </remarks>
        private void uButton_rs_SlipNoteCar_Click(object sender, EventArgs e)
        {
            NoteGuidAcs noteGuideAcs = new NoteGuidAcs();
            NoteGuidBd noteGuideBd;

            int status = noteGuideAcs.ExecuteGuide(out noteGuideBd, this._enterpriseCode, CT_DIVCODE_NOTEGUIDEDIVCD_4);
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                this.tEdit_rs_SlipNoteCar.Text = noteGuideBd.NoteGuideName;
                // 次フォーカス
                if (tNedit_Mileage.Visible)
                {
                    this.tNedit_Mileage.Focus();
                }
            }
        }


        #region 返品理由ガイドボタン

        /// <summary>
        /// 返品理由ガイドボタン
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>
        /// <br>Update Note : 2009/11/25 呉元嘯</br>
        /// <br>              PM.NS保守依頼③ 不具合対応</br>
        /// <br>              赤伝発行時に返品理由コードが更新されない対応</br>
        /// <br>Update Note : 2010/01/29 呉元嘯 4次改良</br>
        /// <br>              赤伝発行画面に、備考コードを入力出来るように修正</br>
        /// </remarks>
        private void uButton_rs_ReturnReason_Click(object sender, EventArgs e)
        {
            UserGdHd userGuideHeaderInfo;
            UserGdBd userGuideBodyInfo;
            int status = this._userGuideAcs.ExecuteGuid(this._enterpriseCode, out userGuideHeaderInfo, out userGuideBodyInfo, CT_DIVCODE_USERGUIDEDIVCD_RETGOODSREASON);
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                this.tEdit_rs_ReturnReason.Text = userGuideBodyInfo.GuideName;
                this._retGoodsReasonDiv = userGuideBodyInfo.GuideCode; // ADD 2009/11/25
                this._retGoodsReason = userGuideBodyInfo.GuideName.Trim();// ADD 2009/11/25
                // ----------ADD 2010/01/29---------->>>>>
                this.tNedit_RetGoodsReason.SetInt(userGuideBodyInfo.GuideCode);
                this._prevInputValue.RetGoodsReasonCd = userGuideBodyInfo.GuideCode;
                this._prevInputValue.RetGoodsReasonName = userGuideBodyInfo.GuideName.Trim();
                // ----------ADD 2010/01/29----------<<<<<
            }
        }

        #endregion // 返品理由ガイドボタン

        #endregion // 赤伝タブ内コントロールイベント

        #region キーコントロール

        /// <summary>
        ///// 伝票一覧グリッド上でのキーコントロール
        ///// </summary>
        ///// <param name="sender"></param>
        ///// <param name="e"></param>
        //private void uGrid_Slip_KeyDown(object sender, System.Windows.Forms.KeyEventArgs e)
        //{
        //    throw new System.Exception("The method or operation is not implemented.");
        //}

        /// <summary>
        /// グリッド上でのEnterキーコントロール
        /// </summary>
        /// <param name="controlName"></param>
        private void GridKeyDown_Return(string controlName)
        {
            // 現在の選択行の内容を取得
            switch (controlName)
            {
                case "uGrid_Slip":
                    {
                        // 行を取得
                        //Infragistics.Win.UltraWinGrid.UltraGridRow row = this.uGrid_Slip.ActiveRow;

                        SelectAllDetailFromSelectedSlip();

                        // 伝票番号・受注ステータスをキー
                        //string keySlipNo = row.Cells["SalesSlipNo"].Text;
                        //string keySlipCd = row.Cells["SalesSlipCd"].Text;   // 受注ステータス 0:売上, 1:返品



                        this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_SlipDetail"];
                        break;
                    }
                default:
                    {
                        break;
                    }
            }
        }

        #endregion // キーコントロール

        #region グリッドコントロールイベント

        #region 選択チェックボックスクリック処理
        /// <summary>
        /// 行選択状態のを全解除する
        /// </summary>
        /// <remarks>
        /// <br>Note		: 行選択状態のを全解除する。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009.11.25</br>
        /// </remarks>
        private void ClearSlipDetailActiveRow()
        {
            foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridDetailRow in this.uGrid_Detail.Rows)
            {
                gridDetailRow.Selected = false;
            }
        }

        /// <summary>
        /// 行選択状態のを全解除する
        /// </summary>
        /// <remarks>
        /// <br>Note		: 行選択状態のを全解除する。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009.11.25</br>
        /// </remarks>
        private void ClearSlipActiveRow()
        {
            foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridSlipRow in this.uGrid_Slip.Rows)
            {
                gridSlipRow.Selected = false;
            }
        }

        /// <summary>
        /// 選択してる行を明細タブと伝票タブでリンクする
        /// </summary>
        /// <param name="gridRow">選択してる行</param>
        /// <remarks>
        /// <br>Note		: 選択してる行を明細タブと伝票タブでリンクする。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009.11.25</br>
        /// </remarks>
        private void LinkDetailToSlip(Infragistics.Win.UltraWinGrid.UltraGridRow gridRow)
        {
            // 伝票番号
            string salesSlipNo = gridRow.Cells[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Value.ToString();
            // 区分
            int acptAnOdrStatus = Int32.Parse(gridRow.Cells[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName].Value.ToString());
            // 選択した明細行
            foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridSlipRow in this.uGrid_Slip.Rows)
            {
                string urrentSalesSlipNo = gridSlipRow.Cells[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Value.ToString();
                int urrentAcptAnOdrStatus = Int32.Parse(gridSlipRow.Cells[this._detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName].Value.ToString());
                if (urrentSalesSlipNo.Equals(salesSlipNo) && urrentAcptAnOdrStatus == acptAnOdrStatus)
                {
                    this.uGrid_Slip.ActiveRow = gridSlipRow;
                    this.uGrid_Slip.ActiveRow.Selected = true;
                    break;
                }
            }

        }

        /// <summary>
        /// 選択してる行を明細タブと伝票タブでリンクする
        /// </summary>
        /// <param name="gridRow">選択してる行</param>
        /// <remarks>
        /// <br>Note		: 選択してる行を明細タブと伝票タブでリンクする。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009.11.25</br>
        /// </remarks>
        private void LinkSlipToDetail(Infragistics.Win.UltraWinGrid.UltraGridRow gridRow)
        {
            // 伝票番号
            string salesSlipNo = gridRow.Cells[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Value.ToString();
            // 区分
            int acptAnOdrStatus = Int32.Parse(gridRow.Cells[this._detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName].Value.ToString());
            // 選択した明細行
            foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridDetailRow in this.uGrid_Detail.Rows)
            {
                string urrentSalesSlipNo = gridDetailRow.Cells[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Value.ToString();
                int urrentAcptAnOdrStatus = Int32.Parse(gridDetailRow.Cells[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName].Value.ToString());
                int urrentSalesRowNo = (int)gridDetailRow.Cells[this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName].Value;
                if (urrentSalesSlipNo.Equals(salesSlipNo) && urrentAcptAnOdrStatus == acptAnOdrStatus && urrentSalesRowNo == 1)
                {
                    this.uGrid_Detail.ActiveRow = gridDetailRow;
                    this.uGrid_Detail.ActiveRow.Selected = true;
                    break;
                }
            }

        }
        /// <summary>
        /// 選択チェックボックス クリック処理
        /// </summary>
        /// <param name="gridRow"></param>
        /// <param name="targetGrid">対象とするグリッド 0:伝票一覧, 1:明細</param>
        /// <remarks>パラメータtargetGridは定数にした方がいいか？</remarks>
        /// <br>Update Note: 2020/11/20 陳艶丹</br>
        /// <br>管理番号   : 11670305-00</br>
        /// <br>           : PMKOBETSU-4097 TSPインライン機能追加対応</br> 
        private void RowSelectClicked(Infragistics.Win.UltraWinGrid.UltraGridRow gridRow, int targetGrid)
        {
            // 関数呼び出しに使用する変数
            string tableName = string.Empty;
            string dataDivColName = string.Empty;
            string selectionColName = string.Empty;
            string rowNoColName = string.Empty;
            string salesSlipCdColName = string.Empty;
            string debitNoteDivColName = string.Empty;
            string acptAnOdrStatusColName = string.Empty;

            // 対象とするグリッドの各カラム名を取得
            switch (targetGrid)
            {
                case 0:
                    {
                        dataDivColName = this._detailDataSet.SalesList.DataDivColumn.ColumnName;
                        selectionColName = this._detailDataSet.SalesList.SelectionColumn.ColumnName;
                        salesSlipCdColName = this._detailDataSet.SalesList.SalesSlipCdColumn.ColumnName;
                        debitNoteDivColName = this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName;
                        acptAnOdrStatusColName = this._detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName;
                        rowNoColName = this._detailDataSet.SalesList.RowNoColumn.ColumnName;
                        tableName = "SalesList";
                        break;
                    }
                case 1:
                    {
                        dataDivColName = this._detailDataSet.SalesDetail.DataDivColumn.ColumnName;
                        selectionColName = this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName;
                        salesSlipCdColName = this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName;
                        debitNoteDivColName = this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName;
                        acptAnOdrStatusColName = this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName;
                        rowNoColName = this._detailDataSet.SalesDetail.RowNoColumn.ColumnName;
                        tableName = "SalesDetail";
                        break;
                    }
                default: break;
            }

            // 入金データの場合はチェックボックスが存在しないので飛ばす
            // 入金データ行は選択色にならない
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/29 DEL
            //if ((int)gridRow.Cells[dataDivColName].Value == 0)
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/29 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/29 ADD
            if (gridRow.Cells[dataDivColName].Value != DBNull.Value &&
                (int)gridRow.Cells[dataDivColName].Value == 0 &&
                 gridRow.Cells[selectionColName].Value != DBNull.Value)
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/29 ADD
            {
                bool continueFlg = false;

                // 選択チェックボックスの値を取得
                bool newSelectedValue = !(bool)gridRow.Cells[selectionColName].Value;

                // 明細の場合
                if (targetGrid == 1)
                {
                    // 得意先および拠点コードを比較
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 DEL
                    //string custCd = gridRow.Cells["CustomerCode"].Value.ToString();
                    //string sectCd = gridRow.Cells["SectionCd"].Value.ToString();
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
                    int custCd = (int)gridRow.Cells[_detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName].Value;
                    string sectCd = (string)gridRow.Cells[_detailDataSet.SalesDetail.SectionCdColumn.ColumnName].Value;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD

                    // --- ADD 2009/09/07 ---------->>>>>
                    slipCd = (string)gridRow.Cells[_detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Value;
                    string myCarMngCd = (string)gridRow.Cells[_detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName].Value;
                    // --- ADD 2009/09/07 ----------<<<<<
                    // 一件以上選択されているなら比較
                    if (this._selectedRowCountDetail > 0)
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 DEL
                        //if (this._selectedCustomerCd.Equals(custCd) && this._selectedSectionCd.Equals(sectCd))
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
                        if (this._selectedCustomerCd.Equals(custCd) && this._selectedSectionCd.Equals(sectCd))
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD
                        {
                            continueFlg = true;
                            // --- ADD 2009/09/07 ---------->>>>>
                            if (this._opt_CarMng == (int)Option.ON)
                            {
                                if (_carMngDiv == 1 || _carMngDiv == 2)
                                {
                                    if (!string.Empty.Equals(this._selectedSlipNoCd))
                                    {
                                        if (this._selectedSlipNoCd.Equals(slipCd))
                                        {
                                            continueFlg = true;
                                        }
                                        else
                                        {
                                            continueFlg = false;
                                            TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                                                "車輌管理の得意先は複数伝票の赤伝は出来ません。", -1, MessageBoxButtons.OK);
                                        }
                                    }
                                    else
                                    {
                                        this._selectedSlipNoCd = slipCd;
                                        continueFlg = true;
                                    }
                                }

                            }
                            // --- ADD 2009/09/07 ----------<<<<< 

                            // ---ADD 陳艶丹 2020/11/20 PMKOBETSU-4097の対応 ------>>>>
                            // TSP連携マスタ設定情報設定ある場合
                            if (this._custPtrRedSlipAcs.TspCprtStList != null && this._custPtrRedSlipAcs.TspCprtStList.Count > 0)
                            {

                                bool tspCustomerCode = false;
                                // 得意先コードが設定するの判断
                                foreach (TspCprtStWork tspWork in this._custPtrRedSlipAcs.TspCprtStList)
                                {
                                    if (tspWork.CustomerCode == this._selectedCustomerCd)
                                    {
                                        tspCustomerCode = true;
                                        break;
                                    }
                                }
                                // TSP連携対象の得意先の場合
                                if (tspCustomerCode)
                                {
                                    if (!string.Empty.Equals(this._selectedSlipNoCd))
                                    {
                                        if (this._selectedSlipNoCd.Equals(slipCd))
                                        {
                                            continueFlg = true;
                                        }
                                        else
                                        {
                                            continueFlg = false;
                                            TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                                                "TSP連携対象の得意先は複数伝票の赤伝発行は行えません。", -1, MessageBoxButtons.OK);
                                        }
                                    }
                                    else
                                    {
                                        this._selectedSlipNoCd = slipCd;
                                        continueFlg = true;
                                    }
                                }

                            }
                            // ---ADD 陳艶丹 2020/11/20 PMKOBETSU-4097の対応 ------<<<<
                        }
                        // --- UPD 2009/11/25 ---------->>>>> 
                        //else
                        //{
                        //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                        //        MSG_RS_CANNOT_SELECT_NOT_SAME_TARGET, -1, MessageBoxButtons.OK);

                        //    //TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                        //    //   "現在選択中：" + _selectedCustomerCd + "/" + _selectedSectionCd, -1, MessageBoxButtons.OK);
                        //}
                        else
                        {
                            continueFlg = true;
                            this._selectedCustomerCd = custCd;
                            this._selectedSectionCd = sectCd;
                            this._selectedSlipNoCd = slipCd;
                        }
                        // --- UPD 2009/11/25 ----------<<<<<

                    }
                    else
                    {
                        this._selectedCustomerCd = custCd;
                        this._selectedSectionCd = sectCd;
                        // --- ADD 2009/09/07 ---------->>>>>
                        this._selectedSlipNoCd = slipCd;
                        // --- ADD 2009/09/07 ----------<<<<<
                        continueFlg = true;
                    }

                    if (continueFlg)
                    {
                        // 選択行数を保存
                        if (newSelectedValue)
                        {
                            this._selectedRowCountDetail++;
                            // --- ADD 2009/09/07 ---------->>>>>
                            if (!carMngLt.Contains(gridRow))
                            {
                                carMngLt.Add(gridRow);
                            }
                            // --- ADD 2009/09/07 ----------<<<<<
                        }
                        else
                        {
                            this._selectedRowCountDetail--;
                            // --- ADD 2009/09/07 ---------->>>>>
                            carMngLt.Remove(gridRow);
                            this._selectedSlipNoCd = string.Empty;
                            // --- ADD 2009/09/07 ----------<<<<<
                            // 選択行が0になったら保存していた得意先・拠点をクリア
                            if (this._selectedRowCountDetail == 0)
                            {
                                this._selectedSectionCd = string.Empty;
                                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 DEL
                                //this._selectedCustomerCd = string.Empty;
                                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 DEL
                                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
                                this._selectedCustomerCd = 0;
                                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD
                                // ----ADD 2009/09/07----------------->>>>>
                                this._selectedSlipNoCd = string.Empty;
                                slipCd = string.Empty;
                                // ----ADD 2009/09/07-----------------<<<<<
                            }
                        }
                    }
                }
                else
                {
                    continueFlg = true;
                    // 選択行数を保存
                    if (newSelectedValue)
                    {
                        this._selectedRowCountSlip++;
                    }
                    else
                    {
                        this._selectedRowCountSlip--;
                    }
                }

                if (continueFlg)
                {
                    // --- ADD 2009/09/07 ---------->>>>>
                    if (_selectedRowCountSlip == 0 || _selectedRowCountSlip > 1)
                    {
                        this._showFlg = false;
                    }
                    // 受注ステータス＝売上 && 管理番号＜＞空　＝＞　表示フラグ＝true
                    else
                    {
                        if (30 == (int)gridRow.Cells[this._detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName].Value
                            && !string.IsNullOrEmpty((string)gridRow.Cells[this._detailDataSet.SalesList.CarMngCodeColumn.ColumnName].Value))
                        {
                            this._showFlg = true;
                        }
                    }
                    // --- ADD 2009/09/07 ----------<<<<<
                    // 行を取得（RowNoカラムがキー設定されている）
                    DataRow row = this._detailDataSet.Tables[tableName].Rows.Find((int)gridRow.Cells[rowNoColName].Value);
                    row[selectionColName] = newSelectedValue;

                    // 背景色変更メソッド
                    RowBackColorChange(row, targetGrid, newSelectedValue, gridRow);
                    // 背景色を変更
                    //RowColorChange(newSelectedValue, gridRow, targetGrid);
                    //if ((int)row[dataDivColName] == 1) // 入金
                    //{
                    //    this.RowColorChange_SlipType(newSelectedValue, gridRow, targetGrid, 3);
                    //}
                    //else
                    //{
                    //    if ((int)row[salesSlipCdColName] == 1) // 返品
                    //    {
                    //        this.RowColorChange_SlipType(newSelectedValue, gridRow, targetGrid, 0);
                    //    }
                    //    else
                    //    {
                    //        if ( row[debitNoteDivColName].ToString() == "赤伝" ) // 赤伝
                    //        {
                    //            this.RowColorChange_SlipType(newSelectedValue, gridRow, targetGrid, 0);
                    //        }
                    //        else
                    //        {
                    //            if ((int)row[acptAnOdrStatusColName] == 20) // 受注
                    //            {
                    //                this.RowColorChange_SlipType(newSelectedValue, gridRow, targetGrid, 1);
                    //            }
                    //            else if ((int)row[acptAnOdrStatusColName] == 40) // 出荷
                    //            {
                    //                this.RowColorChange_SlipType(newSelectedValue, gridRow, targetGrid, 2);
                    //            }
                    //            else
                    //            {
                    //                this.RowColorChange(newSelectedValue, gridRow, targetGrid);
                    //            }
                    //        }
                    //    }
                    //}

                    // 赤伝発行用のデータセットにデータを作成/削除
                    if (targetGrid == 1)
                    {
                        AttachRedSlipDataSet(newSelectedValue, row);
                        adjustButtonEnable(1);
                    }
                    // グリッドを更新
                    this.uGrid_Slip.Refresh();
                    this.uGrid_Detail.Refresh();

                    // 伝票一覧グリッドの場合はボタン設定
                    if (this._selectedMainTabKey == "uTab_SlipList") adjustButtonEnable(0);
                }
            }
        }

        // 背景色変更
        private void RowBackColorChange(DataRow row, int targetGrid, bool newSelectedValue, Infragistics.Win.UltraWinGrid.UltraGridRow gridRow)
        {
            // 関数呼び出しに使用する変数
            string tableName = string.Empty;
            string dataDivColName = string.Empty;
            string selectionColName = string.Empty;
            string rowNoColName = string.Empty;
            string salesSlipCdColName = string.Empty;
            string debitNoteDivColName = string.Empty;
            string acptAnOdrStatusColName = string.Empty;

            switch (targetGrid)
            {
                case 0:
                    {
                        dataDivColName = this._detailDataSet.SalesList.DataDivColumn.ColumnName;
                        selectionColName = this._detailDataSet.SalesList.SelectionColumn.ColumnName;
                        salesSlipCdColName = this._detailDataSet.SalesList.SalesSlipCdColumn.ColumnName;
                        debitNoteDivColName = this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName;
                        acptAnOdrStatusColName = this._detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName;
                        rowNoColName = this._detailDataSet.SalesList.RowNoColumn.ColumnName;
                        tableName = "SalesList";
                        break;
                    }
                case 1:
                    {
                        dataDivColName = this._detailDataSet.SalesDetail.DataDivColumn.ColumnName;
                        selectionColName = this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName;
                        salesSlipCdColName = this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName;
                        debitNoteDivColName = this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName;
                        acptAnOdrStatusColName = this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName;
                        rowNoColName = this._detailDataSet.SalesDetail.RowNoColumn.ColumnName;
                        tableName = "SalesDetail";
                        break;
                    }
                default: break;
            }

            if ((int)row[dataDivColName] == 1) // 入金
            {
                this.RowColorChange_SlipType(newSelectedValue, gridRow, targetGrid, 3);
            }
            else
            {
                if ((int)row[salesSlipCdColName] == 1) // 返品
                {
                    this.RowColorChange_SlipType(newSelectedValue, gridRow, targetGrid, 0);
                }
                else
                {
                    if (row[debitNoteDivColName].ToString() == "赤伝") // 赤伝
                    {
                        this.RowColorChange_SlipType(newSelectedValue, gridRow, targetGrid, 0);
                    }
                    else
                    {
                        if ((int)row[acptAnOdrStatusColName] == 20) // 受注
                        {
                            this.RowColorChange_SlipType(newSelectedValue, gridRow, targetGrid, 1);
                        }
                        else if ((int)row[acptAnOdrStatusColName] == 40) // 出荷
                        {
                            this.RowColorChange_SlipType(newSelectedValue, gridRow, targetGrid, 2);
                        }
                        else
                        {
                            this.RowColorChange(newSelectedValue, gridRow, targetGrid);
                        }
                    }
                }

                // --------ADD 2010/08/05-------->>>>>
                #region 売単価、原単価、定価のバックカラー設定
                if (targetGrid == 1)// 明細グリッド
                {
                    int salesRowNo = (int)gridRow.Cells[_detailDataSet.SalesDetail.RowNoColumn.ColumnName].Value;
                    this.DetailGridSalesUnitCostColorSetting(gridRow, salesRowNo);
                    this.DetailGridSalesUnitPriceColorSetting(gridRow, salesRowNo);
                    this.DetailGridListPriceColorSetting(gridRow, salesRowNo);
                }
                #endregion
                // --------ADD 2010/08/05--------<<<<<
            }
        }

        /// <summary>
        /// 赤伝用のデータセットに行を作成/削除
        /// </summary>
        /// <param name="isChecked">true チェックが付けられた false 消された</param>
        /// <param name="row">データセットの行オブジェクト</param>
        /// <remarks>
        /// <br>Update Note : 2009/11/25 呉元嘯</br>
        /// <br>              PM.NS保守依頼③ 不具合対応</br>
        /// <br>              ①返品伝票金額の表示不具合対応</br>
        /// <br>              ②赤伝発行時の売上金額の不正対応</br>
        /// <br>Update Note : 2010/01/29 呉元嘯 ４次改良</br>
        /// <br>              赤伝発行時の伝票備考に、元黒伝票の備考を引用可能にするように修正</br>
        /// <br>              返品不可設定機能の追加</br>
        /// <br>Update Note : 2010/02/20 呉元嘯 ４次改良</br>
        /// <br>              Redmine#2983の対応</br>
        /// <br>Update Note : 2011/02/16 yangmj</br>
        /// <br>              readmine#18996の修正</br>
        /// <br>Update Note : 2013/03/18 zhaimm </br>
        /// <br>            : 10800003-00、2013/05/15配信分、Redmine#34807得意先電子元帳の対応</br>
        /// <br>            : 赤伝発行時：売上伝票入力の仕様と同様、0詰めを行う</br>
        /// </remarks>
        private void AttachRedSlipDataSet(bool isChecked, DataRow row)
        {
            // チェックされたらデータを作成
            if (isChecked)
            {
                string tableName = "SalesList";
                string selectionColName = this._detailDataSet.SalesList.SelectionColumn.ColumnName;
                string rowNoColName = this._detailDataSet.SalesList.RowNoColumn.ColumnName;
                string dataDivColName = this._detailDataSet.SalesList.DataDivColumn.ColumnName;


                // 伝票タブチェック削除
                foreach (Infragistics.Win.UltraWinGrid.UltraGridRow SalesLstRow in this.uGrid_Slip.Rows)
                {
                    //SalesLstRow.Cells[this._detailDataSet.SalesList.SelectionColumn.ColumnName].Value = false;
                    if (tabFlg == true)
                    {
                        if (SalesLstRow.Cells[dataDivColName].Value != DBNull.Value && (int)SalesLstRow.Cells[dataDivColName].Value == 0 &&
                            SalesLstRow.Cells[selectionColName].Value != DBNull.Value)
                        {
                            bool newSelectedValue = false;//!(bool)SalesLstRow.Cells[selectionColName].Value;
                            DataRow DenRow = this._detailDataSet.Tables[tableName].Rows.Find((int)SalesLstRow.Cells[rowNoColName].Value);
                            DenRow[selectionColName] = newSelectedValue;

                            RowBackColorChange(DenRow, 0, newSelectedValue, SalesLstRow);
                        }
                    }
                    //伝票タブから明細タブに来た時のみ
                    else
                    {
                        DataRow DenRow2 = this._detailDataSet.Tables[tableName].Rows.Find((int)SalesLstRow.Cells[rowNoColName].Value);
                        Infragistics.Win.Appearance cellApp = new Infragistics.Win.Appearance();
                        if (SalesLstRow.Cells[selectionColName].Value != DBNull.Value)
                        {
                            //チェックした行の背景色
                            if ((bool)SalesLstRow.Cells[selectionColName].Value == true)
                            {
                                RowBackColorChange(DenRow2, 0, isChecked, SalesLstRow);
                            }
                            else
                            {
                                RowBackColorChange(DenRow2, 0, tabFlg, SalesLstRow);
                            }
                        }
                    }
                }

                //フラグを元に戻す
                //tabFlg = isChecked;

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
                // 商品・在庫情報の取得
                GoodsUnitData goods = null;
                Stock stock = null;

                // (品番)
                string goodsNo = (string)row[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName];
                // (メーカーコード)
                int goodsMakerCd = (int)row[this._detailDataSet.SalesDetail.GoodsMakerCdColumn.ColumnName];
                // (倉庫コード)
                string warehouseCode = (string)row[this._detailDataSet.SalesDetail.WarehouseCdColumn.ColumnName];

                // 読み込み
                // -- ADD 2009/11/18 ------------------------------>>>
                // 品番が空白か、メーカーが０の場合は商品検索をしないように修正
                if (goodsNo.Trim() != string.Empty && goodsMakerCd != 0)
                {
                    // -- ADD 2009/11/18 ------------------------------<<<

                    int status = _custPtrRedSlipAcs.ReadGoods(goodsNo, goodsMakerCd, out goods);
                    if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                    {
                        _custPtrRedSlipAcs.SelectStock(goods, warehouseCode, out stock);
                    }

                } // ADD 2009/11/18
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD

                DataRow rowRed = this._detailDataSet.RedSlipDetail.NewRow();

                // データカラムをコピー
                // --- ADD 2009/09/07 ---------->>>>>
                string StrCarMngCd = row[this._detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName].ToString();
                this._mailAgeInfo = (int)row[this._detailDataSet.SalesDetail.MileageColumn.ColumnName];
                this._carNoteInfo = row[this._detailDataSet.SalesDetail.CarNoteColumn.ColumnName].ToString();

                // 得意先の「車輌管理」区分を判別
                int myCustomerCd = (Int32)row[this._detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName];
                if (myCustomerCd > 0)
                {
                    // 得意先マスタから取得
                    CustomerInfo customerInfo;
                    int flg = this._customerInfoAcs.ReadDBData(this._enterpriseCode, myCustomerCd, out customerInfo);

                    if (flg == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                    {
                        this._carMngDiv = customerInfo.CarMngDivCd;
                    }
                }

                // --- ADD 2009/09/07 ----------<<<<<
                rowRed[this._detailDataSet.RedSlipDetail.RowNoColumn.ColumnName] = row[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName];                             // 行No 表示されないがキー
                rowRed[this._detailDataSet.RedSlipDetail.SalesSlipNumColumn.ColumnName] = row[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName];               // 伝票番号
                rowRed[this._detailDataSet.RedSlipDetail.AcptAnOdrStatusColumn.ColumnName] = row[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName];         // 受注ステータス
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/15 ADD
                rowRed[this._detailDataSet.RedSlipDetail.SalesRowNoColumn.ColumnName] = row[this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName];         // 行番号(伝票内の行番号)
                rowRed[this._detailDataSet.RedSlipDetail.SupplierCdColumn.ColumnName] = row[this._detailDataSet.SalesDetail.SupplierCdColumn.ColumnName];         // 仕入先コード
                rowRed[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName] = string.Empty;
                rowRed[this._detailDataSet.RedSlipDetail.SupplierSlipNoColumn.ColumnName] = row[this._detailDataSet.SalesDetail.SupplierSlipNoColumn];
                rowRed[this._detailDataSet.RedSlipDetail.GoodsMakerCdColumn.ColumnName] = row[this._detailDataSet.SalesDetail.GoodsMakerCdColumn]; // メーカーコード
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/15 ADD
                rowRed[this._detailDataSet.RedSlipDetail.GoodsNameColumn.ColumnName] = row[this._detailDataSet.SalesDetail.GoodsNameColumn.ColumnName];                     // 品名
                rowRed[this._detailDataSet.RedSlipDetail.GoodsNoColumn.ColumnName] = row[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName];                         // 品番
                // sakurai DEL/ADD 2009/02/03 >>>>>>>>>>>>>>>>>>>>>>
                //rowRed[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName] = row[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName];                 // 可能数
                // --- UPD 2010/01/29 ---------->>>>>
                //rowRed[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName] = row[this._detailDataSet.SalesDetail.AcptAnOdrRemainCntColumn.ColumnName];                 // 可能数

                //-----ADD 2010/12/20 ----->>>>>
                rowRed[this._detailDataSet.RedSlipDetail.CustomerCodeColumn.ColumnName] = row[this._detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName]; // 得意先コード
                //-----ADD 2010/12/20 -----<<<<<
                //------------ADD wangf 2011/12/30 FOR Redmine#27660--------->>>>>>>>
                rowRed[this._detailDataSet.RedSlipDetail.PartySaleSlipNumColumn.ColumnName] = row[this._detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName]; // 指示書(仮伝)番号
                rowRed[this._detailDataSet.RedSlipDetail.SlipNoteColumn.ColumnName] = row[this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName]; // 備考１
                rowRed[this._detailDataSet.RedSlipDetail.SlipNote2Column.ColumnName] = row[this._detailDataSet.SalesDetail.SlipNote2Column.ColumnName]; // 備考２
                rowRed[this._detailDataSet.RedSlipDetail.SlipNote3Column.ColumnName] = row[this._detailDataSet.SalesDetail.SlipNote3Column.ColumnName]; // 備考３
                // DateAndSlipNo
                rowRed[this._detailDataSet.RedSlipDetail.DateAndSlipNoColumn.ColumnName] = string.Format("{0} {1}",
                                            ((DateTime)row[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName]).ToString("yyyy/MM/dd"),
                                            row[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].ToString());
                //------------ADD wangf 2011/12/30 FOR Redmine#27660---------<<<<<<<<
                //受注残数
                double acptAnOdrRemainCnt = (double)row[this._detailDataSet.SalesDetail.AcptAnOdrRemainCntColumn.ColumnName];
                //返品上限数
                double retuppercnt = (double)row[this._detailDataSet.SalesDetail.RetuppercntColumn.ColumnName];
                //出荷数
                double shipmentCnt = (double)row[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName];
                //返品上限数存在フラグ
                int retuppercntDiv = (Int32)row[this._detailDataSet.SalesDetail.RetuppercntDivColumn.ColumnName];
                //返品上限設定マスタに登録されていない明細は現状通り、売上明細.受注残数(AcptAnOdrRemainCnt)を表示する。
                if (1 == retuppercntDiv)
                {
                    rowRed[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName] = acptAnOdrRemainCnt;
                }
                else
                {
                    //返品上限設定マスタ.返品上限数ー（売上明細.出荷数ー売上明細.受注残数）
                    double temp = retuppercnt - (shipmentCnt - acptAnOdrRemainCnt);
                    //売上明細.受注残数＞＝返品上限設定マスタ.返品上限数ー（売上明細.出荷数ー売上明細.受注残数）
                    if (acptAnOdrRemainCnt >= temp && temp >= 0)
                    {
                        //返品可能数に返品上限数ー（売上明細.出荷数ー売上明細.受注残数）をセット
                        rowRed[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName] = temp;
                    }
                    //返品上限設定マスタ.返品上限数ー（売上明細.出荷数ー売上明細.受注残数）＜０
                    else if (acptAnOdrRemainCnt >= temp && temp < 0)
                    {
                        //返品可能数に０をセットする
                        rowRed[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName] = 0;
                    }
                    //売上明細.受注残数＜返品上限設定マスタ.返品上限数ー（売上明細.出荷数ー売上明細.受注残数）
                    else
                    {
                        //売上明細.受注残数をセット
                        rowRed[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName] = acptAnOdrRemainCnt;
                    }
                }
                // --- UPD 2010/01/29 ----------<<<<<
                // sakurai DEL/ADD 2009/02/03 <<<<<<<<<<<<<<<<<<<<<<
                // 同時仕入Noが存在するかどうかを判定
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 DEL
                //if (Int32.Parse(row[this._detailDataSet.SalesDetail.SupplierSlipNoColumn.ColumnName].ToString()) > 0)
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
                if (row[this._detailDataSet.SalesDetail.SupplierSlipNoColumn.ColumnName] != DBNull.Value &&
                     Int32.Parse(row[this._detailDataSet.SalesDetail.SupplierSlipNoColumn.ColumnName].ToString()) > 0)
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD
                {
                    rowRed[this._detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName] = "○";                                                                              // 仕入
                }
                // --- UPD 2010/01/29 ---------->>>>>
                //rowRed[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName] = row[this._detailDataSet.SalesDetail.AcptAnOdrRemainCntColumn.ColumnName];               // 返品数
                //初期表示の返品数には、返品可能数をセット
                rowRed[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName] = rowRed[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName];
                // --- UPD 2010/01/29 ----------<<<<<
                rowRed[this._detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName] = row[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName];   // 単価
                rowRed[this._detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName] = row[this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName];             // 原価
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
                //----------- ADD 2009/11/25 ------------>>>>>
                // 単価
                double salesUnPrcTaxExcFlCurr = (double)row[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName];
                // 可能数
                double acptAnOdrRemainCntCurr = (double)row[this._detailDataSet.SalesDetail.AcptAnOdrRemainCntColumn.ColumnName];
                if (salesUnPrcTaxExcFlCurr == 0)
                {
                    // 金額
                    rowRed[this._detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName] = row[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName];
                }
                else
                {
                    // 金額
                    rowRed[this._detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName] = GetDetailPriceForRedTotal(salesUnPrcTaxExcFlCurr, acptAnOdrRemainCntCurr);
                }
                //----------- ADD 2011/02/16 ------------<<<<<
                rowRed[this._detailDataSet.RedSlipDetail.SalesSlipCdColumn.ColumnName] = row[this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName];
                rowRed[this._detailDataSet.RedSlipDetail.SalesSlipCdDtlColumn.ColumnName] = row[this._detailDataSet.SalesDetail.SalesSlipCdDtlColumn.ColumnName];
                //----------- ADD 2011/02/16 ------------>>>>>

                //----------- ADD 2009/11/25 ------------<<<<<
                if (stock != null)
                {
                    rowRed[this._detailDataSet.RedSlipDetail.SalesOrderDivCdColumn.ColumnName] = 1;         // 在庫取寄区分
                    rowRed[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName] = "在庫";
                    rowRed[this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName] = stock.WarehouseCode; // 倉庫コード
                    rowRed[this._detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName] = stock.WarehouseName; // 倉庫名称
                    rowRed[this._detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName] = stock.WarehouseShelfNo; // 棚番
                    rowRed[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName] = (double)((decimal)stock.ShipmentPosCnt + (decimal)((double)rowRed[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName]));
                }
                else
                {
                    rowRed[this._detailDataSet.RedSlipDetail.SalesOrderDivCdColumn.ColumnName] = 0;         // 在庫取寄区分
                    rowRed[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName] = "取寄";                                                                // 在庫取寄区分名
                    rowRed[this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName] = string.Empty; // 倉庫コード
                    rowRed[this._detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName] = string.Empty; // 倉庫名称
                    rowRed[this._detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName] = string.Empty; // 棚番
                    rowRed[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName] = DBNull.Value; // 返品後数
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/19 ADD
                rowRed[this._detailDataSet.RedSlipDetail.HistoryDivNameColumn.ColumnName] = row[this._detailDataSet.SalesDetail.HistoryDivNameColumn.ColumnName]; // 履歴区分名
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/19 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 DEL
                //rowRed[this._detailDataSet.RedSlipDetail.SalesOrderDivCdColumn.ColumnName] = row[this._detailDataSet.SalesDetail.SalesOrderDivCdColumn.ColumnName];         // 在庫取寄区分
                //// 在庫取寄区分名を設定
                //if (Int32.Parse(row[this._detailDataSet.SalesDetail.SalesOrderDivCdColumn.ColumnName].ToString()) == 0)
                //{
                //    rowRed[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName] = "取寄";                                                                // 在庫取寄区分名
                //}
                //else
                //{
                //    rowRed[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName] = "在庫";
                //}
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 DEL
                //// 倉庫コード以下は売掛区分=1(売掛)のときのみ表示
                //if (Int32.Parse(row[this._detailDataSet.SalesDetail.AccRecDivCdColumn.ColumnName].ToString()) == 1)
                //{
                //    rowRed[this._detailDataSet.RedSlipDetail.WarehouseCdColumn.ColumnName] = row[this._detailDataSet.SalesDetail.WarehouseCdColumn.ColumnName];             // 倉庫コード
                //    rowRed[this._detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName] = row[this._detailDataSet.SalesDetail.WarehouseNameColumn.ColumnName];         // 倉庫名称
                //    // 棚番
                //    //

                //    // 先頭行の売掛情報により赤伝タブの伝票区分プルダウンが変化
                //    // 売掛の時は現金系が選択不可
                //    ValueListItem v0 = new ValueListItem();
                //    v0.DisplayText = "現金売上";
                //    v0.DataValue = 0;
                //    ValueListItem v1 = new ValueListItem();
                //    v1.DisplayText = "現金返品";
                //    v1.DataValue = 1;
                //    this.tComboEditor_rs_SalesSlipCd.Items.Remove(v0);
                //    this.tComboEditor_rs_SalesSlipCd.Items.Remove(v1);
                //}
                //else
                //{
                //    // 先頭行の売掛情報により赤伝タブの伝票区分プルダウンが変化
                //    // 売掛ではない時は掛系が選択不可

                //    ValueListItem v2 = new ValueListItem();
                //    v2.DisplayText = "掛売上";
                //    v2.DataValue = 2;
                //    ValueListItem v3 = new ValueListItem();
                //    v3.DisplayText = "掛返品";
                //    v3.DataValue = 3;
                //    this.tComboEditor_rs_SalesSlipCd.Items.Remove(v2);
                //    this.tComboEditor_rs_SalesSlipCd.Items.Remove(v3);
                //}
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/10 ADD
                if (this._detailDataSet.RedSlipDetail.Rows.Count == 0)
                {
                    // 先頭行の場合は売掛区分判定
                    # region [売掛区分]
                    this.tComboEditor_rs_SalesSlipCd.Items.Clear();
                    if (Int32.Parse(row[this._detailDataSet.SalesDetail.AccRecDivCdColumn.ColumnName].ToString()) == 1)
                    {
                        // 1:売掛
                        this.tComboEditor_rs_SalesSlipCd.Items.Add(new ValueListItem(0, "掛売上"));
                        this.tComboEditor_rs_SalesSlipCd.Items.Add(new ValueListItem(1, "掛返品"));
                    }
                    else
                    {
                        // 0:現金
                        this.tComboEditor_rs_SalesSlipCd.Items.Add(new ValueListItem(0, "現金売上"));
                        this.tComboEditor_rs_SalesSlipCd.Items.Add(new ValueListItem(1, "現金返品"));
                    }
                    // 返品を初期表示
                    this.tComboEditor_rs_SalesSlipCd.Value = 1;
                    # endregion

                    /*------------DEL wangf 2011/12/30 FOR Redmine#27660--------->>>>>>>>
                    // 先頭行の場合は赤伝備考のセット
                    // 日付＋伝票番号 (yyyy/mm/dd xxxxxxxx)
                    // --- UPD m.suzuki 2010/07/20 ---------->>>>>
                    //string dateAndSlipNo = string.Format( "{0} {1}", DateTime.Today.ToString( "yyyy/MM/dd" ), row[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].ToString() );
                    string dateAndSlipNo = string.Format( "{0} {1}",
                                            ((DateTime)row[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName]).ToString( "yyyy/MM/dd" ),
                                            row[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].ToString() );
                    // --- UPD m.suzuki 2010/07/20 ----------<<<<<

                    # region [赤伝備考１]
                    switch ( _settingForm.UserSetting.SlipNote1Pattern )
                    {
                        default:
                        case 0:
                            {
                                // 0:空白
                                this.tEdit_rs_SlipNote.Text = string.Empty;
                                this.tNedit_SlipNoteCode.Clear();// ADD 2010/01/29
                                this._prevInputValue.SlipNoteCd1 = 0;// ADD 2010/01/29
                            }
                            break;
                        case 1:
                            {
                                // 1:日付・伝票番号
                                this.tEdit_rs_SlipNote.Text = dateAndSlipNo;
                                this.tNedit_SlipNoteCode.Clear();// ADD 2010/01/29
                                this._prevInputValue.SlipNoteCd1 = 0;// ADD 2010/01/29
                            }
                            break;
                        // ------------ADD 2010/01/29-------------->>>>>
                        case 2:
                            {
                                // 2:元黒
                                this.tNedit_SlipNoteCode.Clear();
                                this._prevInputValue.SlipNoteCd1 = 0;
                                this.tEdit_rs_SlipNote.Text = row[this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName].ToString();
                            }
                            break;
                        // ------------ADD 2010/01/29--------------<<<<<
                        // ------------UPD 2010/01/29-------------->>>>>
                        //case 2:
                        case 3:// 3:任意
                            {
                                //// 2:任意
                                this.tNedit_SlipNoteCode.Clear();
                                this._prevInputValue.SlipNoteCd1 = 0;
                                this.tEdit_rs_SlipNote.Text = _settingForm.UserSetting.SlipNote1Default.Trim();
                            }
                        // ------------UPD 2010/01/29--------------<<<<<
                            break;
                    }
                    # endregion

                    # region [赤伝備考２]
                    switch ( _settingForm.UserSetting.SlipNote2Pattern )
                    {
                        default:
                        case 0:
                            {
                                // 0:空白
                                this.tEdit_rs_SlipNote2.Text = string.Empty;
                                this._prevInputValue.SlipNoteCd2 = 0;// ADD 2010/01/29
                                this.tNedit_SlipNote2Code.Clear();// ADD 2010/01/29
                            }
                            break;
                        case 1:
                            {
                                // 1:日付・伝票番号
                                this._prevInputValue.SlipNoteCd2 = 0;// ADD 2010/01/29
                                this.tNedit_SlipNote2Code.Clear();// ADD 2010/01/29
                                this.tEdit_rs_SlipNote2.Text = dateAndSlipNo;
                            }
                            break;
                        // ------------ADD 2010/01/29-------------->>>>>
                        case 2:
                            {
                                // 2:元黒
                                this._prevInputValue.SlipNoteCd2 = 0;
                                this.tNedit_SlipNote2Code.Clear();
                                this.tEdit_rs_SlipNote2.Text = row[this._detailDataSet.SalesDetail.SlipNote2Column.ColumnName].ToString();
                            }
                            break;
                        // ------------ADD 2010/01/29--------------<<<<<
                        // ------------UPD 2010/01/29-------------->>>>>
                        //case 2:
                        case 3:// 3:任意
                            {
                                //// 2:任意
                                this._prevInputValue.SlipNoteCd2 = 0;
                                this.tNedit_SlipNote2Code.Clear();
                                this.tEdit_rs_SlipNote2.Text = _settingForm.UserSetting.SlipNote2Default.Trim();
                            }
                        // ------------UPD 2010/01/29--------------<<<<<
                            break;
                    }
                    # endregion

                    # region [赤伝備考３]
                    switch ( _settingForm.UserSetting.SlipNote3Pattern )
                    {
                        default:
                        case 0:
                            {
                                // 0:空白
                                this._prevInputValue.SlipNoteCd3 = 0;// ADD 2010/01/29
                                this.tNedit_SlipNote3Code.Clear();// ADD 2010/01/29
                                this.tEdit_rs_SlipNote3.Text = string.Empty;
                            }
                            break;
                        case 1:
                            {
                                // 1:日付・伝票番号
                                this._prevInputValue.SlipNoteCd3 = 0;// ADD 2010/01/29
                                this.tNedit_SlipNote3Code.Clear();// ADD 2010/01/29
                                this.tEdit_rs_SlipNote3.Text = dateAndSlipNo;
                            }
                            break;
                        // ------------ADD 2010/01/29-------------->>>>>
                        case 2:
                            {
                                // 2:元黒
                                this._prevInputValue.SlipNoteCd3 = 0;
                                this.tNedit_SlipNote3Code.Clear();
                                //this.tEdit_rs_SlipNote3.Text = row[this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName].ToString();// DEL 2010/02/20
                                this.tEdit_rs_SlipNote3.Text = row[this._detailDataSet.SalesDetail.SlipNote3Column.ColumnName].ToString();// ADD 2010/02/20
                            }
                            break;
                        // ------------ADD 2010/01/29--------------<<<<<
                        // ------------UPD 2010/01/29-------------->>>>>
                        //case 2:
                        case 3:// 3:任意
                            {
                                //// 2:任意
                                this._prevInputValue.SlipNoteCd3 = 0;
                                this.tNedit_SlipNote3Code.Clear();
                                this.tEdit_rs_SlipNote3.Text = _settingForm.UserSetting.SlipNote3Default.Trim();
                            }
                        // ------------UPD 2010/01/29-------------<<<<<
                            break;
                    }
                    # endregion
                    //------------DEL wangf 2011/12/30 FOR Redmine#27660--------->>>>>>>>*/
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/10 ADD

                // 得意先・拠点を表示
                this.uLabel_rs_SectionName.Text = row[this._detailDataSet.SalesDetail.SectionGuideNameColumn.ColumnName].ToString().Trim();
                this.uLabel_rs_CustomerName.Text = row[this._detailDataSet.SalesDetail.CustomerSnmColumn.ColumnName].ToString().Trim();

                // 行を追加
                this._detailDataSet.RedSlipDetail.Rows.Add(rowRed);
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/11 ADD
                // 行セッティング
                SettingGridRow(this._detailDataSet.RedSlipDetail.Rows.Count - 1);
                //------------ UPD 2009/11/25 ------------>>>>>
                // long price = GetDetailPriceForRedTotal( row );
                long price = 0;
                if (salesUnPrcTaxExcFlCurr == 0)
                {
                    price = (long)row[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName];
                }
                else
                {
                    price = GetDetailPriceForRedTotal(salesUnPrcTaxExcFlCurr, acptAnOdrRemainCntCurr);
                }
                _redSlipTotalPrice += price;
                if (!string.IsNullOrEmpty((string)row[this._detailDataSet.SalesDetail.WarehouseCdColumn.ColumnName]))
                {
                    // 在庫
                    _redSlipStockPrice += price;
                }
                ChangeRedSlipTotalPrice();
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/11 ADD

                // 赤伝グリッドを更新
                this.uGrid_RedSlip.Refresh();

                int currentRowNo = (int)rowRed[this._detailDataSet.RedSlipDetail.RowNoColumn.ColumnName];
                long money = (long)rowRed[this._detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName];
                if (this.redMoney.Count == 0 || !this.redMoney.ContainsKey(currentRowNo))
                {
                    this.redMoney.Add(currentRowNo, money);
                }
                if (!string.IsNullOrEmpty((string)rowRed[this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName]))
                {
                    if (this.redStockMoney.Count == 0 || !this.redStockMoney.ContainsKey(currentRowNo))
                    {
                        this.redStockMoney.Add(currentRowNo, money);
                    }
                }
                //------------ UPD 2009/11/25 ------------<<<<<
            }
            else
            {
                // チェックが消されたならばデータテーブルから該当行を消去

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/16 ADD
                //------------ UPD 2009/11/25 ------------>>>>>
                // long price = GetDetailPriceForRedTotal( row );
                int currentRowNo = (int)row[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName];
                if (this.redMoney.Count > 0 && this.redMoney.ContainsKey(currentRowNo))
                {
                    this.redMoney.Remove(currentRowNo);
                }
                if (this.redStockMoney.Count > 0 && this.redStockMoney.ContainsKey(currentRowNo))
                {
                    this.redStockMoney.Remove(currentRowNo);
                }
                // 金額の総計
                CountMoney();
                //if ( !string.IsNullOrEmpty( (string)row[this._detailDataSet.SalesDetail.WarehouseCdColumn.ColumnName] ) )
                //{
                //    // 在庫
                //    _redSlipStockPrice -= price;
                //}
                //------------ UPD 2009/11/25 ------------<<<<<
                ChangeRedSlipTotalPrice();
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/16 ADD

                // キーとなる行Noを取得
                int rowNo = Int32.Parse(row[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName].ToString());

                // データセットから消去
                DataRow rowRmv = this._detailDataSet.RedSlipDetail.Rows.Find(rowNo);
                this._detailDataSet.RedSlipDetail.Rows.Remove(rowRmv);

                // 行がなくなったら赤伝タブの伝票区分プルダウンを初期化
                if (this._detailDataSet.RedSlipDetail.Rows.Count == 0)
                {
                    InitializeSalesSlipCdBox();
                }

                // 赤伝グリッドを更新
                this.uGrid_RedSlip.Refresh();
                //------------ADD wangf 2011/12/30 FOR Redmine#27660--------->>>>>>>>
                // 明細グリッド中にチェックがすべて消されたならば、指示書(仮伝)番号、備考、備考２、備考３も消される
                if (this._detailDataSet.RedSlipDetail.Rows.Count == 0)
                {
                    // 指示書(仮伝)番号
                    this.tEdit_rs_PartySalesSlipNo.Clear();
                    // 備考
                    this.tNedit_SlipNoteCode.Clear();
                    this.tEdit_rs_SlipNote.Clear();
                    // 備考２
                    this.tNedit_SlipNote2Code.Clear();
                    this.tEdit_rs_SlipNote2.Clear();
                    // 備考３
                    this.tNedit_SlipNote3Code.Clear();
                    this.tEdit_rs_SlipNote3.Clear();
                }
                //------------ADD wangf 2011/12/30 FOR Redmine#27660---------<<<<<<<<
            }
            //------------ADD wangf 2011/12/30 FOR Redmine#27660--------->>>>>>>>
            // 明細グリッド中に、最初に選択された伝票の指示書(仮伝)番号を優先してセットする、選択データあれば、指示書(仮伝)番号再修正しない
            // 明細選択の情報が変わった際には、選択されている明細の一番先頭行を表示
            if (this._detailDataSet.RedSlipDetail.Rows.Count > 0)
            {
                //this.tEdit_rs_PartySalesSlipNo.Text = this._detailDataSet.RedSlipDetail.Rows[0][this._detailDataSet.RedSlipDetail.PartySaleSlipNumColumn.ColumnName].ToString().Trim(); // DEL 2013/03/18 zhaimm Redmine#34807
                this.tEdit_rs_PartySalesSlipNo.Text = this._detailDataSet.RedSlipDetail.Rows[0][this._detailDataSet.RedSlipDetail.PartySaleSlipNumColumn.ColumnName].ToString(); // ADD 2013/03/18 zhaimm Redmine#34807
                # region [赤伝備考１]
                switch (_settingForm.UserSetting.SlipNote1Pattern)
                {
                    default:
                    case 0:
                        {
                            // 0:空白
                            this.tEdit_rs_SlipNote.Text = string.Empty;
                            this.tNedit_SlipNoteCode.Clear();
                            this._prevInputValue.SlipNoteCd1 = 0;
                        }
                        break;
                    case 1:
                        {
                            // 1:日付・伝票番号
                            this.tEdit_rs_SlipNote.Text = this._detailDataSet.RedSlipDetail.Rows[0][this._detailDataSet.RedSlipDetail.DateAndSlipNoColumn.ColumnName].ToString().Trim();
                            this.tNedit_SlipNoteCode.Clear();
                            this._prevInputValue.SlipNoteCd1 = 0;
                        }
                        break;
                    case 2:
                        {
                            // 2:元黒
                            this.tNedit_SlipNoteCode.Clear();
                            this._prevInputValue.SlipNoteCd1 = 0;
                            this.tEdit_rs_SlipNote.Text = this._detailDataSet.RedSlipDetail.Rows[0][this._detailDataSet.RedSlipDetail.SlipNoteColumn.ColumnName].ToString().Trim();
                        }
                        break;
                    //case 2:
                    case 3:// 3:任意
                        {
                            //// 2:任意
                            this.tNedit_SlipNoteCode.Clear();
                            this._prevInputValue.SlipNoteCd1 = 0;
                            this.tEdit_rs_SlipNote.Text = _settingForm.UserSetting.SlipNote1Default.Trim();
                        }
                        break;
                }
                # endregion

                # region [赤伝備考２]
                switch (_settingForm.UserSetting.SlipNote2Pattern)
                {
                    default:
                    case 0:
                        {
                            // 0:空白
                            this.tEdit_rs_SlipNote2.Text = string.Empty;
                            this._prevInputValue.SlipNoteCd2 = 0;
                            this.tNedit_SlipNote2Code.Clear();
                        }
                        break;
                    case 1:
                        {
                            // 1:日付・伝票番号
                            this._prevInputValue.SlipNoteCd2 = 0;
                            this.tNedit_SlipNote2Code.Clear();
                            this.tEdit_rs_SlipNote2.Text = this._detailDataSet.RedSlipDetail.Rows[0][this._detailDataSet.RedSlipDetail.DateAndSlipNoColumn.ColumnName].ToString().Trim();
                        }
                        break;
                    case 2:
                        {
                            // 2:元黒
                            this._prevInputValue.SlipNoteCd2 = 0;
                            this.tNedit_SlipNote2Code.Clear();
                            this.tEdit_rs_SlipNote2.Text = this._detailDataSet.RedSlipDetail.Rows[0][this._detailDataSet.RedSlipDetail.SlipNote2Column.ColumnName].ToString().Trim();
                        }
                        break;
                    //case 2:
                    case 3:// 3:任意
                        {
                            // 2:任意
                            this._prevInputValue.SlipNoteCd2 = 0;
                            this.tNedit_SlipNote2Code.Clear();
                            this.tEdit_rs_SlipNote2.Text = _settingForm.UserSetting.SlipNote2Default.Trim();
                        }
                        break;
                }
                # endregion

                # region [赤伝備考３]
                switch (_settingForm.UserSetting.SlipNote3Pattern)
                {
                    default:
                    case 0:
                        {
                            // 0:空白
                            this._prevInputValue.SlipNoteCd3 = 0;
                            this.tNedit_SlipNote3Code.Clear();
                            this.tEdit_rs_SlipNote3.Text = string.Empty;
                        }
                        break;
                    case 1:
                        {
                            // 1:日付・伝票番号
                            this._prevInputValue.SlipNoteCd3 = 0;
                            this.tNedit_SlipNote3Code.Clear();
                            this.tEdit_rs_SlipNote3.Text = this._detailDataSet.RedSlipDetail.Rows[0][this._detailDataSet.RedSlipDetail.DateAndSlipNoColumn.ColumnName].ToString().Trim();
                        }
                        break;
                    case 2:
                        {
                            // 2:元黒
                            this._prevInputValue.SlipNoteCd3 = 0;
                            this.tNedit_SlipNote3Code.Clear();
                            this.tEdit_rs_SlipNote3.Text = this._detailDataSet.RedSlipDetail.Rows[0][this._detailDataSet.RedSlipDetail.SlipNote3Column.ColumnName].ToString().Trim();
                        }
                        break;
                    //case 2:
                    case 3:// 3:任意
                        {
                            // 2:任意
                            this._prevInputValue.SlipNoteCd3 = 0;
                            this.tNedit_SlipNote3Code.Clear();
                            this.tEdit_rs_SlipNote3.Text = _settingForm.UserSetting.SlipNote3Default.Trim();
                        }
                        break;
                }
                # endregion
            }
            //------------ADD wangf 2011/12/30 FOR Redmine#27660---------<<<<<<<<
        }
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/16 ADD
        /// <summary>
        /// 明細金額算出処理（赤伝合計算出用）
        /// </summary>
        /// <param name="row"></param>
        /// <returns></returns>
        private long GetDetailPriceForRedTotal(DataRow detailRow)
        {
            // 単価
            double salesUnPrcTaxExc = (double)detailRow[_detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName];
            // 数量
            double shipmentCnt = (double)detailRow[_detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName];

            return GetDetailPriceForRedTotal(salesUnPrcTaxExc, shipmentCnt);
        }
        /// <summary>
        /// 明細金額算出処理（赤伝合計算出用）
        /// </summary>
        /// <param name="row"></param>
        /// <returns></returns>
        private long GetDetailPriceForRedTotal(double salesUnPrcTaxExc, double shipmentCnt)
        {
            return (long)((decimal)salesUnPrcTaxExc * (decimal)shipmentCnt);
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/16 ADD

        /// <summary>
        /// 赤伝発行タブの伝票区分プルダウンを初期化
        /// </summary>
        private void InitializeSalesSlipCdBox()
        {
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/11 DEL
            //ValueListItem v0 = new ValueListItem();
            //v0.DisplayText = "現金売上";
            //v0.DataValue = 0;
            //ValueListItem v1 = new ValueListItem();
            //v1.DisplayText = "現金返品";
            //v1.DataValue = 1;
            //ValueListItem v2 = new ValueListItem();
            //v2.DisplayText = "掛売上";
            //v2.DataValue = 2;
            //ValueListItem v3 = new ValueListItem();
            //v3.DisplayText = "掛返品";
            //v3.DataValue = 3;

            //// 項目追加
            //this.tComboEditor_rs_SalesSlipCd.Items.Add(v0);
            //this.tComboEditor_rs_SalesSlipCd.Items.Add(v1);
            //this.tComboEditor_rs_SalesSlipCd.Items.Add(v2);
            //this.tComboEditor_rs_SalesSlipCd.Items.Add(v3);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/11 DEL
        }

        #endregion // 選択チェックボックスクリック処理

        #region チェックされた伝票から明細を選択

        /// <summary>
        /// チェックされた伝票から明細を選択
        /// </summary>
        /// <returns>明細の選択に成功 true, 失敗 false</returns>
        /// <remarks>伝票一覧で選択された伝票が１件のときのみ呼び出し可能</remarks>
        private bool SelectAllDetailFromSelectedSlip()
        {
            int selectedRowNo = 0;
            // 選択行数をチェック
            selectedRowNo = this._detailDataSet.SalesList.Select("Selection = true").Length;
            if (selectedRowNo > 1 || selectedRowNo == 0) return false;

            // 選択行を特定
            //int rowNo = 0;
            string salesSlipNo = string.Empty;
            int acptAnOdrStatus = 0;
            DataRow[] rows = this._detailDataSet.SalesList.Select("Selection = true");
            int RowNo = 0;
            foreach (DataRow row in rows)
            {
                // １件しかないよ
                salesSlipNo = row[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].ToString();
                acptAnOdrStatus = Int32.Parse(row[this._detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName].ToString());
            }

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/24 DEL
            # region // DEL
            //rows = this._detailDataSet.SalesDetail.Select("SalesSlipNum = '" + salesSlipNo + "' AND AcptAnOdrStatus = " + acptAnOdrStatus.ToString());
            //// 明細がなければ
            //if (rows.Length == 0)
            //{
            //    return false;
            //}
            //else
            //{
            //    try
            //    {
            //        uGrid_Detail.BeginUpdate();

            //        foreach (DataRow detailRow in rows)
            //        {
            //            // 行を選択
            //            RowNo = Int32.Parse(detailRow["RowNo"].ToString());

            //            // 明細行を選択
            //            foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_Detail.Rows)
            //            {
            //                //if ((int)gridRow.Cells[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName].Value == RowNo)
            //                if ((int)gridRow.Cells[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName].Value == RowNo &&
            //                    gridRow.Cells[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Value != DBNull.Value &&
            //                    (bool)gridRow.Cells[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Value == false)
            //                {
            //                    RowSelectClicked(gridRow, 1);
            //                    break;
            //                }
            //            }
            //        }
            //    }
            //    finally
            //    {
            //        uGrid_Detail.EndUpdate();
            //    }

            //    // グリッドを更新
            //    this.uGrid_Detail.Refresh();
            //    this.uGrid_RedSlip.Refresh();
            //}
            # endregion
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/24 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/24 ADD

            //----------------------------------------------------------------
            // ・売上伝票入力で行挿入の機能を使うと、
            // 　DB上の明細作成順と行№順が異なる伝票が作成できる。
            // ・伝票選択→全明細赤伝選択するとき、赤伝Gridへの追加順を
            //   行№順にする。
            //----------------------------------------------------------------


            // 明細表示DataTableのビューを生成
            DataView detailView = new DataView(this._detailDataSet.SalesDetail);
            // (フィルタ)
            detailView.RowFilter = string.Format("{0}='{1}' AND {2}='{3}'",
                                                    this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName, salesSlipNo,
                                                    this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName, acptAnOdrStatus);
            // (ソート)
            detailView.Sort = string.Format("{0},{1}",
                                                    this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName,
                                                    this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName);

            if (detailView.Count == 0)
            {
                return false;
            }
            else
            {
                try
                {
                    uGrid_Detail.BeginUpdate();

                    foreach (DataRowView rowView in detailView)
                    {
                        // RowViewに対応するRowを取得
                        DataRow detailRow = rowView.Row;

                        // 行を選択
                        RowNo = Int32.Parse(detailRow["RowNo"].ToString());

                        // 明細行を選択
                        foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_Detail.Rows)
                        {
                            if ((int)gridRow.Cells[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName].Value == RowNo &&
                                gridRow.Cells[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Value != DBNull.Value &&
                                (bool)gridRow.Cells[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Value == false)
                            {
                                RowSelectClicked(gridRow, 1);
                                break;
                            }
                        }
                    }
                }
                finally
                {
                    uGrid_Detail.EndUpdate();
                }

                // グリッドを更新
                this.uGrid_Detail.Refresh();
                this.uGrid_RedSlip.Refresh();
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/24 ADD
            return true;
        }

        #endregion // チェックされた伝票から明細を選択

        #region 伝票一覧グリッド

        #region クリックイベント

        /// <summary>
        /// 伝票一覧グリッド クリックイベント
        /// </summary>
        /// <param name="sender">グリッドオブジェクト</param>
        /// <param name="e">イベントパラメータ</param>
        private void uGrid_Slip_Click(object sender, System.EventArgs e)
        {
            Infragistics.Win.UltraWinGrid.UltraGrid targetGrid = (Infragistics.Win.UltraWinGrid.UltraGrid)sender;

            // マウスポインタがグリッドのどの位置にあるかを判定する
            Point point = System.Windows.Forms.Cursor.Position;
            point = targetGrid.PointToClient(point);

            // UIElementを取得
            Infragistics.Win.UIElement objUIElement = targetGrid.DisplayLayout.UIElement.ElementFromPoint(point);
            if (objUIElement == null)
                return;

            // 列ヘッダクリックかどうかを判定
            Infragistics.Win.UltraWinGrid.ColumnHeader objHeader =
              (Infragistics.Win.UltraWinGrid.ColumnHeader)objUIElement.GetContext(typeof(Infragistics.Win.UltraWinGrid.ColumnHeader));
            if (objHeader != null) return;

            // 行クリックかどうかを判定
            Infragistics.Win.UltraWinGrid.UltraGridRow objRow =
              (Infragistics.Win.UltraWinGrid.UltraGridRow)objUIElement.GetContext(typeof(Infragistics.Win.UltraWinGrid.UltraGridRow));
            if (objRow == null) return;

            Infragistics.Win.UltraWinGrid.UltraGridCell objCell =
              (Infragistics.Win.UltraWinGrid.UltraGridCell)objUIElement.GetContext(typeof(Infragistics.Win.UltraWinGrid.UltraGridCell));

            // 選択チェック
            if (objCell == objRow.Cells[this._detailDataSet.SalesList.SelectionColumn.ColumnName])
            {
                RowSelectClicked(objRow, 0);
            }
        }

        #endregion // クリックイベント

        #region キーコントロール

        /// <summary>
        /// KeyDownイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uGrid_Slip_KeyDown(object sender, System.Windows.Forms.KeyEventArgs e)
        {
            try
            {
                this.uGrid_Slip.BeginUpdate();

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/29 DEL
                ////--------------------------------------------------
                //// ENTER
                ////--------------------------------------------------
                //if (e.KeyCode == Keys.Enter)
                //{
                //    // 明細表示タブに切り替え
                //    this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_SlipDetail"];

                //    // グリッド上の行が選択されている場合
                //    // 伝票番号および

                //}
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/29 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                switch (e.KeyCode)
                {
                    case Keys.Space:
                        {
                            if (this.uGrid_Slip.ActiveCell == null && this.uGrid_Slip.ActiveRow != null)
                            {
                                this.uGrid_Slip.ActiveCell = this.uGrid_Slip.ActiveRow.Cells[0];
                            }
                            if (this.uGrid_Slip.ActiveCell != null)
                            {
                                RowSelectClicked(this.uGrid_Slip.ActiveCell.Row, 0);
                            }
                        }
                        break;
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
                    //case Keys.Left:
                    //case Keys.Right:
                    //    {
                    //        if ( this.uGrid_Slip.ActiveCell == null && this.uGrid_Slip.ActiveRow != null )
                    //        {
                    //            this.uGrid_Slip.ActiveCell = this.uGrid_Slip.ActiveRow.Cells[0];
                    //        }
                    //    }
                    //    break;
                    case Keys.Left:
                        {
                            if (this.uGrid_Slip.ActiveCell == null && this.uGrid_Slip.ActiveRow != null)
                            {
                                this.uGrid_Slip.ActiveCell = this.uGrid_Slip.ActiveRow.Cells[0];
                            }

                            // 左端のVisiblePositionを取得
                            int firstPosition = this.GetGridFirstPosition(this.uGrid_Slip);

                            // 左端から前行右端に移動させない
                            //if (this.uGrid_Slip.ActiveCell.Column.Header.VisiblePosition == firstPosition)// DEL caohh 2013/03/12 for Redmine#35017
                            if (this.uGrid_Slip.ActiveCell != null && this.uGrid_Slip.ActiveCell.Column.Header.VisiblePosition == firstPosition)// ADD caohh 2013/03/12 for Redmine#35017
                            {
                                e.Handled = true;
                            }
                        }
                        break;
                    case Keys.Right:
                        {

                            if (this.uGrid_Slip.ActiveCell == null && this.uGrid_Slip.ActiveRow != null)
                            {
                                this.uGrid_Slip.ActiveCell = this.uGrid_Slip.ActiveRow.Cells[0];
                            }

                            // 右端のVisiblePositionを取得
                            int lastPosition = this.GetGridLastPosition(this.uGrid_Slip);

                            // 右端から次行左端に移動させない
                            //if (this.uGrid_Slip.ActiveCell.Column.Header.VisiblePosition == lastPosition)// DEL caohh 2013/03/12 for Redmine#35017
                            if (this.uGrid_Slip.ActiveCell != null && this.uGrid_Slip.ActiveCell.Column.Header.VisiblePosition == lastPosition)// ADD caohh 2013/03/12 for Redmine#35017
                            {
                                e.Handled = true;
                            }
                        }
                        break;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD
                    case Keys.Up:
                        {
                            Infragistics.Win.UltraWinGrid.UltraGridRow row = uGrid_Slip.ActiveRow;
                            if (row == null && uGrid_Slip.ActiveCell != null)
                            {
                                row = uGrid_Slip.ActiveCell.Row;
                            }

                            if (row != null && row.Index == 0)
                            {
                                // 先頭行から上移動
                                Control nextControl = GetNextControlForGridUpKey();
                                if (nextControl != null)
                                {
                                    if (uGrid_Slip.ActiveCell != null)
                                    {
                                        uGrid_Slip.ActiveCell.Selected = false;
                                        uGrid_Slip.ActiveCell = null;
                                    }
                                    if (uGrid_Slip.ActiveRow != null)
                                    {
                                        uGrid_Slip.ActiveRow.Selected = false;
                                        uGrid_Slip.ActiveRow = null;
                                    }
                                    nextControl.Focus();
                                }
                            }
                        }
                        break;
                    default:
                        break;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD
            }
            finally
            {
                this.uGrid_Slip.EndUpdate();
            }
        }
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 ADD
        /// <summary>
        /// グリッド内の最初のVisiblePosition取得
        /// </summary>
        /// <param name="grid"></param>
        /// <returns></returns>
        private int GetGridFirstPosition(Infragistics.Win.UltraWinGrid.UltraGrid grid)
        {
            if (grid.ActiveRow == null) return 0;

            int colCount = grid.ActiveRow.Cells.Count;
            for (int index = 0; index < grid.ActiveRow.Cells.Count; index++)
            {
                if (grid.ActiveRow.Cells[index].Column.Hidden == false)
                {
                    if (colCount > grid.ActiveRow.Cells[index].Column.Header.VisiblePosition)
                    {
                        colCount = grid.ActiveRow.Cells[index].Column.Header.VisiblePosition;
                    }
                }
            }
            return colCount;
        }
        /// <summary>
        /// グリッド内の最後のVisiblePosition取得
        /// </summary>
        /// <param name="grid"></param>
        /// <returns></returns>
        private int GetGridLastPosition(Infragistics.Win.UltraWinGrid.UltraGrid grid)
        {
            if (grid.ActiveRow == null) return 0;

            int colCount = 0;
            for (int index = 0; index < grid.ActiveRow.Cells.Count; index++)
            {
                if (grid.ActiveRow.Cells[index].Column.Hidden == false)
                {
                    if (colCount < grid.ActiveRow.Cells[index].Column.Header.VisiblePosition)
                    {
                        colCount = grid.ActiveRow.Cells[index].Column.Header.VisiblePosition;
                    }
                }
            }
            return colCount;
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 ADD
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// グリッド先頭行からのUpキー戻り先取得（伝票表示タブ・明細表示タブ用）
        /// </summary>
        /// <returns></returns>
        private Control GetNextControlForGridUpKey()
        {
            //if ( uExGroupBox_ExtraCondition.Expanded )//DEL 鄧潘ハン 2012/03/02 Redmine#26667
            if (uExGroupBox_ExtraCondition.Expanded && uExGroupBox_ExtraCondition.Panel.Visible)//ADD 鄧潘ハン 2012/03/02 Redmine#26667
            {
                // 詳細条件
                return _gridUpKeyBackControl;
            }
            else if (uExGroupBox_CommonCondition.Expanded)
            {
                // 基本条件
                //return tNedit_ClaimCode;// DEL 2009/12/28
                return this.tNedit_CustomerCode;// ADD 2009/12/28
            }
            else
            {
                // 移動しない
                return null;
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

        #endregion // キーコントロール

        #endregion // 伝票一覧グリッド

        #region 伝票明細グリッド

        #region クリックイベント

        /// <summary>
        /// 伝票明細グリッド クリックイベント
        /// </summary>
        /// <param name="sender">グリッドオブジェクト</param>
        /// <param name="e">イベントパラメータ</param>
        private void uGrid_Detail_Click(object sender, System.EventArgs e)
        {
            Infragistics.Win.UltraWinGrid.UltraGrid targetGrid = (Infragistics.Win.UltraWinGrid.UltraGrid)sender;


            // マウスポインタがグリッドのどの位置にあるかを判定する
            Point point = System.Windows.Forms.Cursor.Position;
            point = targetGrid.PointToClient(point);

            // UIElementを取得
            Infragistics.Win.UIElement objUIElement = targetGrid.DisplayLayout.UIElement.ElementFromPoint(point);
            if (objUIElement == null)
                return;

            // 列ヘッダクリックかどうかを判定
            Infragistics.Win.UltraWinGrid.ColumnHeader objHeader =
              (Infragistics.Win.UltraWinGrid.ColumnHeader)objUIElement.GetContext(typeof(Infragistics.Win.UltraWinGrid.ColumnHeader));
            if (objHeader != null) return;

            // 行クリックかどうかを判定
            Infragistics.Win.UltraWinGrid.UltraGridRow objRow =
              (Infragistics.Win.UltraWinGrid.UltraGridRow)objUIElement.GetContext(typeof(Infragistics.Win.UltraWinGrid.UltraGridRow));
            if (objRow == null) return;

            Infragistics.Win.UltraWinGrid.UltraGridCell objCell =
              (Infragistics.Win.UltraWinGrid.UltraGridCell)objUIElement.GetContext(typeof(Infragistics.Win.UltraWinGrid.UltraGridCell));

            // 選択チェック
            if (objCell == objRow.Cells[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName])
            {
                RowSelectClicked(objRow, 1);
            }
        }

        #endregion // クリックイベント

        #region キーコントロール

        /// <summary>
        /// KeyDownイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uGrid_Detail_KeyDown(object sender, System.Windows.Forms.KeyEventArgs e)
        {
            try
            {
                this.uGrid_Detail.BeginUpdate();

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/02 DEL
                // ↓ChangeFocus内で処理する
                ////--------------------------------------------------
                //// ENTER
                ////--------------------------------------------------
                //if ( e.KeyCode == Keys.Enter )
                //{
                //    // 選択行が1行以上であれば赤伝発行タブに切り替え
                //    if (this._detailDataSet.SalesDetail.Select("SelectionCheck = true").Length > 0)
                //    {
                //        this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_RedSlip"];
                //    }
                //}
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/02 DEL

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/29 DEL
                ////--------------------------------------------------
                //// SPACE
                ////--------------------------------------------------
                //if (e.KeyCode == Keys.Space)
                //{
                //    // フォーカスがある行を選択
                //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/02 DEL
                //    //if ( this.uGrid_RedSlip.ActiveRow == null ) return;
                //    //else
                //    //{
                //    //    RowSelectClicked(this.uGrid_RedSlip.ActiveRow, 1);
                //    //}
                //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/02 DEL
                //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/02 ADD
                //    if ( this.uGrid_Detail.ActiveCell != null )
                //    {
                //        this.uGrid_Detail.ActiveCell.Row.Activate();
                //    }

                //    if ( this.uGrid_Detail.ActiveRow != null )
                //    {
                //        RowSelectClicked( this.uGrid_Detail.ActiveRow, 1 );
                //    }
                //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/02 ADD
                //}

                ////--------------------------------------------------
                //// ESCAPE
                ////--------------------------------------------------
                //if (e.KeyCode == Keys.Escape)
                //{
                //    // 伝票一覧タブに切り替え
                //    this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_SlipList"];
                //    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/02 ADD
                //    this.uGrid_Slip.Focus();
                //    if ( this.uGrid_Slip.ActiveRow != null )
                //    {
                //        this.uGrid_Slip.ActiveRow.Selected = false;
                //    }
                //    this.uGrid_Slip.ActiveRowScrollRegion.FirstRow.Activate();
                //    this.uGrid_Slip.ActiveRowScrollRegion.FirstRow.Selected = true;
                //    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/02 ADD
                //}
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/29 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD

                switch (e.KeyCode)
                {
                    case Keys.Escape:
                        {
                            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 DEL
                            //// 伝票一覧タブに切り替え
                            //this.uTabControl.Focus();
                            //this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_SlipList"];
                            //this.uGrid_Slip.Focus();

                            ////this.uGrid_Slip.Focus();
                            ////if ( this.uGrid_Slip.ActiveRow != null )
                            ////{
                            ////    this.uGrid_Slip.ActiveRow.Selected = false;
                            ////}
                            //////this.uGrid_Slip.ActiveRowScrollRegion.FirstRow.Activate();
                            //////this.uGrid_Slip.ActiveRowScrollRegion.FirstRow.Selected = true;

                            //// Escape押下した現在行の伝票へ飛ぶ
                            //foreach ( Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_Slip.Rows )
                            //{
                            //    if ( (uGrid_Detail.ActiveRow.Cells[_detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Value as string).Trim() == (gridRow.Cells[_detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Value as string).Trim() &&
                            //          uGrid_Detail.ActiveRow.Cells[_detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName].Value == gridRow.Cells[_detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName].Value
                            //        )
                            //    {
                            //        if ( uGrid_Slip.ActiveRow != null )
                            //        {
                            //            uGrid_Slip.ActiveRow.Selected = false;
                            //        }

                            //        uGrid_Slip.ActiveRow = gridRow;
                            //        uGrid_Slip.ActiveRow.Selected = true;
                            //        break;
                            //    }
                            //}
                            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 DEL
                            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 ADD
                            if (this.uGrid_Detail.ActiveCell != null)
                            {
                                this.uGrid_Detail.ActiveCell.Row.Activate();
                            }

                            // 明細部キーダウン処理（現在行の取得）
                            if (this.uGrid_Detail.ActiveRow != null)
                            {
                                //e.NextCtrl = null;

                                // Enter押下した現在行の伝票の明細へ飛ぶ
                                Infragistics.Win.UltraWinGrid.UltraGridRow focusRow = null;
                                foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_Slip.Rows)
                                {
                                    try
                                    {
                                        string slipSlipNo = (string)gridRow.Cells[_detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Value;
                                        int slipFormal = (int)gridRow.Cells[_detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName].Value;
                                        int slipDataDiv = (int)gridRow.Cells[_detailDataSet.SalesList.DataDivColumn.ColumnName].Value;
                                        string detailSlipNo = (string)uGrid_Detail.ActiveRow.Cells[_detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Value;
                                        int detailFormal = (int)uGrid_Detail.ActiveRow.Cells[_detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName].Value;
                                        int detailDataDiv = (int)uGrid_Detail.ActiveRow.Cells[_detailDataSet.SalesDetail.DataDivColumn.ColumnName].Value;

                                        if (detailSlipNo == slipSlipNo && detailFormal == slipFormal && detailDataDiv == slipDataDiv)
                                        {
                                            focusRow = gridRow;
                                            break;
                                        }
                                    }
                                    catch
                                    {
                                    }
                                }

                                // 移動先が決定した場合のみ
                                if (focusRow != null)
                                {
                                    this.uTabControl.Focus();
                                    this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_SlipList"];
                                    uGrid_Slip.Focus();


                                    if (uGrid_Slip.ActiveRow != null)
                                    {
                                        uGrid_Slip.ActiveRow.Selected = false;
                                    }

                                    uGrid_Slip.ActiveRow = focusRow;
                                    uGrid_Slip.ActiveRow.Selected = true;
                                }
                            }
                            else
                            {
                                //e.NextCtrl = uCheckEditor_StatusBar_AutoFillToGridColumn;
                                //e.NextCtrl = null;
                            }
                            //break;
                            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 ADD
                        }
                        break;
                    case Keys.Space:
                        {
                            if (this.uGrid_Detail.ActiveCell == null && this.uGrid_Detail.ActiveRow != null)
                            {
                                this.uGrid_Detail.ActiveCell = this.uGrid_Detail.ActiveRow.Cells[0];
                            }
                            if (this.uGrid_Detail.ActiveCell != null)
                            {
                                RowSelectClicked(this.uGrid_Detail.ActiveCell.Row, 1);
                            }
                        }
                        break;
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 UPD
                    //case Keys.Left:
                    //case Keys.Right:
                    //    {
                    //        if ( this.uGrid_Detail.ActiveCell == null && this.uGrid_Detail.ActiveRow != null )
                    //        {
                    //            this.uGrid_Detail.ActiveCell = this.uGrid_Detail.ActiveRow.Cells[0];
                    //        }
                    //    }
                    //    break;
                    case Keys.Left:
                        {
                            if (this.uGrid_Detail.ActiveCell == null && this.uGrid_Detail.ActiveRow != null)
                            {
                                this.uGrid_Detail.ActiveCell = this.uGrid_Detail.ActiveRow.Cells[0];
                            }

                            // 左端のVisiblePositionを取得
                            int firstPosition = this.GetGridFirstPosition(this.uGrid_Detail);

                            // 左端から前行右端に移動させない
                            //if (this.uGrid_Detail.ActiveCell.Column.Header.VisiblePosition == firstPosition) // DEL caohh 2013/03/12 for Redmine#35017
                            if (this.uGrid_Detail.ActiveCell != null && this.uGrid_Detail.ActiveCell.Column.Header.VisiblePosition == firstPosition)// ADD caohh 2013/03/12 for Redmine#35017
                            {
                                e.Handled = true;
                            }
                        }
                        break;
                    case Keys.Right:
                        {
                            if (this.uGrid_Detail.ActiveCell == null && this.uGrid_Detail.ActiveRow != null)
                            {
                                this.uGrid_Detail.ActiveCell = this.uGrid_Detail.ActiveRow.Cells[0];
                            }

                            // 右端のVisiblePositionを取得
                            int lastPosition = this.GetGridLastPosition(this.uGrid_Detail);

                            // 右端から次行左端に移動させない
                            //if (this.uGrid_Detail.ActiveCell.Column.Header.VisiblePosition == lastPosition) // DEL caohh 2013/03/12 for Redmine#35017
                            if (this.uGrid_Detail.ActiveCell != null && this.uGrid_Detail.ActiveCell.Column.Header.VisiblePosition == lastPosition) // ADD caohh 2013/03/12 for Redmine#35017
                            {
                                e.Handled = true;
                            }
                        }
                        break;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 UPD
                    case Keys.Up:
                        {
                            Infragistics.Win.UltraWinGrid.UltraGridRow row = uGrid_Detail.ActiveRow;
                            if (row == null && uGrid_Detail.ActiveCell != null)
                            {
                                row = uGrid_Detail.ActiveCell.Row;
                            }

                            if (row != null && row.Index == 0)
                            {
                                // 先頭行から上移動
                                Control nextControl = GetNextControlForGridUpKey();
                                if (nextControl != null)
                                {
                                    if (uGrid_Detail.ActiveCell != null)
                                    {
                                        uGrid_Detail.ActiveCell.Selected = false;
                                        uGrid_Detail.ActiveCell = null;
                                    }
                                    if (uGrid_Detail.ActiveRow != null)
                                    {
                                        uGrid_Detail.ActiveRow.Selected = false;
                                        uGrid_Detail.ActiveRow = null;
                                    }
                                    nextControl.Focus();
                                }
                            }
                        }
                        break;
                    default:
                        break;
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD
            }
            finally
            {
                this.uGrid_Detail.EndUpdate();
            }
        }

        #endregion // キーコントロール

        #endregion // 伝票明細グリッド

        #endregion // グリッドコントロールイベント

        #region フォントサイズ変更

        /// <summary>
        /// フォントサイズ変更
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tComboEditor_StatusBar_FontSize_ValueChanged(object sender, EventArgs e)
        {
            int a = this.StrToIntDefOfValue(this.tComboEditor_StatusBar_FontSize.Value, CT_DEF_FONT_SIZE);
            float fontPoint = (float)a;

            if (this._selectedMainTabKey == "uTab_SlipList")
            {
                this.uGrid_Slip.DisplayLayout.Appearance.FontData.SizeInPoints = fontPoint;
                this.uGrid_Slip.Refresh();
            }
            else if (this._selectedMainTabKey == "uTab_SlipDetail")
            {
                this.uGrid_Detail.DisplayLayout.Appearance.FontData.SizeInPoints = fontPoint;
                this.uGrid_Detail.Refresh();
            }
            else if (this._selectedMainTabKey == "uTab_RedSlip")
            {
                this.uGrid_RedSlip.DisplayLayout.Appearance.FontData.SizeInPoints = fontPoint;
                this.uGrid_RedSlip.Refresh();
            }
            else if (this._selectedMainTabKey == "uTab_RemainList")
            {
                this.uGrid_BalanceList.DisplayLayout.Appearance.FontData.SizeInPoints = fontPoint;
                this.uGrid_BalanceList.Refresh();
            }

            uCheckEditor_StatusBar_AutoFillToGridColumn_CheckedChanged(null, null);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="obj"></param>
        /// <param name="defaultNo"></param>
        /// <returns></returns>
        private int StrToIntDefOfValue(object obj, int defaultNo)
        {
            try
            {
                return (int)obj;
            }
            catch
            {
                return defaultNo;
            }
        }

        #endregion // フォントサイズ変更

        #endregion // コントロールイベント

        #region 赤伝発行

        /// <summary>
        /// 赤伝発行
        /// </summary>
        /// <remarks>
        /// <br>Update Note : 2009/11/25 呉元嘯</br>
        /// <br>              PM.NS保守依頼③ 不具合対応</br>
        /// <br>              ①再発行時の行選択を明細から行えるように修正</br>
        /// <br>              ②赤伝発行がキャンセルされた場合は、データの再抽出を行わないように修正</br>
        /// <br>Update Note : 2009/12/15 呉元嘯</br>
        /// <br>              Redmine#1890、#1911不具合対応</br>
        /// <br>Update Note : 2010/01/29 呉元嘯 4次改良</br>
        /// <br>              赤伝発行後に、発行した赤伝にカーソル移動するように修正</br>
        /// <br>Update Note : 2010/12/20 yangmj </br>
        /// <br>              数量プラスの商品値引を赤伝発行可能に修正</br>
        /// <br>              伝票印刷制御の修正</br>
        /// <br>UpdateNote  : 2012/03/29  gezh</br>
        /// <br>              2012/05/24配信分 Redmine#29149 得意先電子元帳　赤伝返品手数料入力時の販売区分についての対応</br> 
        /// <br>Update Note : 2012/12/19 山形部品オプション対応</br>
        /// <br>              売上日付チェックの追加</br>
        /// <br>UpdateNote  : 2013/03/18 zhaimm</br>
        /// <br>Update Note : 10800003-00 2013/05/15配信分</br>
        /// <br>              Redmine#34807 赤伝発行時：売上伝票入力の仕様と同様、0詰めを行う</br>
        /// <br>UpdateNote  : 2013/09/18 liusy</br>
        /// <br>            : 10801804-00 配信分なし</br>
        /// <br>              Redmine#40275 直接にF5で、赤伝発行時にエラーの修正</br>
        /// <br>Update Note : K2013/01/23 鄧潘ハン </br>
        /// <br>            : 特販区分を追加することの登戸個別対応</br>
        /// </remarks>
        private void IssueRedSlip()
        {
            // 2010/02/22 Add >>>
            // 赤伝発行の権限が無い場合は強制的に終了
            if (!OpeAuthDictionary[OperationCode.RedSlip])
            {
                return;
            }
            // 2010/02/22 Add <<<
            Dictionary<string, int> _printRedSalesSlipNo = null;
            _searchSlipFlag = true;// ADD 2009/12/15
            _searchSalesSlipNum = string.Empty;// ADD 2010/01/29
            // 全ての伝票番号で最も若いものをヘッダデータとして取得

            // 明細データはすべての伝票番号で取得し、赤伝明細用として保持する
            // その際に、元データの明細通番を赤伝明細の売上明細通番（元）SalesSlipDtlNumSrcに保存、
            // 受注ステータスを赤伝明細の受注ステータス（元）AcptAnOdrStatusSrcとして保存

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/15 DEL
            # region // DEL

            //// 元伝票
            //CustomSerializeArrayList salesArray = new CustomSerializeArrayList();


            //// ヘッダデータとして使用する伝票番号（最も若い伝票番号）を取得
            //string salesSlipNumHeader = string.Empty;
            //int acptAnOdrStatusHeader = 0;
            ////string[] slipNumList;
            ////int[] acptAnOdrStatusList;
            //DataRow[] selectedRows;

            //getHeaderSlipNo(out salesSlipNumHeader, out acptAnOdrStatusHeader, out selectedRows);//slipNumList, out acptAnOdrStatusList);

            ////------------------------
            //// 元伝データを作成する
            ////------------------------

            //// ヘッダのデータを取得
            //SalesSlip salesSlip;
            //List<SalesDetail> salesDetailList;
            //List<SalesDetail> addUpSrcDetailList;
            //SearchDepsitMain searchDepsitMain;
            //SearchDepositAlw searchDepositAlw;
            //List<StockSlipWork> stockSlipWorkList;
            //List<StockDetailWork> stockDetailWorkList;
            //List<AddUpOrgStockDetailWork> addUpSrcStockDetailWorkList;
            //List<StockWork> stockWorkList;
            //List<AcceptOdrCar> acceptOdrCarList;

            //// データリード
            //int status = this._custPtrRedSlipAcs.ReadDBDataProc(ConstantManagement.LogicalMode.GetData0,
            //    this._enterpriseCode, acptAnOdrStatusHeader, salesSlipNumHeader,
            //    out salesSlip, out salesDetailList,
            //    out addUpSrcDetailList, out searchDepsitMain,
            //    out searchDepositAlw, out stockSlipWorkList,
            //    out stockDetailWorkList, out addUpSrcStockDetailWorkList,
            //    out stockWorkList, out acceptOdrCarList);

            //if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            //{
            //    // 正常処理
            //}
            //else
            //{
            //    TMsgDisp.Show(
            //        this,
            //        emErrorLevel.ERR_LEVEL_INFO,
            //        this.Name,
            //        "該当データが存在しません。",
            //        -1,
            //        MessageBoxButtons.OK);
            //}

            ////// 伝票番号取得
            ////// 赤伝のタブの中で最も若い番号を取得
            ////string[] slipUnique;
            ////string slipTmp;
            ////int rowNo = 0;
            ////DataRow[] rows = this._detailDataSet.SalesDetail.Select("SelectionCheck = true", "SalesSlipNum asc");
            ////foreach (DataRow row in rows)
            ////{
            ////    slipTmp = row["SalesSlipNum"].ToString();
            ////    if (salesSlipNumHeader == string.Empty)
            ////    {
            ////        salesSlipNumHeader = slipTmp;
            ////        rowNo = Int32.Parse(row["RowNo"].ToString());
            ////    }
            ////    else if (Int32.Parse(salesSlipNumHeader) > Int32.Parse(slipTmp))
            ////    {
            ////        salesSlipNumHeader = slipTmp;
            ////        rowNo = Int32.Parse(row["RowNo"].ToString());
            ////    }
            ////}
            ////salesSlipNumHeader = salesSlipNumHeader.PadLeft(9, '0');

            ////// 受注ステータス取得
            ////rows = this._detailDataSet.SalesDetail.Select("RowNo = " + rowNo.ToString());
            ////foreach (DataRow row in rows)
            ////{
            ////    acptAnOdrStatusHeader = Int32.Parse(row["AcptAnOdrStatus"].ToString());
            ////}

            //return;
            //// 明細データをすべて取得
            ////rows = this._detailDataSet.SalesDetail.Select("SelectionCheck = true");

            # endregion
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/15 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/15 ADD

            // ---ADD 2009/02/10 不具合対応[11432] ----------------------------------------------->>>>>
            if (this._detailDataSet.RedSlipDetail.Count == 0)
            {
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, MSG_RS_NO_SELECTED_DATA, -1, MessageBoxButtons.OK);
                _searchSlipFlag = false;// ADD 2009/11/25
                return;
            }
            // ---ADD 2009/02/10 不具合対応[11432] -----------------------------------------------<<<<<

            // --- UPD m.suzuki 2010/08/18 ---------->>>>>
            # region // DEL
            //// --- ADD 2009/02/19 -------------------------------->>>>>
            //// 売上日チェック
            //DateTime totalDate;

            //// 締次チェック
            //bool checkPaymentAddUpHis = this.CheckDmdC(this._selectedSectionCd.Trim(), this._selectedCustomerCd, this.tDateEdit_rs_SalesDate.GetDateTime());

            //if (checkPaymentAddUpHis)
            //{
            //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, MSG_RS_SALESDATE_DMD_ERROR, -1, MessageBoxButtons.OK);
            //    _searchSlipFlag = false;// ADD 2009/11/25
            //    return;
            //}

            //// 月次チェック
            //bool checkMonthlyAddUpHis = this.CheckMonthlyAddUpHis(this._selectedSectionCd.Trim(), this._selectedCustomerCd, this.tDateEdit_rs_SalesDate.GetDateTime());

            ////if (checkPaymentAddUpHis) // DEL 2009/02/20
            //if (checkMonthlyAddUpHis) // ADD 2009/02/20
            //{
            //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, MSG_RS_SALESDATE_MONTHLY_ERROR, -1, MessageBoxButtons.OK);
            //    _searchSlipFlag = false;// ADD 2009/11/25
            //    return;
            //}
            //// --- ADD 2009/02/19 --------------------------------<<<<<
            //// --- ADD 2009/02/20 -------------------------------->>>>>
            //bool checkMonthlyPayment = false; // 仕入月次チェック
            //bool checkPayment = false; // 仕入締次チェック

            //foreach (DataRow dr in this._detailDataSet.RedSlipDetail.Rows)
            //{
            //    if (dr[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName] != null 
            //        && dr[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].ToString() != string.Empty)
            //    {
            //        // 仕入締次チェック
            //        checkPayment = this.CheckPayment(
            //            this._selectedSectionCd.Trim(), (int)dr[this._detailDataSet.RedSlipDetail.SupplierCdColumn.ColumnName], this.tDateEdit_rs_SalesDate.GetDateTime());

            //        if (checkPayment)
            //        {
            //            break;
            //        }

            //        // 仕入月次チェック
            //        checkMonthlyPayment = this.CheckMonthlyAccPayment(
            //            this._selectedSectionCd.Trim(), (int)dr[this._detailDataSet.RedSlipDetail.SupplierCdColumn.ColumnName], this.tDateEdit_rs_SalesDate.GetDateTime());

            //        if (checkMonthlyPayment)
            //        {
            //            break;
            //        }
            //    }
            //}

            //if (checkPayment)
            //{
            //    // 仕入締次エラー
            //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, MSG_RS_SALESDATE_DMDSUP_ERROR, -1, MessageBoxButtons.OK);
            //    _searchSlipFlag = false;// ADD 2009/11/25
            //    return;
            //}

            //if (checkMonthlyPayment)
            //{
            //    // 仕入月次エラー
            //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, MSG_RS_SALESDATE_MONTHLYSUP_ERROR, -1, MessageBoxButtons.OK);
            //    _searchSlipFlag = false;// ADD 2009/11/25
            //    return;
            //}
            //// --- ADD 2009/02/20 --------------------------------<<<<<
            # endregion

            // ----------ADD 2010/12/20 ------------>>>>>
            //発行者の未入力チェック
            if (string.IsNullOrEmpty(this.tEdit_rs_InputEmployeeCd.Text.Trim()))
            {
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, "発行者が未入力です。", -1, MessageBoxButtons.OK);
                this.tEdit_rs_InputEmployeeCd.Focus();
                _searchSlipFlag = false;
                return;
            }
            // ----------ADD 2010/12/20 ------------<<<<<
            // ----------ADD 2010/12/20 ------------>>>>>
            DateGetAcs.CheckDateResult cdResult;
            //売上日の未入力チェック
            cdResult = _dateGetAcs.CheckDate(ref tDateEdit_rs_SalesDate, false);
            if (cdResult == DateGetAcs.CheckDateResult.ErrorOfNoInput)
            {
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, "売上日が未入力です。", -1, MessageBoxButtons.OK);
                this.tDateEdit_rs_SalesDate.Focus();
                _searchSlipFlag = false;
                return;
            }
            else if (cdResult == DateGetAcs.CheckDateResult.ErrorOfInvalid)
            {
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, "売上日が不正です。", -1, MessageBoxButtons.OK);
                this.tDateEdit_rs_SalesDate.Focus();
                _searchSlipFlag = false;
                return;
            }
            // ----------ADD 2010/12/20 ------------<<<<<
            // --- ADD 2012/12/19 T.Miyamoto ------------------------------>>>>>
            // 日付制御オプション(OPT-CPM0040)がオンの場合
            if (this._opt_SalesDateDCtrl == (int)Option.ON)
            {
                // 売上日付のチェック(サーバーのシステム日付より前の場合、エラー)
                if (tDateEdit_rs_SalesDate.GetDateTime().CompareTo(_custPtrRedSlipAcs.GetServerNowTime()) < 0)
                {
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, "売上日がシステム日付より前に設定されています。", -1, MessageBoxButtons.OK);
                    this.tDateEdit_rs_SalesDate.SetDateTime(_SalesDate);
                    this.tDateEdit_rs_SalesDate.Focus();
                    _searchSlipFlag = false;
                    return;
                }
            }
            // --- ADD 2012/12/19 T.Miyamoto ------------------------------<<<<<
            // 売上・仕入日付チェック
            string checkRedSlipDateMessage;
            if (CheckRedSlipDate(out checkRedSlipDateMessage) == false)
            {
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, checkRedSlipDateMessage, -1, MessageBoxButtons.OK);
                _searchSlipFlag = false;
                return;
            }
            // --- UPD m.suzuki 2010/08/18 ----------<<<<<
            // ADD 2012/03/29 gezh Redmine#29149 --------->>>>>
            //if (string.IsNullOrEmpty(this.tNedit_SalesCodeDiv.Text.Trim()) && _salesTtlSt.SalesCdDspDivCd == 2 && tComboEditor_rs_SalesSlipCd.SelectedIndex == 1 )  // DEL 2012/03/29 gezh Redmine#29149

            // ---ADD K2013/01/23  鄧潘ハン---------------------------------->>>>>
            if (this._opt_Nobuto == (int)Option.ON)
            {

                //該当なし。

            }
            else
            {
            if (string.IsNullOrEmpty(this.tNedit_SalesCodeDiv.Text.Trim()) && _salesTtlSt.SalesCdDspDivCd == 2 && tComboEditor_rs_SalesSlipCd.SelectedIndex == 1 && (!(string.IsNullOrEmpty(tNedit_rs_FeePercent01.Text.Trim()) && string.IsNullOrEmpty(tNedit_rs_FeePercent02.Text.Trim()) && string.IsNullOrEmpty(tNedit_rs_FeePercentTotal.Text.Trim()) && string.IsNullOrEmpty(tNedit_rs_FeeAmountTotal.Text.Trim()))))  // ADD 2012/03/29 gezh Redmine#29149
            {
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, "販売区分が未入力です。", -1, MessageBoxButtons.OK);
                this.tNedit_SalesCodeDiv.Focus();
                _searchSlipFlag = false;
                return;
            }
            }
            // ---ADD K2013/01/23  鄧潘ハン----------------------------------<<<<<

            // ---DEL K2013/01/23  鄧潘ハン---------------------------------->>>>>
            //if (string.IsNullOrEmpty(this.tNedit_SalesCodeDiv.Text.Trim()) && _salesTtlSt.SalesCdDspDivCd == 2 && tComboEditor_rs_SalesSlipCd.SelectedIndex == 1 && (!(string.IsNullOrEmpty(tNedit_rs_FeePercent01.Text.Trim()) && string.IsNullOrEmpty(tNedit_rs_FeePercent02.Text.Trim()) && string.IsNullOrEmpty(tNedit_rs_FeePercentTotal.Text.Trim()) && string.IsNullOrEmpty(tNedit_rs_FeeAmountTotal.Text.Trim()))))  // ADD 2012/03/29 gezh Redmine#29149
            //{
            //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, "販売区分が未入力です。", -1, MessageBoxButtons.OK);
            //    this.tNedit_SalesCodeDiv.Focus();
            //    _searchSlipFlag = false;
            //    return;
            //}
            // ---DEL K2013/01/23  鄧潘ハン----------------------------------<<<<<
            // ADD 2012/03/29 gezh Redmine#29149 ---------<<<<<
            #region DEL 2017/02/14 入金引当チェック
            //// ---------- ADD 2015/08/21 Y.Wakita 東海自動車工業 品証Redmine№4512対応 ---------->>>>>
            //// 明細の売上伝票番号退避
            //Dictionary<string, int> dicDepAlw = new Dictionary<string, int>();
            //// ---------- ADD 2015/08/21 Y.Wakita 東海自動車工業 品証Redmine№4512対応 ----------<<<<<
            #endregion DEL 2017/02/14 入金引当チェック
            // ---------- 2021/12/13 田建委 PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応 ---------->>>>>
            // 明細の売上伝票番号退避
            Dictionary<string, int> dicDepAlw = new Dictionary<string, int>();
            // ---------- 2021/12/13 田建委 PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応 ----------<<<<<
            // --- UPD 2009/12/15 ---------->>>>>
            // --- ADD 2009/11/25 ---------->>>>>
            string Msg_2 = "以下の行は赤伝発行出来ません。\r\n選択を解除してから再度実行して下さい。\r\n";
            string addText_2 = string.Empty;
            foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRedRow in this.uGrid_RedSlip.Rows)
            {
                int acptAnOdrStatus = Int32.Parse(gridRedRow.Cells[_detailDataSet.RedSlipDetail.AcptAnOdrStatusColumn.ColumnName].Value.ToString());
                string salesSlipNum = gridRedRow.Cells[_detailDataSet.RedSlipDetail.SalesSlipNumColumn.ColumnName].Value.ToString();
                int salesRowNo = Int32.Parse(gridRedRow.Cells[_detailDataSet.RedSlipDetail.SalesRowNoColumn.ColumnName].Value.ToString());
                int rowNo = Int32.Parse(gridRedRow.Cells[_detailDataSet.RedSlipDetail.RowNoColumn.ColumnName].Value.ToString());
                DataRow denRow = this._detailDataSet.SalesDetail.Rows.Find(rowNo);
                double shipmentCnt = double.Parse(denRow[_detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName].ToString());
                int salesSlipCd = Int32.Parse(denRow[_detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName].ToString());

                // 伝票区分が[30:売上]以外、あるいは売上でも数量が０以下の場合
                //-----UPD 2010/12/20----->>>>>
                int salesSlipCdDtl = Int32.Parse(denRow[_detailDataSet.SalesDetail.SalesSlipCdDtlColumn.ColumnName].ToString());
                //if ((acptAnOdrStatus != 30) || (salesSlipCd == 1) || (acptAnOdrStatus == 30 && shipmentCnt < 0))
                if ((acptAnOdrStatus != 30) || (salesSlipCd == 1)
                    || ((acptAnOdrStatus == 30 && shipmentCnt < 0 && salesSlipCdDtl != 2) ||
                    (acptAnOdrStatus == 30 && shipmentCnt == 0 && salesSlipCdDtl == 2)))
                //-----UPD 2010/12/20-----<<<<<
                {
                    string text = "伝票番号 " + salesSlipNum + " 行 " + salesRowNo;
                    addText_2 += text + "\r\n";
                }
                #region DEL 2017/02/14 入金引当チェック
                //// ---------- ADD 2015/08/21 Y.Wakita 東海自動車工業 品証Redmine№4512対応 ---------->>>>>
                //// 明細の売上伝票番号退避
                //if (dicDepAlw.ContainsKey(salesSlipNum) == false)
                //    dicDepAlw.Add(salesSlipNum, acptAnOdrStatus);
                //// ---------- ADD 2015/08/21 Y.Wakita 東海自動車工業 品証Redmine№4512対応 ----------<<<<<
                #endregion DEL 2017/02/14 入金引当チェック
                // ---------- 2021/12/13 田建委 PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応 ---------->>>>>
                if (this.Opt_CtlIssuingAkaden == (int)Option.ON)
                {
                    // 明細の売上伝票番号退避
                    if (dicDepAlw.ContainsKey(salesSlipNum) == false)
                        dicDepAlw.Add(salesSlipNum, acptAnOdrStatus);
                }
                // ---------- 2021/12/13 田建委 PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応 ----------<<<<<
            }
            if (!string.IsNullOrEmpty(addText_2))
            {
                TMsgDisp.Show(
                      this,
                      emErrorLevel.ERR_LEVEL_EXCLAMATION,
                      this.Name,
                      Msg_2 + "\r\n" + addText_2,
                      -1,
                      MessageBoxButtons.OK);
                _searchSlipFlag = false;
                return;
            }
            string Msg_1 = "以下の行は返品可能数が存在しないため、赤伝発行出来ません。\r\n選択を解除してから再度実行して下さい。\r\n";
            string addText_1 = string.Empty;
            foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRedRow in this.uGrid_RedSlip.Rows)
            {
                double acptAnOdrRemainCnt = double.Parse(gridRedRow.Cells[_detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].Value.ToString());
                string salesSlipNum = gridRedRow.Cells[_detailDataSet.RedSlipDetail.SalesSlipNumColumn.ColumnName].Value.ToString();
                int salesRowNo = Int32.Parse(gridRedRow.Cells[_detailDataSet.RedSlipDetail.SalesRowNoColumn.ColumnName].Value.ToString());

                // 返品可能数がゼロの場合
                if (acptAnOdrRemainCnt == 0)
                {
                    string text = "伝票番号 " + salesSlipNum + " 行 " + salesRowNo;
                    addText_1 += text + "\r\n";
                }
            }
            if (!string.IsNullOrEmpty(addText_1))
            {
                TMsgDisp.Show(
                      this,
                      emErrorLevel.ERR_LEVEL_EXCLAMATION,
                      this.Name,
                      Msg_1 + "\r\n" + addText_1,
                      -1,
                      MessageBoxButtons.OK);
                _searchSlipFlag = false;
                return;
            }
            //string Msg_2 = "以下の行は赤伝発行出来ません。\r\n選択を解除してから再度実行して下さい。\r\n";
            //string addText_2 = string.Empty;
            //foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRedRow in this.uGrid_RedSlip.Rows)
            //{
            //    int acptAnOdrStatus = Int32.Parse(gridRedRow.Cells[_detailDataSet.RedSlipDetail.AcptAnOdrStatusColumn.ColumnName].Value.ToString());
            //    int acptAnOdrRemainCnt = double.Parse(gridRedRow.Cells[_detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].Value.ToString());
            //    string salesSlipNum = gridRedRow.Cells[_detailDataSet.RedSlipDetail.SalesSlipNumColumn.ColumnName].Value.ToString();
            //    int salesRowNo = Int32.Parse(gridRedRow.Cells[_detailDataSet.RedSlipDetail.SalesRowNoColumn.ColumnName].Value.ToString());
            //    int rowNo = Int32.Parse(gridRedRow.Cells[_detailDataSet.RedSlipDetail.RowNoColumn.ColumnName].Value.ToString());
            //    // 伝票区分が[30:売上]以外、あるいは売上でも数量が０以下の場合
            //    if ((acptAnOdrStatus != 30) || (acptAnOdrStatus == 30 && acptAnOdrRemainCnt < 0))
            //    {
            //        string text = "伝票番号 " + salesSlipNum + " 行 " + salesRowNo;
            //        addText_2 += text + "\r\n";
            //    }
            //}
            //if (!string.IsNullOrEmpty(addText_2))
            //{
            //    TMsgDisp.Show(
            //          this,
            //          emErrorLevel.ERR_LEVEL_EXCLAMATION,
            //          this.Name,
            //          Msg_2 + "\r\n" + addText_2,
            //          -1,
            //          MessageBoxButtons.OK);
            //    _searchSlipFlag = false;
            //    return;
            //}
            // --- ADD 2009/11/25 ----------<<<<<
            // --- UPD 2009/12/15 ----------<<<<<

            #region DEL 2017/02/14 入金引当チェック
            //// ---------- ADD 2015/08/21 Y.Wakita 東海自動車工業 品証Redmine№4512対応 ---------->>>>>
            //#region 入金引当チェック
            //int st = (int)ConstantManagement.DB_Status.ctDB_NORMAL;
            //string Msg_3 = "以下の行は入金引当されているため、赤伝発行出来ません。\r\n入金伝票入力にて以下の売上伝票の入金引当を解除してから\r\n再度実行して下さい。\r\n";
            //string addText_3 = string.Empty;

            //string errMsg = string.Empty;

            //DepositAlwWork[] depositAlwWorkList;

            //// 入金引当操作アクセスクラス生成
            //_controlDepsitAlwAcs = new ControlDepsitAlwAcs();

            //// 得意先
            //int customerCodeWk = Int32.Parse(this.uGrid_RedSlip.Rows[0].Cells[_detailDataSet.RedSlipDetail.CustomerCodeColumn.ColumnName].Value.ToString());
            //// 請求先
            //int claimCodeWk = 0;

            //// 得意先情報取得
            //CustomerInfo customerInfoWk;
            //st = this._customerInfoAcs.ReadDBData(this._enterpriseCode, customerCodeWk, true, out customerInfoWk);

            //// ステータスによりエラーメッセージを出力
            //if (st == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            //{
            //    if (customerInfoWk == null)
            //    {
            //        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
            //            "選択した得意先は得意先情報入力が行われていない為、使用出来ません。",
            //            st, MessageBoxButtons.OK);

            //        _searchSlipFlag = false;
            //        return;
            //    }

            //    // 請求先
            //    claimCodeWk = customerInfoWk.ClaimCode;
            //}
            //else if (st == (int)ConstantManagement.DB_Status.ctDB_NOT_FOUND)
            //{
            //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
            //        "選択した得意先は既に削除されています。",
            //        st, MessageBoxButtons.OK);

            //    _searchSlipFlag = false;
            //    return;
            //}
            //else
            //{
            //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOPDISP, this.Name,
            //        "得意先情報の取得に失敗しました。",
            //        st, MessageBoxButtons.OK);

            //    _searchSlipFlag = false;
            //    return;
            //}

            //foreach (KeyValuePair<string, int> dicDepAlwPair in dicDepAlw)
            //{
            //    errMsg = string.Empty;
            //    depositAlwWorkList = null;

            //    // 売上伝票番号
            //    string salesSlipNumWk = dicDepAlwPair.Key;
            //    // 受注ステータス
            //    int acptAnOdrStatusWk = dicDepAlwPair.Value;

            //    // 入金引当マスタ情報を取得
            //    st = _controlDepsitAlwAcs.ReadDB(this._enterpriseCode, claimCodeWk, acptAnOdrStatusWk, salesSlipNumWk, out depositAlwWorkList, out errMsg);

            //    if (st == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            //    {
            //        // 入金引当データあり
            //        foreach (DepositAlwWork depositAlwWork in depositAlwWorkList)
            //        {
            //            string text = "売上伝票番号 " + salesSlipNumWk + " 入金伝票番号 " + depositAlwWork.DepositSlipNo.ToString("000000000");
            //            addText_3 += text + "\r\n";
            //        }
            //    }
            //    else if (st != (int)ConstantManagement.DB_Status.ctDB_NOT_FOUND)
            //    {
            //        TMsgDisp.Show(  this,
            //                        emErrorLevel.ERR_LEVEL_EXCLAMATION,
            //                        this.Name,
            //                        errMsg,
            //                        st,
            //                        MessageBoxButtons.OK);

            //        _searchSlipFlag = false;
            //        return;
            //    }
            //}

            //// 入金引当操作アクセスクラス開放
            //_controlDepsitAlwAcs = null;

            //if (addText_3 != string.Empty)
            //{
            //    TMsgDisp.Show(
            //          this,
            //          emErrorLevel.ERR_LEVEL_EXCLAMATION,
            //          this.Name,
            //          Msg_3 + "\r\n" + addText_3,
            //          -1,
            //          MessageBoxButtons.OK);

            //    _searchSlipFlag = false;
            //    return;
            //}
            //#endregion
            //// ---------- ADD 2015/08/21 Y.Wakita 東海自動車工業 品証Redmine№4512対応 ----------<<<<<
            #endregion DEL 2017/02/14 入金引当チェック

            // ---------- 2021/12/13 田建委 PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応 ---------->>>>>
            if (this.Opt_CtlIssuingAkaden == (int)Option.ON)
            {
                #region 入金引当チェック
                int st = (int)ConstantManagement.DB_Status.ctDB_NORMAL;
                string Msg_3 = "以下の行は入金引当されているため、赤伝発行出来ません。\r\n入金伝票入力にて以下の売上伝票の入金引当を解除してから\r\n再度実行して下さい。\r\n";
                string addText_3 = string.Empty;

                string errMsg = string.Empty;

                DepositAlwWork[] depositAlwWorkList;

                // 入金引当操作アクセスクラス生成
                ControlDepsitAlwAcsObj = new ControlDepsitAlwAcs();

                // 得意先
                int customerCodeWk = Int32.Parse(this.uGrid_RedSlip.Rows[0].Cells[_detailDataSet.RedSlipDetail.CustomerCodeColumn.ColumnName].Value.ToString());
                // 請求先
                int claimCodeWk = 0;

                // 得意先情報取得
                CustomerInfo customerInfoWk;
                st = this._customerInfoAcs.ReadDBData(this._enterpriseCode, customerCodeWk, true, out customerInfoWk);

                // ステータスによりエラーメッセージを出力
                if (st == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                {
                    if (customerInfoWk == null)
                    {
                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                            "選択した得意先は得意先情報入力が行われていない為、使用出来ません。",
                            st, MessageBoxButtons.OK);

                        _searchSlipFlag = false;
                        return;
                    }

                    // 請求先
                    claimCodeWk = customerInfoWk.ClaimCode;
                }
                else if (st == (int)ConstantManagement.DB_Status.ctDB_NOT_FOUND)
                {
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                        "選択した得意先は既に削除されています。",
                        st, MessageBoxButtons.OK);

                    _searchSlipFlag = false;
                    return;
                }
                else
                {
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOPDISP, this.Name,
                        "得意先情報の取得に失敗しました。",
                        st, MessageBoxButtons.OK);

                    _searchSlipFlag = false;
                    return;
                }

                foreach (KeyValuePair<string, int> dicDepAlwPair in dicDepAlw)
                {
                    errMsg = string.Empty;
                    depositAlwWorkList = null;

                    // 売上伝票番号
                    string salesSlipNumWk = dicDepAlwPair.Key;
                    // 受注ステータス
                    int acptAnOdrStatusWk = dicDepAlwPair.Value;

                    // 入金引当マスタ情報を取得
                    st = ControlDepsitAlwAcsObj.ReadDB(this._enterpriseCode, claimCodeWk, acptAnOdrStatusWk, salesSlipNumWk, out depositAlwWorkList, out errMsg);

                    if (st == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                    {
                        // 入金引当データあり
                        foreach (DepositAlwWork depositAlwWork in depositAlwWorkList)
                        {
                            string text = "売上伝票番号 " + salesSlipNumWk + " 入金伝票番号 " + depositAlwWork.DepositSlipNo.ToString("000000000");
                            addText_3 += text + "\r\n";
                        }
                    }
                    else if (st != (int)ConstantManagement.DB_Status.ctDB_NOT_FOUND)
                    {
                        TMsgDisp.Show(this,
                                        emErrorLevel.ERR_LEVEL_EXCLAMATION,
                                        this.Name,
                                        errMsg,
                                        st,
                                        MessageBoxButtons.OK);

                        _searchSlipFlag = false;
                        return;
                    }
                }

                // 入金引当操作アクセスクラス開放
                ControlDepsitAlwAcsObj = null;

                if (addText_3 != string.Empty)
                {
                    TMsgDisp.Show(
                          this,
                          emErrorLevel.ERR_LEVEL_EXCLAMATION,
                          this.Name,
                          Msg_3 + "\r\n" + addText_3,
                          -1,
                          MessageBoxButtons.OK);

                    _searchSlipFlag = false;
                    return;
                }
                #endregion
            }
            // ---------- 2021/12/13 田建委 PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応 ----------<<<<<

            // --- Add 2011/08/06 duzg for 赤伝発行時、データ送信対応 --->>>
            string partySaleSlipNum = string.Empty;
            //bool scmFlg = SCMSendProcess(ref partySaleSlipNum);//del 2011/08/09 zhubj
            bool isOnlineKindDiv = false;//add 2011/08/09 zhubj
            bool isScmAnsOk = true;//add 2011/08/11 zhubj
            //bool scmFlg = SCMSendProcess(ref partySaleSlipNum, ref isOnlineKindDiv);//add 2011/08/09 zhubj//del 2011/08/11 zhubj
            bool scmFlg = SCMSendProcess(ref partySaleSlipNum, ref isOnlineKindDiv, ref isScmAnsOk);//add 2011/08/11 zhubj
            //add 2011/08/11 zhubj--->>>
            if (!isScmAnsOk)
            {
                _searchSlipFlag = false;
                return;
            }
            //add 2011/08/11 zhubj---<<<
            if (scmFlg)
            {
                // 指示書番号入力チェック
                string errmsg1;
                string errmsg2;
                SalesSlip salesSlip = new SalesSlip();
                salesSlip.PartySaleSlipNum = partySaleSlipNum;
                if (!this._salesSlipInputAcs.CheckInputPartySalesSlipNum(out errmsg1, out errmsg2, salesSlip))
                {
                    TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_EXCLAMATION,
                                "PMKAU04001U",
                                errmsg1 + "\r\n" + errmsg2,
                                -1,
                                MessageBoxButtons.OK);
                    _searchSlipFlag = false;
                    return;
                }
            }
            // --- Add 2011/08/06 duzg for 赤伝発行時、データ送信対応 ---<<<
            //ADD BY LIUSY 2013/09/18 #40275 ----<<<<
            if (!RsCheck())
            {
                _searchSlipFlag = false;
                return;
            }
            //ADD BY LIUSY 2013/09/18 #40275 ---->>>>

            // 赤伝発行確認メッセージ
            //if (TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_QUESTION, this.Name,// Del 2011/08/06 duzg for 赤伝発行時、データ送信対応
            //if (!scmFlg && TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_QUESTION, this.Name,// Add 2011/08/06 duzg for 赤伝発行時、データ送信対応// del 2011/08/09 zhubj 
            // DEL 2011/12/22 李小路　Redmine#27459----------->>>>>>>>>>
            //if (!isOnlineKindDiv && TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_QUESTION, this.Name,// Add 2011/08/09 zhubj 
            //    MSG_CONFIRM_REDSLIP,
            //    -1, MessageBoxButtons.YesNo ) == DialogResult.No )
            // DEL 2011/12/22 李小路　Redmine#27459-----------<<<<<<<<<<
            // ADD 2011/12/22 李小路　Redmine#27459----------->>>>>>>>>>
            if (!scmFlg && TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_QUESTION, this.Name,
                MSG_CONFIRM_REDSLIP,
                -1, MessageBoxButtons.YesNo) == DialogResult.No)
            // ADD 2011/12/22 李小路　Redmine#27459-----------<<<<<<<<<
            {
                // --- ADD 2009/11/25 ---------->>>>>
                _searchSlipFlag = false;
                // --- ADD 2009/11/25 ----------<<<<<
                return;
            }

            int status = (int)ConstantManagement.DB_Status.ctDB_NORMAL;
            string errorMessage;
            SFCMN00299CA processingDialog = new SFCMN00299CA();
            try
            {
                processingDialog.Title = "更新処理";
                processingDialog.Message = "現在、データ更新中です。";
                processingDialog.DispCancelButton = false;
                processingDialog.Show((Form)this.Parent);

                // 書き込みパラメータ設定
                # region [書き込みパラメータ設定]
                CustPtrSalesDetailRedSlipAcs.RedSlipWriteParameter para = new CustPtrSalesDetailRedSlipAcs.RedSlipWriteParameter();

                // 企業コード
                para.EnterpriseCode = this._enterpriseCode;
                // 拠点コード
                para.SectionCode = _selectedSectionCd.Trim();
                // 得意先コード
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 DEL
                //try
                //{
                //    para.CustomerCode = Int32.Parse( _selectedCustomerCd );
                //}
                //catch
                //{
                //    para.CustomerCode = 0;
                //}
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/19 ADD
                para.CustomerCode = _selectedCustomerCd;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/19 ADD
                // 伝票区分
                para.SlipCd = (int)tComboEditor_rs_SalesSlipCd.Value;
                // 入力担当者コード
                para.InputEmployeeCd = tEdit_rs_InputEmployeeCd.Text.Trim();
                // 入力担当者名称
                para.InputEmployeeNm = uLabel_rs_InputEmployeeName.Text.Trim();
                // 売上日
                para.SalesDate = tDateEdit_rs_SalesDate.GetDateTime();
                // 手数料額(合計)
                para.FeePriceOfTotal = tNedit_rs_FeeAmountTotal.GetInt();
                // ADD 2012/03/29 gezh Redmine#29149 --------->>>>>
                // 販売区分
                para.SalesCodeDiv = tNedit_SalesCodeDiv.GetInt();
                // ADD 2012/03/29 gezh Redmine#29149 ---------<<<<<
                // 指示書(仮伝)番号
                //para.PartySalesSlipNo = tEdit_rs_PartySalesSlipNo.Text; // DEL 2013/03/18 zhaimm Redmine#34807
                para.PartySalesSlipNo = GetFormattedPartySalesSlipNo(tEdit_rs_PartySalesSlipNo.Text, 9); // ADD 2013/03/18 zhaimm Redmine#34807
                // 備考１
                para.SlipNote = tEdit_rs_SlipNote.Text;
                // 備考２
                para.SlipNote2 = tEdit_rs_SlipNote2.Text;
                // 備考３
                para.SlipNote3 = tEdit_rs_SlipNote3.Text;
                // 返品理由
                para.ReturnReason = tEdit_rs_ReturnReason.Text;
                // --- ADD 2009/11/25 ---------->>>>>
                // 返品理由コード
                if (string.IsNullOrEmpty(this._retGoodsReason))
                {
                    // 返品理由ガイドから選択しない場合
                    this._retGoodsReasonDiv = 0;
                }
                else if (!this._retGoodsReason.Equals(tEdit_rs_ReturnReason.Text.Trim()))
                {
                    // ガイド選択後に、返品理由を手入力で変更した場合
                    this._retGoodsReasonDiv = 0;
                }
                para.RetGoodsReasonDiv = this._retGoodsReasonDiv;
                // --- ADD 2009/11/25 ----------<<<<<
                // --- ADD 2009/09/07 ---------->>>>>
                // 車両走行距離
                para.Mileage = tNedit_Mileage.GetInt();
                // 車輌備考
                para.CarNote = tEdit_rs_SlipNoteCar.Text;
                // --- ADD 2009/09/07 ----------<<<<<
                # endregion

                // 赤伝登録実行
                # region [赤伝登録]

                // Add sakurai 2009/02/03>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
                //引数に<伝番,受注ステータス>のﾃﾞｨｸｼｮﾅﾘ追加 _printRedSalesSlipNo
                // 書き込み
                // --- UPD m.suzuki 2010/08/18 ---------->>>>>
                //status = _custPtrRedSlipAcs.WriteRedSlip(para, out errorMessage, out _printRedSalesSlipNo);
                //status = _custPtrRedSlipAcs.WriteRedSlip( para, out errorMessage, out _printRedSalesSlipNo, CheckRedSlipDate );// del 2011/08/06 duzg
                status = _custPtrRedSlipAcs.WriteRedSlip(para, out errorMessage, out _printRedSalesSlipNo, CheckRedSlipDate, partySaleSlipNum, scmFlg);// add 2011/08/06 duzg
                // --- UPD m.suzuki 2010/08/18 ----------<<<<<
                # endregion

                // ----------ADD 2010/01/29---------->>>>>
                // 発行した赤伝の先頭の明細の元黒伝票番号の取得
                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                {
                    if (this.uGrid_RedSlip != null && this.uGrid_RedSlip.Rows.Count > 0)
                    {
                        this._searchSalesSlipNum = this.uGrid_RedSlip.Rows[0].Cells[this._detailDataSet.RedSlipDetail.SalesSlipNumColumn.ColumnName].Value.ToString();
                    }
                }
                // ----------ADD 2010/01/29---------->>>>>
            }
            finally
            {
                processingDialog.Dispose();
            }
            // ---------- ADD 2012/08/22 ---------->>>>>
            if (status == -101 || status == -102)
            {
                // この状態は、返品の仕入伝票が存在したが合計入力の伝票だった場合、
                // または同一仕入番号の伝票が存在したが、伝票区分が異なった場合であるが、
                // 処理中のダイアログの表示を消してから、警告ダイアログを表示するため、
                // 処理タイミングをこの位置にしている
                TMsgDisp.Show(  this,
                                emErrorLevel.ERR_LEVEL_EXCLAMATION,
                                this.Name,
                                errorMessage,
                                status,
                                MessageBoxButtons.OK);
            }
            // ---------- ADD 2012/08/22 ----------<<<<<

            // --- ADD m.suzuki 2010/08/18 ---------->>>>>
            if (status != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                _searchSlipFlag = false;
            }
            // --- ADD m.suzuki 2010/08/18 ----------<<<<<

            // エラーメッセージ表示
            // --- CHG 2009/02/02 排他制御処理追加------------------------------------------------------>>>>>
            //if ( status != (int)ConstantManagement.DB_Status.ctDB_NORMAL )
            //{
            //    // 登録エラー
            //    TMsgDisp.Show(
            //        this,
            //        emErrorLevel.ERR_LEVEL_STOPDISP,
            //        this.Name,
            //        errorMessage,
            //        -1,
            //        MessageBoxButtons.OK );
            //    return;
            //}
            switch (status)
            {
                case (int)ConstantManagement.DB_Status.ctDB_NORMAL:
                    {
                        break;
                    }
                // 企業ロックタイムアウト
                case (int)ConstantManagement.DB_Status.ctDB_ENT_LOCK_TIMEOUT:
                    {
                        // --- UPD m.suzuki 2010/08/18 ---------->>>>>
                        //// --- CHG 2009/02/16 障害ID:11594対応------------------------------------------------------>>>>>
                        ////TMsgDisp.Show(this,
                        ////              //emErrorLevel.ERR_LEVEL_EXCLAMATION,             //DEL 2009/02/14 不具合対応[11494]
                        ////              emErrorLevel.ERR_LEVEL_STOPDISP,                  //ADD 2009/02/14 不具合対応[11494]
                        ////              this.Name,
                        ////              CT_SUPPLIER_ERECNOTE_PGID,
                        ////              "IssueRedSlip",
                        ////              TMsgDisp.OPE_UPDATE,
                        ////              "シェアチェックエラー(企業ロック)です。" + "\r\n" +
                        ////              "月次更新か、その他の業務を行っているため本処理は行えません。" + "\r\n" +
                        ////              "再試行するか、しばらく待ってから再度処理を行ってください。",
                        ////              status,
                        ////              this._custPtrRedSlipAcs,
                        ////              MessageBoxButtons.OK,
                        ////              MessageBoxDefaultButton.Button1);

                        //TMsgDisp.Show(this,
                        //            emErrorLevel.ERR_LEVEL_STOPDISP,
                        //              this.Name,
                        //            "赤伝発行に失敗しました。" + "\r\n"
                        //            + "\r\n" +
                        //            "シェアチェックエラー（企業ロック）です。" + "\r\n" +
                        //            "月次処理か、その他の業務を行っているため本処理は行えません。" + "\r\n" +
                        //              "再試行するか、しばらく待ってから再度処理を行ってください。",
                        //              status,
                        //            MessageBoxButtons.OK);
                        //// --- CHG 2009/02/16 障害ID:11594対応------------------------------------------------------<<<<<

                        TMsgDisp.Show(
                            this,
                            emErrorLevel.ERR_LEVEL_EXCLAMATION,
                                    this.Name,
                            "処理が込み合っているため中断しました。" + "\r\n" +
                            "再試行するか、しばらく待ってから再度処理を実行して下さい。" + "\r\n",
                                    status,
                                    MessageBoxButtons.OK);
                        // --- UPD m.suzuki 2010/08/18 ----------<<<<<
                        return;
                    }
                // 拠点ロックタイムアウト
                case (int)ConstantManagement.DB_Status.ctDB_SEC_LOCK_TIMEOUT:
                // --- ADD m.suzuki 2010/08/18 ---------->>>>>
                // 締次ロック(伝票側)タイムアウト
                case (int)ConstantManagement.DB_Status.ctDB_ADS_LOCK_TIMEOUT:
                    // --- ADD m.suzuki 2010/08/18 ----------<<<<<
                    {
                        // --- UPD m.suzuki 2010/08/18 ---------->>>>>
                        //// --- CHG 2009/02/16 障害ID:11594対応------------------------------------------------------>>>>>
                        ////TMsgDisp.Show(this,
                        ////              //emErrorLevel.ERR_LEVEL_EXCLAMATION,             //DEL 2009/02/14 不具合対応[11494]
                        ////              emErrorLevel.ERR_LEVEL_STOPDISP,                  //ADD 2009/02/14 不具合対応[11494]
                        ////              this.Name,
                        ////              CT_SUPPLIER_ERECNOTE_PGID,
                        ////              "IssueRedSlip",
                        ////              TMsgDisp.OPE_UPDATE,
                        ////              "シェアチェックエラー(拠点ロック)です。" + "\r\n" +
                        ////              "締更新か、処理が込み合っているためタイムアウトしました。。" + "\r\n" +
                        ////              "再試行するか、しばらく待ってから再度処理を行ってください。",
                        ////              status,
                        ////              this._custPtrRedSlipAcs,
                        ////              MessageBoxButtons.OK,
                        ////              MessageBoxDefaultButton.Button1);

                        //TMsgDisp.Show(this,
                        //            emErrorLevel.ERR_LEVEL_STOPDISP,
                        //              this.Name,
                        //            "赤伝発行に失敗しました。" + "\r\n"
                        //            + "\r\n" +
                        //            "シェアチェックエラー（拠点ロック）です。" + "\r\n" +
                        //            "締処理か、処理が込み合っているためタイムアウトしました。" + "\r\n" +
                        //              "再試行するか、しばらく待ってから再度処理を行ってください。",
                        //              status,
                        //            MessageBoxButtons.OK);
                        //// --- CHG 2009/02/16 障害ID:11594対応------------------------------------------------------<<<<<

                        TMsgDisp.Show(
                            this,
                            emErrorLevel.ERR_LEVEL_EXCLAMATION,
                                    this.Name,
                            "処理が込み合っているため中断しました。" + "\r\n" +
                            "再試行するか、しばらく待ってから再度処理を実行して下さい。" + "\r\n",
                                    status,
                                    MessageBoxButtons.OK);
                        // --- UPD m.suzuki 2010/08/18 ----------<<<<<
                        return;
                    }
                // 倉庫ロックタイムアウト
                case (int)ConstantManagement.DB_Status.ctDB_WAR_LOCK_TIMEOUT:
                    {
                        // --- UPD m.suzuki 2010/08/18 ---------->>>>>
                        //// --- CHG 2009/02/16 障害ID:11594対応------------------------------------------------------>>>>>
                        ////TMsgDisp.Show(this,
                        ////              //emErrorLevel.ERR_LEVEL_EXCLAMATION,             //DEL 2009/02/14 不具合対応[11494]
                        ////              emErrorLevel.ERR_LEVEL_STOPDISP,                  //ADD 2009/02/14 不具合対応[11494]
                        ////              this.Name,
                        ////              CT_SUPPLIER_ERECNOTE_PGID,
                        ////              "IssueRedSlip",
                        ////              TMsgDisp.OPE_UPDATE,
                        ////              "シェアチェックエラー(倉庫ロック)です。" + "\r\n" +
                        ////              "棚卸処理か、その他の在庫業務を行っているためタイムアウトしました。" + "\r\n" +
                        ////              "再試行するか、しばらく待ってから再度処理を行ってください。",
                        ////              status,
                        ////              this._custPtrRedSlipAcs,
                        ////              MessageBoxButtons.OK,
                        ////              MessageBoxDefaultButton.Button1);

                        //TMsgDisp.Show(this,
                        //            emErrorLevel.ERR_LEVEL_STOPDISP,
                        //              this.Name,
                        //            "赤伝発行に失敗しました。" + "\r\n"
                        //            + "\r\n" +
                        //            "シェアチェックエラー（倉庫ロック）です。" + "\r\n" +
                        //              "棚卸処理か、その他の在庫業務を行っているためタイムアウトしました。" + "\r\n" +
                        //              "再試行するか、しばらく待ってから再度処理を行ってください。",
                        //              status,
                        //            MessageBoxButtons.OK);
                        //// --- CHG 2009/02/16 障害ID:11594対応------------------------------------------------------<<<<<

                        TMsgDisp.Show(
                            this,
                            emErrorLevel.ERR_LEVEL_EXCLAMATION,
                            this.Name,
                            "処理が込み合っているため中断しました。" + "\r\n" +
                            "再試行するか、しばらく待ってから再度処理を実行して下さい。" + "\r\n",
                            status,
                            MessageBoxButtons.OK);
                        // --- UPD m.suzuki 2010/08/18 ----------<<<<<
                        return;
                    }
                // --- ADD m.suzuki 2010/08/18 ---------->>>>>
                // 締次ロック(集計側)タイムアウト
                case (int)ConstantManagement.DB_Status.ctDB_ADU_LOCK_TIMEOUT:
                    {
                        TMsgDisp.Show(
                            this,
                            emErrorLevel.ERR_LEVEL_EXCLAMATION,
                                    this.Name,
                            "対象の期間を集計処理中のため中断しました。" + "\r\n" +
                            "売上日を変更して、再度処理を実行して下さい。" + "\r\n",
                                    status,
                                    MessageBoxButtons.OK);
                        return;
                    }
                // --- ADD m.suzuki 2010/08/18 ----------<<<<<
                // --- ADD m.suzuki 2010/08/18 ---------->>>>>
                // 日付再チェックエラー
                case -1:
                    {
                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, errorMessage, -1, MessageBoxButtons.OK);
                        _searchSlipFlag = false;
                        return;
                    }
                // --- ADD m.suzuki 2010/08/18 ----------<<<<<
                // ---------- ADD 2012/08/22 ---------->>>>>
                case -101:
                case -102:
                    {
                        return;
                    }
                // ---------- ADD 2012/08/22 ----------<<<<<
                default:
                    {
                        // ----- ADD 2013/02/27 ----->>>>>
                        // 仕入返品予定機能が有効で元伝票削除されている場合
                        if (_salesTtlSt.StockRetGoodsPlnDiv == 1 &&
                            status == (int)ConstantManagement.DB_Status.ctDB_ALRDY_DELETE)
                        {
                            // 登録不可のメッセージ表示
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                errorMessage,
                                -1,
                                MessageBoxButtons.OK);

                            return;
                        }
                        // ----- ADD 2013/02/27 -----<<<<<

                        // 登録エラー
                        TMsgDisp.Show(
                            this,
                            emErrorLevel.ERR_LEVEL_STOPDISP,
                            this.Name,
                            errorMessage,
                            -1,
                            MessageBoxButtons.OK);
                        return;
                    }
            }
            // --- CHG 2009/02/02 排他制御処理追加------------------------------------------------------<<<<<

            // 登録完了
            SaveCompletionDialog dialog = new SaveCompletionDialog();
            dialog.ShowDialog(2);
            // Add sakurai 2009/02/03 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

            // --- Add 2011/08/06 duzg for 赤伝発行時、データ送信対応 --->>>
            if (scmFlg && status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                //-----------------------------------------------------------------------------
                // 回答送信処理(SCM)
                //-----------------------------------------------------------------------------
                // UOE発注分のみの場合、回答送信処理を行わない
                string par = string.Empty;
                if (this.CommandLineArgs != null && this.CommandLineArgs.Length > 0)
                {
                    foreach (string str in _commandLineArgs)
                    {
                        par += " " + str;
                    }
                    par = par.Substring(1);
                }

                // ADD 2012/10/17 湯上 SCM障害№10414対応 ------------------------>>>>>
                string salesSlipNumList = string.Empty;
                // 回答送信処理時に対象となる売上伝票番号リストをパラメータにセットする
                if (this._custPtrRedSlipAcs.SalesSlipNumList != null &&
                    this._custPtrRedSlipAcs.SalesSlipNumList.Count != 0)
                {
                    for (int i = 0; i < this._custPtrRedSlipAcs.SalesSlipNumList.Count; i++)
                    {
                        if (i != 0)
                        {
                            salesSlipNumList += ",";
                        }
                        salesSlipNumList += this._custPtrRedSlipAcs.SalesSlipNumList[i].ToString();
                    }
                }
                // ADD 2012/10/17 湯上 SCM障害№10414対応 ------------------------<<<<<

                // --- UPD 2012/09/20 三戸 №35の戻し --------->>>>>>>>>>>>>>>>>>>>>>>>
                //// UPD 2012/07/11 №35 T.Yoshioka ------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                //Process p = Process.Start("PMSCM01100U.EXE", par + " /A" + " " + inquiryNumber.ToString() + ":2"); // 問合せ・発注種別：2 発注
                ////Process p = Process.Start("PMSCM01100U.EXE", par + " /A" + " " + 0 + ":" + 0);
                //// UPD 2012/07/11 №35 T.Yoshioka -------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                // UPD 2012/10/17 湯上 SCM障害№10414対応 ------------------------>>>>>
                //Process p = Process.Start("PMSCM01100U.EXE", par + " /A" + " " + 0 + ":" + 0);
                Process p = Process.Start("PMSCM01100U.EXE", par + " /A" + " " + 0 + ":" + 0 + ":" + salesSlipNumList);
                // UPD 2012/10/17 湯上 SCM障害№10414対応 ------------------------<<<<<
                // --- UPD 2012/09/20 三戸 №35の戻し ---------<<<<<<<<<<<<<<<<<<<<<<<<
                p.WaitForExit();
            }
            // --- Add 2011/08/06 duzg for 赤伝発行時、データ送信対応 ---<<<

            //-----UPD 2010/12/20 ----->>>>>
            int custAcptAnOdrStatus = Int32.Parse(this.uGrid_RedSlip.Rows[0].Cells[_detailDataSet.RedSlipDetail.AcptAnOdrStatusColumn.ColumnName].Value.ToString());
            bool customerFlag = false;
            bool customerShipFlag = false;
            bool customerAcpFlag = false;
            int customerCode = Int32.Parse(this.uGrid_RedSlip.Rows[0].Cells[_detailDataSet.RedSlipDetail.CustomerCodeColumn.ColumnName].Value.ToString());
            int salesSlipPrtDiv = -1;
            int acpOdrrSlipPrtDiv = -1;
            int shipmSlipPrtDiv = -1;
            // ---------- ADD 2013/06/25 Y.Wakita ---------->>>>>
            int nomalSalesSlipPrintFlag = 1;   //印刷しない
            // ---------- ADD 2013/06/25 Y.Wakita ----------<<<<<
            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
            _pdfPrintEnable = false;
            // 通常印刷
            CustPrtSlipSearchAcs.PDFPrinterStatus = (int)PDFPrint.Usually;
            _pdfOutputSlipKey = new List<SalesSlipPrintCndtn.SalesSlipKey>();
            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
            CustomerInfo customerInfo;
            status = this._customerInfoAcs.ReadDBData(this._enterpriseCode, customerCode, out customerInfo);
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                salesSlipPrtDiv = customerInfo.SalesSlipPrtDiv; // 得意先マスタの売上伝票発行区分
                acpOdrrSlipPrtDiv = customerInfo.AcpOdrrSlipPrtDiv;// 得意先マスタの受注伝票発行区分
                shipmSlipPrtDiv = customerInfo.ShipmSlipPrtDiv;// 得意先マスタの出荷伝票発行区分
            }

            if (custAcptAnOdrStatus == 30)
            {
                // 得意先マスタの売上伝票発行区分「0:標準」の場合：売上全体設定を参照する
                if (salesSlipPrtDiv == 0)
                {
                    //売上全体設定の売上伝票発行区分「0:する」の場合：印刷する
                    if (_salesTtlSt.SalesSlipPrtDiv == 0)
                    {
                        customerFlag = true;
                    }
                }

                //得意先マスタの売上伝票発行区分「2:使用」の場合：：印刷する
                else if (salesSlipPrtDiv == 2)
                {
                    customerFlag = true;
                }
                // ---------- ADD 2013/06/25 Y.Wakita ---------->>>>>
                if (customerFlag)
                {
                    //印刷する
                    nomalSalesSlipPrintFlag = 0;
                    // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
                    _pdfPrintEnable = true;
                    // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
                }
                else
                {
                    //印刷しない
                    nomalSalesSlipPrintFlag = 1;
                }
                // ---------- ADD 2013/06/25 Y.Wakita ----------<<<<<
            }
            else if (custAcptAnOdrStatus == 40)
            {
                // 得意先マスタの出荷伝票発行区分「0:標準」の場合：売上全体設定を参照する
                if (shipmSlipPrtDiv == 0)
                {
                    //売上全体設定の出荷伝票発行区分「0:する」の場合：印刷する
                    if (_salesTtlSt.ShipmSlipPrtDiv == 0)
                    {
                        customerShipFlag = true;
                    }
                }
                //得意先マスタの出荷伝票発行区分「2:使用」の場合：：印刷する
                else if (shipmSlipPrtDiv == 2)
                {
                    customerShipFlag = true;
                }
                // ---------- ADD 2013/06/25 Y.Wakita ---------->>>>>
                if (customerShipFlag)
                {
                    //印刷する
                    nomalSalesSlipPrintFlag = 0;
                }
                else
                {
                    //印刷しない
                    nomalSalesSlipPrintFlag = 1;
                }
                // ---------- ADD 2013/06/25 Y.Wakita ----------<<<<<
            }
            else if (custAcptAnOdrStatus == 20)
            {
                // 得意先マスタの受注伝票発行区分「0:標準」の場合：売上全体設定を参照する
                if (acpOdrrSlipPrtDiv == 0)
                {
                    //売上全体設定の売上伝票発行区分「1:する」の場合：印刷する
                    if (_acptAnOdrTtlSt.AcpOdrrSlipPrtDiv == 1)
                    {
                        customerAcpFlag = true;
                    }
                }
                //得意先マスタの受注伝票発行区分「2:使用」の場合：：印刷する
                else if (acpOdrrSlipPrtDiv == 2)
                {
                    customerAcpFlag = true;
                }
                // ---------- ADD 2013/06/25 Y.Wakita ---------->>>>>
                if (customerAcpFlag)
                {
                    //印刷する
                    nomalSalesSlipPrintFlag = 0;
                }
                else
                {
                    //印刷しない
                    nomalSalesSlipPrintFlag = 1;
                }
                // ---------- ADD 2013/06/25 Y.Wakita ----------<<<<<
            }

            // 赤伝印刷処理
            // ---------- UPD 2013/06/25 Y.Wakita ---------->>>>>
            ////RedSlipPrint(_printRedSalesSlipNo);
            //if (customerFlag || customerShipFlag || customerAcpFlag)
            //{
            //    // update by wangqx 20110928  begin
            //    //RedSlipPrint(_printRedSalesSlipNo);
            //    RedSlipPrint(_printRedSalesSlipNo, scmFlg);
            //    // update by wangqx 20110928  end
            //}
            ////-----UPD 2010/12/20 -----<<<<<
            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
            // 通常印刷
            CustPrtSlipSearchAcs.PDFPrinterStatus = (int)PDFPrint.Usually;
            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
            RedSlipPrint(_printRedSalesSlipNo, scmFlg, nomalSalesSlipPrintFlag);
            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
            if ((this._settingForm._opt_EBooksLink == (int)Option.ON) && (_pdfPrintEnable))
            {
                eBooksOutputSetting eBookSetting = this._settingForm.geteBooksOutputSetting();
                // 出力伝票区分 0:両方選択なし/1:赤伝/2:再発行/3:両方選択あ
                switch (Convert.ToInt32(eBookSetting.OutputSlipType))
                {
                    // 1:赤伝
                    // 3:両方選択あ
                    case (Int32)outPutSlipTypeEnum.DebitNoteChecked:
                    case (Int32)outPutSlipTypeEnum.All:                    
                        RedSlipPrint(_printRedSalesSlipNo, scmFlg, nomalSalesSlipPrintFlag, customerInfo);
                        // 電子帳簿出力==>通常印刷設定
                        CustPrtSlipSearchAcs.PDFPrinterStatus = (int)PDFPrint.Usually;
                        break;
                    default:
                        break;
                }
            }
            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
            // ---------- UPD 2013/06/25 Y.Wakita ----------<<<<<

            //可能数が0になった場合選択チェックボックス削除処理
            foreach (CustPtrSalesDetailDataSet.RedSlipDetailRow redRow in _detailDataSet.RedSlipDetail.Rows)
            {
                DataView view = new DataView(_detailDataSet.SalesDetail);
                view.RowFilter = string.Format("{0}='{1}'", _detailDataSet.SalesDetail.RowNoColumn.ColumnName, redRow.RowNo);

                foreach (DataRowView rowView in view)
                {
                    double remainCnt = (double)rowView[_detailDataSet.SalesDetail.AcptAnOdrRemainCntColumn.ColumnName];
                    rowView[_detailDataSet.SalesDetail.AcptAnOdrRemainCntColumn.ColumnName] = remainCnt - redRow.ReturnCnt;

                    // 受注残が0だったら
                    if ((double)rowView[_detailDataSet.SalesDetail.AcptAnOdrRemainCntColumn.ColumnName] == 0)
                    {
                        // rowView[_detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName] = DBNull.Value; // DEL 2009/11/25
                        rowView[_detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName] = false;// ADD 2009/12/15
                        foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_Detail.Rows)
                        {
                            if ((int)gridRow.Cells[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName].Value == (int)rowView[_detailDataSet.SalesDetail.RowNoColumn.ColumnName])
                            {
                                // チェックボックス削除
                                foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                                {
                                    // チェックボックス不要なセルはCheckBox表示しない
                                    if (cell.Column.Key == _detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName)
                                    {
                                        // cell.Style = Infragistics.Win.UltraWinGrid.ColumnStyle.Edit;// DEL 2009/12/15
                                        RowColorChange(false, gridRow, 1);
                                    }
                                }
                            }
                        }
                    }
                    break;
                }
            }
            // Add sakurai 2009/02/03 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

            // 表示クリア
            ClearRedSlipInput();

            // 明細グリッドタブ選択
            this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_SlipDetail"];
            uGrid_Detail.Focus();

            tEdit_SectionCodeAllowZero.Text = uiSetControl1.GetZeroPaddedText(tEdit_SectionCodeAllowZero.Name, tEdit_SectionCodeAllowZero.Text);        //ADD 2009/02/14 不具合対応[11552]

            if (uGrid_Detail.Rows.Count > 0 && uGrid_Detail.Rows[0].Cells.Count > 0)
            {
                uGrid_Detail.Rows[0].Cells[0].Activate();
                uGrid_Detail.Rows[0].Cells[0].Selected = true;
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/15 ADD
        }
        //ADD BY LIUSY 2013/09/18 #40275 ----<<<<
        /// <summary>
        /// 赤伝発行時データ保存前、文字型項目の長さチェックを追加
        /// </summary>
        private bool RsCheck()
        {
            string fieldname;     //エラー項目
            string content;       //エラー内容
            int length;           //最大桁数
            string fileName;      //ログファイル
            if (!Checklength(out fieldname, out length, out content))   //入力長さチェック
            {

                fileName = System.IO.Directory.GetCurrentDirectory() + "\\log\\PMKAU04000U_ERROR.log";

                this.WriteLog(fileName, fieldname, content, length);
                this.ShowSlipNoteMsg(fieldname, length.ToString());
                switch(fieldname)
                {
                    case "返品理由":
                        tEdit_rs_ReturnReason.Text = tEdit_rs_ReturnReason.Text.Substring(0, length);
                        tEdit_rs_ReturnReason.Focus();
                        break;
                    case "備考":
                        tEdit_rs_SlipNote.Text = tEdit_rs_SlipNote.Text.Substring(0, length);
                        tEdit_rs_SlipNote.Focus();
                        break;
                    case "備考２":
                        tEdit_rs_SlipNote2.Text = tEdit_rs_SlipNote2.Text.Substring(0, length);
                        tEdit_rs_SlipNote2.Focus();
                        break;
                    case "備考３":
                        tEdit_rs_SlipNote3.Text = tEdit_rs_SlipNote3.Text.Substring(0, length);
                        tEdit_rs_SlipNote3.Focus();
                        break;
                }
                return false;
            }
            return true;
        }
        /// <summary>
        /// 長さチェック
        /// </summary>
        /// <remarks></remarks>
        /// <param name="fileName">ファイル名</param>
        /// <param name="length">最大桁数</param>
        /// <param name="fieldName">エラー項目</param>
        /// <param name="content">内容</param>
        private bool Checklength(
            out string fieldname, out int length, out string content)
        {
            fieldname = "";
            content = "";
            length = 0;
            if (!string.IsNullOrEmpty(tEdit_rs_ReturnReason.Text) && tEdit_rs_ReturnReason.Text.Length > CT_GOODSREASON_LENGTH)
            {
                fieldname = "返品理由";
                content = tEdit_rs_ReturnReason.Text;
                length = CT_GOODSREASON_LENGTH;
                return false;
            }
            if (!string.IsNullOrEmpty(tEdit_rs_SlipNote.Text) && tEdit_rs_SlipNote.Text.Length > CT_SLIPNOTE_LENGTH)
            {
                fieldname = "備考";
                content = tEdit_rs_SlipNote.Text;
                length = CT_SLIPNOTE_LENGTH;
                return false;
            }
            if (!string.IsNullOrEmpty(tEdit_rs_SlipNote2.Text) && tEdit_rs_SlipNote2.Text.Length > CT_SLIPNOTE_LENGTH)
            {
                fieldname = "備考２";
                content = tEdit_rs_SlipNote2.Text;
                length = CT_SLIPNOTE_LENGTH;
                return false;
            }
            if (!string.IsNullOrEmpty(tEdit_rs_SlipNote3.Text) && tEdit_rs_SlipNote3.Text.Length > CT_SLIPNOTE_LENGTH)
            {
                fieldname = "備考３";
                content = tEdit_rs_SlipNote3.Text;
                length = CT_SLIPNOTE_LENGTH;
                return false;
            }
            return true;
        }

        /// <summary>
        /// ログを出力します。
        /// </summary>
        /// <remarks>エラーログ出力</remarks>
        /// <param name="fileName">ファイル名</param>
        /// <param name="fieldName">エラー項目</param>
        /// <param name="value">value</param>
        /// <param name="length">最大桁数</param>
        private void WriteLog(
            string fileName,
            string fieldName,
            string value,
            int length
        )
        {
            try
            {
                FileStream fileStream;
                if (System.IO.Directory.Exists(System.IO.Directory.GetCurrentDirectory() + "\\log") && System.IO.File.Exists(fileName))
                {

                    fileStream = new FileStream(fileName, FileMode.Append, FileAccess.Write, FileShare.Write);
                }
                else
                {
                    System.IO.Directory.CreateDirectory(System.IO.Directory.GetCurrentDirectory() + "\\log");
                    fileStream = new FileStream(fileName, FileMode.Create, FileAccess.Write, FileShare.Write);
                }

                StreamWriter writer = new StreamWriter(fileStream, Encoding.Default);
                DateTime writingDateTime = DateTime.Now;
                writer.WriteLine(string.Format(
                    "{0,-19} {1,-5} ==> {2,-30} {3,-15} {4,-200}",   // yyyy/MM/dd hh:mm:ss
                    writingDateTime,
                    writingDateTime.Millisecond,
                    "エラー項目：" + fieldName,
                    "最大桁数：" + length,
                    "入力値：" + value
                ));
                if (writer != null) writer.Close();
                if (fileStream != null) fileStream.Close();
            }
            catch
            {
                return;
            }
        }
        //ADD BY LIUSY 2013/09/18 #40275 ---->>>>
        //----- ADD 2013/03/18 zhaimm Redmine#34807 ---------->>>>>
        /// <summary>
        /// 指示書(仮伝)番号0詰めを行う
        /// </summary>
        /// <param name="partySalesSlipNo">指示書(仮伝)番号</param>
        /// <param name="totalWidth">結果として生成される文字列の文字数</param>
        /// <returns>指示書(仮伝)番号</returns>
        /// <remarks>
        /// <br>Note		: 10800003-00、2013/05/15配信分、赤伝発行時：売上伝票入力の仕様と同様、0詰めを行う。</br>
        /// <br>Programmer	: zhaimm</br>
        /// <br>Date		: 2013/03/18</br>
        /// </remarks>
        private string GetFormattedPartySalesSlipNo(string partySalesSlipNo, int totalWidth)
        {
            // 「NULL」、空白と「00」の場合
            if ((string.IsNullOrEmpty(partySalesSlipNo)) || (string.IsNullOrEmpty(partySalesSlipNo.Trim('0'))))
            {
                return partySalesSlipNo;
            }
            else
            {
                // 非数字の場合
                if (System.Text.RegularExpressions.Regex.IsMatch(partySalesSlipNo, @"[^0-9]"))
                {
                    return partySalesSlipNo.TrimEnd();
                }
                else
                {
                    // 数字の場合
                    return partySalesSlipNo.PadLeft(totalWidth, '0');
                }
            }
        }
        //----- ADD 2013/03/18 zhaimm Redmine#34807 ----------<<<<<

        // --- Add 2011/08/06 duzg for 赤伝発行時、データ送信対応 --->>>
        /// <summary>
        /// 送信確認処理
        /// </summary>
        /// <remarks>
        /// <br>Update Note : 2011/08/02 zhubj </br>
        /// <br>              データ送信確認」画面を表示するかどうか</br>
        /// </remarks>
        //private bool SCMSendProcess(ref string partySaleSlipNum)//del 2011/08/09 zhubj
        //private bool SCMSendProcess(ref string partySaleSlipNum, ref bool isOnlineKindDiv)//add 2011/08/09 zhubj //del 2011/08/11 zhubj
        private bool SCMSendProcess(ref string partySaleSlipNum, ref bool isOnlineKindDiv, ref bool isScmAnsOk)//add 2011/08/11 zhubj
        {
            bool sendFlg = false;
            CustomerInfo sendCustomerInfo;
            int sendCustomerCode = _custPrtPpr.CustomerCode;
            int status = this._customerInfoAcs.ReadDBData(this._enterpriseCode, sendCustomerCode, out sendCustomerInfo);
            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // ADD 2011/12/22 李小路　Redmine#27459-------->>>>>>>
                if (this._opt_Pcc == (int)Option.ON)
                {
                    // ADD 2011/12/22 李小路　Redmine#27459--------<<<<<<<
                    if (sendCustomerInfo.OnlineKindDiv == 10)
                    {
                        isOnlineKindDiv = true;//add 2011/08/09 zhubj
                        PMKHN05010UA frm = new PMKHN05010UA();
                        // 売上データ作成
                        SalesSlip salesslip = new SalesSlip();
                        foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRedRow in this.uGrid_Detail.Rows)
                        {
                            if ((bool)gridRedRow.Cells[_detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Value)
                            {
                                salesslip.AcptAnOdrStatus = Int32.Parse(gridRedRow.Cells[_detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName].Value.ToString());
                                salesslip.SalesSlipNum = gridRedRow.Cells[_detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Value.ToString();
                                salesslip.PartySaleSlipNum = gridRedRow.Cells[_detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName].Value.ToString();
                                break;
                            }
                        }

                        // --- ADD 2014/08/26 鄧潘ハン SCM仕掛一覧 №10650の③ -------------------->>>>>
                        // 売上データからSCM情報取得
                        UserSCMOrderHeaderRecord scmHeader;
                        UserSCMOrderCarRecord scmCar;
                        List<UserSCMOrderDetailRecord> scmDetailList;
                        List<UserSCMOrderAnswerRecord> scmAnswerList;
                        this._custPtrRedSlipAcs.ReadDBData(ConstantManagement.LogicalMode.GetData0
                                      , this._enterpriseCode
                                      , salesslip.AcptAnOdrStatus
                                      , salesslip.SalesSlipNum
                                      , out scmHeader
                                      , out scmCar
                                      , out scmDetailList
                                      , out scmAnswerList);
                        // SCM情報無
                        if (scmHeader == null)
                        {
                            sendCustomerInfo.OnlineKindDiv = 60;
                        }
                        // --- ADD 2014/08/26 鄧潘ハン SCM仕掛一覧 №10650の③ --------------------<<<<<

                        /* ---------------------- DEL START 2011/08/16 zhubj ----------------->>>>>
                        if (this._custPtrRedSlipAcs.CheckScmDataExit(salesslip.SalesSlipNum, salesslip.AcptAnOdrStatus))
                        {
                            salesslip.InquiryNumber = -1;
                        }
                        else
                        {
                            salesslip.InquiryNumber = 0;
                        }
                        ---------------------- DEL END   2011/08/16 zhubj-----------------<<<<<*/
                        // --- UPD 2012/09/20 三戸 №35の戻し --------->>>>>>>>>>>>>>>>>>>>>>>>
                        //// UPD 2012/07/11 №35 T.Yoshioka ------------------->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                        //foreach (CustPtrSalesDetailDataSet.SalesDetailRow row in _detailDataSet.SalesDetail.Rows)
                        //{
                        //    if (row.SalesSlipNum == salesslip.SalesSlipNum.ToString())
                        //    {
                        //        long inqNum = 0;
                        //        long.TryParse(row.InquiryNumber, out inqNum);
                        //        salesslip.InquiryNumber = inqNum;
                        //        inquiryNumber = inqNum;
                        //        break;
                        //    }
                        //}
                        //// salesslip.InquiryNumber = 0;// add 2011/08/16 zhubj
                        //// UPD 2012/07/11 №35 T.Yoshioka -------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
                        salesslip.InquiryNumber = 0;// add 2011/08/16 zhubj
                        // --- UPD 2012/09/20 三戸 №35の戻し ---------<<<<<<<<<<<<<<<<<<<<<<<<
                        frm.SalesSlip = salesslip;
                        // 現在の仕様では、明細は判断材料に含めていないので、とりあえず初期化したリストを設定
                        frm.SalesDetailList = new List<SalesDetail>();
                        frm.CustomerInfo = sendCustomerInfo;
                        frm.PartySalesSlipNum = salesslip.PartySaleSlipNum;
                        PMKHN05010UA.OptSendTargetDiv div = PMKHN05010UA.OptSendTargetDiv.None;
                        int st;
                        string msg;
                        DialogResult ret = frm.ShowDialog(out st, out  msg, out div);

                        switch (ret)
                        {
                            case DialogResult.Cancel:
                                isScmAnsOk = false;//add 2011/08/11 zhubj
                                break;
                            case DialogResult.No:
                                isScmAnsOk = false;//add 2011/08/11 zhubj
                                break;
                            case DialogResult.OK:
                            case DialogResult.Yes:
                                // SCMの場合はSCMフラグを立てる
                                if (div == PMKHN05010UA.OptSendTargetDiv.Scm) sendFlg = true;
                                partySaleSlipNum = frm.PartySalesSlipNum;
                                isScmAnsOk = true;//add 2011/08/11 zhubj
                                break;
                            default:
                                isScmAnsOk = false;//add 2011/08/11 zhubj
                                break;
                        }
                    }
                    // ADD 2011/12/22 李小路　Redmine#27459------->>>>>>>
                }
                else
                {
                    if (sendCustomerInfo.OnlineKindDiv == 10)
                    {
                        SalesSlip salesslip = new SalesSlip();
                        foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRedRow in this.uGrid_Detail.Rows)
                        {
                            if ((bool)gridRedRow.Cells[_detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Value)
                            {
                                salesslip.AcptAnOdrStatus = Int32.Parse(gridRedRow.Cells[_detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName].Value.ToString());
                                salesslip.SalesSlipNum = gridRedRow.Cells[_detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Value.ToString();
                                salesslip.PartySaleSlipNum = gridRedRow.Cells[_detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName].Value.ToString();
                                break;
                            }
                        }
                        partySaleSlipNum = salesslip.PartySaleSlipNum;
                        isOnlineKindDiv = true;
                        isScmAnsOk = true;
                        sendFlg = false;
                    }
                }
                // ADD 2011/12/22 李小路　Redmine#27459-------<<<<<<<
            }
            return sendFlg;
        }
        // --- Add 2011/08/06 duzg for 赤伝発行時、データ送信対応 ---<<<

        // --- ADD m.suzuki 2010/08/18 ---------->>>>>
        /// <summary>
        /// 赤伝日付チェック（売上・仕入）
        /// </summary>
        /// <param name="checkRedSlipDateMessage">エラーメッセージ</param>
        /// <returns></returns>
        private bool CheckRedSlipDate(out string checkRedSlipDateMessage)
        {
            checkRedSlipDateMessage = string.Empty;
            bool checkResult;

            //--------------------------------------------------
            // 売上・締次
            //--------------------------------------------------
            checkResult = this.CheckDmdC(this._selectedSectionCd.Trim(), this._selectedCustomerCd, this.tDateEdit_rs_SalesDate.GetDateTime());
            if (checkResult)
            {
                // 売上締次エラー
                checkRedSlipDateMessage = MSG_RS_SALESDATE_DMD_ERROR;
                return false;
            }

            //--------------------------------------------------
            // 売上・月次
            //--------------------------------------------------
            checkResult = this.CheckMonthlyAddUpHis(this._selectedSectionCd.Trim(), this._selectedCustomerCd, this.tDateEdit_rs_SalesDate.GetDateTime());
            if (checkResult)
            {
                // 売上月次エラー
                checkRedSlipDateMessage = MSG_RS_SALESDATE_MONTHLY_ERROR;
                return false;
            }

            // ---------- DEL 2012/08/22 ---------->>>>>
            // 売上日での仕入・締次、仕入・月次チェックは、新たに仕入日が入力可能となり
            // その結果売上日が仕入日と一致しなくなったため削除する
            // 仕入日での仕入・締次、仕入・月次チェックは、StartIssueRedSlip()メソッドで行うこととする
            //--------------------------------------------------
            // 仕入・締次　／　仕入・月次
            //--------------------------------------------------
            //bool checkMonthlyPayment = false; // 仕入月次チェック
            //bool checkPayment = false; // 仕入締次チェック
            //
            //foreach (DataRow dr in this._detailDataSet.RedSlipDetail.Rows)
            //{
            //    if (dr[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName] != null
            //        && dr[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].ToString() != string.Empty)
            //    {
            //        // 仕入締次チェック
            //        checkPayment = this.CheckPayment(
            //            this._selectedSectionCd.Trim(), (int)dr[this._detailDataSet.RedSlipDetail.SupplierCdColumn.ColumnName], this.tDateEdit_rs_SalesDate.GetDateTime());
            //
            //        if (checkPayment)
            //        {
            //            break;
            //        }
            //
            //        // 仕入月次チェック
            //        checkMonthlyPayment = this.CheckMonthlyAccPayment(
            //            this._selectedSectionCd.Trim(), (int)dr[this._detailDataSet.RedSlipDetail.SupplierCdColumn.ColumnName], this.tDateEdit_rs_SalesDate.GetDateTime());
            //
            //        if (checkMonthlyPayment)
            //        {
            //            break;
            //        }
            //    }
            //}
            //if (checkPayment)
            //{
            //    // 仕入締次エラー
            //    checkRedSlipDateMessage = MSG_RS_SALESDATE_DMDSUP_ERROR;
            //    return false;
            //}
            //
            //if (checkMonthlyPayment)
            //{
            //    // 仕入月次エラー
            //    checkRedSlipDateMessage = MSG_RS_SALESDATE_MONTHLYSUP_ERROR;
            //    return false;
            //}
            // ---------- DEL 2012/08/22 ----------<<<<<

            // 正常（エラーなし）
            return true;
        }
        // --- ADD m.suzuki 2010/08/18 ----------<<<<<

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/15 DEL
        ///// <summary>
        ///// 
        ///// </summary>
        ///// <param name="salesSlipNum"></param>
        ///// <param name="acptAnOdrStatus"></param>
        ///// <param name="slipNumList"></param>
        //private void GetHeaderSlipNo(out string salesSlipNum, out int acptAnOdrStatus, out DataRow[] rows)
        //    //out string[] slipNumList, out int[] acptStatusList)
        //{
        //    // 初期化
        //    salesSlipNum = string.Empty;
        //    acptAnOdrStatus = 0;

        //    string currentSlipNum = string.Empty;
        //    //int currentAcptStatus = 0;
        //    int rowNo = 0;

        //    // 伝票番号で降順
        //    //DataRow[] 
        //    rows = this._detailDataSet.SalesDetail.Select("SelectionCheck = true", "SalesSlipNum asc");
        //    //slipNumList = new string[rows.Length];
        //    //acptStatusList = new int[rows.Length];
        //    //int counter = 0;

        //    foreach (DataRow row in rows)
        //    {
        //        currentSlipNum = row["SalesSlipNum"].ToString();
        //        //currentAcptStatus = Int32.Parse(row["AcptAnOdrStatus"].ToString());
        //        if (salesSlipNum == string.Empty)
        //        {
        //            salesSlipNum = currentSlipNum;
        //            rowNo = Int32.Parse(row["RowNo"].ToString());
        //        }
        //        else if (Int32.Parse(salesSlipNum) > Int32.Parse(currentSlipNum))
        //        {
        //            salesSlipNum = currentSlipNum;
        //            rowNo = Int32.Parse(row["RowNo"].ToString());
        //        }
        //        //slipNumList[counter] = currentSlipNum;
        //        //acptStatusList[counter] = currentAcptStatus;
        //        //counter++;
        //    }
        //    salesSlipNum = salesSlipNum.PadLeft(9, '0');

        //    // 受注ステータス取得
        //    rows = this._detailDataSet.SalesDetail.Select("RowNo = " + rowNo.ToString());
        //    foreach (DataRow row in rows)
        //    {
        //        acptAnOdrStatus = Int32.Parse(row["AcptAnOdrStatus"].ToString());
        //    }
        //}
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/15 DEL

        // 2010/04/07 Add >>>
        /// <summary>
        /// 赤伝発行処理前後の処理を行います。
        /// </summary>
        private void StartIssueRedSlip()
        {
            // 赤伝発行ボタン実行不可なら処理しない
            if (_redSlipBottonFlag == false)
            {
                return;
            }

            // ---------- ADD 2012/08/22 ---------->>>>>
            // 仕入伝票番号、倉庫コード入力状態チェック
            // --- UPD 2012/12/19 T.Miyamoto ------------------------------>>>>>
            ////   売上仕入区分が「必須入力」で返品時在庫登録区分が「する」の場合、売仕入同時入力の明細をチェック
            //if (_salesTtlSt.SalesStockDiv == 2 &&
            //    _salesTtlSt.RetGoodsStockEtyDiv == 0)
            //   売仕入同時入力制御オプション(OPT-CPM0050)がオン以外かつ
            //   売上仕入区分が「必須入力」で返品時在庫登録区分が「する」の場合、売仕入同時入力の明細をチェック
            if (this._opt_StockEntCtrl != (int)Option.ON &&
                _salesTtlSt.SalesStockDiv == 2 &&
                _salesTtlSt.RetGoodsStockEtyDiv == 0)
            // --- UPD 2012/12/19 T.Miyamoto ------------------------------<<<<<
            {
                foreach (DataRow dr in this._detailDataSet.RedSlipDetail.Rows)
                {
                    // 画面上の「伝票区分」の指定が「掛売上」の場合、
                    // 売仕入同時入力でない明細は、仕入伝票番号は入力不可で、倉庫コードのみ入力可のため、チェックは行わない
                    string supplyDivName = (string)dr[this._detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].ToString();
                    if (supplyDivName != "○")
                        continue;

                    string stockPartySaleSlipNum = dr[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].ToString();
                    string warehouseCode = dr[this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].ToString();

                    if (stockPartySaleSlipNum == string.Empty && warehouseCode == string.Empty)
                    {
                        // ----- ADD 2013/01/15 ----->>>>>
                        // 仕入返品予定区分が「しない」の場合のみ警告表示
                        if (_salesTtlSt.StockRetGoodsPlnDiv == 0)
                        {
                        // ----- ADD 2013/01/15 -----<<<<<
                        // 仕入伝票番号、倉庫コード共に未入力の場合は警告を表示して処理終了
                        TMsgDisp.Show(this,
                                      emErrorLevel.ERR_LEVEL_EXCLAMATION,
                                      this.Name,
                                      "取寄品は仕入伝票番号か倉庫を入力してください。",
                                      -1,
                                      MessageBoxButtons.OK);
                        return;
                        // ----- ADD 2013/01/15 ----->>>>>
                        }
                        // ----- ADD 2013/01/15 -----<<<<<
                    }
                }
            }

            // 仕入日が入力されていれば、締日との関係をチェック
            int sts = (int)ConstantManagement.DB_Status.ctDB_NORMAL;

            // 締め日取得用クラスのキャッシュを一旦クリア
            // 　得意先電子元帳を起動したまま仕入月次更新、仕入締次更新を行うと、
            //   最新の締日データを取得できない現象を回避するために行う
            _tCalcAcs.ClearCache();
            foreach (DataRow dr in this._detailDataSet.RedSlipDetail.Rows)
            {
                if (dr[this._detailDataSet.RedSlipDetail.StockDateColumn.ColumnName] != DBNull.Value)
                {
                    // 仕入先コード取得
                    int supplierCode = (int)dr[this._detailDataSet.RedSlipDetail.SupplierCdColumn.ColumnName];
                    // 仕入日取得
                    DateTime stockDate = (DateTime)dr[this._detailDataSet.RedSlipDetail.StockDateColumn.ColumnName];

                    // 仕入先コードから、仕入先の前回締日を取得
                    DateTime prevTotalDay;
                    sts = _tCalcAcs.GetTotalDayPayment(supplierCode, out prevTotalDay);
                    if (sts == (int)ConstantManagement.DB_Status.ctDB_NORMAL &&
                        prevTotalDay != DateTime.MinValue)
                    {
                        // 仕入締次チェック
                        // 仕入日がこれ以前になっている場合は警告を表示して処理終了
                        if (stockDate <= prevTotalDay)
                        {
                            TMsgDisp.Show(this,
                                          emErrorLevel.ERR_LEVEL_EXCLAMATION,
                                          this.Name,
                                          "仕入日が前回支払締日以前になっている為、発行できません。",
                                          -1,
                                          MessageBoxButtons.OK);
                            return;
                        }
                    }

                    // 仕入先コードから、仕入月次更新の前回締日を取得
                    sts = _tCalcAcs.GetTotalDayMonthlyAccPay(supplierCode, out prevTotalDay);
                    if (sts == (int)ConstantManagement.DB_Status.ctDB_NORMAL &&
                        prevTotalDay != DateTime.MinValue)
                    {
                        // 仕入月次チェック
                        // 仕入日がこれ以前になっている場合は警告を表示して処理終了
                        if (stockDate <= prevTotalDay)
                        {
                            TMsgDisp.Show(this,
                                          emErrorLevel.ERR_LEVEL_EXCLAMATION,
                                          this.Name,
                                          "仕入日が前回月次更新日以前になっている為、発行できません。",
                                          -1,
                                          MessageBoxButtons.OK);
                            return;
                        }
                    }
                }
            }
            // ---------- ADD 2012/08/22 ----------<<<<<

            // 赤伝発行
            IssueRedSlip();

            if (_searchSlipFlag == true)
            {
                // 再検索
                this._custPrtPprBackUp = null;
                this._custPrtPprBlnceBackUp = null;

                // 検索実行
                Control errorControl = SearchSlipDetailList();

                // エラーコントロールに移動
                if (errorControl != null)
                {
                    errorControl.Focus();
                }

                // 赤伝発行後に、発行した赤伝にカーソル移動するように修正
                if (!string.IsNullOrEmpty(this._searchSalesSlipNum))
                {
                    // 元黒NOによって赤伝伝票を取得する
                    DataRow[] rows = this._detailDataSet.SalesDetail.Select("SrcSalesSlipNum = '" + _searchSalesSlipNum + "'", "SalesSlipNum desc");
                    if (rows != null && rows.Length > 0)
                    {
                        foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridDetailRow in uGrid_Detail.Rows)
                        {
                            if ((int)gridDetailRow.Cells[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName].Value == (int)rows[0][this._detailDataSet.SalesDetail.RowNoColumn.ColumnName])
                            {
                                this.uGrid_Detail.ActiveRow = gridDetailRow;
                                this.uGrid_Detail.ActiveRow.Selected = true;
                                break;
                            }
                        }
                    }
                }
                // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
                if ((this._settingForm._opt_EBooksLink == (int)Option.ON) && (_pdfOutputSlipKey.Count > 0))
                {                   
                    // 電子帳簿受け渡し用フォルダ取得
                    EBooksLinkSetInfo eBooksFileFolderXmlInfo = GetEBooksLinkSetInfo();

                    // インデックスファイル
                    List<DenchoDXIndexCSVEntity> denchoDXIndexCSVEntityList;
                    MakeIndexFile(_pdfOutputSlipKey, eBooksFileFolderXmlInfo, out denchoDXIndexCSVEntityList);

                    // 取引先リスト作成
                    DenchoDXCustomerExportAcs denchoDXCustomerExportAcs = new DenchoDXCustomerExportAcs();
                    denchoDXCustomerExportAcs.MakeCustomerCSVDifference(LoginInfoAcquisition.EnterpriseCode, eBooksFileFolderXmlInfo.CustomFolder + string.Format(CT_CUSTOMERFLPATH, DateTime.Now.ToString(CT_DATETIMEFOMART)));

                    // ログ出力
                    OutEBooksLog(DateTime.Now, denchoDXIndexCSVEntityList);

                    // 電帳pdf出力情報クリア
                    _pdfOutputSlipKey.Clear();
                }
                // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<<
            }
        }
        // 2010/04/07 Add <<<

        #endregion // 赤伝発行


        // Add sakurai 2009/02/03 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        #region 赤伝印刷
        /// <summary>
        /// 赤伝印刷
        /// </summary>
        /// <remarks>
        /// <br>Update Note : 2009/11/25 呉元嘯</br>
        /// <br>              PM.NS保守依頼③ 不具合対応</br>
        /// <br>              赤伝発行時の伝票印刷確認ダイアログを出さずに印刷するように修正</br>
        /// <br>Update Note : 2011/09/28 wangqx</br>
        /// <br>              Readmine#25595対応</br>
        /// <br>              得意先電子元帳から赤伝発行を行った場合、SF側で伝票が印刷するように修正</br>
        /// </remarks>
        // ---------- UPD 2013/06/25 Y.Wakita ---------->>>>>
        //// update by wangqx 20110928  begin
        ////private void RedSlipPrint(Dictionary<string, int> _printRedSalesSlipNo)
        //private void RedSlipPrint(Dictionary<string, int> _printRedSalesSlipNo, bool paraScmFlag)
        //// update by wangqx 20110928 end
        private void RedSlipPrint(Dictionary<string, int> _printRedSalesSlipNo, bool paraScmFlag, int nomalSalesSlipPrintFlag)
        // ---------- UPD 2013/06/25 Y.Wakita ----------<<<<<
        {
            // 初期処理
            DCCMN02000UA printDisp = new DCCMN02000UA(); // 伝票印刷情報設定画面インスタンス生成
            SalesSlipPrintCndtn.SalesSlipKey key = new SalesSlipPrintCndtn.SalesSlipKey(); // 伝票印刷用Keyインスタンス生成
            List<SalesSlipPrintCndtn.SalesSlipKey> keyList = new List<SalesSlipPrintCndtn.SalesSlipKey>(); // 伝票印刷用KeyListインスタンス生成

            // キー情報セット

            foreach (KeyValuePair<string, int> dic in _printRedSalesSlipNo)
            {
                key = new SalesSlipPrintCndtn.SalesSlipKey();
                key.AcptAnOdrStatus = dic.Value;
                key.SalesSlipNum = dic.Key;
                keyList.Add(key);
            }

            // 印刷情報パラメータセット
            SalesSlipPrintCndtn salesSlipPrintCndtn = new SalesSlipPrintCndtn();
            salesSlipPrintCndtn.EnterpriseCode = this._enterpriseCode;
            salesSlipPrintCndtn.SalesSlipKeyList = keyList;
            salesSlipPrintCndtn.ReissueDiv = false; // 赤伝=false
            // ---------- ADD 2013/06/25 Y.Wakita ---------->>>>>
            salesSlipPrintCndtn.NomalSalesSlipPrintFlag = nomalSalesSlipPrintFlag;
            // ---------- ADD 2013/06/25 Y.Wakita ----------<<<<<
            // update by wangqx 20110928  begin
            // update by zhouzy 20110917  begin
            //salesSlipPrintCndtn.RemoteSalesSlipPrintFlag = 1;//赤伝の場合、リモート伝票は印刷しない
            // update by zhouzy 20110917 end
            salesSlipPrintCndtn.RemoteSalesSlipPrintFlag = 0;//赤伝の場合、リモート伝票は印刷する
            salesSlipPrintCndtn.ScmFlg = paraScmFlag;
            // update by wangqx 20110928 end
            // 印刷ウィンドウ表示
            // UPD 2013/04/19 T.Miyamoto ------------------------------>>>>>
            //// --- UPD 2009/11/25 ---------->>>>>
            ////printDisp.ShowDialog( salesSlipPrintCndtn, false );
            //printDisp.ShowDialog(salesSlipPrintCndtn, true);
            //// --- UPD 2009/11/25 ----------<<<<<
            printDisp.ShowDialog(salesSlipPrintCndtn, !(_settingForm.UserSetting.RedPrintDialog));
            // UPD 2013/04/19 T.Miyamoto ------------------------------<<<<<
        }
        // Add sakurai 2009/02/03 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        #endregion
        // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
        #region 赤伝印刷
        /// <summary>
        /// 赤伝印刷
        /// </summary>
        /// <param name="_printRedSalesSlipNo"></param>
        /// <param name="paraScmFlag"></param>
        /// <param name="nomalSalesSlipPrintFlag"></param>
        /// <param name="customerInfo"></param>
        private void RedSlipPrint(Dictionary<string, int> _printRedSalesSlipNo, bool paraScmFlag, int nomalSalesSlipPrintFlag, CustomerInfo customerInfo)
        {
            try
            {
                SalesSlipPrintCndtn.SalesSlipKey key = new SalesSlipPrintCndtn.SalesSlipKey();                  // 伝票印刷用Keyインスタンス生成
                List<SalesSlipPrintCndtn.SalesSlipKey> keyList = new List<SalesSlipPrintCndtn.SalesSlipKey>();  // 伝票印刷用KeyListインスタンス生成
                Dictionary<string, CustomerInfo> pdfCustomerInfoDic = new Dictionary<string, CustomerInfo>();
                // キー情報セット
                foreach (KeyValuePair<string, int> dic in _printRedSalesSlipNo)
                {
                    key = new SalesSlipPrintCndtn.SalesSlipKey();
                    key.AcptAnOdrStatus = dic.Value;
                    key.SalesSlipNum = dic.Key;
                    keyList.Add(key);
                    if (pdfCustomerInfoDic.Count == 0 || !pdfCustomerInfoDic.ContainsKey(dic.Key))
                    {
                        pdfCustomerInfoDic.Add(dic.Key, customerInfo);
                    }
                }
                // PDFファイル出力
                pdfOutPut_EbooksLink(keyList, 1, paraScmFlag, nomalSalesSlipPrintFlag, pdfCustomerInfoDic);

            }
            catch (Exception)
            {                
               // 影響なし
            }
        }
        #endregion
        // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<

        #region ツールバー

        /// <summary>
        /// ツールバークリックイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>
        /// <br>Update Note : 2009/11/25 呉元嘯</br>
        /// <br>              PM.NS保守依頼③ 不具合対応</br>
        /// <br>              赤伝発行がキャンセルされた場合は、データの再抽出を行わないように修正</br>
        /// <br>Update Note : 2009/12/28 呉元嘯</br>
        /// <br>              PM.NS保守依頼④ 不具合対応</br>
        /// <br>              赤伝発行や、伝票再発行をファンクションボタンで操作出来ない件の修正</br>
        /// <br>Update Note : 2010/01/29 呉元嘯</br>
        /// <br>              4次改良 不具合対応</br>
        /// <br>              赤伝発行後に、発行した赤伝にカーソル移動するように修正</br>
        /// <br>Update Note : 2011/09/14 田建委</br>
        /// <br>              redmine#24670 案件一覧 連番729 でのテスト不具合</br>
        /// <br>              明細表示のタブを選択している際の複写後のメッセージの変更</br>
        /// <br>UpdateNote  : 2013/09/18 liusy</br>
        /// <br>            : 10801804-00 配信分なし</br>
        /// <br>              Redmine#40275 直接にF5で、赤伝発行時にエラーの修正</br>
        /// <br>UpdateNote  : 2015/02/25 王亜楠 Redmine#44701 No.1 </br>
        /// <br>            : テキスト出力件数制限なし位置の調整</br>
        /// </remarks>
        private void tToolbarsManager_ToolClick(object sender, Infragistics.Win.UltraWinToolbars.ToolClickEventArgs e)
        {
            switch (e.Tool.Key)
            {
                #region 終了ボタン
                case "ButtonTool_Close":
                    {
                        //this._dialogResult = DialogResult.Cancel;
                        this.Close();
                        break;
                    }
                #endregion // 終了ボタン

                #region 検索ボタン
                case "ButtonTool_Search":
                    // 検索ボタン
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                        //SearchSlipDetailList();
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        // ---------------UPD 2010/09/29--------------<<<<<
                        if (this.tEdit_SectionCodeAllowZero.Focused)
                        {
                            ChangeFocusEventArgs eArgs = new ChangeFocusEventArgs(false, false, false, Keys.Enter, this.tEdit_SectionCodeAllowZero, this.tNedit_CustomerCode);
                            this.tEdit_SectionCodeAllowZero.Text = this.uiSetControl1.GetZeroPaddedText(this.tEdit_SectionCodeAllowZero.Name, this.tEdit_SectionCodeAllowZero.Text);
                            tArrowKeyControl_ChangeFocus(null, eArgs);
                            if (isError == true)
                            {
                                isError = false;
                                return;
                            }
                        }

                        if (this.tNedit_CustomerCode.Focused)
                        {
                            ChangeFocusEventArgs eArgs = new ChangeFocusEventArgs(false, false, false, Keys.Enter, this.tNedit_CustomerCode, this.tDateEdit_SalesDateSt);
                            this.tDateEdit_SalesDateSt.Text = this.uiSetControl1.GetZeroPaddedText(this.tDateEdit_SalesDateSt.Name, this.tDateEdit_SalesDateSt.Text);
                            this.tArrowKeyControl_ChangeFocus(null, eArgs);
                            if (isError == true)
                            {
                                isError = false;
                                return;
                            }
                        }


                        // ---ADD 2009/02/10 不具合対応[11550] ------------>>>>>
                        this._custPrtPprBackUp = null;
                        this._custPrtPprBlnceBackUp = null;
                        // ---ADD 2009/02/10 不具合対応[11550] ------------<<<<<

                        // ----ADD 2010/12/20 ------->>>>>
                        if (this._selectedMainTabKey != "uTab_RemainList")
                        {
                            // ----ADD 2010/12/20 -------<<<<<
                            // ----ADD 2009/09/07 ------->>>>>
                            // 検索ボタンをクリックの場合、選択されたのデータをclear
                            this._selectedSlipNoCd = string.Empty;
                            slipCd = string.Empty;
                            tEdit_rs_SlipNoteCar.Text = string.Empty;
                            tNedit_Mileage.Clear();
                            this.uLabel_rs_SlipNoteCarTitle.Visible = false;
                            this.tEdit_rs_SlipNoteCar.Visible = false;
                            this.uButton_rs_SlipNoteCar.Visible = false;
                            this.uLabel_rs_MileageTitle.Visible = false;
                            this.tNedit_Mileage.Visible = false;
                            this.uLabel_rs_Km.Visible = false;
                            _showFlg = false;
                            carMngLt.Clear();
                            slipNumLt.Clear();
                            this._selectedRowCountDetail = 0;
                            // ----ADD 2009/09/07 -------<<<<<
                            // ----ADD 2010/12/20 ------->>>>>
                        }
                        // ----ADD 2010/12/20 -------<<<<<


                        // 検索実行
                        Control errorControl = SearchSlipDetailList();

                        this.Activate(); // ADD BY zhujw 2014/06/11 RedMine#42650 Windows8.1動作検証結果_得意先電子元帳から起動した他機能が前面表示される 修正

                        // エラーコントロールに移動
                        if (errorControl != null)
                        {
                            errorControl.Focus();
                        }
                        // -----------------------ADD 2011/01/21 ------------------------->>>>>
                        else
                        {
                            if (this._selectedMainTabKey == "uTab_RedSlip")
                            {
                                // 検索(F10)ボタンを無効とする
                                this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = false;
                            }
                        }
                        // -----------------------ADD 2011/01/21 -------------------------<<<<<
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        break;
                    }
                #endregion // 検索ボタン

                # region クリアボタン
                case "ButtonTool_Clear":
                    {
                        ClearInput();
                        break;
                    }
                # endregion

                #region 印刷ボタン
                case "ButtonTool_Print":
                    {
                        directPrint();
                        break;
                    }
                #endregion // 印刷ボタン

                #region PDF出力ボタン
                case "ButtonTool_PDF":
                    {
                        outputPDF();
                        break;
                    }
                #endregion // PDF出力ボタン

                #region テキスト出力
                case "ButtonTool_ExtractText":
                    {
                        // ---- ADD K2015/05/08 陳亮 モモセ部品の第二売価追加 ---- >>>>>
                        // 出力ファイル名が指定されていない場合、メッセージを表示する
                        if (String.IsNullOrEmpty(this._settingForm.UserSetting.OutputFileName))
                        {
                            TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                                MSG_OUTPUTFILENAME_NOTFOUND, -1, MessageBoxButtons.OK);

                            return;
                        }
                        // ---- ADD K2015/05/08 陳亮 モモセ部品の第二売価追加 ---- <<<<<

                        //----- ADD 2015/02/05 王亜楠 ---------->>>>>
                        // パターンを分解
                        _patternSetting = new string[9];
                        _settingForm.Degradation(this._settingForm.UserSetting.SelectedPatternName, out _patternSetting);

                        // 抽出件数制限なし
                        //if (this._patternSetting != null && this._patternSetting.Length > 12 && this._patternSetting[12] == "1") // DEL 2015/02/25 王亜楠 Redmine#44701 No.1
                        if (this._settingForm != null && this._settingForm.UserSetting != null && this._settingForm.UserSetting.SearchCountCtrl == 1) // ADD 2015/02/25 王亜楠 Redmine#44701 No.1
                        {
                            exportIntoTextFile2();
                        }
                        else
                        {
                            exportIntoTextFile();
                        }
                        //----- ADD 2015/02/05 王亜楠 ----------<<<<<
                        //exportIntoTextFile(); // DEL 2015/02/05 王亜楠
                        break;
                    }
                #endregion // テキスト出力

                #region EXCEL出力
                case "ButtonTool_ExtractExcel":
                    {
                        exportIntoExcelData();
                        break;
                    }
                #endregion // EXCEL出力

                #region 赤伝発行ボタン
                case "ButtonTool_IssueRedSlip":
                    {
                        //ADD BY LIUSY 2013/09/18 #40275 ----<<<<
                        if (this.tEdit_rs_SlipNote.Focused)
                        {
                            ChangeFocusEventArgs eArgs = new ChangeFocusEventArgs(false, false, false, Keys.Enter, this.tEdit_rs_SlipNote, this._PMKAU04001UA_Toolbars_Dock_Area_Top);
                            tArrowKeyControl_ChangeFocus(null, eArgs);
                            if (isRsError == false)
                            {
                                isRsError = true;
                                return;
                            }
                        }
                        if (this.tEdit_rs_SlipNote2.Focused)
                        {
                            ChangeFocusEventArgs eArgs = new ChangeFocusEventArgs(false, false, false, Keys.Enter, this.tEdit_rs_SlipNote2, this._PMKAU04001UA_Toolbars_Dock_Area_Top);
                            tArrowKeyControl_ChangeFocus(null, eArgs);
                            if (isRsError == false)
                            {
                                isRsError = true;
                                return;
                            }
                        }
                        if (this.tEdit_rs_SlipNote3.Focused)
                        {
                            ChangeFocusEventArgs eArgs = new ChangeFocusEventArgs(false, false, false, Keys.Enter, this.tEdit_rs_SlipNote3, this._PMKAU04001UA_Toolbars_Dock_Area_Top);
                            tArrowKeyControl_ChangeFocus(null, eArgs);
                            if (isRsError == false)
                            {
                                isRsError = true;
                                return;
                            }
                        }
                        if (this.tNedit_SlipNoteCode.Focused)
                        {
                            ChangeFocusEventArgs eArgs = new ChangeFocusEventArgs(false, false, false, Keys.Enter, this.tNedit_SlipNoteCode, this._PMKAU04001UA_Toolbars_Dock_Area_Top);
                            tArrowKeyControl_ChangeFocus(null, eArgs);
                            if (isRsError == false)
                            {
                                isRsError = true;
                                return;
                            }
                        }
                        if (this.tNedit_SlipNote2Code.Focused)
                        {
                            ChangeFocusEventArgs eArgs = new ChangeFocusEventArgs(false, false, false, Keys.Enter, this.tNedit_SlipNote2Code, this._PMKAU04001UA_Toolbars_Dock_Area_Top);
                            tArrowKeyControl_ChangeFocus(null, eArgs);
                            if (isRsError == false)
                            {
                                isRsError = true;
                                return;
                            }
                        }
                        if (this.tNedit_SlipNote3Code.Focused)
                        {
                            ChangeFocusEventArgs eArgs = new ChangeFocusEventArgs(false, false, false, Keys.Enter, this.tNedit_SlipNote3Code, this._PMKAU04001UA_Toolbars_Dock_Area_Top);
                            tArrowKeyControl_ChangeFocus(null, eArgs);
                            if (isRsError == false)
                            {
                                isRsError = true;
                                return;
                            }
                        }
                        if (this.tNedit_RetGoodsReason.Focused)
                        {
                            ChangeFocusEventArgs eArgs = new ChangeFocusEventArgs(false, false, false, Keys.Enter, this.tNedit_RetGoodsReason, this._PMKAU04001UA_Toolbars_Dock_Area_Top);
                            tArrowKeyControl_ChangeFocus(null, eArgs);
                            if (isRsError == false)
                            {
                                isRsError = true;
                                return;
                            }
                        }
                        if (this.tNedit_SalesCodeDiv.Focused)
                        {
                            ChangeFocusEventArgs eArgs = new ChangeFocusEventArgs(false, false, false, Keys.Enter, this.tNedit_SalesCodeDiv, this._PMKAU04001UA_Toolbars_Dock_Area_Top);
                            tArrowKeyControl_ChangeFocus(null, eArgs);
                            if (isRsError == false)
                            {
                                isRsError = true;
                                return;
                            }
                        }
                        ///ADD BY LIUSY 2013/09/18 #40275 ---->>>> 
                        ///// ADD BY wupf 2014/08/19 FOR Redmine＃43184 倉庫コードの障害解除 ---->>>>>
                        if (this.uGrid_RedSlip.ActiveCell != null)
                        {
                            try
                            {
                                _errorMsgShow = false;
                                ChangeFocusEventArgs eArgs = new ChangeFocusEventArgs(false, false, false, Keys.Enter, this.uGrid_RedSlip, this._PMKAU04001UA_Toolbars_Dock_Area_Top);
                                //フォーカスが赤伝グリッドから別のコントロールへ移動する
                                tArrowKeyControl_ChangeFocus(null, eArgs);
                                //チェックエラーの場合、中止する
                                if (_errorMsgShow) return;
                                if (this.uGrid_RedSlip.ActiveCell.Column.Key.Equals(this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName))
                                {
                                    if (!string.IsNullOrEmpty(this.uGrid_RedSlip.ActiveCell.Value.ToString()))
                                    {
                                        this.uGrid_RedSlip.ActiveCell.Value = this.uGrid_RedSlip.ActiveCell.Value.ToString().PadLeft(4, '0');
                                    }
                                }
                            }
                            finally
                            {
                                _errorMsgShow = false;
                            }
                        }
                        // ADD BY wupf 2014/08/19 FOR Redmine＃43184 倉庫コードの障害解除 ----<<<<<
                        // DEL BY wupf 2014/08/19 FOR Redmine＃43184 倉庫コードの障害解除 ---->>>>>
                        //// ADD BY wupf 2014/08/13 FOR Redmine＃43184 倉庫コードの障害解除 ---->>>>>
                        //if (this.uGrid_RedSlip.ActiveCell.Column.Key.Equals(this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName)
                        //    || this.uGrid_RedSlip.ActiveCell.Column.Key.Equals(this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName)
                        //    || this.uGrid_RedSlip.ActiveCell.Column.Key.Equals(this._detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName)
                        //    || this.uGrid_RedSlip.ActiveCell.Column.Key.Equals(this._detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName)
                        //    || this.uGrid_RedSlip.ActiveCell.Column.Key.Equals(this._detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName)
                        //    || this.uGrid_RedSlip.ActiveCell.Column.Key.Equals(this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName)
                        //    || this.uGrid_RedSlip.ActiveCell.Column.Key.Equals(this._detailDataSet.RedSlipDetail.StockDateColumn.ColumnName)
                        //    )
                        //{
                        //    try
                        //    {
                        //        int tempActiverRow = this.uGrid_RedSlip.ActiveCell.Row.Index;
                        //        int tempActiveCol = this.uGrid_RedSlip.ActiveCell.Column.Index;
                        //        string tempOrginValue = this.uGrid_RedSlip.ActiveCell.OriginalValue.ToString();
                        //        string tempValue = this.uGrid_RedSlip.ActiveCell.Value.ToString();

                        //        _errorMsgShow = false;
                        //        this.uGrid_RedSlip_Leave(this.uGrid_RedSlip, new EventArgs());

                        //        this.uGrid_RedSlip.ActiveCell = this.uGrid_RedSlip.Rows[tempActiverRow].Cells[tempActiveCol];

                                
                        //        if (_errorMsgShow)
                        //        {
                        //            if (this.uGrid_RedSlip.ActiveCell.Column.Key.Equals(this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName))
                        //            {
                        //                Warehouse tempWarehouseInfo;
                        //                int tempStatus = this._warehouseAcs.Read(out tempWarehouseInfo, this._enterpriseCode, string.Empty, tempOrginValue);
                        //                if (tempStatus == 0)
                        //                {
                        //                    this.uGrid_RedSlip.ActiveCell.Value = tempOrginValue;
                        //                }
                        //                else
                        //                {
                        //                    this.uGrid_RedSlip.ActiveCell.Value = tempValue;
                        //                }
                        //            }

                        //            return;
                        //        }
                        //        if (this.uGrid_RedSlip.ActiveCell.Column.Key.Equals(this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName))
                        //        {
                        //            if (!string.IsNullOrEmpty(this.uGrid_RedSlip.ActiveCell.Value.ToString()))
                        //            {
                        //                this.uGrid_RedSlip.ActiveCell.Value = this.uGrid_RedSlip.ActiveCell.Value.ToString().PadLeft(4, '0');
                        //            }
                        //        }
                        //    }
                        //    finally
                        //    {
                        //        _errorMsgShow = false;
                        //    }
                        //}
                        //// ADD BY wupf 2014/08/13 FOR Redmine＃43184 倉庫コードの障害解除 ----<<<<<
                        // DEL BY wupf 2014/08/19 FOR Redmine＃43184 倉庫コードの障害解除 ----<<<<<

                        // ---ADD 2011/08/06 duzg ----------------------------------------------->>>>>
                        // 赤伝発行場合、伝票番号同じチェック
                        if (this._detailDataSet.RedSlipDetail.Count > 1)
                        {
                            string salesSlipNum = string.Empty;
                            bool isDiffSalesSlipNum = false;
                            bool isOnlineKindDiv = false;
                            foreach (DataRow dr in this._detailDataSet.RedSlipDetail.Rows)
                            {
                                if (String.IsNullOrEmpty(salesSlipNum))
                                {
                                    salesSlipNum = dr[this._detailDataSet.RedSlipDetail.SalesSlipNumColumn.ColumnName].ToString();
                                }
                                else
                                {
                                    if (!salesSlipNum.Equals(dr[this._detailDataSet.RedSlipDetail.SalesSlipNumColumn.ColumnName].ToString()))
                                    {
                                        isDiffSalesSlipNum = true;
                                    }
                                }
                                CustomerInfo sendCustomerInfo;
                                int sendCustomerCode = int.Parse(dr[this._detailDataSet.RedSlipDetail.CustomerCodeColumn.ColumnName].ToString());
                                int status = this._customerInfoAcs.ReadDBData(this._enterpriseCode, sendCustomerCode, out sendCustomerInfo);
                                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                                {
                                    if (sendCustomerInfo.OnlineKindDiv == 10)
                                    {
                                        isOnlineKindDiv = true;
                                    }
                                }
                            }
                            if (isOnlineKindDiv && isDiffSalesSlipNum)
                            {
                                //TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, "得意先に送信下伝票を含む場合、複数伝票の選択はできません。", -1, MessageBoxButtons.OK);// DEL 2014/08/12 SCM障害No.18の対応
                                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, "得意先に送信した伝票を含む場合、複数伝票の選択はできません。", -1, MessageBoxButtons.OK);// ADD 2014/08/12 SCM障害No.18の対応
                                _searchSlipFlag = false;
                                return;
                            }
                        }
                        // ---ADD 2011/08/06 duzg -----------------------------------------------<<<<<

                        // ADD 2014/01/30 吉岡 #41771 ------------>>>>>>>>>>>>>>>>>
                        string errorMessage;
                        // 異なる税率の行の選択が無いか、チェック
                        if (!CheckTaxRate(out errorMessage))
                        {
                            TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, errorMessage, -1, MessageBoxButtons.OK);
                            _searchSlipFlag = false;
                            return;
                        }
                        // ADD 2014/01/30 吉岡 #41771 ------------<<<<<<<<<<<<<<<<<

                        // 伝票一覧タブ
                        if (this._selectedMainTabKey == "uTab_SlipList")
                        {
                            // １伝票のみ選択されていた場合
                            // 該当する全ての明細を選択状態にし、赤伝発行タブへ切り替え
                            if (this._selectedRowCountSlip == 1)
                            {
                                this.tabFlg = false;// ADD 2009/11/25
                                if (SelectAllDetailFromSelectedSlip())
                                {
                                    this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_RedSlip"];
                                }
                                this.tabFlg = true;// ADD 2009/11/25
                            }
                            // ２伝票以上はボタンが押せないので省略
                        }
                        // 明細タブ
                        if (this._selectedMainTabKey == "uTab_SlipDetail")
                        {
                            // 選択行が1行以上であれば赤伝発行タブに切り替え
                            if (this._detailDataSet.SalesDetail.Select("SelectionCheck = true").Length > 0)
                            {
                                this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_RedSlip"];
                            }
                        }
                        // 赤伝タブ
                        if (this._selectedMainTabKey == "uTab_RedSlip")
                        {
                            // 赤伝発行処理
                            // 2010/04/07 Del >>>
                            //IssueRedSlip();

                            //// ---ADD 2009/02/14 不具合対応[11552] --------------->>>>>

                            //// --- UPD 2009/11/25 ---------->>>>>
                            ////// 再検索
                            ////this._custPrtPprBackUp = null;
                            ////this._custPrtPprBlnceBackUp = null;

                            ////// 検索実行
                            ////Control errorControl = SearchSlipDetailList();

                            ////// エラーコントロールに移動
                            ////if (errorControl != null)
                            ////{
                            ////    errorControl.Focus();
                            ////}
                            //if (_searchSlipFlag == true)
                            //{
                            //    // 再検索
                            //    this._custPrtPprBackUp = null;
                            //    this._custPrtPprBlnceBackUp = null;

                            //    // 検索実行
                            //    Control errorControl = SearchSlipDetailList();

                            //    // エラーコントロールに移動
                            //    if (errorControl != null)
                            //    {
                            //        errorControl.Focus();
                            //    }
                            //    // -----------ADD 2010/01/29------------>>>>>
                            //    // 赤伝発行後に、発行した赤伝にカーソル移動するように修正
                            //    if (!string.IsNullOrEmpty(this._searchSalesSlipNum))
                            //    {
                            //        // 元黒NOによって赤伝伝票を取得する
                            //        DataRow[] rows = this._detailDataSet.SalesDetail.Select("SrcSalesSlipNum = '" + _searchSalesSlipNum + "'", "SalesSlipNum desc");
                            //        if (rows != null && rows.Length > 0)
                            //        {
                            //            foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridDetailRow in uGrid_Detail.Rows)
                            //            {
                            //                if ((int)gridDetailRow.Cells[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName].Value == (int)rows[0][this._detailDataSet.SalesDetail.RowNoColumn.ColumnName])
                            //                {
                            //                    this.uGrid_Detail.ActiveRow = gridDetailRow;
                            //                    this.uGrid_Detail.ActiveRow.Selected = true;
                            //                    break;
                            //                }
                            //            }
                            //        }

                            //    }
                            //    // -----------ADD 2010/01/29------------<<<<<
                            //}
                            //else
                            //{
                            //    _searchSlipFlag = true;
                            //}
                            //// --- UPD 2009/11/25 ----------<<<<<

                            //// ---ADD 2009/02/14 不具合対応[11552] ---------------<<<<<
                            // 2010/04/07 Del <<<
                            StartIssueRedSlip();    // 2010/04/07 Add
                        }
                        // ----ADD 2009/09/07 ------------->>>>>
                        // 2010/04/07 Add >>>
                        if (_searchSlipFlag == true)
                        {
                            // 2010/04/07 Add <<<
                            this.carMngLt.Clear();
                            this.slipNumLt.Clear();
                            this._mailAgeInfo = 0;
                            this._carNoteInfo = string.Empty;
                            //this.tNedit_Mileage.SetInt(0);
                            this.tNedit_Mileage.Text = string.Empty;  // ADD 2009/10/15
                            this.tEdit_rs_SlipNoteCar.Text = string.Empty;
                            this._selectedSlipNoCd = string.Empty;
                            this.slipCd = string.Empty;

                            this.uLabel_rs_SlipNoteCarTitle.Visible = false;
                            this.tEdit_rs_SlipNoteCar.Visible = false;
                            this.uButton_rs_SlipNoteCar.Visible = false;
                            this.uLabel_rs_MileageTitle.Visible = false;
                            this.tNedit_Mileage.Visible = false;
                            this.uLabel_rs_Km.Visible = false;
                        }   // 2010/04/07 Add
                        // ----ADD 2009/09/07 -------------<<<<<
                        break;
                    }
                #endregion

                #region 伝票再発行ボタン
                case "ButtonTool_ReissueSlip":
                    {
                        ReisssueSlip();
                        break;
                    }
                #endregion 伝票再発行ボタン

                #region 設定ボタン
                case "ButtonTool_Configuration":
                    {
                        openSetting();
                        break;
                    }
                #endregion

                #region 行選択ボタン
                case "ButtonTool_RowSelect":
                    {
                        CurrentRowSelect();
                        break;
                    }
                #endregion // 行選択ボタン

                #region 行検索ボタン
                case "ButtonTool_RowSearchStart":
                    {
                        rowSearchStart();
                        break;
                    }
                #endregion // 行検索ボタン

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/22 ADD
                # region 在庫照会
                case "ButtonTool_W_StockRef":
                    {
                        object paraObj = CreateEnumInstance("MAZAI04110U", "Broadleaf.Windows.Forms.StockSearchGuide+emSearchMode", new object[] { 0 });
                        if (paraObj == null || this.Invoke("MAZAI04110U", "Broadleaf.Windows.Forms.StockSearchGuide", new object[] { }, "ShowReference", new object[] { paraObj, _enterpriseCode }) == false)
                        {
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "この機能は実装されていません。",
                                -1,
                                MessageBoxButtons.OK);
                        }
                    }
                    break;
                # endregion
                # region 在庫入出庫照会
                case "ButtonTool_W_StockAcPayRef":
                    {
                        if (this.Invoke("MAZAI04310U", "Broadleaf.Windows.Forms.MAZAI04310UA", new object[] { }, "Show", new object[] { }) == false)
                        {
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "この機能は実装されていません。",
                                -1,
                                MessageBoxButtons.OK);
                        }
                    }
                    break;
                # endregion
                # region 売上年間実績照会
                case "ButtonTool_W_AnnualResultRef":
                    {
                        if (this.Invoke("DCHNB04180U", "Broadleaf.Windows.Forms.DCHNB04180UA", new object[] { }, "Show", new object[] { }) == false)
                        {
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "この機能は実装されていません。",
                                -1,
                                MessageBoxButtons.OK);
                        }
                    }
                    break;
                # endregion
                # region 仕入電子元帳
                case "ButtonTool_W_SuppPrtPprRef":
                    {
                        //if ( this.Invoke( "PMKOU04001U", "Broadleaf.Windows.Forms.PMKOU04001UA", new object[] { }, "Show", new object[] { } ) == false )
                        if (this.Invoke("PMKOU04001U", "Broadleaf.Windows.Forms.PMKOU04001UA", new object[] { CT_CUSTOMER_ERECNOTE_PGID }, "Show", new object[] { }) == false)
                        {
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "この機能は実装されていません。",
                                -1,
                                MessageBoxButtons.OK);
                        }
                    }
                    break;
                # endregion
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/22 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
                # region 見出複写
                case "ButtonTool_SlipHeaderCopy":
                    {
                        // 見出複写
                        CopySlipHeader();

                        // 完了ダイアログ
                        // ----- UPD 2011/09/14 --------------------------->>>>>
                        //TMsgDisp.Show(
                        //    this,
                        //    emErrorLevel.ERR_LEVEL_INFO,
                        //    this.Name,
                        //    "伝票情報を記憶しました。" + Environment.NewLine +
                        //    "売上伝票入力で見出貼付が可能です。",
                        //    -1,
                        //    MessageBoxButtons.OK);

                        switch (this._selectedMainTabKey)
                        {
                            //--------------------------------------------------
                            // 明細表示の場合
                            //--------------------------------------------------
                            case "uTab_SlipDetail":
                                {
                                    TMsgDisp.Show(
                                        this,
                                        emErrorLevel.ERR_LEVEL_INFO,
                                        this.Name,
                                        "伝票明細情報を記憶しました。" + Environment.NewLine +
                                        "売上伝票入力で明細貼付が可能です。",
                                        -1,
                                        MessageBoxButtons.OK);
                                    break;
                                }
                            default:
                                {
                                    TMsgDisp.Show(
                                        this,
                                        emErrorLevel.ERR_LEVEL_INFO,
                                        this.Name,
                                        "伝票情報を記憶しました。" + Environment.NewLine +
                                        "売上伝票入力で見出貼付が可能です。",
                                        -1,
                                        MessageBoxButtons.OK);
                                    break;
                                }
                        }
                        // ----- UPD 2011/09/14 ---------------------------<<<<<
                    }
                    break;
                # endregion
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD
                // -------------ADD 2009/12/28-------------->>>>>
                #region 残高照会ボタン
                case "ButtonTool_BalanceChart":
                    {
                        balanceChartSetting();
                        break;
                    }
                #endregion

                #region 明細選択ボタン
                case "ButtonTool_DetailSelect":
                    {
                        detailSelectSetting();
                        break;
                    }
                #endregion

                #region 伝票選択ボタン
                case "ButtonTool_SalesSlipSelect":
                    {
                        salesSlipSelectSetting();
                        break;
                    }
                #endregion

                #region 基本条件ボタン
                case "ButtonTool_CommonCondition":
                    {
                        commonConditionSetting();
                        break;
                    }
                #endregion

                #region 抽出条件ボタン
                case "ButtonTool_ExtraCondition":
                    {
                        extraConditionSetting();
                        break;
                    }
                #endregion

                #region 合計表示ボタン
                case "ButtonTool_TotalShow":
                    {
                        totalShowSetting();
                        break;
                    }
                #endregion
                // -------------ADD 2009/12/28--------------<<<<<
                // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿対応　-------->>>>>
                #region 電帳.DXボタン
                case "ButtonTool_EbooksDX":
                    {
                        eBooksDxShow();
                        break;
                    }
                #endregion
                // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿対応　-------<<<<<

                default: break;
            }
        }
        #endregion // ツールバー

        // ADD 2014/01/30 吉岡 #41771 ------------>>>>>>>>>>>>>>>>>
        /// <summary>
        /// 異なる税率の有無チェック
        /// </summary>
        /// <param name="errorMessage">エラーメッセージ</param>
        /// <returns>チェックOK(異なる税率が存在しない)：true　、チェックNG(異なる税率が存在する)：false </returns>
        private bool CheckTaxRate(out string errorMessage)
        {
            // 伝票タブが選択されている時は、明細タブの選択処理を実行
            if (this._selectedMainTabKey == "uTab_SlipList")
            {
                SelectAllDetailFromSelectedSlip();
            }

            errorMessage = string.Empty;
            List<double> rateList = new List<double>();
            // 明細選択行が2行以上
            if (this._detailDataSet.SalesDetail.Select("SelectionCheck = true").Length >= 2)
            {
                foreach (CustPtrSalesDetailDataSet.SalesDetailRow row in this._detailDataSet.SalesDetail.Select("SelectionCheck = true"))
                {
                    // 伝票日付を取得
                    string date = row[_detailDataSet.SalesDetail.SalesDateColumn.ColumnName].ToString();
                    DateTime saleDate = DateTime.Parse(date.Substring(0, 10));

                    // 税率設定マスタデータの取得
                    TaxRateSet taxRateSet = null;
                    this.TaxRateSetRead(out taxRateSet);

                    // 税率情報取得
                    double taxRate;
                    if (taxRateSet == null)
                    {
                        errorMessage = "税率情報マスタの取得に失敗しました。";
                        return false;
                    }
                    else
                    {
                        taxRate = this.GetTaxRate(taxRateSet, saleDate);
                    }

                    // 異なる税率が存在するかチェック
                    if (!rateList.Contains(taxRate))
                    {
                        rateList.Add(taxRate);
                        if (rateList.Count >= 2)
                        {
                            errorMessage = "選択された伝票は、異なる消費税率が存在しているため、赤伝発行できません。";
                            return false;
                        }
                    }
                }
            }
            return true;
        }
        #region[税率マスタ取得]
        /// <summary>
        /// 税率設定マスタアクセスクラス
        /// </summary>
        /// <param name="taxRateSet">税率設定情報クラス</param>
        /// <returns>status</returns>
        private int TaxRateSetRead(out TaxRateSet taxRateSet)
        {
            int status = (int)ConstantManagement.MethodResult.ctFNC_ERROR;
            TaxRateSetAcs taxRateSetAcs = new TaxRateSetAcs();
            // 税率設定情報を取得
            status = taxRateSetAcs.Read(out taxRateSet, this._enterpriseCode, 0);
            if (status != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                taxRateSet = null;
            }
            return status;
        }
        /// <summary>
        /// 税率取得(税率設定マスタ)
        /// </summary>
        /// <param name="taxRateSet">税率設定情報</param>
        /// <param name="targetDate">税率適用日</param>
        /// <returns>税率</returns>
        private double GetTaxRate(TaxRateSet taxRateSet, DateTime targetDate)
        {
            return TaxRateSetAcs.GetTaxRate(taxRateSet, targetDate);
        }
        #endregion
        // ADD 2014/01/30 吉岡 #41771 ------------<<<<<<<<<<<<<<<<<<


        #region 残高照会
        /// <summary>
        /// 残高照会グループＢＯＸの展開と縮小を切り替える
        /// </summary>
        /// <remarks>
        /// <br>Note		: 残高照会グループＢＯＸの展開と縮小を切り替える。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009/12/28</br>
        /// <br>Update Note : 2013/02/16 wangf </br>
        /// <br>            : 10801804-00、速度改善関連、Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応</br>
        /// <br>            : ①残高集計をファンクションキー「残高照会(F2)」と連動させる</br>
        /// <br>            : ②検索(F10)後に基本条件を変更時、メッセージを表示時に残高をクリアしないように変更</br>
        /// <br>            : ③検索(F10)後に条件変更が無い場合は、残高集計を実行しても再集計をしないように変更</br>
        /// <br>            : ④「残高集計」ボタンへのフォーカス遷移変更</br>
        /// </remarks>
        private void balanceChartSetting()
        {
            if (this.uExGroupBox_BalanceChart.Expanded)
            {
                // ------------UPD 2010/01/22----------->>>>>
                // 縮小
                //this.uExGroupBox_BalanceChart.Expanded = false;
                //残高照会が展開されている状態で、表示しているタブが合計表示の場合は、残高照会タブに切り替える動作
                if (this.uTabControl_BlDspRslt.SelectedTab == this.uTabControl_BlDspRslt.Tabs["uTabControl_TotalShow"])
                {
                    this.uTabControl_BlDspRslt.SelectedTab = this.uTabControl_BlDspRslt.Tabs["uTabControl_BalanceChart"];
                    // ------------ADD wangf 2013/02/16 FOR Redmine#34513--------->>>>
                    if (this.uButton_Balance.Enabled)
                    {
                        uButton_Balance_Click(this, new EventArgs());
                    }
                    // ------------ADD wangf 2013/02/16 FOR Redmine#34513---------<<<<
                }
                else
                {
                    this.uExGroupBox_BalanceChart.Expanded = false;
                }
                // ------------UPD 2010/01/22-----------<<<<<
            }
            else
            {
                // 展開
                this.uExGroupBox_BalanceChart.Expanded = true;
                // 残高照会表示タブが表示されている
                this.uTabControl_BlDspRslt.SelectedTab = this.uTabControl_BlDspRslt.Tabs["uTabControl_BalanceChart"];
                // ------------ADD wangf 2013/02/16 FOR Redmine#34513--------->>>>
                if (this.uButton_Balance.Enabled)
                {
                    uButton_Balance_Click(this, new EventArgs());
                }
                // ------------ADD wangf 2013/02/16 FOR Redmine#34513---------<<<<
            }
        }
        #endregion

        #region 明細選択
        /// <summary>
        /// 明細選択
        /// </summary>
        /// <remarks>
        /// <br>Note		: 明細選択を行いします。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009/12/28</br>
        /// </remarks>
        private void detailSelectSetting()
        {
            KeyEventArgs e = new KeyEventArgs(Keys.Space);
            if (this.uTabControl.Tabs["uTab_SlipDetail"].Selected)
            {
                uGrid_Detail_KeyDown(null, e);
            }
            else if (this.uTabControl.Tabs["uTab_SlipList"].Selected)
            {
                uGrid_Slip_KeyDown(null, e);
            }
        }
        #endregion

        #region 伝票選択
        /// <summary>
        /// 伝票選択
        /// </summary>
        /// <remarks>
        /// <br>Note		: 伝票選択を行いします。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009/12/28</br>
        /// </remarks>
        private void salesSlipSelectSetting()
        {
            KeyEventArgs e = new KeyEventArgs(Keys.Space);
            if (this.uTabControl.Tabs["uTab_SlipDetail"].Selected)
            {
                detailSelectSetting(e);
            }
            else if (this.uTabControl.Tabs["uTab_SlipList"].Selected)
            {
                uGrid_Slip_KeyDown(null, e);
            }
        }

        /// <summary>
        /// 明細選択
        /// </summary>
        /// <remarks>
        /// <br>Note		: 明細選択を行いします。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009/12/28</br>
        /// </remarks>
        private void detailSelectSetting(System.Windows.Forms.KeyEventArgs e)
        {
            try
            {
                this.uGrid_Detail.BeginUpdate();
                Infragistics.Win.UltraWinGrid.UltraGridRow gridRow = null;
                string salesSlipNo = string.Empty;
                int acptAnOdrStatus = 0;
                if (this.uGrid_Detail.ActiveCell == null && this.uGrid_Detail.ActiveRow != null)
                {
                    this.uGrid_Detail.ActiveCell = this.uGrid_Detail.ActiveRow.Cells[0];
                }
                if (this.uGrid_Detail.ActiveCell != null)
                {
                    gridRow = this.uGrid_Detail.ActiveCell.Row;
                    salesSlipNo = gridRow.Cells[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Value.ToString();
                    acptAnOdrStatus = (int)gridRow.Cells[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName].Value;
                    // 明細表示DataTableのビューを生成
                    DataView detailView = new DataView(this._detailDataSet.SalesDetail);
                    // (フィルタ)
                    detailView.RowFilter = string.Format("{0}='{1}' AND {2}='{3}'",
                                                            this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName, salesSlipNo,
                                                            this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName, acptAnOdrStatus);
                    // (ソート)
                    detailView.Sort = string.Format("{0},{1}",
                                                            this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName,
                                                            this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName);

                    if (detailView.Count > 0)
                    {
                        int rowNo = 0;
                        bool selectionCheckFlg = true;// ADD 2010/01/14
                        foreach (DataRowView rowView in detailView)
                        {
                            // RowViewに対応するRowを取得
                            DataRow detailRow = rowView.Row;

                            // 行を選択
                            rowNo = Int32.Parse(detailRow["RowNo"].ToString());

                            // 明細行を選択
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridDetailRow in this.uGrid_Detail.Rows)
                            {
                                if ((int)gridDetailRow.Cells[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName].Value == rowNo &&
                                    gridDetailRow.Cells[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Value != DBNull.Value &&
                                    (bool)gridDetailRow.Cells[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Value == false)
                                {
                                    selectionCheckFlg = false;// ADD 2010/01/14
                                    RowSelectClicked(gridDetailRow, 1);
                                    break;
                                }
                            }
                        }
                        // -------------ADD 2010/01/14------------>>>>>
                        // 伝票の明細行が全部選択しない場合
                        if (selectionCheckFlg == true)
                        {

                            foreach (DataRowView dataRowView in detailView)
                            {
                                // dataRowViewに対応するRowを取得
                                DataRow detailRow = dataRowView.Row;

                                // 行を選択
                                rowNo = Int32.Parse(detailRow["RowNo"].ToString());

                                // 明細行を選択
                                foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridDetailRow in this.uGrid_Detail.Rows)
                                {
                                    if ((int)gridDetailRow.Cells[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName].Value == rowNo &&
                                        gridDetailRow.Cells[this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Value != DBNull.Value)
                                    {
                                        RowSelectClicked(gridDetailRow, 1);
                                        break;
                                    }
                                }
                            }
                        }
                        // -------------ADD 2010/01/14------------<<<<<
                    }
                }
            }
            finally
            {
                this.uGrid_Detail.EndUpdate();
                // グリッドを更新
                this.uGrid_Detail.Refresh();
            }

        }
        #endregion

        #region 基本条件
        /// <summary>
        /// 基本条件グループＢＯＸの展開と縮小を切り替える
        /// </summary>
        /// <remarks>
        /// <br>Note		: 基本条件グループＢＯＸの展開と縮小を切り替える。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009/12/28</br>
        /// </remarks>
        private void commonConditionSetting()
        {
            if (this.uExGroupBox_CommonCondition.Expanded)
            {
                this.uExGroupBox_CommonCondition.Expanded = false;
            }
            else
            {
                this.uExGroupBox_CommonCondition.Expanded = true;
            }
        }
        #endregion

        #region 抽出条件
        /// <summary>
        /// 抽出条件グループＢＯＸの展開と縮小を切り替える
        /// </summary>
        /// <remarks>
        /// <br>Note		: 抽出条件グループＢＯＸの展開と縮小を切り替える。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009/12/28</br>
        /// </remarks>
        private void extraConditionSetting()
        {
            if (this.uExGroupBox_ExtraCondition.Expanded)
            {
                this.uExGroupBox_ExtraCondition.Expanded = false;
            }
            else
            {
                this.uExGroupBox_ExtraCondition.Expanded = true;
            }
        }
        #endregion

        #region 合計表示
        /// <summary>
        /// 抽出条件グループＢＯＸの展開と縮小を切り替える
        /// </summary>
        /// <remarks>
        /// <br>Note		: 抽出条件グループＢＯＸの展開と縮小を切り替える。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009/12/28</br>
        /// </remarks>
        private void totalShowSetting()
        {
            if (this.uExGroupBox_BalanceChart.Expanded)
            {
                // ------------UPD 2010/01/22----------->>>>>
                // 縮小
                //this.uExGroupBox_BalanceChart.Expanded = false;
                //残高照会が展開されている状態で、表示しているタブが残高照会の場合は、合計表示タブに切り替える動作とする。
                if (this.uTabControl_BlDspRslt.SelectedTab == this.uTabControl_BlDspRslt.Tabs["uTabControl_BalanceChart"])
                {
                    this.uTabControl_BlDspRslt.SelectedTab = this.uTabControl_BlDspRslt.Tabs["uTabControl_TotalShow"];
                }
                else
                {
                    this.uExGroupBox_BalanceChart.Expanded = false;
                }
                // ------------UPD 2010/01/22-----------<<<<<
            }
            else
            {
                // 展開
                this.uExGroupBox_BalanceChart.Expanded = true;
                //合計表示タブが表示されている
                this.uTabControl_BlDspRslt.SelectedTab = this.uTabControl_BlDspRslt.Tabs["uTabControl_TotalShow"];
            }
        }
        #endregion

        #region 行選択

        /// <summary>
        /// フォーカスがグリッドにある場合、選択
        /// </summary>
        private void CurrentRowSelect()
        {
            if (this._selectedMainTabKey == "uTab_SlipList")
            {
                if (this.uGrid_Slip.ActiveRow != null)
                {
                    this.RowSelectClicked(this.uGrid_Slip.ActiveRow, 0);
                }
            }
            else if (this._selectedMainTabKey == "uTab_SlipDetail")
            {
                if (this.uGrid_Detail.ActiveRow != null)
                {
                    this.RowSelectClicked(this.uGrid_Detail.ActiveRow, 0);
                }
            }
        }

        #endregion // 行選択

        #region 設定

        /// <summary>
        /// 設定ダイアログを表示します
        /// </summary>
        private void openSetting()
        {
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
            //PMKAU04004UA settingForm = new PMKAU04004UA();
            //DialogResult dialogResult = settingForm.ShowDialog( this );
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
            DialogResult dialogResult = _settingForm.ShowDialog(this);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
            if (dialogResult == DialogResult.OK)
            {
                // --------ADD 2009/12/28--------->>>>>
                // 行フィルタ
                int allowRowFiltering = _settingForm.UserSetting.AllowRowFiltering;
                // 列交換
                int allowColSwapping = _settingForm.UserSetting.AllowColSwapping;
                // 列固定
                int fixedHeaderIndicator = _settingForm.UserSetting.FixedHeaderIndicator;
                // 伝票グリッドと明細グリッド画面にボタンの表示制御の設定
                adjustGridBotton(allowRowFiltering, allowColSwapping, fixedHeaderIndicator);
                // --------ADD 2009/12/28---------<<<<<
            }
        }

        /// <summary>
        /// 設定画面に明細制御によってグリッドボタンの表示非表示
        /// </summary>
        /// <param name="_allowRowFiltering">行フィルタ</param>
        /// <param name="_allowColSwapping">列交換</param>
        /// <param name="_fixedHeaderIndicator">列固定</param>
        /// <remarks>
        /// <br>Note		: 設定画面に明細制御によってグリッドボタンの表示非表示を行いします。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009/12/28</br>
        /// </remarks>
        private void adjustGridBotton(int _allowRowFiltering, int _allowColSwapping, int _fixedHeaderIndicator)
        {
            // 行フィルタ表示しない
            if (_allowRowFiltering == 1)
            {
                foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn column in this.uGrid_Slip.DisplayLayout.Bands[0].Columns)
                {
                    column.AllowRowFiltering = Infragistics.Win.DefaultableBoolean.False;
                }
                foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn column in this.uGrid_Detail.DisplayLayout.Bands[0].Columns)
                {
                    column.AllowRowFiltering = Infragistics.Win.DefaultableBoolean.False;
                }
            }
            else
            {
                foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn column in this.uGrid_Slip.DisplayLayout.Bands[0].Columns)
                {
                    column.AllowRowFiltering = Infragistics.Win.DefaultableBoolean.True;
                }
                foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn column in this.uGrid_Detail.DisplayLayout.Bands[0].Columns)
                {
                    column.AllowRowFiltering = Infragistics.Win.DefaultableBoolean.True;
                }
            }
            // 列交換表示しない
            if (_allowColSwapping == 1)
            {
                this.uGrid_Detail.DisplayLayout.Override.AllowColSwapping = Infragistics.Win.UltraWinGrid.AllowColSwapping.NotAllowed;
                this.uGrid_Slip.DisplayLayout.Override.AllowColSwapping = Infragistics.Win.UltraWinGrid.AllowColSwapping.NotAllowed;
            }
            else
            {
                this.uGrid_Detail.DisplayLayout.Override.AllowColSwapping = Infragistics.Win.UltraWinGrid.AllowColSwapping.WithinBand;
                this.uGrid_Slip.DisplayLayout.Override.AllowColSwapping = Infragistics.Win.UltraWinGrid.AllowColSwapping.WithinBand;
            }
            // 列固定表示しない
            if (_fixedHeaderIndicator == 1)
            {
                this.uGrid_Detail.DisplayLayout.Override.FixedHeaderIndicator = Infragistics.Win.UltraWinGrid.FixedHeaderIndicator.None;
                this.uGrid_Slip.DisplayLayout.Override.FixedHeaderIndicator = Infragistics.Win.UltraWinGrid.FixedHeaderIndicator.None;
            }
            else
            {
                this.uGrid_Detail.DisplayLayout.Override.FixedHeaderIndicator = Infragistics.Win.UltraWinGrid.FixedHeaderIndicator.Default;
                this.uGrid_Slip.DisplayLayout.Override.FixedHeaderIndicator = Infragistics.Win.UltraWinGrid.FixedHeaderIndicator.Default;
            }
        }
        #endregion // 設定

        #region 伝票再発行

        /// <summary>
        /// 伝票再発行
        /// </summary>
        /// <remarks>
        /// <br>Update Note : 2009/11/25 呉元嘯</br>
        /// <br>              PM.NS保守依頼③ 不具合対応</br>
        /// <br>              ①伝票再発行時の伝票印刷確認ダイアログを出さずに印刷するように修正</br>
        /// <br>              ②伝票再発行後は再発行のチェックボックスを外すように修正</br>
        /// <br>Update Note : 2009/12/15 呉元嘯</br>
        /// <br>              Redmine#1919対応</br>
        /// <br>Update Note : 2010/06/08 呉元嘯</br>
        /// <br>              売上履歴データから伝票再発行を可能へ変更</br>
        /// <br>Update Note : 2010/12/20 yangmj </br>
        /// <br>              伝票印刷制御の修正</br>
        /// </remarks>
        private void ReisssueSlip()
        {
            // DataRow[] rows = this._detailDataSet.SalesList.Select("Selection = true"); // DEL 2009/11/25
            //----------- ADD 2009/11/25 ----------->>>>>
            DataRow[] rows = null;
            // 伝票一覧タブ
            if (this._selectedMainTabKey == "uTab_SlipList")
            {
                rows = this._detailDataSet.SalesList.Select("Selection = true");
            }
            // 明細タブ
            else if (this._selectedMainTabKey == "uTab_SlipDetail")
            {
                rows = this._detailDataSet.SalesDetail.Select("SelectionCheck = true");
            }
            //----------- ADD 2009/11/25 -----------<<<<<
            // 伝票が選択されている場合のみ
            if (rows == null) return;// ADD 2009/11/25
            if (rows.Length > 0)
            {
                #region [DEL 2010/06/08]
                // ----------DEL 2010/06/08----------->>>>>
                ////----------- ADD 2009/11/25 ----------->>>>>
                //// 伝票再発行チェックを追加
                //// 選択された明細内に過去分の明細が存在した場合は、エラーメッセージを表示して、再発行不可とする。
                //string message = "以下の伝票は過去分の為、再発行出来ません。\r\n";
                //string addText = string.Empty;
                //// 明細タブ
                //if (this._selectedMainTabKey == "uTab_SlipDetail")
                //{
                //    foreach (DataRow row in rows)
                //    {
                //        string salesSlipNum = row[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].ToString();
                //        string historyDivName = row[this._detailDataSet.SalesDetail.HistoryDivNameColumn.ColumnName].ToString();
                //        if (!string.IsNullOrEmpty(historyDivName))
                //        {
                //            string text = "伝票番号 " + salesSlipNum;
                //            addText += text + "\r\n";
                //        }
                //    }
                //}
                //if (!string.IsNullOrEmpty(addText))
                //{
                //    TMsgDisp.Show(
                //          this,
                //          emErrorLevel.ERR_LEVEL_EXCLAMATION,
                //          this.Name,
                //          message + "\r\n" + addText,
                //          -1,
                //          MessageBoxButtons.OK);
                //    return;
                //}
                ////----------- ADD 2009/11/25 -----------<<<<<
                // ----------DEL 2010/06/08-----------<<<<<
                #endregion [DEL 2010/06/08]

                // 初期処理
                DCCMN02000UA printDisp = new DCCMN02000UA(); // 伝票印刷情報設定画面インスタンス生成
                SalesSlipPrintCndtn.SalesSlipKey key = new SalesSlipPrintCndtn.SalesSlipKey(); // 伝票印刷用Keyインスタンス生成
                List<SalesSlipPrintCndtn.SalesSlipKey> keyList = new List<SalesSlipPrintCndtn.SalesSlipKey>(); // 伝票印刷用KeyListインスタンス生成
                // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
                _pdfOutputSlipKey = new List<SalesSlipPrintCndtn.SalesSlipKey>();
                List<SalesSlipPrintCndtn.SalesSlipKey> pdfKeyList = new List<SalesSlipPrintCndtn.SalesSlipKey>(); // 伝票印刷用KeyListインスタンス生成
                Dictionary<string, CustomerInfo> pdfCustomerDic = new Dictionary<string, CustomerInfo>();
                _pdfPrintEnable = false;
                // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
                // キー情報セット
                foreach (DataRow row in rows)
                {
                    key = new SalesSlipPrintCndtn.SalesSlipKey();
                    //-------- UPD 2009/11/25 -------->>>>>
                    // 伝票一覧タブ
                    if (this._selectedMainTabKey == "uTab_SlipList")
                    {
                        //-------- UPD 2010/12/20 -------->>>>>
                        int customerCode = (int)row[this._detailDataSet.SalesList.CustomerCodeColumn.ColumnName];
                        int custAcptAnOdrStatus = (int)row[this._detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName];
                        int salesSlipPrtDiv = -1;
                        int shipmSlipPrtDiv = -1;
                        int acpOdrrSlipPrtDiv = -1;
                        bool customerFlag = false;
                        bool customerShipFlag = false;
                        bool customerAcpFlag = false;
                        // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
                        _pdfPrintEnable = false;
                        // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<

                        CustomerInfo customerInfo;
                        int status = this._customerInfoAcs.ReadDBData(this._enterpriseCode, customerCode, out customerInfo);
                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            salesSlipPrtDiv = customerInfo.SalesSlipPrtDiv; // 得意先マスタの売上伝票発行区分
                            acpOdrrSlipPrtDiv = customerInfo.AcpOdrrSlipPrtDiv;// 得意先マスタの受注伝票発行区分
                            shipmSlipPrtDiv = customerInfo.ShipmSlipPrtDiv;// 得意先マスタの出荷伝票発行区分
                        }

                        if (custAcptAnOdrStatus == 30)
                        {
                            // 得意先マスタの売上伝票発行区分「0:標準」の場合：売上全体設定を参照する
                            if (salesSlipPrtDiv == 0)
                            {
                                //売上全体設定の売上伝票発行区分「0:する」の場合：印刷する
                                if (_salesTtlSt.SalesSlipPrtDiv == 0)
                                {
                                    customerFlag = true;
                                    // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
                                    _pdfPrintEnable = true;
                                    // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
                                }
                            }

                            //得意先マスタの売上伝票発行区分「2:使用」の場合：：印刷する
                            else if (salesSlipPrtDiv == 2)
                            {
                                customerFlag = true;
                                // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
                                _pdfPrintEnable = true;
                                // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
                            }
                        }
                        else if (custAcptAnOdrStatus == 40)
                        {
                            // 得意先マスタの出荷伝票発行区分「0:標準」の場合：売上全体設定を参照する
                            if (shipmSlipPrtDiv == 0)
                            {
                                //売上全体設定の出荷伝票発行区分「0:する」の場合：印刷する
                                if (_salesTtlSt.ShipmSlipPrtDiv == 0)
                                {
                                    customerShipFlag = true;
                                }
                            }
                            //得意先マスタの出荷伝票発行区分「2:使用」の場合：：印刷する
                            else if (shipmSlipPrtDiv == 2)
                            {
                                customerShipFlag = true;
                            }
                        }
                        else if (custAcptAnOdrStatus == 20)
                        {
                            // 得意先マスタの受注伝票発行区分「0:標準」の場合：売上全体設定を参照する
                            if (acpOdrrSlipPrtDiv == 0)
                            {
                                //売上全体設定の売上伝票発行区分「1:する」の場合：印刷する
                                if (_acptAnOdrTtlSt.AcpOdrrSlipPrtDiv == 1)
                                {
                                    customerAcpFlag = true;
                                }
                            }
                            //得意先マスタの受注伝票発行区分「2:使用」の場合：：印刷する
                            else if (acpOdrrSlipPrtDiv == 2)
                            {
                                customerAcpFlag = true;
                            }
                        }

                        if (customerFlag || customerShipFlag || customerAcpFlag)
                        {
                            key.AcptAnOdrStatus = (int)row[this._detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName];
                            key.SalesSlipNum = row[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].ToString();
                            keyList.Add(key);
                            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
                            // PDF電帳出力
                            if (_pdfPrintEnable) 
                            {
                                if (pdfKeyList.Count == 0 || !pdfKeyList.Contains(key))
                                {
                                    pdfKeyList.Add(key);
                                }

                                if (pdfCustomerDic.Count == 0 || !pdfCustomerDic.ContainsKey(key.SalesSlipNum))
                                {
                                    pdfCustomerDic.Add(key.SalesSlipNum, customerInfo);
                                }
                            }
                            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
                        }
                        //key.AcptAnOdrStatus = (int)row[this._detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName];
                        //key.SalesSlipNum = row[this._detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].ToString();
                        //keyList.Add(key);
                        //-------- UPD 2010/12/20 --------<<<<<
                    }
                    // 明細タブ
                    else if (this._selectedMainTabKey == "uTab_SlipDetail")
                    {
                        //-------- UPD 2010/12/20 -------->>>>>
                        int customerCode = (int)row[this._detailDataSet.SalesList.CustomerCodeColumn.ColumnName];
                        int custAcptAnOdrStatus = (int)row[this._detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName];
                        int salesSlipPrtDiv = -1;
                        int shipmSlipPrtDiv = -1;
                        int acpOdrrSlipPrtDiv = -1;
                        bool customerFlag = false;
                        bool customerShipFlag = false;
                        bool customerAcpFlag = false;
                        // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
                        _pdfPrintEnable = false;
                        // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<

                        CustomerInfo customerInfo;
                        int status = this._customerInfoAcs.ReadDBData(this._enterpriseCode, customerCode, out customerInfo);
                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            salesSlipPrtDiv = customerInfo.SalesSlipPrtDiv; // 得意先マスタの売上伝票発行区分
                            acpOdrrSlipPrtDiv = customerInfo.AcpOdrrSlipPrtDiv;// 得意先マスタの受注伝票発行区分
                            shipmSlipPrtDiv = customerInfo.ShipmSlipPrtDiv;// 得意先マスタの出荷伝票発行区分
                        }
                        if (custAcptAnOdrStatus == 30)
                        {
                            // 得意先マスタの売上伝票発行区分「0:標準」の場合：売上全体設定を参照する
                            if (salesSlipPrtDiv == 0)
                            {
                                //売上全体設定の売上伝票発行区分「0:する」の場合：印刷する
                                if (_salesTtlSt.SalesSlipPrtDiv == 0)
                                {
                                    customerFlag = true;
                                    // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
                                    _pdfPrintEnable = true;
                                    // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
                                }
                            }

                            //得意先マスタの売上伝票発行区分「2:使用」の場合：：印刷する
                            else if (salesSlipPrtDiv == 2)
                            {
                                customerFlag = true;
                                // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
                                _pdfPrintEnable = true;
                                // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
                            }
                        }
                        else if (custAcptAnOdrStatus == 40)
                        {
                            // 得意先マスタの出荷伝票発行区分「0:標準」の場合：売上全体設定を参照する
                            if (shipmSlipPrtDiv == 0)
                            {
                                //売上全体設定の出荷伝票発行区分「0:する」の場合：印刷する
                                if (_salesTtlSt.ShipmSlipPrtDiv == 0)
                                {
                                    customerShipFlag = true;
                                }
                            }
                            //得意先マスタの出荷伝票発行区分「2:使用」の場合：：印刷する
                            else if (shipmSlipPrtDiv == 2)
                            {
                                customerShipFlag = true;
                            }
                        }
                        else if (custAcptAnOdrStatus == 20)
                        {
                            // 得意先マスタの受注伝票発行区分「0:標準」の場合：売上全体設定を参照する
                            if (acpOdrrSlipPrtDiv == 0)
                            {
                                //売上全体設定の売上伝票発行区分「1:する」の場合：印刷する
                                if (_acptAnOdrTtlSt.AcpOdrrSlipPrtDiv == 1)
                                {
                                    customerAcpFlag = true;
                                }
                            }
                            //得意先マスタの受注伝票発行区分「2:使用」の場合：：印刷する
                            else if (acpOdrrSlipPrtDiv == 2)
                            {
                                customerAcpFlag = true;
                            }
                        }

                        if (customerFlag || customerShipFlag || customerAcpFlag)
                        {
                            key.AcptAnOdrStatus = (int)row[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName];
                            key.SalesSlipNum = row[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].ToString();
                            if (keyList.Count == 0 || !keyList.Contains(key))
                            {
                                keyList.Add(key);
                            }
                            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
                            // 電帳PDF出力
                            if (_pdfPrintEnable)
                            {
                                if (pdfKeyList.Count == 0 || !pdfKeyList.Contains(key))
                                {
                                    pdfKeyList.Add(key);
                                }
                                if (pdfCustomerDic.Count == 0 || !pdfCustomerDic.ContainsKey(key.SalesSlipNum))
                                {
                                    pdfCustomerDic.Add(key.SalesSlipNum, customerInfo);
                                }
                            }
                            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<                                                        
                        }

                        //key.AcptAnOdrStatus = (int)row[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName];
                        //key.SalesSlipNum = row[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].ToString();
                        //if (keyList.Count == 0 || !keyList.Contains(key))
                        //{
                        //    keyList.Add(key);
                        //}
                        //-------- UPD 2010/12/20 --------<<<<<
                    }
                    //-------- UPD 2009/11/25 --------<<<<<
                }

                // 印刷情報パラメータセット
                SalesSlipPrintCndtn salesSlipPrintCndtn = new SalesSlipPrintCndtn();
                salesSlipPrintCndtn.EnterpriseCode = this._enterpriseCode;
                salesSlipPrintCndtn.SalesSlipKeyList = keyList;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/26 ADD
                salesSlipPrintCndtn.ReissueDiv = true; // 再発行=true
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/26 ADD

                // --- UPD 2009/11/25 ---------->>>>>
                // 印刷ウィンドウ表示
                //printDisp.ShowDialog(salesSlipPrintCndtn, false);
                // 確認ダイアログ
                if (TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_QUESTION, this.Name,
                    MSG_CONFIRM_PRINTDISP,
                    -1, MessageBoxButtons.YesNo) == DialogResult.No)
                {
                    return;
                }
                //-------- UPD 2010/12/20 -------->>>>>
                if (keyList.Count > 0)
                {
                    // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
                    // 通常印刷
                    CustPrtSlipSearchAcs.PDFPrinterStatus = (int)PDFPrint.Usually;
                    // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
                    // UPD 2013/04/19 T.Miyamoto ------------------------------>>>>>
                    //printDisp.ShowDialog(salesSlipPrintCndtn, true);
                    printDisp.ShowDialog(salesSlipPrintCndtn, !(_settingForm.UserSetting.ReisssuePrintDialog));
                    // UPD 2013/04/19 T.Miyamoto ------------------------------<<<<<
                    // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
                    if (this._settingForm._opt_EBooksLink == (int)Option.ON)
                    {
                        eBooksOutputSetting eBookSetting = this._settingForm.geteBooksOutputSetting();
                        // 出力伝票区分 0:両方選択なし/1:赤伝/2:再発行/3:両方選択あ
                        switch (Convert.ToInt32(eBookSetting.OutputSlipType))
                        {
                            // 2:再発行
                            // 3:両方選択あ
                            case (Int32)outPutSlipTypeEnum.RePrintChecked:
                            case (Int32)outPutSlipTypeEnum.All:
                                // 電子元帳　PDFファイル出力
                                pdfOutPut_EbooksLink(pdfKeyList, 0, false, 0, pdfCustomerDic);
                                // 電子帳簿出力==>通常印刷設定
                                CustPrtSlipSearchAcs.PDFPrinterStatus = (int)PDFPrint.Usually;
                                break;
                            default:
                                break;
                        }
                    }
                    // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
                }
                //printDisp.ShowDialog(salesSlipPrintCndtn, true);
                //-------- UPD 2010/12/20 --------<<<<<

                #region タブチェック削除
                string rowNoColName = string.Empty;
                string dataDivColName = string.Empty;
                string selectionColName = string.Empty;
                // 変数初期化
                this._selectedRowCountDetail = 0;
                this._selectedSectionCd = string.Empty;
                this._selectedCustomerCd = 0;
                this._selectedSlipNoCd = string.Empty;
                this.slipCd = string.Empty;
                //伝票タブチェック削除
                rowNoColName = this._detailDataSet.SalesList.RowNoColumn.ColumnName;
                dataDivColName = this._detailDataSet.SalesList.DataDivColumn.ColumnName;
                selectionColName = this._detailDataSet.SalesList.SelectionColumn.ColumnName;
                foreach (Infragistics.Win.UltraWinGrid.UltraGridRow salesListRow in this.uGrid_Slip.Rows)
                {
                    // 売上の場合（入金データ以外）
                    // -----------UPD 2009/12/15------------>>>>>
                    // if (salesListRow.Cells[dataDivColName].Value != DBNull.Value && (int)salesListRow.Cells[dataDivColName].Value == 0 && (bool)salesListRow.Cells[selectionColName].Value == true)
                    if (salesListRow.Cells[dataDivColName].Value != DBNull.Value && (int)salesListRow.Cells[dataDivColName].Value == 0 && salesListRow.Cells[selectionColName].Value != DBNull.Value)
                    {
                        if ((bool)salesListRow.Cells[selectionColName].Value == true)
                        {
                            DataRow denRow = this._detailDataSet.Tables["SalesList"].Rows.Find((int)salesListRow.Cells[rowNoColName].Value);
                            denRow[selectionColName] = false;
                            RowBackColorChange(denRow, 0, false, salesListRow);
                        }
                    }
                    // -----------UPD 2009/12/15------------<<<<<
                }
                // グリッドを更新
                this.uGrid_Slip.Refresh();
                adjustButtonEnable(0);
                //明細表示タブチェック削除
                rowNoColName = this._detailDataSet.SalesDetail.RowNoColumn.ColumnName;
                dataDivColName = this._detailDataSet.SalesDetail.DataDivColumn.ColumnName;
                selectionColName = this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName;
                foreach (Infragistics.Win.UltraWinGrid.UltraGridRow salesDetailRow in this.uGrid_Detail.Rows)
                {
                    // 売上の場合（入金データ以外）
                    // -----------UPD 2009/12/15------------>>>>>
                    //if (salesDetailRow.Cells[dataDivColName].Value != DBNull.Value && (int)salesDetailRow.Cells[dataDivColName].Value == 0 && (bool)salesDetailRow.Cells[selectionColName].Value == true)
                    if (salesDetailRow.Cells[dataDivColName].Value != DBNull.Value && (int)salesDetailRow.Cells[dataDivColName].Value == 0 && salesDetailRow.Cells[selectionColName].Value != DBNull.Value)
                    {
                        if ((bool)salesDetailRow.Cells[selectionColName].Value == true)
                        {
                            DataRow denRow = this._detailDataSet.Tables["SalesDetail"].Rows.Find((int)salesDetailRow.Cells[rowNoColName].Value);
                            denRow[selectionColName] = false;
                            RowBackColorChange(denRow, 1, false, salesDetailRow);
                            AttachRedSlipDataSet(false, denRow);
                        }
                    }
                    // -----------UPD 2009/12/15------------<<<<<
                }
                // グリッドを更新
                adjustButtonEnable(1);
                this.uGrid_Detail.Refresh();
                #endregion
                // --- UPD 2009/11/25 ----------<<<<<
                // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
                if ((this._settingForm._opt_EBooksLink == (int)Option.ON) && (_pdfOutputSlipKey.Count > 0))
                {
                    // 電子帳簿受け渡し用フォルダ取得
                    EBooksLinkSetInfo eBooksFileFolderXmlInfo = GetEBooksLinkSetInfo();

                    // インデックスファイル
                    List<DenchoDXIndexCSVEntity> denchoDXIndexCSVEntityList;
                    MakeIndexFile(_pdfOutputSlipKey, eBooksFileFolderXmlInfo, out denchoDXIndexCSVEntityList);

                    // 取引先リスト作成
                    DenchoDXCustomerExportAcs denchoDXCustomerExportAcs = new DenchoDXCustomerExportAcs();
                    denchoDXCustomerExportAcs.MakeCustomerCSVDifference(LoginInfoAcquisition.EnterpriseCode, eBooksFileFolderXmlInfo.CustomFolder + string.Format(CT_CUSTOMERFLPATH, DateTime.Now.ToString(CT_DATETIMEFOMART)));

                    // ログ出力
                    OutEBooksLog(DateTime.Now, denchoDXIndexCSVEntityList);

                    // 電帳pdf出力情報クリア
                    _pdfOutputSlipKey.Clear();
                }
                
                // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
            }
        }

        #endregion

        #region 印刷

        /// <summary>
        /// 印刷
        /// </summary>
        /// <param name="pdfOut"></param>
        /// <br>Update Note : 2011/10/27 yangmj </br>
        /// <br>              redmine#26291 原価印字の修正</br>
        /// <br>Update Note : 2012/11/15 yangmj</br>
        /// <br>管理番号    : 10801804-00 20130116配信分</br>
        /// <br>              Redmine#33269　請求先情報の印刷の対応</br>
		/// <br>Update Note : 2013/01/10 wangf </br>
		/// <br>            : 10801804-00、Redmine#31740の対応</br>
		/// <br>            : 仕入先電子元帳のウインドウからの得意先電子元帳を起動するとグローバル変数初期化。</br>
        /// <br>Update Note : 2013/01/30 wangf </br>
        /// <br>            : 10801804-00、速度改善関連、Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応</br>
        /// <br>            : 残高集計のタイミングをずらす</br>
        /// <br>Update Note : 2013/02/16 wangf </br>
        /// <br>            : 10801804-00、速度改善関連、Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応</br>
        /// <br>            : ①残高集計をファンクションキー「残高照会(F2)」と連動させる</br>
        /// <br>            : ②検索(F10)後に基本条件を変更時、メッセージを表示時に残高をクリアしないように変更</br>
        /// <br>            : ③検索(F10)後に条件変更が無い場合は、残高集計を実行しても再集計をしないように変更</br>
        /// <br>            : ④「残高集計」ボタンへのフォーカス遷移変更</br>
        private void Print(bool pdfOut)
        {
            // 明細一覧が存在しない場合は実行不能
            if (this._detailDataSet.SalesDetail.Rows.Count == 0)
            {
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                    MSG_NO_SELECTED_DATA, -1, MessageBoxButtons.OK);
                return;
            }
            //-----ADD 2011/10/27----->>>>>
            //原価を印刷画面
            PMKAU04001UD genKaDialog = new PMKAU04001UD();
            genKaDialog.ShowDialog();
            if (genKaDialog.DResult == DialogResult.Cancel)
            {
                return;
            }
            //-----ADD 2011/10/27-----<<<<<
            // 印刷オブジェクト呼び出し
            SFCMN06001U printDialog = new SFCMN06001U();
            SFCMN06002C printInfo = new SFCMN06002C();
            DCCMN04000UA printControl = new DCCMN04000UA();

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/15 DEL
            //printInfo.printmode = (pdfOut) ? 2 : 3;    // 2：プレビュー、3：印刷
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/15 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/15 ADD
            printInfo.printmode = (pdfOut) ? 2 : 1;    // 2：PDF表示のみ、1：印刷のみ
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/15 ADD
            printInfo.pdfopen = false;
            printInfo.pdftemppath = "";

            // 直接印刷バージョン
            printInfo.enterpriseCode = this._enterpriseCode;
            printInfo.kidopgid = "PMKAU04001U";				// 起動PGID

            // PDF出力履歴用
            printInfo.prpnm = "";
            //printInfo.PrintPaperSetCd = 0;

            PrintCndtn printCondition = new PrintCndtn();
            //string printSectionCd = this.tEdit_SectionCodeAllowZero.Text.Trim(); //DEL YANGMJ 2012/11/15 for redmine#33269
            //----- ADD YANGMJ 2012/11/15 for redmine#33269 ----->>>>>
            string CustomerNm = string.Empty;
            // 判断条件は前回検索条件を設定する
            string printSectionCd = "00";
            if (null != this._custPrtPprBackUp.SectionCode)
            {
                printSectionCd = this._custPrtPprBackUp.SectionCode[0].Trim();
            }
            //----- ADD YANGMJ 2012/11/15 for redmine#33269 -----<<<<<

            if (printSectionCd == "00") printSectionCd = string.Empty;   // 00は選択なし
            //string printCustomerCd = this.tNedit_CustomerCode.Text.Trim(); //DEL YANGMJ 2012/11/15 for redmine#33269
            // 判断条件は前回検索条件を設定する
            //----- ADD YANGMJ 2012/11/15 for redmine#33269 ----->>>>>
            string printCustomerCd = string.Empty;
            if (this._custPrtPprBackUp.CustomerCode != 0)
            {
                printCustomerCd = this._custPrtPprBackUp.CustomerCode.ToString().Trim();
            }
            //----- ADD YANGMJ 2012/11/15 for redmine#33269 -----<<<<<
            string customerMngSectionCd = string.Empty;
            int customerClaimCd = 0;
            int status = 0;
            //-----ADD 2011/10/27----->>>>>
            printCondition.GenKaDispDiv = genKaDialog.GenKaDiv;//原価表示区分
            //-----ADD 2011/10/27-----<<<<<
            if (!String.IsNullOrEmpty(printCustomerCd))
            {
                // 得意先マスタから管理拠点を取得
                CustomerInfo customerInfo;
                status = this._customerInfoAcs.ReadDBData(this._enterpriseCode, this.tNedit_CustomerCode.GetInt(), out customerInfo);
                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                {
                    //customerMngSectionCd = customerInfo.MngSectionCode; // 得意先マスタの管理拠点コード//DEL YANGMJ 2012/11/15 for redmine#33269
                    //----- ADD YANGMJ 2012/11/15 for redmine#33269 ----->>>>>
                    // 得意先マスタの請求拠点コード
                    customerMngSectionCd = customerInfo.ClaimSectionCode.Trim();
                    CustomerNm = customerInfo.CustomerSnm.Trim();
                    //----- ADD YANGMJ 2012/11/15 for redmine#33269 -----<<<<<
                    customerClaimCd = customerInfo.ClaimCode;           // 得意先マスタの請求先
                }
            }

            // レイアウトのタイプを計算
            if (!String.IsNullOrEmpty(printSectionCd) && !String.IsNullOrEmpty(printCustomerCd))
            {
                // 拠点コード あり, 得意先コード あり
                if (printSectionCd.Equals(customerMngSectionCd))
                {
                    //----- DEL YANGMJ 2012/11/15 for redmine#33269 ----->>>>>
                    //// 管理拠点コード = 画面の拠点コード
                    //printCondition.LayoutType = 1;
                    //printInfo.PrintPaperSetCd = 0;// レイアウトA
                    //----- DEL YANGMJ 2012/11/15 for redmine#33269 -----<<<<<
                    //----- ADD YANGMJ 2012/11/15 for redmine#33269 ----->>>>>
                    if (customerClaimCd == this._custPrtPprBackUp.CustomerCode)
                    {
                        // 請求拠点コード = 画面の拠点コード AND 得意先コード = 得意先マスタの請求先
                        printCondition.LayoutType = 1;
                        // ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
                        // 残高集計情報が無しの場合、残高情報印刷しない
                        if (!(bool)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ExistsTotalColumn])
                        {
                            printCondition.LayoutType = 2;
                        }
                        // ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<
                        printInfo.PrintPaperSetCd = 0;// レイアウトA
                    }
                    else
                    {
                        // 請求拠点コード = 画面の拠点コード AND 得意先コード != 得意先マスタの請求先
                        printCondition.LayoutType = 2;
                        printInfo.PrintPaperSetCd = 0;// レイアウトA
                    }
                    //----- ADD YANGMJ 2012/11/15 for redmine#33269 -----<<<<<
                }
                else
                {
                    // 管理拠点コード != 画面の拠点コード
                    printCondition.LayoutType = 2;
                    printInfo.PrintPaperSetCd = 0;// レイアウトA
                }
            }
            if (!String.IsNullOrEmpty(printSectionCd) && String.IsNullOrEmpty(printCustomerCd))
            {
                // 拠点コード あり, 得意先コード なし
                printCondition.LayoutType = 3;
                printInfo.PrintPaperSetCd = 1;// レイアウトB
            }
            if (String.IsNullOrEmpty(printSectionCd) && !String.IsNullOrEmpty(printCustomerCd))
            {
                // 拠点コード なし, 得意先コード あり
                //if (customerClaimCd == this.tNedit_CustomerCode.GetInt())// DEL YANGMJ 2012/11/15 for redmine#33269
                if (customerClaimCd == this._custPrtPprBackUp.CustomerCode)// ADD YANGMJ 2012/11/15 for redmine#33269
                {
                    // 得意先コード = 得意先マスタの請求先
                    printCondition.LayoutType = 4;
                    // ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
                    // 残高集計情報が無しの場合、残高情報印刷しない
                    if (!(bool)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ExistsTotalColumn])
                    {
                        printCondition.LayoutType = 5;
                    }
                    // ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<
                    printInfo.PrintPaperSetCd = 0;// レイアウトA
                }
                else
                {
                    // 得意先コード != 得意先マスタの請求先
                    printCondition.LayoutType = 5;
                    printInfo.PrintPaperSetCd = 0;// レイアウトA
                }
            }
            if (String.IsNullOrEmpty(printSectionCd) && String.IsNullOrEmpty(printCustomerCd))
            {
                // 拠点コード なし, 得意先コード なし
                printCondition.LayoutType = 6;
                printInfo.PrintPaperSetCd = 1;// レイアウトB
            }
            //----- DEL YANGMJ 2012/11/15 for redmine#33269 ----->>>>>
            //printCondition.SectionCd = this.tEdit_SectionCodeAllowZero.Text.Trim();
            //printCondition.SectionName = this.uLabel_SectionNm.Text.Trim();
            //printCondition.CustomerCd = this.tNedit_CustomerCode.Text.Trim().PadLeft(8, '0');
            //printCondition.CustomerName = this.uLabel_CustomerName.Text.Trim();
            //printCondition.StartDt = this.tDateEdit_SalesDateSt.GetDateTime();
            //printCondition.EndDt = this.tDateEdit_SalesDateEd.GetDateTime();
            //----- DEL YANGMJ 2012/11/15 for redmine#33269 -----<<<<<

            //----- ADD YANGMJ 2012/11/15 for redmine#33269 ----->>>>>
            printCondition.SectionCd = printSectionCd;
            string sectionName = string.Empty;

            if (printSectionCd == "00")
            {
                sectionName = "全社";
            }
            else
            {
                // 拠点情報を取得
                SecInfoSet sectionInfo;
                int sectionSstatus = this._secInfoSetAcs.Read(out sectionInfo, this._enterpriseCode, printCondition.SectionCd);
                if (sectionSstatus == (int)ConstantManagement.DB_Status.ctDB_NORMAL && sectionInfo.LogicalDeleteCode == 0)
                {
                    sectionName = sectionInfo.SectionGuideNm.TrimEnd();
                }
            }
            printCondition.SectionName = sectionName;
            printCondition.CustomerCd = this._custPrtPprBackUp.CustomerCode.ToString().Trim().PadLeft(8, '0');
            printCondition.CustomerName = CustomerNm;
            printCondition.StartDt = this._custPrtPprBackUp.St_SalesDate;
            printCondition.EndDt = this._custPrtPprBackUp.Ed_SalesDate;
            //----- ADD YANGMJ 2012/11/15 for redmine#33269 -----<<<<<
            if (!String.IsNullOrEmpty(printCustomerCd))
            {
                // DEL 2009/05/18 ------>>>
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
                //if ( this._detailDataSet.BalanceTotal.Rows.Count > 0 )
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD
                // DEL 2009/05/18 ------<<<

                // ADD 2009/05/18 ------>>>
                // データ表示有りを条件に追加
                if ((this._detailDataSet.BalanceTotal.Rows.Count > 0) &&
                    ((bool)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ExistsTotalColumn]))
                // ADD 2009/05/18 ------<<<
                {
                    printCondition.TotalDt = this._prevTotalDay;
                    //printCondition.LastTimeDemand = long.Parse(this._detailDataSet.BalanceTotal.Rows[0]["LastTimeDemand"].ToString());// DEL YANGMJ 2012/11/15 for redmine#33269
                    //前々々回残高 + 前々回残高 + 前回残高
                    printCondition.LastTimeDemand = long.Parse(this._detailDataSet.BalanceTotal.Rows[0]["LastTimeDemand"].ToString()) + long.Parse(this._detailDataSet.BalanceTotal.Rows[0]["AcpOdrTtl2TmBfBlDmd"].ToString()) + long.Parse(this._detailDataSet.BalanceTotal.Rows[0]["AfCalDemandPrice"].ToString());// ADD YANGMJ 2012/11/15 for redmine#33269
                    printCondition.ThisTimeDmdNrml = long.Parse(this._detailDataSet.BalanceTotal.Rows[0]["ThisTimeDmdNrml"].ToString());
                    //printCondition.ForwardedAmount = long.Parse(this._detailDataSet.BalanceTotal.Rows[0]["LastTimeDemand"].ToString()) - long.Parse(this._detailDataSet.BalanceTotal.Rows[0]["ThisTimeDmdNrml"].ToString());// DEL YANGMJ 2012/11/15 for redmine#33269
                    //前々々回残高 + 前々回残高 + 前回残高 - 今回入金額
                    printCondition.ForwardedAmount = printCondition.LastTimeDemand - long.Parse(this._detailDataSet.BalanceTotal.Rows[0]["ThisTimeDmdNrml"].ToString());// ADD YANGMJ 2012/11/15 for redmine#33269
                    printCondition.ThisSalesPriceTotal = long.Parse(this._detailDataSet.BalanceTotal.Rows[0]["ThisSalesPriceTotal"].ToString());
                    printCondition.OfsThisSalesTax = long.Parse(this._detailDataSet.BalanceTotal.Rows[0]["OfsThisSalesTax"].ToString());
                    printCondition.TotalAmount = long.Parse(this._detailDataSet.BalanceTotal.Rows[0]["ThisSalesPriceTotal"].ToString()) + long.Parse(this._detailDataSet.BalanceTotal.Rows[0]["OfsThisSalesTax"].ToString());
                    printCondition.AfCalBlc = long.Parse(this._detailDataSet.BalanceTotal.Rows[0]["AfCalBlc"].ToString());
                    printCondition.SlipCount = long.Parse(this._detailDataSet.BalanceTotal.Rows[0]["SlipCount"].ToString());
                }
            }
            printInfo.jyoken = (object)printCondition;

            // データ作成
            DataTable dt = null;
            GetPrintDataSetFromDataView(out dt);
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 DEL
            //printInfo.rdData = dt;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
            DataView dtView = new DataView(dt);
            //dtView.Sort = this.GetPrintSortString(); //DEL 董桂鈺　2012/10/18 for Redmine#32869
            printInfo.rdData = dtView;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/14 ADD
            printInfo.key = dtView.Table.TableName;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/14 ADD

            printDialog.PrintInfo = printInfo;
            DialogResult result = printDialog.ShowDialog(this);
            if (result == DialogResult.Cancel)
            {
                return;
            }

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
            if (printInfo.pdfopen)
            {
				//PMKAU04001UB pdfForm = new PMKAU04001UB((this.Parent as Form));// DEL wangf 2013/01/10 FOR Redmine#31740
				// ------------ADD wangf 2013/01/10 FOR Redmine#31740--------->>>>
				PMKAU04001UB pdfForm;
				// プライベートレベルでPGID
				if (!string.IsNullOrEmpty(this._invokerPgId))
				{
					pdfForm = new PMKAU04001UB(this as Form);
				}
				else
				{
					pdfForm = new PMKAU04001UB(this.Parent as Form);
				}
				// ------------ADD wangf 2013/01/10 FOR Redmine#31740---------<<<<
                try
                {
                    //-----------------------------------------------------
                    // 【注意】
                    // Debugモードの場合、１度でもPDF表示すると
                    // 電子元帳本体を閉じる際にエラー発生します。
                    //
                    // DCCMN04000UBのDispose内のPDFShowのタイミングで発生。
                    // →「基になるRCWから分割されたCOMオブジェクトを使うことはできません。」
                    // 
                    // Releaseモードでビルドすると発生しません。
                    //-----------------------------------------------------
                    pdfForm.PDFShow(printInfo.pdftemppath);
                }
                finally
                {
                    // --- ADD m.suzuki 2010/11/02 ---------->>>>>
                    pdfForm.Close();
                    // --- ADD m.suzuki 2010/11/02 ----------<<<<<
                    pdfForm.Dispose();
                }
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD

            //int status = printControl.Print(printInfo);
            //if (status == (int)ConstantManagement.MethodResult.ctFNC_NORMAL)
            //{
            //    if (preview)
            //    {
            //        //this.printControl.PDFViewer.Dock = DockStyle.Fill;
            //        //this.uTab_View.Controls.Add(this._printControl.PDFViewer);
            //        //this.uTabControl.Tabs[TAB_PREVIEW].Visible = true;
            //        //this.uTabControl.SelectedTab = this.uTabControl.Tabs[TAB_PREVIEW];
            //    }
            //}
        }

        /// <summary>
        /// 印刷用データテーブル生成
        /// </summary>
        /// <param name="dt"></param>
        private void GetPrintDataSetFromDataView(out DataTable dt)
        {
            //printData = null;

            // 明細グリッドからDataSetを作成
            //DataView dView = (DataView)this.uGrid_Detail.DataSource;
            //DataTable dTable = dView.ToTable();

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/14 DEL
            //dt = new DataTable();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/14 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/14 ADD
            dt = new DataTable("SalesDetailForPrint");
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/14 ADD
            DataRow row = null;
            dt.Columns.Add("SectionCd2");
            dt.Columns.Add("SectionName2");
            dt.Columns.Add("CustomerCd2");
            dt.Columns.Add("CustomerName2");
            dt.Columns.Add(this._detailDataSet.SalesDetail.AddUpADateColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.SalesEmployeeNmColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.FrontEmployeeNmColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.SalesInputNameColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.ModelFullNameColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.FullModelColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.CustSlipNoColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.FrameNoColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.GoodsNameColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName);
            dt.Columns.Add("ConsumeTax");
            dt.Columns.Add(this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName);
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
            dt.Columns.Add(this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.DataDivColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName);
            dt.Columns.Add(this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD
            dt.Columns.Add(this._detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName); //ADD liusy 2012/08/08 for Redmine#31530
            dt.Columns.Add(this._detailDataSet.SalesDetail.ConsTaxRateColumn.ColumnName); // ADD 時シン 2020/03/11 PMKOBETSU-2912


            //foreach (DataRow rowOrg in this._detailDataSet.SalesDetail.Rows) // DEL 董桂鈺　2012/10/18 for Redmine#32869
            //foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_Detail.Rows)
            //---- DEL 董桂鈺　2012/10/18 for Redmine#32869 --------------------->>>>>>>>
            //{
            //    if (rowOrg[this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName].ToString() != "入金")
            //    {
            //        row = dt.NewRow();
            //        row["SectionCd2"] = rowOrg[this._detailDataSet.SalesDetail.SectionCdColumn.ColumnName];
            //        row["SectionName2"] = rowOrg[this._detailDataSet.SalesDetail.SectionGuideNameColumn.ColumnName];
            //        row["CustomerCd2"] = rowOrg[this._detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName];
            //        row["CustomerName2"] = rowOrg[this._detailDataSet.SalesDetail.CustomerSnmColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.AddUpADateColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.AddUpADateColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.SalesEmployeeNmColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.SalesEmployeeNmColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.FrontEmployeeNmColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.FrontEmployeeNmColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.SalesInputNameColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.SalesInputNameColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.ModelFullNameColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.ModelFullNameColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.FullModelColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.FullModelColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.CustSlipNoColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.CustSlipNoColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.FrameNoColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.FrameNoColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.GoodsNameColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.GoodsNameColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName];
            //        row["ConsumeTax"] = rowOrg[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName];
            //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/25 ADD
            //        row[this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.DataDivColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.DataDivColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName];
            //        row[this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName];
            //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/25 ADD
            //        // ------------ADD liusy 2012/08/08 for Redmine#31530--------->>>>
            //        row[this._detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName]
            //            = rowOrg[this._detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName];
            //        // ------------ADD liusy 2012/08/08 for Redmine#31530---------<<<<
            //        dt.Rows.Add(row);
            //    }

            //}
            //---- DEL 董桂鈺 　2012/10/18 for Redmine#32869 ----------------<<<<<<<<<<<<<<<<<<<<<<

            // ---- ADD 董桂鈺　2012/10/18 for Redmine#32869 ------------------------------>>>>>>>>>

            foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_Detail.Rows)
            {
                if (gridRow.Cells[this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName].Value.ToString() != "入金")
                {
                    row = dt.NewRow();
                    row["SectionCd2"] = gridRow.Cells[this._detailDataSet.SalesDetail.SectionCdColumn.ColumnName].Value;
                    row["SectionName2"] = gridRow.Cells[this._detailDataSet.SalesDetail.SectionGuideNameColumn.ColumnName].Value;
                    row["CustomerCd2"] = gridRow.Cells[this._detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName].Value;
                    row["CustomerName2"] = gridRow.Cells[this._detailDataSet.SalesDetail.CustomerSnmColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.AddUpADateColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.AddUpADateColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.SalesEmployeeNmColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.SalesEmployeeNmColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.FrontEmployeeNmColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.FrontEmployeeNmColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.SalesInputNameColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.SalesInputNameColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.ModelFullNameColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.ModelFullNameColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.FullModelColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.FullModelColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.CustSlipNoColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.CustSlipNoColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.FrameNoColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.FrameNoColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.GoodsNameColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.GoodsNameColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName].Value;
                    row["ConsumeTax"] = gridRow.Cells[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.ConsTaxRateColumn.ColumnName]
                       = gridRow.Cells[this._detailDataSet.SalesDetail.ConsTaxRateColumn.ColumnName].Value; // ADD 時シン 2020/03/11 PMKOBETSU-2912
                    row[this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.DataDivColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.DataDivColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName].Value;
                    row[this._detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName]
                        = gridRow.Cells[this._detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName].Value;
                    dt.Rows.Add(row);
                }
            }
            // ---- ADD 董桂鈺　2012/10/18 for Redmine#32869 ------------------------------<<<<<<<<<

        }
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
        /// <summary>
        /// 印刷用ソート文字列取得
        /// </summary>
        /// <returns></returns>
        private string GetPrintSortString()
        {
            return string.Format("{0}, {1}, {2}, {3}, {4}, {5}",
                                    "SectionCd2", // 拠点
                                    "CustomerCd2", // 得意先
                                    _detailDataSet.SalesDetail.SalesDateColumn, // 伝票日付
                                    _detailDataSet.SalesDetail.AcptAnOdrStatusColumn, // (受注ステータス)
                                    _detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName, // 伝票番号
                                    _detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName // 行番号
                                );
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD

        #endregion // 印刷

        #region 直接印刷

        private void directPrint()
        {
            Print(false);
        }

        #endregion // 直接印刷

        #region PDF出力

        private void outputPDF()
        {
            Print(true);
        }

        #endregion // PDF出力

        #region テキスト出力

        //add by liusy #35729 2013/05/20 -----<<<<<
        /// <summary>
        /// 和暦年取得処理（H20の"20"のみを取得する）
        /// </summary>
        /// <param name="date"></param>
        /// <returns></returns>
        private static string GetDateFW(int date)
        {
            // 和暦略号を取得
            string date_gg = TDateTime.LongDateToString("gg", date);  // H
            string date_exggyy = TDateTime.LongDateToString("exggyy", date);  // H20

            // "H20" から "H" を取り除いて "20" を取得する
            return date_exggyy;

        }
        /// <summary>
        /// 数値変換処理
        /// </summary>
        /// <param name="text"></param>
        /// <returns></returns>
        private static int ToInt(string text)
        {
            try
            {
                return Int32.Parse(text);
            }
            catch
            {
                return 0;
            }
        }
        /// <summary>
        //add by liusy #35729 2013/05/20 ----->>>>>

        //----- ADD 2015/02/05 王亜楠 -------------------->>>>>
        /// <summary>
        /// 拠点・日付（11日）で分割処理の回数の取得
        /// </summary>
        /// <param name="sectionList">拠点リスト</param>
        /// <param name="custPrtPpr">画面の検索条件</param>
        /// <param name="custPrtPprList">検索条件リスト</param>
        /// <returns>分割処理の回数</returns>
        /// <remarks>
        /// <br>Note       : 拠点・日付（11日）で分割の回数の取得。</br>
        /// <br>Programmer : 王亜楠</br>
        /// <br>Date       : 2015/02/05</br>
        /// <br>UpdateNote : 2015/02/25 王亜楠 Redmine#44701</br>
        /// <br>           : №4.テキスト出力条件範囲分割の障害（1.3～1.14：12日の対応）</br>
        /// </remarks>
        private int GetLoopSeachCondition(ArrayList sectionList, CustPrtPpr custPrtPpr, out List<CustPrtPpr> custPrtPprList)
        {
            int loopCnt = 0;
            custPrtPprList = new List<CustPrtPpr>();

            try
            {
                if (sectionList.Count == 0)
                {
                    SecInfoSet secInfoSet = new SecInfoSet();
                    secInfoSet.SectionCode = custPrtPpr.SectionCode[0];
                    sectionList.Add(secInfoSet);
                }

                DateTime dt1 = custPrtPpr.St_SalesDate;
                DateTime dt2 = custPrtPpr.Ed_SalesDate;
                TimeSpan ts = dt2.Subtract(dt1);

                //----- DEL 2015/02/25 王亜楠 Redmine#44701 No.4 ---------->>>>>
                //int days = ts.Days;

                //if (days != 0 && days % CT_LOOPDAYS == 0)
                //----- DEL 2015/02/25 王亜楠 Redmine#44701 No.4 ----------<<<<<
                //----- ADD 2015/02/25 王亜楠 Redmine#44701 No.4 ---------->>>>>
                int days = ts.Days + 1;

                if (days % CT_LOOPDAYS == 0)
                //----- ADD 2015/02/25 王亜楠 Redmine#44701 No.4 ----------<<<<<
                {
                    loopCnt = days / CT_LOOPDAYS;
                }
                else
                {
                    loopCnt = days / CT_LOOPDAYS + 1;
                }

                // 拠点・日付（11日）で分割処理
                DateTime st = dt1;
                DateTime end = dt1;
                CustPrtPpr custPrtPpr4TextFile = null;
                foreach (SecInfoSet secInfoSet in sectionList)
                {
                    for (int i = 1; i <= loopCnt; i++)
                    {
                        custPrtPpr4TextFile = custPrtPpr.Clone();

                        st = dt1.AddDays((i - 1) * CT_LOOPDAYS);
                        end = dt1.AddDays(i * (CT_LOOPDAYS - 1) + (i - 1));

                        if (end > dt2)
                        {
                            end = dt2;
                        }

                        custPrtPpr4TextFile.St_SalesDate = st; // 開始売上日
                        custPrtPpr4TextFile.Ed_SalesDate = end; // 終了売上日

                        // 拠点
                        string[] secCode = new string[1];
                        secCode[0] = secInfoSet.SectionCode;
                        custPrtPpr4TextFile.SectionCode = secCode;

                        custPrtPprList.Add(custPrtPpr4TextFile);
                    }
                }
            }
            catch
            {
                custPrtPprList = null;
                loopCnt = 0;
            }

            return sectionList.Count * loopCnt;
        }

        /// <summary>
        /// ファイルの削除
        /// </summary>
        /// <param name="pFilePath"></param>
        /// <param name="msgDisplayMode">0:表示 1:表示しない</param>
        /// <remarks>
        /// <br>Note       : ファイルの削除。</br>
        /// <br>Programmer : 王亜楠</br>
        /// <br>Date       : 2015/02/05</br>
        /// </remarks>
        private int DelFile(string pFilePath, int msgDisplayMode)
        {
            int status = (int)ConstantManagement.DB_Status.ctDB_EOF;

            try
            {
                if (File.Exists(pFilePath))
                {
                    File.Delete(pFilePath);
                }

                status = (int)ConstantManagement.DB_Status.ctDB_NORMAL;
            }
            catch (Exception ex)
            {
                if (msgDisplayMode == 0)
                {
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                                                ex.Message, -1, MessageBoxButtons.OK);
                }
            }

            return status;
        }

        /// <summary>
        /// テキスト出力用検索
        /// </summary>
        /// <returns></returns>
        /// <remarks>
        /// <br>Note       : テキスト出力用検索。</br>
        /// <br>Programmer : 王亜楠</br>
        /// <br>Date       : 2015/02/05</br>
        /// </remarks>
        private int GetSearchParam4TextFile(out int loopCount, out List<CustPrtPpr> custPrtPprList)
        {
            int status = (int)ConstantManagement.DB_Status.ctDB_NOT_FOUND;
            loopCount = 0;
            custPrtPprList = null;

            try
            {
                // 検索キャンセルなし
                _custPtrSearchAcs.ExtractCancelFlag = false;

                // 検索条件の格納
                if (!SetDisplay2SearchConditionClass())
                {
                    return status;
                }
                this._logicalDelDiv = (int)tComboEditor_DeleteFlag.SelectedItem.DataValue;

                int sectionCount = 1;

                // 全拠点指定の場合
                ArrayList sectionList = new ArrayList();
                if (String.IsNullOrEmpty(this.tEdit_SectionCodeAllowZero.Text.Trim()) || this.tEdit_SectionCodeAllowZero.Text.Trim() == "00")
                {
                    status = _secInfoSetAcs.SearchAll(out sectionList, this._enterpriseCode);

                    if (status == (int)ConstantManagement.MethodResult.ctFNC_NORMAL)
                    {
                        sectionCount = sectionList.Count;
                    }
                    else
                    {
                        return status;
                    }
                }

                DateTime salesDateStUI = this.tDateEdit_SalesDateSt.GetDateTime();
                DateTime salesDateEdUI = this.tDateEdit_SalesDateEd.GetDateTime();

                // 売上日（開始或いは終了）が指定されない場合、まずDBから売上日（最小・最大）を取得する
                if (salesDateStUI == DateTime.MinValue || salesDateEdUI == DateTime.MinValue)
                {
                    DateTime salesDateSt = DateTime.MinValue;
                    DateTime salesDateEd = DateTime.MinValue;
                    status = this._custPtrSearchAcs.GetSalesDate4TextFile(this._custPrtPpr, this._logicalDelDiv, out salesDateSt, out salesDateEd);

                    if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                    {
                        if (salesDateStUI < salesDateSt)
                        {
                            this._custPrtPpr.St_SalesDate = salesDateSt;
                        }
                        if (salesDateEdUI == DateTime.MinValue || salesDateEdUI > salesDateEd)
                        {
                            this._custPrtPpr.Ed_SalesDate = salesDateEd;
                        }
                    }
                    else
                    {
                        return status;
                    }
                }

                // 拠点・日付（11日）で分割の回数の取得
                loopCount = GetLoopSeachCondition(sectionList, this._custPrtPpr, out custPrtPprList);
                status = (int)ConstantManagement.DB_Status.ctDB_NORMAL;
            }
            // --- UPD 2020/12/21 警告対応 ---------->>>>>
            //catch (Exception ex)
            catch (Exception)
            // --- UPD 2020/12/21 警告対応 ----------<<<<<
            {
                status = (int)ConstantManagement.DB_Status.ctDB_ERROR;
                custPrtPprList = null;
                loopCount = 0;
            }

            return status;
        }

        /// <summary>
        /// 検索キャンセルの処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>
        /// <br>Note       : 検索キャンセルの処理。</br>
        /// <br>Programmer : 王亜楠</br>
        /// <br>Date       : 2015/02/05</br>
        /// </remarks>
        private void processForm_CancelButtonClick(object sender, EventArgs e)
        {
            // 抽出キャンセル
            _custPtrSearchAcs.ExtractCancelFlag = true;
        }

        /// <summary>
        /// 設定画面に「抽出件数制限なし」変更の時、「テキスト出力」ボタンの制御
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>
        /// <br>Note       : 設定画面に「抽出件数制限なし」変更の時、「テキスト出力」ボタンの制御。</br>
        /// <br>Programmer : 王亜楠</br>
        /// <br>Date       : 2015/02/05</br>
        /// <br>UpdateNote : 2015/02/25 王亜楠 Redmine#44701 No.1 </br>
        /// <br>           : テキスト出力件数制限なし位置の調整</br>
        /// </remarks>
        private void SettingForm_TextOutputEvent(object sender, EventArgs e)
        {
            //----- DEL 2015/02/25 王亜楠 Redmine#44701 No.1 -------------------->>>>>
            //// パターンを分解
            //_settingForm.Degradation(this._settingForm.UserSetting.SelectedPatternName, out _patternSetting);
            //----- DEL 2015/02/25 王亜楠 Redmine#44701 No.1 --------------------<<<<<

            // ボタンの有効/無効切替
            if (this._selectedMainTabKey == "uTab_SlipList") adjustButtonEnable(0);
            else if (this._selectedMainTabKey == "uTab_SlipDetail") adjustButtonEnable(1);
            else if (this._selectedMainTabKey == "uTab_RedSlip") adjustButtonEnable(2);
            else if (this._selectedMainTabKey == "uTab_RemainList") adjustButtonEnable(3);
        }

        /// <summary>
        /// テキスト出力
        /// </summary>
        /// <remarks>
        /// <br>Note       : テキスト出力。</br>
        /// <br>Programmer : 王亜楠</br>
        /// <br>Date       : 2015/02/05</br>
        /// <br>UpdateNote : 2015/02/25 王亜楠 Redmine#44701</br>
        /// <br>           : ①№1.テキスト出力件数制限なし位置の調整</br>
        /// <br>           : ②№3.テキスト出力タイトル出力されない対応</br>
        /// <br>UpdateNote : 2015/03/03 王亜楠 Redmine#44701</br>
        /// <br>           : 開始売上日・終了売上日が入力されない場合、テキスト出力データないなら、メッセージを表示する対応</br>
        /// <br>Update Note: 2019/08/19 陳艶丹</br>
        /// <br>管理番号   : 11570163-00 PMKOBETSU-1379 テキスト出力操作ログおよび出力時アラートメッセージ追加対応</br>
        /// </remarks>
        private void exportIntoTextFile2()
        {
            if (this._selectedMainTabKey == "uTab_RedSlip")
            {
                return;
            }
            if (this._selectedMainTabKey == "uTab_RemainList")
            {
                RemainExportIntoTextFile();
                return;
            }
            PMKAU04004UA settingConstForm = this._settingForm;

            // 設定オブジェクトを取得
            this._userSetting = settingConstForm.UserSetting;
            string outputFileName = this._userSetting.OutputFileName;
            if (String.IsNullOrEmpty(this._userSetting.OutputFileName))
            {
                // ファイル名が指定されていないとエラー
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                    MSG_OUTPUTFILENAME_NOTFOUND, -1, MessageBoxButtons.OK);

                return;
            }

            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
            // エラーメッセージ
            string errMsg = string.Empty;
            // アラート表示
            int logStatus = TextOutPutOprtnHisLogAcsObj.ShowTextOutPut(this, out errMsg);
            // アラートでOKボタンが押されない場合、テキスト出力が実行できない
            if (logStatus != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                if (!string.IsNullOrEmpty(errMsg))
                {
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOP, this.Name,
                                errMsg, logStatus, MessageBoxButtons.OK);
                }
                // 中止
                return;
            }
            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<

            // 確認ダイアログ生成・表示
            PMKAU04004UB textOutDialog = new PMKAU04004UB();
            textOutDialog.UserSetting = _userSetting;
            if (textOutDialog.ShowDialog() != DialogResult.OK)
            {
                // 中止
                return;
            }

            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
            // エラーメッセージ
            errMsg = string.Empty;
            TextOutPutOprtnHisLogWork textOutPutOprtnHisLogWorkObj = null;
            // テキスト出力操作ログ登録処理
            logStatus = TextOutPutWrite(1,string.Empty, null, ref textOutPutOprtnHisLogWorkObj, out errMsg);

            // ログ登録異常の場合、テキスト出力が実行できない
            if (logStatus != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                if (!string.IsNullOrEmpty(errMsg))
                {
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOP, this.Name,
                                errMsg, logStatus, MessageBoxButtons.OK);
                }
                // 中止
                return;
            }
            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<

            // ShowDialogにより、_userSettingは書き変わっているので設定XML更新
            settingConstForm.Serialize();

            //画面の入力チェック
            Control errorControl = null;
            if (!CheckItemValues(out errorControl))
            {
                // エラーコントロールに移動
                if (errorControl != null)
                {
                    errorControl.Focus();
                }
                return;
            }

            //----- ADD 2015/02/25 王亜楠 Redmine#44701 No.1 -------------------->>>>>
            // パターンを分解
            _patternSetting = new string[9];
            _settingForm.Degradation(this._settingForm.UserSetting.SelectedPatternName, out _patternSetting);
            //----- ADD 2015/02/25 王亜楠 Redmine#44701 No.1 --------------------<<<<<

            int searchMode = 0; // 0:伝票 1:明細
            int.TryParse(this._patternSetting[10], out searchMode);

            // 拠点と日付範囲(11日)で検索条件の取得
            int loopCount = 0;
            List<CustPrtPpr> custPrtPprList = null;
            int searchStus = GetSearchParam4TextFile(out loopCount, out custPrtPprList);
            if (searchStus != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                //----- ADD 2015/03/03 王亜楠 Redmine#44701 -------------------->>>>>
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                                  MSG_MATCHED_DATA_NOT_FOUND, -1, MessageBoxButtons.OK);
                //----- ADD 2015/03/03 王亜楠 Redmine#44701 --------------------<<<<<
                return;
            }

            FormattedTextWriter tw = new FormattedTextWriter();
            PMKAU04004UD progressForm = new PMKAU04004UD();
            try
            {
                // 存在のファイルを削除する
                if (DelFile(this._userSetting.OutputFileName, 0) != 0)
                {
                    // 出力失敗
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                        MSG_OUTPUTFILE_FAILED, -1, MessageBoxButtons.OK);

                    return;
                }

                progressForm.CancelButtonClick += new EventHandler(processForm_CancelButtonClick);
                progressForm.SearchMax = loopCount;
                progressForm.Show(this);

                if (custPrtPprList != null && custPrtPprList.Count > 0)
                {
                    int outputStatus = (int)ConstantManagement.DB_Status.ctDB_EOF;
                    int outputCount = 0;
                    bool isDataExsits = false;
                    int outputIndex = 0; // ADD 2015/02/25 王亜楠 Redmine#44701 No.3

                    // 拠点と日付範囲(11日)で検索・テキスト出力する
                    for (int index = 0; index < custPrtPprList.Count; index++)
                    {
                        CustPrtPpr custPrtPpr = custPrtPprList[index];

                        // データセットをクリア
                        this._custPtrSearchAcs.SalesListTbl4Text.Clear();
                        this._custPtrSearchAcs.SalesDetailTbl4Text.Clear();

                        // 検索開始
                        if (_custPtrSearchAcs.ExtractCancelFlag == false)
                        {
                            searchStus = this._custPtrSearchAcs.SearchAllData4TextFile(custPrtPpr, this._logicalDelDiv, searchMode);
                        }

                        switch (searchStus)
                        {
                            case (int)ConstantManagement.DB_Status.ctDB_NORMAL:
                                {
                                    isDataExsits = true;
                                    // テキスト出力
                                    int subOutputCount = 0;
                                    //outputStatus = exportIntoTextFileProc(ref tw, index, out subOutputCount); // DEL 2015/02/25 王亜楠 Redmine#44701 No.3
                                    //----- ADD 2015/02/25 王亜楠 Redmine#44701 No.3 -------------------->>>>>
                                    outputStatus = exportIntoTextFileProc(ref tw, outputIndex, out subOutputCount);
                                    outputIndex++;
                                    //----- ADD 2015/02/25 王亜楠 Redmine#44701 No.3 --------------------<<<<<
                                    outputCount += subOutputCount;
                                    //----- DEL 2015/02/25 王亜楠 Redmine#44701 -------------------->>>>>
                                    //// プログレスバー進捗状況設定処理
                                    //progressForm.ProgressBarUpEvent(index + 1);
                                    //----- DEL 2015/02/25 王亜楠 Redmine#44701 --------------------<<<<<
                                    if (outputStatus == (int)ConstantManagement.DB_Status.ctDB_EOF) // 9:異常終了
                                    {
                                        if (progressForm != null) progressForm.Dispose();

                                        // 存在のファイルを削除する
                                        DelFile(this._userSetting.OutputFileName, 1);

                                        // 出力失敗
                                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                                            MSG_OUTPUTFILE_FAILED, -1, MessageBoxButtons.OK);

                                        return;
                                    }
                                    break;
                                }
                            case (int)ConstantManagement.DB_Status.ctDB_EOF:
                            case (int)ConstantManagement.MethodResult.ctFNC_NO_RETURN:
                                {
                                    break;
                                }
                            default:
                                {
                                    if (progressForm != null) progressForm.Dispose();

                                    // 存在のファイルを削除する
                                    DelFile(this._userSetting.OutputFileName, 0);

                                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                                    MSG_FAILED2GET_SLIP_DATA, searchStus, MessageBoxButtons.OK);

                                    return;
                                }
                        }

                        //----- ADD 2015/02/25 王亜楠 Redmine#44701 -------------------->>>>>
                        // プログレスバー進捗状況設定処理
                        progressForm.ProgressBarUpEvent(index + 1);
                        //----- ADD 2015/02/25 王亜楠 Redmine#44701 --------------------<<<<<

                        // 検索キャンセルの処理
                        if (_custPtrSearchAcs.ExtractCancelFlag == true)
                        {
                            if (progressForm != null) progressForm.Dispose();

                            // 処理が中断された場合、存在のファイルを削除する存在のファイルを削除する
                            DelFile(this._userSetting.OutputFileName, 0);

                            TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                                "処理を中断しました。",
                                -1, MessageBoxButtons.OK);

                            return;
                        }
                    } // Loop End

                    // 検索データがない場合
                    if (!isDataExsits)
                    {
                        if (progressForm != null) progressForm.Dispose();

                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                               MSG_MATCHED_DATA_NOT_FOUND, -1, MessageBoxButtons.OK);
                        return;
                    }

                    // 出力成功
                    if (outputStatus == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                    {
                        if (progressForm != null) progressForm.Dispose();

                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                            outputCount.ToString() + MSG_OUTPUTFILE_SUCCEEDED, -1, MessageBoxButtons.OK);

                        //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
                        // エラーメッセージ
                        errMsg = string.Empty;
                        // 操作履歴登録
                        textOutPutOprtnHisLogWorkObj.LogOperationData = string.Format(CountNumStr, outputCount.ToString()) +textOutPutOprtnHisLogWorkObj.LogOperationData;
                        logStatus = TextOutPutOprtnHisLogAcsObj.Write(this, ref textOutPutOprtnHisLogWorkObj, out errMsg);
                        // ログ登録異常の場合、テキスト出力が実行できない
                        if (logStatus != (int)ConstantManagement.DB_Status.ctDB_NORMAL && !string.IsNullOrEmpty(errMsg))
                        {
                            TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOP, this.Name,
                                        errMsg, logStatus, MessageBoxButtons.OK);
                            // 中止
                            return;
                        }
                        //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<
                        return;
                    }

                }
            }
            catch (Exception ex)
            {
                if (progressForm != null) progressForm.Dispose();

                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                            ex.Message, -1, MessageBoxButtons.OK);
            }
            finally
            {
                // メモリの解放
                tw = null;
                if (progressForm != null) progressForm.Dispose();
            }
        }

        //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
        /// <summary>
        /// 画面条件取得
        /// </summary>
        /// <param name="stringConditions">画面条件</param>
        /// <remarks>
        /// <br>Note       : テキスト出力操作ログおよび出力時アラートメッセージ追加対応</br>
        /// <br>Programmer : 陳艶丹</br>
        /// <br>Date       : 2019/08/19</br>
        /// </remarks>
        private void GetConditions(out string stringConditions)
        {
            string conditions = Conditions;
            string value = string.Empty;
            // 伝票区分
            if (this.tComboEditor_SalesSlipCd.Visible)
            {
                conditions += Comma + "伝票区分:" + this.tComboEditor_SalesSlipCd.Value;
            }
            // 明細区分
            if (this.tComboEditor_SalesSlipCdDtl.Visible)
            {
                conditions += Comma + "明細区分:" + this.tComboEditor_SalesSlipCdDtl.Value;
            }
            // 伝票番号
            if (this.tEdit_SalesSlipNum.Visible)
            {
                string salesSlipNum = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_SalesSlipNum.Text))
                {
                    salesSlipNum = this.tEdit_SalesSlipNum.Value + "以上"; 
                }
                conditions += Comma + "伝票番号:" + salesSlipNum;
            }
            // 担当者
            if (this.tEdit_SalesEmployeeCd.Visible)
            {
                conditions += Comma + "担当者:" + this.tEdit_SalesEmployeeCd.Value;
            }
            // 受注者
            if (this.tEdit_FrontEmployeeCd.Visible)
            {
                conditions += Comma + "受注者:" + this.tEdit_FrontEmployeeCd.Value;
            }
            // 発行者
            if (this.tEdit_SalesInputCode.Visible)
            {
                conditions += Comma + "発行者:" + this.tEdit_SalesInputCode.Value;
            }
            // 管理番号
            if (this.tEdit_CarMngCode.Visible)
            {
                if (!string.IsNullOrEmpty(this.tEdit_CarMngCode.Text))
                {
                    value = this.tComboEditor_SearchDiv.Text.Trim();
                }
                conditions += Comma + "管理番号:" + this.tEdit_CarMngCode.Value + value;
            }
            // 車種名称
            if (this.tEdit_ModelFullName.Visible)
            {
                value = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_ModelFullName.Text))
                {
                    value = this.tComboEditor_ModelFullNameFuzzy.Text.Trim();
                }
                conditions += Comma + "車種名称:" + this.tEdit_ModelFullName.Value + value;
            }
            // 型式
            if (this.tEdit_FullModel.Visible)
            {
                value = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_FullModel.Text))
                {
                    value = this.tComboEditor_FullModelFuzzy.Text.Trim();
                }
                conditions += Comma + "型式:" + this.tEdit_FullModel.Value + value;
            }
            // 車台No
            if (this.tEdit_SearchFrameNo.Visible)
            {
                value = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_SearchFrameNo.Text))
                {
                    value = this.tComboEditor_SearchFrameNoFuzzy.Text.Trim();
                }
                conditions += Comma + "車台No:" + this.tEdit_SearchFrameNo.Value + value;
            }

            // 指示書No
            if (this.tEdit_PartySalesSlipNum.Visible)
            {
                conditions += Comma + "指示書(仮伝)番号:" + this.tEdit_PartySalesSlipNum.Value;
            }
            // カラー名称
            if (this.tEdit_ColorName1.Visible)
            {
                value = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_ColorName1.Text))
                {
                    value = this.tComboEditor_ColorName1Fuzzy.Text.Trim();
                }
                conditions += Comma + "カラー名称:" + this.tEdit_ColorName1.Value + value;
            }
            // トリム名称
            if (this.tEdit_TrimName.Visible)
            {
                value = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_TrimName.Text))
                {
                    value = this.tComboEditor_TrimNameFuzzy.Text.Trim();
                }
                conditions += Comma + "トリム名称:" + this.tEdit_TrimName.Value + value;
            }
            // UOE送信
            if (this.tComboEditor_DataSendCode.Visible)
            {
                value = string.Empty;
                if (this.tComboEditor_DataSendCode.SelectedIndex == 0)
                {
                    value = "0";
                }
                else if (this.tComboEditor_DataSendCode.SelectedIndex == 1)
                {
                    value = "1";
                }
                else
                {
                    value = "2";
                }
                conditions += Comma + "UOE送信:" + value;
            }
            // 備考１
            if (this.tEdit_SlipNote.Visible)
            {
                value = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_SlipNote.Text))
                {
                    value = this.tComboEditor_SlipNoteFuzzy.Text.Trim();
                }
                conditions += Comma + "備考１:" + this.tEdit_SlipNote.Value + value;
            }
            // 備考２
            if (this.tEdit_SlipNote2.Visible)
            {
                value = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_SlipNote2.Text))
                {
                    value = this.tComboEditor_SlipNote2Fuzzy.Text.Trim();
                }
                conditions += Comma + "備考２:" + this.tEdit_SlipNote2.Value + value;
            }
            // 備考３
            if (this.tEdit_SlipNote3.Visible)
            {
                value = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_SlipNote3.Text))
                {
                    value = this.tComboEditor_SlipNote3Fuzzy.Text.Trim();
                }
                conditions += Comma + "備考３:" + this.tEdit_SlipNote3.Value + value;
            }
            // UOEリマーク1
            if (this.tEdit_UoeRemark1.Visible)
            {
                value = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_UoeRemark1.Text))
                {
                    value = this.tComboEditor_UoeRemark1Fuzzy.Text.Trim();
                }
                conditions += Comma + "UOEリマーク1:" + this.tEdit_UoeRemark1.Value + value;
            }
            // UOEリマーク2
            if (this.tEdit_UoeRemark2.Visible)
            {
                value = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_UoeRemark2.Text))
                {
                    value = this.tComboEditor_UoeRemark2Fuzzy.Text.Trim();
                }
                conditions += Comma + "UOEリマーク2:" + this.tEdit_UoeRemark2.Value + value;
            }
            // 商品大分類
            if (this.tEdit_GoodsLGroup.Visible)
            {
                conditions += Comma + "商品大分類:" + this.tEdit_GoodsLGroup.Value;
            }
            // 商品中分類
            if (this.tEdit_GoodsMGroup.Visible)
            {
                conditions += Comma + "商品中分類:" + this.tEdit_GoodsMGroup.Value;
            }
            // BLグループ
            if (this.tEdit_BlGroupCode.Visible)
            {
                conditions += Comma + "ｸﾞﾙｰﾌﾟｺｰﾄﾞ:" + this.tEdit_BlGroupCode.Value;
            }
            // BLコード
            if (this.tEdit_BlGoodsCode.Visible)
            {
                conditions += Comma + "BLコード:" + this.tEdit_BlGoodsCode.Value;
            }
            // 品名
            if (this.tEdit_GoodsName.Visible)
            {
                value = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_GoodsName.Text))
                {
                    value = this.tComboEditor_GoodsNameFuzzy.Text.Trim();
                }
                conditions += Comma + "品名:" + this.tEdit_GoodsName.Value + value;
            }
            // 品番
            if (this.tEdit_GoodsNo.Visible)
            {
                value = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_GoodsNo.Text))
                {
                    value = this.tComboEditor_GoodsNoFuzzy.Text.Trim();
                }
                conditions += Comma + "品番:" + this.tEdit_GoodsNo.Value + value;
            }
            // メーカー
            if (this.tEdit_MakerCd.Visible)
            {
                conditions += Comma + "メーカー:" + this.tEdit_MakerCd.Value;
            }
            // 販売区分
            if (this.tEdit_SalesCode.Visible)
            {
                 conditions += Comma + "販売区分:" + this.tEdit_SalesCode.Value;
            }
            // 商品区分
            if (this.tEdit_EnterpriseGanreCode.Visible)
            {
                conditions += Comma + "商品区分:" + this.tEdit_EnterpriseGanreCode.Value;
            }
            // 商品属性
            if (this.tComboEditor_GoodsKindCode.Visible)
            {
                value = string.Empty;
                if (this.tComboEditor_GoodsKindCode.SelectedIndex == 0)
                {
                    value = "0";
                }
                else if (this.tComboEditor_GoodsKindCode.SelectedIndex == 1)
                {
                    value = "1";
                }
                else
                {
                    value = "2";
                }
                conditions += Comma + "商品属性:" + value;
            }
            // 在庫取寄区分
            if (this.tComboEditor_SalesOrderDivCd.Visible)
            {
                value = string.Empty;
                if (this.tComboEditor_SalesOrderDivCd.SelectedIndex == 0)
                {
                    value = "0";
                }
                else if (this.tComboEditor_SalesOrderDivCd.SelectedIndex == 1)
                {
                    value = "1";
                }
                else
                {
                    value = "2";
                }

                conditions += Comma + "在庫取寄区分:" + value;
            }
            // 倉庫
            if (this.tEdit_WarehouseCd.Visible)
            {
                conditions += Comma + "倉庫:" + this.tEdit_WarehouseCd.Value;
            }
            // 棚番
            if (this.tEdit_WarehouseShelfNo.Visible)
            {
                value = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_WarehouseShelfNo.Text))
                {
                    value = this.tComboEditor_WarehouseShelfNoFuzzy.Text.Trim();
                }
                conditions += Comma + "棚番:" + this.tEdit_WarehouseShelfNo.Value + value;
            }
            // 仕入伝票番号
            if (this.tEdit_SupplierSlipNo.Visible)
            {
                conditions += Comma + "仕入伝票番号:" + this.tEdit_SupplierSlipNo.Value;
            }
            // 仕入先
            if (this.tEdit_SupplierCd.Visible)
            {
                conditions += Comma + "仕入先:" + this.tEdit_SupplierCd.Value;
            }
            // 発注先
            if (this.tEdit_UOESupplierCd.Visible)
            {
                conditions += Comma + "発注先:" + this.tEdit_UOESupplierCd.Value;
            }
            // 納入先
            if (this.tEdit_AddresseeCode.Visible)
            {
                conditions += Comma + "納入先:" + this.tEdit_AddresseeCode.Value;
            }
            // 明細備考
            if (this.tEdit_DtlNote.Visible)
            {
                value = string.Empty;
                if (!string.IsNullOrEmpty(this.tEdit_DtlNote.Text))
                {
                    value = this.tComboEditor_DtlNoteFuzzy.Text.Trim();
                }
                conditions += Comma + "明細備考:" + this.tEdit_DtlNote.Value + value;
            }
            // 削除指定区分
            if (this.tComboEditor_DeleteFlag.Visible)
            {
                conditions += Comma + "削除指定区分:" + this.tComboEditor_DeleteFlag.Value;
            }
            // 請求先
            if (this.tEdit_ClaimName.Visible)
            {
                conditions += Comma + "請求先:" + this.tEdit_ClaimName.Value;
            }
            // 入力日開始
            if (this.tDateEdit_AddUpADateSt.Visible)
            {
                value = string.Empty;
                if (this.tDateEdit_AddUpADateSt.GetLongDate() != 0)
                {
                    value = this.tDateEdit_AddUpADateSt.GetDateTime().ToString("yyyyMMdd");
                }
                conditions += Comma + "入力日開始:" + value;
            }
            // 入力日終了
            if (this.tDateEdit_AddUpADateEd.Visible)
            {
                value = string.Empty;
                if (this.tDateEdit_AddUpADateEd.GetLongDate() != 0)
                {
                    value = this.tDateEdit_AddUpADateEd.GetDateTime().ToString("yyyyMMdd");
                }
                conditions += Comma + "入力日終了:" + value;
            }

            // 自動回答
            if (this.tComboEditor_AutoAnswerDivSCM.Visible)
            {
                conditions += Comma + "自動回答:" + this.tComboEditor_AutoAnswerDivSCM.Value;
            }
            // 問合せ番号
            if (this.tNedit_InquiryNumber.Visible)
            {
                conditions += Comma + "問合せ番号:" + this.tNedit_InquiryNumber.Value;
            }
            // 出荷状況
            if (this.tComboEditor_AddUpRemDiv.Visible)
            {
                value = string.Empty;
                if (this.tComboEditor_AddUpRemDiv.SelectedIndex == 0)
                {
                    value = "0";
                }
                else if (this.tComboEditor_AddUpRemDiv.SelectedIndex == 1)
                {
                    value = "1";
                }
                else
                {
                    value = "2";
                }
                conditions += Comma + "出荷状況:" + value;
            }
            // 地区
            if (this.tEdit_SalesAreaNm.Visible)
            {
                conditions += Comma + "地区:" + this.tEdit_SalesAreaNm.Value;
            }

            // 分析コード
            if (this.tNedit_CustAnalysCode1.Visible)
            {
                conditions += Comma + "分析コード:" + this.tNedit_CustAnalysCode1.Value + this.tNedit_CustAnalysCode2.Value 
                    + this.tNedit_CustAnalysCode3.Value + this.tNedit_CustAnalysCode4.Value + this.tNedit_CustAnalysCode5.Value + this.tNedit_CustAnalysCode6.Value;
            }
            // 受注作成区分
            if (this.tComboEditor_AcptAnOdrMakeDiv.Visible)
            {
                value = string.Empty;
                if (this.tComboEditor_AcptAnOdrMakeDiv.SelectedIndex == 0)
                {
                    value = "0";
                }
                else if (this.tComboEditor_AcptAnOdrMakeDiv.SelectedIndex == 1)
                {
                    value = "1";
                }
                else
                {
                    value = "2";
                }
                conditions += Comma + "受注作成区分:" + value;
            }
            // 売上日
            string custDateSt = this._custPrtPpr.St_SalesDate.ToString("yyyyMMdd");
            custDateSt = custDateSt.Equals("00010101") ? StartStr : custDateSt;
            string custDateEd = this._custPrtPpr.Ed_SalesDate.ToString("yyyyMMdd");
            custDateEd = custDateEd.Equals("00010101") ? EndStr : custDateEd;
            stringConditions = string.Format(conditions, this.tEdit_SectionCodeAllowZero.Text.Trim(), custDateSt, custDateEd, this.tNedit_CustomerCode.Text.Trim()) + Comma;
        }

        /// <summary>
        /// テキスト出力操作ログおよび出力時アラートメッセージ追加処理
        /// </summary>
        /// <param name="mode">モード</param>
        /// <param name="fileName">ファイル名</param>
        /// <param name="custPrtPprBlnce">残高一覧検索条件クラス</param>
        /// <param name="textOutPutOprtnHisLogWorkObj">登録用対象ワーク</param>
        /// <param name="errMsg">エラーメッセージ</param>
        /// <returns>status</returns>
        /// <remarks>
        /// <br>Note       : テキスト出力操作ログおよび出力時アラートメッセージ追加対応</br>
        /// <br>Programmer : 陳艶丹</br>
        /// <br>Date       : 2019/08/19</br>
        /// </remarks>
        private int TextOutPutWrite(int mode, string fileName, CustPrtPprBlnce custPrtPprBlnce, ref TextOutPutOprtnHisLogWork textOutPutOprtnHisLogWorkObj, out string errMsg)
        {
            int status = (int)ConstantManagement.DB_Status.ctDB_EOF;

            try
            {
                string outPutCon = string.Empty;
                textOutPutOprtnHisLogWorkObj = new TextOutPutOprtnHisLogWork();
                // ログデータ対象アセンブリID
                textOutPutOprtnHisLogWorkObj.LogDataObjAssemblyID = CT_CUSTOMER_ERECNOTE_PGID;
                // ログデータ対象アセンブリ名称
                textOutPutOprtnHisLogWorkObj.LogDataObjAssemblyNm = AssemblyNm;
                // ログデータ対象起動プログラム名称
                textOutPutOprtnHisLogWorkObj.LogDataObjBootProgramNm = AssemblyNm;
                if (mode == 1 || mode == 2 || mode == 5)
                {
                    // 画面条件取得
                    string conditions = string.Empty;
                    this.GetConditions(out conditions);
                    if (mode == 1)
                    {
                        // ログデータ対象処理名
                        textOutPutOprtnHisLogWorkObj.LogDataObjProcNm = MethodNm2;
                    }
                    else if (mode == 2)
                    {
                        // ログデータ対象処理名
                        textOutPutOprtnHisLogWorkObj.LogDataObjProcNm = MethodNm;
                    }
                    else
                    {
                        // ログデータ対象処理名
                        textOutPutOprtnHisLogWorkObj.LogDataObjProcNm = MethodNm5;
                    }
                    // ログオペレーションデータ
                    if (mode == 1 || mode == 2)
                    {
                        outPutCon = conditions + string.Format(MenuCon, _userSetting.OutputFileName, _userSetting.SelectedPatternName);
                    }
                    else
                    {
                        outPutCon = conditions + string.Format(ExcelCon, fileName);
                    }
                }
                else if (mode == 3 || mode == 4)
                {
                    if (mode == 3)
                    {
                        // ログデータ対象処理名
                        textOutPutOprtnHisLogWorkObj.LogDataObjProcNm = MethodNm3;
                    }
                    else
                    {
                        // ログデータ対象処理名
                        textOutPutOprtnHisLogWorkObj.LogDataObjProcNm = MethodNm4;
                    }
                    // ログオペレーションデータ
                    string balance = prtSetForm.BalanceDiv.ToString();
                    // 抽出拠点
                    string remainSection = custPrtPprBlnce.RemainSectionType.ToString();
                    string sectionCdSt = prtSetForm.SectionCodeSt.Trim();
                    sectionCdSt = string.Empty.Equals(sectionCdSt) ? StartStr : sectionCdSt;
                    string sectionCdEd = prtSetForm.SectionCodeEd.Trim();
                    sectionCdEd = string.Empty.Equals(sectionCdEd) ? EndStr : sectionCdEd;
                    // 得意先
                    string customerCdSt = prtSetForm.CustomerCodeSt.Trim();
                    customerCdSt = string.Empty.Equals(customerCdSt) ? StartStr : customerCdSt;
                    string customerCdEd = prtSetForm.CustomerCodeEd.Trim();
                    customerCdEd = string.Empty.Equals(customerCdEd) ? EndStr : customerCdEd;
                    // 対象年月
                    string checkDateSt = prtSetForm.AddUpYearMonthSt;
                    checkDateSt = string.Empty.Equals(checkDateSt) ? StartStr : checkDateSt;
                    string checkDateEd = prtSetForm.AddUpYearMonthEd;
                    checkDateEd = string.Empty.Equals(checkDateEd) ? EndStr : checkDateEd;
                    outPutCon = string.Format(BalanceCon, balance, remainSection, sectionCdSt, sectionCdEd, customerCdSt, customerCdEd,
                        checkDateSt, checkDateEd, custPrtPprBlnce.CreditMoneyOutputDiv, prtSetForm.FileName);
                }
                // ログオペレーションデータ
                textOutPutOprtnHisLogWorkObj.LogOperationData = outPutCon;

                // 操作履歴登録
                status = TextOutPutOprtnHisLogAcsObj.Write(this, ref textOutPutOprtnHisLogWorkObj, out errMsg);
            }
            catch (Exception ex)
            {
                errMsg = ex.Message;
            }

            return status;
        }
        //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<

        /// <summary>
        /// テキスト出力
        /// </summary>
        /// <param name="tw"></param>
        /// <param name="index"></param>
        /// <param name="outputCount">テキスト出力件数</param>
        /// <remarks>
        /// <br>Note       : テキスト出力。</br>
        /// <br>Programmer : 王亜楠</br>
        /// <br>Date       : 2015/02/05</br>
        /// <br>UpdateNote : 2015/03/03 王亜楠 Redmine#44701</br>
        /// <br>           : テキスト出力ソート順の対応</br>
        /// </remarks>
        private int exportIntoTextFileProc(ref FormattedTextWriter tw, int index, out int outputCount)
        {
            int status = (int)ConstantManagement.DB_Status.ctDB_EOF;
            outputCount = 0;
            DataView view = null;

            String typeStr = string.Empty;
            Char typeChar = new char();
            Byte typeByte = new byte();
            DateTime typeDate = new DateTime();

            Int16 typeInt16 = new short();
            Int32 typeInt32 = new int();
            Int64 typeInt64 = new long();
            Single typeSingle = new float();
            Double typeDouble = new double();
            Decimal typeDecimal = new decimal();

            try
            {
                //----- DEL 2015/02/25 王亜楠 Redmine#44701 -------------------->>>>>
                //// パターンを分解
                //_patternSetting = new string[9];
                //_settingForm.Degradation(this._settingForm.UserSetting.SelectedPatternName, out _patternSetting);
                //----- DEL 2015/02/25 王亜楠 Redmine#44701 --------------------<<<<<

                // パターンの構成
                // 区切り文字(タブ・任意・固定長）/区切り文字任意/  0-1
                // 括り文字(”・任意）/括り文字任意/                2-3
                // 数値括り（する／しない)                          4
                // 文字括り（する／しない)                          5
                // タイトル行（あり／なし）                         6
                // 伝票出力項目リスト (xx項目x3文字) 基本的に表示順の数字,非表示の場合は+100, 必ずSalesListの順に並んでいる   7
                // 明細出力項目リスト (xx項目x3文字) 基本的に表示順の数字,非表示の場合は+100, 必ずSalesDetailの順に並んでいる 8

                // カラム名一覧を作成
                if (this._patternSetting[10] == "0")
                {
                    // 伝票
                    _exportColumnNameList = _settingForm.GetColumnNameList(_patternSetting[7], true);
                    string[] gridSetting;
                    getGridSettingPattern(_patternSetting[7], out gridSetting, true);
                    List<String> schemeList;
                    getSchemeList(gridSetting, true, out schemeList, true);

                    // 出力項目名
                    tw.SchemeList = schemeList;

                    // 固定長：伝票
                    SalesMaxLength(ref tw);

                    view = new DataView(this._custPtrSearchAcs.SalesListTbl4Text);
                    DateTime SalesDate = new DateTime();
                    int date = 0;
                    string date_year = "";
                    foreach (DataRowView dataRowView in view)
                    {
                        //西暦 -->>和暦の変換処理
                        //伝票日付
                        if (dataRowView[_detailDataSet.SalesList.SalesDateColumn.ColumnName].ToString() != "" && (DateTime)dataRowView[_detailDataSet.SalesList.SalesDateColumn.ColumnName] != DateTime.MinValue)
                        {
                            SalesDate = (DateTime)dataRowView[_detailDataSet.SalesList.SalesDateColumn.ColumnName];
                            date = int.Parse(SalesDate.ToString("yyyyMMdd"));
                            date_year = GetDateFW(date);
                            dataRowView[_detailDataSet.SalesList.SalesDateJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2, '0') + "/" + SalesDate.Day.ToString().PadLeft(2, '0');
                        }
                        //計上日
                        if (dataRowView[_detailDataSet.SalesList.AddUpADateColumn.ColumnName].ToString() != "" && (DateTime)dataRowView[_detailDataSet.SalesList.AddUpADateColumn.ColumnName] != DateTime.MinValue)
                        {
                            SalesDate = (DateTime)dataRowView[_detailDataSet.SalesList.AddUpADateColumn.ColumnName];
                            date = int.Parse(SalesDate.ToString("yyyyMMdd"));
                            date_year = GetDateFW(date);
                            dataRowView[_detailDataSet.SalesList.AddUpADateJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2, '0') + "/" + SalesDate.Day.ToString().PadLeft(2, '0');
                        }
                        //入力日
                        if (dataRowView[_detailDataSet.SalesList.InputDayColumn.ColumnName].ToString() != "" && (DateTime)dataRowView[_detailDataSet.SalesList.InputDayColumn.ColumnName] != DateTime.MinValue)
                        {
                            SalesDate = (DateTime)dataRowView[_detailDataSet.SalesList.InputDayColumn.ColumnName];
                            date = int.Parse(SalesDate.ToString("yyyyMMdd"));
                            date_year = GetDateFW(date);
                            dataRowView[_detailDataSet.SalesList.InputDayJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2, '0') + "/" + SalesDate.Day.ToString().PadLeft(2, '0');
                        }
                        //更新時間
                        if (dataRowView[_detailDataSet.SalesList.UpdateDateTimeColumn.ColumnName].ToString() != "" && (string)dataRowView[_detailDataSet.SalesList.UpdateDateTimeColumn.ColumnName] != string.Empty)
                        {
                            string updatetime = (string)dataRowView[_detailDataSet.SalesList.UpdateDateTimeColumn.ColumnName];
                            date = int.Parse(updatetime.Substring(0, 10).Replace("/", ""));
                            date_year = GetDateFW(date);
                            dataRowView[_detailDataSet.SalesList.UpdateDateTimeJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2, '0') + "/" + SalesDate.Day.ToString().PadLeft(2, '0') + updatetime.Substring(10);
                        }

                        //----- ADD 2015/09/17 田建委 Redmine#47006 ---------->>>>>
                        // 「返品伝票金額をマイナスで出力する」チェックオンの場合、
                        if (this._patternSetting[12] == "1")
                        {
                            int detailSign = -1;

                            // 金額
                            long salesTotalTaxExc = 0;
                            if (dataRowView[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName] != DBNull.Value)
                            {
                                salesTotalTaxExc = (long)dataRowView[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName];
                            }

                            // 消費税
                            long consumeTax = 0;
                            if (dataRowView[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName] != DBNull.Value)
                            {
                                consumeTax = (long)dataRowView[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName];
                            }

                            // 粗利
                            long grossProfit = 0;
                            if (dataRowView[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName] != DBNull.Value)
                            {
                                grossProfit = (long)dataRowView[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName];
                            }

                            // 伝票区分
                            int salesSlipCd = -1;
                            if (dataRowView[this._detailDataSet.SalesList.SalesSlipCdColumn.ColumnName] != DBNull.Value)
                            {
                                salesSlipCd = (int)dataRowView[this._detailDataSet.SalesList.SalesSlipCdColumn.ColumnName];
                            }

                            // 伝票区分＝「返品」の場合、符号を反転させる
                            if (salesSlipCd == 1)
                            {
                                //金額
                                if (dataRowView[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName] != DBNull.Value)
                                {
                                    dataRowView[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName] = salesTotalTaxExc * detailSign;
                                }

                                //消費税
                                if (dataRowView[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName] != DBNull.Value)
                                {
                                    dataRowView[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName] = consumeTax * detailSign;
                                }

                                //粗利
                                if (dataRowView[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName] != DBNull.Value)
                                {
                                    dataRowView[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName] = grossProfit * detailSign;
                                }
                            }
                        }
                        //----- ADD 2015/09/17 田建委 Redmine#47006 ----------<<<<<

                    }
                    tw.DataSource = view;

                    //----- DEL 2015/03/03 王亜楠 Redmine#44701 -------------------->>>>>
                    //// グリッドのソート情報を適用する
                    //if (tw.DataSource is DataView)
                    //{
                    //    (tw.DataSource as DataView).Sort = GetSortingColumns(this.uGrid_Slip);
                    //}
                    //----- DEL 2015/03/03 王亜楠 Redmine#44701 --------------------<<<<<
                    //----- DEL 2015/03/03 王亜楠 Redmine#44701 -------------------->>>>>
                    (tw.DataSource as DataView).Sort = string.Format("{0}, {1}, {2}, {3}",
                                    _detailDataSet.SalesList.SalesDateColumn.ColumnName,
                                    _detailDataSet.SalesList.SalesSlipNumColumn.ColumnName,
                                    _detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName,
                                    _detailDataSet.SalesList.SalesSlipCdColumn.ColumnName);
                    //----- DEL 2015/03/03 王亜楠 Redmine#44701 --------------------<<<<<

                    # region [フォーマットリスト]
                    Dictionary<string, string> formatList = new Dictionary<string, string>();
                    foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn col in uGrid_Slip.DisplayLayout.Bands[0].Columns)
                    {
                        formatList.Add(col.Key, col.Format);
                    }
                    tw.FormatList = formatList;
                    # endregion
                }
                else
                {
                    // 明細
                    _exportColumnNameList = _settingForm.GetColumnNameList(_patternSetting[8], false);
                    string[] gridSetting;
                    getGridSettingPattern(_patternSetting[8], out gridSetting, false);
                    List<String> schemeList;
                    getSchemeList(gridSetting, false, out schemeList, true);

                    // 出力項目名
                    tw.SchemeList = schemeList;

                    // 固定長：明細
                    SalesDtlMaxLength(ref tw);

                    view = new DataView(this._custPtrSearchAcs.SalesDetailTbl4Text);

                    int date = 0;
                    string date_year = "";
                    DateTime SalesDate = new DateTime();
                    foreach (DataRowView dataRowView in view)
                    {
                        //西暦 -->>和暦の変換処理
                        //伝票日付

                        if (dataRowView[_detailDataSet.SalesDetail.SalesDateColumn.ColumnName].ToString() != "" && (DateTime)dataRowView[_detailDataSet.SalesDetail.SalesDateColumn.ColumnName] != DateTime.MinValue)
                        {
                            SalesDate = (DateTime)dataRowView[_detailDataSet.SalesDetail.SalesDateColumn.ColumnName];
                            date = int.Parse(SalesDate.ToString("yyyyMMdd"));
                            date_year = GetDateFW(date);
                            dataRowView[_detailDataSet.SalesDetail.SalesDateJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2, '0') + "/" + SalesDate.Day.ToString().PadLeft(2, '0');
                        }
                        //計上日
                        if (dataRowView[_detailDataSet.SalesDetail.AddUpADateColumn.ColumnName].ToString() != "" && (DateTime)dataRowView[_detailDataSet.SalesDetail.AddUpADateColumn.ColumnName] != DateTime.MinValue)
                        {
                            SalesDate = (DateTime)dataRowView[_detailDataSet.SalesDetail.AddUpADateColumn.ColumnName];
                            date = int.Parse(SalesDate.ToString("yyyyMMdd"));
                            date_year = GetDateFW(date);
                            dataRowView[_detailDataSet.SalesDetail.AddUpADateJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2, '0') + "/" + SalesDate.Day.ToString().PadLeft(2, '0');
                        }
                        //入力日
                        if (dataRowView[_detailDataSet.SalesDetail.InputDayColumn.ColumnName].ToString() != "" && (DateTime)dataRowView[_detailDataSet.SalesDetail.InputDayColumn.ColumnName] != DateTime.MinValue)
                        {
                            SalesDate = (DateTime)dataRowView[_detailDataSet.SalesDetail.InputDayColumn.ColumnName];
                            date = int.Parse(SalesDate.ToString("yyyyMMdd"));
                            date_year = GetDateFW(date);
                            dataRowView[_detailDataSet.SalesDetail.InputDayJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2, '0') + "/" + SalesDate.Day.ToString().PadLeft(2, '0');
                        }
                        //更新時間
                        if (dataRowView[_detailDataSet.SalesDetail.UpdateDateTimeColumn.ColumnName].ToString() != "" && (string)dataRowView[_detailDataSet.SalesDetail.UpdateDateTimeColumn.ColumnName] != string.Empty)
                        {
                            string updatetime = (string)dataRowView[_detailDataSet.SalesDetail.UpdateDateTimeColumn.ColumnName];
                            date = int.Parse(updatetime.Substring(0, 10).Replace("/", ""));
                            date_year = GetDateFW(date);
                            dataRowView[_detailDataSet.SalesDetail.UpdateDateTimeJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2, '0') + "/" + SalesDate.Day.ToString().PadLeft(2, '0') + updatetime.Substring(10);
                        }

                        //----- DEL 2015/09/17 田建委 Redmine#47006 ---------->>>>>
                        // 返品
                        /*int detailSign = -1;
                        long salesMoneyTaxExc = (long)dataRowView[_detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName];
                        double shipmentCnt = 0;
                        if (dataRowView[_detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName] != DBNull.Value)
                        {
                            shipmentCnt = (double)dataRowView[_detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName];
                        }
                        long salesPriceConsTax = 0;
                        if (dataRowView[_detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName] != DBNull.Value)
                        {
                            salesPriceConsTax = (long)dataRowView[_detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName];
                        }
                        long grossProfitDetail = 0;
                        if (dataRowView[_detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName] != DBNull.Value)
                        {
                            grossProfitDetail = (long)dataRowView[_detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName];
                        }
                        // 区分
                        int salesSlipCd = (int)dataRowView[_detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName];
                        // 明細区分
                        int salesSlipCdDtl = -1;
                        if (dataRowView[_detailDataSet.SalesDetail.SalesSlipCdDtlColumn.ColumnName] != DBNull.Value)
                        {
                            salesSlipCdDtl = (int)dataRowView[_detailDataSet.SalesDetail.SalesSlipCdDtlColumn.ColumnName];
                        }
                        // 品番
                        string goodNo = dataRowView[_detailDataSet.SalesDetail.GoodsNoColumn.ColumnName].ToString();
                        // 受注ステータス
                        int acceptAnOrderNo = (int)dataRowView[_detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName];
                        // 返品の「行値引、通常」の場合、符号を反転させる
                        // 売上の商品値引の場合、符号を反転させる
                        if (((salesSlipCd == 1) && ((salesSlipCdDtl != 2) || ((salesSlipCdDtl == 2) && (string.IsNullOrEmpty(goodNo))))) ||
                            (salesSlipCd == 0 && acceptAnOrderNo == 30 && salesSlipCdDtl == 2 && !string.IsNullOrEmpty(goodNo)))
                        {
                            //金額
                            dataRowView[_detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName] = salesMoneyTaxExc * detailSign;
                            //数量
                            dataRowView[_detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName] = shipmentCnt * detailSign;
                            //消費税
                            if (dataRowView[_detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName] != DBNull.Value)
                            {
                                dataRowView[_detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName] = salesPriceConsTax * detailSign;
                            }
                            //粗利
                            dataRowView[_detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName] = grossProfitDetail * detailSign;

                        }*/
                        //----- DEL 2015/09/17 田建委 Redmine#47006 ----------<<<<<

                        //----- ADD 2015/09/17 田建委 Redmine#47006 ---------->>>>>
                        // 「マイナス金額にはマイナス記号を付与する」のチェックはオンの場合、
                        if (this._patternSetting[13] == "1")
                        {

                            int detailSign = -1;

                            // 金額
                            long salesMoneyTaxExc = 0;
                            if (dataRowView[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName] != DBNull.Value)
                            {
                                salesMoneyTaxExc = (long)dataRowView[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName];
                            }

                            // 数量
                            double shipmentCnt = 0;
                            if (dataRowView[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName] != DBNull.Value)
                            {
                                shipmentCnt = (double)dataRowView[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName];
                            }

                            // 消費税
                            long salesPriceConsTax = 0;
                            if (dataRowView[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName] != DBNull.Value)
                            {
                                salesPriceConsTax = (long)dataRowView[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName];
                            }

                            // 粗利
                            long grossProfitDetail = 0;
                            if (dataRowView[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName] != DBNull.Value)
                            {
                                grossProfitDetail = (long)dataRowView[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName];
                            }

                            // 伝票区分
                            int salesSlipCd = -1;
                            if (dataRowView[this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName] != DBNull.Value)
                            {
                                salesSlipCd = (int)dataRowView[this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName];
                            }

                            // 伝票区分（明細）
                            int salesSlipCdDtl = -1;
                            if (dataRowView[this._detailDataSet.SalesDetail.SalesSlipCdDtlColumn.ColumnName] != DBNull.Value)
                            {
                                salesSlipCdDtl = (int)dataRowView[this._detailDataSet.SalesDetail.SalesSlipCdDtlColumn.ColumnName];
                            }

                            // 品番
                            string goodNo = string.Empty;
                            if (dataRowView[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName] != DBNull.Value)
                            {
                                goodNo = dataRowView[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName].ToString();

                            }

                            // 受注ステータス
                            int acceptAnOrderNo = -1;
                            if (dataRowView[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName] != DBNull.Value)
                            {
                                acceptAnOrderNo = (int)dataRowView[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName];
                            }

                            // 返品の「行値引、通常」の場合、符号を反転させる
                            // 売上の商品値引の場合、符号を反転させる
                            if (((salesSlipCd == 1) && ((salesSlipCdDtl != 2) || ((salesSlipCdDtl == 2) && (string.IsNullOrEmpty(goodNo))))) ||
                                (salesSlipCd == 0 && acceptAnOrderNo == 30 && salesSlipCdDtl == 2 && !string.IsNullOrEmpty(goodNo)))
                            {
                                //金額
                                if (dataRowView[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName] != DBNull.Value)
                                {
                                    dataRowView[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName] = salesMoneyTaxExc * detailSign;
                                }

                                //数量
                                if (dataRowView[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName] != DBNull.Value)
                                {
                                    dataRowView[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName] = shipmentCnt * detailSign;
                                }

                                //消費税
                                if (dataRowView[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName] != DBNull.Value)
                                {
                                    dataRowView[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName] = salesPriceConsTax * detailSign;
                                }
                                //粗利
                                if (dataRowView[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName] != DBNull.Value)
                                {
                                    dataRowView[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName] = grossProfitDetail * detailSign;
                                }
                            }
                        }
                        //----- ADD 2015/09/17 田建委 Redmine#47006 ----------<<<<<

                    }
                    tw.DataSource = view;

                    //----- DEL 2015/03/03 王亜楠 Redmine#44701 -------------------->>>>>
                    //// グリッドのソート情報を適用する
                    //if (tw.DataSource is DataView)
                    //{
                    //    (tw.DataSource as DataView).Sort = GetSortingColumns(this.uGrid_Detail);
                    //}
                    //----- DEL 2015/03/03 王亜楠 Redmine#44701 --------------------<<<<<
                    //----- DEL 2015/03/03 王亜楠 Redmine#44701 -------------------->>>>>
                    (tw.DataSource as DataView).Sort = string.Format("{0}, {1}, {2}, {3}, {4}",
                                    _detailDataSet.SalesDetail.SalesDateColumn.ColumnName,
                                    _detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName,
                                    _detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName,
                                    _detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName,
                                    _detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName);
                    //----- DEL 2015/03/03 王亜楠 Redmine#44701 --------------------<<<<<

                    # region [フォーマットリスト]
                    Dictionary<string, string> formatList = new Dictionary<string, string>();
                    foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn col in uGrid_Detail.DisplayLayout.Bands[0].Columns)
                    {
                        formatList.Add(col.Key, col.Format);
                    }
                    tw.FormatList = formatList;
                    # endregion
                }


                #region オプションセット
                // ファイル名
                tw.OutputFileName = this._userSetting.OutputFileName;
                // 区切り文字
                if (this._patternSetting[0] == "0")
                {
                    tw.Splitter = "\t";
                }
                else if (this._patternSetting[0] == "1")
                {
                    tw.Splitter = this._patternSetting[1];
                }
                else
                {
                    tw.Splitter = string.Empty;
                }
                // 項目括り文字
                if (this._patternSetting[2] == "0")
                {
                    tw.Encloser = "\"";
                }
                else if (this._patternSetting[2] == "1")
                {
                    tw.Encloser = this._patternSetting[3];
                }
                // 固定幅
                if (this._patternSetting[0] == "2")
                {
                    tw.FixedLength = true;
                }
                else
                {
                    tw.FixedLength = false;
                }
                // タイトル行出力
                if (this._patternSetting[6] == "1")
                {
                    tw.CaptionOutput = false;
                }
                else
                {
                    if (index == 0)
                    {
                        tw.CaptionOutput = true;
                    }
                    else
                    {
                        tw.CaptionOutput = false;
                    }
                }
                tw.OutputMode = true;
                // 項目括り適用
                List<Type> enclosingList = new List<Type>();
                if (this._patternSetting[4] == "0")
                {
                    enclosingList.Add(typeInt16.GetType());
                    enclosingList.Add(typeInt32.GetType());
                    enclosingList.Add(typeInt64.GetType());
                    enclosingList.Add(typeDouble.GetType());
                    enclosingList.Add(typeDecimal.GetType());
                    enclosingList.Add(typeSingle.GetType());
                }
                if (this._patternSetting[5] == "0")
                {
                    enclosingList.Add(typeStr.GetType());
                    enclosingList.Add(typeChar.GetType());
                    enclosingList.Add(typeByte.GetType());
                    enclosingList.Add(typeDate.GetType());
                }
                tw.EnclosingTypeList = enclosingList;
                #endregion

                status = tw.TextOut(out outputCount);

                // 引数設定
                // DataSource        Object                     DataSet/DataTable/DataView
                // DataMember        String                     (DataSetの場合)対象のテーブル名
                // OutputFileName    String                     出力ファイル名（フォルダ・拡張子含む)   this._userSetting.OutputFileName
                // SchemeList        List<String>               テキスト出力するカラム名一覧            this._exportColumnNameList
                // Spritter          String                     項目の区切り文字(列)、"\t"ならばTAB     this._patternSetting[0]=0(\t), =1(this._patternSetting[1]), =2(string.Empty)
                // Encloser          String                     項目括り文字                            this._patternSetting[2]=0("), =1(this._patternSetting[3])
                // EnclosingTypeList List<Type>                 項目括り文字を適用する型                this._patternSetting[4]=0(Type.Numeric), this._patternSetting[5]=0(Type.Char)
                // FormatList        Dictianary<String,String>  列単位の出力フォーマット指定リスト      指定しない
                // CaptionOutput     Boolean                    タイトル行出力フラグ                    ?this._patternSetting[6]=1
                // FixedLength       Boolean                    固定長出力フラグ                        ?this._patternSetting[0]=2
                // ReplaceList       Dictianary<String,String>  文字列置換する項目の一覧。              指定しない
            }
            catch
            {
                outputCount = 0;
                status = (int)ConstantManagement.DB_Status.ctDB_EOF;
            }
            finally
            {
                this._custPtrSearchAcs.SalesListTbl4Text.Clear();
                this._custPtrSearchAcs.SalesDetailTbl4Text.Clear();
                if (view != null) view.Dispose();
            }

            return status;
        }
        //----- ADD 2015/02/05 王亜楠 --------------------<<<<<

        /// テキスト出力
        /// </summary>
        /// <br>Update Note : 2009/12/28 呉元嘯 PM.NS保守依頼④</br>
        /// <br>              返品伝票をテキスト出力した場合、返品伝票の金額プラスで出力されている件の修正</br>
        /// <br>Update Note : 2010/01/25 呉元嘯 PM.NS保守依頼④</br>
        /// <br>              Redmine#2593の対応</br>
        /// <br>Update Note : 2010/02/04 呉元嘯 PM.NS保守依頼④</br>
        /// <br>              Redmine#2805の対応</br>
        /// <br>Update Note : 2010/12/20 yangmj </br>
        /// <br>              テキスト出力に入金伝票が含まれる場合のエラー修正</br>
        /// <br>Update Note : K2014/05/08 林超凡 </br>
        /// <br>            : 得意先電子元帳のCSV出力項目に車種メーカーコードを追加する、東亜商会個別対応</br>
        /// <br>Update Note : K2014/05/27 林超凡 </br>
        /// <br>            : Redmine#42597 出力位置を変更できるようにする。東亜商会個別対応</br>
        /// <br>UpdateNote  : 2015/02/05 王亜楠 </br>
        /// <br>            : テキスト出力の効率向上の対応</br>
        /// <br>Update Note: 2019/08/19 陳艶丹</br>
        /// <br>            : 11570163-00 PMKOBETSU-1379 テキスト出力操作ログおよび出力時アラートメッセージ追加対応</br>
        private void exportIntoTextFile()
        {
            // タブが「赤伝」「残高」の時は終了(そもそもボタンが有効でないはず)
            // 2010/04/15 残高は有効 >>>
            //if (this._selectedMainTabKey == "uTab_RedSlip" || this._selectedMainTabKey == "uTab_RemainList")
            if (this._selectedMainTabKey == "uTab_RedSlip")
            // 2010/04/15 <<<
            {
                return;
            }
            // 2010/04/15 Add 残高一覧テキスト出力対応 >>>
            if (this._selectedMainTabKey == "uTab_RemainList")
            {
                RemainExportIntoTextFile();
                return;
            }
            // 2010/04/15 Add <<<
            // 設定値があればロード
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
            //PMKAU04004UA settingConstForm = new PMKAU04004UA();
            //settingConstForm.Deserialize();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
            PMKAU04004UA settingConstForm = this._settingForm;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD

            // 設定オブジェクトを取得
            this._userSetting = settingConstForm.UserSetting;
            string outputFileName = this._userSetting.OutputFileName;
            if (String.IsNullOrEmpty(this._userSetting.OutputFileName))
            {
                // ファイル名が指定されていないとエラー
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                    MSG_OUTPUTFILENAME_NOTFOUND, -1, MessageBoxButtons.OK);

                return;
            }

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/05 DEL
            //// 確認メッセージ
            //if (TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_QUESTION, this.Name,
            //    MSG_CONFIRM_OUTPUTFILE + "\r\n\r\n出力ファイル：\r\n" + this._userSetting.OutputFileName, 
            //    -1, MessageBoxButtons.YesNo) == DialogResult.No)
            //{
            //    return;
            //}
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/05 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/05 ADD

            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
            // エラーメッセージ
            string errMsg = string.Empty;
            // アラート表示
            int logStatus = TextOutPutOprtnHisLogAcsObj.ShowTextOutPut(this, out errMsg);
            // アラートでOKボタンが押されない場合、テキスト出力が実行できない
            if (logStatus != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                if (!string.IsNullOrEmpty(errMsg))
                {
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOP, this.Name,
                                errMsg, logStatus, MessageBoxButtons.OK);
                }
                // 中止
                return;
            }
            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<

            // 確認ダイアログ生成・表示
            PMKAU04004UB textOutDialog = new PMKAU04004UB();
            textOutDialog.UserSetting = _userSetting;
            if (textOutDialog.ShowDialog() != DialogResult.OK)
            {
                // 中止
                return;
            }

            // ShowDialogにより、_userSettingは書き変わっているので設定XML更新
            settingConstForm.Serialize();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/05 ADD

            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
            // エラーメッセージ
            errMsg = string.Empty;
            TextOutPutOprtnHisLogWork textOutPutOprtnHisLogWorkObj = null;
            logStatus = TextOutPutWrite(2, string.Empty, null, ref textOutPutOprtnHisLogWorkObj, out errMsg);

            // ログ登録異常場合、テキスト出力が実行できない
            if (logStatus != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                if (!string.IsNullOrEmpty(errMsg))
                {
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOP, this.Name,
                                errMsg, logStatus, MessageBoxButtons.OK);
                }
                // 中止
                return;
            }
            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<

            DataView view = null; // ADD 2015/02/05 王亜楠

            String typeStr = string.Empty;
            Char typeChar = new char();
            Byte typeByte = new byte();
            DateTime typeDate = new DateTime();

            Int16 typeInt16 = new short();
            Int32 typeInt32 = new int();
            Int64 typeInt64 = new long();
            Single typeSingle = new float();
            Double typeDouble = new double();
            Decimal typeDecimal = new decimal();

            FormattedTextWriter tw = new FormattedTextWriter();

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
            # region // DEL
            //if (this._userSetting.OutputStyle == 3)
            //{
            //    // パターンを分解
            //    _patternSetting = new string[9];
            //    settingConstForm.Degradation(this._userSetting.SelectedPatternName, out _patternSetting);

            //    // パターンの構成
            //    // 区切り文字(タブ・任意・固定長）/区切り文字任意/  0-1
            //    // 括り文字(”・任意）/括り文字任意/                2-3
            //    // 数値括り（する／しない)                          4
            //    // 文字括り（する／しない)                          5
            //    // タイトル行（あり／なし）                         6
            //    // 伝票出力項目リスト (32項目x3文字) 基本的に表示順の数字,非表示の場合は+100, 必ずExportColumnDataSet.SalesListの順に並んでいる   7
            //    // 明細出力項目リスト (57項目x3文字) 基本的に表示順の数字,非表示の場合は+100, 必ずExportColumnDataSet.SalesDetailの順に並んでいる 8

            //    // カラム名一覧を作成
            //    if (this._selectedMainTabKey == "uTab_SlipList")
            //    {
            //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
            //        //_exportColumnNameList = settingConstForm.GetColumnNameList(_patternSetting[7], true);
            //        //string[] gridSetting = new string[32];
            //        //getGridSettingPattern(_patternSetting[7], out gridSetting, true);
            //        //List<String> schemeList = new List<string>();
            //        //getSchemeList(gridSetting, true, out schemeList, true);
            //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
            //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
            //        _exportColumnNameList = settingConstForm.GetColumnNameList( _patternSetting[7], true );
            //        string[] gridSetting;
            //        getGridSettingPattern( _patternSetting[7], out gridSetting, true );
            //        List<String> schemeList;
            //        getSchemeList( gridSetting, true, out schemeList, true );
            //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
            //    }
            //    else
            //    {
            //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
            //        //_exportColumnNameList = settingConstForm.GetColumnNameList(_patternSetting[8], false);
            //        //string[] gridSetting = new string[57];
            //        //getGridSettingPattern(_patternSetting[8], out gridSetting, false);
            //        //List<String> schemeList = new List<string>();
            //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
            //        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
            //        _exportColumnNameList = settingConstForm.GetColumnNameList( _patternSetting[8], false );
            //        string[] gridSetting;
            //        getGridSettingPattern( _patternSetting[8], out gridSetting, false );
            //        List<String> schemeList;
            //        getSchemeList( gridSetting, false, out schemeList, true );
            //        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
            //    }
            //}
            //else
            //{
            //    // 全ての列を書き出し
            //    // style = 0:.CSV(カンマ区切り)
            //    // style = 1:.TXT(タブ区切り)
            //    // style = 2:.PRN(スペース区切り)
            //    // パターンを分解
            //    _patternSetting = new string[9];
            //    settingConstForm.Degradation(this._userSetting.SelectedPatternName, out _patternSetting);

            //    // カラム名一覧を作成
            //    if (this._selectedMainTabKey == "uTab_SlipList")
            //    {
            //        List<String> schemeList = new List<string>();
            //        getSchemeList(null, true, out schemeList, false);


            //        #region オプションセット
            //        // 出力項目名
            //        tw.SchemeList = schemeList;
            //        // ファイル名
            //        tw.OutputFileName = this._userSetting.OutputFileName;
            //        // 区切り文字
            //        if (this._patternSetting[0] == "0")
            //        {
            //            tw.Splitter = "\t";
            //        }
            //        else if (this._patternSetting[0] == "1")
            //        {
            //            tw.Splitter = this._patternSetting[1];
            //        }
            //        else
            //        {
            //            tw.Splitter = string.Empty;
            //        }
            //        // 項目括り文字
            //        if (this._patternSetting[2] == "0")
            //        {
            //            tw.Encloser = "\"";
            //        }
            //        else if (this._patternSetting[2] == "1")
            //        {
            //            tw.Encloser = this._patternSetting[3];
            //        }
            //        // 固定幅
            //        if (this._patternSetting[0] == "2")
            //        {
            //            tw.FixedLength = true;
            //        }
            //        else
            //        {
            //            tw.FixedLength = false;
            //        }
            //        // タイトル行出力
            //        if (this._patternSetting[6] == "1")
            //        {
            //            tw.CaptionOutput = false;
            //        }
            //        else
            //        {
            //            tw.CaptionOutput = true;
            //        }
            //        // 項目括り適用
            //        List<Type> enclosingList = new List<Type>();
            //        if (this._patternSetting[4] == "0")
            //        {
            //            enclosingList.Add(typeInt16.GetType());
            //            enclosingList.Add(typeInt32.GetType());
            //            enclosingList.Add(typeInt64.GetType());
            //            enclosingList.Add(typeDouble.GetType());
            //            enclosingList.Add(typeDecimal.GetType());
            //            enclosingList.Add(typeSingle.GetType());
            //        }
            //        if (this._patternSetting[5] == "0")
            //        {
            //            enclosingList.Add(typeStr.GetType());
            //            enclosingList.Add(typeChar.GetType());
            //            enclosingList.Add(typeByte.GetType());
            //            enclosingList.Add(typeDate.GetType());
            //        }
            //        tw.EnclosingTypeList = enclosingList;
            //        tw.DataSource = this.uGrid_Slip.DataSource;
            //        #endregion // オプションセット
            //    }
            //    else if (this._selectedMainTabKey == "uTab_SlipDetail")
            //    {
            //        List<String> schemeList = new List<string>();
            //        getSchemeList(null, false, out schemeList, false);

            //        #region オプションセット
            //        // 出力項目名
            //        tw.SchemeList = schemeList;
            //        // ファイル名
            //        tw.OutputFileName = this._userSetting.OutputFileName;
            //        // 区切り文字
            //        if (this._patternSetting[0] == "0")
            //        {
            //            tw.Splitter = "\t";
            //        }
            //        else if (this._patternSetting[0] == "1")
            //        {
            //            tw.Splitter = this._patternSetting[1];
            //        }
            //        else
            //        {
            //            tw.Splitter = string.Empty;
            //        }
            //        // 項目括り文字
            //        if (this._patternSetting[2] == "0")
            //        {
            //            tw.Encloser = "\"";
            //        }
            //        else if (this._patternSetting[2] == "1")
            //        {
            //            tw.Encloser = this._patternSetting[3];
            //        }
            //        // 固定幅
            //        if (this._patternSetting[0] == "2")
            //        {
            //            tw.FixedLength = true;
            //        }
            //        else
            //        {
            //            tw.FixedLength = false;
            //        }
            //        // タイトル行出力
            //        if (this._patternSetting[6] == "1")
            //        {
            //            tw.CaptionOutput = false;
            //        }
            //        else
            //        {
            //            tw.CaptionOutput = true;
            //        }
            //        // 項目括り適用
            //        List<Type> enclosingList = new List<Type>();
            //        if (this._patternSetting[4] == "0")
            //        {
            //            enclosingList.Add(typeInt16.GetType());
            //            enclosingList.Add(typeInt32.GetType());
            //            enclosingList.Add(typeInt64.GetType());
            //            enclosingList.Add(typeDouble.GetType());
            //            enclosingList.Add(typeDecimal.GetType());
            //            enclosingList.Add(typeSingle.GetType());
            //        }
            //        if (this._patternSetting[5] == "0")
            //        {
            //            enclosingList.Add(typeStr.GetType());
            //            enclosingList.Add(typeChar.GetType());
            //            enclosingList.Add(typeByte.GetType());
            //            enclosingList.Add(typeDate.GetType());
            //        }
            //        tw.EnclosingTypeList = enclosingList;
            //        tw.DataSource = this.uGrid_Detail.DataSource;
            //        #endregion // オプションセット
            //    }
            //    //else if (this._selectedMainTabKey == "uTab_RemainList")
            //    //{
            //    //    List<String> schemeList = new List<string>();
            //    //    getSchemeList(null, false, out schemeList, false);

            //    //    #region オプションセット
            //    //    // 出力項目名
            //    //    tw.SchemeList = schemeList;
            //    //    // ファイル名
            //    //    tw.OutputFileName = this._userSetting.OutputFileName;
            //    //    // 区切り文字
            //    //    if (this._patternSetting[0] == "0")
            //    //    {
            //    //        tw.Splitter = "\t";
            //    //    }
            //    //    else if (this._patternSetting[0] == "1")
            //    //    {
            //    //        tw.Splitter = this._patternSetting[1];
            //    //    }
            //    //    else
            //    //    {
            //    //        tw.Splitter = string.Empty;
            //    //    }
            //    //    // 項目括り文字
            //    //    if (this._patternSetting[2] == "0")
            //    //    {
            //    //        tw.Encloser = "\"";
            //    //    }
            //    //    else if (this._patternSetting[2] == "1")
            //    //    {
            //    //        tw.Encloser = this._patternSetting[3];
            //    //    }
            //    //    // 固定幅
            //    //    if (this._patternSetting[0] == "2")
            //    //    {
            //    //        tw.FixedLength = true;
            //    //    }
            //    //    else
            //    //    {
            //    //        tw.FixedLength = false;
            //    //    }
            //    //    // タイトル行出力
            //    //    if (this._patternSetting[6] == "1")
            //    //    {
            //    //        tw.CaptionOutput = false;
            //    //    }
            //    //    else
            //    //    {
            //    //        tw.CaptionOutput = true;
            //    //    }
            //    //    // 項目括り適用
            //    //    List<Type> enclosingList = new List<Type>();
            //    //    if (this._patternSetting[4] == "0")
            //    //    {
            //    //        enclosingList.Add(typeInt16.GetType());
            //    //        enclosingList.Add(typeInt32.GetType());
            //    //        enclosingList.Add(typeInt64.GetType());
            //    //        enclosingList.Add(typeDouble.GetType());
            //    //        enclosingList.Add(typeDecimal.GetType());
            //    //        enclosingList.Add(typeSingle.GetType());
            //    //    }
            //    //    if (this._patternSetting[5] == "0")
            //    //    {
            //    //        enclosingList.Add(typeStr.GetType());
            //    //        enclosingList.Add(typeChar.GetType());
            //    //        enclosingList.Add(typeByte.GetType());
            //    //        enclosingList.Add(typeDate.GetType());
            //    //    }
            //    //    tw.EnclosingTypeList = enclosingList;
            //    //    tw.DataSource = this.uGrid_Detail.DataSource;
            //    //    #endregion // オプションセット
            //    //}
            //}
            # endregion
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
            //----- ADD 2015/02/05 王亜楠 -------------------->>>>>
            try
            {
            //----- ADD 2015/02/05 王亜楠 --------------------<<<<<
            // パターンを分解
            _patternSetting = new string[9];
            settingConstForm.Degradation(this._userSetting.SelectedPatternName, out _patternSetting);

            // パターンの構成
            // 区切り文字(タブ・任意・固定長）/区切り文字任意/  0-1
            // 括り文字(”・任意）/括り文字任意/                2-3
            // 数値括り（する／しない)                          4
            // 文字括り（する／しない)                          5
            // タイトル行（あり／なし）                         6
            // 伝票出力項目リスト (xx項目x3文字) 基本的に表示順の数字,非表示の場合は+100, 必ずSalesListの順に並んでいる   7
            // 明細出力項目リスト (xx項目x3文字) 基本的に表示順の数字,非表示の場合は+100, 必ずSalesDetailの順に並んでいる 8


            // カラム名一覧を作成
            if (this._patternSetting[10] == "0")
            {
                // 伝票
                _exportColumnNameList = settingConstForm.GetColumnNameList(_patternSetting[7], true);
                string[] gridSetting;
                getGridSettingPattern(_patternSetting[7], out gridSetting, true);
                List<String> schemeList;
                getSchemeList(gridSetting, true, out schemeList, true);
                //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
                //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
                //車種メーカーコードの順位調整
                //if (this._opt_Toua == Convert.ToInt32(Option.ON))
                //{
                //    ChangeTheColumnOrder(ref schemeList, CL_CARMAKERCODE_NAME, CL_CARMODELFULLNAME_NAME);
                //}
                //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
                //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<<

                // 出力項目名
                tw.SchemeList = schemeList;

                // 固定長：伝票
                SalesMaxLength(ref tw);

                // データソース
                // ------------DEL 2010/02/04-------------->>>>>
                //// -------------UPD 2009/12/28-------------->>>>>
                ////tw.DataSource = this.uGrid_Slip.DataSource;
                //DataView view = new DataView(this._detailDataSet.SalesList.Copy());
                //foreach (DataRowView dataRowView in view)
                //{
                //    int detailSign = -1;
                //    long salesMoneyTaxExc = (long)dataRowView[_detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName];
                //    long salesPriceConsTax = 0;
                //    if (dataRowView[_detailDataSet.SalesList.ConsumeTaxColumn.ColumnName] != DBNull.Value)
                //    {
                //        salesPriceConsTax = (long)dataRowView[_detailDataSet.SalesList.ConsumeTaxColumn.ColumnName];
                //    }
                //    long grossProfitDetail = (long)dataRowView[_detailDataSet.SalesList.GrossProfitColumn.ColumnName];
                //    // 返品
                //    if ((int)dataRowView[_detailDataSet.SalesList.SalesSlipCdColumn.ColumnName] == 1)
                //    {
                //        //金額
                //        dataRowView[_detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName] = salesMoneyTaxExc * detailSign;
                //        //消費税
                //        dataRowView[_detailDataSet.SalesList.ConsumeTaxColumn.ColumnName] = salesPriceConsTax * detailSign;
                //        //粗利
                //        dataRowView[_detailDataSet.SalesList.GrossProfitColumn.ColumnName] = grossProfitDetail * detailSign;

                //    }
                //}
                //tw.DataSource = view;
                //// -------------UPD 2009/12/28--------------<<<<<
                // ------------DEL 2010/02/04--------------<<<<<
                //add by liusy #35729 2013/05/20 -----<<<<<
                    //DataView view = new DataView(this._detailDataSet.SalesList.Copy()); // DEL 2015/02/05 王亜楠
                    view = new DataView(this._detailDataSet.SalesList.Copy()); // ADD 2015/02/05 王亜楠
                DateTime SalesDate = new DateTime();
                int date = 0;
                string date_year = "";
                foreach (DataRowView dataRowView in view)
                {
                    //西暦 -->>和暦の変換処理
                    //伝票日付
                    if(dataRowView[_detailDataSet.SalesList.SalesDateColumn.ColumnName].ToString()!=""&&(DateTime)dataRowView[_detailDataSet.SalesList.SalesDateColumn.ColumnName]!=DateTime.MinValue)
                    {
                        SalesDate = (DateTime)dataRowView[_detailDataSet.SalesList.SalesDateColumn.ColumnName];
                        date = int.Parse(SalesDate.ToString("yyyyMMdd"));
                        date_year = GetDateFW(date);
                        dataRowView[_detailDataSet.SalesList.SalesDateJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2,'0') + "/" + SalesDate.Day.ToString().PadLeft(2,'0');
                    }
                    //計上日
                    if (dataRowView[_detailDataSet.SalesList.AddUpADateColumn.ColumnName].ToString() != "" && (DateTime)dataRowView[_detailDataSet.SalesList.AddUpADateColumn.ColumnName] != DateTime.MinValue)
                    {
                        SalesDate = (DateTime)dataRowView[_detailDataSet.SalesList.AddUpADateColumn.ColumnName];
                        date = int.Parse(SalesDate.ToString("yyyyMMdd"));
                        date_year = GetDateFW(date);
                        dataRowView[_detailDataSet.SalesList.AddUpADateJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2,'0') + "/" + SalesDate.Day.ToString().PadLeft(2,'0');
                    }
                    //入力日
                    if (dataRowView[_detailDataSet.SalesList.InputDayColumn.ColumnName].ToString() != "" && (DateTime)dataRowView[_detailDataSet.SalesList.InputDayColumn.ColumnName] != DateTime.MinValue)
                    {
                        SalesDate = (DateTime)dataRowView[_detailDataSet.SalesList.InputDayColumn.ColumnName];
                        date = int.Parse(SalesDate.ToString("yyyyMMdd"));
                        date_year = GetDateFW(date);
                        dataRowView[_detailDataSet.SalesList.InputDayJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2,'0') + "/" + SalesDate.Day.ToString().PadLeft(2,'0');
                    }
                    //更新時間
                    if (dataRowView[_detailDataSet.SalesList.UpdateDateTimeColumn.ColumnName].ToString() != "" && (string)dataRowView[_detailDataSet.SalesList.UpdateDateTimeColumn.ColumnName] != string.Empty)
                    {
                        string updatetime = (string)dataRowView[_detailDataSet.SalesList.UpdateDateTimeColumn.ColumnName];
                        date = int.Parse(updatetime.Substring(0, 10).Replace("/", ""));
                        date_year = GetDateFW(date);
                        dataRowView[_detailDataSet.SalesList.UpdateDateTimeJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2,'0') + "/" + SalesDate.Day.ToString().PadLeft(2,'0') + updatetime.Substring(10);
                    }

                    //----- ADD 2015/09/17 田建委 Redmine#47006 ---------->>>>>
                    // 「返品伝票金額をマイナスで出力する」チェックオンの場合、
                    if (this._patternSetting[12] == "1")
                    {
                        int detailSign = -1;

                        // 金額
                        long salesTotalTaxExc = 0;
                        if (dataRowView[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName] != DBNull.Value)
                        {
                            salesTotalTaxExc = (long)dataRowView[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName];
                        }

                        // 消費税
                        long consumeTax = 0;
                        if (dataRowView[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName] != DBNull.Value)
                        {
                            consumeTax = (long)dataRowView[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName];
                        }

                        // 粗利
                        long grossProfit = 0;
                        if (dataRowView[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName] != DBNull.Value)
                        {
                            grossProfit = (long)dataRowView[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName];
                        }

                        // 伝票区分
                        int salesSlipCd = -1;
                        if (dataRowView[this._detailDataSet.SalesList.SalesSlipCdColumn.ColumnName] != DBNull.Value)
                        {
                            salesSlipCd = (int)dataRowView[this._detailDataSet.SalesList.SalesSlipCdColumn.ColumnName];
                        }

                        // 伝票区分＝「返品」の場合、符号を反転させる
                        if (salesSlipCd == 1)
                        {
                            //金額
                            if (dataRowView[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName] != DBNull.Value)
                            {
                                dataRowView[this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName] = salesTotalTaxExc * detailSign;
                            }

                            //消費税
                            if (dataRowView[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName] != DBNull.Value)
                            {
                                dataRowView[this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName] = consumeTax * detailSign;
                            }

                            //粗利
                            if (dataRowView[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName] != DBNull.Value)
                            {
                                dataRowView[this._detailDataSet.SalesList.GrossProfitColumn.ColumnName] = grossProfit * detailSign;
                            }
                        }
                    }
                    //----- ADD 2015/09/17 田建委 Redmine#47006 ----------<<<<<
                }
                tw.DataSource = view;
                //add by liusy #35729 2013/05/20 ----->>>>>

                //tw.DataSource = this.uGrid_Slip.DataSource;// ADD 2010/02/04 //del by liusy #35729 2013/05/20
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 ADD
                // グリッドのソート情報を適用する
                if (tw.DataSource is DataView)
                {
                    (tw.DataSource as DataView).Sort = GetSortingColumns(this.uGrid_Slip);
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 ADD

                # region [フォーマットリスト]
                Dictionary<string, string> formatList = new Dictionary<string, string>();
                foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn col in uGrid_Slip.DisplayLayout.Bands[0].Columns)
                {
                    formatList.Add(col.Key, col.Format);
                }
                tw.FormatList = formatList;
                # endregion
            }
            else
            {
                // 明細
                _exportColumnNameList = settingConstForm.GetColumnNameList(_patternSetting[8], false);
                string[] gridSetting;
                getGridSettingPattern(_patternSetting[8], out gridSetting, false);
                List<String> schemeList;
                getSchemeList(gridSetting, false, out schemeList, true);
                //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
                //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
                //車種メーカーコードの順位調整
                //if (this._opt_Toua == Convert.ToInt32(Option.ON))
                //{
                //    ChangeTheColumnOrder(ref schemeList, CL_CARMAKERCODE_NAME, CL_CARMODELFULLNAME_NAME);
                //}
                //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
                //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<<

                // 出力項目名
                tw.SchemeList = schemeList;

                // 固定長：明細
                SalesDtlMaxLength(ref tw);

                // データソース
                // -------------UPD 2009/12/28-------------->>>>>
                //tw.DataSource = this.uGrid_Detail.DataSource;
                    //DataView view = new DataView(this._detailDataSet.SalesDetail.Copy()); // DEL 2015/02/05 王亜楠
                    view = new DataView(this._detailDataSet.SalesDetail.Copy()); // ADD 2015/02/05 王亜楠
                int date = 0;
                string date_year = "";
                DateTime SalesDate = new DateTime();
                foreach (DataRowView dataRowView in view)
                {
                    //add by liusy #35729 2013/05/20 -----<<<<<
                    //西暦 -->>和暦の変換処理
                    //伝票日付

                    if (dataRowView[_detailDataSet.SalesDetail.SalesDateColumn.ColumnName].ToString() != "" && (DateTime)dataRowView[_detailDataSet.SalesDetail.SalesDateColumn.ColumnName] != DateTime.MinValue)
                    {
                        SalesDate = (DateTime)dataRowView[_detailDataSet.SalesDetail.SalesDateColumn.ColumnName];
                        date = int.Parse(SalesDate.ToString("yyyyMMdd"));
                        date_year = GetDateFW(date);
                        dataRowView[_detailDataSet.SalesDetail.SalesDateJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2,'0') + "/" + SalesDate.Day.ToString().PadLeft(2,'0');
                    }
                    //計上日
                    if (dataRowView[_detailDataSet.SalesDetail.AddUpADateColumn.ColumnName].ToString() != "" && (DateTime)dataRowView[_detailDataSet.SalesDetail.AddUpADateColumn.ColumnName] != DateTime.MinValue)
                    {
                        SalesDate = (DateTime)dataRowView[_detailDataSet.SalesDetail.AddUpADateColumn.ColumnName];
                        date = int.Parse(SalesDate.ToString("yyyyMMdd"));
                        date_year = GetDateFW(date);
                        dataRowView[_detailDataSet.SalesDetail.AddUpADateJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2,'0') + "/" + SalesDate.Day.ToString().PadLeft(2,'0');
                    }
                    //入力日
                    if (dataRowView[_detailDataSet.SalesDetail.InputDayColumn.ColumnName].ToString() != "" && (DateTime)dataRowView[_detailDataSet.SalesDetail.InputDayColumn.ColumnName] != DateTime.MinValue)
                    {
                        SalesDate = (DateTime)dataRowView[_detailDataSet.SalesDetail.InputDayColumn.ColumnName];
                        date = int.Parse(SalesDate.ToString("yyyyMMdd"));
                        date_year = GetDateFW(date);
                        dataRowView[_detailDataSet.SalesDetail.InputDayJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2,'0') + "/" + SalesDate.Day.ToString().PadLeft(2,'0');
                    }
                    //更新時間
                    if (dataRowView[_detailDataSet.SalesDetail.UpdateDateTimeColumn.ColumnName].ToString() != "" && (string)dataRowView[_detailDataSet.SalesDetail.UpdateDateTimeColumn.ColumnName] != string.Empty)
                    {
                        string updatetime = (string)dataRowView[_detailDataSet.SalesDetail.UpdateDateTimeColumn.ColumnName];
                        date = int.Parse(updatetime.Substring(0, 10).Replace("/", ""));
                        date_year = GetDateFW(date);
                        dataRowView[_detailDataSet.SalesDetail.UpdateDateTimeJPColumn.ColumnName] = date_year.ToString() + "/" + SalesDate.Month.ToString().PadLeft(2,'0') + "/" + SalesDate.Day.ToString().PadLeft(2,'0') + updatetime.Substring(10);
                    }


                    //----- DEL 2015/09/17 田建委 Redmine#47006 ---------->>>>>
                    //add by liusy #35729 2013/05/20 ----->>>>> 
                    //// 返品
                    //int detailSign = -1;
                    //long salesMoneyTaxExc = (long)dataRowView[_detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName];
                    ////-----UPD 2010/12/20 ----->>>>>
                    ////double shipmentCnt = (double)dataRowView[_detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName];
                    //double shipmentCnt = 0;
                    //if (dataRowView[_detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName] != DBNull.Value)
                    //{
                    //    shipmentCnt = (double)dataRowView[_detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName];
                    //}
                    ////-----UPD 2010/12/20 -----<<<<<
                    //long salesPriceConsTax = 0;
                    //if (dataRowView[_detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName] != DBNull.Value)
                    //{
                    //    salesPriceConsTax = (long)dataRowView[_detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName];
                    //}
                    ////-----UPD 2010/12/20 ----->>>>>
                    //long grossProfitDetail = 0;
                    //if (dataRowView[_detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName] != DBNull.Value)
                    //{
                    //    grossProfitDetail = (long)dataRowView[_detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName];
                    //}
                    ////-----UPD 2010/12/20 -----<<<<<
                    //// ----------------DEL 2010/02/04----------------->>>>>
                    ////// ----------------UPD 2010/01/25----------------->>>>>
                    //////if ((int)dataRowView[_detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName] == 1)
                    //////返品又は売上の商品値引の場合
                    ////if (((int)dataRowView[_detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName] == 1) ||
                    ////   (((int)dataRowView[_detailDataSet.SalesDetail.SalesSlipCdDtlColumn.ColumnName] == 2) && (dataRowView[_detailDataSet.SalesDetail.GoodsNoColumn.ColumnName] != DBNull.Value)))
                    ////// ----------------UPD 2010/01/25-----------------<<<<<
                    //// ----------------DEL 2010/02/04-----------------<<<<<
                    //// ----------------ADD 2010/02/04----------------->>>>>
                    //// 区分
                    //int salesSlipCd = (int)dataRowView[_detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName];
                    //// 明細区分
                    ////-----UPD 2010/12/20 ----->>>>>
                    ////int salesSlipCdDtl = (int)dataRowView[_detailDataSet.SalesDetail.SalesSlipCdDtlColumn.ColumnName];
                    //int salesSlipCdDtl = -1;
                    //if (dataRowView[_detailDataSet.SalesDetail.SalesSlipCdDtlColumn.ColumnName] != DBNull.Value)
                    //{
                    //    salesSlipCdDtl = (int)dataRowView[_detailDataSet.SalesDetail.SalesSlipCdDtlColumn.ColumnName];
                    //}
                    ////-----UPD 2010/12/20 -----<<<<<
                    //// 品番
                    //string goodNo = dataRowView[_detailDataSet.SalesDetail.GoodsNoColumn.ColumnName].ToString();
                    //// 受注ステータス
                    //int acceptAnOrderNo = (int)dataRowView[_detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName];
                    //// 返品の「行値引、通常」の場合、符号を反転させる
                    //// 売上の商品値引の場合、符号を反転させる
                    //if (((salesSlipCd == 1) && ((salesSlipCdDtl != 2) || ((salesSlipCdDtl == 2) && (string.IsNullOrEmpty(goodNo))))) ||
                    //    (salesSlipCd == 0 && acceptAnOrderNo == 30 && salesSlipCdDtl == 2 && !string.IsNullOrEmpty(goodNo)))
                    //// ----------------ADD 2010/02/04-----------------<<<<<
                    //{
                    //    //金額
                    //    dataRowView[_detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName] = salesMoneyTaxExc * detailSign;
                    //    //数量
                    //    dataRowView[_detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName] = shipmentCnt * detailSign;
                    //    //消費税
                    //    // -----------------UPD 2010/02/04---------------->>>>>
                    //    //dataRowView[_detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName] = salesPriceConsTax * detailSign;
                    //    if (dataRowView[_detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName] != DBNull.Value)
                    //    {
                    //        dataRowView[_detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName] = salesPriceConsTax * detailSign;
                    //    }
                    //    // -----------------UPD 2010/02/04----------------<<<<<
                    //    //粗利
                    //    dataRowView[_detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName] = grossProfitDetail * detailSign;

                    //}
                    //----- DEL 2015/09/17 田建委 Redmine#47006 ----------<<<<<

                    //----- ADD 2015/09/17 田建委 Redmine#47006 ---------->>>>>
                    // 「マイナス金額にはマイナス記号を付与する」のチェックはオンの場合、
                    if (this._patternSetting[13] == "1")
                    {

                        int detailSign = -1;

                        // 金額
                        long salesMoneyTaxExc = 0;
                        if (dataRowView[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName] != DBNull.Value)
                        {
                            salesMoneyTaxExc = (long)dataRowView[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName];
                        }

                        // 数量
                        double shipmentCnt = 0;
                            if (dataRowView[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName] != DBNull.Value)
                        {
                                shipmentCnt = (double)dataRowView[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName];
                        }

                        // 消費税
                        long salesPriceConsTax = 0;
                            if (dataRowView[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName] != DBNull.Value)
                        {
                                salesPriceConsTax = (long)dataRowView[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName];
                        }

                        // 粗利
                        long grossProfitDetail = 0;
                            if (dataRowView[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName] != DBNull.Value)
                        {
                                grossProfitDetail = (long)dataRowView[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName];
                        }

                        // 伝票区分
                        int salesSlipCd = -1;
                        if (dataRowView[this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName] != DBNull.Value)
                        {
                            salesSlipCd = (int)dataRowView[this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName];
                        }

                        // 伝票区分（明細）
                        int salesSlipCdDtl = -1;
                            if (dataRowView[this._detailDataSet.SalesDetail.SalesSlipCdDtlColumn.ColumnName] != DBNull.Value)
                        {
                                salesSlipCdDtl = (int)dataRowView[this._detailDataSet.SalesDetail.SalesSlipCdDtlColumn.ColumnName];
                        }

                        // 品番
                        string goodNo = string.Empty;
                        if (dataRowView[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName] != DBNull.Value)
                        {
                            goodNo = dataRowView[this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName].ToString();

                        }

                        // 受注ステータス
                        int acceptAnOrderNo = -1;
                        if (dataRowView[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName] != DBNull.Value)
                        {
                            acceptAnOrderNo = (int)dataRowView[this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName];
                        }

                        // 返品の「行値引、通常」の場合、符号を反転させる
                        // 売上の商品値引の場合、符号を反転させる
                        if (((salesSlipCd == 1) && ((salesSlipCdDtl != 2) || ((salesSlipCdDtl == 2) && (string.IsNullOrEmpty(goodNo))))) ||
                            (salesSlipCd == 0 && acceptAnOrderNo == 30 && salesSlipCdDtl == 2 && !string.IsNullOrEmpty(goodNo)))
                        {
                            //金額
                            if (dataRowView[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName] != DBNull.Value)
                            {
                                dataRowView[this._detailDataSet.SalesDetail.SalesMoneyTaxExcColumn.ColumnName] = salesMoneyTaxExc * detailSign;
                            }
                            
                            //数量
                            if (dataRowView[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName] != DBNull.Value)
                            {
                                dataRowView[this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName] = shipmentCnt * detailSign;
                            }
                            
                            //消費税
                            if (dataRowView[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName] != DBNull.Value)
                            {
                                    dataRowView[this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName] = salesPriceConsTax * detailSign;
                            }
                            //粗利
                            if (dataRowView[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName] != DBNull.Value)
                            {
                                dataRowView[this._detailDataSet.SalesDetail.GrossProfitDetailColumn.ColumnName] = grossProfitDetail * detailSign;
                            }
                         }
                    }
                    //----- ADD 2015/09/17 田建委 Redmine#47006 ----------<<<<<
                }
                tw.DataSource = view;
                // -------------UPD 2009/12/28--------------<<<<<

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 ADD
                // グリッドのソート情報を適用する
                if (tw.DataSource is DataView)
                {
                    (tw.DataSource as DataView).Sort = GetSortingColumns(this.uGrid_Detail);
                }
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 ADD

                # region [フォーマットリスト]
                Dictionary<string, string> formatList = new Dictionary<string, string>();
                foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn col in uGrid_Detail.DisplayLayout.Bands[0].Columns)
                {
                    formatList.Add(col.Key, col.Format);
                }
                tw.FormatList = formatList;
                # endregion
            }


            #region オプションセット
            // ファイル名
            tw.OutputFileName = this._userSetting.OutputFileName;
            // 区切り文字
            if (this._patternSetting[0] == "0")
            {
                tw.Splitter = "\t";
            }
            else if (this._patternSetting[0] == "1")
            {
                tw.Splitter = this._patternSetting[1];
            }
            else
            {
                tw.Splitter = string.Empty;
            }
            // 項目括り文字
            if (this._patternSetting[2] == "0")
            {
                tw.Encloser = "\"";
            }
            else if (this._patternSetting[2] == "1")
            {
                tw.Encloser = this._patternSetting[3];
            }
            // 固定幅
            if (this._patternSetting[0] == "2")
            {
                tw.FixedLength = true;
            }
            else
            {
                tw.FixedLength = false;
            }
            // タイトル行出力
            if (this._patternSetting[6] == "1")
            {
                tw.CaptionOutput = false;
            }
            else
            {
                tw.CaptionOutput = true;
            }
            // 項目括り適用
            List<Type> enclosingList = new List<Type>();
            if (this._patternSetting[4] == "0")
            {
                enclosingList.Add(typeInt16.GetType());
                enclosingList.Add(typeInt32.GetType());
                enclosingList.Add(typeInt64.GetType());
                enclosingList.Add(typeDouble.GetType());
                enclosingList.Add(typeDecimal.GetType());
                enclosingList.Add(typeSingle.GetType());
            }
            if (this._patternSetting[5] == "0")
            {
                enclosingList.Add(typeStr.GetType());
                enclosingList.Add(typeChar.GetType());
                enclosingList.Add(typeByte.GetType());
                enclosingList.Add(typeDate.GetType());
            }
            tw.EnclosingTypeList = enclosingList;
            #endregion

            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD

            int outputCount = 0;
            int status = tw.TextOut(out outputCount);

            if (status == 9)// 異常終了
            {
                // 出力失敗
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                    MSG_OUTPUTFILE_FAILED, -1, MessageBoxButtons.OK);
            }
            else
            {
                // 出力成功
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                    outputCount.ToString() + MSG_OUTPUTFILE_SUCCEEDED, -1, MessageBoxButtons.OK);
                //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
                // エラーメッセージ
                errMsg = string.Empty;
                // 操作履歴登録
                textOutPutOprtnHisLogWorkObj.LogOperationData = string.Format(CountNumStr, outputCount.ToString()) + textOutPutOprtnHisLogWorkObj.LogOperationData;
                logStatus = TextOutPutOprtnHisLogAcsObj.Write(this, ref textOutPutOprtnHisLogWorkObj, out errMsg);
                // ログ登録異常の場合、テキスト出力が実行できない
                if (logStatus != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                {
                    if (!string.IsNullOrEmpty(errMsg))
                    {
                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOP, this.Name,
                                    errMsg, logStatus, MessageBoxButtons.OK);
                    }
                    // 中止
                    return;
                }
                //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<
            }
            // 引数設定
            // DataSource        Object                     DataSet/DataTable/DataView
            // DataMember        String                     (DataSetの場合)対象のテーブル名
            // OutputFileName    String                     出力ファイル名（フォルダ・拡張子含む)   this._userSetting.OutputFileName
            // SchemeList        List<String>               テキスト出力するカラム名一覧            this._exportColumnNameList
            // Spritter          String                     項目の区切り文字(列)、"\t"ならばTAB     this._patternSetting[0]=0(\t), =1(this._patternSetting[1]), =2(string.Empty)
            // Encloser          String                     項目括り文字                            this._patternSetting[2]=0("), =1(this._patternSetting[3])
            // EnclosingTypeList List<Type>                 項目括り文字を適用する型                this._patternSetting[4]=0(Type.Numeric), this._patternSetting[5]=0(Type.Char)
            // FormatList        Dictianary<String,String>  列単位の出力フォーマット指定リスト      指定しない
            // CaptionOutput     Boolean                    タイトル行出力フラグ                    ?this._patternSetting[6]=1
            // FixedLength       Boolean                    固定長出力フラグ                        ?this._patternSetting[0]=2
            // ReplaceList       Dictianary<String,String>  文字列置換する項目の一覧。              指定しない
            //----- ADD 2015/02/05 王亜楠 -------------------->>>>>
            }
            finally
            {
                // メモリの解放
                if (view != null) view.Dispose();
                tw = null;
            }
            //----- ADD 2015/02/05 王亜楠 --------------------<<<<<
        }

        // 固定長：明細
        /// <remarks>
        /// <br>Update Note: 2016/01/21 脇田 靖之</br>
        /// <br>管理番号   : 11270007-00</br>
        /// <br>           : 仕掛一覧№2808 貸出受注対応</br>
        /// <br>           : ①検索条件に「出荷状況」項目を追加</br>
        /// <br>           : ②明細表示に計上数、未計上数項目を追加</br>
        /// </remarks>
        private void SalesDtlMaxLength(ref FormattedTextWriter tw)
        {
            #region
            tw.MaxLengthList = new Dictionary<string, int>();
            //add by liusy #35729 2013/05/20 -----<<<<<
            //元号表示区分が西暦
            if (this._patternSetting[11] == "0")
            {
                tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesDateColumn.ColumnName, 10);          //伝票日付
            }
            else   //和暦
            {
                tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesDateJPColumn.ColumnName, 16);          //伝票日付
            }
            //add by liusy #35729 2013/05/20 ----->>>>>
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.DataDivColumn.ColumnName, 3);            //伝票番号
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesEmployeeNmColumn.ColumnName, 8);    //担当者名
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesTotalTaxExcColumn.ColumnName, 12);  //金額
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.CategoryNoColumn.ColumnName, 9);         //類別型式
            //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName, 20);          //車種メーカーコード 
            //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.ModelFullNameColumn.ColumnName, 30);     //車種
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName, 10);     //年式
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.FrameNoColumn.ColumnName, 60);           //車台No
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.FullModelColumn.ColumnName, 88);         //型式
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SlipNoteColumn.ColumnName, 60);          //備考
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SlipNote2Column.ColumnName, 60);         //備考２
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SlipNote3Column.ColumnName, 60);         //備考３
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.FrontEmployeeNmColumn.ColumnName, 10);    //受注者
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesInputNameColumn.ColumnName, 10);     //発行者
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName, 8);       //得意先コード
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.CustomerSnmColumn.ColumnName, 20);       //得意先略称
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName, 40);  //指示書(仮伝)番号
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName, 40);        //管理No
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.AcceptAnOrderNoColumn.ColumnName, 12);   //計上受注No
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SectionCdColumn.ColumnName, 4);          //拠点コード
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.ColorName1Column.ColumnName, 80);        //カラー名称
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.TrimNameColumn.ColumnName, 80);          //トリム名称
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.CustSlipNoColumn.ColumnName, 18);        //得意先伝票番号
            //add by liusy #35729 2013/05/20 -----<<<<<
            //元号表示区分が西暦
            if (this._patternSetting[11] == "0")
            {
                tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.AddUpADateColumn.ColumnName, 10);          //計上日付
            }
            else   //和暦
            {
                tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.AddUpADateJPColumn.ColumnName, 16);          //計上日付
            }
            //add by liusy #35729 2013/05/20 ----->>>>>
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.AccRecDivCdColumn.ColumnName, 2);        //売掛区分
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.AccRecDivCdNameColumn.ColumnName, 4);    //売掛区分名
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName, 2);       //赤伝区分
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.AddresseeCodeColumn.ColumnName, 12);     //納入先
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.AddresseeNameColumn.ColumnName, 40);     //納入先名称

            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName, 8);         //行No
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName, 4);    //受注ステータス
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName, 4);        //売上伝票区分
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesSlipCdNameColumn.ColumnName, 8);    //区分名
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesSlipCdDtlNameColumn.ColumnName, 8);    //明細区分名
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.GoodsNameColumn.ColumnName, 80);         //品名
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.GoodsNoColumn.ColumnName, 200);          //品番
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.ChangeGoodsNoColumn.ColumnName, 200);    //変換後品番 // ADD 陳永康 2014/12/28 変換後品番の追加対応
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.BLGoodsCodeColumn.ColumnName, 6);        //BLコード
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.BLGroupCodeColumn.ColumnName, 5);        //BLグループコード
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.GoodsMGroupColumn.ColumnName, 12);        //中分類コード
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.GoodsMGroupNameColumn.ColumnName, 40);        //中分類名
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.GoodsLGroupColumn.ColumnName, 12);        //大分類コード
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.GoodsLGroupNameColumn.ColumnName, 40);        //中分類名
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.ShipmentCntColumn.ColumnName, 8);        //数量
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.OpenPriceDivColumn.ColumnName, 4);       //オープン価格区分
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName, 9); //単価
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName, 9);      //原価

            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.ConsTaxLayMethodColumn.ColumnName, 9);   //消費税転嫁方式
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesTotalTaxIncColumn.ColumnName, 12);  //売上伝票合計
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesPriceConsTaxColumn.ColumnName, 12); //売上金額消費税額
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.TotalCostColumn.ColumnName, 12);         //原価金額計
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SupplierCdColumn.ColumnName, 13);         //仕入先コード
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SupplierSnmColumn.ColumnName, 40);       //仕入先名称
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SrcSalesSlipNumColumn.ColumnName, 8);    //元黒No
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.GoodsKindCodeNameColumn.ColumnName, 8);//商品属性名
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesOrderDivCdColumn.ColumnName, 4);    //在取
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesOrderDivCdNameColumn.ColumnName, 12);//在取名

            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.WarehouseCdColumn.ColumnName, 12);       //倉庫コード
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.WarehouseNameColumn.ColumnName, 40);     //倉庫名称
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.WarehouseShelfNoColumn.ColumnName, 8);     //棚番
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SupplierSlipNoColumn.ColumnName, 40);    //同時仕入No
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.UOESupplierCdColumn.ColumnName, 13);      //発注先コード
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.UOESupplierSnmColumn.ColumnName, 60);    //発注先名称
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.GuideNameColumn.ColumnName, 60);         //販売区分
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.StdUnPrcLPriceColumn.ColumnName, 9);     //算出価格
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.StdUnPrcSalUnPrcColumn.ColumnName, 9);   //算出価格
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.DtlNoteColumn.ColumnName, 30);           //明細備考
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.GoodsMakerCdColumn.ColumnName, 6);       //メーカーコード
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.MakerNameColumn.ColumnName, 60);       　//メーカー名称
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.CostColumn.ColumnName, 9);            　 //原価
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.StockPartySaleSlipNumColumn.ColumnName, 12);//同時仕入No
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.AcptAnOdrRemainCntColumn.ColumnName, 8);//受注残

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/09 ADD
            //add by liusy #35729 2013/05/20 -----<<<<<
            //元号表示区分が西暦
            if (this._patternSetting[11] == "0")
            {
                tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.InputDayColumn.ColumnName, 10);          //入力日
            }
            else   //和暦
            {
                tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.InputDayJPColumn.ColumnName, 16);          //入力日
            }
            //add by liusy #35729 2013/05/20 ----->>>>>
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/09 ADD
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/19 ADD
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SlipPrintTimeColumn.ColumnName, 12); // 伝票発行時刻
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/19 ADD
            // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesRecognitionCntColumn.ColumnName, 8);      //計上数
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesNotRecognitionCntColumn.ColumnName, 10);  //未計上数
            // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SalesAreaNameColumn.ColumnName, 30);   
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.CustAnalysCode1Column.ColumnName, 3);
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.CustAnalysCode2Column.ColumnName, 3);
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.CustAnalysCode3Column.ColumnName, 3);
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.CustAnalysCode4Column.ColumnName, 3);
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.CustAnalysCode5Column.ColumnName, 3);
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.CustAnalysCode6Column.ColumnName, 3);
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<
           // ---- ADD K2015/04/29 陳亮 テキスト出力項目に第二売価を追加する ---->>>>>
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.SecondSalePriceColumn.ColumnName, 9);//第二売価 
            // ---- ADD K2015/04/29 陳亮 テキスト出力項目に第二売価を追加する ----<<<<<            
            tw.MaxLengthList.Add(this._detailDataSet.SalesDetail.ConsTaxRateColumn.ColumnName, 6);        //消費税率　// ADD 時シン 2020/03/11 PMKOBETSU-2912

            #endregion
        }

        // 固定長:伝票
        private void SalesMaxLength(ref FormattedTextWriter tw)
        {
            #region
            tw.MaxLengthList = new Dictionary<string, int>();
            //add by liusy #35729 2013/05/20 -----<<<<<
            //元号表示区分が西暦
            if (this._patternSetting[11] == "0")
            {
                tw.MaxLengthList.Add(this._detailDataSet.SalesList.SalesDateColumn.ColumnName, 10);          //伝票日付  add by liusy
            }
            else   //和暦
            {
                tw.MaxLengthList.Add(this._detailDataSet.SalesList.SalesDateJPColumn.ColumnName, 16);          //伝票日付
            }
            //add by liusy #35729 2013/05/20 ----->>>>>
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.DataDivColumn.ColumnName, 3);            //伝票番号
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.SalesEmployeeNmColumn.ColumnName, 8);    //担当者名
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.SalesTotalTaxExcColumn.ColumnName, 12);  //金額
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.ConsumeTaxColumn.ColumnName, 12);        //消費税
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.GrossProfitColumn.ColumnName, 12);       //粗利
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.CategoryNoColumn.ColumnName, 9);         //類別型式
            //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.MakerCodeColumn.ColumnName, 20);          //車種メーカーコード 
            //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.ModelFullNameColumn.ColumnName, 30);     //車種
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.FirstEntryDateColumn.ColumnName, 10);     //年式
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.FrameNoColumn.ColumnName, 60);           //車台No
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.FullModelColumn.ColumnName, 88);         //型式
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.SlipNoteColumn.ColumnName, 60);          //備考
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.SlipNote2Column.ColumnName, 60);         //備考２
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.SlipNote3Column.ColumnName, 60);         //備考３
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.FrontEmployeeNmColumn.ColumnName, 10);    //受注者
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.SalesInputNameColumn.ColumnName, 10);     //発行者
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.CustomerCodeColumn.ColumnName, 8);       //得意先コード
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.CustomerSnmColumn.ColumnName, 20);       //得意先略称
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.PartySaleSlipNumColumn.ColumnName, 40);  //指示書(仮伝)番号
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.CarMngCodeColumn.ColumnName, 40);        //管理No
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.AcceptAnOrderNoColumn.ColumnName, 12);   //計上受注No
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.ShipmSalesSlipNumColumn.ColumnName, 20); //計上出荷No
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.UoeRemark1Column.ColumnName, 41);        //UOEリマーク１
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.UoeRemark2Column.ColumnName, 41);        //UOEリマーク２
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.SectionCdColumn.ColumnName, 4);          //拠点コード
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.SectionGuideNmColumn.ColumnName, 20);    //拠点名称
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.ColorName1Column.ColumnName, 80);        //カラー名称
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.TrimNameColumn.ColumnName, 80);          //トリム名称
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.CustSlipNoColumn.ColumnName, 18);        //得意先伝票番号
            //add by liusy #35729 2013/05/20 -----<<<<<
            //元号表示区分が西暦
            if (this._patternSetting[11] == "0")
            {
                tw.MaxLengthList.Add(this._detailDataSet.SalesList.AddUpADateColumn.ColumnName, 10);         //計上日付
            }
            else   //和暦
            {
                tw.MaxLengthList.Add(this._detailDataSet.SalesList.AddUpADateJPColumn.ColumnName, 16);         //計上日付
            }
            //add by liusy #35729 2013/05/20 ----->>>>>
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.AccRecDivCdColumn.ColumnName, 2);        //売掛区分
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.AccRecDivCdNameColumn.ColumnName, 4);    //売掛区分名
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName, 2);       //赤伝区分
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.AddresseeCodeColumn.ColumnName, 12);     //納入先
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.AddresseeNameColumn.ColumnName, 40);     //納入先名称
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/09 ADD
            //add by liusy #35729 2013/05/20 -----<<<<< 
            //元号表示区分が西暦
            if (this._patternSetting[11] == "0")
            {
                tw.MaxLengthList.Add(this._detailDataSet.SalesList.InputDayColumn.ColumnName, 10);         //入力日
            }
            else   //和暦
            {
                tw.MaxLengthList.Add(this._detailDataSet.SalesList.InputDayJPColumn.ColumnName, 16);         //入力日
            }
            //add by liusy #35729 2013/05/20 ----->>>>>
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/09 ADD
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/19 ADD
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.SlipPrintTimeColumn.ColumnName, 12); // 伝票発行時刻
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/19 ADD

            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.SalesAreaNameColumn.ColumnName, 30);
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.CustAnalysCode1Column.ColumnName, 3);
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.CustAnalysCode2Column.ColumnName, 3);
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.CustAnalysCode3Column.ColumnName, 3);
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.CustAnalysCode4Column.ColumnName, 3);
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.CustAnalysCode5Column.ColumnName, 3);
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.CustAnalysCode6Column.ColumnName, 3);
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<
            tw.MaxLengthList.Add(this._detailDataSet.SalesList.ConsTaxRateColumn.ColumnName, 6);        //消費税率　// ADD 時シン 2020/03/11 PMKOBETSU-2912

            #endregion
        }

        // 2010/04/15 Add >>>
        /// <summary>
        /// 残高一覧をテキスト出力します。
        /// </summary>
        private void RemainExportIntoTextFile()
        {
            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
            // エラーメッセージ
            string errMsg = string.Empty;
            // アラート表示
            int logStatus = TextOutPutOprtnHisLogAcsObj.ShowTextOutPut(this, out errMsg);
            // アラートでOKボタンが押されない場合、テキスト出力が実行できない
            if (logStatus != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                if (!string.IsNullOrEmpty(errMsg))
                {
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOP, this.Name,
                                errMsg, logStatus, MessageBoxButtons.OK);
                }
                // 中止
                return;
            }
            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<

            // --- UPD 2010/10/09 ---------->>>>>
            //PMKAU04001UC prtSetForm = new PMKAU04001UC(false, Int32.Parse(this.tComboEditor_rl_RemainType.SelectedItem.DataValue.ToString()));
            // UPD 2013/03/13 神姫産業-与信調査 対応----------------------------------------->>>>>
            //prtSetForm = new PMKAU04001UC(false, Int32.Parse(this.tComboEditor_rl_RemainType.SelectedItem.DataValue.ToString()));
            prtSetForm = new PMKAU04001UC(false, Int32.Parse(this.tComboEditor_rl_RemainType.SelectedItem.DataValue.ToString()), Int32.Parse(this.tComboEditor_rl_RemainSectionType.SelectedItem.DataValue.ToString()));
            // UPD 2013/03/13 神姫産業-与信調査 対応-----------------------------------------<<<<<
            prtSetForm.OutputData += new PMKAU04001UC.OutputDataEvent(this.outputTextData);
            prtSetForm.ShowDialog();
            //if (prtSetForm.DResult == DialogResult.Cancel)
            //{
            //    return;
            //}
            //CustPrtPprBlnce custPrtPprBlnce;
            //custPrtPprBlnce = prtSetForm.CustPrtPprBlnce;
            //SFCMN00299CA processingDialog = new SFCMN00299CA();
            //try
            //{
            //    processingDialog.Title = "抽出処理";
            //    processingDialog.Message = "現在、データ抽出中です。";
            //    processingDialog.DispCancelButton = false;
            //    processingDialog.Show((Form)this.Parent);
            //    this._custPtrSearchAcs.SearchBalanceAll(ref custPrtPprBlnce, prtSetForm.BalanceDiv, prtSetForm.CustomerList);
            //}
            //finally
            //{
            //    processingDialog.Dispose();
            //}
            //string outputFileName = prtSetForm.FileName;
            //if (String.IsNullOrEmpty(outputFileName))
            //{
            //    // ファイル名が指定されていないとエラー
            //    BalanceListReView();
            //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
            //        MSG_OUTPUTFILENAME_NOTFOUND, -1, MessageBoxButtons.OK);
            //    return;
            //}

            //if (_detailDataSet.BalanceList.Count == 0)
            //{
            //    // 該当データがないとエラー
            //    BalanceListReView();
            //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
            //        MSG_MATCHED_DATA_NOT_FOUND, -1, MessageBoxButtons.OK);
            //    return;
            //}
            //InitializeGridColumns(this.uGrid_BalanceList.DisplayLayout.Bands[0].Columns, 4);
            //List<ColumnInfo> balanceColumnsList;
            //this.SaveGridColumnsSetting(uGrid_BalanceList, out balanceColumnsList);
            //_settingForm.UserSetting.BalanceColumnsList = balanceColumnsList;
            //LoadGridColumnsSetting(ref uGrid_BalanceList, _settingForm.UserSetting.BalanceColumnsList);

            //String typeStr = string.Empty;
            //Char typeChar = new char();
            //Byte typeByte = new byte();
            //DateTime typeDate = new DateTime();
            //Int16 typeInt16 = new short();
            //Int32 typeInt32 = new int();
            //Int64 typeInt64 = new long();
            //Single typeSingle = new float();
            //Double typeDouble = new double();
            //Decimal typeDecimal = new decimal();

            //FormattedTextWriter tw = new FormattedTextWriter();

            //Dictionary<int, string> sortList = new Dictionary<int, string>();
            //List<String> schemeList=new List<string>();

            //DataTable targetTable = _detailDataSet.BalanceList;

            //Infragistics.Win.UltraWinGrid.ColumnsCollection Columns = this.uGrid_BalanceList.DisplayLayout.Bands[0].Columns;
            //int dispOrder;
            //string columnName;
            //for (int i = 0; i < Columns.Count; i++)
            //{
            //    if (Columns[i].Hidden == false)
            //    {
            //        dispOrder = Columns[i].Header.VisiblePosition;
            //        columnName = targetTable.Columns[Columns[i].Index].ColumnName;
            //        sortList.Add(dispOrder, columnName);
            //    }
            //}

            //List<int> keyList = new List<int>(sortList.Keys);
            //keyList.Sort();


            //foreach (int key in keyList)
            //{
            //    schemeList.Add(sortList[key]);
            //}


            //// 出力項目名
            //tw.SchemeList = schemeList;

            //// データソース
            //tw.DataSource = this.uGrid_BalanceList.DataSource;
            //// グリッドのソート情報を適用する
            //if (tw.DataSource is DataView)
            //{
            //    (tw.DataSource as DataView).Sort = GetSortingColumns(this.uGrid_BalanceList);
            //}

            //# region [フォーマットリスト]
            //Dictionary<string, string> formatList = new Dictionary<string, string>();
            //foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn col in uGrid_BalanceList.DisplayLayout.Bands[0].Columns)
            //{
            //    formatList.Add(col.Key, col.Format);
            //}
            //tw.FormatList = formatList;

            //#endregion // フォーマットリスト

            //#region オプションセット
            //// ファイル名
            //tw.OutputFileName = outputFileName;
            //// 区切り文字
            //tw.Splitter = ",";
            //// 項目括り文字
            //tw.Encloser = "\"";
            //// 固定幅
            //tw.FixedLength = false;
            //// タイトル行出力
            //tw.CaptionOutput = true;
            //// 項目括り適用
            //List<Type> enclosingList = new List<Type>();
            //enclosingList.Add(typeInt16.GetType());
            //enclosingList.Add(typeInt32.GetType());
            //enclosingList.Add(typeInt64.GetType());
            //enclosingList.Add(typeDouble.GetType());
            //enclosingList.Add(typeDecimal.GetType());
            //enclosingList.Add(typeSingle.GetType());
            //enclosingList.Add(typeStr.GetType());
            //enclosingList.Add(typeChar.GetType());
            //enclosingList.Add(typeByte.GetType());
            //enclosingList.Add(typeDate.GetType());
            //tw.EnclosingTypeList = enclosingList;

            //int outputCount = 0;
            //int status = tw.TextOut(out outputCount);

            //BalanceListReView();

            //if (status == 9)// 異常終了
            //{
            //    // 出力失敗
            //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
            //        MSG_OUTPUTFILE_FAILED, -1, MessageBoxButtons.OK);
            //}
            //else
            //{
            //    // 出力成功
            //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
            //        outputCount.ToString() + MSG_OUTPUTFILE_SUCCEEDED, -1, MessageBoxButtons.OK);
            //}

            //#endregion // オプション
            // --- UPD 2010/10/09 ----------<<<<<
        }

        /// <summary>
        /// 残高一覧グリッドを出力前のレイアウトに戻します。
        /// </summary>
        private void BalanceListReView()
        {
            uGrid_BalanceList.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.ResizeAllColumns;
            InitializeGridColumns(this.uGrid_BalanceList.DisplayLayout.Bands[0].Columns, 3);
            uGrid_BalanceList.Refresh();
            List<ColumnInfo> balanceColumnsList;
            this.SaveGridColumnsSetting(uGrid_BalanceList, out balanceColumnsList);
            _settingForm.UserSetting.BalanceColumnsList = balanceColumnsList;
            LoadGridColumnsSetting(ref uGrid_BalanceList, _settingForm.UserSetting.BalanceColumnsList);
            this._custPtrSearchAcs.SearchBalance(ref this._custPrtPprBlnce, Int32.Parse(this.tComboEditor_rl_RemainType.SelectedItem.DataValue.ToString()));
        }
        // 2010/04/15 Add <<<

        /// <summary>
        /// グリッドのセッティングを文字列から取り出す
        /// </summary>
        /// <param name="patternStr"></param>
        /// <param name="gridSetting"></param>
        /// <param name="isSlip"></param>
        private void getGridSettingPattern(string patternStr, out string[] gridSetting, bool isSlip)
        {
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
            //if (isSlip)
            //{
            //    gridSetting = new string[32];

            //    for (int i = 0; i < 32; i++)
            //    {
            //        gridSetting[i] = patternStr.Substring((i - 1) * 3, 3);
            //    }
            //}
            //else
            //{
            //    gridSetting = new string[57];

            //    for (int i = 0; i < 57; i++)
            //    {
            //        gridSetting[i] = patternStr.Substring((i - 1) * 3, 3);
            //    }
            //}
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.27 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
            //int count = patternStr.Length / 3;
            //gridSetting = new string[count];

            //for ( int i = 0; i < count; i++ )
            //{
            //    gridSetting[i] = patternStr.Substring( i * 3, 3 );
            //}
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.27 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.27 ADD
            int count = patternStr.Length / (PMKAU04004UA.ct_ColumnCountLength + 1);
            gridSetting = new string[count];

            for (int i = 0; i < count; i++)
            {
                gridSetting[i] = patternStr.Substring(i * (PMKAU04004UA.ct_ColumnCountLength + 1), (PMKAU04004UA.ct_ColumnCountLength + 1));
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.27 ADD
        }

        /// <summary>
        /// スキーマリストを取得する
        /// </summary>
        /// <param name="gridSetting"></param>
        /// <param name="isSlip"></param>
        /// <param name="schemeList"></param>
        /// <param name="isCustom"></param>
        /// <remarks>
        /// <br>Update Note: K2014/05/08 林超凡 </br>
        /// <br>           : 得意先電子元帳のCSV出力項目に車種メーカーコードを追加する、東亜商会個別対応</br>
        /// <br>Update Note: K2014/05/27 林超凡 </br>
        /// <br>           : Redmine#42597 出力位置を変更できるようにする。東亜商会個別対応</br>
        /// </remarks>
        private bool getSchemeList(string[] gridSetting, bool isSlip, out List<String> schemeList, bool isCustom)
        {
            schemeList = new List<string>();
            //if (gridSetting == null) return false;

            Dictionary<int, string> sortList = new Dictionary<int, string>();
            string displayFlag = string.Empty;
            string displayOrder = string.Empty;
            int columnOrder = 0;
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
            //ExportColumnDataSet exDataSet = new ExportColumnDataSet();
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 DEL
            //if (isCustom)
            //{
            //    if (isSlip)
            //    {
            //        foreach (string settings in gridSetting)
            //        {
            //            // ３桁の数値なので１＋２に分割
            //            displayFlag = settings.Substring(0, 1);
            //            displayOrder = settings.Substring(1, 2);

            //            // 表示するであればDictionaryに追加
            //            if (displayFlag == "0")
            //            {
            //                sortList.Add(int.Parse(displayOrder), exDataSet.SalesList.Columns[columnOrder].ColumnName);
            //            }
            //            columnOrder++;
            //        }

            //        // ソート用
            //        List<KeyValuePair<int, string>> sorted = new List<KeyValuePair<int, string>>(sortList);
            //        sorted.Sort(compare);

            //        // ソート後
            //        foreach (KeyValuePair<int, string> item in sorted)
            //        {
            //            schemeList.Add(item.Value);
            //        }
            //    }
            //}
            //else
            //{
            //    if (isSlip)
            //    {
            //        // 全ての列を取得
            //        int colCount = exDataSet.SalesList.Columns.Count;
            //        for (int i = 0; i < colCount; i++)
            //        {
            //            schemeList.Add(exDataSet.SalesList.Columns[i].ColumnName);
            //        }
            //    }
            //    else
            //    {
            //        // 全ての列を取得
            //        int colCount = exDataSet.SalesDetail.Columns.Count;
            //        for (int i = 0; i < colCount; i++)
            //        {
            //            schemeList.Add(exDataSet.SalesDetail.Columns[i].ColumnName);
            //        }
            //    }
            //}
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 DEL
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/24 ADD
            DataTable targetTable;
            if (isSlip)
            {
                targetTable = _detailDataSet.SalesList;
            }
            else
            {
                targetTable = _detailDataSet.SalesDetail;
            }

            foreach (string settings in gridSetting)
            {
                if (targetTable.Columns.Count <= columnOrder) break;

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.27 DEL
                //// ３桁の数値なので１＋２に分割
                //displayFlag = settings.Substring( 0, 1 );
                //displayOrder = settings.Substring( 1, 2 );
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.27 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.27 ADD
                // ４桁の数値なので１＋３に分割
                displayFlag = settings.Substring(0, 1);
                displayOrder = settings.Substring(1, PMKAU04004UA.ct_ColumnCountLength);
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.27 ADD

                //----- UPDATE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
                //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
                //車種メーカーコードをテキストファイルに出力します
                //if (this._opt_Toua == Convert.ToInt32(Option.ON))
                //{
                //    if (targetTable.Columns[columnOrder].ColumnName.Equals(CL_CARMAKERCODE_NAME))
                //    {
                //        displayFlag = "0";
                //    }                    
                //}
                //----- DELETE K2014/05/28 By 林超凡 Redmine#42764 受入テスト障害対応 BEGIN--------->>>>>
                //if (this._opt_Toua == Convert.ToInt32(Option.OFF))
                //{
                //    if (targetTable.Columns[columnOrder].ColumnName.Equals(CL_CARMAKERCODE_NAME))
                //    {
                //        displayFlag = "1";
                //    }
                //}
                //----- DELETE K2014/05/28 By 林超凡 Redmine#42764 受入テスト障害対応 BEGIN--------->>>>>
                //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
                //----- UPDATE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<<

                // 表示するであればDictionaryに追加
                if (displayFlag == "0")
                {
                    sortList.Add(int.Parse(displayOrder), targetTable.Columns[columnOrder].ColumnName);
                }
                columnOrder++;
            }

            List<int> keyList = new List<int>(sortList.Keys);
            keyList.Sort();
            //add by liusy #35729 2013/05/20 -----<<<<<
            //元号表示区分が和暦且つ<伝票>の場合
            if (isSlip && this._patternSetting[11] == "1")
            {
                sortList[0] = "SalesDateJP";           //売上日（和暦）
                sortList[30] = "AddUpADateJP";         //計上日（和暦）
                sortList[35] = "InputDayJP";           //入力日（和暦）
                sortList[37] = "UpdateDateTimeJP";     //更新日時（和暦）
            }
            else if(!isSlip && this._patternSetting[11] == "1")
            {
                sortList[0] = "SalesDateJP";          //売上日（和暦）
                sortList[61] = "AddUpADateJP";        //計上日（和暦）
                sortList[67] = "InputDayJP";          //入力日（和暦）
                sortList[71] = "UpdateDateTimeJP";    //更新日時（和暦）
            }
            //add by liusy #35729 2013/05/20 ----->>>>>

            foreach (int key in keyList)
            {
                schemeList.Add(sortList[key]);
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/24 ADD

            return true;
        }

        //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
        //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
        ///// <summary>
        ///// テキスト出力クラムの順の変更
        ///// 順変更したいクラムは標的クラムの前に移動します
        ///// </summary>
        ///// <param name="schemeList">テキスト出力項目名</param>
        ///// <param name="changeColumnName">順変更したいクラム名称</param>
        ///// <param name="objectColumnName">標的クラム名称</param>
        //private void ChangeTheColumnOrder(ref List<String> schemeList, string changeColumnName, string objectColumnName)
        //{
        //    //実施の可能性チェック
        //    if (changeColumnName.Equals(objectColumnName))
        //    {
        //        return;
        //    }
        //    if (!schemeList.Contains(changeColumnName) || !schemeList.Contains(objectColumnName))
        //    {
        //        return;
        //    }
        //    //標的クラムの目の前の順位
        //    int iObjectColumnNameOrder = 0;
        //    //順変更したいクラムと標的クラム除く容器リスト
        //    List<String> objColumnList = new List<string>();
        //    //クラムの順位設定と容器リストの充填
        //    for (int i = 0; i < schemeList.Count; i++)
        //    {
        //        string columnName = schemeList[i];
        //        if (columnName.Equals(objectColumnName))
        //        {
        //            iObjectColumnNameOrder = i;
        //            continue;
        //        }
        //        if (columnName.Equals(changeColumnName))
        //        {
        //            continue;
        //        }
        //        objColumnList.Add(columnName);
        //    }
        //    //順変更したいクラムと標的クラムを容器リストに充填します
        //    objColumnList.Insert(iObjectColumnNameOrder, changeColumnName);
        //    objColumnList.Insert(iObjectColumnNameOrder + 1, objectColumnName);

        //    schemeList = objColumnList;
        //}
        ////----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<

        ////----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
        ///// <summary>
        ///// EXCEL出力クラムの順の変更
        ///// 順変更したいクラムは標的クラムの前に移動します
        ///// </summary>
        ///// <param name="schemeList">EXCEL出力項目グリッド</param>
        ///// <param name="changeColumnName">順変更したいクラム名称</param>
        ///// <param name="objectColumnName">標的クラム名称</param>
        //private void ChangeTheColumnVisiblePosition(ref Infragistics.Win.UltraWinGrid.UltraGrid ultraGrid, 
        //    string changeColumnName, string objectColumnName)
        //{
        //    Infragistics.Win.UltraWinGrid.ColumnsCollection columnList = ultraGrid.DisplayLayout.Bands[0].Columns;
        //    //実施の可能性チェック
        //    if (changeColumnName.Equals(objectColumnName))
        //    {
        //        return;
        //    }

        //    if (columnList == null || columnList.Count == 0)
        //    {
        //        return;
        //    }
        //    //順変更したいクラムの目の前の順位
        //    int iChangeColumnNameOrder = 0;
        //    //標的クラムの目の前の順位
        //    int iObjectColumnNameOrder = 0;
        //    try 
        //    {	        
        //        iChangeColumnNameOrder = columnList[changeColumnName].Header.VisiblePosition;
        //        iObjectColumnNameOrder = columnList[objectColumnName].Header.VisiblePosition;
        //        //順変更したいクラムの目の前の順位は標的クラムの前の1桁にあれば、なにもしない
        //        if (iChangeColumnNameOrder == iObjectColumnNameOrder - 1 || iChangeColumnNameOrder == iObjectColumnNameOrder)
        //        {
        //             return;
        //        }
        //        //順変更したいクラムの目の前の順位は標的クラムの前の1桁に変更します
        //        //ヘッド固定列個数
        //        int iFixedColumnCount = 0;
        //        foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn column in columnList)
        //        {
        //            if (column.Header.Fixed == true)
        //            {
        //                iFixedColumnCount++;
        //            }   
        //        }

        //        //標的クラムの順位は固定列の中にあれば、順変更したいクラムの状態を固定列に変更します
        //        if (iObjectColumnNameOrder <= iFixedColumnCount)
        //        {
        //            columnList[changeColumnName].Header.Fixed = true;
        //        }

        //        //クラムリストの順位の出力項目の調整
        //        columnList[changeColumnName].Header.VisiblePosition = iChangeColumnNameOrder < iObjectColumnNameOrder ?
        //            iObjectColumnNameOrder - 1 : iObjectColumnNameOrder;

        //    }
        //    catch (Exception e)
        //    {                
        //        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
        //            e.Message, -1, MessageBoxButtons.OK);
        //    }

        //}
        //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
        //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<<

        // --- ADD 2010/10/09 ---------->>>>>
        /// <summary>
        /// Excel出力処理
        /// </summary>
        /// <returns>True:正常; False:異常</returns>
        /// <remarks>
        /// <br>Update Note: 2019/08/19 陳艶丹</br>
        /// <br>           : 11570163-00 PMKOBETSU-1379 テキスト出力操作ログおよび出力時アラートメッセージ追加対応</br>
        /// </remarks>
        private bool outputExcelData()
        {
            if (prtSetForm.DResult == DialogResult.Cancel)
            {
                return true;
            }
            CustPrtPprBlnce custPrtPprBlnce = new CustPrtPprBlnce();
            custPrtPprBlnce = prtSetForm.CustPrtPprBlnce;
            SFCMN00299CA processingDialog = new SFCMN00299CA();
            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
            // エラーメッセージ
            string errMsg = string.Empty;
            TextOutPutOprtnHisLogWork textOutPutOprtnHisLogWorkObj = null;
            int logStatus = (int)ConstantManagement.MethodResult.ctFNC_ERROR;
            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<
            try
            {
                //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
                // テキスト出力操作ログ登録処理
                logStatus = TextOutPutWrite(4, string.Empty, custPrtPprBlnce, ref textOutPutOprtnHisLogWorkObj, out errMsg);

                // ログ登録異常場合、テキスト出力が実行できない
                if (logStatus != (int)ConstantManagement.MethodResult.ctFNC_NORMAL)
                {
                    if (!string.IsNullOrEmpty(errMsg))
                    {
                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOP, this.Name,
                                    errMsg, logStatus, MessageBoxButtons.OK);
                    }
                    return false;
                }
                //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<
                processingDialog.Title = "抽出処理";
                processingDialog.Message = "現在、データ抽出中です。";
                processingDialog.DispCancelButton = false;
                processingDialog.Show((Form)this.Parent);
                this._custPtrSearchAcs.SearchBalanceAll(ref custPrtPprBlnce, prtSetForm.BalanceDiv, prtSetForm.CustomerList);
            }
            finally
            {
                processingDialog.Dispose();
            }
            if (_detailDataSet.BalanceList.Count == 0)
            {
                // 該当データがないとエラー
                BalanceListReView();
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                    MSG_MATCHED_DATA_NOT_FOUND, -1, MessageBoxButtons.OK);

                return false;
            }

            InitializeGridColumns(this.uGrid_BalanceList.DisplayLayout.Bands[0].Columns, 4);
            List<ColumnInfo> balanceColumnsList;
            this.SaveGridColumnsSetting(uGrid_BalanceList, out balanceColumnsList);
            _settingForm.UserSetting.BalanceColumnsList = balanceColumnsList;
            LoadGridColumnsSetting(ref uGrid_BalanceList, _settingForm.UserSetting.BalanceColumnsList);
            string fileName = prtSetForm.FileName;

            if (this._selectedMainTabKey == "uTab_RemainList")
            {
                try
                {
                    if (this.ultraGridExcelExporter.Export(this.uGrid_BalanceList, fileName) != null)
                    {
                        int count = _detailDataSet.BalanceList.Count;// ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応
                        BalanceListReView();
                        // 成功
                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                            MSG_OUTPUTEXCEL_SUCCEEDED, -1, MessageBoxButtons.OK);
                        //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
                        errMsg = string.Empty;
                        // 操作履歴登録
                        textOutPutOprtnHisLogWorkObj.LogOperationData = string.Format(CountNumStr, count.ToString()) + textOutPutOprtnHisLogWorkObj.LogOperationData;
                        logStatus = TextOutPutOprtnHisLogAcsObj.Write(this, ref textOutPutOprtnHisLogWorkObj, out errMsg);
                        // ログ登録異常の場合、テキスト出力が実行できない
                        if (logStatus != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            if (!string.IsNullOrEmpty(errMsg))
                            {
                                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOP, this.Name,
                                            errMsg, logStatus, MessageBoxButtons.OK);
                            }
                            // 中止
                            return false;
                        }
                        //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<
                    };
                }
                catch (Exception ex)
                {
                    BalanceListReView();
                    TMsgDisp.Show(
                    this,
                    emErrorLevel.ERR_LEVEL_EXCLAMATION,
                    this.Name,
                    ex.Message,
                    -1,
                    MessageBoxButtons.OK);
                    return false;
                }
            }
            return true;
        }

        /// <summary>
        /// テキスト出力処理
        /// </summary>
        /// <returns>True:正常; False:異常</returns>
        /// <remarks>
        /// <br>Update Note: 2019/08/19 陳艶丹</br>
        /// <br>           : 11570163-00 PMKOBETSU-1379 テキスト出力操作ログおよび出力時アラートメッセージ追加対応</br>
        /// </remarks>
        private bool outputTextData()
        {
            if (prtSetForm.DResult == DialogResult.Cancel)
            {
                return true;
            }
            CustPrtPprBlnce custPrtPprBlnce;
            custPrtPprBlnce = prtSetForm.CustPrtPprBlnce;
            SFCMN00299CA processingDialog = new SFCMN00299CA();
            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
            // エラーメッセージ
            string errMsg = string.Empty;
            TextOutPutOprtnHisLogWork textOutPutOprtnHisLogWorkObj = null;
            int logStatus = (int)ConstantManagement.MethodResult.ctFNC_ERROR;
            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<
            try
            {
                //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
                // テキスト出力操作ログ登録処理
                logStatus = TextOutPutWrite(3, string.Empty, custPrtPprBlnce, ref textOutPutOprtnHisLogWorkObj, out errMsg);

                // ログ登録異常場合、テキスト出力が実行できない
                if (logStatus != (int)ConstantManagement.MethodResult.ctFNC_NORMAL)
                {
                    if (!string.IsNullOrEmpty(errMsg))
                    {
                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOP, this.Name,
                                    errMsg, logStatus, MessageBoxButtons.OK);
                    }
                    return false;
                }
                //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<

                processingDialog.Title = "抽出処理";
                processingDialog.Message = "現在、データ抽出中です。";
                processingDialog.DispCancelButton = false;
                processingDialog.Show((Form)this.Parent);
                this._custPtrSearchAcs.SearchBalanceAll(ref custPrtPprBlnce, prtSetForm.BalanceDiv, prtSetForm.CustomerList);
            }
            finally
            {
                processingDialog.Dispose();
            }
            string outputFileName = prtSetForm.FileName;
            if (String.IsNullOrEmpty(outputFileName))
            {
                // ファイル名が指定されていないとエラー
                BalanceListReView();
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                    MSG_OUTPUTFILENAME_NOTFOUND, -1, MessageBoxButtons.OK);
                return false;
            }

            if (_detailDataSet.BalanceList.Count == 0)
            {
                // 該当データがないとエラー
                BalanceListReView();
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                    MSG_MATCHED_DATA_NOT_FOUND, -1, MessageBoxButtons.OK);
                return false;
            }

            InitializeGridColumns(this.uGrid_BalanceList.DisplayLayout.Bands[0].Columns, 4);
            List<ColumnInfo> balanceColumnsList;
            this.SaveGridColumnsSetting(uGrid_BalanceList, out balanceColumnsList);
            _settingForm.UserSetting.BalanceColumnsList = balanceColumnsList;
            LoadGridColumnsSetting(ref uGrid_BalanceList, _settingForm.UserSetting.BalanceColumnsList);

            String typeStr = string.Empty;
            Char typeChar = new char();
            Byte typeByte = new byte();
            DateTime typeDate = new DateTime();
            Int16 typeInt16 = new short();
            Int32 typeInt32 = new int();
            Int64 typeInt64 = new long();
            Single typeSingle = new float();
            Double typeDouble = new double();
            Decimal typeDecimal = new decimal();

            FormattedTextWriter tw = new FormattedTextWriter();

            Dictionary<int, string> sortList = new Dictionary<int, string>();
            List<String> schemeList = new List<string>();

            DataTable targetTable = _detailDataSet.BalanceList;

            Infragistics.Win.UltraWinGrid.ColumnsCollection Columns = this.uGrid_BalanceList.DisplayLayout.Bands[0].Columns;
            int dispOrder;
            string columnName;
            for (int i = 0; i < Columns.Count; i++)
            {
                if (Columns[i].Hidden == false)
                {
                    dispOrder = Columns[i].Header.VisiblePosition;
                    columnName = targetTable.Columns[Columns[i].Index].ColumnName;
                    sortList.Add(dispOrder, columnName);
                }
            }

            List<int> keyList = new List<int>(sortList.Keys);
            keyList.Sort();


            foreach (int key in keyList)
            {
                schemeList.Add(sortList[key]);
            }


            // 出力項目名
            tw.SchemeList = schemeList;

            // データソース
            tw.DataSource = this.uGrid_BalanceList.DataSource;
            // グリッドのソート情報を適用する
            if (tw.DataSource is DataView)
            {
                (tw.DataSource as DataView).Sort = GetSortingColumns(this.uGrid_BalanceList);
            }

            # region [フォーマットリスト]
            Dictionary<string, string> formatList = new Dictionary<string, string>();
            foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn col in uGrid_BalanceList.DisplayLayout.Bands[0].Columns)
            {
                formatList.Add(col.Key, col.Format);
            }
            tw.FormatList = formatList;

            #endregion // フォーマットリスト

            #region オプションセット
            // ファイル名
            tw.OutputFileName = outputFileName;
            // 区切り文字
            tw.Splitter = ",";
            // 項目括り文字
            tw.Encloser = "\"";
            // 固定幅
            tw.FixedLength = false;
            // タイトル行出力
            tw.CaptionOutput = true;
            // 項目括り適用
            List<Type> enclosingList = new List<Type>();
            enclosingList.Add(typeInt16.GetType());
            enclosingList.Add(typeInt32.GetType());
            enclosingList.Add(typeInt64.GetType());
            enclosingList.Add(typeDouble.GetType());
            enclosingList.Add(typeDecimal.GetType());
            enclosingList.Add(typeSingle.GetType());
            enclosingList.Add(typeStr.GetType());
            enclosingList.Add(typeChar.GetType());
            enclosingList.Add(typeByte.GetType());
            enclosingList.Add(typeDate.GetType());
            tw.EnclosingTypeList = enclosingList;

            int outputCount = 0;
            int status = tw.TextOut(out outputCount);

            BalanceListReView();

            if (status == 9)// 異常終了
            {
                // 出力失敗
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                    MSG_OUTPUTFILE_FAILED, -1, MessageBoxButtons.OK);
                return false;
            }
            else
            {
                // 出力成功
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                    outputCount.ToString() + MSG_OUTPUTFILE_SUCCEEDED, -1, MessageBoxButtons.OK);

                //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
                // エラーメッセージ
                errMsg = string.Empty;
                // 操作履歴登録
                textOutPutOprtnHisLogWorkObj.LogOperationData = string.Format(CountNumStr, outputCount.ToString()) + textOutPutOprtnHisLogWorkObj.LogOperationData;
                logStatus = TextOutPutOprtnHisLogAcsObj.Write(this, ref textOutPutOprtnHisLogWorkObj, out errMsg);
                // ログ登録異常の場合、テキスト出力が実行できない
                if (logStatus != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                {
                    if (!string.IsNullOrEmpty(errMsg))
                    {
                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOP, this.Name,
                                    errMsg, logStatus, MessageBoxButtons.OK);
                    }
                    // 中止
                    return false;
                }
                //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<

                return true;
            }

            #endregion // オプション
        }
        // --- ADD 2010/10/09 ----------<<<<<

        /// <summary>
        /// 比較用デリゲート
        /// </summary>
        /// <param name="kvp1"></param>
        /// <param name="kvp2"></param>
        /// <returns></returns>
        private int compare(
            KeyValuePair<int, string> kvp1,
            KeyValuePair<int, string> kvp2)
        {
            return kvp1.Key - kvp2.Key;
        }

        #endregion

        #region EXCEL出力

        /// <summary>
        /// EXCELデータ出力
        /// </summary>
        /// <remarks>
        /// <br>Update Note: K2014/05/08 林超凡 </br>
        /// <br>           : 得意先電子元帳のCSV出力項目に車種メーカーコードを追加する、東亜商会個別対応</br>
        /// <br>Update Note: K2014/05/27 林超凡 </br>
        /// <br>           : Redmine#42597 出力位置を変更できるようにする。東亜商会個別対応</br>
        /// <br>Update Note: 2019/08/19 陳艶丹</br>
        /// <br>           : 11570163-00 PMKOBETSU-1379 テキスト出力操作ログおよび出力時アラートメッセージ追加対応</br>
        /// </remarks>
        private void exportIntoExcelData()
        {
            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
            // エラーメッセージ
            string errMsg = string.Empty;
            TextOutPutOprtnHisLogWork textOutPutOprtnHisLogWorkObj = null;
            // アラート表示
            int logStatus = TextOutPutOprtnHisLogAcsObj.ShowTextOutPut(this, out errMsg);
            // アラートでOKボタンが押されない場合、テキスト出力が実行できない
            if (logStatus != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                if (!string.IsNullOrEmpty(errMsg))
                {
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOP, this.Name,
                                errMsg, logStatus, MessageBoxButtons.OK);
                }
                // 中止
                return;
            }
            //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<

            // 2010/04/15 Add >>>
            string fileName = string.Empty;
            if (this._selectedMainTabKey == "uTab_RemainList")
            {
                // --- UPD 2010/10/09 ---------->>>>>
                //PMKAU04001UC prtSetForm = new PMKAU04001UC(true, Convert.ToInt32(this.tComboEditor_rl_RemainType.Value));
                // ADD 2013/03/13 神姫産業-与信調査 対応----------------------------------------->>>>>
                //prtSetForm = new PMKAU04001UC(true, Convert.ToInt32(this.tComboEditor_rl_RemainType.Value));
                prtSetForm = new PMKAU04001UC(true, Convert.ToInt32(this.tComboEditor_rl_RemainType.Value), Convert.ToInt32(this.tComboEditor_rl_RemainSectionType.SelectedItem.DataValue.ToString()));
                // ADD 2013/03/13 神姫産業-与信調査 対応-----------------------------------------<<<<<
                prtSetForm.OutputData += new PMKAU04001UC.OutputDataEvent(this.outputExcelData); // ADD 2010/10/09
                prtSetForm.ShowDialog();

                //if (prtSetForm.DResult == DialogResult.Cancel)
                //{
                //    return;
                //}
                //CustPrtPprBlnce custPrtPprBlnce = new CustPrtPprBlnce();
                //custPrtPprBlnce = prtSetForm.CustPrtPprBlnce;
                //SFCMN00299CA processingDialog = new SFCMN00299CA();
                //try
                //{
                //    processingDialog.Title = "抽出処理";
                //    processingDialog.Message = "現在、データ抽出中です。";
                //    processingDialog.DispCancelButton = false;
                //    processingDialog.Show((Form)this.Parent);
                //    this._custPtrSearchAcs.SearchBalanceAll(ref custPrtPprBlnce, prtSetForm.BalanceDiv, prtSetForm.CustomerList);
                //}
                //finally
                //{
                //    processingDialog.Dispose();
                //}
                //if (_detailDataSet.BalanceList.Count == 0)
                //{
                //    // 該当データがないとエラー
                //    BalanceListReView();
                //    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                //        MSG_MATCHED_DATA_NOT_FOUND, -1, MessageBoxButtons.OK);

                //    return;
                //}
                //InitializeGridColumns(this.uGrid_BalanceList.DisplayLayout.Bands[0].Columns, 4);
                //List<ColumnInfo> balanceColumnsList;
                //this.SaveGridColumnsSetting(uGrid_BalanceList, out balanceColumnsList);
                //_settingForm.UserSetting.BalanceColumnsList = balanceColumnsList;
                //LoadGridColumnsSetting(ref uGrid_BalanceList, _settingForm.UserSetting.BalanceColumnsList);
                //fileName = prtSetForm.FileName;
                // --- UPD 2010/10/09 ----------<<<<<
            }
            else
            {
                // 2010/04/15 Add <<<
                // ファイル保存ダイアログ表示
                this.openFileDialog.Multiselect = false;
                this.openFileDialog.CheckFileExists = false;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/14 ADD
                this.openFileDialog.Filter = "Excelファイル(*.xls) | *.xls";
                this.openFileDialog.FilterIndex = 0;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/14 ADD

                // 2010/04/15 >>>
                //string fileName = string.Empty;
                fileName = string.Empty;
                // 2010/04/15 <<<

                // ファイル選択
                DialogResult result = this.openFileDialog.ShowDialog();
                if (result == DialogResult.OK)
                {
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/14 DEL
                    //fileName = openFileDialog.FileName.ToUpper();
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/14 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/14 ADD
                    fileName = openFileDialog.FileName;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/14 ADD
                }
                else if (result == DialogResult.Cancel)
                {
                    return;
                }

                if (String.IsNullOrEmpty(fileName))
                {
                    // ファイル名が指定されていない
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                        MSG_OUTPUTEXCEL_NOFILENAME, -1, MessageBoxButtons.OK);

                    return;
                }
            }   // 2010/04/15 Add
            // ------------ADD 2010/01/29-------------->>>>>
            try
            {
                //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
                if (this._selectedMainTabKey == "uTab_SlipList" || this._selectedMainTabKey == "uTab_SlipDetail")
                {
                    // エラーメッセージ
                    errMsg = string.Empty;
                    // テキスト出力操作ログ登録処理
                    logStatus = TextOutPutWrite(5, fileName, null, ref textOutPutOprtnHisLogWorkObj, out errMsg);

                    // ログ登録異常場合、テキスト出力が実行できない
                    if (logStatus != (int)ConstantManagement.MethodResult.ctFNC_NORMAL)
                    {
                        if (!string.IsNullOrEmpty(errMsg))
                        {
                            TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOP, this.Name,
                                        errMsg, logStatus, MessageBoxButtons.OK);
                        }
                        return;
                    }
                }
                //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<
                // ------------ADD 2010/01/29--------------<<<<<
                if (this._selectedMainTabKey == "uTab_SlipList")
                {
                    //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
                    //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
                    ////車種メーカーコードを伝票Excelファイルに出力します
                    //if (this._opt_Toua == Convert.ToInt32(Option.ON))
                    //{
                    //    ChangeTheColumnVisiblePosition(ref this.uGrid_Slip, CL_CARMAKERCODE_NAME, CL_CARMODELFULLNAME_NAME);
                    //    this.uGrid_Slip.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Hidden = false;
                    //}
                    //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
                    //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<<
                    if (this.ultraGridExcelExporter.Export(this.uGrid_Slip, fileName) != null)
                    {
                        //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
                        //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
                        //if (this._opt_Toua == Convert.ToInt32(Option.ON))
                        //{
                        //    this.uGrid_Slip.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Hidden = true;
                        //}
                        //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
                        //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<<

                        // 成功
                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                            MSG_OUTPUTEXCEL_SUCCEEDED, -1, MessageBoxButtons.OK);
                    };

                    //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
                    //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
                    //EXCEL出力失敗時車種メーカーコードを隠し、さらに車種メーカーコードクラムを普通列に回復します
                    //if (this._opt_Toua == Convert.ToInt32(Option.ON))
                    //{
                    //    this.uGrid_Slip.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Hidden = true;
                    //    this.uGrid_Slip.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Header.Fixed = false;
                    //}
                    //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
                    //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<<
                }
                else if (this._selectedMainTabKey == "uTab_SlipDetail")
                {
                    //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
                    //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
                    ////車種メーカーコードを伝票Excelファイルに出力します
                    //if (this._opt_Toua == Convert.ToInt32(Option.ON))
                    //{
                    //    ChangeTheColumnVisiblePosition(ref this.uGrid_Detail, CL_CARMAKERCODE_NAME, CL_CARMODELFULLNAME_NAME);
                    //    this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Hidden = false;
                    //}
                    //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
                    //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<<
                    if (this.ultraGridExcelExporter.Export(this.uGrid_Detail, fileName) != null)
                    {
                        //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
                        //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
                        //if (this._opt_Toua == Convert.ToInt32(Option.ON))
                        //{
                        //    this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Hidden = true;
                        //}
                        //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
                        //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<<
                        // 成功
                        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                            MSG_OUTPUTEXCEL_SUCCEEDED, -1, MessageBoxButtons.OK);
                    };

                    //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
                    //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
                    ////EXCEL出力失敗時車種メーカーコードを隠し、さらに車種メーカーコードクラムを普通列に回復します
                    //if (this._opt_Toua == Convert.ToInt32(Option.ON))
                    //{
                    //    this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Hidden = true;
                    //    this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Header.Fixed = false;
                    //}
                    //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
                    //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<<
                }
                //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 ----->>>>>
                if (this._selectedMainTabKey == "uTab_SlipList" || this._selectedMainTabKey == "uTab_SlipDetail")
                {
                    errMsg = string.Empty;
                    int count = 0;
                    if (this._selectedMainTabKey == "uTab_SlipList")
                    {
                        count = _detailDataSet.SalesList.Count;
                    }
                    else
                    {
                        count = _detailDataSet.SalesDetail.Count;
                    }
                    // 操作履歴登録
                    textOutPutOprtnHisLogWorkObj.LogOperationData = string.Format(CountNumStr, count.ToString()) + textOutPutOprtnHisLogWorkObj.LogOperationData;
                    logStatus = TextOutPutOprtnHisLogAcsObj.Write(this, ref textOutPutOprtnHisLogWorkObj, out errMsg);
                    // ログ登録異常の場合、テキスト出力が実行できない
                    if (logStatus != (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                    {
                        if (!string.IsNullOrEmpty(errMsg))
                        {
                            TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_STOP, this.Name,
                                        errMsg, logStatus, MessageBoxButtons.OK);
                        }
                        // 中止
                        return;
                    }
                    
                }
                //----- ADD 2019/08/19 陳艶丹 テキスト出力操作ログおよび出力時アラートメッセージ追加対応 -----<<<<<

                // --- DEL 2010/10/09 ---------->>>>>
                //else if (this._selectedMainTabKey == "uTab_RemainList")
                //{
                //    if (this.ultraGridExcelExporter.Export(this.uGrid_BalanceList, fileName) != null)
                //    {
                //        // 2010/04/15 Add >>>
                //        BalanceListReView();
                //        // 2010/04/15 Add <<<
                //        // 成功
                //        TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                //            MSG_OUTPUTEXCEL_SUCCEEDED, -1, MessageBoxButtons.OK);
                //    };
                //}
                // --- DEL 2010/10/09 ----------<<<<<
                // ------------ADD 2010/01/29-------------->>>>>
            }
            catch (Exception e)
            {
                //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする BEGIN--------->>>>>
                //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
                ////EXCEL出力エラー時車種メーカーコードを隠、さらに車種メーカーコードクラムを普通列に回復します
                //if (this._opt_Toua == Convert.ToInt32(Option.ON))
                //{
                //    this.uGrid_Slip.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Hidden = true;
                //    this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Hidden = true;
                //    this.uGrid_Slip.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesList.MakerCodeColumn.ColumnName].Header.Fixed = false;
                //    this.uGrid_Detail.DisplayLayout.Bands[0].Columns[this._detailDataSet.SalesDetail.MakerCodeColumn.ColumnName].Header.Fixed = false;
                //}
                //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<
                //----- DELETE K2014/05/27 By 林超凡 出力位置を変更できるようにする END---------<<<<<

                // --- DEL 2010/10/09 ---------->>>>>
                //// 2010/04/15 Add >>>
                //if (this._selectedMainTabKey == "uTab_RemainList")
                //{
                //    BalanceListReView();
                //}
                //// 2010/04/15 Add <<<
                // --- DEL 2010/10/09 ----------<<<<<
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                    e.Message, -1, MessageBoxButtons.OK);
            }
            // ------------ADD 2010/01/29--------------<<<<<
        }

        # region [Excelエクスポータイベント処理]
        /// <summary>
        /// Excelエクスポート・セル書き込み前イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void ultraGridExcelExporter_CellExporting(object sender, Infragistics.Win.UltraWinGrid.ExcelExport.CellExportingEventArgs e)
        {
        }
        /// <summary>
        /// Excelエクスポート・カラム初期化イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void ultraGridExcelExporter_InitializeColumn(object sender, Infragistics.Win.UltraWinGrid.ExcelExport.InitializeColumnEventArgs e)
        {
            // グリッドカラムのフォーマットをExcelセルにコピーする。
            try
            {
                string format = e.Column.Format;

                // コード用フォーマットは(ゼロ空白にする場合)グリッドとエクセルで異なるので補正する。
                // 「0000;-0000;''」→「0000;-0000;」
                if (format.EndsWith(";''"))
                {
                    format = format.Substring(0, format.Length - 2);
                }
                e.ExcelFormatStr = format;
            }
            catch
            {
                e.ExcelFormatStr = string.Empty;
            }
        }
        # endregion

        #endregion // EXCEL出力

        // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿対応　-------->>>>>
        #region 電帳.DXボタン
        /// <summary>
        /// 電帳.DX起動
        /// </summary>
        private void eBooksDxShow()
        {
            // プロセスの起動
            string vbsFile = Path.Combine(ConstantManagement_ClientDirectory.NSCurrentDirectory, _eBookLauncherFileName);
            System.Diagnostics.Process p = System.Diagnostics.Process.Start(vbsFile);
            p.WaitForExit();
        }
        #endregion
        // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿対応　-------<<<<<

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
        /// <summary>
        /// 画面クリア処理
        /// </summary>
        /// <br>Update Note : K2015/06/16 鮑晶</br>
        /// <br>管理番号    : 11101427-00</br>
        /// <br>            : メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
        private void ClearInput()
        {
            // 確認ダイアログ
            if (TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_QUESTION, this.Name,
                MSG_CONFIRM_CLEARINPUT,
                -1, MessageBoxButtons.YesNo) == DialogResult.No)
            {
                return;
            }

            // 描画停止 ＞＞＞
            this.SuspendLayout();
            try
            {
                // 共通条件グループを強制的に展開状態にする
                uExGroupBox_CommonCondition.Expanded = true;
                // フォーカス移動
                tNedit_CustomerCode.Focus();

                // 初期化
                //InitializeVariable();
                ClearInputProc();

                // 赤伝発行タブ初期化
                ClearRedSlipInput();

                //----ADD 2011/02/16----->>>>>
                this._custPrtPpr = new CustPrtPpr();
                //----ADD 2011/02/16-----<<<<<

                // 詳細条件の表示
                DisplayExtraConditions();
                // 詳細条件のクリア
                ClearExtraConditions();

                // ADD liusy 2011/12/15 Redmine#26660----------->>>>>
                this.uGrid_Slip.DisplayLayout.Bands[0].ColumnFilters.ClearAllFilters();
                this.uGrid_Slip.DisplayLayout.Bands[0].SortedColumns.Clear();
                this.uGrid_Detail.DisplayLayout.Bands[0].ColumnFilters.ClearAllFilters();
                this.uGrid_Detail.DisplayLayout.Bands[0].SortedColumns.Clear();
                this.uGrid_BalanceList.DisplayLayout.Bands[0].ColumnFilters.ClearAllFilters();
                this.uGrid_BalanceList.DisplayLayout.Bands[0].SortedColumns.Clear();
                // ADD liusy 2011/12/15 Redmine#26660-----------<<<<<

                //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
                this.tNedit_CustAnalysCode1.Text = string.Empty;
                this.tNedit_CustAnalysCode2.Text = string.Empty;
                this.tNedit_CustAnalysCode3.Text = string.Empty;
                this.tNedit_CustAnalysCode4.Text = string.Empty;
                this.tNedit_CustAnalysCode5.Text = string.Empty;
                this.tNedit_CustAnalysCode6.Text = string.Empty;
                this._salesAreaCd = 0;
                this._salesAreaNm = string.Empty;
                //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<
            }
            finally
            {
                // 描画再開 ＜＜＜
                this.ResumeLayout();
            }
        }

        /// <summary>
        /// 初期化処理
        /// </summary>
        /// <br>Update Note : 2013/01/30 wangf </br>
        /// <br>            : 10801804-00、速度改善関連、Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応</br>
        /// <br>            : 残高集計のタイミングをずらす</br>
        private void ClearInputProc()
        {
            int status;

            // 締日取得前初期処理
            status = _tCalcAcs.InitializeHisMonthlyAccRec();

            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // 今回および前回の締め日/月を取得(月と日は異なる場合がある)
                status = _tCalcAcs.GetHisTotalDayMonthlyAccRec(this._loginSectionCode, out this._prevTotalDay, out this._currentTotalDay, out this._prevTotalMonth, out this._currentTotalMonth);

                if (_prevTotalDay == DateTime.MinValue)
                {
                    DateTime today = DateTime.Today;
                    this.tDateEdit_SalesDateSt.SetDateTime(today);
                    this.tDateEdit_SalesDateEd.SetDateTime(today);
                }
                else
                {
                    this.tDateEdit_SalesDateSt.SetDateTime(this._prevTotalDay.AddDays(1));
                    this.tDateEdit_SalesDateEd.SetDateTime(DateTime.Today);
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 ADD
                    if (this._prevTotalDay.AddDays(1) > DateTime.Today)
                    {
                        this.tDateEdit_SalesDateEd.SetDateTime(this._prevTotalDay.AddDays(1));
                    }
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 ADD
                }
            }
            else
            {
                // 初期処理失敗
                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name,
                    MSG_TOTALDAY_INITIALIE_FAILED, -1, MessageBoxButtons.OK);
            }

            this._selectedMainTabKey = "uTab_SlipDetail";
            this.uTabControl.Tabs["uTab_SlipDetail"].Selected = true;
            this.uCheckEditor_StatusBar_AutoFillToGridColumn.Checked = this._columnWidthAutoAdjust_Detail;
            autoColumnAdjust(this._columnWidthAutoAdjust_Detail, 0);
            //adjustButtonEnable(1);    // 2010/04/15 Del データセットクリア後に実行する
            adjustStatusBarCellExample(true);
            setToolbarSearchSurface();

            // 行選択ボタンOFF
            this.tToolbarsManager.Tools["ButtonTool_RowSelect"].SharedProps.Enabled = false;
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
            // 見出複写OFF
            this.tToolbarsManager.Tools["ButtonTool_SlipHeaderCopy"].SharedProps.Enabled = false;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD


            // 画面をリセット
            ClearAllField();

            // 画面の初期値をセット
            this.tEdit_SectionCodeAllowZero.Text = this._loginSectionCode.Trim();
            SecInfoSet secInfoSet;
            _secInfoSetAcs.Read(out secInfoSet, this._enterpriseCode, this._loginSectionCode.Trim());
            uLabel_SectionNm.Text = secInfoSet.SectionGuideNm;

            // 締め日
            if (_prevTotalDay == DateTime.MinValue)
            {
                // 画面へセット
                // 当月(年月度)取得
                DateTime thisYearMonth = DateTime.Now;
                //_dateGetAcs.GetThisYearMonth( out thisYearMonth );
                this.tDateEdit_rl_TargetYMSt.SetDateTime(thisYearMonth);
                this.tDateEdit_rl_TargetYMEd.SetDateTime(thisYearMonth);
            }
            else
            {
                // 画面へセット
                this.tDateEdit_rl_TargetYMSt.SetDateTime(this._prevTotalMonth); // 前回締処理月
                this.tDateEdit_rl_TargetYMEd.SetDateTime(this._prevTotalMonth); // 前回締処理月
            }

            // ADD 2012/06/01 ----------------------->>>>>
            // 抽出拠点種別の初期化
            this.tComboEditor_rl_RemainSectionType.SelectedIndex = _settingForm.UserSetting.RemainSectionType;
            // ADD 2012/06/01 -----------------------<<<<<

            // 前回入力値保持用
            _prevInputValue = new PrevInputValue();

            // 前回値としての初期値セット
            _prevInputValue.SectionCode = this.tEdit_SectionCodeAllowZero.Text.Trim();
            _prevInputValue.CustomerCode = 0;
            _prevInputValue.ClaimCode = 0;
            _prevInputValue.ClaimName = string.Empty;
            _prevInputValue.RedInputEmployeeCd = this.tEdit_rs_InputEmployeeCd.Text.Trim();
            _prevInputValue.RedSalesSlipCd = 0;
            // ---------ADD 2010/01/29--------->>>>>
            _prevInputValue.SlipNoteCd1 = 0;
            _prevInputValue.SlipNoteCd2 = 0;
            _prevInputValue.SlipNoteCd3 = 0;
            _prevInputValue.SlipNoteName1 = string.Empty;
            _prevInputValue.SlipNoteName2 = string.Empty;
            _prevInputValue.SlipNoteName3 = string.Empty;
            _prevInputValue.RetGoodsReasonCd = 0;
            _prevInputValue.RetGoodsReasonName = string.Empty;
            // ---------ADD 2010/01/29---------<<<<<
            // ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
            _prevInputValue.SectionCodeBalance = string.Empty;
            _prevInputValue.CustomerCodeBalance = 0;
            _prevInputValue.SalesDateSt = DateTime.MinValue;
            _prevInputValue.SalesDateEd = DateTime.MinValue;
            // ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<
            // データセットをクリア
            this._detailDataSet.SalesList.Clear();
            this._detailDataSet.SalesDetail.Clear();
            this._detailDataSet.BalanceTotal.Clear();
            this._detailDataSet.RedSlipDetail.Clear();
            _redSlipTotalPrice = 0;
            _redSlipStockPrice = 0;

            // ---ADD 2009/02/10 不具合対応[10651] ------------>>>>>
            this._custPrtPprBackUp = null;
            this._custPrtPprBlnceBackUp = null;
            this._rl_RemainTypeBackup = string.Empty;
            this._logicalDelDivBackUp = -1;
            // ---ADD 2009/02/10 不具合対応[10651] ------------<<<<<

            // 2010/04/15 Add >>>
            _redSlipBottonFlag = false;
            adjustButtonEnable(1);
            // 2010/04/15 Add <<<
        }
        /// <summary>
        /// 詳細条件のクリア
        /// </summary>
        private void ClearExtraConditions()
        {
            # region [ＵＩ入力値のクリア]
            // 詳細条件パネル内の全コントロールに対して処理する
            foreach (Control targetControl in ultraExpandableGroupBoxPanel2.Controls)
            {
                if (targetControl is TNedit)
                {
                    // 内容クリア
                    (targetControl as TNedit).Clear();
                }
                else if (targetControl is TEdit)
                {
                    // 内容クリア
                    (targetControl as TEdit).Text = string.Empty;
                }
                else if (targetControl is TComboEditor)
                {
                    // 先頭アイテムを選択
                    (targetControl as TComboEditor).SelectedIndex = 0;
                }
            }
            // ------------ADD 2009/12/28-------------->>>>>
            foreach (Control targetControl in ultraExpandableGroupBoxPanel1.Controls)
            {
                if (targetControl.Name != "tEdit_SectionCodeAllowZero" && targetControl.Name != "tNedit_CustomerCode" &&
                    targetControl.Name != "tDateEdit_SalesDateEd" && targetControl.Name != "tDateEdit_SalesDateSt")
                {
                    if (targetControl is TNedit)
                    {
                        // 内容クリア
                        (targetControl as TNedit).Clear();
                    }
                    else if (targetControl is TEdit)
                    {
                        // 内容クリア
                        (targetControl as TEdit).Text = string.Empty;
                    }
                    else if (targetControl is TComboEditor)
                    {
                        // 先頭アイテムを選択
                        (targetControl as TComboEditor).SelectedIndex = 0;
                    }
                }
            }
            // ------------ADD 2009/12/28--------------<<<<<
            # endregion

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 ADD
            # region [ＵＩ入力値のクリア（ｾﾞﾛ以外の初期値を直接ｾｯﾄする）]
            // 伝票区分＝1:売上/返品
            tComboEditor_SalesSlipCd.SelectedIndex = 1;
            // ------------ADD 2009/12/28-------------->>>>>
            //入力日
            this.tDateEdit_AddUpADateSt.Clear();
            this.tDateEdit_AddUpADateEd.Clear();
            // ------------ADD 2009/12/28--------------<<<<<
            # endregion
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 ADD

            # region [退避値のクリア]
            // **** あいまい検索を行う項目用 ****
            _srModelFullName = string.Empty;
            _srRvModelFullName = string.Empty;
            _srFullModel = string.Empty;
            _srRvFullModel = string.Empty;
            _srColorName1 = string.Empty;
            _srRvColorName1 = string.Empty;
            _srTrimName = string.Empty;
            _srRvTrimName = string.Empty;
            _srSlipNote = string.Empty;
            _srRvSlipNote = string.Empty;
            _srCarMngCode = string.Empty; // ADD 2009/10/22
            _srRvCarMngCode = string.Empty; // ADD 2009/10/22
            _srSearchFrameNo = string.Empty;// ADD 2010/08/05
            _srRvSearchFrameNo = string.Empty;// ADD 2010/08/05
            _srSlipNote2 = string.Empty;
            _srRvSlipNote2 = string.Empty;
            _srSlipNote3 = string.Empty;
            _srRvSlipNote3 = string.Empty;
            _srUOERemark1 = string.Empty;
            _srRvUOERemark1 = string.Empty;
            _srUOERemark2 = string.Empty;
            _srRvUOERemark2 = string.Empty;
            _srGoodsName = string.Empty;
            _srRvGoodsName = string.Empty;
            _srGoodsNo = string.Empty;
            _srRvGoodsNo = string.Empty;
            _srDtlNote = string.Empty;
            _srRvDtlNote = string.Empty;
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            _srWarehouseShelfNo = string.Empty;
            _srRvWarehouseShelfNo = string.Empty;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

            // **** コード←→名称を切り替える項目用 ****
            _swSalesEmployeeCd = string.Empty;
            _swSalesEmployeeName = string.Empty;
            _swFrontEmployeeCd = string.Empty;
            _swFrontEmployeeName = string.Empty;
            _swSalesInputCode = string.Empty;
            _swSalesInputName = string.Empty;
            _swBLGroupCode = 0;
            _swBLGroupName = string.Empty;
            _swBLGoodsCode = 0;
            _swBLGoodsName = string.Empty;
            _swGoodsMakerCd = 0;
            _swGoodsMakerName = string.Empty;
            _swSalesCode = 0;
            _swSalesName = string.Empty;
            _swEnterpriseGanreCode = 0;
            _swEnterpriseGanreName = string.Empty;
            _swWarehouseCd = string.Empty;
            _swWarehouseName = string.Empty;
            _swSupplierCd = 0;
            _swSupplierName = string.Empty;
            _swUOESupplierCd = 0;
            _swUOESupplierName = string.Empty;
            _swAddresseeCode = 0;
            _swAddresseeName = string.Empty;
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/05/07 ADD
            _swGoodsLGroup = 0;
            _swGoodsLGroupName = string.Empty;
            _swGoodsMGroup = 0;
            _swGoodsMGroupName = string.Empty;
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/05/07 ADD
            _logicalDelDiv = 0;
            # endregion
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
        /// <summary>
        /// 見出複写（売伝での見出貼付用）
        /// </summary>
        /// <br>Update Note : 2010/12/20 yangmj </br>
        /// <br>              設定ファイルの保存先修正</br>
        /// <br>Update Note : 2011/08/18 許雁波 </br>
        /// <br>              連番729 明細複写処理を新規する</br>
        private void CopySlipHeader()
        {
            SalesSlipHeaderCopyData salesSlipHeaderCopyData = null;
            SalesDetail salesDetailCopyData = null;  // ADD 連番729 2011/08/18
            DataRow row = null;

            // タブの選択状態により処理を制御
            switch (this._selectedMainTabKey)
            {
                //--------------------------------------------------
                // 伝票表示の場合
                //--------------------------------------------------
                case "uTab_SlipList":
                    {
                        Infragistics.Win.UltraWinGrid.UltraGridRow gridRow = uGrid_Slip.ActiveRow;
                        if (gridRow == null)
                        {
                            return;
                        }
                        // 行を取得（RowNoカラムをキーにしてFindする）
                        DataRow slipRow = this._detailDataSet.SalesList.Rows.Find((int)gridRow.Cells[this._detailDataSet.SalesList.RowNoColumn.ColumnName].Value);
                        // 行を取得（伝票表示の行から明細表示の行を取得する）
                        row = GetDetailRowFromSlipRow(slipRow);
                    }
                    break;
                //--------------------------------------------------
                // 明細表示の場合
                //--------------------------------------------------
                case "uTab_SlipDetail":
                    {
                        Infragistics.Win.UltraWinGrid.UltraGridRow gridRow = uGrid_Detail.ActiveRow;
                        if (gridRow == null)
                        {
                            return;
                        }
                        // 行を取得（RowNoカラムをキーにしてFindする）
                        row = this._detailDataSet.SalesDetail.Rows.Find((int)gridRow.Cells[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName].Value);
                    }
                    break;
                // その他
                default:
                    {
                    }
                    break;
            }
            if (row == null) return;

            //---------------------------------------------------
            // 見出貼付データセット
            //---------------------------------------------------
            salesSlipHeaderCopyData = new SalesSlipHeaderCopyData();

            # region [salesSlipHeaderCopyData←row(明細表示)]
            salesSlipHeaderCopyData.AcptAnOdrStatus = this.GetIntFromObject(row[_detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName]); // 受注ステータス	
            salesSlipHeaderCopyData.SalesSlipCd = this.GetIntFromObject(row[_detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName]); // 売上伝票区分	
            salesSlipHeaderCopyData.SalesSlipNum = this.GetStringFromObject(row[_detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName]); // 売上伝票番号	
            salesSlipHeaderCopyData.SalesRowNo = this.GetIntFromObject(row[_detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName]); // 売上行番号
            salesSlipHeaderCopyData.SalesDate = this.GetLongDateFromObject(row[_detailDataSet.SalesDetail.SalesDateColumn.ColumnName]); // 売上日付	
            salesSlipHeaderCopyData.SectionCode = this.GetStringFromObject(row[_detailDataSet.SalesDetail.SectionCdColumn.ColumnName]); // 拠点コード	
            salesSlipHeaderCopyData.CustomerCode = this.GetIntFromObject(row[_detailDataSet.SalesDetail.CustomerCodeColumn.ColumnName]); // 得意先コード	
            salesSlipHeaderCopyData.CustomerSnm = this.GetStringFromObject(row[_detailDataSet.SalesDetail.CustomerSnmColumn.ColumnName]); // 得意先略称	
            salesSlipHeaderCopyData.CarMngCode = this.GetStringFromObject(row[_detailDataSet.SalesDetail.CarMngCodeColumn.ColumnName]); // 車輌管理番号	
            salesSlipHeaderCopyData.CarMngNo = this.GetIntFromObject(row[_detailDataSet.SalesDetail.CarMngNoColumn.ColumnName]); // 車輌管理SEQ
            salesSlipHeaderCopyData.ModelDesignationNo = this.GetIntFromObject(row[_detailDataSet.SalesDetail.ModelDesignationNoOrgColumn.ColumnName]); // 型式指定番号
            salesSlipHeaderCopyData.CategoryNo = this.GetIntFromObject(row[_detailDataSet.SalesDetail.CategoryNoOrgColumn.ColumnName]); // 類別番号
            salesSlipHeaderCopyData.MakerCode = this.GetIntFromObject(row[_detailDataSet.SalesDetail.MakerCodeColumn.ColumnName]); // メーカーコード
            salesSlipHeaderCopyData.ModelCode = this.GetIntFromObject(row[_detailDataSet.SalesDetail.ModelCodeColumn.ColumnName]); // 車種コード
            salesSlipHeaderCopyData.ModelSubCode = this.GetIntFromObject(row[_detailDataSet.SalesDetail.ModelSubCodeColumn.ColumnName]); // 車種サブコード
            salesSlipHeaderCopyData.ModelFullName = this.GetStringFromObject(row[_detailDataSet.SalesDetail.ModelFullNameColumn.ColumnName]); // 車種名称
            // --- ADD m.suzuki 2010/04/02 ---------->>>>>
            salesSlipHeaderCopyData.ModelHalfName = this.GetStringFromObject(row[_detailDataSet.SalesDetail.ModelHalfNameColumn.ColumnName]); // 車種半角名称
            // --- ADD m.suzuki 2010/04/02 ----------<<<<<
            salesSlipHeaderCopyData.FullModel = this.GetStringFromObject(row[_detailDataSet.SalesDetail.FullModelColumn.ColumnName]); // 型式（フル型式）
            salesSlipHeaderCopyData.EngineModelNm = this.GetStringFromObject(row[_detailDataSet.SalesDetail.EngineModelNmColumn.ColumnName]); // エンジン型式
            // --------------UPD 2010/01/12-------------->>>>>
            //salesSlipHeaderCopyData.FirstEntryDate = this.GetLongDateFromObject( row[_detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName] ); // 年式
            salesSlipHeaderCopyData.FirstEntryDate = this.GetFirstEntryDateFromObject(row[_detailDataSet.SalesDetail.FirstEntryDateColumn.ColumnName]); // 年式
            // --------------UPD 2010/01/12--------------<<<<<
            salesSlipHeaderCopyData.FrameNo = this.GetStringFromObject(row[_detailDataSet.SalesDetail.FrameNoColumn.ColumnName]); // 車台番号
            salesSlipHeaderCopyData.ColorCode = this.GetStringFromObject(row[_detailDataSet.SalesDetail.ColorCodeColumn.ColumnName]); // カラーコード
            salesSlipHeaderCopyData.TrimCode = this.GetStringFromObject(row[_detailDataSet.SalesDetail.TrimCodeColumn.ColumnName]); // トリムコード
            salesSlipHeaderCopyData.SlipNote = this.GetStringFromObject(row[_detailDataSet.SalesDetail.SlipNoteColumn.ColumnName]); // 伝票備考１
            salesSlipHeaderCopyData.SlipNote2 = this.GetStringFromObject(row[_detailDataSet.SalesDetail.SlipNote2Column.ColumnName]); // 伝票備考２
            salesSlipHeaderCopyData.SlipNote3 = this.GetStringFromObject(row[_detailDataSet.SalesDetail.SlipNote3Column.ColumnName]); // 伝票備考３
            salesSlipHeaderCopyData.AddresseeCode = this.GetIntFromObject(row[_detailDataSet.SalesDetail.AddresseeCodeColumn.ColumnName]); // 納入先コード
            salesSlipHeaderCopyData.AddresseeName = this.GetStringFromObject(row[_detailDataSet.SalesDetail.AddresseeName1Column.ColumnName]); // 納入先名称１
            salesSlipHeaderCopyData.AddresseeName2 = this.GetStringFromObject(row[_detailDataSet.SalesDetail.AddresseeName2Column.ColumnName]); // 納入先名称２
            salesSlipHeaderCopyData.DeliveredGoodsDiv = this.GetIntFromObject(row[_detailDataSet.SalesDetail.DeliveredGoodsDivColumn.ColumnName]); // 納品区分
            salesSlipHeaderCopyData.PartySaleSlipNum = this.GetStringFromObject(row[_detailDataSet.SalesDetail.PartySaleSlipNumColumn.ColumnName]); // 仮伝番号
            salesSlipHeaderCopyData.FullModelFixedNoAry = this.GetIntArrayFromObject(row[_detailDataSet.SalesDetail.FullModelFixedNoAryColumn.ColumnName]); // フル型式固定番号配列
            salesSlipHeaderCopyData.CategoryObjAry = this.GetByteArrayFromObject(row[_detailDataSet.SalesDetail.CategoryObjAryColumn.ColumnName]); // 装備情報配列
            salesSlipHeaderCopyData.SalesInputCode = this.GetStringFromObject(row[_detailDataSet.SalesDetail.SalesInputCodeColumn.ColumnName]); // 発行者
            salesSlipHeaderCopyData.FrontEmployeeCd = this.GetStringFromObject(row[_detailDataSet.SalesDetail.FrontEmployeeCdColumn.ColumnName]); // 受注者
            // --- ADD 2009/09/07 ---------->>>>>
            salesSlipHeaderCopyData.CarNote = this.GetStringFromObject(row[_detailDataSet.SalesDetail.CarNoteColumn.ColumnName]); // 車輌備考
            salesSlipHeaderCopyData.Mileage = this.GetIntFromObject(row[_detailDataSet.SalesDetail.MileageColumn.ColumnName]); // 走行距離
            // --- ADD 2009/09/07 ----------<<<<<
            salesSlipHeaderCopyData.FreeSrchMdlFxdNoAry = this.GetStringArrayFromObject(row[_detailDataSet.SalesDetail.FreeSrchMdlFxdNoAryColumn.ColumnName]); // 自由検索型式固定番号配列 // ADD 2010/04/27
            # endregion

            if (salesSlipHeaderCopyData == null) return;

            //---------------------------------------------------
            // 見出貼付XML書き込み
            //---------------------------------------------------

            // 見出貼付XML
            //-----UPD 2010/12/20 ----->>>>>
            string xmlFileName = System.IO.Path.Combine(ConstantManagement_ClientDirectory.NSCurrentDirectory,
                            System.IO.Path.Combine(ConstantManagement_ClientDirectory.UISettings,
                                   SLIPHEADERCOPY_XML_FILE_NAME));
            //string xmlFileName = System.IO.Path.Combine( Broadleaf.Application.Resources.ConstantManagement_ClientDirectory.UISettings, SLIPHEADERCOPY_XML_FILE_NAME );
            //-----UPD 2010/12/20 -----<<<<<
            // 書き込み
            UserSettingController.EncryptionSerializeUserSetting(salesSlipHeaderCopyData, xmlFileName, new string[] { ENCRYPTION_KEY });

            //------------- ADD 連番729 2011/08/18 ------------------------>>>>>
            if (this._selectedMainTabKey == "uTab_SlipDetail")
            {
                //---------------------------------------------------
                // 明細貼付データセット
                //---------------------------------------------------
                salesDetailCopyData = new SalesDetail();
                # region [salesDetailCopyData←row(明細表示)]
                // ----- UPD 2011/09/14 -------------------------------------------->>>>>
                //salesDetailCopyData.BLGoodsCode = int.Parse(this.GetStringFromObject(row[_detailDataSet.SalesDetail.BLGoodsCodeColumn.ColumnName])); //BLｺｰﾄﾞ
                if (!string.IsNullOrEmpty(this.GetStringFromObject(row[_detailDataSet.SalesDetail.BLGoodsCodeColumn.ColumnName])))
                {
                    salesDetailCopyData.BLGoodsCode = int.Parse(this.GetStringFromObject(row[_detailDataSet.SalesDetail.BLGoodsCodeColumn.ColumnName])); //BLｺｰﾄﾞ
                }
                else
                {
                    salesDetailCopyData.BLGoodsCode = 0;
                }
                // ----- UPD 2011/09/14 --------------------------------------------<<<<<
                salesDetailCopyData.GoodsName = this.GetStringFromObject(row[_detailDataSet.SalesDetail.GoodsNameColumn.ColumnName]);  //品名
                salesDetailCopyData.GoodsNo = this.GetStringFromObject(row[_detailDataSet.SalesDetail.GoodsNoColumn.ColumnName]);//品番
                salesDetailCopyData.GoodsMakerCd = this.GetIntFromObject(row[_detailDataSet.SalesDetail.GoodsMakerCdColumn.ColumnName]);//ﾒｰｶｰｺｰﾄﾞ
                salesDetailCopyData.MakerName = this.GetStringFromObject(row[_detailDataSet.SalesDetail.MakerNameColumn.ColumnName]);//ﾒｰｶｰ名
                salesDetailCopyData.SupplierCd = this.GetIntFromObject(row[_detailDataSet.SalesDetail.SupplierCdColumn.ColumnName]);//仕入先ｺｰﾄﾞ
                salesDetailCopyData.SupplierSnm = this.GetStringFromObject(row[_detailDataSet.SalesDetail.SupplierSnmColumn.ColumnName]);//仕入先名称 
                salesDetailCopyData.ListPriceTaxExcFl = this.GetDoubleFromObject(row[_detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName]);//標準価格
                salesDetailCopyData.ListPriceDisplay = this.GetDoubleFromObject(row[_detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName]);//標準価格(表示用)
                salesDetailCopyData.SalesUnitCost = this.GetDoubleFromObject(row[_detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName]);//原価
                salesDetailCopyData.SalesUnPrcTaxExcFl = this.GetDoubleFromObject(row[_detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName]);//売価
                salesDetailCopyData.CostRate = this.GetDoubleFromObject(row[_detailDataSet.SalesDetail.CostRateColumn.ColumnName]);//仕入率
                salesDetailCopyData.SalesRate = this.GetDoubleFromObject(row[_detailDataSet.SalesDetail.SalesRateColumn.ColumnName]);//売価率
                # endregion
                if (salesDetailCopyData == null) return;

                // 明細貼付XML
                string xmlFileName2 = System.IO.Path.Combine(ConstantManagement_ClientDirectory.NSCurrentDirectory,
                                System.IO.Path.Combine(ConstantManagement_ClientDirectory.UISettings,
                                       SALESDTLCOPY_XML_FILE_NAME));
                // 書き込み
                UserSettingController.EncryptionSerializeUserSetting(salesDetailCopyData, xmlFileName2, new string[] { ENCRYPTION_KEY });
            }
            //------------- ADD 連番729 2011/08/18 ------------------------<<<<<
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD

        #region アローキーコントロール

        /// <summary>
        /// アローキーコントロール
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>Update Note : 2009/12/28 呉元嘯 PM.NS保守依頼④</br>
        /// <br>              基本条件と抽出条件項目のフォーカスの修正</br>
        /// <br>Update Note : 2010/01/29 呉元嘯 4次改良</br>
        /// <br>              赤伝発行画面に、備考コードを入力出来るように修正</br>
        /// <br>Update Note : 2010/06/18 呉元嘯 備考コードの取得変更対応</br>
        /// <br>Update Note : 2010/08/05 呉元嘯</br>
        /// <br>              抽出条件を入力後の表示はコード＋名称で表示する。</br>
        /// <br>Update Note : 2010/12/20 yangmj</br>
        /// <br>              readmine#18652の修正</br>
        /// <br>Update Note : 2011/01/27 曹文傑</br>
        /// <br>              readmine#18652の修正</br>
        /// <br>Update Note : 2011/01/31 曹文傑</br>
        /// <br>              readmine#18652の修正</br>
        /// <br>Update Note : 2011/02/16 yangmj</br>
        /// <br>              障害報告 #18993 赤伝発行タブのF10検索無効</br>
        /// <br>Update Note : 2011/08/31 李占川</br>
        /// <br>              Redmine#24110 備考のチェック処理を追加する</br>
        /// <br>Update Note : 2011/12/15 gezh</br>
        /// <br>              2012/01/25配信分 Redmine#26667 Enterキーのフォーカス遷移の修正</br>
        /// <br>Update Note : 2012/03/29 gezh</br>
        /// <br>              2012/05/24配信分 Redmine#29149 得意先電子元帳　赤伝返品手数料入力時の販売区分の対応</br>
		/// <br>Update Note : 2013/01/30 wangf </br>
		/// <br>            : 10801804-00、速度改善関連、Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応</br>
		/// <br>            : 残高集計のタイミングをずらす</br>
        /// <br>Update Note : SPK車台番号文字列対応に伴う車台番号(VINコード)による抽出を可能にする</br>
        /// <br>Programmer  : FSI厚川 宏</br>
        /// <br>Date        : 2013/03/25</br>
        /// <br>UpdateNote  : 2013/09/18 liusy</br>
        /// <br>            : 10801804-00 配信分なし</br>
        /// <br>              Redmine#40275 直接にF5で、赤伝発行時にエラーの修正</br>
        /// <br>Update Note : K2013/01/23 鄧潘ハン </br>
        /// <br>            : 特販区分を追加することの登戸個別対応</br>
        /// <br>Update Note : K2015/06/16 鮑晶</br>
        /// <br>管理番号    : 11101427-00</br>
        /// <br>            : メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
        /// <br>Update Note : 2016/01/21 脇田 靖之</br>
        /// <br>管理番号    : 11270007-00</br>
        /// <br>            : 仕掛一覧№2808 貸出受注対応</br>
        /// <br>            : ①検索条件に「出荷状況」項目を追加</br>
        /// <br>            : ②明細表示に計上数、未計上数項目を追加</br>
        /// <br>Update Note : K2016/02/23 時シン</br>
        /// <br>              ㈱イケモト 抽出条件にて受注作成区分を追加する対応</br>
        private void tArrowKeyControl_ChangeFocus(object sender, ChangeFocusEventArgs e)
        {
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/10/07 ADD
            // 抽出キャンセル
            if (e.Key == Keys.Escape)
            {
                CancelExtract();
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/10/07 ADD

            if (e.PrevCtrl == null || e.NextCtrl == null) return;
            this._prevControl = e.NextCtrl;

            // PrevCtrl設定
            Control prevCtrl = new Control();
            if (e.PrevCtrl is Control)
            {
                prevCtrl = (Control)e.PrevCtrl;
                this._control = prevCtrl; // ADD 2011/01/31
            }
            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
            // フッタ項目へ移動した場合は移動キャンセル
            if (e.NextCtrl == tComboEditor_StatusBar_FontSize)
            {
                if (!e.ShiftKey && (e.Key == Keys.Down || e.Key == Keys.Right || e.Key == Keys.Tab || e.Key == Keys.Return))
                {
                    e.NextCtrl = e.PrevCtrl;
                    return;
                }
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD

            // 名前により分岐
            switch (prevCtrl.Name)
            {
                //---------------------------------------------------------------
                // フィールド間移動
                //---------------------------------------------------------------
                // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
                #region 自動回答
                // 自動回答
                case "tComboEditor_AutoAnswerDivSCM":
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        // 検索実行・フォーカス移動
                                        if (this.uCheckAutoAnswerDivSCM_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            //検索実行・フォーカス移動
                                            //e.NextCtrl = this.SearchOnChangeFocus(tComboEditor_AutoAnswerDivSCM); // DEL 2011/11/28 楊洋
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);// ADD 2011/11/28 楊洋
                                        }
                                        break;
                                    }
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckAutoAnswerDivSCM_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        break;
                    }
                #endregion
                // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<

                //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>         
                #region 問合せ番号
                case "tNedit_InquiryNumber":
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        // 検索実行・フォーカス移動
                                        if (this.uCheckInquiryNumber_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            //検索実行・フォーカス移動
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        break;
                                    }
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckInquiryNumber_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        break;
                    }
                #endregion
                //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<

                #region 拠点コード
                // 拠点コード
                case "tEdit_SectionCodeAllowZero":
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //switch (e.Key)
                        //{
                        //    case Keys.Enter:
                        //    case Keys.Tab:
                        //        {
                        //            if (String.IsNullOrEmpty(this.tEdit_SectionCodeAllowZero.Text.Trim()))
                        //            {
                        //                e.NextCtrl = this.uButton_SectionGuide;
                        //            }
                        //            else
                        //            {
                        //                e.NextCtrl = this.tNedit_CustomerCode;
                        //            }
                        //            break;
                        //        }
                        //}
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD

                        string inputValue = this.tEdit_SectionCodeAllowZero.Text;

                        string code;
                        string name;
                        bool status = ReadSectionCodeAllowZeroName(out code, out name);

                        if (status == true)
                        {
                            this.tEdit_SectionCodeAllowZero.Text = code;
                            this.uLabel_SectionNm.Text = name;

                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Left:
                                    case Keys.Up:
                                        {
                                            e.NextCtrl = null;
                                        }
                                        break;
                                    case Keys.Tab:
                                    case Keys.Return:
                                        {
                                            if (String.IsNullOrEmpty(this.tEdit_SectionCodeAllowZero.Text.Trim()))
                                            {
                                                e.NextCtrl = this.uButton_SectionGuide;
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.tNedit_CustomerCode;
                                            }
                                        }
                                        break;
                                }
                            }
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                        {
                                            e.NextCtrl = null;
                                        }
                                        break;
                                }
                            }
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "拠点コード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コード戻す
                            this.tEdit_SectionCodeAllowZero.Text = code;
                            this.tEdit_SectionCodeAllowZero.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                        break;
                    }
                #endregion // 拠点コード

                #region 拠点ガイド
                // 拠点ガイド
                case "uButton_SectionGuide":
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        if (!e.ShiftKey)
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        e.NextCtrl = this.tNedit_CustomerCode;
                                        break;
                                    }
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        e.NextCtrl = this.tEdit_SectionCodeAllowZero;
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        break;
                    }
                #endregion // 拠点ガイド

                #region 得意先コード
                // 得意先コード
                case "tNedit_CustomerCode":
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //switch (e.Key)
                        //{
                        //    case Keys.Return:
                        //    case Keys.Tab:
                        //        {
                        //            if (String.IsNullOrEmpty(this.tNedit_CustomerCode.Text.Trim()))
                        //            {
                        //                e.NextCtrl = this.uButton_CustomerGuide;
                        //            }
                        //            else
                        //            {
                        //                e.NextCtrl = this.tNedit_ClaimCode;
                        //            }
                        //            break;
                        //        }
                        //}
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        int inputValue = tNedit_CustomerCode.GetInt();
                        int code;
                        bool status = ReadCustomerName(out code);

                        if (status == true)
                        {
                            tNedit_CustomerCode.SetInt(code);

                            // --- ADD 2011/08/31---------->>>>>
                            this._custPtrRedSlipAcs.GetNoteCharCnt(this.tEdit_SectionCodeAllowZero.Text.Trim(), code);
                            this.SetNoteCharCnt();
                            // --- ADD 2011/08/31----------<<<<<

                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:
                                    case Keys.Tab:
                                        {
                                            if (String.IsNullOrEmpty(this.tNedit_CustomerCode.Text.Trim()))
                                            {
                                                e.NextCtrl = this.uButton_CustomerGuide;
                                            }
                                            else
                                            {
                                                //e.NextCtrl = this.tNedit_ClaimCode;// DEL 2009/12/28
                                                e.NextCtrl = this.tDateEdit_SalesDateSt;// ADD 2009/12/28
                                            }
                                            break;
                                        }
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                    case Keys.Tab:
                                        {
                                            e.NextCtrl = this.uButton_SectionGuide;
                                        }
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "得意先コード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードを戻す
                            tNedit_CustomerCode.SetInt(code);
                            tNedit_CustomerCode.SelectAll();

                            e.NextCtrl = e.PrevCtrl;
                        }
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        break;
                    }
                #endregion // 得意先コード

                #region 得意先ガイド
                // 得意先ガイド
                case "uButton_CustomerGuide":
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        if (!e.ShiftKey)
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        //e.NextCtrl = this.tNedit_ClaimCode;// DEL 2009/12/28
                                        e.NextCtrl = this.tDateEdit_SalesDateSt;// ADD 2009/12/28
                                        break;
                                    }
                                // ------------ADD 2009/12/28------------->>>>>
                                case Keys.Down:
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            // 拡張検索条件の表示状態を調べて次へ(あえて"tDateEdit_AddUpADateEd"を指定して終了入力日の次項目を探す)
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_CustomerGuide);
                                        }
                                        break;
                                    }
                                // ------------ADD 2009/12/28-------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        e.NextCtrl = this.tNedit_CustomerCode;
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        break;
                    }
                #endregion // 得意先ガイド
				// ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
				#region 残高集計
				case "uButton_Balance":
					{
						if (!e.ShiftKey)
						{
							switch (e.Key)
							{
								case Keys.Return:
								case Keys.Tab:
									{
                                        // タブの選択状態により処理を制御
                                        switch (this._selectedMainTabKey)
                                        {
                                            // 伝票表示タブ
                                            case "uTab_SlipList":
                                                {
                                                    if (uGrid_Slip.Rows.Count > 0)
                                                    {
                                                        e.NextCtrl = uGrid_Slip;
                                                    } 
                                                    break;
                                                }
                                            // 明細表示タブ
                                            case "uTab_SlipDetail":
                                                {
                                                    if (uGrid_Detail.Rows.Count > 0)
                                                    {
                                                        e.NextCtrl = uGrid_Detail;
                                                    }
                                                    break;
                                                }
                                            // 赤伝入力タブ
                                            case "uTab_RedSlip":
                                                {
                                                    e.NextCtrl = tComboEditor_rs_SalesSlipCd;
                                                    break;
                                                }
                                            // 残高一覧タブ
                                            case "uTab_RemainList":
                                                {
                                                    // フォーカス移動のみ
                                                    e.NextCtrl = tComboEditor_rl_RemainType;
                                                    break;
                                                }
                                        }
										break;
									}
							}
						}
						break;
					}
				#endregion
				// ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<

                #region 請求先コード
                // -------------UPD 2009/12/28-------------->>>>>
                // 請求先コード
                //case "tNedit_ClaimCode":
                case "tEdit_ClaimName":
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 DEL
                        //switch (e.Key)
                        //{
                        //    case Keys.Return:
                        //    case Keys.Tab:
                        //        {
                        //            if (String.IsNullOrEmpty(this.tNedit_ClaimCode.Text.Trim()))
                        //            {
                        //                e.NextCtrl = this.uButton_ClaimGuide;
                        //            }
                        //            else
                        //            {
                        //                e.NextCtrl = this.tDateEdit_SalesDateSt;
                        //            }
                        //            break;
                        //        }
                        //}
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 DEL
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                        //int inputValue = tNedit_ClaimCode.GetInt();
                        int inputValue;
                        try
                        {
                            inputValue = Int32.Parse(this.tEdit_ClaimName.Text);
                        }
                        catch
                        {
                            inputValue = 0;
                        }
                        int code;
                        bool status = ReadClaimName(out code);

                        if (status == true)
                        {
                            //tNedit_ClaimCode.SetInt( code );
                            // -----------UPD 2010/08/05----------->>>>>
                            //this.tEdit_ClaimName.Text = this._prevInputValue.ClaimName;
                            if (_prevInputValue.ClaimCode != 0)
                            {
                                this.tEdit_ClaimName.Text = _prevInputValue.ClaimCode.ToString("D8") + ":" + _prevInputValue.ClaimName;
                            }
                            // -----------UPD 2010/08/05-----------<<<<<

                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:
                                    case Keys.Tab:
                                        {
                                            //if ( String.IsNullOrEmpty( this.tNedit_ClaimCode.Text.Trim() ) )
                                            //{
                                            //    e.NextCtrl = this.uButton_ClaimGuide;
                                            //}
                                            //else
                                            //{
                                            //    e.NextCtrl = this.tDateEdit_SalesDateSt;
                                            //}
                                            if (this.uCheckClaimCode_base.Checked)
                                            {
                                                e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                            }
                                            break;
                                        }
                                }
                            }
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                    case Keys.Tab:
                                        {
                                            // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                            if (e.Key == Keys.Tab)
                                            {
                                                flag = true;
                                            }
                                            else
                                            {
                                                flag = false;
                                            }
                                            // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                            if (this.uCheckClaimCode_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                }
                            }
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "請求先コード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードを戻す
                            //tNedit_ClaimCode.SetInt( code );
                            //tNedit_ClaimCode.SelectAll();
                            this.tEdit_ClaimName.Text = code.ToString();
                            this.tEdit_ClaimName.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
                        break;
                    }
                // -------------UPD 2009/12/28--------------<<<<<
                #endregion // 請求先コード

                #region 請求先ガイド
                // 請求先ガイド
                case "uButton_ClaimGuide":
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        if (!e.ShiftKey)
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        {
                            switch (e.Key)
                            {
                                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                                // ------------UPD 2009/12/28------------->>>>>
                                case Keys.Down:
                                    {
                                        //if (this.uExGroupBox_ExtraCondition.Visible)
                                        //{
                                        //    // 拡張検索条件の表示状態を調べて次へ(あえて"tDateEdit_AddUpADateEd"を指定して終了入力日の次項目を探す)
                                        //    e.NextCtrl = this.GetNextControl("tDateEdit_AddUpADateEd");
                                        //}
                                        //else
                                        //{
                                        //    // 検索実行・フォーカス移動
                                        //    e.NextCtrl = this.SearchOnChangeFocus(uButton_ClaimGuide);
                                        //}
                                        if (this.uCheckClaimCode_base.Checked)
                                        {
                                            if (this.uExGroupBox_ExtraCondition.Visible)
                                            {
                                                e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                            }
                                            else
                                            {
                                                // 検索実行・フォーカス移動
                                                e.NextCtrl = this.SearchOnChangeFocus(uButton_ClaimGuide);
                                            }
                                        }
                                        break;
                                    }
                                // ------------UPD 2009/12/28-------------<<<<<
                                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        // --------------UPD 2009/12/28------------->>>>>
                                        //e.NextCtrl = this.tDateEdit_SalesDateSt;
                                        if (this.uCheckClaimCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // --------------UPD 2009/12/28-------------<<<<<
                                        break;
                                    }
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    {
                                        if (this.uCheckClaimCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        break;
                    }
                #endregion // 請求先ガイド

                #region 売上日（開始）
                // 売上日（開始）
                case "tDateEdit_SalesDateSt":
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        if (!e.ShiftKey)
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        e.NextCtrl = this.tDateEdit_SalesDateEd;
                                        break;
                                    }
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        e.NextCtrl = this.uButton_CustomerGuide;
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        break;
                    }
                #endregion // 売上日（開始）

                #region 売上日（終了）
                // 売上日（終了）
                case "tDateEdit_SalesDateEd":
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        if (!e.ShiftKey)
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        //e.NextCtrl = this.tDateEdit_AddUpADateSt;// DEL 2009/12/28
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);// ADD 2009/12/28
                                        break;
                                    }
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        e.NextCtrl = this.tDateEdit_SalesDateSt;
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        break;
                    }
                #endregion // 売上日（終了）

                #region 入力日（開始）
                // 入力日（開始）
                case "tDateEdit_AddUpADateSt":
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        if (!e.ShiftKey)
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        // --------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.tDateEdit_AddUpADateEd;
                                        if (this.uCheckAddUpADateSt_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // --------------UPD 2009/12/28------------<<<<<
                                        break;
                                    }
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckAddUpADateSt_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        break;
                    }
                #endregion // 入力日（開始）

                #region 入力日（終了）
                // 入力日（終了）
                case "tDateEdit_AddUpADateEd":
                    {
                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                        if (!e.ShiftKey)
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        // --------------UPD 2009/12/28------------->>>>>
                                        //if ( this.uExGroupBox_ExtraCondition.Visible )
                                        //{
                                        //    // 拡張検索条件の表示状態を調べて次へ
                                        //    e.NextCtrl = this.GetNextControl( "tDateEdit_AddUpADateEd" );
                                        //}
                                        //else
                                        //{
                                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 DEL
                                        //if (this.uGrid_Slip.Rows.Count > 0)
                                        //{
                                        //    e.NextCtrl = this.uGrid_Slip;
                                        //}
                                        //else
                                        //{
                                        //    e.NextCtrl = this.uCheckEditor_StatusBar_AutoFillToGridColumn;
                                        //}
                                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 DEL
                                        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
                                        // 検索実行・フォーカス移動
                                        //e.NextCtrl = this.SearchOnChangeFocus( tDateEdit_AddUpADateEd );
                                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD
                                        //}
                                        if (this.uCheckAddUpADateEd_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            //検索実行・フォーカス移動
                                            //e.NextCtrl = this.SearchOnChangeFocus( tDateEdit_AddUpADateEd ); // DEL 2011/11/28 楊洋
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);// ADD 2011/11/28 楊洋
                                        }
                                        // --------------UPD 2009/12/28-------------<<<<<
                                        break;
                                    }
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckAddUpADateEd_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        break;
                    }
                #endregion // 入力日（終了）

                // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
                #region 出荷状況
                // 出荷状況
                case "tComboEditor_AddUpRemDiv":
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        if (this.uCheckAddUpRemDiv_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            //検索実行・フォーカス移動
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        break;
                                    }
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        if (this.uCheckAddUpRemDiv_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        break;
                    }
                #endregion 出荷状況
                // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 DEL
                # region // DEL
                //#region 詳細検索条件

                //// 伝票区分
                //case "tComboEditor_SalesSlipCd":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_SalesSlipCd");
                //        break;
                //    }

                //// 伝票番号
                //case "tEdit_SalesSlipNum":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_SalesSlipNum");
                //        break;
                //    }

                //// 担当者
                //case "tEdit_SalesEmployeeCd":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_SalesEmployeeCd");
                //        break;
                //    }

                //// 担当者ガイド
                //case "uButton_SalesEmployeeCd":
                //    {
                //        e.NextCtrl = this.getNextControl("uButton_SalesEmployeeCd");
                //        break;
                //    }

                //// 受注者
                //case "tEdit_FrontEmployeeCd":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_FrontEmployeeCd");
                //        break;
                //    }

                //// 受注者ガイド
                //case "uButton_FrontEmployeeCd":
                //    {
                //        e.NextCtrl = this.getNextControl("uButton_FrontEmployeeCd");
                //        break;
                //    }

                //// 発行者
                //case "tEdit_SalesInputCode":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_SalesInputCode");
                //        break;
                //    }

                //// 発行者ガイド
                //case "uButton_SalesInputCode":
                //    {
                //        e.NextCtrl = this.getNextControl("uButton_SalesInputCode");
                //        break;
                //    }

                //// 管理番号
                //case "tEdit_CarMngCode":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_CarMngCode");
                //        break;
                //    }

                //// 車種名称
                //case "tEdit_ModelFullName":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_ModelFullName");
                //        break;
                //    }

                //// 車種名称あいまい条件
                //case "tComboEditor_ModelFullNameFuzzy":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_ModelFullNameFuzzy");
                //        break;
                //    }

                //// 型式
                //case "tEdit_FullModel":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_FullModel");
                //        break;
                //    }

                //// 型式あいまい条件
                //case "tComboEditor_FullModelFuzzy":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_FullModelFuzzy");
                //        break;
                //    }

                //// 車台No
                //case "tNedit_SearchFrameNo":
                //    {
                //        e.NextCtrl = this.getNextControl("tNedit_SearchFrameNo");
                //        break;
                //    }

                //// 指示書No
                //case "tEdit_PartySalesSlipNum":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_PartySalesSlipNum");
                //        break;
                //    }

                //// カラー名称
                //case "tEdit_ColorName1":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_ColorName1");
                //        break;
                //    }

                //// カラー名称あいまい条件
                //case "tComboEditor_ColorName1Fuzzy":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_ColorName1Fuzzy");
                //        break;
                //    }

                //// トリム名称
                //case "tEdit_TrimName":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_TrimName");
                //        break;
                //    }

                //// トリム名称あいまい条件
                //case "tComboEditor_TrimNameFuzzy":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_TrimNameFuzzy");
                //        break;
                //    }

                //// UOE送信
                //case "tComboEditor_DataSendCode":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_DataSendCode");
                //        break;
                //    }

                //// 備考1
                //case "tEdit_SlipNote":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_SlipNote");
                //        break;
                //    }

                //// 備考1あいまい条件
                //case "tComboEditor_SlipNoteFuzzy":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_SlipNoteFuzzy");
                //        break;
                //    }

                //// 備考2
                //case "tEdit_SlipNote2":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_SlipNote2");
                //        break;
                //    }

                //// 備考2あいまい条件
                //case "tComboEditor_SlipNote2Fuzzy":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_SlipNote2Fuzzy");
                //        break;
                //    }

                //// 備考3
                //case "tEdit_SlipNote3":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_SlipNote3");
                //        break;
                //    }

                //// 備考3あいまい条件
                //case "tComboEditor_SlipNote3Fuzzy":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_SlipNote3Fuzzy");
                //        break;
                //    }

                //// UOEリマーク1
                //case "tEdit_UoeRemark1":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_UoeRemark1");
                //        break;
                //    }

                //// UOEリマーク1あいまい条件
                //case "tComboEditor_UoeRemark1Fuzzy":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_UoeRemark1Fuzzy");
                //        break;
                //    }

                //// UOEリマーク2
                //case "tEdit_UoeRemark2":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_UoeRemark2");
                //        break;
                //    }

                //// UOEリマーク2あいまい条件
                //case "tComboEditor_UoeRemark2Fuzzy":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_UoeRemark2Fuzzy");
                //        break;
                //    }

                //// BLグループ
                //case "tEdit_BlGroupCode":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_BlGroupCode");
                //        break;
                //    }

                //// BLグループガイド
                //case "uButton_BlGroupCode":
                //    {
                //        e.NextCtrl = this.getNextControl("uButton_BlGroupCode");
                //        break;
                //    }

                //// BLコード
                //case "tEdit_BlGoodsCode":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_BlGoodsCode");
                //        break;
                //    }

                //// BLコードガイド
                //case "uButton_BlGoodsCode":
                //    {
                //        e.NextCtrl = this.getNextControl("uButton_BlGoodsCode");
                //        break;
                //    }

                //// 品名
                //case "tEdit_GoodsName":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_GoodsName");
                //        break;
                //    }

                //// 品名あいまい条件
                //case "tComboEditor_GoodsNameFuzzy":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_GoodsNameFuzzy");
                //        break;
                //    }

                //// 品番
                //case "tEdit_GoodsNo":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_GoodsNo");
                //        break;
                //    }

                //// 品番あいまい条件
                //case "tComboEditor_GoodsNoFuzzy":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_GoodsNoFuzzy");
                //        break;
                //    }

                //// メーカー
                //case "tEdit_MakerCd":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_MakerCd");
                //        break;
                //    }

                //// メーカーガイド
                //case "uButton_MakerCd":
                //    {
                //        e.NextCtrl = this.getNextControl("uButton_MakerCd");
                //        break;
                //    }

                //// 販売区分
                //case "tEdit_SalesCode":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_SalesCode");
                //        break;
                //    }

                //// 販売区分ガイド
                //case "uButton_SalesCode":
                //    {
                //        e.NextCtrl = this.getNextControl("uButton_SalesCode");
                //        break;
                //    }

                //// 自社分類
                //case "tEdit_EnterpriseGanreCode":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_EnterpriseGanreCode");
                //        break;
                //    }

                //// 自社分類ガイド
                //case "uButton_EnterpriseGanreCode":
                //    {
                //        e.NextCtrl = this.getNextControl("uButton_EnterpriseGanreCode");
                //        break;
                //    }

                //// 在庫取寄区分
                //case "tComboEditor_SalesOrderDivCd":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_SalesOrderDivCd");
                //        break;
                //    }

                //// 倉庫
                //case "tEdit_WarehouseCd":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_WarehouseCd");
                //        break;
                //    }

                //// 倉庫ガイド
                //case "uButton_WarehouseCd":
                //    {
                //        e.NextCtrl = this.getNextControl("uButton_WarehouseCd");
                //        break;
                //    }

                //// 仕入伝票番号
                //case "tEdit_SupplierSlipNo":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_SupplierSlipNo");
                //        break;
                //    }

                //// 仕入先
                //case "tEdit_SupplierCd":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_SupplierCd");
                //        break;
                //    }

                //// 仕入先ガイド
                //case "uButton_SupplierCd":
                //    {
                //        e.NextCtrl = this.getNextControl("uButton_SupplierCd");
                //        break;
                //    }

                //// 発注先
                //case "tEdit_UOESupplierCd":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_UOESupplierCd");
                //        break;
                //    }

                //// 発注先ガイド
                //case "uButton_UOESupplierCd":
                //    {
                //        e.NextCtrl = this.getNextControl("uButton_UOESupplierCd");
                //        break;
                //    }

                //// 明細備考
                //case "tEdit_DtlNote":
                //    {
                //        e.NextCtrl = this.getNextControl("tEdit_DtlNote");
                //        break;
                //    }

                //// 明細備考あいまい条件
                //case "tComboEditor_DtlNoteFuzzy":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_DtlNoteFuzzy");
                //        break;
                //    }

                //// 削除指定区分
                //case "tComboEditor_DeleteFlag":
                //    {
                //        e.NextCtrl = this.getNextControl("tComboEditor_DeleteFlag");
                //        break;
                //    }

                //#endregion // 詳細検索条件
                # endregion
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/11 ADD
                # region [詳細条件]
                # region [コード←→名称 切り替え項目]
                // 担当者
                case "tEdit_SalesEmployeeCd":
                    {
                        string inputValue = tEdit_SalesEmployeeCd.Text;

                        string code;
                        bool status = ReadSalesEmployeeName(out code);

                        if (status == true)
                        {
                            // 名称表示
                            // -----------UPD 2010/08/05----------->>>>>
                            //tEdit_SalesEmployeeCd.Text = _swSalesEmployeeName;
                            if (!string.IsNullOrEmpty(_swSalesEmployeeCd))
                            {
                                tEdit_SalesEmployeeCd.Text = _swSalesEmployeeCd.Trim().PadLeft(4, '0') + ":" + _swSalesEmployeeName;
                            }
                            // -----------UPD 2010/08/05-----------<<<<<
                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                    case Keys.Return:
                                        // ---------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                        if (this.uCheckSalesEmployeeCd_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // ---------------UPD 2009/12/28------------<<<<<
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                    case Keys.Tab:
                                        {
                                            // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                            if (e.Key == Keys.Tab)
                                            {
                                                flag = true;
                                            }
                                            else
                                            {
                                                flag = false;
                                            }
                                            // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                            if (this.uCheckSalesEmployeeCd_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "担当者コード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードに戻す
                            tEdit_SalesEmployeeCd.Text = code;
                            tEdit_SalesEmployeeCd.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                    }
                    break;
                // 受注者
                case "tEdit_FrontEmployeeCd":
                    {
                        string inputValue = tEdit_FrontEmployeeCd.Text;

                        string code;
                        bool status = ReadFrontEmployeeName(out code);

                        if (status == true)
                        {
                            // 名称表示
                            // -----------UPD 2010/08/05----------->>>>>
                            //tEdit_FrontEmployeeCd.Text = _swFrontEmployeeName;
                            if (!string.IsNullOrEmpty(_swFrontEmployeeCd))
                            {
                                tEdit_FrontEmployeeCd.Text = _swFrontEmployeeCd.Trim().PadLeft(4, '0') + ":" + _swFrontEmployeeName;
                            }
                            // -----------UPD 2010/08/05-----------<<<<<

                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                    case Keys.Return:
                                        // ---------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                        if (this.uCheckFrontEmployeeCd_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // ---------------UPD 2009/12/28------------<<<<<
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                    case Keys.Tab:
                                        {
                                            // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                            if (e.Key == Keys.Tab)
                                            {
                                                flag = true;
                                            }
                                            else
                                            {
                                                flag = false;
                                            }
                                            // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                            if (this.uCheckFrontEmployeeCd_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "受注者コード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードに戻す
                            tEdit_FrontEmployeeCd.Text = code;
                            tEdit_FrontEmployeeCd.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                    }
                    break;
                // 発行者
                case "tEdit_SalesInputCode":
                    {
                        string inputValue = tEdit_SalesInputCode.Text;

                        string code;
                        bool status = ReadSalesInputName(out code);

                        if (status == true)
                        {
                            // 名称表示
                            // -----------UPD 2010/08/05----------->>>>>
                            //tEdit_SalesInputCode.Text = _swSalesInputName;
                            if (!string.IsNullOrEmpty(_swSalesInputCode))
                            {
                                tEdit_SalesInputCode.Text = _swSalesInputCode.Trim().PadLeft(4, '0') + ":" + _swSalesInputName;
                            }
                            // -----------UPD 2010/08/05-----------<<<<<

                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                    case Keys.Return:
                                        // ---------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                        if (this.uCheckSalesInputCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // ---------------UPD 2009/12/28------------<<<<<
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                    case Keys.Tab:
                                        {
                                            // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                            if (e.Key == Keys.Tab)
                                            {
                                                flag = true;
                                            }
                                            else
                                            {
                                                flag = false;
                                            }
                                            // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                            if (this.uCheckSalesInputCode_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<

                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "発行者コード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードに戻す
                            tEdit_SalesInputCode.Text = code;
                            tEdit_SalesInputCode.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                    }
                    break;
                // BLコード
                case "tEdit_BlGoodsCode":
                    {
                        int inputValue;
                        try
                        {
                            inputValue = Int32.Parse(tEdit_BlGoodsCode.Text);
                        }
                        catch
                        {
                            inputValue = 0;
                        }

                        int code;
                        bool status = ReadBlCodeName(out code);

                        if (status == true)
                        {
                            // 名称表示
                            // -----------UPD 2010/08/05--------->>>>>
                            //tEdit_BlGoodsCode.Text = _swBLGoodsName;
                            if (_swBLGoodsCode != 0)
                            {
                                this.tEdit_BlGoodsCode.Text = this._swBLGoodsCode.ToString("D5") + ":" + _swBLGoodsName;
                            }
                            // -----------UPD 2010/08/05---------<<<<<

                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                    case Keys.Return:
                                        // ---------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                        if (this.uCheckBLGoodsCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // ---------------UPD 2009/12/28------------<<<<<
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                    case Keys.Tab:
                                        {
                                            // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                            if (e.Key == Keys.Tab)
                                            {
                                                flag = true;
                                            }
                                            else
                                            {
                                                flag = false;
                                            }
                                            // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                            if (this.uCheckBLGoodsCode_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "ＢＬコード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードに戻す
                            tEdit_BlGoodsCode.Text = code.ToString();
                            tEdit_BlGoodsCode.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                    }
                    break;
                // BLグループ
                case "tEdit_BlGroupCode":
                    {
                        int inputValue;
                        try
                        {
                            inputValue = Int32.Parse(tEdit_BlGroupCode.Text);
                        }
                        catch
                        {
                            inputValue = 0;
                        }

                        int code;
                        bool status = ReadBlGroupName(out code);

                        if (status == true)
                        {
                            // 名称表示
                            // -----------UPD 2010/08/05----------->>>>>
                            //tEdit_BlGroupCode.Text = _swBLGroupName;
                            if (_swBLGroupCode != 0)
                            {
                                tEdit_BlGroupCode.Text = _swBLGroupCode.ToString("D5") + ":" + _swBLGroupName;
                            }
                            // -----------UPD 2010/08/05-----------<<<<<

                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                    case Keys.Return:
                                        // ---------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                        if (this.uCheckBLGroupCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // ---------------UPD 2009/12/28------------<<<<<

                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                    case Keys.Tab:
                                        {
                                            // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                            if (e.Key == Keys.Tab)
                                            {
                                                flag = true;
                                            }
                                            else
                                            {
                                                flag = false;
                                            }
                                            // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                            if (this.uCheckBLGroupCode_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "グループコード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードに戻す
                            tEdit_BlGroupCode.Text = code.ToString();
                            tEdit_BlGroupCode.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                    }
                    break;
                // メーカー
                case "tEdit_MakerCd":
                    {
                        int inputValue;
                        try
                        {
                            inputValue = Int32.Parse(tEdit_MakerCd.Text);
                        }
                        catch
                        {
                            inputValue = 0;
                        }

                        int code;
                        bool status = ReadGoodsMakerName(out code);

                        if (status == true)
                        {
                            // 名称表示
                            // ----------UPD 2010/08/05---------->>>>>
                            //tEdit_MakerCd.Text = _swGoodsMakerName;
                            if (_swGoodsMakerCd != 0)
                            {
                                tEdit_MakerCd.Text = _swGoodsMakerCd.ToString("D4") + ":" + _swGoodsMakerName;
                            }
                            // ----------UPD 2010/08/05---------<<<<<

                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                    case Keys.Return:
                                        // ---------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                        if (this.uCheckGoodsMakerCd_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // ---------------UPD 2009/12/28------------<<<<<
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                        {
                                            flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                            if (this.uCheckGoodsMakerCd_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                    // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                    case Keys.Return:
                                        if (this.uCheckGoodsMakerCd_base.Checked)
                                        {
                                            if (this.tEdit_MakerCd.Visible && String.IsNullOrEmpty(this.tEdit_MakerCd.Text.Trim()))
                                            {
                                                flag = false;
                                                if (this.tEdit_GoodsNo.Visible && this.uCheckGoodsNo_base.Checked) e.NextCtrl = this.tEdit_GoodsNo;
                                                else e.NextCtrl = GetBeforeCommonControl("tEdit_GoodsNo");
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        else
                                        {
                                            if (this.tEdit_MakerCd.Visible && String.IsNullOrEmpty(this.tEdit_MakerCd.Text.Trim()) &&
                                                this.uCheckGoodsMakerCd.Checked && this.uCheckGoodsMakerCd.Enabled == true)
                                            {
                                                flag = false;
                                                if (this.tEdit_GoodsNo.Visible && this.uCheckGoodsNo.Checked && this.uCheckGoodsNo.Enabled == true) e.NextCtrl = this.tEdit_GoodsNo;
                                                else e.NextCtrl = GetBeforeControl("tEdit_GoodsNo");
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                    // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "メーカーコード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードに戻す
                            tEdit_MakerCd.Text = code.ToString();
                            tEdit_MakerCd.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                    }
                    break;
                // 販売区分
                case "tEdit_SalesCode":
                    {
                        int inputValue;
                        try
                        {
                            inputValue = Int32.Parse(tEdit_SalesCode.Text);
                        }
                        catch
                        {
                            inputValue = 0;
                        }

                        int code;
                        bool status = ReadSalesCodeName(out code);

                        if (status == true)
                        {
                            // 名称表示
                            // -----------UPD 2010/08/05----------->>>>>
                            //tEdit_SalesCode.Text = _swSalesName;
                            // ---ADD K2013/01/23  鄧潘ハン---------------------------------->>>>>
                            // 登戸オプションの場合
                            if (this._opt_Nobuto == (int)Option.ON)
                            {
                                if (_swSalesCode != 0)
                                {
                                    this.tEdit_SalesCode.Text = this._swSalesCode.ToString() + ":" + _swSalesName;
                                }
                            }
                            else
                            {
                            if (_swSalesCode != 0)
                            {
                                this.tEdit_SalesCode.Text = this._swSalesCode.ToString("D4") + ":" + _swSalesName;
                            }
                            }
                            // ---DEL K2013/01/23  鄧潘ハン---------------------------------->>>>>
                            //if (_swSalesCode != 0)
                            //{
                            //    this.tEdit_SalesCode.Text = this._swSalesCode.ToString("D4") + ":" + _swSalesName;
                            //}
                            // ---DEL K2013/01/23  鄧潘ハン----------------------------------<<<<<
                            // -----------UPD 2010/08/05-----------<<<<<

                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                    case Keys.Return:
                                        // ---------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                        if (this.uCheckSalesCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // ---------------UPD 2009/12/28-------------<<<<<
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                    case Keys.Tab:
                                        {
                                            // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                            if (e.Key == Keys.Tab)
                                            {
                                                flag = true;
                                            }
                                            else
                                            {
                                                flag = false;
                                            }
                                            // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                            if (this.uCheckSalesCode_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<
                        }
                        else
                        {
                            // ---ADD K2013/01/23  鄧潘ハン---------------------------------->>>>>
                            if (this._opt_Nobuto == (int)Option.ON)
                            {
                                // エラー時
                                TMsgDisp.Show(
                                    this,
                                    emErrorLevel.ERR_LEVEL_INFO,
                                    this.Name,
                                    SP_SALESCODE + " [" + inputValue + "] に該当するデータが存在しません。",
                                    -1,
                                    MessageBoxButtons.OK);
                            }
                            else
                            {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "販売区分 [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);
                            }
                            // ---ADD K2013/01/23  鄧潘ハン----------------------------------<<<<<
                            // ---DEL K2013/01/23  鄧潘ハン---------------------------------->>>>>
                            // エラー時
                            //TMsgDisp.Show(
                            //    this,
                            //    emErrorLevel.ERR_LEVEL_INFO,
                            //    this.Name,
                            //    "販売区分 [" + inputValue + "] に該当するデータが存在しません。",
                            //    -1,
                            //    MessageBoxButtons.OK);
                            // --DEL K2013/01/23  鄧潘ハン----------------------------------<<<<<

                            // コードに戻す
                            tEdit_SalesCode.Text = code.ToString();
                            tEdit_SalesCode.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                    }
                    break;
                // 商品区分(旧:自社分類)
                case "tEdit_EnterpriseGanreCode":
                    {
                        int inputValue;
                        try
                        {
                            inputValue = Int32.Parse(tEdit_EnterpriseGanreCode.Text);
                        }
                        catch
                        {
                            inputValue = 0;
                        }

                        int code;
                        bool status = ReadEnterpriseGanreName(out code);

                        if (status == true)
                        {
                            // 名称表示
                            // -----------UPD 2010/08/05----------->>>>>
                            //tEdit_EnterpriseGanreCode.Text = _swEnterpriseGanreName;
                            if (_swEnterpriseGanreCode != 0)
                            {
                                this.tEdit_EnterpriseGanreCode.Text = this._swEnterpriseGanreCode.ToString("D4") + ":" + _swEnterpriseGanreName;
                            }
                            // -----------UPD 2010/08/05-----------<<<<<

                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                    case Keys.Return:
                                        // ---------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                        if (this.uCheckEnterpriseGanreCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // ---------------UPD 2009/12/28------------<<<<<
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                    case Keys.Tab:
                                        {
                                            // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                            if (e.Key == Keys.Tab)
                                            {
                                                flag = true;
                                            }
                                            else
                                            {
                                                flag = false;
                                            }
                                            // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                            if (this.uCheckEnterpriseGanreCode_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "販売区分 [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードに戻す
                            tEdit_EnterpriseGanreCode.Text = code.ToString();
                            tEdit_EnterpriseGanreCode.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                    }
                    break;
                // 倉庫
                case "tEdit_WarehouseCd":
                    {
                        string inputValue = tEdit_WarehouseCd.Text;

                        string code;
                        bool status = ReadWarehouseName(out code);

                        if (status == true)
                        {
                            // 名称表示
                            // -----------UPD 2010/08/05----------->>>>>
                            //tEdit_WarehouseCd.Text = _swWarehouseName;
                            if (!string.IsNullOrEmpty(_swWarehouseCd))
                            {
                                this.tEdit_WarehouseCd.Text = this._swWarehouseCd.Trim().PadLeft(4, '0') + ":" + _swWarehouseName;
                            }
                            // -----------UPD 2010/08/05-----------<<<<<
                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                    case Keys.Return:
                                        // ---------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                        if (this.uCheckWarehouseCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // ---------------UPD 2009/12/28------------<<<<<
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                    case Keys.Tab:
                                        {
                                            // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                            if (e.Key == Keys.Tab)
                                            {
                                                flag = true;
                                            }
                                            else
                                            {
                                                flag = false;
                                            }
                                            // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                            if (this.uCheckWarehouseCode_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "倉庫コード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードに戻す
                            tEdit_WarehouseCd.Text = code;
                            tEdit_WarehouseCd.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                    }
                    break;
                // 仕入先
                case "tEdit_SupplierCd":
                    {
                        int inputValue;
                        try
                        {
                            inputValue = Int32.Parse(tEdit_SupplierCd.Text);
                        }
                        catch
                        {
                            inputValue = 0;
                        }

                        int code;
                        bool status = ReadSupplierName(out code);

                        if (status == true)
                        {
                            // 名称表示
                            // ----------UPD 2010/08/05---------->>>>>
                            //tEdit_SupplierCd.Text = _swSupplierName;
                            if (_swSupplierCd != 0)
                            {
                                tEdit_SupplierCd.Text = this._swSupplierCd.ToString("D6") + ":" + this._swSupplierName;
                            }
                            // ----------UPD 2010/08/05----------<<<<<
                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                    case Keys.Return:
                                        // ---------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                        if (this.uCheckSupplierCd_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // ---------------UPD 2009/12/28------------<<<<<
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                    case Keys.Tab:
                                        {
                                            // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                            if (e.Key == Keys.Tab)
                                            {
                                                flag = true;
                                            }
                                            else
                                            {
                                                flag = false;
                                            }
                                            // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                            if (this.uCheckSupplierCd_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "仕入先コード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードに戻す
                            tEdit_SupplierCd.Text = code.ToString();
                            tEdit_SupplierCd.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                    }
                    break;
                // 発注先
                case "tEdit_UOESupplierCd":
                    {
                        int inputValue;
                        try
                        {
                            inputValue = Int32.Parse(tEdit_UOESupplierCd.Text);
                        }
                        catch
                        {
                            inputValue = 0;
                        }

                        int code;
                        bool status = ReadUOESupplierName(out code);

                        if (status == true)
                        {
                            // 名称表示
                            // -----------UPD 2010/08/05----------->>>>>
                            //tEdit_UOESupplierCd.Text = _swUOESupplierName;
                            if (_swUOESupplierCd != 0)
                            {
                                this.tEdit_UOESupplierCd.Text = this._swUOESupplierCd.ToString("D6") + ":" + _swUOESupplierName;
                            }
                            // -----------UPD 2010/08/05-----------<<<<<

                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                    case Keys.Return:
                                        // ---------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                        if (this.uCheckUOESupplierCd_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // ---------------UPD 2009/12/28------------<<<<<
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                    case Keys.Tab:
                                        {
                                            // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                            if (e.Key == Keys.Tab)
                                            {
                                                flag = true;
                                            }
                                            else
                                            {
                                                flag = false;
                                            }
                                            // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                            if (this.uCheckUOESupplierCd_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "発注先コード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードに戻す
                            tEdit_UOESupplierCd.Text = code.ToString();
                            tEdit_UOESupplierCd.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                    }
                    break;
                // 納入先
                case "tEdit_AddresseeCode":
                    {
                        int inputValue;
                        try
                        {
                            inputValue = Int32.Parse(tEdit_AddresseeCode.Text);
                        }
                        catch
                        {
                            inputValue = 0;
                        }

                        int code;
                        bool status = ReadAddresseeName(out code);

                        if (status == true)
                        {
                            // 名称表示
                            // -----------UPD 2010/08/05----------->>>>>
                            //tEdit_AddresseeCode.Text = _swAddresseeName;
                            if (_swAddresseeCode != 0)
                            {
                                this.tEdit_AddresseeCode.Text = this._swAddresseeCode.ToString("D8") + ":" + _swAddresseeName;
                            }
                            // -----------UPD 2010/08/05-----------<<<<<

                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                    case Keys.Return:
                                        // ---------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                        if (this.uCheckAddresseeCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // ---------------UPD 2009/12/28------------<<<<<
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                    case Keys.Tab:
                                        {
                                            // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                            if (e.Key == Keys.Tab)
                                            {
                                                flag = true;
                                            }
                                            else
                                            {
                                                flag = false;
                                            }
                                            // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                            if (this.uCheckAddresseeCode_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "納入先コード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードに戻す
                            tEdit_AddresseeCode.Text = code.ToString();
                            tEdit_AddresseeCode.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                    }
                    break;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                // 商品大分類
                case "tEdit_GoodsLGroup":
                    {
                        int inputValue;
                        try
                        {
                            inputValue = Int32.Parse(tEdit_GoodsLGroup.Text);
                        }
                        catch
                        {
                            inputValue = 0;
                        }

                        int code;
                        bool status = ReadGoodsLGroupName(out code);

                        if (status == true)
                        {
                            // 名称表示
                            // -----------UPD 2010/08/05----------->>>>>
                            //tEdit_GoodsLGroup.Text = _swGoodsLGroupName;
                            if (_swGoodsLGroup != 0)
                            {
                                this.tEdit_GoodsLGroup.Text = this._swGoodsLGroup.ToString("D4") + ":" + _swGoodsLGroupName;
                            }
                            // -----------UPD 2010/08/05-----------<<<<<

                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                    case Keys.Return:
                                        // ---------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                        if (this.uCheckGoodsLGroup_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // ---------------UPD 2009/12/28------------<<<<<
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                        {
                                            flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                            if (this.uCheckGoodsLGroup_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                    // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                    case Keys.Return:
                                        if (this.uCheckGoodsLGroup_base.Checked)
                                        {
                                            if (this.tEdit_GoodsLGroup.Visible && String.IsNullOrEmpty(this.tEdit_GoodsLGroup.Text.Trim()))
                                            {
                                                flag = false;
                                                if (this.tEdit_UoeRemark2.Visible && this.uCheckUoeRemark2_base.Checked) e.NextCtrl = this.tEdit_UoeRemark2;
                                                else e.NextCtrl = GetBeforeCommonControl("tEdit_UoeRemark2");
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        else
                                        {
                                            if (this.tEdit_GoodsLGroup.Visible && String.IsNullOrEmpty(this.tEdit_GoodsLGroup.Text.Trim()) &&
                                                this.uCheckGoodsLGroup.Checked && this.uCheckGoodsLGroup.Enabled == true)
                                            {
                                                flag = false;
                                                if (this.tEdit_UoeRemark2.Visible && this.uCheckUoeRemark2.Checked && this.uCheckUoeRemark2.Enabled == true) e.NextCtrl = this.tEdit_UoeRemark2;
                                                else e.NextCtrl = GetBeforeControl("tEdit_UoeRemark2");
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                    // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "商品大分類コード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードに戻す
                            tEdit_GoodsLGroup.Text = code.ToString();
                            tEdit_GoodsLGroup.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                    }
                    break;
                // 商品中分類
                case "tEdit_GoodsMGroup":
                    {
                        int inputValue;
                        try
                        {
                            inputValue = Int32.Parse(tEdit_GoodsMGroup.Text);
                        }
                        catch
                        {
                            inputValue = 0;
                        }

                        int code;
                        bool status = ReadGoodsMGroupName(out code);

                        if (status == true)
                        {
                            // 名称表示
                            // -----------UPD 2010/08/05----------->>>>>
                            //tEdit_GoodsMGroup.Text = _swGoodsMGroupName;
                            if (_swGoodsMGroup != 0)
                            {
                                this.tEdit_GoodsMGroup.Text = this._swGoodsMGroup.ToString("D4") + ":" + _swGoodsMGroupName;
                            }
                            // -----------UPD 2010/08/05-----------<<<<<

                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Tab:
                                    case Keys.Return:
                                        // ---------------UPD 2009/12/28------------>>>>>
                                        //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                        if (this.uCheckGoodsMGroup_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                        // ---------------UPD 2009/12/28------------<<<<<
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28------------->>>>>
                            else
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                    case Keys.Tab:
                                        {
                                            // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                            if (e.Key == Keys.Tab)
                                            {
                                                flag = true;
                                            }
                                            else
                                            {
                                                flag = false;
                                            }
                                            // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                            if (this.uCheckGoodsMGroup_base.Checked)
                                            {
                                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                            }
                                        }
                                        break;
                                }
                            }
                            // --------------ADD 2009/12/28-------------<<<<<
                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "商品中分類コード [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);

                            // コードに戻す
                            tEdit_GoodsMGroup.Text = code.ToString();
                            tEdit_GoodsMGroup.SelectAll();
                            e.NextCtrl = e.PrevCtrl;
                        }
                    }
                    break;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
                # endregion

                # region [あいまい検索項目]
                // 車種名称
                case "tEdit_ModelFullName":
                    {
                        string inputValue = tEdit_ModelFullName.Text;
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        tEdit_ModelFullName.Text = searchText;
                        tComboEditor_ModelFullNameFuzzy.Value = fuzzyValue;

                        // 退避
                        _srModelFullName = inputValue;
                        _srRvModelFullName = searchText;

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:    // DEL 2011/12/15 gezh redmine#26667
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckModelFullName_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckModelFullName_base.Checked)
                                    {
                                        if (this.tEdit_ModelFullName.Visible && String.IsNullOrEmpty(this.tEdit_ModelFullName.Text.Trim()))
                                        {
                                            if (this.tEdit_FullModel.Visible && this.uCheckFullModel_base.Checked) e.NextCtrl = this.tEdit_FullModel;
                                            else e.NextCtrl = GetNextCommonControl("tEdit_FullModel");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_ModelFullName.Visible && String.IsNullOrEmpty(this.tEdit_ModelFullName.Text.Trim()) &&
                                            this.uCheckModelFullName.Checked && this.uCheckModelFullName.Enabled == true)
                                        {
                                            if (this.tEdit_FullModel.Visible && this.uCheckFullModel.Checked && this.uCheckFullModel.Enabled == true) e.NextCtrl = this.tEdit_FullModel;
                                            else e.NextCtrl = GetNextControl("tEdit_FullModel");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    {
                                        flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                        if (this.uCheckModelFullName_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckModelFullName_base.Checked)
                                    {
                                        if (this.tEdit_ModelFullName.Visible && String.IsNullOrEmpty(this.tEdit_ModelFullName.Text.Trim()))
                                        {
                                            flag = false;
                                            if (this.tEdit_CarMngCode.Visible && this.uCheckCarMngCode_base.Checked) e.NextCtrl = this.tEdit_CarMngCode;
                                            else e.NextCtrl = GetBeforeCommonControl("tEdit_CarMngCode");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_ModelFullName.Visible && String.IsNullOrEmpty(this.tEdit_ModelFullName.Text.Trim()) &&
                                            this.uCheckModelFullName.Checked && this.uCheckModelFullName.Enabled == true)
                                        {
                                            flag = false;
                                            if (this.tEdit_CarMngCode.Visible && this.uCheckCarMngCode.Checked && this.uCheckCarMngCode.Enabled == true) e.NextCtrl = this.tEdit_CarMngCode;
                                            else e.NextCtrl = GetBeforeControl("tEdit_CarMngCode");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 車種名称あいまい条件
                case "tComboEditor_ModelFullNameFuzzy":
                    {
                        // 退避
                        _srModelFullName = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_ModelFullNameFuzzy.Value, tEdit_ModelFullName.Text);

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckModelFullName_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckModelFullName_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 型式
                case "tEdit_FullModel":
                    {
                        string inputValue = tEdit_FullModel.Text;
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        tEdit_FullModel.Text = searchText;
                        tComboEditor_FullModelFuzzy.Value = fuzzyValue;

                        // 退避
                        _srFullModel = inputValue;
                        _srRvFullModel = searchText;

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:   // DEL 2011/12/15 gezh redmine#26667
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckFullModel_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckFullModel_base.Checked)
                                    {
                                        if (this.tEdit_FullModel.Visible && String.IsNullOrEmpty(this.tEdit_FullModel.Text.Trim()))
                                        {
                                            // ---------DEL 2013/03/25---------->>>>>
                                            //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo_base.Checked) e.NextCtrl = this.tNedit_SearchFrameNo;
                                            //else e.NextCtrl = GetNextCommonControl("tNedit_SearchFrameNo");
                                            // ---------DEL 2013/03/25----------<<<<<
                                            // ---------ADD 2013/03/25---------->>>>>
                                            if (this.tEdit_SearchFrameNo.Visible && this.uCheckSearchFrameNo_base.Checked) e.NextCtrl = this.tEdit_SearchFrameNo;
                                            else e.NextCtrl = GetNextCommonControl("tEdit_SearchFrameNo");
                                            // ---------ADD 2013/03/25----------<<<<<
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_FullModel.Visible && String.IsNullOrEmpty(this.tEdit_FullModel.Text.Trim()) &&
                                            this.uCheckFullModel.Checked && this.uCheckFullModel.Enabled == true)
                                        {
                                            // ---------DEL 2013/03/25---------->>>>>
                                            //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true) e.NextCtrl = this.tNedit_SearchFrameNo;
                                            //else e.NextCtrl = GetNextControl("tNedit_SearchFrameNo");
                                            // ---------DEL 2013/03/25----------<<<<<
                                            // ---------ADD 2013/03/25---------->>>>>
                                            if (this.tEdit_SearchFrameNo.Visible && this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true) e.NextCtrl = this.tEdit_SearchFrameNo;
                                            else e.NextCtrl = GetNextControl("tEdit_SearchFrameNo");
                                            // ---------ADD 2013/03/25----------<<<<<
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    {
                                        flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                        if (this.uCheckFullModel_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckFullModel_base.Checked)
                                    {
                                        if (this.tEdit_FullModel.Visible && String.IsNullOrEmpty(this.tEdit_FullModel.Text.Trim()))
                                        {
                                            flag = false;
                                            if (this.tEdit_ModelFullName.Visible && this.uCheckModelFullName_base.Checked) e.NextCtrl = this.tEdit_ModelFullName;
                                            else e.NextCtrl = GetBeforeCommonControl("tEdit_ModelFullName");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_FullModel.Visible && String.IsNullOrEmpty(this.tEdit_FullModel.Text.Trim()) &&
                                            this.uCheckFullModel.Checked && this.uCheckFullModel.Enabled == true)
                                        {
                                            flag = false;
                                            if (this.tEdit_ModelFullName.Visible && this.uCheckModelFullName.Checked && this.uCheckModelFullName.Enabled == true) e.NextCtrl = this.tEdit_ModelFullName;
                                            else e.NextCtrl = GetBeforeControl("tEdit_ModelFullName");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 型式あいまい条件
                case "tComboEditor_FullModelFuzzy":
                    {
                        // 退避
                        _srFullModel = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_FullModelFuzzy.Value, tEdit_FullModel.Text);

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckFullModel_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckFullModel_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // カラー名称
                case "tEdit_ColorName1":
                    {
                        string inputValue = tEdit_ColorName1.Text;
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        tEdit_ColorName1.Text = searchText;
                        tComboEditor_ColorName1Fuzzy.Value = fuzzyValue;

                        // 退避
                        _srColorName1 = inputValue;
                        _srRvColorName1 = searchText;

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:   // DEL 2011/12/15 gezh redmine#26667
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckColorName1_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckColorName1_base.Checked)
                                    {
                                        if (this.tEdit_ColorName1.Visible && String.IsNullOrEmpty(this.tEdit_ColorName1.Text.Trim()))
                                        {
                                            if (this.tEdit_TrimName.Visible && this.uCheckTrimName_base.Checked) e.NextCtrl = this.tEdit_TrimName;
                                            else e.NextCtrl = GetNextCommonControl("tEdit_TrimName");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_ColorName1.Visible && String.IsNullOrEmpty(this.tEdit_ColorName1.Text.Trim()) &&
                                            this.uCheckColorName1.Checked && this.uCheckColorName1.Enabled == true)
                                        {
                                            if (this.tEdit_TrimName.Visible && this.uCheckTrimName.Checked && this.uCheckTrimName.Enabled == true) e.NextCtrl = this.tEdit_TrimName;
                                            else e.NextCtrl = GetNextControl("tEdit_TrimName");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckColorName1_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // カラー名称あいまい条件
                case "tComboEditor_ColorName1Fuzzy":
                    {
                        // 退避
                        _srColorName1 = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_ColorName1Fuzzy.Value, tEdit_ColorName1.Text);

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckColorName1_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckColorName1_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // トリム名称
                case "tEdit_TrimName":
                    {
                        string inputValue = tEdit_TrimName.Text;
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        tEdit_TrimName.Text = searchText;
                        tComboEditor_TrimNameFuzzy.Value = fuzzyValue;

                        // 退避
                        _srTrimName = inputValue;
                        _srRvTrimName = searchText;

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:   // DEL 2011/12/15 gezh redmine#26667
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckTrimName_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckTrimName_base.Checked)
                                    {
                                        if (this.tEdit_TrimName.Visible && String.IsNullOrEmpty(this.tEdit_TrimName.Text.Trim()))
                                        {
                                            if (this.tComboEditor_DataSendCode.Visible && this.uCheckDataSendCode_base.Checked) e.NextCtrl = this.tComboEditor_DataSendCode;
                                            else e.NextCtrl = GetNextCommonControl("tComboEditor_DataSendCode");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_TrimName.Visible && String.IsNullOrEmpty(this.tEdit_TrimName.Text.Trim()) &&
                                            this.uCheckTrimName.Checked && this.uCheckTrimName.Enabled == true)
                                        {
                                            if (this.tComboEditor_DataSendCode.Visible && this.uCheckDataSendCode.Checked && this.uCheckDataSendCode.Enabled == true) e.NextCtrl = this.tComboEditor_DataSendCode;
                                            else e.NextCtrl = GetNextControl("tComboEditor_DataSendCode");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    {
                                        flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                        if (this.uCheckTrimName_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckTrimName_base.Checked)
                                    {
                                        if (this.tEdit_TrimName.Visible && String.IsNullOrEmpty(this.tEdit_TrimName.Text.Trim()))
                                        {
                                            flag = false;
                                            if (this.tEdit_ColorName1.Visible && this.uCheckColorName1_base.Checked) e.NextCtrl = this.tEdit_ColorName1;
                                            else e.NextCtrl = GetBeforeCommonControl("tEdit_ColorName1");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_TrimName.Visible && String.IsNullOrEmpty(this.tEdit_TrimName.Text.Trim()) &&
                                            this.uCheckTrimName.Checked && this.uCheckTrimName.Enabled == true)
                                        {
                                            flag = false;
                                            if (this.tEdit_ColorName1.Visible && this.uCheckColorName1.Checked && this.uCheckColorName1.Enabled == true) e.NextCtrl = this.tEdit_ColorName1;
                                            else e.NextCtrl = GetBeforeControl("tEdit_ColorName1");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // トリム名称あいまい条件
                case "tComboEditor_TrimNameFuzzy":
                    {
                        // 退避
                        _srTrimName = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_TrimNameFuzzy.Value, tEdit_TrimName.Text);

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckTrimName_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckTrimName_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 備考1
                case "tEdit_SlipNote":
                    {
                        string inputValue = tEdit_SlipNote.Text;
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        tEdit_SlipNote.Text = searchText;
                        tComboEditor_SlipNoteFuzzy.Value = fuzzyValue;

                        // 退避
                        _srSlipNote = inputValue;
                        _srRvSlipNote = searchText;

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:   // DEL 2011/12/15 gezh redmine#26667
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckSlipNote_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckSlipNote_base.Checked)
                                    {
                                        if (this.tEdit_SlipNote.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote.Text.Trim()))
                                        {
                                            if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2_base.Checked) e.NextCtrl = this.tEdit_SlipNote2;
                                            else e.NextCtrl = GetNextCommonControl("tEdit_SlipNote2");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_SlipNote.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote.Text.Trim()) &&
                                            this.uCheckSlipNote.Checked && this.uCheckSlipNote.Enabled == true)
                                        {
                                            if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2.Checked && this.uCheckSlipNote2.Enabled == true) e.NextCtrl = this.tEdit_SlipNote2;
                                            else e.NextCtrl = GetNextControl("tEdit_SlipNote2");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckSlipNote_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 備考1あいまい条件
                case "tComboEditor_SlipNoteFuzzy":
                    {
                        // 退避
                        _srSlipNote = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_SlipNoteFuzzy.Value, tEdit_SlipNote.Text);

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckSlipNote_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckSlipNote_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<

                        # endregion
                    }
                    break;
                // 備考2
                case "tEdit_SlipNote2":
                    {
                        string inputValue = tEdit_SlipNote2.Text;
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        tEdit_SlipNote2.Text = searchText;
                        tComboEditor_SlipNote2Fuzzy.Value = fuzzyValue;

                        // 退避
                        _srSlipNote2 = inputValue;
                        _srRvSlipNote2 = searchText;

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:   // DEL 2011/12/15 gezh redmine#26667
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckSlipNote2_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckSlipNote2_base.Checked)
                                    {
                                        if (this.tEdit_SlipNote2.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote2.Text.Trim()))
                                        {
                                            if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3_base.Checked) e.NextCtrl = this.tEdit_SlipNote3;
                                            else e.NextCtrl = GetNextCommonControl("tEdit_SlipNote3");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_SlipNote2.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote2.Text.Trim()) &&
                                            this.uCheckSlipNote2.Checked && this.uCheckSlipNote2.Enabled == true)
                                        {
                                            if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3.Checked && this.uCheckSlipNote3.Enabled == true) e.NextCtrl = this.tEdit_SlipNote3;
                                            else e.NextCtrl = GetNextControl("tEdit_SlipNote3");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    {
                                        flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                        if (this.uCheckSlipNote2_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckSlipNote2_base.Checked)
                                    {
                                        if (this.tEdit_SlipNote2.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote2.Text.Trim()))
                                        {
                                            flag = false;
                                            if (this.tEdit_SlipNote.Visible && this.uCheckSlipNote_base.Checked) e.NextCtrl = this.tEdit_SlipNote;
                                            else e.NextCtrl = GetBeforeCommonControl("tEdit_SlipNote");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_SlipNote2.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote2.Text.Trim()) &&
                                            this.uCheckSlipNote2.Checked && this.uCheckSlipNote2.Enabled == true)
                                        {
                                            flag = false;
                                            if (this.tEdit_SlipNote.Visible && this.uCheckSlipNote.Checked && this.uCheckSlipNote.Enabled == true) e.NextCtrl = this.tEdit_SlipNote;
                                            else e.NextCtrl = GetBeforeControl("tEdit_SlipNote");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 備考2あいまい条件
                case "tComboEditor_SlipNote2Fuzzy":
                    {
                        // 退避
                        _srSlipNote2 = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_SlipNote2Fuzzy.Value, tEdit_SlipNote2.Text);

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckSlipNote2_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckSlipNote2_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 備考3
                case "tEdit_SlipNote3":
                    {
                        string inputValue = tEdit_SlipNote3.Text;
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        tEdit_SlipNote3.Text = searchText;
                        tComboEditor_SlipNote3Fuzzy.Value = fuzzyValue;

                        // 退避
                        _srSlipNote3 = inputValue;
                        _srRvSlipNote3 = searchText;

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:   // DEL 2011/12/15 gezh redmine#26667
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckSlipNote3_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckSlipNote3_base.Checked)
                                    {
                                        if (this.tEdit_SlipNote3.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote3.Text.Trim()))
                                        {
                                            if (this.tEdit_UoeRemark1.Visible && this.uCheckUoeRemark1_base.Checked) e.NextCtrl = this.tEdit_UoeRemark1;
                                            else e.NextCtrl = GetNextCommonControl("tEdit_UoeRemark1");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_SlipNote3.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote3.Text.Trim()) &&
                                            this.uCheckSlipNote3.Checked && this.uCheckSlipNote3.Enabled == true)
                                        {
                                            if (this.tEdit_UoeRemark1.Visible && this.uCheckUoeRemark1.Checked && this.uCheckUoeRemark1.Enabled == true) e.NextCtrl = this.tEdit_UoeRemark1;
                                            else e.NextCtrl = GetNextControl("tEdit_UoeRemark1");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    {
                                        flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                        if (this.uCheckSlipNote3_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckSlipNote3_base.Checked)
                                    {
                                        if (this.tEdit_SlipNote3.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote3.Text.Trim()))
                                        {
                                            flag = false;
                                            if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2_base.Checked) e.NextCtrl = this.tEdit_SlipNote2;
                                            else e.NextCtrl = GetBeforeCommonControl("tEdit_SlipNote2");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_SlipNote3.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote3.Text.Trim()) &&
                                            this.uCheckSlipNote3.Checked && this.uCheckSlipNote3.Enabled == true)
                                        {
                                            flag = false;
                                            if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2.Checked && this.uCheckSlipNote2.Enabled == true) e.NextCtrl = this.tEdit_SlipNote2;
                                            else e.NextCtrl = GetBeforeControl("tEdit_SlipNote2");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 備考3あいまい条件
                case "tComboEditor_SlipNote3Fuzzy":
                    {
                        // 退避
                        _srSlipNote3 = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_SlipNote3Fuzzy.Value, tEdit_SlipNote3.Text);

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckSlipNote3_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckSlipNote3_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // UOEリマーク1
                case "tEdit_UoeRemark1":
                    {
                        string inputValue = tEdit_UoeRemark1.Text;
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        tEdit_UoeRemark1.Text = searchText;
                        tComboEditor_UoeRemark1Fuzzy.Value = fuzzyValue;

                        // 退避
                        _srUOERemark1 = inputValue;
                        _srRvUOERemark1 = searchText;

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:   // DEL 2011/12/15 gezh redmine#26667
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckUoeRemark1_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckUoeRemark1_base.Checked)
                                    {
                                        if (this.tEdit_UoeRemark1.Visible && String.IsNullOrEmpty(this.tEdit_UoeRemark1.Text.Trim()))
                                        {
                                            if (this.tEdit_UoeRemark2.Visible && this.uCheckUoeRemark2_base.Checked) e.NextCtrl = this.tEdit_UoeRemark2;
                                            else e.NextCtrl = GetNextCommonControl("tEdit_UoeRemark2");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_UoeRemark1.Visible && String.IsNullOrEmpty(this.tEdit_UoeRemark1.Text.Trim()) &&
                                            this.uCheckUoeRemark1.Checked && this.uCheckUoeRemark1.Enabled == true)
                                        {
                                            if (this.tEdit_UoeRemark2.Visible && this.uCheckUoeRemark2.Checked && this.uCheckUoeRemark2.Enabled == true) e.NextCtrl = this.tEdit_UoeRemark2;
                                            else e.NextCtrl = GetNextControl("tEdit_UoeRemark2");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    {
                                        flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                        if (this.uCheckUoeRemark1_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckUoeRemark1_base.Checked)
                                    {
                                        if (this.tEdit_UoeRemark1.Visible && String.IsNullOrEmpty(this.tEdit_UoeRemark1.Text.Trim()))
                                        {
                                            flag = false;
                                            if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3_base.Checked) e.NextCtrl = this.tEdit_SlipNote3;
                                            else e.NextCtrl = GetBeforeCommonControl("tEdit_SlipNote3");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_UoeRemark1.Visible && String.IsNullOrEmpty(this.tEdit_UoeRemark1.Text.Trim()) &&
                                            this.uCheckUoeRemark1.Checked && this.uCheckUoeRemark1.Enabled == true)
                                        {
                                            flag = false;
                                            if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3.Checked && this.uCheckSlipNote3.Enabled == true) e.NextCtrl = this.tEdit_SlipNote3;
                                            else e.NextCtrl = GetBeforeControl("tEdit_SlipNote3");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // UOEリマーク1あいまい条件
                case "tComboEditor_UoeRemark1Fuzzy":
                    {
                        // 退避
                        _srUOERemark1 = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_UoeRemark1Fuzzy.Value, tEdit_UoeRemark1.Text);

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckUoeRemark1_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckUoeRemark1_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // UOEリマーク2
                case "tEdit_UoeRemark2":
                    {
                        string inputValue = tEdit_UoeRemark2.Text;
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        tEdit_UoeRemark2.Text = searchText;
                        tComboEditor_UoeRemark2Fuzzy.Value = fuzzyValue;

                        // 退避
                        _srUOERemark2 = inputValue;
                        _srRvUOERemark2 = searchText;

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:   // DEL 2011/12/15 gezh redmine#26667
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckUoeRemark2_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckUoeRemark2_base.Checked)
                                    {
                                        if (this.tEdit_UoeRemark2.Visible && String.IsNullOrEmpty(this.tEdit_UoeRemark2.Text.Trim()))
                                        {
                                            if (this.tEdit_GoodsLGroup.Visible && this.uCheckGoodsLGroup_base.Checked) e.NextCtrl = this.tEdit_GoodsLGroup;
                                            else e.NextCtrl = GetNextCommonControl("tEdit_GoodsLGroup");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_UoeRemark2.Visible && String.IsNullOrEmpty(this.tEdit_UoeRemark2.Text.Trim()) &&
                                            this.uCheckUoeRemark2.Checked && this.uCheckUoeRemark2.Enabled == true)
                                        {
                                            if (this.tEdit_GoodsLGroup.Visible && this.uCheckGoodsLGroup.Checked && this.uCheckGoodsLGroup.Enabled == true) e.NextCtrl = this.tEdit_GoodsLGroup;
                                            else e.NextCtrl = GetNextControl("tEdit_GoodsLGroup");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    {
                                        flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                        if (this.uCheckUoeRemark2_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckUoeRemark2_base.Checked)
                                    {
                                        if (this.tEdit_UoeRemark2.Visible && String.IsNullOrEmpty(this.tEdit_UoeRemark2.Text.Trim()))
                                        {
                                            flag = false;
                                            if (this.tEdit_UoeRemark1.Visible && this.uCheckUoeRemark1_base.Checked) e.NextCtrl = this.tEdit_UoeRemark1;
                                            else e.NextCtrl = GetBeforeCommonControl("tEdit_UoeRemark1");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_UoeRemark2.Visible && String.IsNullOrEmpty(this.tEdit_UoeRemark2.Text.Trim()) &&
                                            this.uCheckUoeRemark2.Checked && this.uCheckUoeRemark2.Enabled == true)
                                        {
                                            flag = false;
                                            if (this.tEdit_UoeRemark1.Visible && this.uCheckUoeRemark1.Checked && this.uCheckUoeRemark1.Enabled == true) e.NextCtrl = this.tEdit_UoeRemark1;
                                            else e.NextCtrl = GetBeforeControl("tEdit_UoeRemark1");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // UOEリマーク2あいまい条件
                case "tComboEditor_UoeRemark2Fuzzy":
                    {
                        // 退避
                        _srUOERemark2 = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_UoeRemark2Fuzzy.Value, tEdit_UoeRemark2.Text);

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckUoeRemark2_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckUoeRemark2_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 品名
                case "tEdit_GoodsName":
                    {
                        string inputValue = tEdit_GoodsName.Text;
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        tEdit_GoodsName.Text = searchText;
                        tComboEditor_GoodsNameFuzzy.Value = fuzzyValue;

                        // 退避
                        _srGoodsName = inputValue;
                        _srRvGoodsName = searchText;

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:   // DEL 2011/12/15 gezh redmine#26667
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckGoodsName_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckGoodsName_base.Checked)
                                    {
                                        if (this.tEdit_GoodsName.Visible && String.IsNullOrEmpty(this.tEdit_GoodsName.Text.Trim()))
                                        {
                                            if (this.tEdit_GoodsNo.Visible && this.uCheckGoodsNo_base.Checked) e.NextCtrl = this.tEdit_GoodsNo;
                                            else e.NextCtrl = GetNextCommonControl("tEdit_GoodsNo");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_GoodsName.Visible && String.IsNullOrEmpty(this.tEdit_GoodsName.Text.Trim()) &&
                                            this.uCheckGoodsName.Checked && this.uCheckGoodsName.Enabled == true)
                                        {
                                            if (this.tEdit_GoodsNo.Visible && this.uCheckGoodsNo.Checked && this.uCheckGoodsNo.Enabled == true) e.NextCtrl = this.tEdit_GoodsNo;
                                            else e.NextCtrl = GetNextControl("tEdit_GoodsNo");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckGoodsName_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 品名あいまい条件
                case "tComboEditor_GoodsNameFuzzy":
                    {
                        // 退避
                        _srGoodsName = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_GoodsNameFuzzy.Value, tEdit_GoodsName.Text);

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckGoodsName_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckGoodsName_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 品番
                case "tEdit_GoodsNo":
                    {
                        string inputValue = tEdit_GoodsNo.Text;
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        tEdit_GoodsNo.Text = searchText;
                        tComboEditor_GoodsNoFuzzy.Value = fuzzyValue;

                        // 退避
                        _srGoodsNo = inputValue;
                        _srRvGoodsNo = searchText;

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:   // DEL 2011/12/15 gezh redmine#26667
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckGoodsNo_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckGoodsNo_base.Checked)
                                    {
                                        if (this.tEdit_GoodsNo.Visible && String.IsNullOrEmpty(this.tEdit_GoodsNo.Text.Trim()))
                                        {
                                            if (this.tEdit_MakerCd.Visible && this.uCheckGoodsMakerCd_base.Checked) e.NextCtrl = this.tEdit_MakerCd;
                                            else e.NextCtrl = GetNextCommonControl("tEdit_MakerCd");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_GoodsNo.Visible && String.IsNullOrEmpty(this.tEdit_GoodsNo.Text.Trim()) &&
                                            this.uCheckGoodsNo.Checked && this.uCheckGoodsNo.Enabled == true)
                                        {
                                            if (this.tEdit_MakerCd.Visible && this.uCheckGoodsMakerCd.Checked && this.uCheckGoodsMakerCd.Enabled == true) e.NextCtrl = this.tEdit_MakerCd;
                                            else e.NextCtrl = GetNextControl("tEdit_MakerCd");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    {
                                        flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                        if (this.uCheckGoodsNo_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckGoodsNo_base.Checked)
                                    {
                                        if (this.tEdit_GoodsNo.Visible && String.IsNullOrEmpty(this.tEdit_GoodsNo.Text.Trim()))
                                        {
                                            flag = false;
                                            if (this.tEdit_GoodsName.Visible && this.uCheckGoodsName_base.Checked) e.NextCtrl = this.tEdit_GoodsName;
                                            else e.NextCtrl = GetBeforeCommonControl("tEdit_GoodsName");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_GoodsNo.Visible && String.IsNullOrEmpty(this.tEdit_GoodsNo.Text.Trim()) &&
                                            this.uCheckGoodsNo.Checked && this.uCheckGoodsNo.Enabled == true)
                                        {
                                            flag = false;
                                            if (this.tEdit_GoodsName.Visible && this.uCheckGoodsName.Checked && this.uCheckGoodsName.Enabled == true) e.NextCtrl = this.tEdit_GoodsName;
                                            else e.NextCtrl = GetBeforeControl("tEdit_GoodsName");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 品番あいまい条件
                case "tComboEditor_GoodsNoFuzzy":
                    {
                        // 退避
                        _srGoodsNo = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_GoodsNoFuzzy.Value, tEdit_GoodsNo.Text);

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckGoodsNo_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckGoodsNo_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 明細備考
                case "tEdit_DtlNote":
                    {
                        string inputValue = tEdit_DtlNote.Text;
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        tEdit_DtlNote.Text = searchText;
                        tComboEditor_DtlNoteFuzzy.Value = fuzzyValue;

                        // 退避
                        _srDtlNote = inputValue;
                        _srRvDtlNote = searchText;

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:   // DEL 2011/12/15 gezh redmine#26667
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckDtlNote_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckDtlNote_base.Checked)
                                    {
                                        if (this.tEdit_DtlNote.Visible && String.IsNullOrEmpty(this.tEdit_DtlNote.Text.Trim()))
                                        {
                                            if (this.tComboEditor_DeleteFlag.Visible && this.uCheckDeleteFlag_base.Checked) e.NextCtrl = this.tComboEditor_DeleteFlag;
                                            else e.NextCtrl = GetNextCommonControl("tComboEditor_DeleteFlag");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_DtlNote.Visible && String.IsNullOrEmpty(this.tEdit_DtlNote.Text.Trim()) &&
                                            this.uCheckDtlNote.Checked && this.uCheckDtlNote.Enabled == true)
                                        {
                                            if (this.tComboEditor_DeleteFlag.Visible && this.uCheckDeleteFlag.Checked && this.uCheckDeleteFlag.Enabled == true) e.NextCtrl = this.tComboEditor_DeleteFlag;
                                            else e.NextCtrl = GetNextControl("tComboEditor_DeleteFlag");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckDtlNote_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 明細備考あいまい条件
                case "tComboEditor_DtlNoteFuzzy":
                    {
                        // 退避
                        _srDtlNote = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_DtlNoteFuzzy.Value, tEdit_DtlNote.Text);

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckDtlNote_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckDtlNote_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                // 棚番
                case "tEdit_WarehouseShelfNo":
                    {
                        string inputValue = tEdit_WarehouseShelfNo.Text;
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        tEdit_WarehouseShelfNo.Text = searchText;
                        tComboEditor_WarehouseShelfNoFuzzy.Value = fuzzyValue;

                        // 退避
                        _srWarehouseShelfNo = inputValue;
                        _srRvWarehouseShelfNo = searchText;

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:   // DEL 2011/12/15 gezh redmine#26667
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckWarehouseShelfNo_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckWarehouseShelfNo_base.Checked)
                                    {
                                        if (this.tEdit_WarehouseShelfNo.Visible && String.IsNullOrEmpty(this.tEdit_WarehouseShelfNo.Text.Trim()))
                                        {
                                            if (this.tEdit_SupplierSlipNo.Visible && this.uCheckSupplierSlipNo_base.Checked) e.NextCtrl = this.tEdit_SupplierSlipNo;
                                            else e.NextCtrl = GetNextCommonControl("tEdit_SupplierSlipNo");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_WarehouseShelfNo.Visible && String.IsNullOrEmpty(this.tEdit_WarehouseShelfNo.Text.Trim()) &&
                                            this.uCheckWarehouseShelfNo.Checked && this.uCheckWarehouseShelfNo.Enabled == true)
                                        {
                                            if (this.tEdit_SupplierSlipNo.Visible && this.uCheckSupplierSlipNo.Checked && this.uCheckSupplierSlipNo.Enabled == true) e.NextCtrl = this.tEdit_SupplierSlipNo;
                                            else e.NextCtrl = GetNextControl("tEdit_SupplierSlipNo");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckWarehouseShelfNo_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // 棚番あいまい条件
                case "tComboEditor_WarehouseShelfNoFuzzy":
                    {
                        // 退避
                        _srWarehouseShelfNo = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_WarehouseShelfNoFuzzy.Value, tEdit_WarehouseShelfNo.Text);

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckWarehouseShelfNo_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckWarehouseShelfNo_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        # endregion
                    }
                    break;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
                # endregion

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                // 備考１ガイド
                case "uButton_SlipNote":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckSlipNote_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckSlipNote_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_SlipNote);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckSlipNote_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 備考２ガイド
                case "uButton_SlipNote2":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckSlipNote2_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckSlipNote2_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_SlipNote2);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckSlipNote2_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 備考３ガイド
                case "uButton_SlipNote3":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckSlipNote3_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckSlipNote3_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_SlipNote3);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckSlipNote3_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                // 伝票区分
                case "tComboEditor_SalesSlipCd":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckSalesSlipCd_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckSalesSlipCd_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 伝票番号
                case "tEdit_SalesSlipNum":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckSalesSlipNum_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckSalesSlipNum_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 担当者ガイド
                case "uButton_SalesEmployeeCd":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckSalesEmployeeCd_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckSalesEmployeeCd_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_SalesEmployeeCd);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckSalesEmployeeCd_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 受注者ガイド
                case "uButton_FrontEmployeeCd":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckFrontEmployeeCd_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckFrontEmployeeCd_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_FrontEmployeeCd);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckFrontEmployeeCd_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 発行者ガイド
                case "uButton_SalesInputCode":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckSalesInputCode_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckSalesInputCode_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_SalesInputCode);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckSalesInputCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 管理番号
                case "tEdit_CarMngCode":
                    // --- ADD 2009/10/22 ----->>>>>
                    {
                        string inputValue = tEdit_CarMngCode.Text;
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        tEdit_CarMngCode.Text = searchText;
                        tComboEditor_SearchDiv.Value = fuzzyValue;

                        // 退避
                        _srCarMngCode = inputValue;
                        _srRvCarMngCode = searchText;

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:   // DEL 2011/12/15 gezh redmine#26667
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckCarMngCode_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckCarMngCode_base.Checked)
                                    {
                                        if (this.tEdit_CarMngCode.Visible && String.IsNullOrEmpty(this.tEdit_CarMngCode.Text.Trim()))
                                        {
                                            if (this.tEdit_ModelFullName.Visible && this.uCheckModelFullName_base.Checked) e.NextCtrl = this.tEdit_ModelFullName;
                                            else e.NextCtrl = GetNextCommonControl("tEdit_ModelFullName");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_CarMngCode.Visible && String.IsNullOrEmpty(this.tEdit_CarMngCode.Text.Trim()) &&
                                            this.uCheckCarMngCode.Checked && this.uCheckCarMngCode.Enabled == true)
                                        {
                                            if (this.tEdit_ModelFullName.Visible && this.uCheckModelFullName.Checked && this.uCheckModelFullName.Enabled == true) e.NextCtrl = this.tEdit_ModelFullName;
                                            else e.NextCtrl = GetNextControl("tEdit_ModelFullName");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckCarMngCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                case "tComboEditor_SearchDiv":
                    {
                        // 退避
                        _srCarMngCode = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_SearchDiv.Value, tEdit_CarMngCode.Text);

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckCarMngCode_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28------------->>>>>
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckCarMngCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        // --------------ADD 2009/12/28-------------<<<<<
                        # endregion
                    }
                    break;
                // --- ADD 2009/10/22 -----<<<<<
                // 車台No
                // ---------DEL 2013/03/25---------->>>>>
                //case "tNedit_SearchFrameNo":
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                case "tEdit_SearchFrameNo":
                // ---------ADD 2013/03/25----------<<<<<
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        // --------ADD 2010/08/05--------->>>>>
                        // ---------DEL 2013/03/25---------->>>>>
                        //string inputValue = this.tNedit_SearchFrameNo.Text;
                        // ---------DEL 2013/03/25----------<<<<<
                        // ---------ADD 2013/03/25---------->>>>>
                        string inputValue = this.tEdit_SearchFrameNo.Text;
                        // ---------ADD 2013/03/25----------<<<<<
                        string searchText;
                        int fuzzyValue;
                        GetFuzzyInput(inputValue, out searchText, out fuzzyValue);

                        // 表示
                        // ---------DEL 2013/03/25---------->>>>>
                        //tNedit_SearchFrameNo.Text = searchText;
                        // ---------DEL 2013/03/25----------<<<<<
                        // ---------ADD 2013/03/25---------->>>>>
                        tEdit_SearchFrameNo.Text = searchText;
                        // ---------ADD 2013/03/25----------<<<<<
                        tComboEditor_SearchFrameNoFuzzy.Value = fuzzyValue;

                        // 退避
                        _srSearchFrameNo = inputValue;
                        _srRvSearchFrameNo = searchText;
                        // --------ADD 2010/08/05---------<<<<<
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    //case Keys.Return:   // DEL 2011/12/15 gezh redmine#26667
                                    if (this.uCheckSearchFrameNo_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckSearchFrameNo_base.Checked)
                                    {
                                        // ---------DEL 2013/03/25---------->>>>>
                                        //if (this.tNedit_SearchFrameNo.Visible && String.IsNullOrEmpty(this.tNedit_SearchFrameNo.Text.Trim()))
                                        // ---------DEL 2013/03/25----------<<<<<
                                        // ---------ADD 2013/03/25---------->>>>>
                                        if (this.tEdit_SearchFrameNo.Visible && String.IsNullOrEmpty(this.tEdit_SearchFrameNo.Text.Trim()))
                                        // ---------ADD 2013/03/25----------<<<<<
                                        {
                                            if (this.tEdit_PartySalesSlipNum.Visible && this.uCheckPartySalesSlipNum_base.Checked) e.NextCtrl = this.tEdit_PartySalesSlipNum;
                                            else e.NextCtrl = GetNextCommonControl("tEdit_PartySalesSlipNum");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        // ---------DEL 2013/03/25---------->>>>>
                                        //if (this.tNedit_SearchFrameNo.Visible && String.IsNullOrEmpty(this.tNedit_SearchFrameNo.Text.Trim()) &&
                                        // ---------DEL 2013/03/25----------<<<<<
                                        // ---------ADD 2013/03/25---------->>>>>
                                        if (this.tEdit_SearchFrameNo.Visible && String.IsNullOrEmpty(this.tEdit_SearchFrameNo.Text.Trim()) &&
                                        // ---------ADD 2013/03/25----------<<<<<
                                            this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true)
                                        {
                                            if (this.tEdit_PartySalesSlipNum.Visible && this.uCheckPartySalesSlipNum.Checked && this.uCheckPartySalesSlipNum.Enabled == true) e.NextCtrl = this.tEdit_PartySalesSlipNum;
                                            else e.NextCtrl = GetNextControl("tEdit_PartySalesSlipNum");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    {
                                        flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                        if (this.uCheckSearchFrameNo_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckSearchFrameNo_base.Checked)
                                    {
                                        // ---------DEL 2013/03/25---------->>>>>
                                        //if (this.tNedit_SearchFrameNo.Visible && String.IsNullOrEmpty(this.tNedit_SearchFrameNo.Text.Trim()))
                                        // ---------DEL 2013/03/25----------<<<<<
                                        // ---------ADD 2013/03/25---------->>>>>
                                        if (this.tEdit_SearchFrameNo.Visible && String.IsNullOrEmpty(this.tEdit_SearchFrameNo.Text.Trim()))
                                        // ---------ADD 2013/03/25----------<<<<<
                                        {
                                            flag = false;
                                            if (this.tEdit_FullModel.Visible && this.uCheckFullModel_base.Checked) e.NextCtrl = this.tEdit_FullModel;
                                            else e.NextCtrl = GetBeforeCommonControl("tEdit_FullModel");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        // ---------DEL 2013/03/25---------->>>>>
                                        //if (this.tNedit_SearchFrameNo.Visible && String.IsNullOrEmpty(this.tNedit_SearchFrameNo.Text.Trim()) &&
                                        // ---------DEL 2013/03/25----------<<<<<
                                        // ---------ADD 2013/03/25---------->>>>>
                                        if (this.tEdit_SearchFrameNo.Visible && String.IsNullOrEmpty(this.tEdit_SearchFrameNo.Text.Trim()) &&
                                        // ---------ADD 2013/03/25----------<<<<<
                                            this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true)
                                        {
                                            flag = false;
                                            if (this.tEdit_FullModel.Visible && this.uCheckFullModel.Checked && this.uCheckFullModel.Enabled == true) e.NextCtrl = this.tEdit_FullModel;
                                            else e.NextCtrl = GetBeforeControl("tEdit_FullModel");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                    }
                    break;
                // ---------------ADD 2010/08/05------------>>>>>
                case "tComboEditor_SearchFrameNoFuzzy":
                    {
                        // 退避
                        // ---------DEL 2013/03/25---------->>>>>
                        //_srSearchFrameNo = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_SearchFrameNoFuzzy.Value, tNedit_SearchFrameNo.Text);
                        // ---------DEL 2013/03/25----------<<<<<
                        // ---------ADD 2013/03/25---------->>>>>
                        _srSearchFrameNo = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_SearchFrameNoFuzzy.Value, tEdit_SearchFrameNo.Text);
                        // ---------ADD 2013/03/25----------<<<<<

                        # region [フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    //if (this.uCheckCarMngCode_base.Checked)   //#7861 2011/11/23 DEL
                                    if (this.uCheckSearchFrameNo_base.Checked)  //#7861 2011/11/23 ADD
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        //if (this.uCheckCarMngCode_base.Checked)   //#7861 2011/11/23 DEL
                                        if (this.uCheckSearchFrameNo_base.Checked)  //#7861 2011/11/23 ADD
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                        # endregion
                    }
                    break;
                // ---------------ADD 2010/08/05------------<<<<<
                // ---------------ADD 2009/12/28------------<<<<<
                // 指示書No
                case "tEdit_PartySalesSlipNum":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckPartySalesSlipNum_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    {
                                        flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                        if (this.uCheckPartySalesSlipNum_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckPartySalesSlipNum_base.Checked)
                                    {
                                        if (this.tEdit_PartySalesSlipNum.Visible && String.IsNullOrEmpty(this.tEdit_PartySalesSlipNum.Text.Trim()))
                                        {
                                            flag = false;
                                            // ---------DEL 2013/03/25---------->>>>>
                                            //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo_base.Checked) e.NextCtrl = this.tNedit_SearchFrameNo;
                                            //else e.NextCtrl = GetBeforeCommonControl("tNedit_SearchFrameNo");
                                            // ---------DEL 2013/03/25----------<<<<<
                                            // ---------ADD 2013/03/25---------->>>>>
                                            if (this.tEdit_SearchFrameNo.Visible && this.uCheckSearchFrameNo_base.Checked) e.NextCtrl = this.tEdit_SearchFrameNo;
                                            else e.NextCtrl = GetBeforeCommonControl("tEdit_SearchFrameNo");
                                            // ---------ADD 2013/03/25----------<<<<<
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_PartySalesSlipNum.Visible && String.IsNullOrEmpty(this.tEdit_PartySalesSlipNum.Text.Trim()) &&
                                            this.uCheckPartySalesSlipNum.Checked && this.uCheckPartySalesSlipNum.Enabled == true)
                                        {
                                            flag = false;
                                            // ---------DEL 2013/03/25---------->>>>>
                                            //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true) e.NextCtrl = this.tNedit_SearchFrameNo;
                                            //else e.NextCtrl = GetBeforeControl("tNedit_SearchFrameNo");
                                            // ---------DEL 2013/03/25----------<<<<<
                                            // ---------ADD 2013/03/25---------->>>>>
                                            if (this.tEdit_SearchFrameNo.Visible && this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true) e.NextCtrl = this.tEdit_SearchFrameNo;
                                            else e.NextCtrl = GetBeforeControl("tEdit_SearchFrameNo");
                                            // ---------ADD 2013/03/25----------<<<<<
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // UOE送信
                case "tComboEditor_DataSendCode":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckDataSendCode_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    {
                                        flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                        if (this.uCheckDataSendCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckDataSendCode_base.Checked)
                                    {
                                        if (this.tComboEditor_DataSendCode.Visible)
                                        {
                                            flag = false;
                                            if (this.tEdit_TrimName.Visible && this.uCheckTrimName_base.Checked) e.NextCtrl = this.tEdit_TrimName;
                                            else e.NextCtrl = GetBeforeCommonControl("tEdit_TrimName");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tComboEditor_DataSendCode.Visible && this.uCheckDataSendCode.Checked && this.uCheckDataSendCode.Enabled == true)
                                        {
                                            flag = false;
                                            if (this.tEdit_TrimName.Visible && this.uCheckTrimName.Checked && this.uCheckTrimName.Enabled == true) e.NextCtrl = this.tEdit_TrimName;
                                            else e.NextCtrl = GetBeforeControl("tEdit_TrimName");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // BLグループガイド
                case "uButton_BlGroupCode":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckBLGroupCode_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckBLGroupCode_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_BlGroupCode);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckBLGroupCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // BLコードガイド
                case "uButton_BlGoodsCode":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckBLGoodsCode_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckBLGoodsCode_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_BlGoodsCode);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckBLGoodsCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // メーカーガイド
                case "uButton_MakerCd":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckGoodsMakerCd_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckGoodsMakerCd_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_MakerCd);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckGoodsMakerCd_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 販売区分ガイド
                case "uButton_SalesCode":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckSalesCode_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckSalesCode_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_SalesCode);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckSalesCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 自社分類ガイド
                case "uButton_EnterpriseGanreCode":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckEnterpriseGanreCode_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckEnterpriseGanreCode_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_EnterpriseGanreCode);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckEnterpriseGanreCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 在庫取寄区分
                case "tComboEditor_SalesOrderDivCd":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckSalesOrderDivCd_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckSalesOrderDivCd_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 倉庫ガイド
                case "uButton_WarehouseCd":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckWarehouseCode_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckWarehouseCode_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_WarehouseCd);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckWarehouseCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 仕入伝票番号
                case "tEdit_SupplierSlipNo":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckSupplierSlipNo_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    {
                                        flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                        if (this.uCheckSupplierSlipNo_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckSupplierSlipNo_base.Checked)
                                    {
                                        if (this.tEdit_SupplierSlipNo.Visible && String.IsNullOrEmpty(this.tEdit_SupplierSlipNo.Text.Trim()))
                                        {
                                            flag = false;
                                            if (this.tEdit_WarehouseShelfNo.Visible && this.uCheckWarehouseShelfNo_base.Checked) e.NextCtrl = this.tEdit_WarehouseShelfNo;
                                            else e.NextCtrl = GetBeforeCommonControl("tEdit_WarehouseShelfNo");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tEdit_SupplierSlipNo.Visible && String.IsNullOrEmpty(this.tEdit_SupplierSlipNo.Text.Trim()) &&
                                            this.uCheckSupplierSlipNo.Checked && this.uCheckSupplierSlipNo.Enabled == true)
                                        {
                                            flag = false;
                                            if (this.tEdit_WarehouseShelfNo.Visible && this.uCheckWarehouseShelfNo.Checked && this.uCheckWarehouseShelfNo.Enabled == true) e.NextCtrl = this.tEdit_WarehouseShelfNo;
                                            else e.NextCtrl = GetBeforeControl("tEdit_WarehouseShelfNo");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 仕入先ガイド
                case "uButton_SupplierCd":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckSupplierCd_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckSupplierCd_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_SupplierCd);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckSupplierCd_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 発注先ガイド
                case "uButton_UOESupplierCd":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckUOESupplierCd_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckUOESupplierCd_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_UOESupplierCd);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckUOESupplierCd_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
                // 納入先ガイド
                case "uButton_AddresseeCode":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckAddresseeCode_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckAddresseeCode_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_AddresseeCode);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckAddresseeCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                // 商品大分類ガイド
                case "uButton_GoodsLGroup":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckGoodsLGroup_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckGoodsLGroup_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_GoodsLGroup);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckGoodsLGroup_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 商品中分類ガイド
                case "uButton_GoodsMGroup":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckGoodsMGroup_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                                case Keys.Down:
                                    if (this.uCheckGoodsMGroup_base.Checked)
                                    {
                                        if (this.uExGroupBox_ExtraCondition.Visible)
                                        {
                                            e.NextCtrl = this.GetNextControl("tDateEdit_SalesDateEd");
                                        }
                                        else
                                        {
                                            // 検索実行・フォーカス移動
                                            e.NextCtrl = this.SearchOnChangeFocus(uButton_GoodsMGroup);
                                        }
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        if (this.uCheckGoodsMGroup_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 明細区分
                case "tComboEditor_SalesSlipCdDtl":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckSalesSlipCdDtl_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckSalesSlipCdDtl_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // 商品属性
                case "tComboEditor_GoodsKindCode":
                    // ---------------ADD 2009/12/28------------>>>>>
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckGoodsKindCode_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:  // ADD 2011/12/15 gezh redmine#26667
                                case Keys.Tab:
                                    {
                                        // ADD 2011/12/15 gezh redmine#26667 ------->>>>>
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        // ADD 2011/12/15 gezh redmine#26667 -------<<<<<
                                        if (this.uCheckGoodsKindCode_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                // ---------------ADD 2009/12/28------------<<<<<
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
                // 削除指定区分
                case "tComboEditor_DeleteFlag":
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    // ---------------UPD 2009/12/28------------>>>>>
                                    //e.NextCtrl = this.GetNextControl( e.PrevCtrl.Name );
                                    if (this.uCheckDeleteFlag_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    // ---------------UPD 2009/12/28------------<<<<<
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                    {
                                        flag = true;  // ADD 2011/12/15 gezh redmine#26667
                                        if (this.uCheckDeleteFlag_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 ------------------------->>>>>
                                case Keys.Return:
                                    if (this.uCheckDeleteFlag_base.Checked)
                                    {
                                        if (this.tComboEditor_DeleteFlag.Visible)
                                        {
                                            flag = false;
                                            if (this.tEdit_DtlNote.Visible && this.uCheckDtlNote_base.Checked) e.NextCtrl = this.tEdit_DtlNote;
                                            else e.NextCtrl = GetBeforeCommonControl("tEdit_DtlNote");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.tComboEditor_DeleteFlag.Visible && this.uCheckDeleteFlag.Checked && this.uCheckDeleteFlag.Enabled == true)
                                        {
                                            flag = false;
                                            if (this.tEdit_DtlNote.Visible && this.uCheckDtlNote.Checked && this.uCheckDtlNote.Enabled == true) e.NextCtrl = this.tEdit_DtlNote;
                                            else e.NextCtrl = GetBeforeControl("tEdit_DtlNote");
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                // ADD 2011/12/15 gezh redmine#26667 -------------------------<<<<<
                            }
                        }
                    }
                    break;
                # endregion
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/11/11 ADD

                #region 伝票一覧グリッド
                //---------------------------------------------------------------
                // 伝票一覧
                //---------------------------------------------------------------
                case "uGrid_Slip":
                    {
                        switch (e.Key)
                        {
                            case Keys.Return:
                                {
                                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/02 DEL
                                    //// 明細部にフォーカス有り(GridActive)
                                    //if ( this.uGrid_Slip.ActiveCell != null )
                                    //{
                                    //    // 明細部キーダウン処理（現在行の取得）
                                    //    if ( this.uGrid_Slip.ActiveRow != null )
                                    //    //this.GridKeyDown_Return(prevCtrl.Name))
                                    //    {
                                    //        e.NextCtrl = null;
                                    //        if ( this._detailDataSet.SalesList.Select( "Selection = true" ).Length > 0 )
                                    //        {
                                    //            // 明細行を選択
                                    //            selectAllDetailFromSelectedSlip();
                                    //        }

                                    //        this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_SlipDetail"];
                                    //    }
                                    //    else
                                    //    {
                                    //        e.NextCtrl = this.uCheckEditor_StatusBar_AutoFillToGridColumn;
                                    //    }
                                    //}
                                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/02 DEL
                                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 DEL
                                    //// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/02 ADD
                                    //if ( this.uGrid_Slip.ActiveCell != null )
                                    //{
                                    //    this.uGrid_Slip.ActiveCell.Row.Activate();
                                    //}

                                    //// 明細部キーダウン処理（現在行の取得）
                                    //if ( this.uGrid_Slip.ActiveRow != null )
                                    //{
                                    //    e.NextCtrl = null;
                                    //    if ( this._detailDataSet.SalesList.Select( "Selection = true" ).Length > 0 )
                                    //    {
                                    //        // 明細行を選択
                                    //        SelectAllDetailFromSelectedSlip();
                                    //    }

                                    //    this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_SlipDetail"];
                                    //    uGrid_Detail.Focus();

                                    //    // Enter押下した現在行の伝票の明細へ飛ぶ
                                    //    foreach ( Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_Detail.Rows )
                                    //    {
                                    //        if ( (gridRow.Cells[_detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Value as string).Trim() == (uGrid_Slip.ActiveRow.Cells[_detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Value as string).Trim() &&
                                    //            gridRow.Cells[_detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName].Value == uGrid_Slip.ActiveRow.Cells[_detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName].Value )
                                    //        {
                                    //            if ( uGrid_Detail.ActiveRow != null )
                                    //            {
                                    //                uGrid_Detail.ActiveRow.Selected = false;
                                    //            }

                                    //            uGrid_Detail.ActiveRow = gridRow;
                                    //            uGrid_Detail.ActiveRow.Selected = true;
                                    //            break;
                                    //        }
                                    //    }    
                                    //}
                                    //else
                                    //{
                                    //    e.NextCtrl = uCheckEditor_StatusBar_AutoFillToGridColumn;
                                    //}
                                    //// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/02 ADD
                                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 DEL
                                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 ADD
                                    if (this.uGrid_Slip.ActiveCell != null)
                                    {
                                        this.uGrid_Slip.ActiveCell.Row.Activate();
                                    }

                                    // 明細部キーダウン処理（現在行の取得）
                                    if (this.uGrid_Slip.ActiveRow != null)
                                    {
                                        e.NextCtrl = null;

                                        // Enter押下した現在行の伝票の明細へ飛ぶ
                                        Infragistics.Win.UltraWinGrid.UltraGridRow focusRow = null;
                                        foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_Detail.Rows)
                                        {
                                            try
                                            {
                                                string detailSlipNo = (string)gridRow.Cells[_detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName].Value;
                                                int detailFormal = (int)gridRow.Cells[_detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName].Value;
                                                int detailDataDiv = (int)gridRow.Cells[_detailDataSet.SalesDetail.DataDivColumn.ColumnName].Value;
                                                string slipSlipNo = (string)uGrid_Slip.ActiveRow.Cells[_detailDataSet.SalesList.SalesSlipNumColumn.ColumnName].Value;
                                                int slipFormal = (int)uGrid_Slip.ActiveRow.Cells[_detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName].Value;
                                                int slipDataDiv = (int)uGrid_Slip.ActiveRow.Cells[_detailDataSet.SalesList.DataDivColumn.ColumnName].Value;

                                                if (detailSlipNo == slipSlipNo && detailFormal == slipFormal && detailDataDiv == slipDataDiv)
                                                {
                                                    focusRow = gridRow;
                                                    break;
                                                }
                                            }
                                            catch
                                            {
                                            }
                                        }

                                        // 移動先が決定した場合のみ
                                        if (focusRow != null)
                                        {
                                            this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_SlipDetail"];
                                            uGrid_Detail.Focus();

                                            if (uGrid_Detail.ActiveRow != null)
                                            {
                                                uGrid_Detail.ActiveRow.Selected = false;
                                            }

                                            uGrid_Detail.ActiveRow = focusRow;
                                            uGrid_Detail.ActiveRow.Selected = true;
                                        }
                                    }
                                    else
                                    {
                                        //e.NextCtrl = uCheckEditor_StatusBar_AutoFillToGridColumn;
                                        e.NextCtrl = null;
                                    }
                                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 ADD
                                    break;
                                }
                        }
                        break;
                    }
                #endregion

                #region 明細一覧
                //---------------------------------------------------------------
                // 明細一覧
                //---------------------------------------------------------------
                case "uGrid_Detail":
                    {
                        switch (e.Key)
                        {
                            case Keys.Return:
                                {
                                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/02 DEL
                                    //// 明細部にフォーカス有り(GridActive)
                                    //if (this.uGrid_Detail.ActiveCell != null)
                                    //{
                                    //    // 明細部キーダウン処理（現在行の取得）
                                    //    if (this.uGrid_Detail.ActiveRow != null)
                                    //    {
                                    //        e.NextCtrl = null;
                                    //        if (this._detailDataSet.SalesDetail.Select("SelectionCheck = true").Length > 0)
                                    //        {
                                    //            this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_RedSlip"];
                                    //        }
                                    //    }
                                    //    else
                                    //    {
                                    //        e.NextCtrl = this.uCheckEditor_StatusBar_AutoFillToGridColumn;
                                    //    }
                                    //}
                                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/02 DEL
                                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/02 ADD
                                    // ---ADD 2011/01/31--------------->>>>
                                    // フォーカス設定用
                                    int rowIndex = 0;
                                    int colIndex = 0;
                                    bool isActiveCell = false;
                                    // ---ADD 2011/01/31---------------<<<<
                                    if (this.uGrid_Detail.ActiveCell != null)
                                    {
                                        // ---ADD 2011/01/31--------------->>>>
                                        rowIndex = this.uGrid_Detail.ActiveCell.Row.Index;
                                        colIndex = this.uGrid_Detail.ActiveCell.Column.Index;
                                        isActiveCell = true;
                                        // ---ADD 2011/01/31---------------<<<<
                                        this.uGrid_Detail.ActiveCell.Row.Activate();
                                    }

                                    // 明細部キーダウン処理（現在行の取得）
                                    if (this.uGrid_Detail.ActiveRow != null)
                                    {
                                        e.NextCtrl = null;
                                        if (this._detailDataSet.SalesDetail.Select("SelectionCheck = true").Length > 0)
                                        {
                                            //-----UPD 2011/01/21 ----->>>>>
                                            //this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_RedSlip"];
                                            //if (tEdit_SectionCodeAllowZero.Text.Trim() == "00" || string.IsNullOrEmpty(tNedit_CustomerCode.Text.Trim()))// DEL 2011/02/17
                                            if (this._custPrtPpr.SectionCode == null || _custPrtPpr.CustomerCode == 0) // ADD 2011/02/17
                                            {
                                                //TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.tEdit_SectionCodeAllowZero.Name,　　// DEL 2011/01/27
                                                TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.tEdit_SectionCodeAllowZero.Name,　　// ADD 2011/01/27
                                                "拠点コード、または、得意先コードが入力されていないため、" + "\r\n" + "赤伝発行は出来ません。", -1, MessageBoxButtons.OK);
                                                // ---UPD 2011/01/31--------------->>>>
                                                //this.tEdit_SectionCodeAllowZero.Focus();
                                                // フォーカス設定
                                                if (isActiveCell == true)
                                                {
                                                    isActiveCell = false;
                                                    this.uGrid_Detail.Rows[rowIndex].Cells[colIndex].Activate();
                                                }
                                                else
                                                {
                                                    //なし。
                                                }
                                                // ---UPD 2011/01/31---------------<<<<
                                                break;
                                            }
                                            else
                                            {
                                                this.uTabControl.SelectedTab = this.uTabControl.Tabs["uTab_RedSlip"];
                                            }
                                            //-----UPD 2011/01/21 -----<<<<<
                                        }
                                    }
                                    else
                                    {
                                        e.NextCtrl = uCheckEditor_StatusBar_AutoFillToGridColumn;
                                    }
                                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/02 ADD
                                    break;
                                }
                        }
                        break;
                    }

                #endregion

                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/08 ADD
                # region [赤伝入力]
                // 赤伝伝票区分
                case "tComboEditor_rs_SalesSlipCd":
                    {
                        // 伝票区分に従い入力ＵＩ制御
                        this.SettingRedSlipFormalBySalesSlipCd();
                    }
                    break;
                // 赤伝入力担当者
                case "tEdit_rs_InputEmployeeCd":
                    {
                        // 入力チェックフラグ true→次項目へフォーカス遷移ＯＫ
                        bool inputCheck = true;

                        // 名称取得
                        # region [名称取得]
                        // 入力値を取得
                        string inputValue = this.tEdit_rs_InputEmployeeCd.Text.Trim();

                        // 空でなければ処理開始
                        if (!string.IsNullOrEmpty(inputValue))
                        {
                            // 入力値が変わっていた場合のみコード変換
                            if (inputValue != _prevInputValue.RedInputEmployeeCd)
                            {
                                // コードから名称へ変換
                                Employee employeeInfo;
                                int status = this._employeeAcs.Read(out employeeInfo, this._enterpriseCode, inputValue);
                                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                                {
                                    // 名称セット
                                    _prevInputValue.RedInputEmployeeCd = inputValue;
                                    this.uLabel_rs_InputEmployeeName.Text = employeeInfo.Name;
                                }
                                else
                                {
                                    // エラー時
                                    TMsgDisp.Show(
                                        this,
                                        emErrorLevel.ERR_LEVEL_INFO,
                                        this.Name,
                                        "従業員コード [" + inputValue + "] に該当するデータが存在しません。",
                                        -1,
                                        MessageBoxButtons.OK);

                                    // 名称を戻す
                                    this.tEdit_rs_InputEmployeeCd.Text = _prevInputValue.RedInputEmployeeCd;
                                    inputCheck = false;
                                }
                            }
                        }
                        else
                        {
                            // クリアする
                            _prevInputValue.RedInputEmployeeCd = string.Empty;
                            this.uLabel_rs_InputEmployeeName.Text = string.Empty;
                        }
                        # endregion

                        // 次フォーカス
                        # region [次フォーカス]
                        if (inputCheck)
                        {
                            if (!e.ShiftKey)
                            {
                                switch (e.Key)
                                {
                                    case Keys.Return:
                                    case Keys.Tab:
                                        {
                                            if (tEdit_rs_InputEmployeeCd.Text != string.Empty)
                                            {
                                                e.NextCtrl = this.tDateEdit_rs_SalesDate;
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.uButton_rs_InputEmployee;
                                            }
                                            break;
                                        }
                                }
                            }
                        }
                        else
                        {
                            e.NextCtrl = e.PrevCtrl;
                            tEdit_rs_InputEmployeeCd.SelectAll();
                        }
                        # endregion
                    }
                    break;
                // 取寄手数料率
                case "tNedit_rs_FeePercent01":
                    {
                        if (_feePercent01 != tNedit_rs_FeePercent01.GetValue())
                        {
                            // 金額算出
                            tNedit_rs_FeeAmount01.SetInt((int)(((decimal)_redSlipTotalPrice - (decimal)_redSlipStockPrice) * (decimal)tNedit_rs_FeePercent01.GetValue() / (decimal)100));
                            _feePercent01 = tNedit_rs_FeePercent01.GetValue();

                            tNedit_rs_FeePercentTotal.Clear();
                            _feePercentTotal = 0;
                            tNedit_rs_FeeAmountTotal.SetInt(tNedit_rs_FeeAmount01.GetInt() + tNedit_rs_FeeAmount02.GetInt());
                            _feeAmountTotal = tNedit_rs_FeeAmountTotal.GetInt();
                            tNedit_rs_ReturnAmountTotal.SetInt((int)((decimal)_redSlipTotalPrice - (decimal)tNedit_rs_FeeAmountTotal.GetInt()));
                        }
                        // 次フォーカス
                        # region [次フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        if (tNedit_rs_FeePercent02.Enabled)
                                        {
                                            // 在庫手数料率
                                            e.NextCtrl = this.tNedit_rs_FeePercent02;
                                        }
                                        else
                                        {
                                            if (tNedit_rs_FeePercent01.GetValue() == 0)
                                            {
                                                // 合計手数料率
                                                e.NextCtrl = this.tNedit_rs_FeePercentTotal;
                                            }
                                            else
                                            {
                                                // 合計手数料額
                                                e.NextCtrl = this.tNedit_rs_FeeAmountTotal;
                                            }
                                        }
                                        break;
                                    }
                            }
                        }
                        # endregion
                    }
                    break;
                // 在庫手数料率
                case "tNedit_rs_FeePercent02":
                    {
                        if (_feePercent02 != tNedit_rs_FeePercent02.GetValue())
                        {
                            // 金額算出
                            tNedit_rs_FeeAmount02.SetInt((int)((decimal)_redSlipStockPrice * (decimal)tNedit_rs_FeePercent02.GetValue() / (decimal)100));
                            _feePercent02 = tNedit_rs_FeePercent02.GetValue();

                            tNedit_rs_FeePercentTotal.Clear();
                            _feePercentTotal = 0;
                            tNedit_rs_FeeAmountTotal.SetInt(tNedit_rs_FeeAmount01.GetInt() + tNedit_rs_FeeAmount02.GetInt());
                            _feeAmountTotal = tNedit_rs_FeeAmountTotal.GetInt();
                            tNedit_rs_ReturnAmountTotal.SetInt((int)((decimal)_redSlipTotalPrice - (decimal)tNedit_rs_FeeAmountTotal.GetInt()));
                        }
                        // 次フォーカス
                        # region [次フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        if (tNedit_rs_FeePercent02.GetValue() == 0 && tNedit_rs_FeePercent01.GetValue() == 0)
                                        {
                                            // 合計手数料率
                                            e.NextCtrl = this.tNedit_rs_FeePercentTotal;
                                        }
                                        else
                                        {
                                            // 合計手数料額
                                            e.NextCtrl = this.tNedit_rs_FeeAmountTotal;
                                        }
                                        break;
                                    }
                            }
                        }
                        # endregion
                    }
                    break;
                // 合計手数料率
                case "tNedit_rs_FeePercentTotal":
                    {
                        if (_feePercentTotal != tNedit_rs_FeePercentTotal.GetValue())
                        {
                            // 金額算出
                            tNedit_rs_FeeAmountTotal.SetInt((int)((decimal)_redSlipTotalPrice * (decimal)tNedit_rs_FeePercentTotal.GetValue() / (decimal)100));
                            tNedit_rs_ReturnAmountTotal.SetInt((int)((decimal)_redSlipTotalPrice - (decimal)tNedit_rs_FeeAmountTotal.GetInt()));
                            _feePercentTotal = tNedit_rs_FeePercentTotal.GetValue();
                            _feeAmountTotal = tNedit_rs_FeeAmountTotal.GetInt();

                            tNedit_rs_FeePercent01.Clear();
                            tNedit_rs_FeePercent02.Clear();
                            tNedit_rs_FeeAmount01.Clear();
                            tNedit_rs_FeeAmount02.Clear();
                            _feePercent01 = 0;
                            _feePercent02 = 0;
                        }
                    }
                    break;
                // 合計手数料額
                case "tNedit_rs_FeeAmountTotal":
                    {
                        if (_feeAmountTotal != tNedit_rs_FeeAmountTotal.GetInt())
                        {
                            // 金額算出
                            tNedit_rs_ReturnAmountTotal.SetInt((int)((decimal)_redSlipTotalPrice - (decimal)tNedit_rs_FeeAmountTotal.GetInt()));
                            _feeAmountTotal = tNedit_rs_FeeAmountTotal.GetInt();

                            tNedit_rs_FeePercent01.Clear();
                            tNedit_rs_FeePercent02.Clear();
                            tNedit_rs_FeePercentTotal.Clear();
                            tNedit_rs_FeeAmount01.Clear();
                            tNedit_rs_FeeAmount02.Clear();
                            _feePercent01 = 0;
                            _feePercent02 = 0;
                            _feePercentTotal = 0;
                        }
                    }
                    break;
                // ADD 2012/03/29 gezh Redmine#29149 --------->>>>>
                // 販売区分
                case "tNedit_SalesCodeDiv":
                    {
                        int inputValue = this.tNedit_SalesCodeDiv.GetInt();

                        string guidName = string.Empty;
                        // 販売区分名称の取得
                        bool status = ReadSalesCodeName(inputValue, out guidName);
                        if (status == true)
                        {
                            // 名称表示
                            if (inputValue != 0)
                            {
                                this.tNedit_SalesCodeDiv.Text = inputValue.ToString("D4");
                            }
                            else
                            {
                                // 空は表示
                                this.tNedit_SalesCodeDiv.Text = string.Empty;
                            }
                            this.uLabel_SalesCodeDiv.Text = guidName;

                        }
                        else
                        {
                            // エラー時
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "販売区分 [" + inputValue + "] に該当するデータが存在しません。",
                                -1,
                                MessageBoxButtons.OK);
                            isRsError = false; // ADD BY LIUSY 2013/09/18 #40275
                            // コードに戻す
                            this.tNedit_SalesCodeDiv.Text = string.Empty;
                            this.uLabel_SalesCodeDiv.Text = string.Empty;
                        }

                        #region NextCtrl制御
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Right:
                                    e.NextCtrl = this.uButton_rs_SalesCodeDiv;
                                    break;
                                case Keys.Tab:
                                case Keys.Return:
                                    {
                                        if (string.IsNullOrEmpty(this.tNedit_SalesCodeDiv.Text))
                                        {
                                            if (status == false)
                                            {
                                                e.NextCtrl = this.tNedit_SalesCodeDiv;
                                            }
                                            else
                                            {
                                                e.NextCtrl = this.uButton_rs_SalesCodeDiv;
                                            }
                                        }
                                        else
                                        {
                                            if (tEdit_rs_PartySalesSlipNo.Visible)
                                            {
                                                e.NextCtrl = this.tEdit_rs_PartySalesSlipNo;
                                            }
                                            else if (tNedit_SlipNoteCode.Visible)
                                            {
                                                e.NextCtrl = this.tNedit_SlipNoteCode;
                                            }
                                            else if (tNedit_SlipNote2Code.Visible)
                                            {
                                                e.NextCtrl = this.tNedit_SlipNote2Code;
                                            }
                                            else if (tNedit_SlipNote3Code.Visible)
                                            {
                                                e.NextCtrl = this.tNedit_SlipNote3Code;
                                            }
                                            else if (tEdit_rs_ReturnReason.Visible)
                                            {
                                                e.NextCtrl = this.tNedit_RetGoodsReason;
                                            }
                                            else if (tEdit_rs_SlipNoteCar.Visible)
                                            {
                                                e.NextCtrl = this.tEdit_rs_SlipNoteCar;
                                            }
                                            else
                                            {
                                                e.NextCtrl = e.PrevCtrl;
                                                StartIssueRedSlip();
                                                if (this._detailDataSet.RedSlipDetail.Count > 0 && string.IsNullOrEmpty(this.tEdit_rs_InputEmployeeCd.Text.Trim()))
                                                {
                                                    e.NextCtrl = this.tEdit_rs_InputEmployeeCd;
                                                }
                                                else if (this._detailDataSet.RedSlipDetail.Count > 0 && tDateEdit_rs_SalesDate.GetDateTime() == DateTime.MinValue)
                                                {
                                                    e.NextCtrl = this.tDateEdit_rs_SalesDate;
                                                }
                                            }
                                        }
                                    }
                                    break;
                                default:
                                    break;
                            }
                        }
                        #endregion
                        break;
                    }
                case "uButton_rs_SalesCodeDiv":
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        if (!tEdit_rs_PartySalesSlipNo.Visible && !tEdit_rs_SlipNote.Visible && !tEdit_rs_SlipNote2.Visible && !tEdit_rs_SlipNote3.Visible && !tEdit_rs_ReturnReason.Visible && !tEdit_rs_SlipNoteCar.Visible)
                                        {
                                            e.NextCtrl = e.PrevCtrl;
                                            StartIssueRedSlip();
                                            if (this._detailDataSet.RedSlipDetail.Count > 0 && string.IsNullOrEmpty(this.tEdit_rs_InputEmployeeCd.Text.Trim()))
                                            {
                                                e.NextCtrl = this.tEdit_rs_InputEmployeeCd;
                                            }
                                            else if (this._detailDataSet.RedSlipDetail.Count > 0 && tDateEdit_rs_SalesDate.GetDateTime() == DateTime.MinValue)
                                            {
                                                e.NextCtrl = this.tDateEdit_rs_SalesDate;
                                            }
                                        }
                                        break;
                                    }
                            }
                        }
                    }
                    break;
                // ADD 2012/03/29 gezh Redmine#29149 ---------<<<<<
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/23 ADD
                // 指示書(仮伝)番号
                case "tEdit_rs_PartySalesSlipNo":
                    {
                    }
                    break;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/23 ADD
                // ----------ADD 2010/01/29---------->>>>>
                #region 赤伝備考１コード
                //---------------------------------------------------------------
                // 赤伝備考１コード
                //---------------------------------------------------------------
                case "tNedit_SlipNoteCode":
                    {
                        int inputValue = this.tNedit_SlipNoteCode.GetInt();
                        if (this._prevInputValue.SlipNoteCd1 != inputValue)
                        {
                            string guidName = string.Empty;
                            if (inputValue == 0)
                            {
                                this._prevInputValue.SlipNoteCd1 = inputValue;
                                this._prevInputValue.SlipNoteName1 = string.Empty;
                                this.tEdit_rs_SlipNote.Clear();
                                this.tNedit_SlipNoteCode.Clear();
                            }
                            else
                            {
                                int status = ReadSlipNoteName(CT_DIVCODE_NOTEGUIDEDIVCD_1, inputValue, out guidName);

                                if (status == (int)ConstantManagement.MethodResult.ctFNC_NORMAL)
                                {
                                    this._prevInputValue.SlipNoteCd1 = inputValue;
                                    this.tEdit_rs_SlipNote.Text = guidName;
                                    this._prevInputValue.SlipNoteName1 = guidName;
                                }
                                else
                                {
                                    // エラー時
                                    TMsgDisp.Show(
                                    this,
                                    emErrorLevel.ERR_LEVEL_INFO,
                                    this.Name,
                                    "伝票備考コードが存在しません。",
                                    -1,
                                    MessageBoxButtons.OK);
                                    isRsError = false; // ADD BY LIUSY 2013/09/18 #40275
                                    // コードを戻す
                                    this.tNedit_SlipNoteCode.SetInt(this._prevInputValue.SlipNoteCd1);
                                }
                            }
                        }

                        #region NextCtrl制御
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Right:
                                    e.NextCtrl = this.tEdit_rs_SlipNote;
                                    break;
                                default:
                                    break;
                            }
                        }
                        #endregion
                        break;
                    }
                #endregion

                #region 赤伝備考２コード
                //---------------------------------------------------------------
                // 赤伝備考２コード
                //---------------------------------------------------------------
                case "tNedit_SlipNote2Code":
                    {
                        int inputValue = this.tNedit_SlipNote2Code.GetInt();
                        if (this._prevInputValue.SlipNoteCd2 != inputValue)
                        {
                            string guidName = string.Empty;
                            if (inputValue == 0)
                            {
                                this._prevInputValue.SlipNoteCd2 = inputValue;
                                this._prevInputValue.SlipNoteName2 = string.Empty;
                                this.tEdit_rs_SlipNote2.Clear();
                                this.tNedit_SlipNote2Code.Clear();
                            }
                            else
                            {
                                //int status = ReadSlipNoteName(CT_DIVCODE_NOTEGUIDEDIVCD_2, inputValue, out guidName);// DEL 2010/06/18
                                int status = ReadSlipNoteName(CT_DIVCODE_NOTEGUIDEDIVCD_1, inputValue, out guidName);// ADD 2010/06/18

                                if (status == (int)ConstantManagement.MethodResult.ctFNC_NORMAL)
                                {
                                    this._prevInputValue.SlipNoteCd2 = inputValue;
                                    this.tEdit_rs_SlipNote2.Text = guidName;
                                    this._prevInputValue.SlipNoteName2 = guidName;
                                }
                                else
                                {
                                    // エラー時
                                    TMsgDisp.Show(
                                    this,
                                    emErrorLevel.ERR_LEVEL_INFO,
                                    this.Name,
                                    "伝票備考コード２が存在しません。",
                                    -1,
                                    MessageBoxButtons.OK);
                                    isRsError = false; // ADD BY LIUSY 2013/09/18 #40275
                                    // コードを戻す
                                    this.tNedit_SlipNote2Code.SetInt(this._prevInputValue.SlipNoteCd2);
                                }
                            }
                        }
                        break;
                    }
                #endregion

                #region 赤伝備考３コード
                //---------------------------------------------------------------
                // 赤伝備考３コード
                //---------------------------------------------------------------
                case "tNedit_SlipNote3Code":
                    {
                        int inputValue = this.tNedit_SlipNote3Code.GetInt();
                        if (this._prevInputValue.SlipNoteCd3 != inputValue)
                        {
                            string guidName = string.Empty;
                            if (inputValue == 0)
                            {
                                this._prevInputValue.SlipNoteCd3 = inputValue;
                                this._prevInputValue.SlipNoteName3 = string.Empty;
                                this.tEdit_rs_SlipNote3.Clear();
                                this.tNedit_SlipNote3Code.Clear();
                            }
                            else
                            {
                                //int status = ReadSlipNoteName(CT_DIVCODE_NOTEGUIDEDIVCD_3, inputValue, out guidName);// DEL 2010/06/18
                                int status = ReadSlipNoteName(CT_DIVCODE_NOTEGUIDEDIVCD_1, inputValue, out guidName);// ADD 2010/06/18
                                if (status == (int)ConstantManagement.MethodResult.ctFNC_NORMAL)
                                {
                                    this.tEdit_rs_SlipNote3.Text = guidName;
                                    this._prevInputValue.SlipNoteCd3 = inputValue;
                                    this._prevInputValue.SlipNoteName3 = guidName;
                                }
                                else
                                {
                                    // エラー時
                                    TMsgDisp.Show(
                                    this,
                                    emErrorLevel.ERR_LEVEL_INFO,
                                    this.Name,
                                    "伝票備考コード３が存在しません。",
                                    -1,
                                    MessageBoxButtons.OK);
                                    isRsError = false; // ADD BY LIUSY 2013/09/18 #40275
                                    // コードを戻す
                                    this.tNedit_SlipNote3Code.SetInt(this._prevInputValue.SlipNoteCd3);
                                }
                            }
                        }

                        break;
                    }
                #endregion

                #region 返品理由コード
                //---------------------------------------------------------------
                // 返品理由コード
                //---------------------------------------------------------------
                case "tNedit_RetGoodsReason":
                    {
                        int inputValue = this.tNedit_RetGoodsReason.GetInt();
                        if (this._prevInputValue.RetGoodsReasonCd != inputValue)
                        {
                            string guidName = string.Empty;
                            if (inputValue == 0)
                            {
                                this._prevInputValue.RetGoodsReasonCd = inputValue;
                                this._prevInputValue.RetGoodsReasonName = string.Empty;
                                this.tEdit_rs_ReturnReason.Clear();
                                this.tNedit_RetGoodsReason.Clear();
                                this._retGoodsReason = string.Empty;
                                this._retGoodsReasonDiv = inputValue;
                            }
                            else
                            {
                                int status = ReadRetGoodsReasonName(CT_DIVCODE_USERGUIDEDIVCD_RETGOODSREASON, inputValue, out guidName);

                                if (status == (int)ConstantManagement.MethodResult.ctFNC_NORMAL)
                                {
                                    this._prevInputValue.RetGoodsReasonCd = inputValue;
                                    this._prevInputValue.RetGoodsReasonName = guidName;
                                    this.tEdit_rs_ReturnReason.Text = guidName;
                                    this._retGoodsReason = guidName;
                                    this._retGoodsReasonDiv = inputValue;
                                }
                                else
                                {
                                    // エラー時
                                    TMsgDisp.Show(
                                    this,
                                    emErrorLevel.ERR_LEVEL_INFO,
                                    this.Name,
                                    "返品理由コードが存在しません。",
                                    -1,
                                    MessageBoxButtons.OK);
                                    isRsError = false; // ADD BY LIUSY 2013/09/18 #40275
                                    // コードを戻す
                                    this.tNedit_RetGoodsReason.SetInt(this._prevInputValue.RetGoodsReasonCd);
                                }
                            }
                        }

                        break;
                    }
                #endregion
                // ----------ADD 2010/01/29----------<<<<<
                // 赤伝備考１
                case "tEdit_rs_SlipNote":
                    {
                        // --- ADD 2011/08/31---------->>>>>
                        string slipNote = this.tEdit_rs_SlipNote.Text;

                        bool result = this.CheckSlipNote(1, slipNote);
                        isRsError = result; // ADD BY LIUSY 2013/09/18 #40275
                        if (!result)
                        {
                            this.tEdit_rs_SlipNote.Text = this._prevInputValue.SlipNoteName1;
                            e.NextCtrl = e.PrevCtrl;
                        }
                        else
                        {
                            this._prevInputValue.SlipNoteName1 = this.tEdit_rs_SlipNote.Text;
                        }
                        // --- ADD 2011/08/31----------<<<<<

                        // 次フォーカス
                        # region [次フォーカス]
                        // --- UPD 2011/08/31---------->>>>>
                        //if ( !e.ShiftKey )
                        if (!e.ShiftKey && result)
                        // --- UPD 2011/08/31----------<<<<<
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        if (tEdit_rs_SlipNote.Text != string.Empty)
                                        {
                                            if (tEdit_rs_SlipNote2.Visible)
                                            {
                                                //e.NextCtrl = this.tEdit_rs_SlipNote2;// DEL 2010/01/29
                                                e.NextCtrl = this.tNedit_SlipNote2Code;// ADD 2010/01/29
                                            }
                                            else if (tEdit_rs_SlipNote3.Visible)
                                            {
                                                //e.NextCtrl = this.tEdit_rs_SlipNote3;// DEL 2010/01/29
                                                e.NextCtrl = this.tNedit_SlipNote3Code;// ADD 2010/01/29
                                            }
                                            else if (tEdit_rs_ReturnReason.Visible)
                                            {
                                                //e.NextCtrl = this.tEdit_rs_ReturnReason;// DEL 2010/01/29
                                                e.NextCtrl = this.tNedit_RetGoodsReason;// ADD 2010/01/29
                                            }
                                            // --- ADD 2009/09/07 ---------->>>>>
                                            else if (tEdit_rs_SlipNoteCar.Visible)
                                            {
                                                e.NextCtrl = this.tEdit_rs_SlipNoteCar;
                                            }
                                            // --- ADD 2009/09/07 ----------<<<<<
                                            else
                                            {
                                                e.NextCtrl = e.PrevCtrl;
                                                // 2010/04/07 >>>
                                                //IssueRedSlip();
                                                StartIssueRedSlip();
                                                // 2010/04/07 <<<
                                                // ----------ADD 2010/12/20 --------------->>>>>
                                                if (this._detailDataSet.RedSlipDetail.Count > 0 && string.IsNullOrEmpty(this.tEdit_rs_InputEmployeeCd.Text.Trim()))
                                                {
                                                    e.NextCtrl = this.tEdit_rs_InputEmployeeCd;
                                                }
                                                else if (this._detailDataSet.RedSlipDetail.Count > 0 && tDateEdit_rs_SalesDate.GetDateTime() == DateTime.MinValue)
                                                {
                                                    e.NextCtrl = this.tDateEdit_rs_SalesDate;
                                                }
                                                // ----------ADD 2010/12/20 ---------------<<<<<
                                            }
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.uButton_rs_SlipNote;
                                        }
                                        break;
                                    }
                                // ------------ADD 2010/01/29----------->>>>>
                                case Keys.Left:
                                    {
                                        e.NextCtrl = this.tNedit_SlipNoteCode;
                                        break;
                                    }
                                // ------------ADD 2010/01/29-----------<<<<<
                            }
                        }
                        # endregion
                    }
                    break;
                // 赤伝備考２
                case "tEdit_rs_SlipNote2":
                    {
                        // --- ADD 2011/08/31---------->>>>>
                        string slipNote = this.tEdit_rs_SlipNote2.Text;

                        bool result = this.CheckSlipNote(2, slipNote);
                        isRsError = result; // ADD BY LIUSY 2013/09/18 #40275
                        if (!result)
                        {
                            this.tEdit_rs_SlipNote2.Text = this._prevInputValue.SlipNoteName2;
                            e.NextCtrl = e.PrevCtrl;
                        }
                        else
                        {
                            this._prevInputValue.SlipNoteName2 = this.tEdit_rs_SlipNote2.Text;
                        }
                        // --- ADD 2011/08/31----------<<<<<

                        // 次フォーカス
                        # region [次フォーカス]
                        // --- UPD 2011/08/31---------->>>>>
                        //if ( !e.ShiftKey )
                        if (!e.ShiftKey && result)
                        // --- UPD 2011/08/31----------<<<<<
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        if (tEdit_rs_SlipNote2.Text != string.Empty)
                                        {
                                            if (tEdit_rs_SlipNote3.Visible)
                                            {
                                                //e.NextCtrl = this.tEdit_rs_SlipNote3;// DEL 2010/01/29
                                                e.NextCtrl = this.tNedit_SlipNote3Code;// ADD 2010/01/29
                                            }
                                            else if (tEdit_rs_ReturnReason.Visible)
                                            {
                                                //e.NextCtrl = this.tEdit_rs_ReturnReason;// DEL 2010/01/29
                                                e.NextCtrl = this.tNedit_RetGoodsReason;// ADD 2010/01/29
                                            }
                                            // --- ADD 2009/09/07 ---------->>>>>
                                            else if (tEdit_rs_SlipNoteCar.Visible)
                                            {
                                                e.NextCtrl = this.tEdit_rs_SlipNoteCar;
                                            }
                                            // --- ADD 2009/09/07 ----------<<<<<
                                            else
                                            {
                                                e.NextCtrl = e.PrevCtrl;
                                                // 2010/04/07 >>>
                                                //IssueRedSlip();
                                                StartIssueRedSlip();
                                                // 2010/04/07 <<<
                                                // ----------ADD 2010/12/20 --------------->>>>>
                                                if (this._detailDataSet.RedSlipDetail.Count > 0 && string.IsNullOrEmpty(this.tEdit_rs_InputEmployeeCd.Text.Trim()))
                                                {
                                                    e.NextCtrl = this.tEdit_rs_InputEmployeeCd;
                                                }
                                                else if (this._detailDataSet.RedSlipDetail.Count > 0 && tDateEdit_rs_SalesDate.GetDateTime() == DateTime.MinValue)
                                                {
                                                    e.NextCtrl = this.tDateEdit_rs_SalesDate;
                                                }
                                                // ----------ADD 2010/12/20 ---------------<<<<<
                                            }
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.uButton_rs_SlipNote2;
                                        }
                                        break;
                                    }
                            }
                        }
                        # endregion
                    }
                    break;
                // 赤伝備考３
                case "tEdit_rs_SlipNote3":
                    {
                        // --- ADD 2011/08/31---------->>>>>
                        string slipNote = this.tEdit_rs_SlipNote3.Text;

                        bool result = this.CheckSlipNote(3, slipNote);
                        isRsError = result; // ADD BY LIUSY 2013/09/18 #40275
                        if (!result)
                        {
                            this.tEdit_rs_SlipNote3.Text = this._prevInputValue.SlipNoteName3;
                            e.NextCtrl = e.PrevCtrl;
                        }
                        else
                        {
                            this._prevInputValue.SlipNoteName3 = this.tEdit_rs_SlipNote3.Text;
                        }
                        // --- ADD 2011/08/31----------<<<<<

                        // 次フォーカス
                        # region [次フォーカス]
                        // --- UPD 2011/08/31---------->>>>>
                        //if ( !e.ShiftKey )
                        if (!e.ShiftKey && result)
                        // --- UPD 2011/08/31----------<<<<<)
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        if (tEdit_rs_SlipNote3.Text != string.Empty)
                                        {
                                            if (tEdit_rs_ReturnReason.Visible)
                                            {
                                                //e.NextCtrl = this.tEdit_rs_ReturnReason;// DEL 2010/01/29
                                                e.NextCtrl = this.tNedit_RetGoodsReason;// ADD 2010/01/29
                                            }
                                            else
                                            {
                                                // --- ADD 2009/09/07 ---------->>>>>
                                                if (this.tEdit_rs_SlipNoteCar.Visible)
                                                {
                                                    e.NextCtrl = this.tEdit_rs_SlipNoteCar;
                                                }
                                                else
                                                {
                                                    e.NextCtrl = e.PrevCtrl;
                                                    // 2010/04/07 >>>
                                                    //IssueRedSlip();
                                                    StartIssueRedSlip();
                                                    // ----------ADD 2010/12/20 --------------->>>>>
                                                    if (this._detailDataSet.RedSlipDetail.Count > 0 && string.IsNullOrEmpty(this.tEdit_rs_InputEmployeeCd.Text.Trim()))
                                                    {
                                                        e.NextCtrl = this.tEdit_rs_InputEmployeeCd;
                                                    }
                                                    else if (this._detailDataSet.RedSlipDetail.Count > 0 && tDateEdit_rs_SalesDate.GetDateTime() == DateTime.MinValue)
                                                    {
                                                        e.NextCtrl = this.tDateEdit_rs_SalesDate;
                                                    }
                                                    // ----------ADD 2010/12/20 ---------------<<<<<
                                                    // 2010/04/07 <<<
                                                }
                                                // --- ADD 2009/09/07 ----------<<<<<
                                                // --- DEL 2009/09/07 ---------->>>>>
                                                //e.NextCtrl = e.PrevCtrl;
                                                //IssueRedSlip();
                                                // --- DEL 2009/09/07 ----------<<<<<
                                            }
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.uButton_rs_SlipNote3;
                                        }
                                        break;
                                    }
                            }
                        }
                        # endregion
                    }
                    break;
                // 2010/04/07 Add >>>
                // 赤伝備考１ガイド
                case "uButton_rs_SlipNote":
                    {
                        // 次フォーカス
                        # region [次フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        if (!tEdit_rs_SlipNote2.Visible && !tEdit_rs_SlipNote3.Visible && !tEdit_rs_ReturnReason.Visible && !tEdit_rs_SlipNoteCar.Visible)
                                        {
                                            e.NextCtrl = e.PrevCtrl;
                                            StartIssueRedSlip();
                                            // ----------ADD 2010/12/20 --------------->>>>>
                                            if (this._detailDataSet.RedSlipDetail.Count > 0 && string.IsNullOrEmpty(this.tEdit_rs_InputEmployeeCd.Text.Trim()))
                                            {
                                                e.NextCtrl = this.tEdit_rs_InputEmployeeCd;
                                            }
                                            else if (this._detailDataSet.RedSlipDetail.Count > 0 && tDateEdit_rs_SalesDate.GetDateTime() == DateTime.MinValue)
                                            {
                                                e.NextCtrl = this.tDateEdit_rs_SalesDate;
                                            }
                                            // ----------ADD 2010/12/20 ---------------<<<<<
                                        }
                                        break;
                                    }
                            }
                        }
                        # endregion
                    }
                    break;
                // 赤伝備考２ガイド
                case "uButton_rs_SlipNote2":
                    {
                        // 次フォーカス
                        # region [次フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        if (!tEdit_rs_SlipNote3.Visible && !tEdit_rs_ReturnReason.Visible && !tEdit_rs_SlipNoteCar.Visible)
                                        {
                                            e.NextCtrl = e.PrevCtrl;
                                            StartIssueRedSlip();
                                            // ----------ADD 2010/12/20 --------------->>>>>
                                            if (this._detailDataSet.RedSlipDetail.Count > 0 && string.IsNullOrEmpty(this.tEdit_rs_InputEmployeeCd.Text.Trim()))
                                            {
                                                e.NextCtrl = this.tEdit_rs_InputEmployeeCd;
                                            }
                                            else if (this._detailDataSet.RedSlipDetail.Count > 0 && tDateEdit_rs_SalesDate.GetDateTime() == DateTime.MinValue)
                                            {
                                                e.NextCtrl = this.tDateEdit_rs_SalesDate;
                                            }
                                            // ----------ADD 2010/12/20 ---------------<<<<<
                                        }
                                        break;
                                    }
                            }
                        }
                        # endregion
                    }
                    break;
                // 2010/04/07 Add <<<
                // 赤伝備考３ガイド
                case "uButton_rs_SlipNote3":
                    {
                        // 次フォーカス
                        # region [次フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        // 2010/04/07 >>>
                                        //if (!tEdit_rs_ReturnReason.Visible)
                                        if (!tEdit_rs_ReturnReason.Visible && !tEdit_rs_SlipNoteCar.Visible)
                                        // 2010/04/07 <<<
                                        {
                                            e.NextCtrl = e.PrevCtrl;
                                            // 2010/04/07 >>>
                                            //IssueRedSlip();
                                            StartIssueRedSlip();
                                            // ----------ADD 2010/12/20 --------------->>>>>
                                            if (this._detailDataSet.RedSlipDetail.Count > 0 && string.IsNullOrEmpty(this.tEdit_rs_InputEmployeeCd.Text.Trim()))
                                            {
                                                e.NextCtrl = this.tEdit_rs_InputEmployeeCd;
                                            }
                                            else if (this._detailDataSet.RedSlipDetail.Count > 0 && tDateEdit_rs_SalesDate.GetDateTime() == DateTime.MinValue)
                                            {
                                                e.NextCtrl = this.tDateEdit_rs_SalesDate;
                                            }
                                            // ----------ADD 2010/12/20 ---------------<<<<<
                                            // 2010/04/07 <<<
                                        }
                                        break;
                                    }
                            }
                        }
                        # endregion
                    }
                    break;
                // 赤伝返品理由
                case "tEdit_rs_ReturnReason":
                    {
                        // 次フォーカス
                        # region [次フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        if (tEdit_rs_ReturnReason.Text != string.Empty)
                                        {
                                            // --- ADD 2009/09/07 ---------->>>>>
                                            if (this.tEdit_rs_SlipNoteCar.Visible)
                                            {
                                                e.NextCtrl = this.tEdit_rs_SlipNoteCar;
                                            }
                                            else
                                            {
                                                e.NextCtrl = e.PrevCtrl;
                                                // 2010/04/07 >>>
                                                //IssueRedSlip();
                                                StartIssueRedSlip();
                                                // ----------ADD 2010/12/20 --------------->>>>>
                                                if (this._detailDataSet.RedSlipDetail.Count > 0 && string.IsNullOrEmpty(this.tEdit_rs_InputEmployeeCd.Text.Trim()))
                                                {
                                                    e.NextCtrl = this.tEdit_rs_InputEmployeeCd;
                                                }
                                                else if (this._detailDataSet.RedSlipDetail.Count > 0 && tDateEdit_rs_SalesDate.GetDateTime() == DateTime.MinValue)
                                                {
                                                    e.NextCtrl = this.tDateEdit_rs_SalesDate;
                                                }
                                                // ----------ADD 2010/12/20 ---------------<<<<<
                                                // 2010/04/07 <<<

                                            }
                                            // --- ADD 2009/09/07 ----------<<<<<

                                            // --- DEL 2009/09/07 ---------->>>>>
                                            //e.NextCtrl = e.PrevCtrl;
                                            //IssueRedSlip();
                                            // --- DEL 2009/09/07 ----------<<<<<
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.uButton_rs_ReturnReason;
                                        }
                                        break;
                                    }
                            }
                        }
                        # endregion
                    }
                    break;
                // 赤伝返品理由ガイド
                case "uButton_rs_ReturnReason":
                    {
                        // 次フォーカス
                        # region [次フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        // --- ADD 2009/09/07 ---------->>>>>
                                        if (this.tEdit_rs_SlipNoteCar.Visible)
                                        {
                                            e.NextCtrl = this.tEdit_rs_SlipNoteCar;
                                        }
                                        else
                                        {
                                            e.NextCtrl = e.PrevCtrl;
                                            // 2010/04/07 >>>
                                            //IssueRedSlip();
                                            StartIssueRedSlip();
                                            // ----------ADD 2010/12/20 --------------->>>>>
                                            if (this._detailDataSet.RedSlipDetail.Count > 0 && string.IsNullOrEmpty(this.tEdit_rs_InputEmployeeCd.Text.Trim()))
                                            {
                                                e.NextCtrl = this.tEdit_rs_InputEmployeeCd;
                                            }
                                            else if (this._detailDataSet.RedSlipDetail.Count > 0 && tDateEdit_rs_SalesDate.GetDateTime() == DateTime.MinValue)
                                            {
                                                e.NextCtrl = this.tDateEdit_rs_SalesDate;
                                            }
                                            // ----------ADD 2010/12/20 ---------------<<<<<
                                            // 2010/04/07 <<<

                                        }
                                        // --- ADD 2009/09/07 ----------<<<<<

                                        // --- DEL 2009/09/07 ---------->>>>>
                                        //e.NextCtrl = e.PrevCtrl;
                                        //IssueRedSlip();
                                        // --- DEL 2009/09/07 ----------<<<<<
                                        break;
                                    }
                            }
                        }
                        # endregion
                    }
                    break;

                // --- ADD 2009/09/07 ---------->>>>>
                case "tEdit_rs_SlipNoteCar":
                    {
                        // 次フォーカス
                        # region [次フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        if (tEdit_rs_SlipNoteCar.Text != string.Empty)
                                        {
                                            // ---UPD 2009/10/28 ----->>>>>
                                            //e.NextCtrl = this.tNedit_Mileage;
                                            e.NextCtrl = e.PrevCtrl;
                                            // 2010/04/07 >>>
                                            //IssueRedSlip();
                                            StartIssueRedSlip();
                                            // ----------ADD 2010/12/20 --------------->>>>>
                                            if (this._detailDataSet.RedSlipDetail.Count > 0 && string.IsNullOrEmpty(this.tEdit_rs_InputEmployeeCd.Text.Trim()))
                                            {
                                                e.NextCtrl = this.tEdit_rs_InputEmployeeCd;
                                            }
                                            else if (this._detailDataSet.RedSlipDetail.Count > 0 && tDateEdit_rs_SalesDate.GetDateTime() == DateTime.MinValue)
                                            {
                                                e.NextCtrl = this.tDateEdit_rs_SalesDate;
                                            }
                                            // ----------ADD 2010/12/20 ---------------<<<<<
                                            // 2010/04/07 <<<
                                            // ---UPD 2009/10/28 -----<<<<<
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.uButton_rs_SlipNoteCar;
                                        }
                                        break;
                                    }
                            }
                        }
                        # endregion
                    }
                    break;
                case "uButton_rs_SlipNoteCar":
                    {
                        // 次フォーカス
                        # region [次フォーカス]
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        // ---UPD 2009/10/28 ----->>>>>
                                        // e.NextCtrl = this.tNedit_Mileage;
                                        e.NextCtrl = e.PrevCtrl;
                                        // 2010/04/07 >>>
                                        //IssueRedSlip();
                                        StartIssueRedSlip();
                                        // ----------ADD 2010/12/20 --------------->>>>>
                                        if (this._detailDataSet.RedSlipDetail.Count > 0 && string.IsNullOrEmpty(this.tEdit_rs_InputEmployeeCd.Text.Trim()))
                                        {
                                            e.NextCtrl = this.tEdit_rs_InputEmployeeCd;
                                        }
                                        else if (this._detailDataSet.RedSlipDetail.Count > 0 && tDateEdit_rs_SalesDate.GetDateTime() == DateTime.MinValue)
                                        {
                                            e.NextCtrl = this.tDateEdit_rs_SalesDate;
                                        }
                                        // ----------ADD 2010/12/20 ---------------<<<<<
                                        // 2010/04/07 <<<
                                        // ---UPD 2009/10/28 -----<<<<<
                                        break;
                                    }
                            }
                        }
                        # endregion
                    }
                    break;
                    // ---DEL 2009/10/28 ----->>>>>
                    //case "tNedit_Mileage":
                    //    {
                    //        int mileage = this.tNedit_Mileage.GetInt();
                    //        this.tNedit_Mileage.Text = mileage.ToString("#,###");

                    //        // 次フォーカス
                    //        # region [次フォーカス]
                    //        if (!e.ShiftKey)
                    //        {
                    //            switch (e.Key)
                    //            {
                    //                case Keys.Return:
                    //                case Keys.Tab:
                    //                    {
                    //                        e.NextCtrl = e.PrevCtrl;
                    //                        IssueRedSlip();
                    //                        break;
                    //                    }
                    //            }
                    //        }
                    //        # endregion
                    //    }
                    // ---DEL 2009/10/28 -----<<<<<
                    // --- DEL 2020/12/21 警告対応 ---------->>>>>
                    //break;
                    // --- DEL 2020/12/21 警告対応 ----------<<<<<
                // --- ADD 2009/09/07 ----------<<<<<
                #endregion

                # region 赤伝入力グリッド
                case "uGrid_RedSlip":
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (ReturnKeyDownOfRedSlipGrid())
                                    {
                                        e.NextCtrl = null;
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetRedSlipGridNextControl();
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                # endregion
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/08 ADD
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
                # region [残高表示]

                # region 処理区分
                case "tComboEditor_rl_RemainType":
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Down:
                                    {
                                        // 検索実行
                                        Control errorControl = SearchSlipDetailList();

                                        // エラーコントロールに移動
                                        if (errorControl != null)
                                        {
                                            e.NextCtrl = errorControl;
                                        }
                                        else
                                        {
                                            if (uGrid_BalanceList.Rows.Count > 0)
                                            {
                                                //e.NextCtrl = uGrid_BalanceList;       //DEL 2009/02/10 不具合対応[10651]
                                            }
                                            else
                                            {
                                                e.NextCtrl = e.PrevCtrl;
                                            }
                                        }
                                        break;
                                    }
                            }
                        }
                    }
                    break;
                # endregion

                # region 対象月（開始）
                case "tDateEdit_rl_TargetYMSt":
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Down:
                                    {
                                        // 検索実行
                                        Control errorControl = SearchSlipDetailList();

                                        if (errorControl != null)
                                        {
                                            e.NextCtrl = errorControl;
                                        }
                                        else
                                        {
                                            if (uGrid_BalanceList.Rows.Count > 0)
                                            {
                                                //e.NextCtrl = uGrid_BalanceList;           //DEL 2009/02/10 不具合対応[10651]
                                            }
                                            else
                                            {
                                                e.NextCtrl = e.PrevCtrl;
                                            }
                                        }
                                        break;
                                    }
                            }
                        }
                    }
                    break;
                # endregion

                # region 対象月（終了）
                case "tDateEdit_rl_TargetYMEd":
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                // UPD 2012/06/01 ----------------------->>>>>
                                //case Keys.Right:
                                //case Keys.Down:
                                //case Keys.Return:
                                //case Keys.Tab:
                                case Keys.Down:
                                    // UPD 2012/06/01 ----------------------->>>>>
                                    {
                                        // 検索実行
                                        Control errorControl = SearchSlipDetailList();

                                        if (errorControl != null)
                                        {
                                            e.NextCtrl = errorControl;
                                        }
                                        else
                                        {
                                            if (uGrid_BalanceList.Rows.Count > 0)
                                            {
                                                //e.NextCtrl = uGrid_BalanceList;           //DEL 2009/02/10 不具合対応[10651]
                                            }
                                            else
                                            {
                                                e.NextCtrl = e.PrevCtrl;
                                            }
                                        }
                                        break;
                                    }
                            }
                        }
                    }
                    break;
                # endregion

                // ADD 2012/06/01 ----------------------->>>>>
                # region 抽出拠点
                case "tComboEditor_rl_RemainSectionType":
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Right:
                                case Keys.Down:
                                case Keys.Tab:
                                case Keys.Return:
                                    {
                                        // 検索実行
                                        Control errorControl = SearchSlipDetailList();

                                        if (errorControl != null)
                                        {
                                            e.NextCtrl = errorControl;
                                        }
                                        else
                                        {
                                            if (uGrid_BalanceList.Rows.Count > 0)
                                            {
                                            }
                                            else
                                            {
                                                e.NextCtrl = e.PrevCtrl;
                                            }
                                        }
                                        break;
                                    }
                            }
                        }
                    }
                    break;
                # endregion
                // ADD 2012/06/01 -----------------------<<<<<


                # endregion
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD

                //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
                #region 地区
                case "tEdit_SalesAreaNm":
                    {
                        string value = this.tEdit_SalesAreaNm.Text.Trim();
                        if (string.IsNullOrEmpty(value) || value.Equals("0")) 
                        {
                            this._salesAreaCd = 0;
                            this._salesAreaNm = string.Empty;
                            this.tEdit_SalesAreaNm.Text = string.Empty;
                        }
                        if (!this._salesAreaNm.Equals(value))
                        {
                            try
                            {
                                int salesAreaCd = Convert.ToInt32(value);
                                UserGdBd userGdBd = null;
                                UserGuideAcsData acsDataType = UserGuideAcsData.UserBodyData;
                                int userGdCodeArea = 21;
                                int status = this._userGuideAcs.ReadBody(out userGdBd, this._enterpriseCode, userGdCodeArea, salesAreaCd, ref acsDataType);

                                if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                                {
                                    if (userGdBd.LogicalDeleteCode == 0)
                                    {
                                        this._salesAreaCd = salesAreaCd;
                                        this.tEdit_SalesAreaNm.Text = salesAreaCd.ToString("D4") + ":" + userGdBd.GuideName;
                                        this._salesAreaNm = salesAreaCd.ToString("D4") + ":" + userGdBd.GuideName;
                                    }
                                    else
                                    {
                                        this._salesAreaNm = string.Empty;
                                        this.tEdit_SalesAreaNm.Text = this._salesAreaCd.ToString();
                                    }
                                }
                                else if (status == (int)ConstantManagement.DB_Status.ctDB_NOT_FOUND)
                                {
                                    this.tEdit_SalesAreaNm.Text = salesAreaCd.ToString("D4");
                                    TMsgDisp.Show(
                                        this,
                                        emErrorLevel.ERR_LEVEL_INFO,
                                        this.Name,
                                        "地区コード [" + salesAreaCd + "] に該当するデータが存在しません。",
                                        status,
                                        MessageBoxButtons.OK);
                                    this.tEdit_SalesAreaNm.SetInt(this._salesAreaCd);
                                    e.NextCtrl = e.PrevCtrl;
                                    break;
                                }
                                else
                                {
                                    TMsgDisp.Show(
                                        this,
                                        emErrorLevel.ERR_LEVEL_STOPDISP,
                                        this.Name,
                                        "地区の取得に失敗しました。",
                                        status,
                                        MessageBoxButtons.OK);
                                    this._salesAreaCd = 0;
                                    this._salesAreaNm = string.Empty;
                                }
                            }
                            catch
                            {
                                if (this._salesAreaCd != 0 && String.IsNullOrEmpty(this._salesAreaNm))
                                {
                                    this.tEdit_SalesAreaNm.Text = this._salesAreaNm;
                                }
                                else
                                {
                                    this._salesAreaNm = string.Empty;
                                    this.tEdit_SalesAreaNm.Text = this._salesAreaCd.ToString();
                                }
                            }
                        }
                        switch (e.Key)
                        {
                            case Keys.Enter:
                            case Keys.Tab:
                                {
                                    if (!e.ShiftKey)
                                    {
                                        if (this.ultraCheckEditor_salesArea_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.ultraCheckEditor_salesArea_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    if (this._salesAreaCd == 0)
                                    {
                                        tEdit_SalesAreaNm.Clear();
                                    }
                                    break;
                                }
                        }
                        break;
                    }
                case "uButton_SalesAreaCdGuide":
                    {
                        switch (e.Key)
                        {
                            case Keys.Enter:
                            case Keys.Tab:
                                {
                                    if (!e.ShiftKey)
                                    {
                                        if (this.ultraCheckEditor_salesArea_base.Checked)
                                        {
                                            e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    else
                                    {
                                        if (this.ultraCheckEditor_salesArea_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                                }
                            case Keys.Down:
                                {
                                    if (this.ultraCheckEditor_salesArea_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl("tNedit_CustAnalysCode6");
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl("tNedit_CustAnalysCode6");
                                    }
                                    break; 
                                }
                        }
                        break;
                    }
                #endregion

                #region 分析コード1
                case "tNedit_CustAnalysCode1":
                    {
                        int value = this.tNedit_CustAnalysCode1.GetInt();
                        if (value == 0)
                        {
                            this.tNedit_CustAnalysCode1.Value = 0;
                            this.tNedit_CustAnalysCode1.Text = string.Empty;
                        }

                        // 分析コードフォーカス移動
                        this.AnalysCodeFocusMove(e, this.ultraCheckEditor_custAnalysCode_base);

                        break;
                    }
                #endregion

                #region 分析コード2
                case "tNedit_CustAnalysCode2":
                    {
                        int value = this.tNedit_CustAnalysCode2.GetInt();
                        if (value == 0)
                        {
                            this.tNedit_CustAnalysCode2.Value = 0;
                            this.tNedit_CustAnalysCode2.Text = string.Empty;
                        }

                        // 分析コードフォーカス
                        this.AnalysCodeFocusMove(e, this.ultraCheckEditor_custAnalysCode_base);

                        break;
                    }
                #endregion

                #region 分析コード3
                case "tNedit_CustAnalysCode3":
                    {
                        int value = this.tNedit_CustAnalysCode3.GetInt();
                        if (value == 0)
                        {
                            this.tNedit_CustAnalysCode3.Value = 0;
                            this.tNedit_CustAnalysCode3.Text = string.Empty;
                        }

                        // 分析コードフォーカス
                        this.AnalysCodeFocusMove(e, this.ultraCheckEditor_custAnalysCode_base);

                        break;
                    }
                #endregion

                #region 分析コード4
                case "tNedit_CustAnalysCode4":
                    {
                        int value = this.tNedit_CustAnalysCode4.GetInt();
                        if (value == 0)
                        {
                            this.tNedit_CustAnalysCode4.Value = 0;
                            this.tNedit_CustAnalysCode4.Text = string.Empty;
                        }

                        // 分析コードフォーカス
                        this.AnalysCodeFocusMove(e, this.ultraCheckEditor_custAnalysCode_base);

                        break;
                    }
                #endregion

                #region 分析コード5
                case "tNedit_CustAnalysCode5":
                    {
                        int value = this.tNedit_CustAnalysCode5.GetInt();
                        if (value == 0)
                        {
                            this.tNedit_CustAnalysCode5.Value = 0;
                            this.tNedit_CustAnalysCode5.Text = string.Empty;
                        }

                        // 分析コードフォーカス
                        this.AnalysCodeFocusMove(e, this.ultraCheckEditor_custAnalysCode_base);

                        break;
                    }
                #endregion

                #region 分析コード6
                case "tNedit_CustAnalysCode6":
                    {

                        int value = this.tNedit_CustAnalysCode6.GetInt();

                        if (value == 0)
                        {
                            this.tNedit_CustAnalysCode6.Value = 0;
                            this.tNedit_CustAnalysCode6.Text = string.Empty;
                        }

                        // 分析コードフォーカス
                        this.AnalysCodeFocusMove(e, this.ultraCheckEditor_custAnalysCode_base);

                        break;
                    }
                #endregion
              　//----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する。-----<<<<<

                //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
                #region 受注作成区分
                case "tComboEditor_AcptAnOdrMakeDiv":
                    {
                        if (!e.ShiftKey)
                        {
                            switch (e.Key)
                            {
                                case Keys.Tab:
                                case Keys.Return:
                                    if (this.uCheckAcptAnOdrMakeDiv_base.Checked)
                                    {
                                        e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                                    }
                                    else
                                    {
                                        e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                                    }
                                    break;
                            }
                        }
                        else
                        {
                            switch (e.Key)
                            {
                                case Keys.Return:
                                case Keys.Tab:
                                    {
                                        if (e.Key == Keys.Tab)
                                        {
                                            flag = true;
                                        }
                                        else
                                        {
                                            flag = false;
                                        }
                                        if (this.uCheckAcptAnOdrMakeDiv_base.Checked)
                                        {
                                            e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                                        }
                                        else
                                        {
                                            e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                                        }
                                    }
                                    break;
                            }
                        }
                    }
                    break;
                #endregion
                //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<

            }
            //ADD 2011/08/04 FOR redmine #23387
            if (e.NextCtrl is Infragistics.Win.UltraWinGrid.UltraGrid)
            {
                _searchFlg = false;
            }
            //ADD 2011/08/04 FOR redmine #23387

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/07 ADD
            // 合計タブor明細タブに移動する場合は検索実行チェックする
            if (e.NextCtrl == uTabControl || e.NextCtrl == uTabControl_BlDspRslt)
            {
                if (!e.ShiftKey && (e.Key == Keys.Down || e.Key == Keys.Right || e.Key == Keys.Tab || e.Key == Keys.Return))
                {
                    // 検索実行
                    e.NextCtrl = SearchOnChangeFocus(e.PrevCtrl);
                    // -----------------------ADD 2011/01/21 ------------------------->>>>>
                    if ((e.NextCtrl is Broadleaf.Library.Windows.Forms.TNedit) ||
                            (e.NextCtrl is Broadleaf.Library.Windows.Forms.TEdit) ||
                            (e.NextCtrl is Broadleaf.Library.Windows.Forms.TDateEdit) ||
                            (e.NextCtrl is Broadleaf.Library.Windows.Forms.TComboEditor) ||
                            (e.NextCtrl is Infragistics.Win.Misc.UltraButton) ||
                            (e.NextCtrl is Infragistics.Win.UltraWinGrid.UltraGrid) ||
                            (e.NextCtrl is Infragistics.Win.Misc.UltraExpandableGroupBox) ||
                            (e.NextCtrl is Infragistics.Win.UltraWinEditors.UltraCheckEditor) ||
                            (e.NextCtrl is Infragistics.Win.UltraWinTabControl.UltraTabControl))
                    {
                        if (e.NextCtrl.Name == "tComboEditor_rs_SalesSlipCd" || e.NextCtrl.Name == "tEdit_rs_InputEmployeeCd"
                        || e.NextCtrl.Name == "tNedit_rs_FeePercent01" || e.NextCtrl.Name == "tNedit_rs_FeePercent02"
                        || e.NextCtrl.Name == "tNedit_rs_FeePercentTotal" || e.NextCtrl.Name == "tNedit_rs_FeeAmountTotal"
                        || e.NextCtrl.Name == "tNedit_SalesCodeDiv" || e.NextCtrl.Name == "uButton_rs_SalesCodeDiv"  // ADD 2012/03/29 gezh Redmine#29149
                        || e.NextCtrl.Name == "tEdit_rs_PartySalesSlipNo" || e.NextCtrl.Name == "tNedit_SlipNoteCode"
                        || e.NextCtrl.Name == "tNedit_SlipNote2Code" || e.NextCtrl.Name == "tNedit_SlipNote3Code"
                        || e.NextCtrl.Name == "tNedit_RetGoodsReason" || e.NextCtrl.Name == "tEdit_rs_SlipNote"
                        || e.NextCtrl.Name == "tEdit_rs_SlipNote2" || e.NextCtrl.Name == "tEdit_rs_SlipNote3"
                        || e.NextCtrl.Name == "uButton_rs_SlipNote" || e.NextCtrl.Name == "uButton_rs_SlipNote2"
                        || e.NextCtrl.Name == "uButton_rs_SlipNote3" || e.NextCtrl.Name == "tEdit_rs_ReturnReason"
                        || e.NextCtrl.Name == "uButton_rs_ReturnReason" || e.NextCtrl.Name == "tEdit_rs_SlipNoteCar"
                        || e.NextCtrl.Name == "uButton_rs_SlipNoteCar" || e.NextCtrl.Name == "uGrid_RedSlip"
                        || e.NextCtrl.Name == "tDateEdit_rs_SalesDate" || e.NextCtrl.Name == "uButton_rs_InputEmployee"
                        || (e.NextCtrl.Name == "uTabControl" && this._selectedMainTabKey == "uTab_RedSlip"))
                        {
                            // 検索(F10)ボタンを無効とする
                            this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = false;
                        }
                        else
                        {
                            this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = true;
                        }
                    }
                    // -----------------------ADD 2011/01/21 -------------------------<<<<<
                    return;
                }
            }
            else if (e.NextCtrl == uButton_SlipNote)
            {
                if (!e.ShiftKey && (e.Key == Keys.Up || e.Key == Keys.Down))
                {
                    e.NextCtrl = tEdit_SlipNote;
                }
            }
            else if (e.NextCtrl == uButton_SlipNote2)
            {
                if (!e.ShiftKey && (e.Key == Keys.Up || e.Key == Keys.Down))
                {
                    e.NextCtrl = tEdit_SlipNote2;
                }
            }
            else if (e.NextCtrl == uButton_SlipNote3)
            {
                if (!e.ShiftKey && (e.Key == Keys.Up || e.Key == Keys.Down))
                {
                    e.NextCtrl = tEdit_SlipNote3;
                }
            }

            // -----------------------ADD 2011/01/21 ------------------------->>>>>
            if ((e.NextCtrl is Broadleaf.Library.Windows.Forms.TNedit) ||
                    (e.NextCtrl is Broadleaf.Library.Windows.Forms.TEdit) ||
                    (e.NextCtrl is Broadleaf.Library.Windows.Forms.TDateEdit) ||
                    (e.NextCtrl is Broadleaf.Library.Windows.Forms.TComboEditor) ||
                    (e.NextCtrl is Infragistics.Win.Misc.UltraButton) ||
                    (e.NextCtrl is Infragistics.Win.UltraWinGrid.UltraGrid) ||
                    (e.NextCtrl is Infragistics.Win.Misc.UltraExpandableGroupBox) ||
                    (e.NextCtrl is Infragistics.Win.UltraWinEditors.UltraCheckEditor) ||
                    (e.NextCtrl is Infragistics.Win.UltraWinTabControl.UltraTabControl))
            {
                if (e.NextCtrl.Name == "tComboEditor_rs_SalesSlipCd" || e.NextCtrl.Name == "tEdit_rs_InputEmployeeCd"
                || e.NextCtrl.Name == "tNedit_rs_FeePercent01" || e.NextCtrl.Name == "tNedit_rs_FeePercent02"
                || e.NextCtrl.Name == "tNedit_rs_FeePercentTotal" || e.NextCtrl.Name == "tNedit_rs_FeeAmountTotal"
                || e.NextCtrl.Name == "tNedit_SalesCodeDiv" || e.NextCtrl.Name == "uButton_rs_SalesCodeDiv"  // ADD 2012/03/29 gezh Redmine#29149
                || e.NextCtrl.Name == "tEdit_rs_PartySalesSlipNo" || e.NextCtrl.Name == "tNedit_SlipNoteCode"
                || e.NextCtrl.Name == "tNedit_SlipNote2Code" || e.NextCtrl.Name == "tNedit_SlipNote3Code"
                || e.NextCtrl.Name == "tNedit_RetGoodsReason" || e.NextCtrl.Name == "tEdit_rs_SlipNote"
                || e.NextCtrl.Name == "tEdit_rs_SlipNote2" || e.NextCtrl.Name == "tEdit_rs_SlipNote3"
                || e.NextCtrl.Name == "uButton_rs_SlipNote" || e.NextCtrl.Name == "uButton_rs_SlipNote2"
                || e.NextCtrl.Name == "uButton_rs_SlipNote3" || e.NextCtrl.Name == "tEdit_rs_ReturnReason"
                || e.NextCtrl.Name == "uButton_rs_ReturnReason" || e.NextCtrl.Name == "tEdit_rs_SlipNoteCar"
                || e.NextCtrl.Name == "uButton_rs_SlipNoteCar" || e.NextCtrl.Name == "uGrid_RedSlip"
                || e.NextCtrl.Name == "tDateEdit_rs_SalesDate" || e.NextCtrl.Name == "uButton_rs_InputEmployee"
                || (e.NextCtrl.Name == "uTabControl" && this._selectedMainTabKey == "uTab_RedSlip"))
                {
                    //----- UPD 2011/02/16----->>>>>
                    if (this._selectedMainTabKey == "uTab_RedSlip")
                    {
                        // 検索(F10)ボタンを無効とする
                        this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = false;
                    }
                    else
                    {
                        // 検索(F10)ボタンを無効とする
                        this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = true;
                    }
                    //// 検索(F10)ボタンを無効とする
                    //this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = false;
                    //----- UPD 2011/02/16-----<<<<<
                }
                else
                {
                    this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = true;
                }
            }
            // -----------------------ADD 2011/01/21 -------------------------<<<<<
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/07 ADD
        }

        //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
        /// <summary>
        /// 分析コードフォーカス移動
        /// </summary>
        /// <param name="sender">sender</param>
        /// <param name="checkEditor">e</param>
        /// <remark>
        /// <br>Note		: メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する</br>
        /// <br>管理番号    : 11101427-00</br>
        /// <br>Programmer	: 鮑晶</br>
        /// <br>Date		: K2015/06/16</br>
        /// </remark>
        private void AnalysCodeFocusMove(ChangeFocusEventArgs e, Infragistics.Win.UltraWinEditors.UltraCheckEditor checkEditor)
        {
            switch (e.Key)
            {
                case Keys.Enter:
                case Keys.Tab:
                    {
                        if (!e.ShiftKey)
                        {
                            if (checkEditor.Checked)
                            {
                                e.NextCtrl = this.GetNextCommonControl(e.PrevCtrl.Name);
                            }
                            else
                            {
                                e.NextCtrl = this.GetNextControl(e.PrevCtrl.Name);
                            }
                        }
                        else
                        {
                            if (checkEditor.Checked)
                            {
                                e.NextCtrl = this.GetBeforeCommonControl(e.PrevCtrl.Name);
                            }
                            else
                            {
                                e.NextCtrl = this.GetBeforeControl(e.PrevCtrl.Name);
                            }
                        }
                        break;
                    }
            }
        }
        //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
        /// <summary>
        /// フォーカス移動時の検索処理
        /// </summary>
        /// <param name="control"></param>
        /// <remarks>PM7同様の操作性を実現する為の処理</remarks>
        /// <br>Update Note : 2013/01/30 wangf </br>
        /// <br>            : 10801804-00、速度改善関連、Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応</br>
        /// <br>            : 残高集計のタイミングをずらす</br>
        private Control SearchOnChangeFocus(Control prevControl)
        {
            Control nextControl = prevControl;

            // タブの選択状態により処理を制御
            switch (this._selectedMainTabKey)
            {
                // 伝票表示タブ
                case "uTab_SlipList":
                    {
                        // 検索実行
                        Control errorControl = this.SearchSlipDetailList();
                        if (errorControl != null)
                        {
                            nextControl = errorControl;
                        }
                        else
                        {
                            if (uGrid_Slip.Rows.Count > 0)
                            {
                                //nextControl = uGrid_Slip; // DEL wangf 2013/01/30 FOR Redmine#34513
                                //nextControl = this.uButton_Balance; // ADD wangf 2013/01/30 FOR Redmine#34513  // DEL wangf 2013/02/16 FOR Redmine#34513
                                nextControl = uGrid_Slip; // ADD 2013/03/07 T.Miyamoto
                                // -----------------------ADD 2011/01/21 ------------------------->>>>>
                                // 検索(F10)ボタンを無効とする
                                this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = true;
                                // -----------------------ADD 2011/01/21 -------------------------<<<<<
                            }
                        }
                    }
                    break;
                // 明細表示タブ
                case "uTab_SlipDetail":
                    {
                        // 検索実行
                        Control errorControl = this.SearchSlipDetailList();
                        if (errorControl != null)
                        {
                            nextControl = errorControl;
                        }
                        else
                        {
                            if (uGrid_Detail.Rows.Count > 0)
                            {
                                //nextControl = uGrid_Detail; // DEL wangf 2013/01/30 FOR Redmine#34513
                                //nextControl = this.uButton_Balance; // ADD wangf 2013/01/30 FOR Redmine#34513  // DEL wangf 2013/02/16 FOR Redmine#34513
                                nextControl = uGrid_Detail; // ADD 2013/03/07 T.Miyamoto
                                // -----------------------ADD 2011/01/21 ------------------------->>>>>
                                // 検索(F10)ボタンを無効とする
                                this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = true;
                                // -----------------------ADD 2011/01/21 -------------------------<<<<<
                            }
                        }
                    }
                    break;
                // 赤伝入力タブ
                case "uTab_RedSlip":
                    {
                        // 検索実行
                        Control errorControl = this.SearchSlipDetailList();
                        if (errorControl != null)
                        {
                            nextControl = errorControl;
                        }
                        else
                        {
                            //nextControl = tComboEditor_rs_SalesSlipCd; // DEL wangf 2013/01/30 FOR Redmine#34513
                            //nextControl = this.uButton_Balance; // ADD wangf 2013/01/30 FOR Redmine#34513  // DEL wangf 2013/02/16 FOR Redmine#34513

                            // -----------------------ADD 2011/01/21 ------------------------->>>>>
                            // 検索(F10)ボタンを無効とする
                            this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = false;
                            // -----------------------ADD 2011/01/21 -------------------------<<<<<
                        }
                    }
                    break;
                // 残高一覧タブ
                case "uTab_RemainList":
                    {
                        // フォーカス移動のみ
                        //nextControl = tComboEditor_rl_RemainType; // DEL wangf 2013/01/30 FOR Redmine#34513
                        //nextControl = this.uButton_Balance; // ADD wangf 2013/01/30 FOR Redmine#34513  // DEL wangf 2013/02/16 FOR Redmine#34513
                        // -----------------------ADD 2011/01/21 ------------------------->>>>>
                        // 検索(F10)ボタンを無効とする
                        this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = true;
                        // -----------------------ADD 2011/01/21 -------------------------<<<<<
                    }
                    break;
            }

            return nextControl;
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD
        #endregion // アローキーコントロール

        #region 次の表示されている詳細条件コントロール取得

        /// <summary>
        /// 拡張検索条件で、表示されている次のコントロールを取得する
        /// </summary>
        /// <param name="controlName"></param>
        /// <returns></returns>
        /// <br>Update Note : SPK車台番号文字列対応に伴う車台番号(VINコード)による抽出を可能にする</br>
        /// <br>Programmer  : FSI厚川 宏</br>
        /// <br>Date        : 2013/03/25</br>
        /// <br>Update Note : K2015/06/16 鮑晶</br>
        /// <br>管理番号    : 11101427-0474690</br>
        /// <br>            : メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
        /// <br>Update Note : 2016/01/21 脇田 靖之</br>
        /// <br>管理番号    : 11270007-00</br>
        /// <br>            : 仕掛一覧№2808 貸出受注対応</br>
        /// <br>            : ①検索条件に「出荷状況」項目を追加</br>
        /// <br>            : ②明細表示に計上数、未計上数項目を追加</br>
        /// <br>Update Note : K2016/02/23 時シン</br>
        /// <br>              ㈱イケモト 抽出条件にて受注作成区分を追加する対応</br>
        /// <br>Update Note: K2017/01/05 譚洪</br>
        /// <br>管理番号   : 11270116-00 得意先電子元帳パッケージ出荷用ソースのマージ</br>
        private Control GetNextControl(string controlName)
        {
            Control nextCtrl = null;

            // switchの方が良い。
            // --------------UPD 2009/12/28------------->>>>>
            //// 入力日（終了）
            //if (controlName == "tDateEdit_AddUpADateEd")
            //{
            //    if (this.tComboEditor_SalesSlipCd.Visible) nextCtrl = this.tComboEditor_SalesSlipCd;
            //    else nextCtrl = this.GetNextControl("tComboEditor_SalesSlipCd");
            //}
            // 売上日（終了）
            if (controlName == "tDateEdit_SalesDateEd")
            {
                if (this.tComboEditor_SalesSlipCd.Visible && this.uCheckSalesSlipCd.Checked && this.uCheckSalesSlipCd.Enabled == true) nextCtrl = this.tComboEditor_SalesSlipCd;
                else nextCtrl = GetNextControl("tComboEditor_SalesSlipCd");
            }
            // 伝票区分
            if (controlName == "tComboEditor_SalesSlipCd")
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 DEL
                //if (this.tEdit_SalesSlipNum.Visible) nextCtrl = this.tEdit_SalesSlipNum;
                //else nextCtrl = GetNextControl("tEdit_SalesSlipNum");
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                //if ( this.tComboEditor_SalesSlipCdDtl.Visible ) nextCtrl = this.tComboEditor_SalesSlipCdDtl;
                if (this.tComboEditor_SalesSlipCdDtl.Visible && this.uCheckSalesSlipCdDtl.Checked && this.uCheckSalesSlipCdDtl.Enabled == true) nextCtrl = this.tComboEditor_SalesSlipCdDtl;
                else nextCtrl = GetNextControl("tComboEditor_SalesSlipCdDtl");
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
            }

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            // 明細区分
            if (controlName == "tComboEditor_SalesSlipCdDtl")
            {
                //if ( this.tEdit_SalesSlipNum.Visible ) nextCtrl = this.tEdit_SalesSlipNum;
                if (this.tEdit_SalesSlipNum.Visible && this.uCheckSalesSlipNum.Checked && this.uCheckSalesSlipNum.Enabled == true) nextCtrl = this.tEdit_SalesSlipNum;
                else nextCtrl = GetNextControl("tEdit_SalesSlipNum");
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

            // 伝票番号
            if (controlName == "tEdit_SalesSlipNum")
            {
                //if (this.tEdit_SalesEmployeeCd.Visible) nextCtrl = this.tEdit_SalesEmployeeCd;
                if (this.tEdit_SalesEmployeeCd.Visible && this.uCheckSalesEmployeeCd.Checked && this.uCheckSalesEmployeeCd.Enabled == true) nextCtrl = this.tEdit_SalesEmployeeCd;
                else nextCtrl = GetNextControl("tEdit_SalesEmployeeCd");
            }

            // 担当者
            if (controlName == "tEdit_SalesEmployeeCd")
            {
                //if (this.tEdit_SalesEmployeeCd.Visible && String.IsNullOrEmpty(this.tEdit_SalesEmployeeCd.Text.Trim()))
                if (this.tEdit_SalesEmployeeCd.Visible && String.IsNullOrEmpty(this.tEdit_SalesEmployeeCd.Text.Trim()) &&
                    this.uCheckSalesEmployeeCd.Checked && this.uCheckSalesEmployeeCd.Enabled == true)
                {
                    nextCtrl = this.uButton_SalesEmployeeCd;
                }
                else
                {
                    //if (this.tEdit_FrontEmployeeCd.Visible) nextCtrl = this.tEdit_FrontEmployeeCd;
                    if (this.tEdit_FrontEmployeeCd.Visible && this.uCheckFrontEmployeeCd.Checked && this.uCheckFrontEmployeeCd.Enabled == true) nextCtrl = this.tEdit_FrontEmployeeCd;
                    else nextCtrl = GetNextControl("tEdit_FrontEmployeeCd");
                }
            }

            // 担当者ガイド
            if (controlName == "uButton_SalesEmployeeCd")
            {
                //if (this.tEdit_FrontEmployeeCd.Visible) nextCtrl = this.tEdit_FrontEmployeeCd;
                if (this.tEdit_FrontEmployeeCd.Visible && this.uCheckFrontEmployeeCd.Checked && this.uCheckFrontEmployeeCd.Enabled == true) nextCtrl = this.tEdit_FrontEmployeeCd;
                else nextCtrl = GetNextControl("tEdit_FrontEmployeeCd");
            }

            // 受注者
            if (controlName == "tEdit_FrontEmployeeCd")
            {
                //if (this.tEdit_FrontEmployeeCd.Visible && String.IsNullOrEmpty(this.tEdit_FrontEmployeeCd.Text.Trim()))
                if (this.tEdit_FrontEmployeeCd.Visible && String.IsNullOrEmpty(this.tEdit_FrontEmployeeCd.Text.Trim()) &&
                    this.uCheckFrontEmployeeCd.Checked && this.uCheckFrontEmployeeCd.Enabled == true)
                {
                    nextCtrl = this.uButton_FrontEmployeeCd;
                }
                else
                {
                    //if (this.tEdit_SalesInputCode.Visible) nextCtrl = this.tEdit_SalesInputCode;
                    if (this.tEdit_SalesInputCode.Visible && this.uCheckSalesInputCode.Checked && this.uCheckSalesInputCode.Enabled == true) nextCtrl = this.tEdit_SalesInputCode;
                    else nextCtrl = GetNextControl("tEdit_SalesInputCode");
                }
            }

            // 受注者ガイド
            if (controlName == "uButton_FrontEmployeeCd")
            {
                //if (this.tEdit_SalesInputCode.Visible) nextCtrl = this.tEdit_SalesInputCode;
                if (this.tEdit_SalesInputCode.Visible && this.uCheckSalesInputCode.Checked && this.uCheckSalesInputCode.Enabled == true) nextCtrl = this.tEdit_SalesInputCode;
                else nextCtrl = GetNextControl("tEdit_SalesInputCode");
            }

            // 発注者
            if (controlName == "tEdit_SalesInputCode")
            {
                //if (this.tEdit_SalesInputCode.Visible && String.IsNullOrEmpty(this.tEdit_SalesInputCode.Text.Trim()))
                if (this.tEdit_SalesInputCode.Visible && String.IsNullOrEmpty(this.tEdit_SalesInputCode.Text.Trim()) &&
                    this.uCheckSalesInputCode.Checked && this.uCheckSalesInputCode.Enabled == true)
                {
                    nextCtrl = this.uButton_SalesInputCode;
                }
                else
                {
                    //if (this.tEdit_CarMngCode.Visible) nextCtrl = this.tEdit_CarMngCode;
                    if (this.tEdit_CarMngCode.Visible && this.uCheckCarMngCode.Checked && this.uCheckCarMngCode.Enabled == true) nextCtrl = this.tEdit_CarMngCode;
                    else nextCtrl = GetNextControl("tEdit_CarMngCode");
                }
            }

            // 発注者ガイド
            if (controlName == "uButton_SalesInputCode")
            {
                //if (this.tEdit_CarMngCode.Visible) nextCtrl = this.tEdit_CarMngCode;
                if (this.tEdit_CarMngCode.Visible && this.uCheckCarMngCode.Checked && this.uCheckCarMngCode.Enabled == true) nextCtrl = this.tEdit_CarMngCode;
                else nextCtrl = GetNextControl("tEdit_CarMngCode");
            }
            // --- UPD 2009/10/22 ----->>>>>
            // 管理番号
            if (controlName == "tEdit_CarMngCode")
            {
                //if (this.tEdit_CarMngCode.Visible && String.IsNullOrEmpty(this.tEdit_CarMngCode.Text.Trim()))
                if (this.tEdit_CarMngCode.Visible && String.IsNullOrEmpty(this.tEdit_CarMngCode.Text.Trim()) &&
                    this.uCheckCarMngCode.Checked && this.uCheckCarMngCode.Enabled == true)
                {
                    nextCtrl = this.tComboEditor_SearchDiv;
                }
                else
                {
                    //if (this.tEdit_ModelFullName.Visible) nextCtrl = this.tEdit_ModelFullName;
                    if (this.tEdit_ModelFullName.Visible && this.uCheckModelFullName.Checked && this.uCheckModelFullName.Enabled == true) nextCtrl = this.tEdit_ModelFullName;
                    else nextCtrl = GetNextControl("tEdit_ModelFullName");
                }
            }
            // 管理番号あいまい条件
            if (controlName == "tComboEditor_SearchDiv")
            {
                //if (this.tEdit_ModelFullName.Visible) nextCtrl = this.tEdit_ModelFullName;
                if (this.tEdit_ModelFullName.Visible && this.uCheckModelFullName.Checked && this.uCheckModelFullName.Enabled == true) nextCtrl = this.tEdit_ModelFullName;
                else nextCtrl = GetNextControl("tEdit_ModelFullName");
            }
            // --- UPD 2009/10/22 -----<<<<<
            // 車種名称
            if (controlName == "tEdit_ModelFullName")
            {
                //if (this.tEdit_ModelFullName.Visible && String.IsNullOrEmpty(this.tEdit_ModelFullName.Text.Trim()))
                if (this.tEdit_ModelFullName.Visible && String.IsNullOrEmpty(this.tEdit_ModelFullName.Text.Trim()) &&
                    this.uCheckModelFullName.Checked && this.uCheckModelFullName.Enabled == true)
                {
                    nextCtrl = this.tComboEditor_ModelFullNameFuzzy;
                }
                else
                {
                    //if (this.tEdit_FullModel.Visible) nextCtrl = this.tEdit_FullModel;
                    if (this.tEdit_FullModel.Visible && this.uCheckFullModel.Checked && this.uCheckFullModel.Enabled == true) nextCtrl = this.tEdit_FullModel;
                    else nextCtrl = GetNextControl("tEdit_FullModel");
                }
            }

            // 車種名称あいまい条件
            if (controlName == "tComboEditor_ModelFullNameFuzzy")
            {
                //if (this.tEdit_FullModel.Visible) nextCtrl = this.tEdit_FullModel;
                if (this.tEdit_FullModel.Visible && this.uCheckFullModel.Checked && this.uCheckFullModel.Enabled == true) nextCtrl = this.tEdit_FullModel;
                else nextCtrl = GetNextControl("tEdit_FullModel");
            }

            // 型式
            if (controlName == "tEdit_FullModel")
            {
                //if (this.tEdit_FullModel.Visible && String.IsNullOrEmpty(this.tEdit_FullModel.Text.Trim()))
                if (this.tEdit_FullModel.Visible && String.IsNullOrEmpty(this.tEdit_FullModel.Text.Trim()) &&
                    this.uCheckFullModel.Checked && this.uCheckFullModel.Enabled == true)
                {
                    nextCtrl = this.tComboEditor_FullModelFuzzy;
                }
                else
                {
                    //if (this.tNedit_SearchFrameNo.Visible) nextCtrl = this.tNedit_SearchFrameNo;
                    // ---------DEL 2013/03/25---------->>>>>
                    //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true) nextCtrl = this.tNedit_SearchFrameNo;
                    //else nextCtrl = GetNextControl("tNedit_SearchFrameNo");
                    // ---------DEL 2013/03/25----------<<<<<
                    // ---------ADD 2013/03/25---------->>>>>
                    if (this.tEdit_SearchFrameNo.Visible && this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true) nextCtrl = this.tEdit_SearchFrameNo;
                    else nextCtrl = GetNextControl("tEdit_SearchFrameNo");
                    // ---------ADD 2013/03/25----------<<<<<
                }
            }

            // 型式あいまい条件
            if (controlName == "tComboEditor_FullModelFuzzy")
            {
                //if (this.tNedit_SearchFrameNo.Visible) nextCtrl = this.tNedit_SearchFrameNo;
                // ---------DEL 2013/03/25---------->>>>>
                //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true) nextCtrl = this.tNedit_SearchFrameNo;
                //else nextCtrl = GetNextControl("tNedit_SearchFrameNo");
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                if (this.tEdit_SearchFrameNo.Visible && this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true) nextCtrl = this.tEdit_SearchFrameNo;
                else nextCtrl = GetNextControl("tEdit_SearchFrameNo");
                // ---------ADD 2013/03/25----------<<<<<
            }

            // 車台No
            // -----------UPD 2010/08/05---------->>>>>
            // ---------DEL 2013/03/25---------->>>>>
            //if (controlName == "tNedit_SearchFrameNo")
            // ---------DEL 2013/03/25----------<<<<<
            // ---------ADD 2013/03/25---------->>>>>
            if (controlName == "tEdit_SearchFrameNo")
            // ---------ADD 2013/03/25----------<<<<<
            {
                ////if (this.tEdit_PartySalesSlipNum.Visible) nextCtrl = this.tEdit_PartySalesSlipNum;
                //if (this.tEdit_PartySalesSlipNum.Visible && this.uCheckPartySalesSlipNum.Checked && this.uCheckPartySalesSlipNum.Enabled == true) nextCtrl = this.tEdit_PartySalesSlipNum;
                //else nextCtrl = GetNextControl("tEdit_PartySalesSlipNum");
                // ---------DEL 2013/03/25---------->>>>>
                //if (this.tNedit_SearchFrameNo.Visible && this.tNedit_SearchFrameNo.GetInt() == 0 &&
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                if (this.tEdit_SearchFrameNo.Visible && string.IsNullOrEmpty(this.tEdit_SearchFrameNo.Text) &&
                // ---------ADD 2013/03/25----------<<<<<
                    this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true)
                {
                    nextCtrl = this.tComboEditor_SearchFrameNoFuzzy;
                }
                else
                {
                    if (this.tEdit_PartySalesSlipNum.Visible && this.uCheckPartySalesSlipNum.Checked && this.uCheckPartySalesSlipNum.Enabled == true) nextCtrl = this.tEdit_PartySalesSlipNum;
                    else nextCtrl = GetNextControl("tEdit_PartySalesSlipNum");
                }
            }
            // 車台番号あいまい条件
            if (controlName == "tComboEditor_SearchFrameNoFuzzy")
            {
                if (this.tEdit_PartySalesSlipNum.Visible && this.uCheckPartySalesSlipNum.Checked && this.uCheckPartySalesSlipNum.Enabled == true) nextCtrl = this.tEdit_PartySalesSlipNum;
                else nextCtrl = GetNextControl("tEdit_PartySalesSlipNum");
            }
            // -----------UPD 2010/08/05----------<<<<<

            // 指示書No
            if (controlName == "tEdit_PartySalesSlipNum")
            {
                //if (this.tEdit_ColorName1.Visible) nextCtrl = this.tEdit_ColorName1;
                if (this.tEdit_ColorName1.Visible && this.uCheckColorName1.Checked && this.uCheckColorName1.Enabled == true) nextCtrl = this.tEdit_ColorName1;
                else nextCtrl = GetNextControl("tEdit_ColorName1");
            }

            // カラー名称
            if (controlName == "tEdit_ColorName1")
            {
                //if (this.tEdit_ColorName1.Visible && String.IsNullOrEmpty(this.tEdit_ColorName1.Text.Trim()))
                if (this.tEdit_ColorName1.Visible && String.IsNullOrEmpty(this.tEdit_ColorName1.Text.Trim()) &&
                    this.uCheckColorName1.Checked && this.uCheckColorName1.Enabled == true)
                {
                    nextCtrl = this.tComboEditor_ColorName1Fuzzy;
                }
                else
                {
                    //if (this.tEdit_TrimName.Visible) nextCtrl = this.tEdit_TrimName;
                    if (this.tEdit_TrimName.Visible && this.uCheckTrimName.Checked && this.uCheckTrimName.Enabled == true) nextCtrl = this.tEdit_TrimName;
                    else nextCtrl = GetNextControl("tEdit_TrimName");
                }
            }

            // カラー名称あいまい条件
            if (controlName == "tComboEditor_ColorName1Fuzzy")
            {
                //if (this.tEdit_TrimName.Visible) nextCtrl = this.tEdit_TrimName;
                if (this.tEdit_TrimName.Visible && this.uCheckTrimName.Checked && this.uCheckTrimName.Enabled == true) nextCtrl = this.tEdit_TrimName;
                else nextCtrl = GetNextControl("tEdit_TrimName");
            }

            // トリム名称
            if (controlName == "tEdit_TrimName")
            {
                //if (this.tEdit_TrimName.Visible && String.IsNullOrEmpty(this.tEdit_TrimName.Text.Trim()))
                if (this.tEdit_TrimName.Visible && String.IsNullOrEmpty(this.tEdit_TrimName.Text.Trim()) &&
                    this.uCheckTrimName.Checked && this.uCheckTrimName.Enabled == true)
                {
                    nextCtrl = this.tComboEditor_TrimNameFuzzy;
                }
                else
                {
                    //if (this.tComboEditor_DataSendCode.Visible) nextCtrl = this.tComboEditor_DataSendCode;
                    if (this.tComboEditor_DataSendCode.Visible && this.uCheckDataSendCode.Checked && this.uCheckDataSendCode.Enabled == true) nextCtrl = this.tComboEditor_DataSendCode;
                    else nextCtrl = GetNextControl("tComboEditor_DataSendCode");
                }
            }

            // トリム名称あいまい条件
            if (controlName == "tComboEditor_TrimNameFuzzy")
            {
                //if (this.tComboEditor_DataSendCode.Visible) nextCtrl = this.tComboEditor_DataSendCode;
                if (this.tComboEditor_DataSendCode.Visible && this.uCheckDataSendCode.Checked && this.uCheckDataSendCode.Enabled == true) nextCtrl = this.tComboEditor_DataSendCode;
                else nextCtrl = GetNextControl("tComboEditor_DataSendCode");
            }

            // UOE送信
            if (controlName == "tComboEditor_DataSendCode")
            {
                //if (this.tEdit_SlipNote.Visible) nextCtrl = this.tEdit_SlipNote;
                if (this.tEdit_SlipNote.Visible && this.uCheckSlipNote.Checked && this.uCheckSlipNote.Enabled == true) nextCtrl = this.tEdit_SlipNote;
                else nextCtrl = GetNextControl("tEdit_SlipNote");
            }

            // 備考
            if (controlName == "tEdit_SlipNote")
            {
                //if (this.tEdit_SlipNote.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote.Text.Trim()))
                if (this.tEdit_SlipNote.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote.Text.Trim()) &&
                    this.uCheckSlipNote.Checked && this.uCheckSlipNote.Enabled == true)
                {
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                    //nextCtrl = this.tComboEditor_SlipNoteFuzzy;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                    nextCtrl = this.uButton_SlipNote;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                }
                else
                {
                    //if (this.tEdit_SlipNote2.Visible) nextCtrl = this.tEdit_SlipNote2;
                    if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2.Checked && this.uCheckSlipNote2.Enabled == true) nextCtrl = this.tEdit_SlipNote2;
                    else nextCtrl = GetNextControl("tEdit_SlipNote2");
                }
            }

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            // 備考ガイド
            if (controlName == "uButton_SlipNote")
            {
                //if ( this.tComboEditor_SlipNoteFuzzy.Visible ) nextCtrl = this.tComboEditor_SlipNoteFuzzy;
                if (this.tComboEditor_SlipNoteFuzzy.Visible && this.uCheckSlipNote.Checked && this.uCheckSlipNote.Enabled == true) nextCtrl = this.tComboEditor_SlipNoteFuzzy;
                else nextCtrl = GetNextControl("tComboEditor_SlipNoteFuzzy");
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

            // 備考あいまい条件
            if (controlName == "tComboEditor_SlipNoteFuzzy")
            {
                //if (this.tEdit_SlipNote2.Visible) nextCtrl = this.tEdit_SlipNote2;
                if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2.Checked && this.uCheckSlipNote2.Enabled == true) nextCtrl = this.tEdit_SlipNote2;
                else nextCtrl = GetNextControl("tEdit_SlipNote2");
            }

            // 備考2
            if (controlName == "tEdit_SlipNote2")
            {
                //if (this.tEdit_SlipNote2.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote2.Text.Trim()))
                if (this.tEdit_SlipNote2.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote2.Text.Trim()) &&
                    this.uCheckSlipNote2.Checked && this.uCheckSlipNote2.Enabled == true)
                {
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                    //nextCtrl = this.tComboEditor_SlipNote2Fuzzy;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                    nextCtrl = this.uButton_SlipNote2;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                }
                else
                {
                    //if (this.tEdit_SlipNote3.Visible) nextCtrl = this.tEdit_SlipNote3;
                    if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3.Checked && this.uCheckSlipNote3.Enabled == true) nextCtrl = this.tEdit_SlipNote3;
                    else nextCtrl = GetNextControl("tEdit_SlipNote3");
                }
            }

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            // 備考２ガイド
            if (controlName == "uButton_SlipNote2")
            {
                //if ( this.tComboEditor_SlipNote2Fuzzy.Visible ) nextCtrl = this.tComboEditor_SlipNote2Fuzzy;
                if (this.tComboEditor_SlipNote2Fuzzy.Visible && this.uCheckSlipNote2.Checked && this.uCheckSlipNote2.Enabled == true) nextCtrl = this.tComboEditor_SlipNote2Fuzzy;
                else nextCtrl = GetNextControl("tComboEditor_SlipNote2Fuzzy");
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

            // 備考2あいまい条件
            if (controlName == "tComboEditor_SlipNote2Fuzzy")
            {
                //if (this.tEdit_SlipNote3.Visible) nextCtrl = this.tEdit_SlipNote3;
                if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3.Checked && this.uCheckSlipNote3.Enabled == true) nextCtrl = this.tEdit_SlipNote3;
                else nextCtrl = GetNextControl("tEdit_SlipNote3");
            }

            // 備考3
            if (controlName == "tEdit_SlipNote3")
            {
                //if (this.tEdit_SlipNote3.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote3.Text.Trim()))
                if (this.tEdit_SlipNote3.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote3.Text.Trim()) &&
                    this.uCheckSlipNote3.Checked && this.uCheckSlipNote3.Enabled == true)
                {
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 DEL
                    //nextCtrl = this.tComboEditor_SlipNote3Fuzzy;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
                    nextCtrl = this.uButton_SlipNote3;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD
                }
                else
                {
                    //if (this.tEdit_UoeRemark1.Visible) nextCtrl = this.tEdit_UoeRemark1;
                    if (this.tEdit_UoeRemark1.Visible && this.uCheckUoeRemark1.Checked && this.uCheckUoeRemark1.Enabled == true) nextCtrl = this.tEdit_UoeRemark1;
                    else nextCtrl = GetNextControl("tEdit_UoeRemark1");
                }
            }

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/13 ADD
            // 備考３ガイド
            if (controlName == "uButton_SlipNote3")
            {
                //if ( this.tComboEditor_SlipNote3Fuzzy.Visible ) nextCtrl = this.tComboEditor_SlipNote3Fuzzy;
                if (this.tComboEditor_SlipNote3Fuzzy.Visible && this.uCheckSlipNote3.Checked && this.uCheckSlipNote3.Enabled == true) nextCtrl = this.tComboEditor_SlipNote3Fuzzy;
                else nextCtrl = GetNextControl("tComboEditor_SlipNote3Fuzzy");
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/13 ADD

            // 備考3あいまい条件
            if (controlName == "tComboEditor_SlipNote3Fuzzy")
            {
                //if (this.tEdit_UoeRemark1.Visible) nextCtrl = this.tEdit_UoeRemark1;
                if (this.tEdit_UoeRemark1.Visible && this.uCheckUoeRemark1.Checked && this.uCheckUoeRemark1.Enabled == true) nextCtrl = this.tEdit_UoeRemark1;
                else nextCtrl = GetNextControl("tEdit_UoeRemark1");
            }

            // UOEリマーク1
            if (controlName == "tEdit_UoeRemark1")
            {
                //if (this.tEdit_UoeRemark1.Visible && String.IsNullOrEmpty(this.tEdit_UoeRemark1.Text.Trim()))
                if (this.tEdit_UoeRemark1.Visible && String.IsNullOrEmpty(this.tEdit_UoeRemark1.Text.Trim()) &&
                    this.uCheckUoeRemark1.Checked && this.uCheckUoeRemark1.Enabled == true)
                {
                    nextCtrl = this.tComboEditor_UoeRemark1Fuzzy;
                }
                else
                {
                    //if (this.tEdit_UoeRemark2.Visible) nextCtrl = this.tEdit_UoeRemark2;
                    if (this.tEdit_UoeRemark2.Visible && this.uCheckUoeRemark2.Checked && this.uCheckUoeRemark2.Enabled == true) nextCtrl = this.tEdit_UoeRemark2;
                    else nextCtrl = GetNextControl("tEdit_UoeRemark2");
                }
            }

            // UOEリマーク1あいまい条件
            if (controlName == "tComboEditor_UoeRemark1Fuzzy")
            {
                //if (this.tEdit_UoeRemark2.Visible) nextCtrl = this.tEdit_UoeRemark2;
                if (this.tEdit_UoeRemark2.Visible && this.uCheckUoeRemark2.Checked && this.uCheckUoeRemark2.Enabled == true) nextCtrl = this.tEdit_UoeRemark2;
                else nextCtrl = GetNextControl("tEdit_UoeRemark2");
            }

            // UOEリマーク2
            if (controlName == "tEdit_UoeRemark2")
            {
                //if (this.tEdit_UoeRemark2.Visible && String.IsNullOrEmpty(this.tEdit_UoeRemark2.Text.Trim()))
                if (this.tEdit_UoeRemark2.Visible && String.IsNullOrEmpty(this.tEdit_UoeRemark2.Text.Trim()) &&
                    this.uCheckUoeRemark2.Checked && this.uCheckUoeRemark2.Enabled == true)
                {
                    nextCtrl = this.tComboEditor_UoeRemark2Fuzzy;
                }
                else
                {
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 DEL
                    //if (this.tEdit_BlGroupCode.Visible) nextCtrl = this.tEdit_BlGroupCode;
                    //else nextCtrl = GetNextControl("tEdit_BlGroupCode");
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                    //if ( this.tEdit_GoodsLGroup.Visible ) nextCtrl = this.tEdit_GoodsLGroup;
                    if (this.tEdit_GoodsLGroup.Visible && this.uCheckGoodsLGroup.Checked && this.uCheckGoodsLGroup.Enabled == true) nextCtrl = this.tEdit_GoodsLGroup;
                    else nextCtrl = GetNextControl("tEdit_GoodsLGroup");
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
                }
            }

            // UOEリマーク2あいまい条件
            if (controlName == "tComboEditor_UoeRemark2Fuzzy")
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 DEL
                //if (this.tEdit_BlGroupCode.Visible) nextCtrl = this.tEdit_BlGroupCode;
                //else nextCtrl = GetNextControl("tEdit_BlGroupCode");
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                //if ( this.tEdit_GoodsLGroup.Visible ) nextCtrl = this.tEdit_GoodsLGroup;
                if (this.tEdit_GoodsLGroup.Visible && this.uCheckGoodsLGroup.Checked && this.uCheckGoodsLGroup.Enabled == true) nextCtrl = this.tEdit_GoodsLGroup;
                else nextCtrl = GetNextControl("tEdit_GoodsLGroup");
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
            }

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            // 商品大分類
            if (controlName == "tEdit_GoodsLGroup")
            {
                //if ( this.tEdit_GoodsLGroup.Visible && String.IsNullOrEmpty( this.tEdit_GoodsLGroup.Text.Trim() ) )
                if (this.tEdit_GoodsLGroup.Visible && String.IsNullOrEmpty(this.tEdit_GoodsLGroup.Text.Trim()) &&
                    this.uCheckGoodsLGroup.Checked && this.uCheckGoodsLGroup.Enabled == true)
                {
                    nextCtrl = this.uButton_GoodsLGroup;
                }
                else
                {
                    //if (this.tEdit_GoodsMGroup.Visible) nextCtrl = this.tEdit_GoodsMGroup;
                    if (this.tEdit_GoodsMGroup.Visible && this.uCheckGoodsMGroup.Checked && this.uCheckGoodsMGroup.Enabled == true) nextCtrl = this.tEdit_GoodsMGroup;
                    else nextCtrl = GetNextControl("tEdit_GoodsMGroup");
                }
            }

            // 商品大分類ガイド
            if (controlName == "uButton_GoodsLGroup")
            {
                //if ( this.tEdit_GoodsMGroup.Visible ) nextCtrl = this.tEdit_GoodsMGroup;
                if (this.tEdit_GoodsMGroup.Visible && this.uCheckGoodsMGroup.Checked && this.uCheckGoodsMGroup.Enabled == true) nextCtrl = this.tEdit_GoodsMGroup;
                else nextCtrl = GetNextControl("tEdit_GoodsMGroup");
            }

            // 商品中分類
            if (controlName == "tEdit_GoodsMGroup")
            {
                //if ( this.tEdit_GoodsMGroup.Visible && String.IsNullOrEmpty( this.tEdit_GoodsMGroup.Text.Trim() ) )
                if (this.tEdit_GoodsMGroup.Visible && String.IsNullOrEmpty(this.tEdit_GoodsMGroup.Text.Trim()) &&
                    this.uCheckGoodsMGroup.Checked && this.uCheckGoodsMGroup.Enabled == true)
                {
                    nextCtrl = this.uButton_GoodsMGroup;
                }
                else
                {
                    //if ( this.tEdit_BlGroupCode.Visible ) nextCtrl = this.tEdit_BlGroupCode;
                    if (this.tEdit_BlGroupCode.Visible && this.uCheckBLGroupCode.Checked && this.uCheckBLGroupCode.Enabled == true) nextCtrl = this.tEdit_BlGroupCode;
                    else nextCtrl = GetNextControl("tEdit_BlGroupCode");
                }
            }

            // 商品中分類ガイド
            if (controlName == "uButton_GoodsMGroup")
            {
                //if ( this.tEdit_BlGroupCode.Visible ) nextCtrl = this.tEdit_BlGroupCode;
                if (this.tEdit_BlGroupCode.Visible && this.uCheckBLGroupCode.Checked && this.uCheckBLGroupCode.Enabled == true) nextCtrl = this.tEdit_BlGroupCode;
                else nextCtrl = GetNextControl("tEdit_BlGroupCode");
            }

            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

            // BLグループ
            if (controlName == "tEdit_BlGroupCode")
            {
                //if (this.tEdit_BlGroupCode.Visible && String.IsNullOrEmpty(this.tEdit_BlGroupCode.Text.Trim()))
                if (this.tEdit_BlGroupCode.Visible && String.IsNullOrEmpty(this.tEdit_BlGroupCode.Text.Trim()) &&
                    this.uCheckBLGroupCode.Checked && this.uCheckBLGroupCode.Enabled == true)
                {
                    nextCtrl = this.uButton_BlGroupCode;
                }
                else
                {
                    //if (this.tEdit_BlGoodsCode.Visible) nextCtrl = this.tEdit_BlGoodsCode;
                    if (this.tEdit_BlGoodsCode.Visible && this.uCheckBLGoodsCode.Checked && this.uCheckBLGoodsCode.Enabled == true) nextCtrl = this.tEdit_BlGoodsCode;
                    else nextCtrl = GetNextControl("tEdit_BlGoodsCode");
                }
            }

            // BLグループガイド
            if (controlName == "uButton_BlGroupCode")
            {
                //if (this.tEdit_BlGoodsCode.Visible) nextCtrl = this.tEdit_BlGoodsCode;
                if (this.tEdit_BlGoodsCode.Visible && this.uCheckBLGoodsCode.Checked && this.uCheckBLGoodsCode.Enabled == true) nextCtrl = this.tEdit_BlGoodsCode;
                else nextCtrl = GetNextControl("tEdit_BlGoodsCode");
            }

            // BLコード
            if (controlName == "tEdit_BlGoodsCode")
            {
                //if (this.tEdit_BlGoodsCode.Visible && String.IsNullOrEmpty(this.tEdit_BlGoodsCode.Text.Trim()))
                if (this.tEdit_BlGoodsCode.Visible && String.IsNullOrEmpty(this.tEdit_BlGoodsCode.Text.Trim()) &&
                    this.uCheckBLGoodsCode.Checked && this.uCheckBLGoodsCode.Enabled == true)
                {
                    nextCtrl = this.uButton_BlGoodsCode;
                }
                else
                {
                    //if (this.tEdit_GoodsName.Visible) nextCtrl = this.tEdit_GoodsName;
                    if (this.tEdit_GoodsName.Visible && this.uCheckGoodsName.Checked && this.uCheckGoodsName.Enabled == true) nextCtrl = this.tEdit_GoodsName;
                    else nextCtrl = GetNextControl("tEdit_GoodsName");
                }
            }

            // BLコードガイド
            if (controlName == "uButton_BlGoodsCode")
            {
                //if (this.tEdit_GoodsName.Visible) nextCtrl = this.tEdit_GoodsName;
                if (this.tEdit_GoodsName.Visible && this.uCheckGoodsName.Checked && this.uCheckGoodsName.Enabled == true) nextCtrl = this.tEdit_GoodsName;
                else nextCtrl = GetNextControl("tEdit_GoodsName");
            }

            // 品名
            if (controlName == "tEdit_GoodsName")
            {
                //if (this.tEdit_GoodsName.Visible && String.IsNullOrEmpty(this.tEdit_GoodsName.Text.Trim()))
                if (this.tEdit_GoodsName.Visible && String.IsNullOrEmpty(this.tEdit_GoodsName.Text.Trim()) &&
                    this.uCheckGoodsName.Checked && this.uCheckGoodsName.Enabled == true)
                {
                    nextCtrl = this.tComboEditor_GoodsNameFuzzy;
                }
                else
                {
                    //if (this.tEdit_GoodsNo.Visible) nextCtrl = this.tEdit_GoodsNo;
                    if (this.tEdit_GoodsNo.Visible && this.uCheckGoodsNo.Checked && this.uCheckGoodsNo.Enabled == true) nextCtrl = this.tEdit_GoodsNo;
                    else nextCtrl = GetNextControl("tEdit_GoodsNo");
                }
            }

            // 品名あいまい条件
            if (controlName == "tComboEditor_GoodsNameFuzzy")
            {
                //if (this.tEdit_GoodsNo.Visible) nextCtrl = this.tEdit_GoodsNo;
                if (this.tEdit_GoodsNo.Visible && this.uCheckGoodsNo.Checked && this.uCheckGoodsNo.Enabled == true) nextCtrl = this.tEdit_GoodsNo;
                else nextCtrl = GetNextControl("tEdit_GoodsNo");
            }

            // 品番
            if (controlName == "tEdit_GoodsNo")
            {
                //if (this.tEdit_GoodsNo.Visible && String.IsNullOrEmpty(this.tEdit_GoodsNo.Text.Trim()))\
                if (this.tEdit_GoodsNo.Visible && String.IsNullOrEmpty(this.tEdit_GoodsNo.Text.Trim()) &&
                    this.uCheckGoodsNo.Checked && this.uCheckGoodsNo.Enabled == true)
                {
                    nextCtrl = this.tComboEditor_GoodsNoFuzzy;
                }
                else
                {
                    //if (this.tEdit_MakerCd.Visible) nextCtrl = this.tEdit_MakerCd;
                    if (this.tEdit_MakerCd.Visible && this.uCheckGoodsMakerCd.Checked && this.uCheckGoodsMakerCd.Enabled == true) nextCtrl = this.tEdit_MakerCd;
                    else nextCtrl = GetNextControl("tEdit_MakerCd");
                }
            }

            // 品番あいまい条件
            if (controlName == "tComboEditor_GoodsNoFuzzy")
            {
                //if (this.tEdit_MakerCd.Visible) nextCtrl = this.tEdit_MakerCd;
                if (this.tEdit_MakerCd.Visible && this.uCheckGoodsMakerCd.Checked && this.uCheckGoodsMakerCd.Enabled == true) nextCtrl = this.tEdit_MakerCd;
                else nextCtrl = GetNextControl("tEdit_MakerCd");
            }

            // メーカーコード
            if (controlName == "tEdit_MakerCd")
            {
                //if (this.tEdit_MakerCd.Visible && String.IsNullOrEmpty(this.tEdit_MakerCd.Text.Trim()))
                if (this.tEdit_MakerCd.Visible && String.IsNullOrEmpty(this.tEdit_MakerCd.Text.Trim()) &&
                    this.uCheckGoodsMakerCd.Checked && this.uCheckGoodsMakerCd.Enabled == true)
                {
                    nextCtrl = this.uButton_MakerCd;
                }
                else
                {
                    //if (this.tEdit_SalesCode.Visible) nextCtrl = this.tEdit_SalesCode;
                    if (this.tEdit_SalesCode.Visible && this.uCheckSalesCode.Checked && this.uCheckSalesCode.Enabled == true) nextCtrl = this.tEdit_SalesCode;
                    else nextCtrl = GetNextControl("tEdit_SalesCode");
                }
            }

            // メーカーガイド
            if (controlName == "uButton_MakerCd")
            {
                //if (this.tEdit_SalesCode.Visible) nextCtrl = this.tEdit_SalesCode;
                if (this.tEdit_SalesCode.Visible && this.uCheckSalesCode.Checked && this.uCheckSalesCode.Enabled == true) nextCtrl = this.tEdit_SalesCode;
                else nextCtrl = GetNextControl("tEdit_SalesCode");
            }

            // 販売区分コード
            if (controlName == "tEdit_SalesCode")
            {
                //if (this.tEdit_SalesCode.Visible && String.IsNullOrEmpty(this.tEdit_SalesCode.Text.Trim()))
                if (this.tEdit_SalesCode.Visible && String.IsNullOrEmpty(this.tEdit_SalesCode.Text.Trim()) &&
                    this.uCheckSalesCode.Checked && this.uCheckSalesCode.Enabled == true)
                {
                    nextCtrl = this.uButton_SalesCode;
                }
                else
                {
                    //if (this.tEdit_EnterpriseGanreCode.Visible) nextCtrl = this.tEdit_EnterpriseGanreCode;
                    if (this.tEdit_EnterpriseGanreCode.Visible && this.uCheckEnterpriseGanreCode.Checked && this.uCheckEnterpriseGanreCode.Enabled == true) nextCtrl = this.tEdit_EnterpriseGanreCode;
                    else nextCtrl = GetNextControl("tEdit_EnterpriseGanreCode");
                }
            }

            // 販売区分ガイド
            if (controlName == "uButton_SalesCode")
            {
                //if (this.tEdit_EnterpriseGanreCode.Visible) nextCtrl = this.tEdit_EnterpriseGanreCode;
                if (this.tEdit_EnterpriseGanreCode.Visible && this.uCheckEnterpriseGanreCode.Checked && this.uCheckEnterpriseGanreCode.Enabled == true) nextCtrl = this.tEdit_EnterpriseGanreCode;
                else nextCtrl = GetNextControl("tEdit_EnterpriseGanreCode");
            }

            // 自社分類コード
            if (controlName == "tEdit_EnterpriseGanreCode")
            {
                //if (this.tEdit_EnterpriseGanreCode.Visible && String.IsNullOrEmpty(this.tEdit_EnterpriseGanreCode.Text.Trim()))
                if (this.tEdit_EnterpriseGanreCode.Visible && String.IsNullOrEmpty(this.tEdit_EnterpriseGanreCode.Text.Trim()) &&
                    this.uCheckEnterpriseGanreCode.Checked && this.uCheckEnterpriseGanreCode.Enabled == true)
                {
                    nextCtrl = this.uButton_EnterpriseGanreCode;
                }
                else
                {
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 DEL
                    //if (this.tComboEditor_SalesOrderDivCd.Visible) nextCtrl = this.tComboEditor_SalesOrderDivCd;
                    //else nextCtrl = GetNextControl("tComboEditor_SalesOrderDivCd");
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                    //if ( this.tComboEditor_GoodsKindCode.Visible ) nextCtrl = this.tComboEditor_GoodsKindCode;
                    if (this.tComboEditor_GoodsKindCode.Visible && this.uCheckGoodsKindCode.Checked && this.uCheckGoodsKindCode.Enabled == true) nextCtrl = this.tComboEditor_GoodsKindCode;
                    else nextCtrl = GetNextControl("tComboEditor_GoodsKindCode");
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
                }
            }

            // 自社分類ガイド
            if (controlName == "uButton_EnterpriseGanreCode")
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 DEL
                //if (this.tComboEditor_SalesOrderDivCd.Visible) nextCtrl = this.tComboEditor_SalesOrderDivCd;
                //else nextCtrl = GetNextControl("tComboEditor_SalesOrderDivCd");
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                //if ( this.tComboEditor_GoodsKindCode.Visible ) nextCtrl = this.tComboEditor_GoodsKindCode;
                if (this.tComboEditor_GoodsKindCode.Visible && this.uCheckGoodsKindCode.Checked && this.uCheckGoodsKindCode.Enabled == true) nextCtrl = this.tComboEditor_GoodsKindCode;
                else nextCtrl = GetNextControl("tComboEditor_GoodsKindCode");
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
            }

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            // 商品属性
            if (controlName == "tComboEditor_GoodsKindCode")
            {
                //if ( this.tComboEditor_SalesOrderDivCd.Visible ) nextCtrl = this.tComboEditor_SalesOrderDivCd;
                if (this.tComboEditor_SalesOrderDivCd.Visible && this.uCheckSalesOrderDivCd.Checked && this.uCheckSalesOrderDivCd.Enabled == true) nextCtrl = this.tComboEditor_SalesOrderDivCd;
                else nextCtrl = GetNextControl("tComboEditor_SalesOrderDivCd");
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

            // 在庫取寄区分
            if (controlName == "tComboEditor_SalesOrderDivCd")
            {
                //if (this.tEdit_WarehouseCd.Visible) nextCtrl = this.tEdit_WarehouseCd;
                if (this.tEdit_WarehouseCd.Visible && this.uCheckWarehouseCode.Checked && this.uCheckWarehouseCode.Enabled == true) nextCtrl = this.tEdit_WarehouseCd;
                else nextCtrl = GetNextControl("tEdit_WarehouseCd");
            }

            // 倉庫コード
            if (controlName == "tEdit_WarehouseCd")
            {
                //if (this.tEdit_WarehouseCd.Visible && String.IsNullOrEmpty(this.tEdit_WarehouseCd.Text.Trim()))
                if (this.tEdit_WarehouseCd.Visible && String.IsNullOrEmpty(this.tEdit_WarehouseCd.Text.Trim()) &&
                    this.uCheckWarehouseCode.Checked && this.uCheckWarehouseCode.Enabled == true)
                {
                    nextCtrl = this.uButton_WarehouseCd;
                }
                else
                {
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 DEL
                    //if ( this.tEdit_SupplierSlipNo.Visible ) nextCtrl = this.tEdit_SupplierSlipNo;
                    //else nextCtrl = GetNextControl("tEdit_SupplierSlipNo");
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                    //if ( this.tEdit_WarehouseShelfNo.Visible ) nextCtrl = this.tEdit_WarehouseShelfNo;
                    if (this.tEdit_WarehouseShelfNo.Visible && this.uCheckWarehouseShelfNo.Checked && this.uCheckWarehouseShelfNo.Enabled == true) nextCtrl = this.tEdit_WarehouseShelfNo;
                    else nextCtrl = GetNextControl("tEdit_WarehouseShelfNo");
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
                }
            }

            // 倉庫ガイド
            if (controlName == "uButton_WarehouseCd")
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 DEL
                //if ( this.tEdit_SupplierSlipNo.Visible ) nextCtrl = this.tEdit_SupplierSlipNo;
                //else nextCtrl = GetNextControl("tEdit_SupplierSlipNo");
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
                //if ( this.tEdit_WarehouseShelfNo.Visible ) nextCtrl = this.tEdit_WarehouseShelfNo;
                if (this.tEdit_WarehouseShelfNo.Visible && this.uCheckWarehouseShelfNo.Checked && this.uCheckWarehouseShelfNo.Enabled == true) nextCtrl = this.tEdit_WarehouseShelfNo;
                else nextCtrl = GetNextControl("tEdit_WarehouseShelfNo");
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD
            }

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/17 ADD
            // 棚番
            if (controlName == "tEdit_WarehouseShelfNo")
            {
                //if ( this.tEdit_WarehouseShelfNo.Visible && String.IsNullOrEmpty( this.tEdit_WarehouseShelfNo.Text.Trim() ) )
                if (this.tEdit_WarehouseShelfNo.Visible && String.IsNullOrEmpty(this.tEdit_WarehouseShelfNo.Text.Trim()) &&
                    this.uCheckWarehouseShelfNo.Checked && this.uCheckWarehouseShelfNo.Enabled == true)
                {
                    nextCtrl = this.tComboEditor_WarehouseShelfNoFuzzy;
                }
                else
                {
                    //if ( this.tEdit_SupplierSlipNo.Visible) nextCtrl = this.tEdit_SupplierSlipNo;
                    if (this.tEdit_SupplierSlipNo.Visible && this.uCheckSupplierSlipNo.Checked && this.uCheckSupplierSlipNo.Enabled == true) nextCtrl = this.tEdit_SupplierSlipNo;
                    else nextCtrl = GetNextControl("tEdit_SupplierSlipNo");
                }
            }

            // 棚番あいまい条件
            if (controlName == "tComboEditor_WarehouseShelfNoFuzzy")
            {
                //if ( this.tEdit_SupplierSlipNo.Visible ) nextCtrl = this.tEdit_SupplierSlipNo;
                if (this.tEdit_SupplierSlipNo.Visible && this.uCheckSupplierSlipNo.Checked && this.uCheckSupplierSlipNo.Enabled == true) nextCtrl = this.tEdit_SupplierSlipNo;
                else nextCtrl = GetNextControl("tEdit_SupplierSlipNo");
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/17 ADD

            // 仕入伝票番号
            if (controlName == "tEdit_SupplierSlipNo")
            {
                //if (this.tEdit_SupplierCd.Visible) nextCtrl = this.tEdit_SupplierCd;
                if (this.tEdit_SupplierCd.Visible && this.uCheckSupplierCd.Checked && this.uCheckSupplierCd.Enabled == true) nextCtrl = this.tEdit_SupplierCd;
                else nextCtrl = GetNextControl("tEdit_SupplierCd");
            }

            // 仕入先
            if (controlName == "tEdit_SupplierCd")
            {
                //if (this.tEdit_SupplierCd.Visible && String.IsNullOrEmpty(this.tEdit_SupplierCd.Text.Trim()))
                if (this.tEdit_SupplierCd.Visible && String.IsNullOrEmpty(this.tEdit_SupplierCd.Text.Trim()) &&
                    this.uCheckSupplierCd.Checked && this.uCheckSupplierCd.Enabled == true)
                {
                    nextCtrl = this.uButton_SupplierCd;
                }
                else
                {
                    //if (this.tEdit_UOESupplierCd.Visible) nextCtrl = this.tEdit_UOESupplierCd;
                    if (this.tEdit_UOESupplierCd.Visible && this.uCheckUOESupplierCd.Checked && this.uCheckUOESupplierCd.Enabled == true) nextCtrl = this.tEdit_UOESupplierCd;
                    else nextCtrl = GetNextControl("tEdit_UOESupplierCd");
                }
            }

            // 仕入先ガイド
            if (controlName == "uButton_SupplierCd")
            {
                //if (this.tEdit_UOESupplierCd.Visible) nextCtrl = this.tEdit_UOESupplierCd;
                if (this.tEdit_UOESupplierCd.Visible && this.uCheckUOESupplierCd.Checked && this.uCheckUOESupplierCd.Enabled == true) nextCtrl = this.tEdit_UOESupplierCd;
                else nextCtrl = GetNextControl("tEdit_UOESupplierCd");
            }

            // 発注先
            if (controlName == "tEdit_UOESupplierCd")
            {
                //if (this.tEdit_UOESupplierCd.Visible && String.IsNullOrEmpty(this.tEdit_UOESupplierCd.Text.Trim()))
                if (this.tEdit_UOESupplierCd.Visible && String.IsNullOrEmpty(this.tEdit_UOESupplierCd.Text.Trim()) &&
                    this.uCheckUOESupplierCd.Checked && this.uCheckUOESupplierCd.Enabled == true)
                {
                    nextCtrl = this.uButton_UOESupplierCd;
                }
                else
                {
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 DEL
                    //if (this.tEdit_DtlNote.Visible) nextCtrl = this.tEdit_DtlNote;
                    //else nextCtrl = getNextControl("tEdit_DtlNote");
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 DEL
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
                    //if ( this.tEdit_AddresseeCode.Visible ) nextCtrl = this.tEdit_AddresseeCode;
                    if (this.tEdit_AddresseeCode.Visible && this.uCheckAddresseeCode.Checked && this.uCheckAddresseeCode.Enabled == true) nextCtrl = this.tEdit_AddresseeCode;
                    else nextCtrl = GetNextControl("tEdit_AddresseeCode");
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD
                }
            }

            // 発注先ガイド
            if (controlName == "uButton_UOESupplierCd")
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 DEL
                //if (this.tEdit_DtlNote.Visible) nextCtrl = this.tEdit_DtlNote;
                //else nextCtrl = getNextControl("tEdit_DtlNote");
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
                //if ( this.tEdit_AddresseeCode.Visible ) nextCtrl = this.tEdit_AddresseeCode;
                if (this.tEdit_AddresseeCode.Visible && this.uCheckAddresseeCode.Checked && this.uCheckAddresseeCode.Enabled == true) nextCtrl = this.tEdit_AddresseeCode;
                else nextCtrl = GetNextControl("tEdit_AddresseeCode");
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD
            }

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
            // 納入先
            if (controlName == "tEdit_AddresseeCode")
            {
                //if ( this.tEdit_AddresseeCode.Visible && String.IsNullOrEmpty( this.tEdit_AddresseeCode.Text.Trim() ) )
                if (this.tEdit_AddresseeCode.Visible && String.IsNullOrEmpty(this.tEdit_AddresseeCode.Text.Trim()) &&
                    this.uCheckAddresseeCode.Checked && this.uCheckAddresseeCode.Enabled == true)
                {
                    nextCtrl = this.uButton_AddresseeCode;
                }
                else
                {
                    //if ( this.tEdit_DtlNote.Visible ) nextCtrl = this.tEdit_DtlNote;
                    if (this.tEdit_DtlNote.Visible && this.uCheckDtlNote.Checked && this.uCheckDtlNote.Enabled == true) nextCtrl = this.tEdit_DtlNote;
                    else nextCtrl = GetNextControl("tEdit_DtlNote");
                }
            }

            // 納入先ガイド
            if (controlName == "uButton_AddresseeCode")
            {
                //if ( this.tEdit_DtlNote.Visible ) nextCtrl = this.tEdit_DtlNote;
                if (this.tEdit_DtlNote.Visible && this.uCheckDtlNote.Checked && this.uCheckDtlNote.Enabled == true) nextCtrl = this.tEdit_DtlNote;
                else nextCtrl = GetNextControl("tEdit_DtlNote");
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD

            // 明細備考
            if (controlName == "tEdit_DtlNote")
            {
                //if (this.tEdit_DtlNote.Visible && String.IsNullOrEmpty(this.tEdit_DtlNote.Text.Trim()))
                if (this.tEdit_DtlNote.Visible && String.IsNullOrEmpty(this.tEdit_DtlNote.Text.Trim()) &&
                    this.uCheckDtlNote.Checked && this.uCheckDtlNote.Enabled == true)
                {
                    nextCtrl = this.tComboEditor_DtlNoteFuzzy;
                }
                else
                {
                    //if (this.tComboEditor_DeleteFlag.Visible) nextCtrl = this.tComboEditor_DeleteFlag;
                    if (this.tComboEditor_DeleteFlag.Visible && this.uCheckDeleteFlag.Checked && this.uCheckDeleteFlag.Enabled == true) nextCtrl = this.tComboEditor_DeleteFlag;
                    else nextCtrl = GetNextControl("tComboEditor_DeleteFlag");
                }
            }

            // 明細備考あいまい条件
            if (controlName == "tComboEditor_DtlNoteFuzzy")
            {
                //if (this.tComboEditor_DeleteFlag.Visible) nextCtrl = this.tComboEditor_DeleteFlag;
                if (this.tComboEditor_DeleteFlag.Visible && this.uCheckDeleteFlag.Checked && this.uCheckDeleteFlag.Enabled == true) nextCtrl = this.tComboEditor_DeleteFlag;
                else nextCtrl = GetNextControl("tComboEditor_DeleteFlag");
            }

            // 削除指定区分
            if (controlName == "tComboEditor_DeleteFlag")
            {
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 DEL
                //if (this.uGrid_Slip.Rows.Count > 0) nextCtrl = this.uGrid_Slip;
                //else nextCtrl = this.uCheckEditor_StatusBar_AutoFillToGridColumn;
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/06 ADD
                // 検索実行・フォーカス移動
                //nextCtrl = this.SearchOnChangeFocus( nextCtrl );
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/06 ADD
                if (this.tEdit_ClaimName.Visible && this.uCheckClaimCode.Checked && this.uCheckClaimCode.Enabled == true) nextCtrl = this.tEdit_ClaimName;
                else nextCtrl = GetNextControl("tEdit_ClaimName");

            }
            // 請求先
            if (controlName == "tEdit_ClaimName")
            {
                if (this.tEdit_ClaimName.Visible && String.IsNullOrEmpty(this.tEdit_ClaimName.Text.Trim()) &&
                    this.uCheckClaimCode.Checked && this.uCheckClaimCode.Enabled == true)
                {
                    nextCtrl = this.uButton_ClaimGuide;
                }
                else
                {
                    if (this.tDateEdit_AddUpADateSt.Visible && this.uCheckAddUpADateSt.Checked && this.uCheckAddUpADateSt.Enabled == true) nextCtrl = this.tDateEdit_AddUpADateSt;
                    else nextCtrl = GetNextControl("tDateEdit_AddUpADateSt");
                }
            }

            // 請求先ガイド
            if (controlName == "uButton_ClaimGuide")
            {
                if (this.tDateEdit_AddUpADateSt.Visible && this.uCheckAddUpADateSt.Checked && this.uCheckAddUpADateSt.Enabled == true) nextCtrl = this.tDateEdit_AddUpADateSt;
                else nextCtrl = GetNextControl("tDateEdit_AddUpADateSt");
            }
            // 入力日開始
            if (controlName == "tDateEdit_AddUpADateSt")
            {
                if (this.tDateEdit_AddUpADateEd.Visible && this.uCheckAddUpADateEd.Checked && this.uCheckAddUpADateEd.Enabled == true) nextCtrl = this.tDateEdit_AddUpADateEd;
                else nextCtrl = GetNextControl("tDateEdit_AddUpADateEd");
            }
            // 入力日終了
            if (controlName == "tDateEdit_AddUpADateEd")
            {
                // 検索実行・フォーカス移動
                //nextCtrl = this.SearchOnChangeFocus( nextCtrl );// del 2011/07/18 朱宝軍
                // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
                if (this._opt_Pcc == (int)Option.ON)
                {
                    if (this.tComboEditor_AutoAnswerDivSCM.Visible && this.uCheckAutoAnswerDivSCM.Checked && this.uCheckAutoAnswerDivSCM.Enabled == true) nextCtrl = this.tComboEditor_AutoAnswerDivSCM;
                    else nextCtrl = GetNextControl("tComboEditor_AutoAnswerDivSCM");
                }
                else
                {
                     //----- DEL K2017/01/05 譚洪 ソースのマージを修正する対応 ----->>>>>
                     //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
                    //if (this._opt_IKeMoTo == (int)Option.ON)
                    //{
                    //    if (this.tComboEditor_AcptAnOdrMakeDiv.Visible && this.uCheckAcptAnOdrMakeDiv.Checked && this.uCheckAcptAnOdrMakeDiv.Enabled == true)
                    //    {
                    //        nextCtrl = this.tComboEditor_AcptAnOdrMakeDiv;
                    //    }
                    //    else
                    //    {
                    //        nextCtrl = GetNextControl("tComboEditor_AcptAnOdrMakeDiv");
                    //    }
                    //}
                    //else
                    //{
                    ////----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<
                    //    nextCtrl = this.SearchOnChangeFocus(nextCtrl);
                    //}// ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応
                    //----- DEL K2017/01/05 譚洪 ソースのマージを修正する対応 -----<<<<<

                    // ---------- UPD 2016/01/21 Y.Wakita ---------->>>>>
                    //nextCtrl = this.SearchOnChangeFocus(nextCtrl);
                    if (this.tComboEditor_AddUpRemDiv.Visible && this.uCheckAddUpRemDiv.Checked && this.uCheckAddUpRemDiv.Enabled == true && this.tComboEditor_AddUpRemDiv.Enabled == true) nextCtrl = this.tComboEditor_AddUpRemDiv;
                    else nextCtrl = GetNextControl("tComboEditor_AddUpRemDiv");
                    // ---------- UPD 2016/01/21 Y.Wakita ----------<<<<<
                }
                // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<
            }
            // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
            // 自動回答
            if (controlName == "tComboEditor_AutoAnswerDivSCM")
            {
                // 検索実行・フォーカス移動
                //nextCtrl = this.SearchOnChangeFocus(nextCtrl); // DEL 2011/11/28 楊洋
                //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>
                if (this._opt_Pcc == (int)Option.ON)
                {
                    if (this.tNedit_InquiryNumber.Visible && this.uCheckInquiryNumber.Checked && this.uCheckInquiryNumber.Enabled == true) nextCtrl = this.tNedit_InquiryNumber;
                    else nextCtrl = GetNextControl("tNedit_InquiryNumber");
                }
                else
                {
                    // ---------- UPD 2016/01/21 Y.Wakita ---------->>>>>
                    //nextCtrl = this.SearchOnChangeFocus(nextCtrl);
                    if (this.tComboEditor_AddUpRemDiv.Visible && this.uCheckAddUpRemDiv.Checked && this.uCheckAddUpRemDiv.Enabled == true && this.tComboEditor_AddUpRemDiv.Enabled == true) nextCtrl = this.tComboEditor_AddUpRemDiv;
                    else nextCtrl = GetNextControl("tComboEditor_AddUpRemDiv");
                    // ---------- UPD 2016/01/21 Y.Wakita ----------<<<<<
                }

                //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<
            }
            // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<

            //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>
            //問合せ番号
            if (controlName == "tNedit_InquiryNumber")
            {
                //----- DEL K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
                // 検索実行・フォーカス移動
                // nextCtrl = this.SearchOnChangeFocus(nextCtrl);
                //----- DEL K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<

                // ---------- DEL 2016/01/21 Y.Wakita ---------->>>>>
                ////----- ADD 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
                //if (this._opt_Meigo == (int)Option.ON)
                //{
                //    if (this.tEdit_SalesAreaNm.Visible &&ultraCheckEditor_salesArea.Checked&& !this.ultraCheckEditor_salesArea_base.Checked && this.ultraCheckEditor_salesArea.Enabled == true) nextCtrl = this.tEdit_SalesAreaNm;
                //    else nextCtrl = GetNextControl("tEdit_SalesAreaNm");
                //}
                //else
                //{
                //    nextCtrl = this.SearchOnChangeFocus(nextCtrl);
                //}
                ////------ ADD 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<
                // ---------- DEL 2016/01/21 Y.Wakita ----------<<<<<

                // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
                //nextCtrl = this.SearchOnChangeFocus(nextCtrl);
                if (this.tComboEditor_AddUpRemDiv.Visible && this.uCheckAddUpRemDiv.Checked && this.uCheckAddUpRemDiv.Enabled == true && this.tComboEditor_AddUpRemDiv.Enabled == true) nextCtrl = this.tComboEditor_AddUpRemDiv;
                else nextCtrl = GetNextControl("tComboEditor_AddUpRemDiv");
                // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<
            }
            //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<
            // --------------UPD 2009/12/28-------------<<<<<
            	
            // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
            //出荷状況
            if (controlName == "tComboEditor_AddUpRemDiv")
            {
                if (this._opt_Meigo == (int)Option.ON)
                {
                    if (this.tEdit_SalesAreaNm.Visible && ultraCheckEditor_salesArea.Checked && !this.ultraCheckEditor_salesArea_base.Checked && this.ultraCheckEditor_salesArea.Enabled == true) nextCtrl = this.tEdit_SalesAreaNm;
                    else nextCtrl = GetNextControl("tEdit_SalesAreaNm");
                }
                //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
                else if (this._opt_IKeMoTo == (int)Option.ON)
                {
                    if (this.tComboEditor_AcptAnOdrMakeDiv.Visible && this.uCheckAcptAnOdrMakeDiv.Checked && this.uCheckAcptAnOdrMakeDiv.Enabled == true)
                    {
                        nextCtrl = this.tComboEditor_AcptAnOdrMakeDiv;
                    }
                    else
                    {
                        nextCtrl = GetNextControl("tComboEditor_AcptAnOdrMakeDiv");
                    }
                }
                //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<
                else
                {
                    nextCtrl = this.SearchOnChangeFocus(nextCtrl);
                }
            }
            // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<
            	
            //----- ADD 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
            //地区
            if (controlName == "tEdit_SalesAreaNm")
            {
                if (this._opt_Meigo == (int)Option.ON && this.uButton_SalesAreaCdGuide.Visible && ultraCheckEditor_salesArea.Checked && !this.ultraCheckEditor_salesArea_base.Checked && this.ultraCheckEditor_salesArea.Enabled == true && String.IsNullOrEmpty(this.tEdit_SalesAreaNm.Text))
                { 
                    nextCtrl = this.uButton_SalesAreaCdGuide; 
                }
                else 
                { 
                    nextCtrl = GetNextControl("uButton_SalesAreaCdGuide"); 
                }
            }
            //地区
            if (controlName == "uButton_SalesAreaCdGuide")
            {
                if (this._opt_Meigo == (int)Option.ON && this.tNedit_CustAnalysCode1.Visible && this.ultraCheckEditor_custAnalysCode.Checked && !this.ultraCheckEditor_custAnalysCode_base.Checked && this.ultraCheckEditor_custAnalysCode.Enabled == true) 
                {
                    nextCtrl = this.tNedit_CustAnalysCode1; 
                }
                else 
                {
                    nextCtrl = GetNextControl("tNedit_CustAnalysCode1"); 
                }
            }
            //分析コード1
            if (controlName == "tNedit_CustAnalysCode1")
            {
                if (this._opt_Meigo == (int)Option.ON && this.tNedit_CustAnalysCode2.Visible && this.ultraCheckEditor_custAnalysCode.Checked && !this.ultraCheckEditor_custAnalysCode_base.Checked && this.ultraCheckEditor_custAnalysCode.Enabled == true)
                {
                    nextCtrl = this.tNedit_CustAnalysCode2;
                }
                else
                {
                    nextCtrl = GetNextControl("tNedit_CustAnalysCode2");
                }
            }
            //分析コード2
            if (controlName == "tNedit_CustAnalysCode2")
            {
                if (this._opt_Meigo == (int)Option.ON && this.tNedit_CustAnalysCode3.Visible && this.ultraCheckEditor_custAnalysCode.Checked && !this.ultraCheckEditor_custAnalysCode_base.Checked && this.ultraCheckEditor_custAnalysCode.Enabled == true)
                {
                    nextCtrl = this.tNedit_CustAnalysCode3;
                }
                else
                {
                    nextCtrl = GetNextControl("tNedit_CustAnalysCode3");
                }
            }
            //分析コード3
            if (controlName == "tNedit_CustAnalysCode3")
            {
                if (this._opt_Meigo == (int)Option.ON && this.tNedit_CustAnalysCode4.Visible && this.ultraCheckEditor_custAnalysCode.Checked && !this.ultraCheckEditor_custAnalysCode_base.Checked && this.ultraCheckEditor_custAnalysCode.Enabled == true)
                {
                    nextCtrl = this.tNedit_CustAnalysCode4;
                }
                else
                {
                    nextCtrl = GetNextControl("tNedit_CustAnalysCode4");
                }
            }
            //分析コード4
            if (controlName == "tNedit_CustAnalysCode4")
            {
                if (this._opt_Meigo == (int)Option.ON && this.tNedit_CustAnalysCode5.Visible && this.ultraCheckEditor_custAnalysCode.Checked && !this.ultraCheckEditor_custAnalysCode_base.Checked && this.ultraCheckEditor_custAnalysCode.Enabled == true)
                {
                    nextCtrl = this.tNedit_CustAnalysCode5;
                }
                else
                {
                    nextCtrl = GetNextControl("tNedit_CustAnalysCode5");
                }
            }
            //分析コード5
            if (controlName == "tNedit_CustAnalysCode5")
            {
                if (this._opt_Meigo == (int)Option.ON && this.tNedit_CustAnalysCode6.Visible && this.ultraCheckEditor_custAnalysCode.Checked && !this.ultraCheckEditor_custAnalysCode_base.Checked && this.ultraCheckEditor_custAnalysCode.Enabled == true)
                {
                    nextCtrl = this.tNedit_CustAnalysCode6;
                }
                else
                {
                    nextCtrl = GetNextControl("tNedit_CustAnalysCode6");
                }
            }
            //分析コード6
            if (controlName == "tNedit_CustAnalysCode6")
            {
                nextCtrl = this.SearchOnChangeFocus(nextCtrl);
            }
            //----- ADD 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<

            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
            //受注作成区分
            if (this._opt_IKeMoTo == (int)Option.ON && controlName == "tComboEditor_AcptAnOdrMakeDiv")
            {
                // 検索実行・フォーカス移動
                nextCtrl = this.SearchOnChangeFocus(nextCtrl);
            }
            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<

            return nextCtrl;
        }

        /// <summary>
        /// 拡張基本条件で、表示されている次のコントロールを取得する
        /// </summary>
        /// <param name="controlName">controlName</param>
        /// <returns>次のコントロール</returns>
        /// <br>Note       : 拡張基本条件で、表示されている次のコントロールを取得する。</br>
        /// <br>Programmer : 呉元嘯</br>
        /// <br>Date       : 2009/12/28</br>
        /// <br>Update Note: 2011/11/28 楊洋</br>
        /// <br>             得意先電子元帳/(BLﾊﾟｰﾂｵｰﾀﾞｰｼｽﾃﾑ)問合せ番号の追加</br>
        /// <br>Update Note: SPK車台番号文字列対応に伴う車台番号(VINコード)による抽出を可能にする</br>
        /// <br>Programmer : FSI厚川 宏</br>
        /// <br>Date       : 2013/03/25</br>
        /// <br>Update Note: K2015/06/16 鮑晶</br>
        /// <br>管理番号   : 11101427-00</br>
        /// <br>           : メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
        /// <br>Update Note: 2016/01/21 脇田 靖之</br>
        /// <br>管理番号   : 11270007-00</br>
        /// <br>           : 仕掛一覧№2808 貸出受注対応</br>
        /// <br>           : ①検索条件に「出荷状況」項目を追加</br>
        /// <br>           : ②明細表示に計上数、未計上数項目を追加</br>
        /// <br>Update Note: K2016/02/23 時シン</br>
        /// <br>             ㈱イケモト 抽出条件にて受注作成区分を追加する対応</br>
        /// <br>Update Note: K2017/01/05 譚洪</br>
        /// <br>管理番号   : 11270116-00 得意先電子元帳パッケージ出荷用ソースのマージ</br>
        /// </remarks>
        private Control GetNextCommonControl(string controlName)
        {
            Control nextCtrl = null;

            // 売上日終了
            if (controlName == "tDateEdit_SalesDateEd")
            {
                if (this.tComboEditor_SalesSlipCd.Visible && this.uCheckSalesSlipCd_base.Checked) nextCtrl = this.tComboEditor_SalesSlipCd;
                else nextCtrl = GetNextCommonControl("tComboEditor_SalesSlipCd");

            }

            // 伝票区分
            if (controlName == "tComboEditor_SalesSlipCd")
            {
                if (this.tComboEditor_SalesSlipCdDtl.Visible && this.uCheckSalesSlipCdDtl_base.Checked) nextCtrl = this.tComboEditor_SalesSlipCdDtl;
                else nextCtrl = GetNextCommonControl("tComboEditor_SalesSlipCdDtl");
            }

            // 明細区分
            if (controlName == "tComboEditor_SalesSlipCdDtl")
            {
                if (this.tEdit_SalesSlipNum.Visible && this.uCheckSalesSlipNum_base.Checked) nextCtrl = this.tEdit_SalesSlipNum;
                else nextCtrl = GetNextCommonControl("tEdit_SalesSlipNum");
            }

            // 伝票番号
            if (controlName == "tEdit_SalesSlipNum")
            {
                if (this.tEdit_SalesEmployeeCd.Visible && this.uCheckSalesEmployeeCd_base.Checked) nextCtrl = this.tEdit_SalesEmployeeCd;
                else nextCtrl = GetNextCommonControl("tEdit_SalesEmployeeCd");
            }

            // 担当者
            if (controlName == "tEdit_SalesEmployeeCd")
            {
                if (this.tEdit_SalesEmployeeCd.Visible && String.IsNullOrEmpty(this.tEdit_SalesEmployeeCd.Text.Trim()) && this.uCheckSalesEmployeeCd_base.Checked)
                {
                    nextCtrl = this.uButton_SalesEmployeeCd;
                }
                else
                {
                    if (this.tEdit_FrontEmployeeCd.Visible && this.uCheckFrontEmployeeCd_base.Checked) nextCtrl = this.tEdit_FrontEmployeeCd;
                    else nextCtrl = GetNextCommonControl("tEdit_FrontEmployeeCd");
                }
            }

            // 担当者ガイド
            if (controlName == "uButton_SalesEmployeeCd")
            {
                if (this.tEdit_FrontEmployeeCd.Visible && this.uCheckFrontEmployeeCd_base.Checked) nextCtrl = this.tEdit_FrontEmployeeCd;
                else nextCtrl = GetNextCommonControl("tEdit_FrontEmployeeCd");
            }

            // 受注者
            if (controlName == "tEdit_FrontEmployeeCd")
            {
                if (this.tEdit_FrontEmployeeCd.Visible && String.IsNullOrEmpty(this.tEdit_FrontEmployeeCd.Text.Trim()) && this.uCheckFrontEmployeeCd_base.Checked)
                {
                    nextCtrl = this.uButton_FrontEmployeeCd;
                }
                else
                {
                    if (this.tEdit_SalesInputCode.Visible && this.uCheckSalesInputCode_base.Checked) nextCtrl = this.tEdit_SalesInputCode;
                    else nextCtrl = GetNextCommonControl("tEdit_SalesInputCode");
                }
            }

            // 受注者ガイド
            if (controlName == "uButton_FrontEmployeeCd")
            {
                if (this.tEdit_SalesInputCode.Visible && this.uCheckSalesInputCode_base.Checked) nextCtrl = this.tEdit_SalesInputCode;
                else nextCtrl = GetNextCommonControl("tEdit_SalesInputCode");
            }

            // 発注者
            if (controlName == "tEdit_SalesInputCode")
            {
                if (this.tEdit_SalesInputCode.Visible && String.IsNullOrEmpty(this.tEdit_SalesInputCode.Text.Trim()) && this.uCheckSalesInputCode_base.Checked)
                {
                    nextCtrl = this.uButton_SalesInputCode;
                }
                else
                {
                    if (this.tEdit_CarMngCode.Visible && this.uCheckCarMngCode_base.Checked) nextCtrl = this.tEdit_CarMngCode;
                    else nextCtrl = GetNextCommonControl("tEdit_CarMngCode");
                }
            }

            // 発注者ガイド
            if (controlName == "uButton_SalesInputCode")
            {
                if (this.tEdit_CarMngCode.Visible && this.uCheckCarMngCode_base.Checked) nextCtrl = this.tEdit_CarMngCode;
                else nextCtrl = GetNextCommonControl("tEdit_CarMngCode");
            }
            // 管理番号
            if (controlName == "tEdit_CarMngCode")
            {
                if (this.tEdit_CarMngCode.Visible && String.IsNullOrEmpty(this.tEdit_CarMngCode.Text.Trim()) && this.uCheckCarMngCode_base.Checked)
                {
                    nextCtrl = this.tComboEditor_SearchDiv;
                }
                else
                {
                    if (this.tEdit_ModelFullName.Visible && this.uCheckModelFullName_base.Checked) nextCtrl = this.tEdit_ModelFullName;
                    else nextCtrl = GetNextCommonControl("tEdit_ModelFullName");
                }
            }
            // 管理番号あいまい条件
            if (controlName == "tComboEditor_SearchDiv")
            {
                if (this.tEdit_ModelFullName.Visible && this.uCheckModelFullName_base.Checked) nextCtrl = this.tEdit_ModelFullName;
                else nextCtrl = GetNextCommonControl("tEdit_ModelFullName");
            }
            // 車種名称
            if (controlName == "tEdit_ModelFullName")
            {
                if (this.tEdit_ModelFullName.Visible && String.IsNullOrEmpty(this.tEdit_ModelFullName.Text.Trim()) && this.uCheckModelFullName_base.Checked)
                {
                    nextCtrl = this.tComboEditor_ModelFullNameFuzzy;
                }
                else
                {
                    if (this.tEdit_FullModel.Visible && this.uCheckFullModel_base.Checked) nextCtrl = this.tEdit_FullModel;
                    else nextCtrl = GetNextCommonControl("tEdit_FullModel");
                }
            }

            // 車種名称あいまい条件
            if (controlName == "tComboEditor_ModelFullNameFuzzy")
            {
                if (this.tEdit_FullModel.Visible && this.uCheckFullModel_base.Checked) nextCtrl = this.tEdit_FullModel;
                else nextCtrl = GetNextCommonControl("tEdit_FullModel");
            }

            // 型式
            if (controlName == "tEdit_FullModel")
            {
                if (this.tEdit_FullModel.Visible && String.IsNullOrEmpty(this.tEdit_FullModel.Text.Trim()) && this.uCheckFullModel_base.Checked)
                {
                    nextCtrl = this.tComboEditor_FullModelFuzzy;
                }
                else
                {
                    // ---------DEL 2013/03/25---------->>>>>
                    //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo_base.Checked) nextCtrl = this.tNedit_SearchFrameNo;
                    //else nextCtrl = GetNextCommonControl("tNedit_SearchFrameNo");
                    // ---------DEL 2013/03/25----------<<<<<
                    // ---------ADD 2013/03/25---------->>>>>
                    if (this.tEdit_SearchFrameNo.Visible && this.uCheckSearchFrameNo_base.Checked) nextCtrl = this.tEdit_SearchFrameNo;
                    else nextCtrl = GetNextCommonControl("tEdit_SearchFrameNo");
                    // ---------ADD 2013/03/25----------<<<<<
                }
            }

            // 型式あいまい条件
            if (controlName == "tComboEditor_FullModelFuzzy")
            {
                // ---------DEL 2013/03/25---------->>>>>
                //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo_base.Checked) nextCtrl = this.tNedit_SearchFrameNo;
                //else nextCtrl = GetNextCommonControl("tNedit_SearchFrameNo");
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                if (this.tEdit_SearchFrameNo.Visible && this.uCheckSearchFrameNo_base.Checked) nextCtrl = this.tEdit_SearchFrameNo;
                else nextCtrl = GetNextCommonControl("tEdit_SearchFrameNo");
                // ---------ADD 2013/03/25----------<<<<<
            }

            // 車台No
            // ----------UPD 2010/08/05----------->>>>>
            // ---------DEL 2013/03/25---------->>>>>
            //if (controlName == "tNedit_SearchFrameNo")
            // ---------DEL 2013/03/25----------<<<<<
            // ---------ADD 2013/03/25---------->>>>>
            if (controlName == "tEdit_SearchFrameNo")
            // ---------ADD 2013/03/25----------<<<<<
            {
                //if (this.tEdit_PartySalesSlipNum.Visible && this.uCheckPartySalesSlipNum_base.Checked) nextCtrl = this.tEdit_PartySalesSlipNum;
                //else nextCtrl = GetNextCommonControl("tEdit_PartySalesSlipNum");
                // ---------DEL 2013/03/25---------->>>>>
                //if (this.tNedit_SearchFrameNo.Visible && tNedit_SearchFrameNo.GetInt() == 0 && this.uCheckSearchFrameNo_base.Checked)
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                if (this.tEdit_SearchFrameNo.Visible && String.IsNullOrEmpty(tEdit_SearchFrameNo.Text) && this.uCheckSearchFrameNo_base.Checked)
                // ---------ADD 2013/03/25----------<<<<<
                {
                    nextCtrl = this.tComboEditor_SearchFrameNoFuzzy;
                }
                else
                {
                    if (this.tEdit_PartySalesSlipNum.Visible && this.uCheckPartySalesSlipNum_base.Checked) nextCtrl = this.tEdit_PartySalesSlipNum;
                    else nextCtrl = GetNextCommonControl("tEdit_PartySalesSlipNum");
                }
            }
            // 車台Noあいまい条件
            if (controlName == "tComboEditor_SearchFrameNoFuzzy")
            {
                if (this.tEdit_PartySalesSlipNum.Visible && this.uCheckPartySalesSlipNum_base.Checked) nextCtrl = this.tEdit_PartySalesSlipNum;
                else nextCtrl = GetNextCommonControl("tEdit_PartySalesSlipNum");
            }
            // ----------UPD 2010/08/05-----------<<<<<
            // 指示書No
            if (controlName == "tEdit_PartySalesSlipNum")
            {
                if (this.tEdit_ColorName1.Visible && this.uCheckColorName1_base.Checked) nextCtrl = this.tEdit_ColorName1;
                else nextCtrl = GetNextCommonControl("tEdit_ColorName1");
            }

            // カラー名称
            if (controlName == "tEdit_ColorName1")
            {
                if (this.tEdit_ColorName1.Visible && String.IsNullOrEmpty(this.tEdit_ColorName1.Text.Trim()) && this.uCheckColorName1_base.Checked)
                {
                    nextCtrl = this.tComboEditor_ColorName1Fuzzy;
                }
                else
                {
                    if (this.tEdit_TrimName.Visible && this.uCheckTrimName_base.Checked) nextCtrl = this.tEdit_TrimName;
                    else nextCtrl = GetNextCommonControl("tEdit_TrimName");
                }
            }

            // カラー名称あいまい条件
            if (controlName == "tComboEditor_ColorName1Fuzzy")
            {
                if (this.tEdit_TrimName.Visible && this.uCheckTrimName_base.Checked) nextCtrl = this.tEdit_TrimName;
                else nextCtrl = GetNextCommonControl("tEdit_TrimName");
            }

            // トリム名称
            if (controlName == "tEdit_TrimName")
            {
                if (this.tEdit_TrimName.Visible && String.IsNullOrEmpty(this.tEdit_TrimName.Text.Trim()) && this.uCheckTrimName_base.Checked)
                {
                    nextCtrl = this.tComboEditor_TrimNameFuzzy;
                }
                else
                {
                    if (this.tComboEditor_DataSendCode.Visible && this.uCheckDataSendCode_base.Checked) nextCtrl = this.tComboEditor_DataSendCode;
                    else nextCtrl = GetNextCommonControl("tComboEditor_DataSendCode");
                }
            }

            // トリム名称あいまい条件
            if (controlName == "tComboEditor_TrimNameFuzzy")
            {
                if (this.tComboEditor_DataSendCode.Visible && this.uCheckDataSendCode_base.Checked) nextCtrl = this.tComboEditor_DataSendCode;
                else nextCtrl = GetNextCommonControl("tComboEditor_DataSendCode");
            }

            // UOE送信
            if (controlName == "tComboEditor_DataSendCode")
            {
                if (this.tEdit_SlipNote.Visible && this.uCheckSlipNote_base.Checked) nextCtrl = this.tEdit_SlipNote;
                else nextCtrl = GetNextCommonControl("tEdit_SlipNote");
            }

            // 備考
            if (controlName == "tEdit_SlipNote")
            {
                if (this.tEdit_SlipNote.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote.Text.Trim()) && this.uCheckSlipNote_base.Checked)
                {
                    nextCtrl = this.uButton_SlipNote;
                }
                else
                {
                    if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2_base.Checked) nextCtrl = this.tEdit_SlipNote2;
                    else nextCtrl = GetNextCommonControl("tEdit_SlipNote2");
                }
            }

            // 備考ガイド
            if (controlName == "uButton_SlipNote")
            {
                if (this.tComboEditor_SlipNoteFuzzy.Visible && this.uCheckSlipNote_base.Checked) nextCtrl = this.tComboEditor_SlipNoteFuzzy;
                else nextCtrl = GetNextCommonControl("tComboEditor_SlipNoteFuzzy");
            }

            // 備考あいまい条件
            if (controlName == "tComboEditor_SlipNoteFuzzy")
            {
                if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2_base.Checked) nextCtrl = this.tEdit_SlipNote2;
                else nextCtrl = GetNextCommonControl("tEdit_SlipNote2");
            }

            // 備考2
            if (controlName == "tEdit_SlipNote2")
            {
                if (this.tEdit_SlipNote2.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote2.Text.Trim()) && this.uCheckSlipNote2_base.Checked)
                {
                    nextCtrl = this.uButton_SlipNote2;
                }
                else
                {
                    if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3_base.Checked) nextCtrl = this.tEdit_SlipNote3;
                    else nextCtrl = GetNextCommonControl("tEdit_SlipNote3");
                }
            }

            // 備考２ガイド
            if (controlName == "uButton_SlipNote2")
            {
                if (this.tComboEditor_SlipNote2Fuzzy.Visible && this.uCheckSlipNote2_base.Checked) nextCtrl = this.tComboEditor_SlipNote2Fuzzy;
                else nextCtrl = GetNextCommonControl("tComboEditor_SlipNote2Fuzzy");
            }

            // 備考2あいまい条件
            if (controlName == "tComboEditor_SlipNote2Fuzzy")
            {
                if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3_base.Checked) nextCtrl = this.tEdit_SlipNote3;
                else nextCtrl = GetNextCommonControl("tEdit_SlipNote3");
            }

            // 備考3
            if (controlName == "tEdit_SlipNote3")
            {
                if (this.tEdit_SlipNote3.Visible && String.IsNullOrEmpty(this.tEdit_SlipNote3.Text.Trim()) && this.uCheckSlipNote3_base.Checked)
                {
                    nextCtrl = this.uButton_SlipNote3;
                }
                else
                {
                    if (this.tEdit_UoeRemark1.Visible && this.uCheckUoeRemark1_base.Checked) nextCtrl = this.tEdit_UoeRemark1;
                    else nextCtrl = GetNextCommonControl("tEdit_UoeRemark1");
                }
            }

            // 備考３ガイド
            if (controlName == "uButton_SlipNote3")
            {
                if (this.tComboEditor_SlipNote3Fuzzy.Visible && this.uCheckSlipNote3_base.Checked) nextCtrl = this.tComboEditor_SlipNote3Fuzzy;
                else nextCtrl = GetNextCommonControl("tComboEditor_SlipNote3Fuzzy");
            }

            // 備考3あいまい条件
            if (controlName == "tComboEditor_SlipNote3Fuzzy")
            {
                if (this.tEdit_UoeRemark1.Visible && this.uCheckUoeRemark1_base.Checked) nextCtrl = this.tEdit_UoeRemark1;
                else nextCtrl = GetNextCommonControl("tEdit_UoeRemark1");
            }

            // UOEリマーク1
            if (controlName == "tEdit_UoeRemark1")
            {
                if (this.tEdit_UoeRemark1.Visible && String.IsNullOrEmpty(this.tEdit_UoeRemark1.Text.Trim()) && this.uCheckUoeRemark1_base.Checked)
                {
                    nextCtrl = this.tComboEditor_UoeRemark1Fuzzy;
                }
                else
                {
                    if (this.tEdit_UoeRemark2.Visible && this.uCheckUoeRemark2_base.Checked) nextCtrl = this.tEdit_UoeRemark2;
                    else nextCtrl = GetNextCommonControl("tEdit_UoeRemark2");
                }
            }

            // UOEリマーク1あいまい条件
            if (controlName == "tComboEditor_UoeRemark1Fuzzy")
            {
                if (this.tEdit_UoeRemark2.Visible && this.uCheckUoeRemark2_base.Checked) nextCtrl = this.tEdit_UoeRemark2;
                else nextCtrl = GetNextCommonControl("tEdit_UoeRemark2");
            }

            // UOEリマーク2
            if (controlName == "tEdit_UoeRemark2")
            {
                if (this.tEdit_UoeRemark2.Visible && String.IsNullOrEmpty(this.tEdit_UoeRemark2.Text.Trim()) && this.uCheckUoeRemark2_base.Checked)
                {
                    nextCtrl = this.tComboEditor_UoeRemark2Fuzzy;
                }
                else
                {
                    if (this.tEdit_GoodsLGroup.Visible && this.uCheckGoodsLGroup_base.Checked) nextCtrl = this.tEdit_GoodsLGroup;
                    else nextCtrl = GetNextCommonControl("tEdit_GoodsLGroup");
                }
            }

            // UOEリマーク2あいまい条件
            if (controlName == "tComboEditor_UoeRemark2Fuzzy")
            {
                if (this.tEdit_GoodsLGroup.Visible && this.uCheckGoodsLGroup_base.Checked) nextCtrl = this.tEdit_GoodsLGroup;
                else nextCtrl = GetNextCommonControl("tEdit_GoodsLGroup");
            }

            // 商品大分類
            if (controlName == "tEdit_GoodsLGroup")
            {
                if (this.tEdit_GoodsLGroup.Visible && String.IsNullOrEmpty(this.tEdit_GoodsLGroup.Text.Trim()) && this.uCheckGoodsLGroup_base.Checked)
                {
                    nextCtrl = this.uButton_GoodsLGroup;
                }
                else
                {
                    if (this.tEdit_GoodsMGroup.Visible && this.uCheckGoodsMGroup_base.Checked) nextCtrl = this.tEdit_GoodsMGroup;
                    else nextCtrl = GetNextCommonControl("tEdit_GoodsMGroup");
                }
            }

            // 商品大分類ガイド
            if (controlName == "uButton_GoodsLGroup")
            {
                if (this.tEdit_GoodsMGroup.Visible && this.uCheckGoodsMGroup_base.Checked) nextCtrl = this.tEdit_GoodsMGroup;
                else nextCtrl = GetNextCommonControl("tEdit_GoodsMGroup");
            }

            // 商品中分類
            if (controlName == "tEdit_GoodsMGroup")
            {
                if (this.tEdit_GoodsMGroup.Visible && String.IsNullOrEmpty(this.tEdit_GoodsMGroup.Text.Trim()) && this.uCheckGoodsMGroup_base.Checked)
                {
                    nextCtrl = this.uButton_GoodsMGroup;
                }
                else
                {
                    if (this.tEdit_BlGroupCode.Visible && this.uCheckBLGroupCode_base.Checked) nextCtrl = this.tEdit_BlGroupCode;
                    else nextCtrl = GetNextCommonControl("tEdit_BlGroupCode");
                }
            }

            // 商品中分類ガイド
            if (controlName == "uButton_GoodsMGroup")
            {
                if (this.tEdit_BlGroupCode.Visible && this.uCheckBLGroupCode_base.Checked) nextCtrl = this.tEdit_BlGroupCode;
                else nextCtrl = GetNextCommonControl("tEdit_BlGroupCode");
            }

            // BLグループ
            if (controlName == "tEdit_BlGroupCode")
            {
                if (this.tEdit_BlGroupCode.Visible && String.IsNullOrEmpty(this.tEdit_BlGroupCode.Text.Trim()) && this.uCheckBLGroupCode_base.Checked)
                {
                    nextCtrl = this.uButton_BlGroupCode;
                }
                else
                {
                    if (this.tEdit_BlGoodsCode.Visible && this.uCheckBLGoodsCode_base.Checked) nextCtrl = this.tEdit_BlGoodsCode;
                    else nextCtrl = GetNextCommonControl("tEdit_BlGoodsCode");
                }
            }

            // BLグループガイド
            if (controlName == "uButton_BlGroupCode")
            {
                if (this.tEdit_BlGoodsCode.Visible && this.uCheckBLGoodsCode_base.Checked) nextCtrl = this.tEdit_BlGoodsCode;
                else nextCtrl = GetNextCommonControl("tEdit_BlGoodsCode");
            }

            // BLコード
            if (controlName == "tEdit_BlGoodsCode")
            {
                if (this.tEdit_BlGoodsCode.Visible && String.IsNullOrEmpty(this.tEdit_BlGoodsCode.Text.Trim()) && this.uCheckBLGoodsCode_base.Checked)
                {
                    nextCtrl = this.uButton_BlGoodsCode;
                }
                else
                {
                    if (this.tEdit_GoodsName.Visible && this.uCheckGoodsName_base.Checked) nextCtrl = this.tEdit_GoodsName;
                    else nextCtrl = GetNextCommonControl("tEdit_GoodsName");
                }
            }

            // BLコードガイド
            if (controlName == "uButton_BlGoodsCode")
            {
                if (this.tEdit_GoodsName.Visible && this.uCheckGoodsName_base.Checked) nextCtrl = this.tEdit_GoodsName;
                else nextCtrl = GetNextCommonControl("tEdit_GoodsName");
            }

            // 品名
            if (controlName == "tEdit_GoodsName")
            {
                if (this.tEdit_GoodsName.Visible && String.IsNullOrEmpty(this.tEdit_GoodsName.Text.Trim()) && this.uCheckGoodsName_base.Checked)
                {
                    nextCtrl = this.tComboEditor_GoodsNameFuzzy;
                }
                else
                {
                    if (this.tEdit_GoodsNo.Visible && this.uCheckGoodsNo_base.Checked) nextCtrl = this.tEdit_GoodsNo;
                    else nextCtrl = GetNextCommonControl("tEdit_GoodsNo");
                }
            }

            // 品名あいまい条件
            if (controlName == "tComboEditor_GoodsNameFuzzy")
            {
                if (this.tEdit_GoodsNo.Visible && this.uCheckGoodsNo_base.Checked) nextCtrl = this.tEdit_GoodsNo;
                else nextCtrl = GetNextCommonControl("tEdit_GoodsNo");
            }

            // 品番
            if (controlName == "tEdit_GoodsNo")
            {
                if (this.tEdit_GoodsNo.Visible && String.IsNullOrEmpty(this.tEdit_GoodsNo.Text.Trim()) && this.uCheckGoodsNo_base.Checked)
                {
                    nextCtrl = this.tComboEditor_GoodsNoFuzzy;
                }
                else
                {
                    if (this.tEdit_MakerCd.Visible && this.uCheckGoodsMakerCd_base.Checked) nextCtrl = this.tEdit_MakerCd;
                    else nextCtrl = GetNextCommonControl("tEdit_MakerCd");
                }
            }

            // 品番あいまい条件
            if (controlName == "tComboEditor_GoodsNoFuzzy")
            {
                if (this.tEdit_MakerCd.Visible && this.uCheckGoodsMakerCd_base.Checked) nextCtrl = this.tEdit_MakerCd;
                else nextCtrl = GetNextCommonControl("tEdit_MakerCd");
            }

            // メーカーコード
            if (controlName == "tEdit_MakerCd")
            {
                if (this.tEdit_MakerCd.Visible && String.IsNullOrEmpty(this.tEdit_MakerCd.Text.Trim()) && this.uCheckGoodsMakerCd_base.Checked)
                {
                    nextCtrl = this.uButton_MakerCd;
                }
                else
                {
                    if (this.tEdit_SalesCode.Visible && this.uCheckSalesCode_base.Checked) nextCtrl = this.tEdit_SalesCode;
                    else nextCtrl = GetNextCommonControl("tEdit_SalesCode");
                }
            }

            // メーカーガイド
            if (controlName == "uButton_MakerCd")
            {
                if (this.tEdit_SalesCode.Visible && this.uCheckSalesCode_base.Checked) nextCtrl = this.tEdit_SalesCode;
                else nextCtrl = GetNextCommonControl("tEdit_SalesCode");
            }

            // 販売区分コード
            if (controlName == "tEdit_SalesCode")
            {
                if (this.tEdit_SalesCode.Visible && String.IsNullOrEmpty(this.tEdit_SalesCode.Text.Trim()) && this.uCheckSalesCode_base.Checked)
                {
                    nextCtrl = this.uButton_SalesCode;
                }
                else
                {
                    if (this.tEdit_EnterpriseGanreCode.Visible && this.uCheckEnterpriseGanreCode_base.Checked) nextCtrl = this.tEdit_EnterpriseGanreCode;
                    else nextCtrl = GetNextCommonControl("tEdit_EnterpriseGanreCode");
                }
            }

            // 販売区分ガイド
            if (controlName == "uButton_SalesCode")
            {
                if (this.tEdit_EnterpriseGanreCode.Visible && this.uCheckEnterpriseGanreCode_base.Checked) nextCtrl = this.tEdit_EnterpriseGanreCode;
                else nextCtrl = GetNextCommonControl("tEdit_EnterpriseGanreCode");
            }

            // 自社分類コード
            if (controlName == "tEdit_EnterpriseGanreCode")
            {
                if (this.tEdit_EnterpriseGanreCode.Visible && String.IsNullOrEmpty(this.tEdit_EnterpriseGanreCode.Text.Trim()) && this.uCheckEnterpriseGanreCode_base.Checked)
                {
                    nextCtrl = this.uButton_EnterpriseGanreCode;
                }
                else
                {
                    if (this.tComboEditor_GoodsKindCode.Visible && this.uCheckGoodsKindCode_base.Checked) nextCtrl = this.tComboEditor_GoodsKindCode;
                    else nextCtrl = GetNextCommonControl("tComboEditor_GoodsKindCode");
                }
            }

            // 自社分類ガイド
            if (controlName == "uButton_EnterpriseGanreCode")
            {
                if (this.tComboEditor_GoodsKindCode.Visible && this.uCheckGoodsKindCode_base.Checked) nextCtrl = this.tComboEditor_GoodsKindCode;
                else nextCtrl = GetNextCommonControl("tComboEditor_GoodsKindCode");
            }

            // 商品属性
            if (controlName == "tComboEditor_GoodsKindCode")
            {
                if (this.tComboEditor_SalesOrderDivCd.Visible && this.uCheckSalesOrderDivCd_base.Checked) nextCtrl = this.tComboEditor_SalesOrderDivCd;
                else nextCtrl = GetNextCommonControl("tComboEditor_SalesOrderDivCd");
            }

            // 在庫取寄区分
            if (controlName == "tComboEditor_SalesOrderDivCd")
            {
                if (this.tEdit_WarehouseCd.Visible && this.uCheckWarehouseCode_base.Checked) nextCtrl = this.tEdit_WarehouseCd;
                else nextCtrl = GetNextCommonControl("tEdit_WarehouseCd");
            }

            // 倉庫コード
            if (controlName == "tEdit_WarehouseCd")
            {
                if (this.tEdit_WarehouseCd.Visible && String.IsNullOrEmpty(this.tEdit_WarehouseCd.Text.Trim()) && this.uCheckWarehouseCode_base.Checked)
                {
                    nextCtrl = this.uButton_WarehouseCd;
                }
                else
                {
                    if (this.tEdit_WarehouseShelfNo.Visible && this.uCheckWarehouseShelfNo_base.Checked) nextCtrl = this.tEdit_WarehouseShelfNo;
                    else nextCtrl = GetNextCommonControl("tEdit_WarehouseShelfNo");
                }
            }

            // 倉庫ガイド
            if (controlName == "uButton_WarehouseCd")
            {
                if (this.tEdit_WarehouseShelfNo.Visible && this.uCheckWarehouseShelfNo_base.Checked) nextCtrl = this.tEdit_WarehouseShelfNo;
                else nextCtrl = GetNextCommonControl("tEdit_WarehouseShelfNo");
            }

            // 棚番
            if (controlName == "tEdit_WarehouseShelfNo")
            {
                if (this.tEdit_WarehouseShelfNo.Visible && String.IsNullOrEmpty(this.tEdit_WarehouseShelfNo.Text.Trim()) && this.uCheckWarehouseShelfNo_base.Checked)
                {
                    nextCtrl = this.tComboEditor_WarehouseShelfNoFuzzy;
                }
                else
                {
                    if (this.tEdit_SupplierSlipNo.Visible && this.uCheckSupplierSlipNo_base.Checked) nextCtrl = this.tEdit_SupplierSlipNo;
                    else nextCtrl = GetNextCommonControl("tEdit_SupplierSlipNo");
                }
            }

            // 棚番あいまい条件
            if (controlName == "tComboEditor_WarehouseShelfNoFuzzy")
            {
                if (this.tEdit_SupplierSlipNo.Visible && this.uCheckSupplierSlipNo_base.Checked) nextCtrl = this.tEdit_SupplierSlipNo;
                else nextCtrl = GetNextCommonControl("tEdit_SupplierSlipNo");
            }

            // 仕入伝票番号
            if (controlName == "tEdit_SupplierSlipNo")
            {
                //if (this.tEdit_SupplierCd.Visible && this.uCheckSupplierSlipNo_base.Checked) nextCtrl = this.tEdit_SupplierCd;//DEL BY 凌小青 on 2011/10/26 for Redmine#26256
                if (this.tEdit_SupplierCd.Visible && this.uCheckSupplierCd_base.Checked) nextCtrl = this.tEdit_SupplierCd;  //ADD BY 凌小青 on 2011/10/26 for Redmine#26256
                else nextCtrl = GetNextCommonControl("tEdit_SupplierCd");
            }

            // 仕入先
            if (controlName == "tEdit_SupplierCd")
            {
                //if (this.tEdit_SupplierCd.Visible && String.IsNullOrEmpty(this.tEdit_SupplierCd.Text.Trim()) && this.uCheckSupplierSlipNo_base.Checked) //DEL BY 凌小青 on 2011/10/26 for Redmine#26256
                if (this.tEdit_SupplierCd.Visible && String.IsNullOrEmpty(this.tEdit_SupplierCd.Text.Trim()) && this.uCheckSupplierCd_base.Checked)//ADD BY 凌小青 on 2011/10/26 for Redmine#26256
                {
                    nextCtrl = this.uButton_SupplierCd;
                }
                else
                {
                    if (this.tEdit_UOESupplierCd.Visible && this.uCheckUOESupplierCd_base.Checked) nextCtrl = this.tEdit_UOESupplierCd;
                    else nextCtrl = GetNextCommonControl("tEdit_UOESupplierCd");
                }
            }

            // 仕入先ガイド
            if (controlName == "uButton_SupplierCd")
            {
                if (this.tEdit_UOESupplierCd.Visible && this.uCheckUOESupplierCd_base.Checked) nextCtrl = this.tEdit_UOESupplierCd;
                else nextCtrl = GetNextCommonControl("tEdit_UOESupplierCd");
            }

            // 発注先
            if (controlName == "tEdit_UOESupplierCd")
            {
                if (this.tEdit_UOESupplierCd.Visible && String.IsNullOrEmpty(this.tEdit_UOESupplierCd.Text.Trim()) && this.uCheckUOESupplierCd_base.Checked)
                {
                    nextCtrl = this.uButton_UOESupplierCd;
                }
                else
                {
                    if (this.tEdit_AddresseeCode.Visible && this.uCheckAddresseeCode_base.Checked) nextCtrl = this.tEdit_AddresseeCode;
                    else nextCtrl = GetNextCommonControl("tEdit_AddresseeCode");
                }
            }

            // 発注先ガイド
            if (controlName == "uButton_UOESupplierCd")
            {
                if (this.tEdit_AddresseeCode.Visible && this.uCheckAddresseeCode_base.Checked) nextCtrl = this.tEdit_AddresseeCode;
                else nextCtrl = GetNextCommonControl("tEdit_AddresseeCode");
            }

            // 納入先
            if (controlName == "tEdit_AddresseeCode")
            {
                if (this.tEdit_AddresseeCode.Visible && String.IsNullOrEmpty(this.tEdit_AddresseeCode.Text.Trim()) && this.uCheckAddresseeCode_base.Checked)
                {
                    nextCtrl = this.uButton_AddresseeCode;
                }
                else
                {
                    if (this.tEdit_DtlNote.Visible && this.uCheckDtlNote_base.Checked) nextCtrl = this.tEdit_DtlNote;
                    else nextCtrl = GetNextCommonControl("tEdit_DtlNote");
                }
            }

            // 納入先ガイド
            if (controlName == "uButton_AddresseeCode")
            {
                if (this.tEdit_DtlNote.Visible && this.uCheckDtlNote_base.Checked) nextCtrl = this.tEdit_DtlNote;
                else nextCtrl = GetNextCommonControl("tEdit_DtlNote");
            }

            // 明細備考
            if (controlName == "tEdit_DtlNote")
            {
                if (this.tEdit_DtlNote.Visible && String.IsNullOrEmpty(this.tEdit_DtlNote.Text.Trim()) && this.uCheckDtlNote_base.Checked)
                {
                    nextCtrl = this.tComboEditor_DtlNoteFuzzy;
                }
                else
                {
                    if (this.tComboEditor_DeleteFlag.Visible && this.uCheckDeleteFlag_base.Checked) nextCtrl = this.tComboEditor_DeleteFlag;
                    else nextCtrl = GetNextCommonControl("tComboEditor_DeleteFlag");
                }
            }

            // 明細備考あいまい条件
            if (controlName == "tComboEditor_DtlNoteFuzzy")
            {
                if (this.tComboEditor_DeleteFlag.Visible && this.uCheckDeleteFlag_base.Checked) nextCtrl = this.tComboEditor_DeleteFlag;
                else nextCtrl = GetNextCommonControl("tComboEditor_DeleteFlag");
            }

            // 削除指定区分
            if (controlName == "tComboEditor_DeleteFlag")
            {
                if (this.tEdit_ClaimName.Visible && this.uCheckClaimCode_base.Checked) nextCtrl = this.tEdit_ClaimName;
                else nextCtrl = GetNextCommonControl("tEdit_ClaimName");
            }

            // 請求先
            if (controlName == "tEdit_ClaimName")
            {
                if (this.tEdit_ClaimName.Visible && String.IsNullOrEmpty(this.tEdit_ClaimName.Text.Trim()) && this.uCheckClaimCode_base.Checked)
                {
                    nextCtrl = this.uButton_ClaimGuide;
                }
                else
                {
                    if (this.tDateEdit_AddUpADateSt.Visible && this.uCheckAddUpADateSt_base.Checked) nextCtrl = this.tDateEdit_AddUpADateSt;
                    else nextCtrl = GetNextCommonControl("tDateEdit_AddUpADateSt");
                }
            }

            // 請求先ガイド
            if (controlName == "uButton_ClaimGuide")
            {
                if (this.tDateEdit_AddUpADateSt.Visible && this.uCheckAddUpADateSt_base.Checked) nextCtrl = this.tDateEdit_AddUpADateSt;
                else nextCtrl = GetNextCommonControl("tDateEdit_AddUpADateSt");
            }

            // 入力日開始
            if (controlName == "tDateEdit_AddUpADateSt")
            {
                if (this.tDateEdit_AddUpADateEd.Visible && this.uCheckAddUpADateEd_base.Checked) nextCtrl = this.tDateEdit_AddUpADateEd;
                else nextCtrl = GetNextCommonControl("tDateEdit_AddUpADateEd");
            }

            // 入力日（終了）
            if (controlName == "tDateEdit_AddUpADateEd")
            {
                /* ---------------------- DEL START 2011/07/18 朱宝軍 ----------------->>>>>
                // 抽出条件
                if (this.uExGroupBox_ExtraCondition.Visible)
                {
                    if (this.tComboEditor_SalesSlipCd.Visible && this.uCheckSalesSlipCd.Checked && this.uCheckSalesSlipCd.Enabled == true)
                    {
                        nextCtrl = this.tComboEditor_SalesSlipCd;
                    }
                    else
                    {
                        //拡張検索条件の表示状態を調べて次へ
                        nextCtrl = this.GetNextControl("tComboEditor_SalesSlipCd");
                    }
                }
                else nextCtrl = this.SearchOnChangeFocus(nextCtrl);
                ---------------------- DEL END   2011/07/18 朱宝軍-----------------<<<<<*/
                // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
                if (this._opt_Pcc == (int)Option.OFF)
                {
                    // 抽出条件
                    if (this.uExGroupBox_ExtraCondition.Visible)
                    {
                        //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
                        if (this._opt_IKeMoTo == (int)Option.ON)
                        {
                            if (this.tComboEditor_AcptAnOdrMakeDiv.Visible && this.uCheckAcptAnOdrMakeDiv_base.Checked && this.uCheckAcptAnOdrMakeDiv_base.Enabled == true)
                            {
                                nextCtrl = this.tComboEditor_AcptAnOdrMakeDiv;
                            }
                            else
                            {
                                //拡張検索条件の表示状態を調べて次へ
                                nextCtrl = this.GetNextCommonControl("tComboEditor_AcptAnOdrMakeDiv");
                            }
                        }
                        else
                        {                           
                           //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<
                            // ---------- UPD 2016/01/21 Y.Wakita ---------->>>>>
                            //if (this.tComboEditor_SalesSlipCd.Visible && this.uCheckSalesSlipCd.Checked && this.uCheckSalesSlipCd.Enabled == true)
                            //{
                            //    nextCtrl = this.tComboEditor_SalesSlipCd;
                            //}
                            // else
                            //{
                                //拡張検索条件の表示状態を調べて次へ
                            //    nextCtrl = this.GetNextControl("tComboEditor_SalesSlipCd");
                            //}
                            if (this.tComboEditor_AddUpRemDiv.Visible && this.uCheckAddUpRemDiv_base.Checked && this.tComboEditor_AddUpRemDiv.Enabled == true) nextCtrl = this.tComboEditor_AddUpRemDiv;
                            else nextCtrl = GetNextCommonControl("tComboEditor_AddUpRemDiv");
                            // ---------- UPD 2016/01/21 Y.Wakita ----------<<<<<
                        }// ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応
                    }
                    //else nextCtrl = this.SearchOnChangeFocus(nextCtrl); // DEL K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応
                    //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
                    else
                    {
                        if (this._opt_IKeMoTo == (int)Option.ON)
                        {
                            if (this.tComboEditor_AcptAnOdrMakeDiv.Visible && this.uCheckAcptAnOdrMakeDiv_base.Checked && this.uCheckAcptAnOdrMakeDiv_base.Enabled == true)
                            {
                                nextCtrl = this.tComboEditor_AcptAnOdrMakeDiv;
                            }
                            else
                            {
                                //拡張検索条件の表示状態を調べて次へ
                                nextCtrl = this.GetNextCommonControl("tComboEditor_AcptAnOdrMakeDiv");
                            }
                        }
                        else
                        {
                            // ---------- UPD 2016/01/21 Y.Wakita ---------->>>>>
                            // 検索実行・フォーカス移動
                            //nextCtrl = this.SearchOnChangeFocus(nextCtrl);
                            if (this.tComboEditor_AddUpRemDiv.Visible && this.uCheckAddUpRemDiv_base.Checked && this.tComboEditor_AddUpRemDiv.Enabled == true) nextCtrl = this.tComboEditor_AddUpRemDiv;
                            else nextCtrl = GetNextCommonControl("tComboEditor_AddUpRemDiv");
                            // ---------- UPD 2016/01/21 Y.Wakita ----------<<<<<
                        }
                    }
                    //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<
                    // ---------- UPD 2016/01/21 Y.Wakita ---------->>>>>
                    //// 抽出条件
                    //if (this.uExGroupBox_ExtraCondition.Visible)
                    //{
                    //    if (this.tComboEditor_SalesSlipCd.Visible && this.uCheckSalesSlipCd.Checked && this.uCheckSalesSlipCd.Enabled == true)
                    //    {
                    //        nextCtrl = this.tComboEditor_SalesSlipCd;
                    //    }
                    //    else
                    //    {
                    //        //拡張検索条件の表示状態を調べて次へ
                    //        nextCtrl = this.GetNextControl("tComboEditor_SalesSlipCd");
                    //    }
                    //}
                    //else nextCtrl = this.SearchOnChangeFocus(nextCtrl);

                    if (this.tComboEditor_AddUpRemDiv.Visible && this.uCheckAddUpRemDiv_base.Checked && this.tComboEditor_AddUpRemDiv.Enabled == true) nextCtrl = this.tComboEditor_AddUpRemDiv;
                    else nextCtrl = GetNextCommonControl("tComboEditor_AddUpRemDiv");
                    // ---------- UPD 2016/01/21 Y.Wakita ----------<<<<<
                }
                else
                {
                    if (this.tComboEditor_AutoAnswerDivSCM.Visible && this.uCheckAutoAnswerDivSCM_base.Checked) nextCtrl = this.tComboEditor_AutoAnswerDivSCM;
                    else nextCtrl = GetNextCommonControl("tComboEditor_AutoAnswerDivSCM");
                }
                // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<
            }
            // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
            // 自動回答
            if (controlName == "tComboEditor_AutoAnswerDivSCM")
            {
                //---DEL START 2011/11/28 楊洋 ----------------------------------->>>>>
                //// 抽出条件
                //if (this.uExGroupBox_ExtraCondition.Visible)
                //{
                //    if (this.tComboEditor_SalesSlipCd.Visible && this.uCheckSalesSlipCd.Checked && this.uCheckSalesSlipCd.Enabled == true)
                //    {
                //        nextCtrl = this.tComboEditor_SalesSlipCd;
                //    }
                //    else
                //    {
                //        //拡張検索条件の表示状態を調べて次へ
                //        nextCtrl = this.GetNextControl("tComboEditor_SalesSlipCd");
                //    }
                //}
                //else nextCtrl = this.SearchOnChangeFocus(nextCtrl);
                //---DEL END 2011/11/28 楊洋 -----------------------------------<<<<<

                //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>
                if (this.tNedit_InquiryNumber.Visible && this.uCheckInquiryNumber_base.Checked && this.uCheckInquiryNumber_base.Enabled == true)
                {
                    nextCtrl = this.tNedit_InquiryNumber;
                }
                else
                {
                    //拡張検索条件の表示状態を調べて次へ
                    nextCtrl = this.GetNextCommonControl("tNedit_InquiryNumber");
                }
                //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<
            }
            // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<

            //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>
            //問合せ番号
            if (controlName == "tNedit_InquiryNumber")
            {
                //----- DEL K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
                // 抽出条件
                //if (this.uExGroupBox_ExtraCondition.Visible)
                //    if (this.tComboEditor_SalesSlipCd.Visible && this.uCheckSalesSlipCd.Checked && this.uCheckSalesSlipCd.Enabled == true)
                //    {
                //        nextCtrl = this.tComboEditor_SalesSlipCd;
                //    }
                //    else
                //    {
                //        //拡張検索条件の表示状態を調べて次へ
                //        nextCtrl = this.GetNextControl("tComboEditor_SalesSlipCd");
                //    }
                //}
                //else nextCtrl = this.SearchOnChangeFocus(nextCtrl);
                //----- DEL K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<< 

                // ---------- DEL 2016/01/21 Y.Wakita ---------->>>>>
                ////----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
                //if (this._opt_Meigo == Convert.ToInt32(Option.ON) && this.tEdit_SalesAreaNm.Visible && this.ultraCheckEditor_salesArea_base.Checked && !ultraCheckEditor_salesArea.Enabled)
                //{
                //    nextCtrl = this.tEdit_SalesAreaNm;
                //}
                
                //----- DEL K2017/01/05 譚洪 ソースのマージを修正する対応 ----->>>>>
                //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
                //else if (this._opt_IKeMoTo == (int)Option.ON)
                //{
                //    if (this.tComboEditor_AcptAnOdrMakeDiv.Visible && this.uCheckAcptAnOdrMakeDiv_base.Checked && this.uCheckAcptAnOdrMakeDiv_base.Enabled == true)
                //    {
                //        nextCtrl = this.tComboEditor_AcptAnOdrMakeDiv;
                //    }
                //    else
                //    {
                //        //拡張検索条件の表示状態を調べて次へ
                //        nextCtrl = this.GetNextCommonControl("tComboEditor_AcptAnOdrMakeDiv");
                //    }
                //}
                //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<
                //----- DEL K2017/01/05 譚洪 ソースのマージを修正する対応 -----<<<<<


                //else
                //{
                //    nextCtrl = this.GetNextCommonControl("tEdit_SalesAreaNm");
                //}
                ////----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<
                // ---------- DEL 2016/01/21 Y.Wakita ----------<<<<<

                // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
                if (this.tComboEditor_AddUpRemDiv.Visible && this.uCheckAddUpRemDiv_base.Checked && this.tComboEditor_AddUpRemDiv.Enabled == true) nextCtrl = this.tComboEditor_AddUpRemDiv;
                else nextCtrl = GetNextCommonControl("tComboEditor_AddUpRemDiv");
                // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<
            }
            //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<
            	
            // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
            //出荷状況
            if (controlName == "tComboEditor_AddUpRemDiv")
            {
                // 抽出条件
                if (this.uExGroupBox_ExtraCondition.Visible)
                {
                    if (this.tComboEditor_SalesSlipCd.Visible && this.uCheckSalesSlipCd.Checked && this.uCheckSalesSlipCd.Enabled == true)
                    {
                        nextCtrl = this.tComboEditor_SalesSlipCd;
                    }
                    else
                    {
                        //拡張検索条件の表示状態を調べて次へ
                        nextCtrl = this.GetNextControl("tComboEditor_SalesSlipCd");
                    }
                }
                //else nextCtrl = this.SearchOnChangeFocus(nextCtrl);
                if (this._opt_Meigo == Convert.ToInt32(Option.ON) && this.tEdit_SalesAreaNm.Visible && this.ultraCheckEditor_salesArea_base.Checked && !ultraCheckEditor_salesArea.Enabled)
                {
                    nextCtrl = this.tEdit_SalesAreaNm;
                }
                else
                {
                    nextCtrl = this.GetNextCommonControl("tEdit_SalesAreaNm");
                }


                if (this._opt_IKeMoTo == (int)Option.ON)
                {
                    if (this.tComboEditor_AcptAnOdrMakeDiv.Visible && this.uCheckAcptAnOdrMakeDiv_base.Checked && this.uCheckAcptAnOdrMakeDiv_base.Enabled == true)
                    {
                        nextCtrl = this.tComboEditor_AcptAnOdrMakeDiv;
                    }
                    else
                    {
                        //拡張検索条件の表示状態を調べて次へ
                        nextCtrl = this.GetNextCommonControl("tComboEditor_AcptAnOdrMakeDiv");
                    }
                }
            }
            // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<

            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
            //地区
            if (controlName == "tEdit_SalesAreaNm")
            {
                if (this._opt_Meigo == Convert.ToInt32(Option.ON) && this.uButton_SalesAreaCdGuide.Visible && this.ultraCheckEditor_salesArea_base.Checked && !ultraCheckEditor_salesArea.Enabled && String.IsNullOrEmpty(this.tEdit_SalesAreaNm.Text))
                {
                    nextCtrl = this.uButton_SalesAreaCdGuide;
                }
                else
                {
                    nextCtrl = this.GetNextCommonControl("uButton_SalesAreaCdGuide");
                }
            }
            //地区
            if (controlName == "uButton_SalesAreaCdGuide")
            {
                if (this._opt_Meigo == Convert.ToInt32(Option.ON) && this.tNedit_CustAnalysCode1.Visible && this.ultraCheckEditor_custAnalysCode_base.Checked && !ultraCheckEditor_custAnalysCode.Enabled)
                {
                    nextCtrl = this.tNedit_CustAnalysCode1;
                }
                else
                {
                    nextCtrl = this.GetNextCommonControl("tNedit_CustAnalysCode1");
                }
            }
            //分析コード1
            if (controlName == "tNedit_CustAnalysCode1")
            {
                if (this._opt_Meigo == Convert.ToInt32(Option.ON) && this.tNedit_CustAnalysCode2.Visible && this.ultraCheckEditor_custAnalysCode_base.Checked && !ultraCheckEditor_custAnalysCode.Enabled)
                {
                    nextCtrl = this.tNedit_CustAnalysCode2;
                }
                else
                {
                    nextCtrl = this.GetNextCommonControl("tNedit_CustAnalysCode2");
                }
            }
            //分析コード2
            if (controlName == "tNedit_CustAnalysCode2")
            {
                if (this._opt_Meigo == Convert.ToInt32(Option.ON) && this.tNedit_CustAnalysCode3.Visible && this.ultraCheckEditor_custAnalysCode_base.Checked && !ultraCheckEditor_custAnalysCode.Enabled)
                {
                    nextCtrl = this.tNedit_CustAnalysCode3;
                }
                else
                {
                    nextCtrl = this.GetNextCommonControl("tNedit_CustAnalysCode3");
                }
            }
            //分析コード3
            if (controlName == "tNedit_CustAnalysCode3")
            {
                if (this._opt_Meigo == Convert.ToInt32(Option.ON) && this.tNedit_CustAnalysCode4.Visible && this.ultraCheckEditor_custAnalysCode_base.Checked && !ultraCheckEditor_custAnalysCode.Enabled)
                {
                    nextCtrl = this.tNedit_CustAnalysCode4;
                }
                else
                {
                    nextCtrl = this.GetNextCommonControl("tNedit_CustAnalysCode4");
                }
            }
            //分析コード4
            if (controlName == "tNedit_CustAnalysCode4")
            {
                if (this._opt_Meigo == Convert.ToInt32(Option.ON) && this.tNedit_CustAnalysCode5.Visible && this.ultraCheckEditor_custAnalysCode_base.Checked && !ultraCheckEditor_custAnalysCode.Enabled)
                {
                    nextCtrl = this.tNedit_CustAnalysCode5;
                }
                else
                {
                    nextCtrl = this.GetNextCommonControl("tNedit_CustAnalysCode5");
                }
            }
            //分析コード5
            if (controlName == "tNedit_CustAnalysCode5")
            {
                if (this._opt_Meigo == Convert.ToInt32(Option.ON) && this.tNedit_CustAnalysCode6.Visible && this.ultraCheckEditor_custAnalysCode_base.Checked && !ultraCheckEditor_custAnalysCode.Enabled)
                {
                    nextCtrl = this.tNedit_CustAnalysCode6;
                }
                else
                {
                    nextCtrl = this.GetNextCommonControl("tNedit_CustAnalysCode6");
                }
            }
            //分析コード
            if (controlName == "tNedit_CustAnalysCode6")
            {
                if (this.tComboEditor_SalesSlipCd.Visible && this.uCheckSalesSlipCd.Checked && this.uCheckSalesSlipCd.Enabled == true)
                {
                    nextCtrl = this.tComboEditor_SalesSlipCd;
                }
                else
                {
                    //拡張検索条件の表示状態を調べて次へ
                    nextCtrl = this.GetNextControl("tComboEditor_SalesSlipCd");
                }
            }
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<

            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
            // 受注作成区分
            if (this._opt_IKeMoTo == (int)Option.ON && controlName == "tComboEditor_AcptAnOdrMakeDiv")
            {
                // 抽出条件
                if (this.uExGroupBox_ExtraCondition.Visible)
                {
                    if (this.tComboEditor_SalesSlipCd.Visible && this.uCheckSalesSlipCd.Checked && this.uCheckSalesSlipCd.Enabled == true)
                    {
                        nextCtrl = this.tComboEditor_SalesSlipCd;
                    }
                    else
                    {
                        //拡張検索条件の表示状態を調べて次へ
                        nextCtrl = this.GetNextControl("tComboEditor_SalesSlipCd");
                    }
                }
                else nextCtrl = this.SearchOnChangeFocus(nextCtrl);
            }
            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<

            return nextCtrl;
        }

        /// <summary>
        /// 拡張基本条件で、表示されている前のコントロールを取得する
        /// </summary>
        /// <param name="controlName">controlName</param>
        /// <returns>前のコントロール</returns>
        /// <param name="sw">在庫データ</param>
        /// <br>Note       : 拡張基本条件で、表示されている前のコントロールを取得する。</br>
        /// <br>Programmer : 呉元嘯</br>
        /// <br>Date       : 2009/12/28</br>
        /// <br>Update Note :2010/08/05 呉元嘯 障害・改良対応8月リリース分</br>
        /// <br>             車台番号の修正</br> 
        /// <br>Update Note :2011/11/28 楊洋 得意先電子元帳/(BLﾊﾟｰﾂｵｰﾀﾞｰｼｽﾃﾑ)問合せ番号の追加</br>
        /// <br>Update Note :2011/12/15 gezh 2012/01/25配信分 redmine#26667 Enterキーのフォーカス遷移の修正</br>
        /// <br>Update Note : SPK車台番号文字列対応に伴う車台番号(VINコード)による抽出を可能にする</br>
        /// <br>Programmer  : FSI厚川 宏</br>
        /// <br>Date        : 2013/03/25</br>
        /// <br>Update Note : K2015/06/16 鮑晶</br>
        /// <br>管理番号    : 11101427-00</br>
        /// <br>            : メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
        /// <br>Update Note : 2016/01/21 脇田 靖之</br>
        /// <br>管理番号    : 11270007-00</br>
        /// <br>            : 仕掛一覧№2808 貸出受注対応</br>
        /// <br>            : ①検索条件に「出荷状況」項目を追加</br>
        /// <br>            : ②明細表示に計上数、未計上数項目を追加</br>
        /// <br>Update Note : K2016/02/23 時シン</br>
        /// <br>              ㈱イケモト 抽出条件にて受注作成区分を追加する対応</br>
        /// <br>Update Note: K2017/01/05 譚洪</br>
        /// <br>管理番号   : 11270116-00 得意先電子元帳パッケージ出荷用ソースのマージ</br>
        /// </remarks>
        private Control GetBeforeCommonControl(string controlName)
        {
            Control nextCtrl = null;

            // 伝票区分
            if (controlName == "tComboEditor_SalesSlipCd")
            {
                nextCtrl = this.tDateEdit_SalesDateEd;
            }

            // 明細区分
            if (controlName == "tComboEditor_SalesSlipCdDtl")
            {
                if (this.tComboEditor_SalesSlipCd.Visible && this.uCheckSalesSlipCd_base.Checked) nextCtrl = this.tComboEditor_SalesSlipCd;
                else nextCtrl = GetBeforeCommonControl("tComboEditor_SalesSlipCd");
            }

            // 伝票番号
            if (controlName == "tEdit_SalesSlipNum")
            {
                if (this.tComboEditor_SalesSlipCdDtl.Visible && this.uCheckSalesSlipCdDtl_base.Checked) nextCtrl = this.tComboEditor_SalesSlipCdDtl;
                else nextCtrl = GetBeforeCommonControl("tComboEditor_SalesSlipCdDtl");
            }

            // 担当者
            if (controlName == "tEdit_SalesEmployeeCd")
            {
                if (this.tEdit_SalesSlipNum.Visible && this.uCheckSalesSlipNum_base.Checked) nextCtrl = this.tEdit_SalesSlipNum;
                else nextCtrl = GetBeforeCommonControl("tEdit_SalesSlipNum");
            }

            // 担当者ガイド
            if (controlName == "uButton_SalesEmployeeCd")
            {
                if (this.tEdit_SalesEmployeeCd.Visible && this.uCheckSalesEmployeeCd_base.Checked) nextCtrl = this.tEdit_SalesEmployeeCd;
                else nextCtrl = GetBeforeCommonControl("tEdit_SalesEmployeeCd");
            }

            // 受注者
            if (controlName == "tEdit_FrontEmployeeCd")
            {
                if (this.tEdit_SalesEmployeeCd.Visible && this.uCheckSalesEmployeeCd_base.Checked) nextCtrl = this.uButton_SalesEmployeeCd;
                else nextCtrl = GetBeforeCommonControl("tEdit_SalesEmployeeCd");
            }

            // 受注者ガイド
            if (controlName == "uButton_FrontEmployeeCd")
            {
                if (this.tEdit_FrontEmployeeCd.Visible && this.uCheckFrontEmployeeCd_base.Checked) nextCtrl = this.tEdit_FrontEmployeeCd;
                else nextCtrl = GetBeforeCommonControl("tEdit_FrontEmployeeCd");
            }

            // 発注者
            if (controlName == "tEdit_SalesInputCode")
            {
                if (this.tEdit_FrontEmployeeCd.Visible && this.uCheckFrontEmployeeCd_base.Checked) nextCtrl = this.uButton_FrontEmployeeCd;
                else nextCtrl = GetBeforeCommonControl("tEdit_FrontEmployeeCd");
            }

            // 発注者ガイド
            if (controlName == "uButton_SalesInputCode")
            {
                if (this.tEdit_SalesInputCode.Visible && this.uCheckSalesInputCode_base.Checked) nextCtrl = this.tEdit_SalesInputCode;
                else nextCtrl = GetBeforeCommonControl("tEdit_SalesInputCode");
            }
            // 管理番号
            if (controlName == "tEdit_CarMngCode")
            {
                if (this.tEdit_SalesInputCode.Visible && this.uCheckSalesInputCode_base.Checked) nextCtrl = this.uButton_SalesInputCode;
                else nextCtrl = GetBeforeCommonControl("tEdit_SalesInputCode");
            }
            // 管理番号あいまい条件
            if (controlName == "tComboEditor_SearchDiv")
            {
                if (this.tEdit_CarMngCode.Visible && this.uCheckCarMngCode_base.Checked) nextCtrl = this.tEdit_CarMngCode;
                else nextCtrl = GetBeforeCommonControl("tEdit_CarMngCode");
            }
            // 車種名称
            if (controlName == "tEdit_ModelFullName")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_CarMngCode.Visible && this.uCheckCarMngCode_base.Checked) nextCtrl = this.tComboEditor_SearchDiv;
                //else nextCtrl = GetBeforeCommonControl("tEdit_CarMngCode");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_CarMngCode.Visible && this.uCheckCarMngCode_base.Checked)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_SearchDiv;
                    else nextCtrl = this.tEdit_CarMngCode;
                }
                else nextCtrl = GetBeforeCommonControl("tEdit_CarMngCode");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 車種名称あいまい条件
            if (controlName == "tComboEditor_ModelFullNameFuzzy")
            {
                if (this.tEdit_ModelFullName.Visible && this.uCheckModelFullName_base.Checked) nextCtrl = this.tEdit_ModelFullName;
                else nextCtrl = GetBeforeCommonControl("tEdit_ModelFullName");
            }

            // 型式
            if (controlName == "tEdit_FullModel")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_ModelFullName.Visible && this.uCheckModelFullName_base.Checked) nextCtrl = this.tComboEditor_ModelFullNameFuzzy;
                //else nextCtrl = GetBeforeCommonControl("tEdit_ModelFullName");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_ModelFullName.Visible && this.uCheckModelFullName_base.Checked)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_ModelFullNameFuzzy;
                    else nextCtrl = this.tEdit_ModelFullName;
                }
                else nextCtrl = GetBeforeCommonControl("tEdit_ModelFullName");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 型式あいまい条件
            if (controlName == "tComboEditor_FullModelFuzzy")
            {
                if (this.tEdit_FullModel.Visible && this.uCheckFullModel_base.Checked) nextCtrl = this.tEdit_FullModel;
                else nextCtrl = GetBeforeCommonControl("tEdit_FullModel");
            }

            // 車台No
            // ---------DEL 2013/03/25---------->>>>>
            //if (controlName == "tNedit_SearchFrameNo")
            // ---------DEL 2013/03/25----------<<<<<
            // ---------ADD 2013/03/25---------->>>>>
            if (controlName == "tEdit_SearchFrameNo")
            // ---------ADD 2013/03/25----------<<<<<
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_FullModel.Visible && this.uCheckFullModel_base.Checked) nextCtrl = this.tComboEditor_FullModelFuzzy;
                //else nextCtrl = GetBeforeCommonControl("tEdit_FullModel");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_FullModel.Visible && this.uCheckFullModel_base.Checked)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_FullModelFuzzy;
                    else nextCtrl = this.tEdit_FullModel;
                }
                else nextCtrl = GetBeforeCommonControl("tEdit_FullModel");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // -----------ADD 2010/08/05----------->>>>>
            // 車台Noあいまい条件
            if (controlName == "tComboEditor_SearchFrameNoFuzzy")
            {
                // ---------DEL 2013/03/25---------->>>>>
                //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo_base.Checked) nextCtrl = this.tNedit_SearchFrameNo;
                //else nextCtrl = GetBeforeCommonControl("tNedit_SearchFrameNo");
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                if (this.tEdit_SearchFrameNo.Visible && this.uCheckSearchFrameNo_base.Checked) nextCtrl = this.tEdit_SearchFrameNo;
                else nextCtrl = GetBeforeCommonControl("tEdit_SearchFrameNo");
                // ---------ADD 2013/03/25----------<<<<<
            }
            // -----------ADD 2010/08/05-----------<<<<<
            // 指示書No
            if (controlName == "tEdit_PartySalesSlipNum")
            {
                //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo_base.Checked) nextCtrl = this.tNedit_SearchFrameNo;// DEL 2010/08/05
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo_base.Checked) nextCtrl = this.tComboEditor_SearchFrameNoFuzzy;// ADD 2010/08/05
                //else nextCtrl = GetBeforeCommonControl("tNedit_SearchFrameNo");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                // ---------DEL 2013/03/25---------->>>>>
                //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo_base.Checked)
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                if (this.tEdit_SearchFrameNo.Visible && this.uCheckSearchFrameNo_base.Checked)
                // ---------ADD 2013/03/25----------<<<<<
                {
                    if (flag == true) nextCtrl = this.tComboEditor_SearchFrameNoFuzzy;
                    // ---------DEL 2013/03/25---------->>>>>
                    //else nextCtrl = this.tNedit_SearchFrameNo;
                    // ---------DEL 2013/03/25----------<<<<<
                    // ---------ADD 2013/03/25---------->>>>>
                    else nextCtrl = this.tEdit_SearchFrameNo;
                    // ---------ADD 2013/03/25----------<<<<<
                }
                // ---------DEL 2013/03/25---------->>>>>
                //else nextCtrl = GetBeforeCommonControl("tNedit_SearchFrameNo");
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                else nextCtrl = GetBeforeCommonControl("tEdit_SearchFrameNo");
                // ---------ADD 2013/03/25----------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<

            }

            // カラー名称
            if (controlName == "tEdit_ColorName1")
            {
                if (this.tEdit_PartySalesSlipNum.Visible && this.uCheckPartySalesSlipNum_base.Checked) nextCtrl = this.tEdit_PartySalesSlipNum;
                else nextCtrl = GetBeforeCommonControl("tEdit_PartySalesSlipNum");
            }

            // カラー名称あいまい条件
            if (controlName == "tComboEditor_ColorName1Fuzzy")
            {
                if (this.tEdit_ColorName1.Visible && this.uCheckColorName1_base.Checked) nextCtrl = this.tEdit_ColorName1;
                else nextCtrl = GetBeforeCommonControl("tEdit_ColorName1");
            }

            // トリム名称
            if (controlName == "tEdit_TrimName")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_ColorName1.Visible && this.uCheckColorName1_base.Checked) nextCtrl = this.tComboEditor_ColorName1Fuzzy;
                //else nextCtrl = GetBeforeCommonControl("tEdit_ColorName1");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_ColorName1.Visible && this.uCheckColorName1_base.Checked)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_ColorName1Fuzzy;
                    else nextCtrl = this.tEdit_ColorName1;
                }
                else nextCtrl = GetBeforeCommonControl("tEdit_ColorName1");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // トリム名称あいまい条件
            if (controlName == "tComboEditor_TrimNameFuzzy")
            {
                if (this.tEdit_TrimName.Visible && this.uCheckTrimName_base.Checked) nextCtrl = this.tEdit_TrimName;
                else nextCtrl = GetBeforeCommonControl("tEdit_TrimName");
            }

            // UOE送信
            if (controlName == "tComboEditor_DataSendCode")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_TrimName.Visible && this.uCheckTrimName_base.Checked) nextCtrl = this.tComboEditor_TrimNameFuzzy;
                //else nextCtrl = GetBeforeCommonControl("tEdit_TrimName");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_TrimName.Visible && this.uCheckTrimName_base.Checked)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_TrimNameFuzzy;
                    else nextCtrl = this.tEdit_TrimName;
                }
                else nextCtrl = GetBeforeCommonControl("tEdit_TrimName");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 備考
            if (controlName == "tEdit_SlipNote")
            {
                if (this.tComboEditor_DataSendCode.Visible && this.uCheckDataSendCode_base.Checked) nextCtrl = this.tComboEditor_DataSendCode;
                else nextCtrl = GetBeforeCommonControl("tComboEditor_DataSendCode");
            }

            // 備考ガイド
            if (controlName == "uButton_SlipNote")
            {
                if (this.tEdit_SlipNote.Visible && this.uCheckSlipNote_base.Checked) nextCtrl = this.tEdit_SlipNote;
                else nextCtrl = GetBeforeCommonControl("tEdit_SlipNote");
            }

            // 備考あいまい条件
            if (controlName == "tComboEditor_SlipNoteFuzzy")
            {
                if (this.tEdit_SlipNote.Visible && this.uCheckSlipNote_base.Checked) nextCtrl = this.uButton_SlipNote;
                else nextCtrl = GetBeforeCommonControl("tEdit_SlipNote");
            }

            // 備考2
            if (controlName == "tEdit_SlipNote2")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_SlipNote.Visible && this.uCheckSlipNote_base.Checked) nextCtrl = this.tComboEditor_SlipNoteFuzzy;
                //else nextCtrl = GetBeforeCommonControl("tEdit_SlipNote");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_SlipNote.Visible && this.uCheckSlipNote_base.Checked)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_SlipNoteFuzzy;
                    else nextCtrl = this.tEdit_SlipNote;
                }
                else nextCtrl = GetBeforeCommonControl("tEdit_SlipNote");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 備考２ガイド
            if (controlName == "uButton_SlipNote2")
            {
                if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2_base.Checked) nextCtrl = this.tEdit_SlipNote2;
                else nextCtrl = GetBeforeCommonControl("tEdit_SlipNote2");
            }

            // 備考2あいまい条件
            if (controlName == "tComboEditor_SlipNote2Fuzzy")
            {
                if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2_base.Checked) nextCtrl = this.uButton_SlipNote2;
                else nextCtrl = GetBeforeCommonControl("tEdit_SlipNote2");
            }

            // 備考3
            if (controlName == "tEdit_SlipNote3")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2_base.Checked) nextCtrl = this.tComboEditor_SlipNote2Fuzzy;
                //else nextCtrl = GetBeforeCommonControl("tEdit_SlipNote2");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2_base.Checked)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_SlipNote2Fuzzy;
                    else nextCtrl = this.tEdit_SlipNote2;
                }
                else nextCtrl = GetBeforeCommonControl("tEdit_SlipNote2");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 備考３ガイド
            if (controlName == "uButton_SlipNote3")
            {
                if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3_base.Checked) nextCtrl = this.tEdit_SlipNote3;
                else nextCtrl = GetBeforeCommonControl("tEdit_SlipNote3");
            }

            // 備考3あいまい条件
            if (controlName == "tComboEditor_SlipNote3Fuzzy")
            {
                if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3_base.Checked) nextCtrl = this.uButton_SlipNote3;
                else nextCtrl = GetBeforeCommonControl("tEdit_SlipNote3");
            }

            // UOEリマーク1
            if (controlName == "tEdit_UoeRemark1")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3_base.Checked) nextCtrl = this.tComboEditor_SlipNote3Fuzzy;
                //else nextCtrl = GetBeforeCommonControl("tEdit_SlipNote3");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3_base.Checked)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_SlipNote3Fuzzy;
                    else nextCtrl = this.tEdit_SlipNote3;
                }
                else nextCtrl = GetBeforeCommonControl("tEdit_SlipNote3");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // UOEリマーク1あいまい条件
            if (controlName == "tComboEditor_UoeRemark1Fuzzy")
            {
                if (this.tEdit_UoeRemark1.Visible && this.uCheckUoeRemark1_base.Checked) nextCtrl = this.tEdit_UoeRemark1;
                else nextCtrl = GetBeforeCommonControl("tEdit_UoeRemark1");
            }

            // UOEリマーク2
            if (controlName == "tEdit_UoeRemark2")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_UoeRemark1.Visible && this.uCheckUoeRemark1_base.Checked) nextCtrl = this.tComboEditor_UoeRemark1Fuzzy;
                //else nextCtrl = GetBeforeCommonControl("tEdit_UoeRemark1");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_UoeRemark1.Visible && this.uCheckUoeRemark1_base.Checked)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_UoeRemark1Fuzzy;
                    else nextCtrl = this.tEdit_UoeRemark1;
                }
                else nextCtrl = GetBeforeCommonControl("tEdit_UoeRemark1");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // UOEリマーク2あいまい条件
            if (controlName == "tComboEditor_UoeRemark2Fuzzy")
            {
                if (this.tEdit_UoeRemark2.Visible && this.uCheckUoeRemark2_base.Checked) nextCtrl = this.tEdit_UoeRemark2;
                else nextCtrl = GetBeforeCommonControl("tEdit_UoeRemark2");
            }

            // 商品大分類
            if (controlName == "tEdit_GoodsLGroup")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_UoeRemark2.Visible && this.uCheckUoeRemark2_base.Checked) nextCtrl = this.tComboEditor_UoeRemark2Fuzzy;
                //else nextCtrl = GetBeforeCommonControl("tEdit_UoeRemark2");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_UoeRemark2.Visible && this.uCheckUoeRemark2_base.Checked)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_UoeRemark2Fuzzy;
                    else nextCtrl = this.tEdit_UoeRemark2;
                }
                else nextCtrl = GetBeforeCommonControl("tEdit_UoeRemark2");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 商品大分類ガイド
            if (controlName == "uButton_GoodsLGroup")
            {
                if (this.tEdit_GoodsLGroup.Visible && this.uCheckGoodsLGroup_base.Checked) nextCtrl = this.tEdit_GoodsLGroup;
                else nextCtrl = GetBeforeCommonControl("tEdit_GoodsLGroup");
            }

            // 商品中分類
            if (controlName == "tEdit_GoodsMGroup")
            {
                if (this.tEdit_GoodsLGroup.Visible && this.uCheckGoodsLGroup_base.Checked) nextCtrl = this.uButton_GoodsLGroup;
                else nextCtrl = GetBeforeCommonControl("tEdit_GoodsLGroup");
            }

            // 商品中分類ガイド
            if (controlName == "uButton_GoodsMGroup")
            {
                if (this.tEdit_GoodsMGroup.Visible && this.uCheckGoodsMGroup_base.Checked) nextCtrl = this.tEdit_GoodsMGroup;
                else nextCtrl = GetBeforeCommonControl("tEdit_GoodsMGroup");
            }

            // BLグループ
            if (controlName == "tEdit_BlGroupCode")
            {
                if (this.tEdit_GoodsMGroup.Visible && this.uCheckGoodsMGroup_base.Checked) nextCtrl = this.uButton_GoodsMGroup;
                else nextCtrl = GetBeforeCommonControl("tEdit_GoodsMGroup");
            }

            // BLグループガイド
            if (controlName == "uButton_BlGroupCode")
            {
                if (this.tEdit_BlGroupCode.Visible && this.uCheckBLGroupCode_base.Checked) nextCtrl = this.tEdit_BlGroupCode;
                else nextCtrl = GetBeforeCommonControl("tEdit_BlGroupCode");
            }

            // BLコード
            if (controlName == "tEdit_BlGoodsCode")
            {
                if (this.tEdit_BlGroupCode.Visible && this.uCheckBLGroupCode_base.Checked) nextCtrl = this.uButton_BlGroupCode;
                else nextCtrl = GetBeforeCommonControl("tEdit_BlGroupCode");

            }

            // BLコードガイド
            if (controlName == "uButton_BlGoodsCode")
            {
                if (this.tEdit_BlGoodsCode.Visible && this.uCheckBLGoodsCode_base.Checked) nextCtrl = this.tEdit_BlGoodsCode;
                else nextCtrl = GetBeforeCommonControl("tEdit_BlGoodsCode");
            }

            // 品名
            if (controlName == "tEdit_GoodsName")
            {
                if (this.tEdit_BlGoodsCode.Visible && this.uCheckBLGoodsCode_base.Checked) nextCtrl = this.uButton_BlGoodsCode;
                else nextCtrl = GetBeforeCommonControl("tEdit_BlGoodsCode");
            }

            // 品名あいまい条件
            if (controlName == "tComboEditor_GoodsNameFuzzy")
            {
                if (this.tEdit_GoodsName.Visible && this.uCheckGoodsName_base.Checked) nextCtrl = this.tEdit_GoodsName;
                else nextCtrl = GetBeforeCommonControl("tEdit_GoodsName");
            }

            // 品番
            if (controlName == "tEdit_GoodsNo")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_GoodsName.Visible && this.uCheckGoodsName_base.Checked) nextCtrl = this.tComboEditor_GoodsNameFuzzy;
                //else nextCtrl = GetBeforeCommonControl("tEdit_GoodsName");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_GoodsName.Visible && this.uCheckGoodsName_base.Checked)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_GoodsNameFuzzy;
                    else nextCtrl = this.tEdit_GoodsName;
                }
                else nextCtrl = GetBeforeCommonControl("tEdit_GoodsName");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 品番あいまい条件
            if (controlName == "tComboEditor_GoodsNoFuzzy")
            {
                if (this.tEdit_GoodsNo.Visible && this.uCheckGoodsNo_base.Checked) nextCtrl = this.tEdit_GoodsNo;
                else nextCtrl = GetBeforeCommonControl("tEdit_GoodsNo");
            }

            // メーカーコード
            if (controlName == "tEdit_MakerCd")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_GoodsNo.Visible && this.uCheckGoodsNo_base.Checked) nextCtrl = this.tComboEditor_GoodsNoFuzzy;
                //else nextCtrl = GetBeforeCommonControl("tEdit_GoodsNo");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_GoodsNo.Visible && this.uCheckGoodsNo_base.Checked)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_GoodsNoFuzzy;
                    else nextCtrl = this.tEdit_GoodsNo;
                }
                else nextCtrl = GetBeforeCommonControl("tEdit_GoodsNo");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // メーカーガイド
            if (controlName == "uButton_MakerCd")
            {
                if (this.tEdit_MakerCd.Visible && this.uCheckGoodsMakerCd_base.Checked) nextCtrl = this.tEdit_MakerCd;
                else nextCtrl = GetBeforeCommonControl("tEdit_MakerCd");
            }

            // 販売区分コード
            if (controlName == "tEdit_SalesCode")
            {
                if (this.tEdit_MakerCd.Visible && this.uCheckGoodsMakerCd_base.Checked) nextCtrl = this.uButton_MakerCd;
                else nextCtrl = GetBeforeCommonControl("tEdit_MakerCd");
            }

            // 販売区分ガイド
            if (controlName == "uButton_SalesCode")
            {
                if (this.tEdit_SalesCode.Visible && this.uCheckSalesCode_base.Checked) nextCtrl = this.tEdit_SalesCode;
                else nextCtrl = GetBeforeCommonControl("tEdit_SalesCode");
            }

            // 自社分類コード
            if (controlName == "tEdit_EnterpriseGanreCode")
            {
                if (this.tEdit_SalesCode.Visible && this.uCheckSalesCode_base.Checked) nextCtrl = this.uButton_SalesCode;
                else nextCtrl = GetBeforeCommonControl("tEdit_SalesCode");
            }

            // 自社分類ガイド
            if (controlName == "uButton_EnterpriseGanreCode")
            {
                if (this.tEdit_EnterpriseGanreCode.Visible && this.uCheckEnterpriseGanreCode_base.Checked) nextCtrl = this.tEdit_EnterpriseGanreCode;
                else nextCtrl = GetBeforeCommonControl("tEdit_EnterpriseGanreCode");
            }

            // 商品属性
            if (controlName == "tComboEditor_GoodsKindCode")
            {
                if (this.tEdit_EnterpriseGanreCode.Visible && this.uCheckEnterpriseGanreCode_base.Checked) nextCtrl = this.uButton_EnterpriseGanreCode;
                else nextCtrl = GetBeforeCommonControl("tEdit_EnterpriseGanreCode");
            }

            // 在庫取寄区分
            if (controlName == "tComboEditor_SalesOrderDivCd")
            {
                if (this.tComboEditor_GoodsKindCode.Visible && this.uCheckGoodsKindCode_base.Checked) nextCtrl = this.tComboEditor_GoodsKindCode;
                else nextCtrl = GetBeforeCommonControl("tComboEditor_GoodsKindCode");
            }

            // 倉庫コード
            if (controlName == "tEdit_WarehouseCd")
            {
                if (this.tComboEditor_SalesOrderDivCd.Visible && this.uCheckSalesOrderDivCd_base.Checked) nextCtrl = this.tComboEditor_SalesOrderDivCd;
                else nextCtrl = GetBeforeCommonControl("tComboEditor_SalesOrderDivCd");
            }

            // 倉庫ガイド
            if (controlName == "uButton_WarehouseCd")
            {
                if (this.tEdit_WarehouseCd.Visible && this.uCheckWarehouseCode_base.Checked) nextCtrl = this.tEdit_WarehouseCd;
                else nextCtrl = GetBeforeCommonControl("tEdit_WarehouseCd");
            }

            // 棚番
            if (controlName == "tEdit_WarehouseShelfNo")
            {
                if (this.tEdit_WarehouseCd.Visible && this.uCheckWarehouseCode_base.Checked) nextCtrl = this.uButton_WarehouseCd;
                else nextCtrl = GetBeforeCommonControl("tEdit_WarehouseCd");
            }

            // 棚番あいまい条件
            if (controlName == "tComboEditor_WarehouseShelfNoFuzzy")
            {
                if (this.tEdit_WarehouseShelfNo.Visible && this.uCheckWarehouseShelfNo_base.Checked) nextCtrl = this.tEdit_WarehouseShelfNo;
                else nextCtrl = GetBeforeCommonControl("tEdit_WarehouseShelfNo");
            }

            // 仕入伝票番号
            if (controlName == "tEdit_SupplierSlipNo")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_WarehouseShelfNo.Visible && this.uCheckWarehouseShelfNo_base.Checked) nextCtrl = this.tComboEditor_WarehouseShelfNoFuzzy;
                //else nextCtrl = GetBeforeCommonControl("tEdit_WarehouseShelfNo");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_WarehouseShelfNo.Visible && this.uCheckWarehouseShelfNo_base.Checked)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_WarehouseShelfNoFuzzy;
                    else nextCtrl = this.tEdit_WarehouseShelfNo;
                }
                else nextCtrl = GetBeforeCommonControl("tEdit_WarehouseShelfNo");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 仕入先
            if (controlName == "tEdit_SupplierCd")
            {
                if (this.tEdit_SupplierSlipNo.Visible && this.uCheckSupplierSlipNo_base.Checked) nextCtrl = this.tEdit_SupplierSlipNo;
                else nextCtrl = GetBeforeCommonControl("tEdit_SupplierSlipNo");
            }

            // 仕入先ガイド
            if (controlName == "uButton_SupplierCd")
            {
                if (this.tEdit_SupplierCd.Visible && this.uCheckSupplierCd_base.Checked) nextCtrl = this.tEdit_SupplierCd;
                else nextCtrl = GetBeforeCommonControl("tEdit_SupplierCd");
            }

            // 発注先
            if (controlName == "tEdit_UOESupplierCd")
            {
                if (this.tEdit_SupplierCd.Visible && this.uCheckSupplierCd_base.Checked) nextCtrl = this.uButton_SupplierCd;
                else nextCtrl = GetBeforeCommonControl("tEdit_SupplierCd");
            }

            // 発注先ガイド
            if (controlName == "uButton_UOESupplierCd")
            {
                if (this.tEdit_UOESupplierCd.Visible && this.uCheckUOESupplierCd_base.Checked) nextCtrl = this.tEdit_UOESupplierCd;
                else nextCtrl = GetBeforeCommonControl("tEdit_UOESupplierCd");
            }

            // 納入先
            if (controlName == "tEdit_AddresseeCode")
            {
                if (this.tEdit_UOESupplierCd.Visible && this.uCheckUOESupplierCd_base.Checked) nextCtrl = this.uButton_UOESupplierCd;
                else nextCtrl = GetBeforeCommonControl("tEdit_UOESupplierCd");
            }

            // 納入先ガイド
            if (controlName == "uButton_AddresseeCode")
            {
                if (this.tEdit_AddresseeCode.Visible && this.uCheckAddresseeCode_base.Checked) nextCtrl = this.tEdit_AddresseeCode;
                else nextCtrl = GetBeforeCommonControl("tEdit_AddresseeCode");
            }

            // 明細備考
            if (controlName == "tEdit_DtlNote")
            {
                if (this.tEdit_AddresseeCode.Visible && this.uCheckAddresseeCode_base.Checked) nextCtrl = this.uButton_AddresseeCode;
                else nextCtrl = GetBeforeCommonControl("tEdit_AddresseeCode");
            }

            // 明細備考あいまい条件
            if (controlName == "tComboEditor_DtlNoteFuzzy")
            {
                if (this.tEdit_DtlNote.Visible && this.uCheckDtlNote_base.Checked) nextCtrl = this.tEdit_DtlNote;
                else nextCtrl = GetBeforeCommonControl("tEdit_DtlNote");
            }

            // 削除指定区分
            if (controlName == "tComboEditor_DeleteFlag")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_DtlNote.Visible && this.uCheckDtlNote_base.Checked) nextCtrl = this.tComboEditor_DtlNoteFuzzy;
                //else nextCtrl = GetBeforeCommonControl("tEdit_DtlNote");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_DtlNote.Visible && this.uCheckDtlNote_base.Checked)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_DtlNoteFuzzy;
                    else nextCtrl = this.tEdit_DtlNote;
                }
                else nextCtrl = GetBeforeCommonControl("tEdit_DtlNote");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 請求先
            if (controlName == "tEdit_ClaimName")
            {
                if (this.tComboEditor_DeleteFlag.Visible && this.uCheckDeleteFlag_base.Checked) nextCtrl = this.tComboEditor_DeleteFlag;
                else nextCtrl = GetBeforeCommonControl("tComboEditor_DeleteFlag");
            }

            // 請求先ガイド
            if (controlName == "uButton_ClaimGuide")
            {
                if (this.tEdit_ClaimName.Visible && this.uCheckClaimCode_base.Checked) nextCtrl = this.tEdit_ClaimName;
                else nextCtrl = GetBeforeCommonControl("tEdit_ClaimName");
            }

            // 入力日開始
            if (controlName == "tDateEdit_AddUpADateSt")
            {
                if (this.tEdit_ClaimName.Visible && this.uCheckClaimCode_base.Checked) nextCtrl = this.uButton_ClaimGuide;
                else nextCtrl = GetBeforeCommonControl("tEdit_ClaimName");
            }

            // 入力日（終了）
            if (controlName == "tDateEdit_AddUpADateEd")
            {
                if (this.tDateEdit_AddUpADateSt.Visible && this.uCheckAddUpADateSt_base.Checked) nextCtrl = this.tDateEdit_AddUpADateSt;
                else nextCtrl = GetBeforeCommonControl("tDateEdit_AddUpADateSt");
            }
            // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
            // 自動回答
            if (controlName == "tComboEditor_AutoAnswerDivSCM")
            {
                if (this.tDateEdit_AddUpADateEd.Visible && this.uCheckAddUpADateEd_base.Checked) nextCtrl = this.tDateEdit_AddUpADateEd;
                else nextCtrl = GetBeforeCommonControl("tDateEdit_AddUpADateEd");
            }
            // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<

            //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>
            //問合せ番号
            if (controlName == "tNedit_InquiryNumber")
            {
                if (this.tComboEditor_AutoAnswerDivSCM.Visible && this.uCheckAutoAnswerDivSCM_base.Checked) nextCtrl = this.tComboEditor_AutoAnswerDivSCM;
                else nextCtrl = GetBeforeCommonControl("tComboEditor_AutoAnswerDivSCM");
            }
            //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<
            	
            // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
            //出荷状況
            if (controlName == "tComboEditor_AddUpRemDiv")
            {
                if (this.tNedit_InquiryNumber.Visible && this.uCheckInquiryNumber_base.Checked && this._opt_Pcc == (int)Option.ON)
                {
                    nextCtrl = this.tNedit_InquiryNumber;
                }
                else
                {
                    nextCtrl = GetBeforeCommonControl("tNedit_InquiryNumber");
                }
            }
            // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<

            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
            //地区
            if (controlName == "tEdit_SalesAreaNm")
            {
                if (this.tComboEditor_AddUpRemDiv.Visible && this.uCheckAddUpRemDiv_base.Checked && this.tComboEditor_AddUpRemDiv.Enabled) nextCtrl = this.tComboEditor_AddUpRemDiv;
                else nextCtrl = GetBeforeCommonControl("tComboEditor_AddUpRemDiv");
            }
            if (controlName == "uButton_SalesAreaCdGuide")
            {
                if (this.tEdit_SalesAreaNm.Visible && this.ultraCheckEditor_salesArea_base.Checked && this._opt_Meigo == Convert.ToInt32(Option.ON))
                {
                    nextCtrl = this.tEdit_SalesAreaNm;
                }
                else
                {
                    nextCtrl = GetBeforeCommonControl("tEdit_SalesAreaNm"); 
                }
            }
            //分析コード1
            if (controlName == "tNedit_CustAnalysCode1")
            {
                if (this.uButton_SalesAreaCdGuide.Visible && this.ultraCheckEditor_salesArea_base.Checked && this._opt_Meigo == Convert.ToInt32(Option.ON))
                {
                    nextCtrl = this.uButton_SalesAreaCdGuide;
                }
                else
                {
                    nextCtrl = GetBeforeCommonControl("uButton_SalesAreaCdGuide"); 
                }
            }
            //分析コード2
            if (controlName == "tNedit_CustAnalysCode2")
            {
                if (this.tNedit_CustAnalysCode1.Visible && this.ultraCheckEditor_custAnalysCode_base.Checked && this._opt_Meigo == Convert.ToInt32(Option.ON))
                {
                    nextCtrl = this.tNedit_CustAnalysCode1;
                }
                else
                {
                    nextCtrl = GetBeforeCommonControl("tNedit_CustAnalysCode1");
                }
            }
            //分析コード3
            if (controlName == "tNedit_CustAnalysCode3")
            {
                if (this.tNedit_CustAnalysCode2.Visible && this.ultraCheckEditor_custAnalysCode_base.Checked && this._opt_Meigo == Convert.ToInt32(Option.ON))
                {
                    nextCtrl = this.tNedit_CustAnalysCode2;
                }
                else
                {
                    nextCtrl = GetBeforeCommonControl("tNedit_CustAnalysCode2");
                }
            }
            //分析コード4
            if (controlName == "tNedit_CustAnalysCode4")
            {
                if (this.tNedit_CustAnalysCode3.Visible && this.ultraCheckEditor_custAnalysCode_base.Checked && this._opt_Meigo == Convert.ToInt32(Option.ON))
                {
                    nextCtrl = this.tNedit_CustAnalysCode3;
                }
                else
                {
                    nextCtrl = GetBeforeCommonControl("tNedit_CustAnalysCode3");
                }
            }
            //分析コード5
            if (controlName == "tNedit_CustAnalysCode5")
            {
                if (this.tNedit_CustAnalysCode4.Visible && this.ultraCheckEditor_custAnalysCode_base.Checked && this._opt_Meigo == Convert.ToInt32(Option.ON))
                {
                    nextCtrl = this.tNedit_CustAnalysCode4;
                }
                else
                {
                    nextCtrl = GetBeforeCommonControl("tNedit_CustAnalysCode4");
                }
            }
            //分析コード6
            if (controlName == "tNedit_CustAnalysCode6")
            {
                if (this.tNedit_CustAnalysCode5.Visible && this.ultraCheckEditor_custAnalysCode_base.Checked && this._opt_Meigo == Convert.ToInt32(Option.ON))
                {
                    nextCtrl = this.tNedit_CustAnalysCode5;
                }
                else
                {
                    nextCtrl = GetBeforeCommonControl("tNedit_CustAnalysCode5");
                }
            }
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<
            
             //----- DEL K2017/01/05 譚洪 ソースのマージを修正する対応 ----->>>>>
            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
            //受注作成区分
            //if (controlName == "tComboEditor_AcptAnOdrMakeDiv")
            //{
            //    if (this.tNedit_InquiryNumber.Visible && this.uCheckInquiryNumber_base.Checked) nextCtrl = this.tNedit_InquiryNumber;
            //    else nextCtrl = GetBeforeCommonControl("tNedit_InquiryNumber");
            //}
            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<
            //----- DEL K2017/01/05 譚洪 ソースのマージを修正する対応 -----<<<<<

            //----- ADD K2017/01/05 譚洪 ソースのマージを修正する対応 ----->>>>>
            //受注作成区分
            if (controlName == "tComboEditor_AcptAnOdrMakeDiv")
            {
                if (this.tComboEditor_AddUpRemDiv.Visible && this.uCheckAddUpRemDiv_base.Checked && this.tComboEditor_AddUpRemDiv.Enabled) nextCtrl = this.tComboEditor_AddUpRemDiv;
                else nextCtrl = GetBeforeCommonControl("tComboEditor_AddUpRemDiv");
            }
            //----- ADD K2017/01/05 譚洪 ソースのマージを修正する対応 -----<<<<<

            return nextCtrl;
        }
        /// <summary>
        /// 拡張抽出条件で、表示されている前のコントロールを取得する
        /// </summary>
        /// <param name="controlName">controlName</param>
        /// <returns>前のコントロール</returns>
        /// <param name="sw">在庫データ</param>
        /// <br>Note       : 拡張抽出条件で、表示されている前のコントロールを取得する。</br>
        /// <br>Programmer : 呉元嘯</br>
        /// <br>Date       : 2009/12/28</br>
        /// <br>Update Note :2010/08/05 呉元嘯 障害・改良対応8月リリース分</br>
        /// <br>             車台番号の修正</br>
        /// <br>Update Note: 2011/11/28 楊洋 得意先電子元帳/(BLﾊﾟｰﾂｵｰﾀﾞｰｼｽﾃﾑ)問合せ番号の追加</br>
        /// <br>Update Note :2011/12/15 gezh 2012/01/25配信分 redmine#26667 Enterキーのフォーカス遷移の修正</br>
        /// <br>Update Note : SPK車台番号文字列対応に伴う車台番号(VINコード)による抽出を可能にする</br>
        /// <br>Programmer  : FSI厚川 宏</br>
        /// <br>Date        : 2013/03/25</br>
        /// <br>Update Note : K2015/06/16 鮑晶</br>
        /// <br>管理番号    : 11101427-00</br>
        /// <br>            : メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
        /// <br>Update Note : 2016/01/21 脇田 靖之</br>
        /// <br>管理番号    : 11270007-00</br>
        /// <br>            : 仕掛一覧№2808 貸出受注対応</br>
        /// <br>            : ①検索条件に「出荷状況」項目を追加</br>
        /// <br>            : ②明細表示に計上数、未計上数項目を追加</br>
        /// <br>Update Note : K2016/02/23 時シン</br>
        /// <br>              ㈱イケモト 抽出条件にて受注作成区分を追加する対応</br>
        /// <br>Update Note: K2017/01/05 譚洪</br>
        /// <br>管理番号   : 11270116-00 得意先電子元帳パッケージ出荷用ソースのマージ</br>
        /// </remarks>
        private Control GetBeforeControl(string controlName)
        {
            Control nextCtrl = null;

            // 伝票区分
            if (controlName == "tComboEditor_SalesSlipCd")
            {
                // 基本条件
                if (this.uExGroupBox_CommonCondition.Visible)
                {
                    /* ---------------------- DEL START 2011/07/18 朱宝軍 ----------------->>>>>
                    if (this.tDateEdit_AddUpADateEd.Visible && this.uCheckAddUpADateEd_base.Checked)
                    {
                        nextCtrl = this.tDateEdit_AddUpADateEd;
                    }
                    else
                    {
                        //拡張検索条件の表示状態を調べて次へ
                        nextCtrl = this.GetBeforeCommonControl("tDateEdit_AddUpADateEd");
                    }
                    ---------------------- DEL END   2011/07/18 朱宝軍-----------------<<<<<*/
                    //---DEL START 2011/11/28 楊洋 ----------------------------------->>>>>
                    // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
                    //if (this._opt_Pcc == (int)Option.ON)
                    //{
                    //    if (this.tComboEditor_AutoAnswerDivSCM.Visible && this.uCheckAutoAnswerDivSCM_base.Checked)
                    //    {
                    //        nextCtrl = this.tComboEditor_AutoAnswerDivSCM;
                    //    }
                    //    else
                    //    {
                    //        //拡張検索条件の表示状態を調べて次へ
                    //        nextCtrl = this.GetBeforeCommonControl("tComboEditor_AutoAnswerDivSCM");
                    //    }
                    //}
                    //else
                    //{
                    //    if (this.tDateEdit_AddUpADateEd.Visible && this.uCheckAddUpADateEd_base.Checked)
                    //    {
                    //        nextCtrl = this.tDateEdit_AddUpADateEd;
                    //    }
                    //    else
                    //    {
                    //        //拡張検索条件の表示状態を調べて次へ
                    //        nextCtrl = this.GetBeforeCommonControl("tDateEdit_AddUpADateEd");
                    //    }
                    //}
                    // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<
                    //---DEL END 2011/11/28 楊洋 -----------------------------------<<<<<

                    //----- DEL K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
                    //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>
                    //if (this._opt_Pcc == (int)Option.ON)
                    //{
                    //    if (this.tNedit_InquiryNumber.Visible && this.uCheckInquiryNumber_base.Checked)
                    //    {
                    //        nextCtrl = this.tNedit_InquiryNumber;
                    //    }
                    //    else
                    //    {
                    //        //拡張検索条件の表示状態を調べて次へ
                    //        nextCtrl = this.GetBeforeCommonControl("tNedit_InquiryNumber");
                    //    }
                    //}
                    //else
                    //{
                    //    if (this.tDateEdit_AddUpADateEd.Visible && this.uCheckAddUpADateEd_base.Checked)
                    //    {
                    //        nextCtrl = this.tDateEdit_AddUpADateEd;
                    //    }
                    //    else
                    //    {
                    //        //拡張検索条件の表示状態を調べて次へ
                    //        nextCtrl = this.GetBeforeCommonControl("tDateEdit_AddUpADateEd");
                    //    }
                    //}
                    //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<
                    //----- DEL K2015/06/16 By 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する。 END-----<<<<<

                    //----- DEL K2017/01/05 譚洪 ソースのマージを修正する対応 ----->>>>>
                    //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
                    //分析コード
                    //if (this.tNedit_CustAnalysCode6.Visible && this.ultraCheckEditor_custAnalysCode_base.Checked && this._opt_Meigo == (int)Option.ON)
                    //{
                    //    nextCtrl = this.tNedit_CustAnalysCode6;
                    //}
                    ////----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
                    //else if (this._opt_IKeMoTo == (int)Option.ON)
                    //{
                    //    if (this.tComboEditor_AcptAnOdrMakeDiv.Visible && this.uCheckAcptAnOdrMakeDiv_base.Checked)
                    //    {
                    //        nextCtrl = this.tComboEditor_AcptAnOdrMakeDiv;
                    //    }
                    //    else
                    //    {
                    //        nextCtrl = GetBeforeCommonControl("tComboEditor_AcptAnOdrMakeDiv");
                    //    }
                    //}
                    ////----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<
                    //else
                    //{
                    //    //拡張検索条件の表示状態を調べて次へ
                    //    nextCtrl = this.GetBeforeCommonControl("tNedit_CustAnalysCode6");
                    //}
                    //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<
                    //----- DEL K2017/01/05 譚洪 ソースのマージを修正する対応 -----<<<<<

                    // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
                    if (this.tComboEditor_AddUpRemDiv.Visible && this.tComboEditor_AddUpRemDiv.Enabled && this.uCheckAddUpRemDiv_base.Checked) nextCtrl = this.tComboEditor_AddUpRemDiv;
                    else nextCtrl = GetBeforeCommonControl("tComboEditor_AddUpRemDiv");
                    // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<

                    //----- ADD K2017/01/05 譚洪 ソースのマージを修正する対応 ----->>>>>
                    if (this._opt_Meigo == (int)Option.ON)
                    {
                        //分析コード
                        if (this.tNedit_CustAnalysCode6.Visible && this.ultraCheckEditor_custAnalysCode_base.Checked)
                        {
                            nextCtrl = this.tNedit_CustAnalysCode6;
                        }
                        else
                        {
                            //拡張検索条件の表示状態を調べて次へ
                            nextCtrl = this.GetBeforeCommonControl("tNedit_CustAnalysCode6");
                        }
                    }
                    if (this._opt_IKeMoTo == (int)Option.ON)
                    {
                        if (this.tComboEditor_AcptAnOdrMakeDiv.Visible && this.uCheckAcptAnOdrMakeDiv_base.Checked)
                        {
                            nextCtrl = this.tComboEditor_AcptAnOdrMakeDiv;
                        }
                        else
                        {
                            nextCtrl = GetBeforeCommonControl("tComboEditor_AcptAnOdrMakeDiv");
                        }
                    }
                    //----- ADD K2017/01/05 譚洪 ソースのマージを修正する対応 -----<<<<<
                    
                }
                else nextCtrl = null;
            }

            // 明細区分
            if (controlName == "tComboEditor_SalesSlipCdDtl")
            {
                if (this.tComboEditor_SalesSlipCd.Visible && this.uCheckSalesSlipCd.Checked && this.uCheckSalesSlipCd.Enabled == true) nextCtrl = this.tComboEditor_SalesSlipCd;
                else nextCtrl = GetBeforeControl("tComboEditor_SalesSlipCd");
            }

            // 伝票番号
            if (controlName == "tEdit_SalesSlipNum")
            {
                if (this.tComboEditor_SalesSlipCdDtl.Visible && this.uCheckSalesSlipCdDtl.Checked && this.uCheckSalesSlipCdDtl.Enabled == true) nextCtrl = this.tComboEditor_SalesSlipCdDtl;
                else nextCtrl = GetBeforeControl("tComboEditor_SalesSlipCdDtl");
            }

            // 担当者
            if (controlName == "tEdit_SalesEmployeeCd")
            {
                if (this.tEdit_SalesSlipNum.Visible && this.uCheckSalesSlipNum.Checked && this.uCheckSalesSlipNum.Enabled == true) nextCtrl = this.tEdit_SalesSlipNum;
                else nextCtrl = GetBeforeControl("tEdit_SalesSlipNum");
            }

            // 担当者ガイド
            if (controlName == "uButton_SalesEmployeeCd")
            {
                if (this.tEdit_SalesEmployeeCd.Visible && this.uCheckSalesEmployeeCd.Checked && this.uCheckSalesEmployeeCd.Enabled == true) nextCtrl = this.tEdit_SalesEmployeeCd;
                else nextCtrl = GetBeforeControl("tEdit_SalesEmployeeCd");
            }

            // 受注者
            if (controlName == "tEdit_FrontEmployeeCd")
            {
                if (this.tEdit_SalesEmployeeCd.Visible && this.uCheckSalesEmployeeCd.Checked && this.uCheckSalesEmployeeCd.Enabled == true) nextCtrl = this.uButton_SalesEmployeeCd;
                else nextCtrl = GetBeforeControl("tEdit_SalesEmployeeCd");
            }

            // 受注者ガイド
            if (controlName == "uButton_FrontEmployeeCd")
            {
                if (this.tEdit_FrontEmployeeCd.Visible && this.uCheckFrontEmployeeCd.Checked && this.uCheckFrontEmployeeCd.Enabled == true) nextCtrl = this.tEdit_FrontEmployeeCd;
                else nextCtrl = GetBeforeControl("tEdit_FrontEmployeeCd");
            }

            // 発注者
            if (controlName == "tEdit_SalesInputCode")
            {
                if (this.tEdit_FrontEmployeeCd.Visible && this.uCheckFrontEmployeeCd.Checked && this.uCheckFrontEmployeeCd.Enabled == true) nextCtrl = this.uButton_FrontEmployeeCd;
                else nextCtrl = GetBeforeControl("tEdit_FrontEmployeeCd");
            }

            // 発注者ガイド
            if (controlName == "uButton_SalesInputCode")
            {
                if (this.tEdit_SalesInputCode.Visible && this.uCheckSalesInputCode.Checked && this.uCheckSalesInputCode.Enabled == true) nextCtrl = this.tEdit_SalesInputCode;
                else nextCtrl = GetBeforeControl("tEdit_SalesInputCode");
            }
            // 管理番号
            if (controlName == "tEdit_CarMngCode")
            {
                if (this.tEdit_SalesInputCode.Visible && this.uCheckSalesInputCode.Checked && this.uCheckSalesInputCode.Enabled == true) nextCtrl = this.uButton_SalesInputCode;
                else nextCtrl = GetBeforeControl("tEdit_SalesInputCode");
            }
            // 管理番号あいまい条件
            if (controlName == "tComboEditor_SearchDiv")
            {
                if (this.tEdit_CarMngCode.Visible && this.uCheckCarMngCode.Checked && this.uCheckCarMngCode.Enabled == true) nextCtrl = this.tEdit_CarMngCode;
                else nextCtrl = GetBeforeControl("tEdit_CarMngCode");
            }
            // 車種名称
            if (controlName == "tEdit_ModelFullName")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_CarMngCode.Visible && this.uCheckCarMngCode.Checked && this.uCheckCarMngCode.Enabled == true) nextCtrl = this.tComboEditor_SearchDiv;
                //else nextCtrl = GetBeforeControl("tEdit_CarMngCode");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_CarMngCode.Visible && this.uCheckCarMngCode.Checked && this.uCheckCarMngCode.Enabled == true)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_SearchDiv;
                    else nextCtrl = this.tEdit_CarMngCode;
                }
                else nextCtrl = GetBeforeControl("tEdit_CarMngCode");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 車種名称あいまい条件
            if (controlName == "tComboEditor_ModelFullNameFuzzy")
            {
                if (this.tEdit_ModelFullName.Visible && this.uCheckModelFullName.Checked && this.uCheckModelFullName.Enabled == true) nextCtrl = this.tEdit_ModelFullName;
                else nextCtrl = GetBeforeControl("tEdit_ModelFullName");
            }

            // 型式
            if (controlName == "tEdit_FullModel")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_ModelFullName.Visible && this.uCheckModelFullName.Checked && this.uCheckModelFullName.Enabled == true) nextCtrl = this.tComboEditor_ModelFullNameFuzzy;
                //else nextCtrl = GetBeforeControl("tEdit_ModelFullName");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_ModelFullName.Visible && this.uCheckModelFullName.Checked && this.uCheckModelFullName.Enabled == true)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_ModelFullNameFuzzy;
                    else nextCtrl = this.tEdit_ModelFullName;
                }
                else nextCtrl = GetBeforeControl("tEdit_ModelFullName");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 型式あいまい条件
            if (controlName == "tComboEditor_FullModelFuzzy")
            {
                if (this.tEdit_FullModel.Visible && this.uCheckFullModel.Checked && this.uCheckFullModel.Enabled == true) nextCtrl = this.tEdit_FullModel;
                else nextCtrl = GetBeforeControl("tEdit_FullModel");
            }

            // 車台No
            // ---------DEL 2013/03/25---------->>>>>
            //if (controlName == "tNedit_SearchFrameNo")
            // ---------DEL 2013/03/25----------<<<<<
            // ---------ADD 2013/03/25---------->>>>>
            if (controlName == "tEdit_SearchFrameNo")
            // ---------ADD 2013/03/25----------<<<<<
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_FullModel.Visible && this.uCheckFullModel.Checked && this.uCheckFullModel.Enabled == true) nextCtrl = this.tComboEditor_FullModelFuzzy;
                //else nextCtrl = GetBeforeControl("tEdit_FullModel");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_FullModel.Visible && this.uCheckFullModel.Checked && this.uCheckFullModel.Enabled == true)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_FullModelFuzzy;
                    else nextCtrl = this.tEdit_FullModel;
                }
                else nextCtrl = GetBeforeControl("tEdit_FullModel");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // ----------ADD 2010/08/05---------->>>>>
            // 車台あいまい条件
            if (controlName == "tComboEditor_SearchFrameNoFuzzy")
            {
                // ---------DEL 2013/03/25---------->>>>>
                //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true) nextCtrl = this.tNedit_SearchFrameNo;
                //else nextCtrl = GetBeforeControl("tNedit_SearchFrameNo");
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                if (this.tEdit_SearchFrameNo.Visible && this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true) nextCtrl = this.tEdit_SearchFrameNo;
                else nextCtrl = GetBeforeControl("tEdit_SearchFrameNo");
                // ---------ADD 2013/03/25----------<<<<<
            }
            // ----------ADD 2010/08/05----------<<<<<

            // 指示書No
            if (controlName == "tEdit_PartySalesSlipNum")
            {
                //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true) nextCtrl = this.tNedit_SearchFrameNo;// DEL 2010/08/05
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true) nextCtrl = this.tComboEditor_SearchFrameNoFuzzy;// ADD 2010/08/05
                //else nextCtrl = GetBeforeControl("tNedit_SearchFrameNo");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                // ---------DEL 2013/03/25---------->>>>>
                //if (this.tNedit_SearchFrameNo.Visible && this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true)
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                if (this.tEdit_SearchFrameNo.Visible && this.uCheckSearchFrameNo.Checked && this.uCheckSearchFrameNo.Enabled == true)
                // ---------ADD 2013/03/25----------<<<<<
                {
                    if (flag == true) nextCtrl = this.tComboEditor_SearchFrameNoFuzzy;
                    // ---------DEL 2013/03/25---------->>>>>
                    //else nextCtrl = this.tNedit_SearchFrameNo;
                    // ---------DEL 2013/03/25----------<<<<<
                    // ---------ADD 2013/03/25---------->>>>>
                    else nextCtrl = this.tEdit_SearchFrameNo;
                    // ---------ADD 2013/03/25----------<<<<<
                }
                // ---------DEL 2013/03/25---------->>>>>
                //else nextCtrl = GetBeforeControl("tNedit_SearchFrameNo");
                // ---------DEL 2013/03/25----------<<<<<
                // ---------ADD 2013/03/25---------->>>>>
                else nextCtrl = GetBeforeControl("tEdit_SearchFrameNo");
                // ---------ADD 2013/03/25----------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // カラー名称
            if (controlName == "tEdit_ColorName1")
            {
                if (this.tEdit_PartySalesSlipNum.Visible && this.uCheckPartySalesSlipNum.Checked && this.uCheckPartySalesSlipNum.Enabled == true) nextCtrl = this.tEdit_PartySalesSlipNum;
                else nextCtrl = GetBeforeControl("tEdit_PartySalesSlipNum");
            }

            // カラー名称あいまい条件
            if (controlName == "tComboEditor_ColorName1Fuzzy")
            {
                if (this.tEdit_ColorName1.Visible && this.uCheckColorName1.Checked && this.uCheckColorName1.Enabled == true) nextCtrl = this.tEdit_ColorName1;
                else nextCtrl = GetBeforeControl("tEdit_ColorName1");
            }

            // トリム名称
            if (controlName == "tEdit_TrimName")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_ColorName1.Visible && this.uCheckColorName1.Checked && this.uCheckColorName1.Enabled == true) nextCtrl = this.tComboEditor_ColorName1Fuzzy;
                //else nextCtrl = GetBeforeControl("tEdit_ColorName1");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_ColorName1.Visible && this.uCheckColorName1.Checked && this.uCheckColorName1.Enabled == true)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_ColorName1Fuzzy;
                    else nextCtrl = this.tEdit_ColorName1;
                }
                else nextCtrl = GetBeforeControl("tEdit_ColorName1");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // トリム名称あいまい条件
            if (controlName == "tComboEditor_TrimNameFuzzy")
            {
                if (this.tEdit_TrimName.Visible && this.uCheckTrimName.Checked && this.uCheckTrimName.Enabled == true) nextCtrl = this.tEdit_TrimName;
                else nextCtrl = GetBeforeControl("tEdit_TrimName");
            }

            // UOE送信
            if (controlName == "tComboEditor_DataSendCode")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_TrimName.Visible && this.uCheckTrimName.Checked && this.uCheckTrimName.Enabled == true) nextCtrl = this.tComboEditor_TrimNameFuzzy;
                //else nextCtrl = GetBeforeControl("tEdit_TrimName");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_TrimName.Visible && this.uCheckTrimName.Checked && this.uCheckTrimName.Enabled == true)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_TrimNameFuzzy;
                    else nextCtrl = this.tEdit_TrimName;
                }
                else nextCtrl = GetBeforeControl("tEdit_TrimName");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 備考
            if (controlName == "tEdit_SlipNote")
            {
                if (this.tComboEditor_DataSendCode.Visible && this.uCheckDataSendCode.Checked && this.uCheckDataSendCode.Enabled == true) nextCtrl = this.tComboEditor_DataSendCode;
                else nextCtrl = GetBeforeControl("tComboEditor_DataSendCode");
            }

            // 備考ガイド
            if (controlName == "uButton_SlipNote")
            {
                if (this.tEdit_SlipNote.Visible && this.uCheckSlipNote.Checked && this.uCheckSlipNote.Enabled == true) nextCtrl = this.tEdit_SlipNote;
                else nextCtrl = GetBeforeControl("tEdit_SlipNote");
            }

            // 備考あいまい条件
            if (controlName == "tComboEditor_SlipNoteFuzzy")
            {
                if (this.tEdit_SlipNote.Visible && this.uCheckSlipNote.Checked && this.uCheckSlipNote.Enabled == true) nextCtrl = this.uButton_SlipNote;
                else nextCtrl = GetBeforeControl("tEdit_SlipNote");
            }

            // 備考2
            if (controlName == "tEdit_SlipNote2")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_SlipNote.Visible && this.uCheckSlipNote.Checked && this.uCheckSlipNote.Enabled == true) nextCtrl = this.tComboEditor_SlipNoteFuzzy;
                //else nextCtrl = GetBeforeControl("tEdit_SlipNote");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_SlipNote.Visible && this.uCheckSlipNote.Checked && this.uCheckSlipNote.Enabled == true)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_SlipNoteFuzzy;
                    else nextCtrl = this.tEdit_SlipNote;
                }
                else nextCtrl = GetBeforeControl("tEdit_SlipNote");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 備考２ガイド
            if (controlName == "uButton_SlipNote2")
            {
                if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2.Checked && this.uCheckSlipNote2.Enabled == true) nextCtrl = this.tEdit_SlipNote2;
                else nextCtrl = GetBeforeControl("tEdit_SlipNote2");
            }

            // 備考2あいまい条件
            if (controlName == "tComboEditor_SlipNote2Fuzzy")
            {
                if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2.Checked && this.uCheckSlipNote2.Enabled == true) nextCtrl = this.uButton_SlipNote2;
                else nextCtrl = GetBeforeControl("tEdit_SlipNote2");
            }

            // 備考3
            if (controlName == "tEdit_SlipNote3")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2.Checked && this.uCheckSlipNote2.Enabled == true) nextCtrl = this.tComboEditor_SlipNote2Fuzzy;
                //else nextCtrl = GetBeforeControl("tEdit_SlipNote2");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_SlipNote2.Visible && this.uCheckSlipNote2.Checked && this.uCheckSlipNote2.Enabled == true)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_SlipNote2Fuzzy;
                    else nextCtrl = this.tEdit_SlipNote2;
                }
                else nextCtrl = GetBeforeControl("tEdit_SlipNote2");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 備考３ガイド
            if (controlName == "uButton_SlipNote3")
            {
                if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3.Checked && this.uCheckSlipNote3.Enabled == true) nextCtrl = this.tEdit_SlipNote3;
                else nextCtrl = GetBeforeControl("tEdit_SlipNote3");
            }

            // 備考3あいまい条件
            if (controlName == "tComboEditor_SlipNote3Fuzzy")
            {
                if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3.Checked && this.uCheckSlipNote3.Enabled == true) nextCtrl = this.uButton_SlipNote3;
                else nextCtrl = GetBeforeControl("tEdit_SlipNote3");
            }

            // UOEリマーク1
            if (controlName == "tEdit_UoeRemark1")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3.Checked && this.uCheckSlipNote3.Enabled == true) nextCtrl = this.tComboEditor_SlipNote3Fuzzy;
                //else nextCtrl = GetBeforeControl("tEdit_SlipNote3");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_SlipNote3.Visible && this.uCheckSlipNote3.Checked && this.uCheckSlipNote3.Enabled == true)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_SlipNote3Fuzzy;
                    else nextCtrl = this.tEdit_SlipNote3;
                }
                else nextCtrl = GetBeforeControl("tEdit_SlipNote3");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // UOEリマーク1あいまい条件
            if (controlName == "tComboEditor_UoeRemark1Fuzzy")
            {
                if (this.tEdit_UoeRemark1.Visible && this.uCheckUoeRemark1.Checked && this.uCheckUoeRemark1.Enabled == true) nextCtrl = this.tEdit_UoeRemark1;
                else nextCtrl = GetBeforeControl("tEdit_UoeRemark1");
            }

            // UOEリマーク2
            if (controlName == "tEdit_UoeRemark2")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_UoeRemark1.Visible && this.uCheckUoeRemark1.Checked && this.uCheckUoeRemark1.Enabled == true) nextCtrl = this.tComboEditor_UoeRemark1Fuzzy;
                //else nextCtrl = GetBeforeControl("tEdit_UoeRemark1");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_UoeRemark1.Visible && this.uCheckUoeRemark1.Checked && this.uCheckUoeRemark1.Enabled == true)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_UoeRemark1Fuzzy;
                    else nextCtrl = this.tEdit_UoeRemark1;
                }
                else nextCtrl = GetBeforeControl("tEdit_UoeRemark1");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // UOEリマーク2あいまい条件
            if (controlName == "tComboEditor_UoeRemark2Fuzzy")
            {
                if (this.tEdit_UoeRemark2.Visible && this.uCheckUoeRemark2.Checked && this.uCheckUoeRemark2.Enabled == true) nextCtrl = this.tEdit_UoeRemark2;
                else nextCtrl = GetBeforeControl("tEdit_UoeRemark2");
            }

            // 商品大分類
            if (controlName == "tEdit_GoodsLGroup")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_UoeRemark2.Visible && this.uCheckUoeRemark2.Checked && this.uCheckUoeRemark2.Enabled == true) nextCtrl = this.tComboEditor_UoeRemark2Fuzzy;
                //else nextCtrl = GetBeforeControl("tEdit_UoeRemark2");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_UoeRemark2.Visible && this.uCheckUoeRemark2.Checked && this.uCheckUoeRemark2.Enabled == true)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_UoeRemark2Fuzzy;
                    else nextCtrl = this.tEdit_UoeRemark2;
                }
                else nextCtrl = GetBeforeControl("tEdit_UoeRemark2");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 商品大分類ガイド
            if (controlName == "uButton_GoodsLGroup")
            {
                if (this.tEdit_GoodsLGroup.Visible && this.uCheckGoodsLGroup.Checked && this.uCheckGoodsLGroup.Enabled == true) nextCtrl = this.tEdit_GoodsLGroup;
                else nextCtrl = GetBeforeControl("tEdit_GoodsLGroup");
            }

            // 商品中分類
            if (controlName == "tEdit_GoodsMGroup")
            {
                if (this.tEdit_GoodsLGroup.Visible && this.uCheckGoodsLGroup.Checked && this.uCheckGoodsLGroup.Enabled == true) nextCtrl = this.uButton_GoodsLGroup;
                else nextCtrl = GetBeforeControl("tEdit_GoodsLGroup");
            }

            // 商品中分類ガイド
            if (controlName == "uButton_GoodsMGroup")
            {
                if (this.tEdit_GoodsMGroup.Visible && this.uCheckGoodsMGroup.Checked && this.uCheckGoodsMGroup.Enabled == true) nextCtrl = this.tEdit_GoodsMGroup;
                else nextCtrl = GetBeforeControl("tEdit_GoodsMGroup");
            }

            // BLグループ
            if (controlName == "tEdit_BlGroupCode")
            {
                if (this.tEdit_GoodsMGroup.Visible && this.uCheckGoodsMGroup.Checked && this.uCheckGoodsMGroup.Enabled == true) nextCtrl = this.uButton_GoodsMGroup;
                else nextCtrl = GetBeforeControl("tEdit_GoodsMGroup");
            }

            // BLグループガイド
            if (controlName == "uButton_BlGroupCode")
            {
                if (this.tEdit_BlGroupCode.Visible && this.uCheckBLGroupCode.Checked && this.uCheckBLGroupCode.Enabled == true) nextCtrl = this.tEdit_BlGroupCode;
                else nextCtrl = GetBeforeControl("tEdit_BlGroupCode");
            }

            // BLコード
            if (controlName == "tEdit_BlGoodsCode")
            {
                if (this.tEdit_BlGroupCode.Visible && this.uCheckBLGroupCode.Checked && this.uCheckBLGroupCode.Enabled == true) nextCtrl = this.uButton_BlGroupCode;
                else nextCtrl = GetBeforeControl("tEdit_BlGroupCode");

            }

            // BLコードガイド
            if (controlName == "uButton_BlGoodsCode")
            {
                if (this.tEdit_BlGoodsCode.Visible && this.uCheckBLGoodsCode.Checked && this.uCheckBLGoodsCode.Enabled == true) nextCtrl = this.tEdit_BlGoodsCode;
                else nextCtrl = GetBeforeControl("tEdit_BlGoodsCode");
            }

            // 品名
            if (controlName == "tEdit_GoodsName")
            {
                if (this.tEdit_BlGoodsCode.Visible && this.uCheckBLGoodsCode.Checked && this.uCheckBLGoodsCode.Enabled == true) nextCtrl = this.uButton_BlGoodsCode;
                else nextCtrl = GetBeforeControl("tEdit_BlGoodsCode");
            }

            // 品名あいまい条件
            if (controlName == "tComboEditor_GoodsNameFuzzy")
            {
                if (this.tEdit_GoodsName.Visible && this.uCheckGoodsName.Checked && this.uCheckGoodsName.Enabled == true) nextCtrl = this.tEdit_GoodsName;
                else nextCtrl = GetBeforeControl("tEdit_GoodsName");
            }

            // 品番
            if (controlName == "tEdit_GoodsNo")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_GoodsName.Visible && this.uCheckGoodsName.Checked && this.uCheckGoodsName.Enabled == true) nextCtrl = this.tComboEditor_GoodsNameFuzzy;
                //else nextCtrl = GetBeforeControl("tEdit_GoodsName");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_GoodsName.Visible && this.uCheckGoodsName.Checked && this.uCheckGoodsName.Enabled == true)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_GoodsNameFuzzy;
                    else nextCtrl = this.tEdit_GoodsName;
                }
                else nextCtrl = GetBeforeControl("tEdit_GoodsName");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 品番あいまい条件
            if (controlName == "tComboEditor_GoodsNoFuzzy")
            {
                if (this.tEdit_GoodsNo.Visible && this.uCheckGoodsNo.Checked && this.uCheckGoodsNo.Enabled == true) nextCtrl = this.tEdit_GoodsNo;
                else nextCtrl = GetBeforeControl("tEdit_GoodsNo");
            }

            // メーカーコード
            if (controlName == "tEdit_MakerCd")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_GoodsNo.Visible && this.uCheckGoodsNo.Checked && this.uCheckGoodsNo.Enabled == true) nextCtrl = this.tComboEditor_GoodsNoFuzzy;
                //else nextCtrl = GetBeforeControl("tEdit_GoodsNo");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_GoodsNo.Visible && this.uCheckGoodsNo.Checked && this.uCheckGoodsNo.Enabled == true)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_GoodsNoFuzzy;
                    else nextCtrl = this.tEdit_GoodsNo;
                }
                else nextCtrl = GetBeforeControl("tEdit_GoodsNo");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // メーカーガイド
            if (controlName == "uButton_MakerCd")
            {
                if (this.tEdit_MakerCd.Visible && this.uCheckGoodsMakerCd.Checked && this.uCheckGoodsMakerCd.Enabled == true) nextCtrl = this.tEdit_MakerCd;
                else nextCtrl = GetBeforeControl("tEdit_MakerCd");
            }

            // 販売区分コード
            if (controlName == "tEdit_SalesCode")
            {
                if (this.tEdit_MakerCd.Visible && this.uCheckGoodsMakerCd.Checked && this.uCheckGoodsMakerCd.Enabled == true) nextCtrl = this.uButton_MakerCd;
                else nextCtrl = GetBeforeControl("tEdit_MakerCd");
            }

            // 販売区分ガイド
            if (controlName == "uButton_SalesCode")
            {
                if (this.tEdit_SalesCode.Visible && this.uCheckSalesCode.Checked && this.uCheckSalesCode.Enabled == true) nextCtrl = this.tEdit_SalesCode;
                else nextCtrl = GetBeforeControl("tEdit_SalesCode");
            }

            // 自社分類コード
            if (controlName == "tEdit_EnterpriseGanreCode")
            {
                if (this.tEdit_SalesCode.Visible && this.uCheckSalesCode.Checked && this.uCheckSalesCode.Enabled == true) nextCtrl = this.uButton_SalesCode;
                else nextCtrl = GetBeforeControl("tEdit_SalesCode");
            }

            // 自社分類ガイド
            if (controlName == "uButton_EnterpriseGanreCode")
            {
                if (this.tEdit_EnterpriseGanreCode.Visible && this.uCheckEnterpriseGanreCode.Checked && this.uCheckEnterpriseGanreCode.Enabled == true) nextCtrl = this.tEdit_EnterpriseGanreCode;
                else nextCtrl = GetBeforeControl("tEdit_EnterpriseGanreCode");
            }

            // 商品属性
            if (controlName == "tComboEditor_GoodsKindCode")
            {
                if (this.tEdit_EnterpriseGanreCode.Visible && this.uCheckEnterpriseGanreCode.Checked && this.uCheckEnterpriseGanreCode.Enabled == true) nextCtrl = this.uButton_EnterpriseGanreCode;
                else nextCtrl = GetBeforeControl("tEdit_EnterpriseGanreCode");
            }

            // 在庫取寄区分
            if (controlName == "tComboEditor_SalesOrderDivCd")
            {
                if (this.tComboEditor_GoodsKindCode.Visible && this.uCheckGoodsKindCode.Checked && this.uCheckGoodsKindCode.Enabled == true) nextCtrl = this.tComboEditor_GoodsKindCode;
                else nextCtrl = GetBeforeControl("tComboEditor_GoodsKindCode");
            }

            // 倉庫コード
            if (controlName == "tEdit_WarehouseCd")
            {
                if (this.tComboEditor_SalesOrderDivCd.Visible && this.uCheckSalesOrderDivCd.Checked && this.uCheckSalesOrderDivCd.Enabled == true) nextCtrl = this.tComboEditor_SalesOrderDivCd;
                else nextCtrl = GetBeforeControl("tComboEditor_SalesOrderDivCd");
            }

            // 倉庫ガイド
            if (controlName == "uButton_WarehouseCd")
            {
                if (this.tEdit_WarehouseCd.Visible && this.uCheckWarehouseCode.Checked && this.uCheckWarehouseCode.Enabled == true) nextCtrl = this.tEdit_WarehouseCd;
                else nextCtrl = GetBeforeControl("tEdit_WarehouseCd");
            }

            // 棚番
            if (controlName == "tEdit_WarehouseShelfNo")
            {
                if (this.tEdit_WarehouseCd.Visible && this.uCheckWarehouseCode.Checked && this.uCheckWarehouseCode.Enabled == true) nextCtrl = this.uButton_WarehouseCd;
                else nextCtrl = GetBeforeControl("tEdit_WarehouseCd");
            }

            // 棚番あいまい条件
            if (controlName == "tComboEditor_WarehouseShelfNoFuzzy")
            {
                if (this.tEdit_WarehouseShelfNo.Visible && this.uCheckWarehouseShelfNo.Checked && this.uCheckWarehouseShelfNo.Enabled == true) nextCtrl = this.tEdit_WarehouseShelfNo;
                else nextCtrl = GetBeforeControl("tEdit_WarehouseShelfNo");
            }

            // 仕入伝票番号
            if (controlName == "tEdit_SupplierSlipNo")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_WarehouseShelfNo.Visible && this.uCheckWarehouseShelfNo.Checked && this.uCheckWarehouseShelfNo.Enabled == true) nextCtrl = this.tComboEditor_WarehouseShelfNoFuzzy;
                //else nextCtrl = GetBeforeControl("tEdit_WarehouseShelfNo");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_WarehouseShelfNo.Visible && this.uCheckWarehouseShelfNo.Checked && this.uCheckWarehouseShelfNo.Enabled == true)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_WarehouseShelfNoFuzzy;
                    else nextCtrl = this.tEdit_WarehouseShelfNo;
                }
                else nextCtrl = GetBeforeControl("tEdit_WarehouseShelfNo");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 仕入先
            if (controlName == "tEdit_SupplierCd")
            {
                if (this.tEdit_SupplierSlipNo.Visible && this.uCheckSupplierSlipNo.Checked && this.uCheckSupplierSlipNo.Enabled == true) nextCtrl = this.tEdit_SupplierSlipNo;
                else nextCtrl = GetBeforeControl("tEdit_SupplierSlipNo");
            }

            // 仕入先ガイド
            if (controlName == "uButton_SupplierCd")
            {
                if (this.tEdit_SupplierCd.Visible && this.uCheckSupplierCd.Checked && this.uCheckSupplierCd.Enabled == true) nextCtrl = this.tEdit_SupplierCd;
                else nextCtrl = GetBeforeControl("tEdit_SupplierCd");
            }

            // 発注先
            if (controlName == "tEdit_UOESupplierCd")
            {
                if (this.tEdit_SupplierCd.Visible && this.uCheckSupplierCd.Checked && this.uCheckSupplierCd.Enabled == true) nextCtrl = this.uButton_SupplierCd;
                else nextCtrl = GetBeforeControl("tEdit_SupplierCd");
            }

            // 発注先ガイド
            if (controlName == "uButton_UOESupplierCd")
            {
                if (this.tEdit_UOESupplierCd.Visible && this.uCheckUOESupplierCd.Checked && this.uCheckUOESupplierCd.Enabled == true) nextCtrl = this.tEdit_UOESupplierCd;
                else nextCtrl = GetBeforeControl("tEdit_UOESupplierCd");
            }

            // 納入先
            if (controlName == "tEdit_AddresseeCode")
            {
                if (this.tEdit_UOESupplierCd.Visible && this.uCheckUOESupplierCd.Checked && this.uCheckUOESupplierCd.Enabled == true) nextCtrl = this.uButton_UOESupplierCd;
                else nextCtrl = GetBeforeControl("tEdit_UOESupplierCd");
            }

            // 納入先ガイド
            if (controlName == "uButton_AddresseeCode")
            {
                if (this.tEdit_AddresseeCode.Visible && this.uCheckAddresseeCode.Checked && this.uCheckAddresseeCode.Enabled == true) nextCtrl = this.tEdit_AddresseeCode;
                else nextCtrl = GetBeforeControl("tEdit_AddresseeCode");
            }

            // 明細備考
            if (controlName == "tEdit_DtlNote")
            {
                if (this.tEdit_AddresseeCode.Visible && this.uCheckAddresseeCode.Checked && this.uCheckAddresseeCode.Enabled == true) nextCtrl = this.uButton_AddresseeCode;
                else nextCtrl = GetBeforeControl("tEdit_AddresseeCode");
            }

            // 明細備考あいまい条件
            if (controlName == "tComboEditor_DtlNoteFuzzy")
            {
                if (this.tEdit_DtlNote.Visible && this.uCheckDtlNote.Checked && this.uCheckDtlNote.Enabled == true) nextCtrl = this.tEdit_DtlNote;
                else nextCtrl = GetBeforeControl("tEdit_DtlNote");
            }

            // 削除指定区分
            if (controlName == "tComboEditor_DeleteFlag")
            {
                // DEL 2011/12/15 gezh redmine#26667 --------->>>>>
                //if (this.tEdit_DtlNote.Visible && this.uCheckDtlNote.Checked && this.uCheckDtlNote.Enabled == true) nextCtrl = this.tComboEditor_DtlNoteFuzzy;
                //else nextCtrl = GetBeforeControl("tEdit_DtlNote");
                // DEL 2011/12/15 gezh redmine#26667 ---------<<<<<
                // ADD 2011/12/15 gezh redmine#26667 --------->>>>>
                if (this.tEdit_DtlNote.Visible && this.uCheckDtlNote.Checked && this.uCheckDtlNote.Enabled == true)
                {
                    if (flag == true) nextCtrl = this.tComboEditor_DtlNoteFuzzy;
                    else nextCtrl = this.tEdit_DtlNote;
                }
                else nextCtrl = GetBeforeControl("tEdit_DtlNote");
                // ADD 2011/12/15 gezh redmine#26667 ---------<<<<<
            }

            // 請求先
            if (controlName == "tEdit_ClaimName")
            {
                if (this.tComboEditor_DeleteFlag.Visible && this.uCheckDeleteFlag.Checked && this.uCheckDeleteFlag.Enabled == true) nextCtrl = this.tComboEditor_DeleteFlag;
                else nextCtrl = GetBeforeControl("tComboEditor_DeleteFlag");
            }

            // 請求先ガイド
            if (controlName == "uButton_ClaimGuide")
            {
                if (this.tEdit_ClaimName.Visible && this.uCheckClaimCode.Checked && this.uCheckClaimCode.Enabled == true) nextCtrl = this.tEdit_ClaimName;
                else nextCtrl = GetBeforeControl("tEdit_ClaimName");
            }

            // 入力日開始
            if (controlName == "tDateEdit_AddUpADateSt")
            {
                if (this.tEdit_ClaimName.Visible && this.uCheckClaimCode.Checked && this.uCheckClaimCode.Enabled == true) nextCtrl = this.uButton_ClaimGuide;
                else nextCtrl = GetBeforeControl("tEdit_ClaimName");
            }

            // 入力日（終了）
            if (controlName == "tDateEdit_AddUpADateEd")
            {
                if (this.tDateEdit_AddUpADateSt.Visible && this.uCheckAddUpADateSt.Checked && this.uCheckAddUpADateSt.Enabled == true) nextCtrl = this.tDateEdit_AddUpADateSt;
                else nextCtrl = GetBeforeControl("tDateEdit_AddUpADateSt");
            }
            // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
            // 自動回答
            if (controlName == "tComboEditor_AutoAnswerDivSCM")
            {
                //if (this.uCheckAddUpADateEd.Visible && this.uCheckAddUpADateEd.Checked && this.uCheckAddUpADateEd.Enabled == true) nextCtrl = this.tDateEdit_AddUpADateEd;//DEL 2011/11/28 楊洋
                if (this.tDateEdit_AddUpADateEd.Visible && this.uCheckAddUpADateEd.Checked && this.uCheckAddUpADateEd.Enabled == true) nextCtrl = this.tDateEdit_AddUpADateEd;//ADD 2011/11/28 楊洋
                else nextCtrl = GetBeforeControl("tDateEdit_AddUpADateEd");
            }
            // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<

            //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>
            //問合せ番号
            if (controlName == "tNedit_InquiryNumber")
            {
                if (this._opt_Pcc == (int)Option.ON)
                {
                    if (this.tComboEditor_AutoAnswerDivSCM.Visible && this.uCheckAutoAnswerDivSCM.Checked)
                    {
                        nextCtrl = this.tComboEditor_AutoAnswerDivSCM;
                    }
                    else
                    {
                        //拡張検索条件の表示状態を調べて次へ
                        nextCtrl = this.GetBeforeControl("tComboEditor_AutoAnswerDivSCM");
                    }
                }
                else
                {
                    if (this.tDateEdit_AddUpADateEd.Visible && this.uCheckAddUpADateEd_base.Checked)
                    {
                        nextCtrl = this.tDateEdit_AddUpADateEd;
                    }
                    else
                    {
                        //拡張検索条件の表示状態を調べて次へ
                        nextCtrl = this.GetBeforeControl("tDateEdit_AddUpADateEd");
                    }
                }
            }
            //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<
            	
            // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
            // 出荷状況
            if (controlName == "tComboEditor_AddUpRemDiv")
            {
                if (this._opt_Pcc == (int)Option.ON)
                {
                    if (this.tNedit_InquiryNumber.Visible && this.uCheckInquiryNumber.Checked && this.uCheckInquiryNumber.Enabled == true) nextCtrl = this.tNedit_InquiryNumber;
                    else nextCtrl = GetBeforeControl("tNedit_InquiryNumber");
                }
                else
                {
                    if (this.tDateEdit_AddUpADateEd.Visible && this.uCheckAddUpADateEd.Checked && this.uCheckAddUpADateEd.Enabled == true) nextCtrl = this.tDateEdit_AddUpADateEd;
                    else nextCtrl = GetBeforeControl("tDateEdit_AddUpADateEd");
                }
            }
            // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<

            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
            //地区
            if (controlName == "tEdit_SalesAreaNm")
            {
                // ---------- DEL 2016/01/21 Y.Wakita ---------->>>>>
                //if (this.tNedit_InquiryNumber.Visible && !uCheckInquiryNumber_base.Checked && this.uCheckInquiryNumber.Checked && uCheckInquiryNumber.Enabled == true && this._opt_Pcc == (int)Option.ON)
                //{
                //    nextCtrl = this.tNedit_InquiryNumber;
                //}
                //else 
                //{ 
                //    nextCtrl = GetBeforeControl("tNedit_InquiryNumber"); 
                //}
                // ---------- DEL 2016/01/21 Y.Wakita ----------<<<<<
                // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
                if (this.tComboEditor_AddUpRemDiv.Visible && this.uCheckAddUpRemDiv.Checked && this.uCheckAddUpRemDiv.Enabled == true && this.tComboEditor_AddUpRemDiv.Enabled == true) nextCtrl = this.tComboEditor_AddUpRemDiv;
                else nextCtrl = GetBeforeControl("tComboEditor_AddUpRemDiv");
                // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<
            }
            if (controlName == "uButton_SalesAreaCdGuide")
            {
                if (this.ultraLabel_salesArea.Visible && !ultraCheckEditor_salesArea_base.Checked && this.ultraCheckEditor_salesArea.Checked && ultraCheckEditor_salesArea.Enabled == true && this._opt_Meigo == Convert.ToInt32(Option.ON))
                {
                    nextCtrl = this.tEdit_SalesAreaNm;
                }
                else 
                { 
                    nextCtrl = GetBeforeControl("tEdit_SalesAreaNm"); 
                }
            }
            //分析コード1
            if (controlName == "tNedit_CustAnalysCode1")
            {
                if (this.uButton_SalesAreaCdGuide.Visible && !ultraCheckEditor_salesArea_base.Checked && this.ultraCheckEditor_salesArea.Checked && ultraCheckEditor_salesArea.Enabled == true && this._opt_Meigo == Convert.ToInt32(Option.ON))
                {
                    nextCtrl = this.uButton_SalesAreaCdGuide;
                }
                else
                {
                    nextCtrl = GetBeforeControl("uButton_SalesAreaCdGuide");
                }
            }
            //分析コード2
            if (controlName == "tNedit_CustAnalysCode2")
            {
                if (this.tNedit_CustAnalysCode1.Visible && !this.ultraCheckEditor_custAnalysCode_base.Checked && this.ultraCheckEditor_custAnalysCode.Checked && ultraCheckEditor_custAnalysCode.Enabled == true && this._opt_Meigo == Convert.ToInt32(Option.ON))
                {
                    nextCtrl = this.tNedit_CustAnalysCode1;
                }
                else
                {
                    nextCtrl = GetBeforeControl("tNedit_CustAnalysCode1");
                }
            }
            //分析コード2
            if (controlName == "tNedit_CustAnalysCode3")
            {
                if (this.tNedit_CustAnalysCode2.Visible && !this.ultraCheckEditor_custAnalysCode_base.Checked && this.ultraCheckEditor_custAnalysCode.Checked && ultraCheckEditor_custAnalysCode.Enabled == true && this._opt_Meigo == Convert.ToInt32(Option.ON))
                {
                    nextCtrl = this.tNedit_CustAnalysCode2;
                }
                else
                {
                    nextCtrl = GetBeforeControl("tNedit_CustAnalysCode2");
                }
            }
            //分析コード2
            if (controlName == "tNedit_CustAnalysCode4")
            {
                if (this.tNedit_CustAnalysCode3.Visible && !this.ultraCheckEditor_custAnalysCode_base.Checked && this.ultraCheckEditor_custAnalysCode.Checked && ultraCheckEditor_custAnalysCode.Enabled == true && this._opt_Meigo == Convert.ToInt32(Option.ON))
                {
                    nextCtrl = this.tNedit_CustAnalysCode3;
                }
                else
                {
                    nextCtrl = GetBeforeControl("tNedit_CustAnalysCode3");
                }
            }
            //分析コード5
            if (controlName == "tNedit_CustAnalysCode5")
            {
                if (this.tNedit_CustAnalysCode4.Visible && !this.ultraCheckEditor_custAnalysCode_base.Checked && this.ultraCheckEditor_custAnalysCode.Checked && ultraCheckEditor_custAnalysCode.Enabled == true && this._opt_Meigo == Convert.ToInt32(Option.ON))
                {
                    nextCtrl = this.tNedit_CustAnalysCode4;
                }
                else
                {
                    nextCtrl = GetBeforeControl("tNedit_CustAnalysCode4");
                }
            }
            //分析コード6
            if (controlName == "tNedit_CustAnalysCode6")
            {
                if (this.tNedit_CustAnalysCode5.Visible && !this.ultraCheckEditor_custAnalysCode_base.Checked && this.ultraCheckEditor_custAnalysCode.Checked && ultraCheckEditor_custAnalysCode.Enabled == true && this._opt_Meigo == Convert.ToInt32(Option.ON))
                {
                    nextCtrl = this.tNedit_CustAnalysCode5;
                }
                else
                {
                    nextCtrl = GetBeforeControl("tNedit_CustAnalysCode5");
                }
            }
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<

            //----- DEL K2017/01/05 譚洪 ソースのマージを修正する対応 ----->>>>>
            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
            // 受注作成区分
            //if (this._opt_IKeMoTo == (int)Option.ON && controlName == "tComboEditor_AcptAnOdrMakeDiv")
            //{
            //    if (this._opt_Pcc == (int)Option.ON)
            //    {
            //        if (this.tNedit_InquiryNumber.Visible && this.uCheckInquiryNumber.Checked)
            //        {
            //            nextCtrl = this.tNedit_InquiryNumber;
            //        }
            //        else
            //        {
            //            //拡張検索条件の表示状態を調べて次へ
            //            nextCtrl = this.GetBeforeControl("tNedit_InquiryNumber");
            //        }
            //    }
            //    else
            //    {
            //        if (this.tDateEdit_AddUpADateEd.Visible && this.uCheckAddUpADateEd.Checked)
            //        {
            //            nextCtrl = this.tDateEdit_AddUpADateEd;
            //        }
            //        else
            //        {
            //            //拡張検索条件の表示状態を調べて次へ
            //            nextCtrl = this.GetBeforeControl("tDateEdit_AddUpADateEd");
            //        }
            //    }
            //}
            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<
            //----- DEL K2017/01/05 譚洪 ソースのマージを修正する対応 -----<<<<<

            //----- ADD K2017/01/05 譚洪 ソースのマージを修正する対応 ----->>>>>
            // 受注作成区分
            if (controlName == "tComboEditor_AcptAnOdrMakeDiv")
            {
                if (this.tComboEditor_AddUpRemDiv.Visible && this.uCheckAddUpRemDiv.Checked && this.uCheckAddUpRemDiv.Enabled && this.tComboEditor_AddUpRemDiv.Enabled) nextCtrl = this.tComboEditor_AddUpRemDiv;
                else nextCtrl = GetBeforeControl("tComboEditor_AddUpRemDiv");

                if (this.tComboEditor_AddUpRemDiv.Visible && this.uCheckAddUpRemDiv.Checked && this.tComboEditor_AddUpRemDiv.Enabled && this.uCheckAddUpRemDiv.Enabled)
                {
                    nextCtrl = this.tComboEditor_AddUpRemDiv;
                }
                else
                {
                    //拡張検索条件の表示状態を調べて次へ
                    nextCtrl = this.GetBeforeControl("tComboEditor_AddUpRemDiv");
                }
            }
            //----- ADD K2017/01/05 譚洪 ソースのマージを修正する対応 -----<<<<<

            return nextCtrl;
        }
        #endregion // 次の表示されている詳細条件コントロール取得

        #region 列幅自動調整

        /// <summary>
        /// 列幅自動調整
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uCheckEditor_StatusBar_AutoFillToGridColumn_CheckedChanged(object sender, EventArgs e)
        {
            if (this._selectedMainTabKey == "uTab_SlipList")
            {
                this._columnWidthAutoAdjust_Slip = this.uCheckEditor_StatusBar_AutoFillToGridColumn.Checked;
                autoColumnAdjust(this._columnWidthAutoAdjust_Slip, 0);
            }
            if (this._selectedMainTabKey == "uTab_SlipDetail")
            {
                this._columnWidthAutoAdjust_Detail = this.uCheckEditor_StatusBar_AutoFillToGridColumn.Checked;
                autoColumnAdjust(this._columnWidthAutoAdjust_Detail, 1);
            }
            if (this._selectedMainTabKey == "uTab_RedSlip")
            {
                this._columnWidthAutoAdjust_RedSlip = this.uCheckEditor_StatusBar_AutoFillToGridColumn.Checked;
                autoColumnAdjust(this._columnWidthAutoAdjust_RedSlip, 2);
            }
            if (this._selectedMainTabKey == "uTab_RemainList")
            {
                this._columnWidthAutoAdjust_Balance = this.uCheckEditor_StatusBar_AutoFillToGridColumn.Checked;
                autoColumnAdjust(this._columnWidthAutoAdjust_Balance, 3);
            }
        }

        #endregion // 列幅自動調整

        #region ツールバー検索

        #region 列コンボボックス調整

        /// <summary>
        /// ツールバーの列コンボボックスを調整
        /// </summary>
        private void setToolbarSearchSurface()
        {
            Infragistics.Win.UltraWinToolbars.ComboBoxTool comboTool = (Infragistics.Win.UltraWinToolbars.ComboBoxTool)this.tToolbarsManager.Tools["ComboBoxTool_TargetColumn"];

            ValueList list = new ValueList();
            ValueListItemsCollection collection = list.ValueListItems;
            ValueListItem item = null;

            collection.Clear();

            // 全ての列を追加
            item = new ValueListItem();
            item.DisplayText = "全ての列";
            item.DataValue = "*all*";
            collection.Add(item);

            // 現在表示されているタブによって列が変動
            if (this._selectedMainTabKey == "uTab_SlipList")
            {
                // 全ての設計された列を追加(uGridの列設定準拠)
                foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn column in this.uGrid_Slip.DisplayLayout.Bands[0].Columns)
                {
                    if (!column.Hidden)
                    {
                        item = new ValueListItem();
                        item.DisplayText = column.Header.Caption;
                        item.DataValue = column.Key;

                        if (!String.IsNullOrEmpty(item.DisplayText))
                        {
                            collection.Add(item);
                        }
                    }
                }
            }
            else if (this._selectedMainTabKey == "uTab_SlipDetail")
            {
                // 全ての設計された列を追加(uGridの列設定準拠)
                foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn column in this.uGrid_Detail.DisplayLayout.Bands[0].Columns)
                {
                    if (!column.Hidden)
                    {
                        item = new ValueListItem();
                        item.DisplayText = column.Header.Caption;
                        item.DataValue = column.Key;

                        if (!String.IsNullOrEmpty(item.DisplayText))
                        {
                            collection.Add(item);
                        }
                    }
                }
            }
            else if (this._selectedMainTabKey == "uTab_RedSlip")
            {
                // 全ての設計された列を追加(uGridの列設定準拠)
                foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn column in this.uGrid_RedSlip.DisplayLayout.Bands[0].Columns)
                {
                    if (!column.Hidden)
                    {
                        item = new ValueListItem();
                        item.DisplayText = column.Header.Caption;
                        item.DataValue = column.Key;

                        if (!String.IsNullOrEmpty(item.DisplayText))
                        {
                            collection.Add(item);
                        }
                    }
                }
            }
            else if (this._selectedMainTabKey == "uTab_RemainList")
            {
                // 全ての設計された列を追加(uGridの列設定準拠)
                foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn column in this.uGrid_BalanceList.DisplayLayout.Bands[0].Columns)
                {
                    if (!column.Hidden)
                    {
                        item = new ValueListItem();
                        item.DisplayText = column.Header.Caption;
                        item.DataValue = column.Key;

                        if (!String.IsNullOrEmpty(item.DisplayText))
                        {
                            collection.Add(item);
                        }
                    }
                }
            }
            comboTool.ValueList = list;
            comboTool.Text = "全ての列";
        }

        #endregion // 列コンボボックス調整

        #region 検索開始

        /// <summary>
        /// ツールバー検索
        /// </summary>
        private void rowSearchStart()
        {
            // 検索文字列を取得
            Infragistics.Win.UltraWinToolbars.TextBoxTool textTool = (Infragistics.Win.UltraWinToolbars.TextBoxTool)this.tToolbarsManager.Tools["TextBoxTool_SearchWord"];
            string searchStr = textTool.Text;
            if (String.IsNullOrEmpty(searchStr))
            {
                return;
            }

            // 対象となる列を取得
            Infragistics.Win.UltraWinToolbars.ComboBoxTool comboTool = (Infragistics.Win.UltraWinToolbars.ComboBoxTool)this.tToolbarsManager.Tools["ComboBoxTool_TargetColumn"];
            ValueListItem item = (ValueListItem)comboTool.SelectedItem;
            string valueStr = item.DataValue.ToString();
            string textStr = item.DisplayText;

            if (String.IsNullOrEmpty(valueStr) || String.IsNullOrEmpty(textStr))
            {
                return;
            }

            bool continueFlag = false;
            Infragistics.Win.UltraWinGrid.UltraGridRow selectRow = null;
            Infragistics.Win.UltraWinGrid.UltraGridCell gridCell = null; //ADD 2011/07/12
            bool continueCellFlag = false; //ADD 2011/08/04 FOR redmine #23387 

            // 現在表示されているタブ上で検索処理
            if (this._selectedMainTabKey == "uTab_SlipList")
            {
                #region 伝票一覧

                // 現在選択されている行がなければ最初から
                if (this.uGrid_Slip.ActiveRow == null) continueFlag = true;

                foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_Slip.Rows)
                {
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/08 DEL
                    //// 現在の行に達したら検索実行可に
                    //if (!continueFlag && gridRow == this.uGrid_Slip.ActiveRow) continueFlag = true;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/08 DEL

                    if (continueFlag)
                    {
                        if (valueStr != "*all*")
                        {
                            //ADD 2011/08/04 FOR redmine #23387
                            if (valueStr.Equals("Selection"))
                            {
                                if (!searchStr.Equals("FALSE")
                                    && !searchStr.Equals("TRUE")
                                    && !searchStr.Equals("false")
                                    && !searchStr.Equals("true"))
                                {
                                    break;
                                }
                                if (searchStr.Trim().ToLower() == gridRow.Cells[valueStr].Value.ToString().Trim().ToLower())
                                {
                                    selectRow = gridRow;
                                    gridCell = gridRow.Cells[valueStr];
                                    break;
                                }
                            }
                            //ADD 2011/08/04 FOR redmine #23387
                            if (gridRow.Cells[valueStr].Value.ToString().IndexOf(searchStr) > -1)
                            {
                                selectRow = gridRow;
                                gridCell = gridRow.Cells[valueStr];   //ADD 2011/07/12
                                break;
                            }
                        }
                        else
                        {
                            /*DEL 2011/08/04 FOR redmine #23387 --------------
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                {
                                    selectRow = gridRow;
                                    gridCell = cell;   //ADD 2011/07/12
                                    break;
                                }
                            }
                            if (selectRow != null) break;
                            -------------DEL 2011/08/04 FOR redmine #23387 */
                        }
                    }
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/08 DEL
                    // 現在の行に達したら次の行から検索実行可に
                    if (!continueFlag && gridRow == this.uGrid_Slip.ActiveRow) continueFlag = true;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/08 DEL
                    //ADD 2011/08/04 FOR redmine #23387
                    if (continueFlag)
                    {
                        if (valueStr == "*all*")
                        {
                            // 現在選択されている列がなければ最初から
                            if (this.uGrid_Slip.ActiveCell == null) continueCellFlag = true;
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (continueCellFlag)
                                {
                                    if (cell.AccessibilityObject.Name.Equals("選択"))
                                    {
                                        continue;
                                    }
                                    if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                    {
                                        selectRow = gridRow;
                                        gridCell = cell;
                                        break;
                                    }
                                }
                                // 現在の列に達したら次の列から検索実行可に
                                if (!continueCellFlag && cell == this.uGrid_Slip.ActiveCell) continueCellFlag = true;
                            }
                            if (selectRow != null) break;
                        }
                    }
                    //ADD 2011/08/04 FOR redmine #23387
                }

                // 最後まで検索してもないなら最初から
                if (selectRow == null)
                {
                    foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_Slip.Rows)
                    {
                        // 現在の行に達したら終了
                        if (gridRow == this.uGrid_Slip.ActiveRow) break;

                        if (valueStr != "*all*")
                        {
                            //ADD 2011/08/04 FOR redmine #23387
                            if (valueStr.Equals("Selection"))
                            {
                                if (!searchStr.Equals("FALSE")
                                    && !searchStr.Equals("TRUE")
                                    && !searchStr.Equals("false")
                                    && !searchStr.Equals("true"))
                                {
                                    break;
                                }
                                if (searchStr.Trim().ToLower() == gridRow.Cells[valueStr].Value.ToString().Trim().ToLower())
                                {
                                    selectRow = gridRow;
                                    gridCell = gridRow.Cells[valueStr];
                                    break;
                                }
                            }
                            //ADD 2011/08/04 FOR redmine #23387
                            if (gridRow.Cells[valueStr].Value.ToString().IndexOf(searchStr) > -1)
                            {
                                selectRow = gridRow;
                                gridCell = gridRow.Cells[valueStr];   //ADD 2011/07/12
                                break;
                            }
                        }
                        else
                        {
                            /*DEL 2011/08/04 FOR redmine #23387 --------------
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                {
                                    selectRow = gridRow;
                                    gridCell = cell;   //ADD 2011/07/12
                                    break;
                                }
                            }
                            if (selectRow != null) break;
                            -------------DEL 2011/08/04 FOR redmine #23387 */
                        }
                        //ADD 2011/08/04 FOR redmine #23387
                        if (valueStr == "*all*")
                        {
                            // 現在選択されている列がなければ最初から
                            if (this.uGrid_Slip.ActiveCell == null) continueCellFlag = true;
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (continueCellFlag)
                                {
                                    if (cell.AccessibilityObject.Name.Equals("選択"))
                                    {
                                        continue;
                                    }
                                    if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                    {
                                        selectRow = gridRow;
                                        gridCell = cell;
                                        break;
                                    }
                                }
                                // 現在の列に達したら次の列から検索実行可に
                                if (!continueCellFlag && cell == this.uGrid_Slip.ActiveCell) continueCellFlag = true;
                            }
                            if (selectRow != null) break;
                        }
                        //ADD 2011/08/04 FOR redmine #23387
                    }
                }

                // 選択された行を現在行に設定
                if (selectRow != null)
                {
                    // 選択
                    // -----------ADD 2011/07/12---------->>>>>
                    if (gridCell != null)
                    {
                        this.uGrid_Slip.ActiveCell = gridCell;
                        this.uGrid_Slip.Focus();
                        if (this.uGrid_Detail.ActiveRow.Index == 0)
                        {
                            this.uGrid_Slip.PerformAction(UltraGridAction.BelowCell, false, false);
                            this.uGrid_Slip.PerformAction(UltraGridAction.AboveCell, false, false);
                        }
                        else
                        {
                            this.uGrid_Slip.PerformAction(UltraGridAction.AboveCell, false, false);
                            this.uGrid_Slip.PerformAction(UltraGridAction.BelowCell, false, false);
                        }
                    }
                    // -----------ADD 2011/07/12----------<<<<<
                    this.uGrid_Slip.Rows[this.uGrid_Slip.ActiveRow.Index].Selected = false;
                    this.uGrid_Slip.Rows[selectRow.Index].Selected = true;

                    this.uGrid_Slip.ActiveRow = selectRow;
                    return;
                }
                else
                {
                    // 見つかりません
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                        MSG_ROWSEARCH_NOT_FOUND, -1, MessageBoxButtons.OK);
                    return;
                }

                #endregion // 伝票一覧
            }
            else if (this._selectedMainTabKey == "uTab_SlipDetail")
            {
                #region 明細

                // 現在選択されている行がなければ最初から
                if (this.uGrid_Detail.ActiveRow == null) continueFlag = true;

                foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_Detail.Rows)
                {
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/08 DEL
                    //// 現在の行に達したら検索実行可に
                    //if (!continueFlag && gridRow == this.uGrid_Detail.ActiveRow) continueFlag = true;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/08 DEL

                    if (continueFlag)
                    {
                        if (valueStr != "*all*")
                        {
                            //ADD 2011/08/04 FOR redmine #23387
                            if (valueStr.Equals("SelectionCheck"))
                            {
                                if (!searchStr.Equals("FALSE")
                                    && !searchStr.Equals("TRUE")
                                    && !searchStr.Equals("false")
                                    && !searchStr.Equals("true"))
                                {
                                    break;
                                }
                                if (searchStr.Trim().ToLower() == gridRow.Cells[valueStr].Value.ToString().Trim().ToLower())
                                {
                                    selectRow = gridRow;
                                    gridCell = gridRow.Cells[valueStr];
                                    break;
                                }
                            }
                            //ADD 2011/08/04 FOR redmine #23387
                            if (gridRow.Cells[valueStr].Value.ToString().IndexOf(searchStr) > -1)
                            {
                                selectRow = gridRow;
                                gridCell = gridRow.Cells[valueStr];   //ADD 2011/07/12
                                break;
                            }
                        }
                        else
                        {
                            /*DEL 2011/08/04 FOR redmine #23387 --------------
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                {
                                    selectRow = gridRow;
                                    gridCell = cell;   //ADD 2011/07/12
                                    break;
                                }
                            }
                            if (selectRow != null) break;
                            -------------DEL 2011/08/04 FOR redmine #23387 */
                        }
                    }

                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/08 ADD
                    // 現在の行に達したら次の行から検索実行可に
                    if (!continueFlag && gridRow == this.uGrid_Detail.ActiveRow) continueFlag = true;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/08 ADD
                    //ADD 2011/08/04 FOR redmine #23387
                    if (continueFlag)
                    {
                        if (valueStr == "*all*")
                        {
                            // 現在選択されている列がなければ最初から
                            if (this.uGrid_Detail.ActiveCell == null) continueCellFlag = true;
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (continueCellFlag)
                                {
                                    if (cell.AccessibilityObject.Name.Equals("自由検索型式固定番号配列")
                                        || cell.AccessibilityObject.Name.Equals("FullModelFixedNoAry")
                                        || cell.AccessibilityObject.Name.Equals("CategoryObjAry")
                                        || cell.AccessibilityObject.Name.Equals("選択")
                                        || cell.AccessibilityObject.Name.Equals("AddresseeName1")
                                        || cell.AccessibilityObject.Name.Equals("AddresseeName2"))
                                    {
                                        continue;
                                    }
                                    if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                    {
                                        selectRow = gridRow;
                                        gridCell = cell;
                                        break;
                                    }
                                }
                                // 現在の列に達したら次の列から検索実行可に
                                if (!continueCellFlag && cell == this.uGrid_Detail.ActiveCell) continueCellFlag = true;
                            }
                            if (selectRow != null) break;
                        }
                    }
                    //ADD 2011/08/04 FOR redmine #23387
                }

                // 最後まで検索してもないなら最初から
                if (selectRow == null)
                {
                    foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_Detail.Rows)
                    {
                        // 現在の行に達したら終了
                        if (gridRow == this.uGrid_Detail.ActiveRow) break;

                        if (valueStr != "*all*")
                        {
                            //ADD 2011/08/04 FOR redmine #23387
                            if (valueStr.Equals("SelectionCheck"))
                            {
                                if (!searchStr.Equals("FALSE")
                                    && !searchStr.Equals("TRUE")
                                    && !searchStr.Equals("false")
                                    && !searchStr.Equals("true"))
                                {
                                    break;
                                }
                                if (searchStr.Trim().ToLower() == gridRow.Cells[valueStr].Value.ToString().Trim().ToLower())
                                {
                                    selectRow = gridRow;
                                    gridCell = gridRow.Cells[valueStr];
                                    break;
                                }
                            }
                            //ADD 2011/08/04 FOR redmine #23387
                            if (gridRow.Cells[valueStr].Value.ToString().IndexOf(searchStr) > -1)
                            {
                                selectRow = gridRow;
                                gridCell = gridRow.Cells[valueStr];   //ADD 2011/07/12
                                break;
                            }
                        }
                        else
                        {
                            /*DEL 2011/08/04 FOR redmine #23387 --------------
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                {
                                    selectRow = gridRow;
                                    gridCell = cell;   //ADD 2011/07/12
                                    break;
                                }
                            }
                            if (selectRow != null) break;
                            -------------DEL 2011/08/04 FOR redmine #23387 */
                        }
                        //ADD 2011/08/04 FOR redmine #23387
                        if (valueStr == "*all*")
                        {
                            // 現在選択されている列がなければ最初から
                            if (this.uGrid_Detail.ActiveCell == null) continueCellFlag = true;
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (continueCellFlag)
                                {
                                    if (cell.AccessibilityObject.Name.Equals("自由検索型式固定番号配列")
                                        || cell.AccessibilityObject.Name.Equals("FullModelFixedNoAry")
                                        || cell.AccessibilityObject.Name.Equals("CategoryObjAry")
                                        || cell.AccessibilityObject.Name.Equals("選択")
                                        || cell.AccessibilityObject.Name.Equals("AddresseeName1")
                                        || cell.AccessibilityObject.Name.Equals("AddresseeName2"))
                                    {
                                        continue;
                                    }
                                    if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                    {
                                        selectRow = gridRow;
                                        gridCell = cell;
                                        break;
                                    }
                                }
                                // 現在の列に達したら次の列から検索実行可に
                                if (!continueCellFlag && cell == this.uGrid_Detail.ActiveCell) continueCellFlag = true;
                            }
                            if (selectRow != null) break;
                        }
                        //ADD 2011/08/04 FOR redmine #23387
                    }
                }

                // 選択された行を現在行に設定
                if (selectRow != null)
                {
                    // 選択
                    // -----------ADD 2011/07/12---------->>>>>
                    if (gridCell != null)
                    {
                        this.uGrid_Detail.ActiveCell = gridCell;
                        this.uGrid_Detail.Focus();
                        if (this.uGrid_Detail.ActiveRow.Index == 0)
                        {
                            this.uGrid_Detail.PerformAction(UltraGridAction.BelowCell, false, false);
                            this.uGrid_Detail.PerformAction(UltraGridAction.AboveCell, false, false);
                        }
                        else
                        {
                            this.uGrid_Detail.PerformAction(UltraGridAction.AboveCell, false, false);
                            this.uGrid_Detail.PerformAction(UltraGridAction.BelowCell, false, false);
                        }
                    }
                    // -----------ADD 2011/07/12----------<<<<<
                    this.uGrid_Detail.Rows[this.uGrid_Detail.ActiveRow.Index].Selected = false;
                    this.uGrid_Detail.Rows[selectRow.Index].Selected = true;

                    this.uGrid_Detail.ActiveRow = selectRow;
                    return;
                }
                else
                {
                    // 見つかりません
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                        MSG_ROWSEARCH_NOT_FOUND, -1, MessageBoxButtons.OK);
                    return;
                }

                #endregion // 明細
            }
            else if (this._selectedMainTabKey == "uTab_RedSlip")
            {
                #region 赤伝

                // 現在選択されている行がなければ最初から
                //if (this.uGrid_RedSlip.ActiveRow == null) continueFlag = true;  //DEL 2011/08/04 FOR redmine #23387

                //ADD 2011/08/04 FOR redmine #23387
                if (this.uGrid_RedSlip.ActiveRow == null)
                {
                    continueFlag = true;
                }
                else
                {
                    this.uGrid_RedSlip.ActiveRow.Selected = false;
                }
                //ADD 2011/08/04 FOR redmine #23387

                foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_RedSlip.Rows)
                {
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/08 DEL
                    //// 現在の行に達したら検索実行可に
                    //if (!continueFlag && gridRow == this.uGrid_RedSlip.ActiveRow) continueFlag = true;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/08 DEL

                    if (continueFlag)
                    {
                        if (valueStr != "*all*")
                        {
                            if (gridRow.Cells[valueStr].Value.ToString().IndexOf(searchStr) > -1)
                            {
                                selectRow = gridRow;
                                gridCell = gridRow.Cells[valueStr];   //ADD 2011/07/12
                                break;
                            }
                        }
                        else
                        {
                            /*DEL 2011/08/04 FOR redmine #23387 --------------
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                {
                                    selectRow = gridRow;
                                    gridCell = cell;   //ADD 2011/07/12
                                    break;
                                }
                            }
                            if (selectRow != null) break;
                            -------------DEL 2011/08/04 FOR redmine #23387 */
                        }
                    }

                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/08 ADD
                    // 現在の行に達したら次の行から検索実行可に
                    if (!continueFlag && gridRow == this.uGrid_RedSlip.ActiveRow) continueFlag = true;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/08 ADD
                    //ADD 2011/08/04 FOR redmine #23387
                    if (continueFlag)
                    {
                        if (valueStr == "*all*")
                        {
                            // 現在選択されている列がなければ最初から
                            if (this.uGrid_RedSlip.ActiveCell == null) continueCellFlag = true;
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (continueCellFlag)
                                {
                                    if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                    {
                                        selectRow = gridRow;
                                        gridCell = cell;
                                        break;
                                    }
                                }
                                // 現在の列に達したら次の列から検索実行可に
                                if (!continueCellFlag && cell == this.uGrid_RedSlip.ActiveCell) continueCellFlag = true;
                            }
                            if (selectRow != null) break;
                        }
                    }
                    //ADD 2011/08/04 FOR redmine #23387

                }

                // 最後まで検索してもないなら最初から
                if (selectRow == null)
                {
                    foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_RedSlip.Rows)
                    {
                        // 現在の行に達したら終了
                        if (gridRow == this.uGrid_RedSlip.ActiveRow) break;

                        if (valueStr != "*all*")
                        {
                            if (gridRow.Cells[valueStr].Value.ToString().IndexOf(searchStr) > -1)
                            {
                                selectRow = gridRow;
                                gridCell = gridRow.Cells[valueStr];   //ADD 2011/07/12
                                break;
                            }
                        }
                        else
                        {
                            /*DEL 2011/08/04 FOR redmine #23387 --------------
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                {
                                    selectRow = gridRow;
                                    gridCell = cell;   //ADD 2011/07/12
                                    break;
                                }
                            }
                            if (selectRow != null) break;
                            -------------DEL 2011/08/04 FOR redmine #23387 */
                        }
                        //ADD 2011/08/04 FOR redmine #23387
                        if (valueStr == "*all*")
                        {
                            // 現在選択されている列がなければ最初から
                            if (this.uGrid_RedSlip.ActiveCell == null) continueCellFlag = true;
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (continueCellFlag)
                                {
                                    if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                    {
                                        selectRow = gridRow;
                                        gridCell = cell;
                                        break;
                                    }
                                }
                                // 現在の列に達したら次の列から検索実行可に
                                if (!continueCellFlag && cell == this.uGrid_RedSlip.ActiveCell) continueCellFlag = true;
                            }
                            if (selectRow != null) break;
                        }
                        //ADD 2011/08/04 FOR redmine #23387
                    }
                }

                // 選択された行を現在行に設定
                if (selectRow != null)
                {
                    // 選択
                    // -----------ADD 2011/07/12---------->>>>>
                    if (gridCell != null)
                    {
                        _searchFlg = true;  //ADD 2011/08/04 FOR redmine #23387
                        this.uGrid_RedSlip.ActiveCell = gridCell;
                        this.uGrid_RedSlip.Focus();
                        if (this.uGrid_RedSlip.ActiveRow.Index == 0)
                        {
                            this.uGrid_RedSlip.PerformAction(UltraGridAction.BelowCell, false, false);
                            this.uGrid_RedSlip.PerformAction(UltraGridAction.AboveCell, false, false);
                        }
                        else
                        {
                            this.uGrid_RedSlip.PerformAction(UltraGridAction.AboveCell, false, false);
                            this.uGrid_RedSlip.PerformAction(UltraGridAction.BelowCell, false, false);
                        }
                    }
                    // -----------ADD 2011/07/12----------<<<<<
                    this.uGrid_RedSlip.Rows[this.uGrid_RedSlip.ActiveRow.Index].Selected = false;
                    this.uGrid_RedSlip.Rows[selectRow.Index].Selected = true;

                    this.uGrid_RedSlip.ActiveRow = selectRow;
                    return;
                }
                else
                {
                    // 見つかりません
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                        MSG_ROWSEARCH_NOT_FOUND, -1, MessageBoxButtons.OK);
                    return;
                }

                #endregion // 赤伝
            }
            else if (this._selectedMainTabKey == "uTab_RemainList")
            {
                #region 残高一覧

                // 現在選択されている行がなければ最初から
                //if (this.uGrid_BalanceList.ActiveRow == null) continueFlag = true;  //DEL 2011/08/04 FOR redmine #23387

                //ADD 2011/08/04 FOR redmine #23387
                if (this.uGrid_BalanceList.ActiveRow == null)
                {
                    continueFlag = true;
                }
                else
                {
                    this.uGrid_BalanceList.ActiveRow.Selected = false;
                }
                //ADD 2011/08/04 FOR redmine #23387

                foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_BalanceList.Rows)
                {
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/08 DEL
                    //// 現在の行に達したら検索実行可に
                    //if (!continueFlag && gridRow == this.uGrid_BalanceList.ActiveRow) continueFlag = true;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/08 DEL

                    if (continueFlag)
                    {
                        if (valueStr != "*all*")
                        {
                            if (gridRow.Cells[valueStr].Value.ToString().IndexOf(searchStr) > -1)
                            {
                                selectRow = gridRow;
                                gridCell = gridRow.Cells[valueStr];   //ADD 2011/07/12
                                break;
                            }
                        }
                        else
                        {
                            /*DEL 2011/08/04 FOR redmine #23387 --------------
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                {
                                    selectRow = gridRow;
                                    gridCell = cell;   //ADD 2011/07/12
                                    break;
                                }
                            }
                            if (selectRow != null) break;
                            -------------DEL 2011/08/04 FOR redmine #23387 */
                        }
                    }

                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/08 ADD
                    // 現在の行に達したら次の行から検索実行可に
                    if (!continueFlag && gridRow == this.uGrid_BalanceList.ActiveRow) continueFlag = true;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/08 ADD
                    //ADD 2011/08/04 FOR redmine #23387
                    if (continueFlag)
                    {
                        if (valueStr == "*all*")
                        {
                            // 現在選択されている列がなければ最初から
                            if (this.uGrid_BalanceList.ActiveCell == null) continueCellFlag = true;
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (continueCellFlag)
                                {
                                    if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                    {
                                        selectRow = gridRow;
                                        gridCell = cell;
                                        break;
                                    }
                                }
                                // 現在の列に達したら次の列から検索実行可に
                                if (!continueCellFlag && cell == this.uGrid_BalanceList.ActiveCell) continueCellFlag = true;
                            }
                            if (selectRow != null) break;
                        }
                    }
                    //ADD 2011/08/04 FOR redmine #23387
                }

                // 最後まで検索してもないなら最初から
                if (selectRow == null)
                {
                    foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in this.uGrid_BalanceList.Rows)
                    {
                        // 現在の行に達したら終了
                        if (gridRow == this.uGrid_BalanceList.ActiveRow) break;

                        if (valueStr != "*all*")
                        {
                            if (gridRow.Cells[valueStr].Value.ToString().IndexOf(searchStr) > -1)
                            {
                                selectRow = gridRow;
                                gridCell = gridRow.Cells[valueStr];   //ADD 2011/07/12
                                break;
                            }
                        }
                        else
                        {
                            /*DEL 2011/08/04 FOR redmine #23387 --------------
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                {
                                    selectRow = gridRow;
                                    gridCell = cell;   //ADD 2011/07/12
                                    break;
                                }
                            }
                            if (selectRow != null) break;
                            -------------DEL 2011/08/04 FOR redmine #23387 */
                        }
                        //ADD 2011/08/04 FOR redmine #23387
                        if (valueStr == "*all*")
                        {
                            // 現在選択されている列がなければ最初から
                            if (this.uGrid_BalanceList.ActiveCell == null) continueCellFlag = true;
                            // 全ての列で検索
                            foreach (Infragistics.Win.UltraWinGrid.UltraGridCell cell in gridRow.Cells)
                            {
                                if (continueCellFlag)
                                {
                                    if (cell.Value.ToString().IndexOf(searchStr) > -1)
                                    {
                                        selectRow = gridRow;
                                        gridCell = cell;
                                        break;
                                    }
                                }
                                // 現在の列に達したら次の列から検索実行可に
                                if (!continueCellFlag && cell == this.uGrid_BalanceList.ActiveCell) continueCellFlag = true;
                            }
                            if (selectRow != null) break;
                        }
                        //ADD 2011/08/04 FOR redmine #23387
                    }
                }

                // 選択された行を現在行に設定
                if (selectRow != null)
                {
                    // 選択
                    // -----------ADD 2011/07/12---------->>>>>
                    if (gridCell != null)
                    {
                        this.uGrid_BalanceList.ActiveCell = gridCell;
                        this.uGrid_BalanceList.Focus();
                        if (this.uGrid_BalanceList.ActiveRow.Index == 0)
                        {
                            this.uGrid_BalanceList.PerformAction(UltraGridAction.BelowCell, false, false);
                            this.uGrid_BalanceList.PerformAction(UltraGridAction.AboveCell, false, false);
                        }
                        else
                        {
                            this.uGrid_BalanceList.PerformAction(UltraGridAction.AboveCell, false, false);
                            this.uGrid_BalanceList.PerformAction(UltraGridAction.BelowCell, false, false);
                        }
                    }
                    // -----------ADD 2011/07/12----------<<<<<
                    this.uGrid_BalanceList.Rows[this.uGrid_BalanceList.ActiveRow.Index].Selected = false;
                    this.uGrid_BalanceList.Rows[selectRow.Index].Selected = true;

                    this.uGrid_BalanceList.ActiveRow = selectRow;
                    return;
                }
                else
                {
                    // 見つかりません
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_INFO, this.Name,
                        MSG_ROWSEARCH_NOT_FOUND, -1, MessageBoxButtons.OK);
                    return;
                }

                #endregion // 残高一覧
            }
        }

        #region 帳票タイプを取得

        /// <summary>
        /// 帳票タイプを取得
        /// </summary>
        /// <param name="gridRow"></param>
        /// <returns></returns>
        private int getSlipType(Infragistics.Win.UltraWinGrid.UltraGridRow gridRow, int targetGrid)
        {
            // 関数呼び出しに使用する変数
            string tableName = string.Empty;
            string dataDivColName = string.Empty;
            string selectionColName = string.Empty;
            string rowNoColName = string.Empty;
            string salesSlipCdColName = string.Empty;
            string debitNoteDivColName = string.Empty;
            string acptAnOdrStatusColName = string.Empty;

            // 対象とするグリッドの各カラム名を取得
            switch (targetGrid)
            {
                case 0:
                    {
                        dataDivColName = this._detailDataSet.SalesList.DataDivColumn.ColumnName;
                        selectionColName = this._detailDataSet.SalesList.SelectionColumn.ColumnName;
                        salesSlipCdColName = this._detailDataSet.SalesList.SalesSlipCdColumn.ColumnName;
                        debitNoteDivColName = this._detailDataSet.SalesList.DebitNoteDivColumn.ColumnName;
                        acptAnOdrStatusColName = this._detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName;
                        rowNoColName = this._detailDataSet.SalesList.RowNoColumn.ColumnName;
                        tableName = "SalesList";
                        break;
                    }
                case 1:
                    {
                        dataDivColName = this._detailDataSet.SalesDetail.DataDivColumn.ColumnName;
                        selectionColName = this._detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName;
                        salesSlipCdColName = this._detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName;
                        debitNoteDivColName = this._detailDataSet.SalesDetail.DebitNoteDivColumn.ColumnName;
                        acptAnOdrStatusColName = this._detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName;
                        rowNoColName = this._detailDataSet.SalesDetail.RowNoColumn.ColumnName;
                        tableName = "SalesDetail";
                        break;
                    }
                default: break;
            }

            if ((int)gridRow.Cells[dataDivColName].Value == 1) // 入金
            {
                return 3;
            }
            else
            {
                if ((int)gridRow.Cells[salesSlipCdColName].Value == 1) // 返品
                {
                    return 0;
                }
                else
                {
                    if (gridRow.Cells[debitNoteDivColName].ToString() == "赤伝") // 赤伝
                    {
                        return 0;
                    }
                    else
                    {
                        if ((int)gridRow.Cells[acptAnOdrStatusColName].Value == 20) // 受注
                        {
                            return 1;
                        }
                        else if ((int)gridRow.Cells[acptAnOdrStatusColName].Value == 40) // 貸出
                        {
                            return 2;
                        }
                        else
                        {
                            return -1;
                        }
                    }
                }
            }
        }

        #endregion // 帳票タイプを取得

        #endregion // 検索開始

        #endregion // ツールバー検索

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/03 ADD
        # region [グリッドソート順文字列取得]
        /// <summary>
        /// 伝票表示グリッドソート順文字列取得（初期表示用）
        /// </summary>
        /// <returns></returns>
        /// <br>Update Note : 2010/12/20 yangmj </br>
        /// <br>             伝票表示・明細表示のソート順変更</br>
        private string GetSlipSortString()
        {
            return string.Format("{0}, {1}, {2}, {3}, {4}",
                                    _detailDataSet.SalesList.SalesDateColumn.ColumnName,
                //-----UPD 2010/12/20----->>>>>
                //_detailDataSet.SalesList.SalesSlipNumColumn.ColumnName,
                //_detailDataSet.SalesList.DataDivColumn.ColumnName,
                                    _detailDataSet.SalesList.DataDivColumn.ColumnName,
                                    _detailDataSet.SalesList.SalesSlipNumColumn.ColumnName,
                //-----UPD 2010/12/20-----<<<<<
                                    _detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName,
                                    _detailDataSet.SalesList.SalesSlipCdColumn.ColumnName);
        }
        /// <summary>
        /// 明細表示グリッドソート順文字列取得（初期表示用）
        /// </summary>
        /// <returns></returns>
        /// <br>Update Note : 2010/12/20 yangmj </br>
        /// <br>             伝票表示・明細表示のソート順変更</br>
        private string GetDetailSortString()
        {
            return string.Format("{0}, {1}, {2}, {3}, {4}, {5}",
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/24 DEL
                //_detailDataSet.SalesDetail.SalesDateColumn.ColumnName,
                //_detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName,
                //_detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName,
                //_detailDataSet.SalesDetail.DataDivColumn.ColumnName,
                //_detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName,
                //_detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName );
                // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/24 DEL
                // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/24 ADD
                                    _detailDataSet.SalesDetail.SalesDateColumn.ColumnName,
                //-----UPD 2010/12/20----->>>>>
                //_detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName,
                //_detailDataSet.SalesDetail.DataDivColumn.ColumnName,
                                    _detailDataSet.SalesDetail.DataDivColumn.ColumnName,
                                    _detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName,
                //-----UPD 2010/12/20-----<<<<<
                                    _detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName,
                                    _detailDataSet.SalesDetail.SalesSlipCdColumn.ColumnName,
                                    _detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName);
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/24 ADD
        }
        # endregion
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2008/12/03 ADD
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/12/08 ADD
        # region [入力可能グリッド制御]
        /// <summary>
        /// グリッドキーマッピング設定処理
        /// </summary>
        /// <param name="grid">設定対象のグリッド</param>
        private void MakeKeyMappingForGrid(Infragistics.Win.UltraWinGrid.UltraGrid grid)
        {
            Infragistics.Win.UltraWinGrid.GridKeyActionMapping enterMap;

            //----- Enterキー
            enterMap = new Infragistics.Win.UltraWinGrid.GridKeyActionMapping(
                Keys.Enter,
                Infragistics.Win.UltraWinGrid.UltraGridAction.NextCellByTab,
                0,
                Infragistics.Win.UltraWinGrid.UltraGridState.Cell,
                Infragistics.Win.SpecialKeys.All,
                0,
                true);
            grid.KeyActionMappings.Add(enterMap);

            //----- Shift + Enterキー
            enterMap = new Infragistics.Win.UltraWinGrid.GridKeyActionMapping(
                Keys.Enter,
                Infragistics.Win.UltraWinGrid.UltraGridAction.PrevCellByTab,
                0,
                Infragistics.Win.UltraWinGrid.UltraGridState.Cell,
                Infragistics.Win.SpecialKeys.AltCtrl,
                Infragistics.Win.SpecialKeys.Shift,
                true);
            grid.KeyActionMappings.Add(enterMap);

            //----- ↑キー
            enterMap = new Infragistics.Win.UltraWinGrid.GridKeyActionMapping(
                Keys.Up,
                Infragistics.Win.UltraWinGrid.UltraGridAction.AboveCell,
                Infragistics.Win.UltraWinGrid.UltraGridState.IsDroppedDown,
                Infragistics.Win.UltraWinGrid.UltraGridState.InEdit,
                Infragistics.Win.SpecialKeys.All,
                0,
                true);
            grid.KeyActionMappings.Add(enterMap);

            //----- ↑キー (最上段のドロップダウンリストでは何もしない。これが無いとリスト項目が変わってしまうので...)
            enterMap = new Infragistics.Win.UltraWinGrid.GridKeyActionMapping(
                Keys.Up,
                Infragistics.Win.UltraWinGrid.UltraGridAction.ExitEditMode,
                Infragistics.Win.UltraWinGrid.UltraGridState.IsDroppedDown,
                Infragistics.Win.UltraWinGrid.UltraGridState.RowFirst | Infragistics.Win.UltraWinGrid.UltraGridState.HasDropdown,
                Infragistics.Win.SpecialKeys.All,
                0,
                true);
            grid.KeyActionMappings.Add(enterMap);

            //----- ↓キー (最下段のドロップダウンリストでは何もしない。これが無いとリスト項目が変わってしまうので...)
            enterMap = new Infragistics.Win.UltraWinGrid.GridKeyActionMapping(
                Keys.Down,
                Infragistics.Win.UltraWinGrid.UltraGridAction.ExitEditMode,
                Infragistics.Win.UltraWinGrid.UltraGridState.IsDroppedDown,
                Infragistics.Win.UltraWinGrid.UltraGridState.RowLast | Infragistics.Win.UltraWinGrid.UltraGridState.HasDropdown,
                Infragistics.Win.SpecialKeys.All,
                0,
                true);
            grid.KeyActionMappings.Add(enterMap);

            //----- ↓キー
            enterMap = new Infragistics.Win.UltraWinGrid.GridKeyActionMapping(
                Keys.Down,
                Infragistics.Win.UltraWinGrid.UltraGridAction.BelowCell,
                Infragistics.Win.UltraWinGrid.UltraGridState.IsDroppedDown,
                Infragistics.Win.UltraWinGrid.UltraGridState.InEdit,
                Infragistics.Win.SpecialKeys.All,
                0,
                true);
            grid.KeyActionMappings.Add(enterMap);

            //----- 前頁キー
            enterMap = new Infragistics.Win.UltraWinGrid.GridKeyActionMapping(
                Keys.Prior,
                Infragistics.Win.UltraWinGrid.UltraGridAction.PageUpCell,
                0,
                Infragistics.Win.UltraWinGrid.UltraGridState.InEdit,
                Infragistics.Win.SpecialKeys.All,
                0,
                true);
            grid.KeyActionMappings.Add(enterMap);

            //----- 次頁キー
            enterMap = new Infragistics.Win.UltraWinGrid.GridKeyActionMapping(
                Keys.Next,
                Infragistics.Win.UltraWinGrid.UltraGridAction.PageDownCell,
                0,
                Infragistics.Win.UltraWinGrid.UltraGridState.InEdit,
                Infragistics.Win.SpecialKeys.All,
                0,
                true);
            grid.KeyActionMappings.Add(enterMap);
        }
        /// <summary>
        /// 数値入力チェック処理
        /// </summary>
        /// <param name="keta">桁数(マイナス符号を含まず)</param>
        /// <param name="priod">小数点以下桁数</param>
        /// <param name="prevVal">現在の文字列</param>
        /// <param name="key">入力されたキー値</param>
        /// <param name="selstart">カーソル位置</param>
        /// <param name="sellength">選択文字長</param>
        /// <param name="minusFlg">マイナス入力可？</param>
        /// <returns>true=入力可,false=入力不可</returns>
        private bool KeyPressNumCheck(int keta, int priod, string prevVal, char key, int selstart, int sellength, Boolean minusFlg)
        {
            // 制御キーが押された？
            if (Char.IsControl(key))
            {
                return true;
            }
            // 数値以外は、ＮＧ
            if (!Char.IsDigit(key))
            {
                // 小数点または、マイナス以外
                if ((key != '.') && (key != '-'))
                {
                    return false;
                }
            }

            // キーが押されたと仮定した場合の文字列を生成する。
            string _strResult = "";
            if (sellength > 0)
            {
                _strResult = prevVal.Substring(0, selstart) + prevVal.Substring(selstart + sellength, prevVal.Length - (selstart + sellength));
            }
            else
            {
                _strResult = prevVal;
            }

            // マイナスのチェック
            if (key == '-')
            {
                if ((minusFlg == false) || (selstart > 0) || (_strResult.IndexOf('-') != -1))
                {
                    return false;
                }
            }

            // 小数点のチェック
            if (key == '.')
            {
                if ((priod <= 0) || (_strResult.IndexOf('.') != -1))
                {
                    return false;
                }
            }
            // キーが押された結果の文字列を生成する。
            _strResult = prevVal.Substring(0, selstart)
                + key
                + prevVal.Substring(selstart + sellength, prevVal.Length - (selstart + sellength));

            // 桁数チェック！
            if (_strResult.Length > keta)
            {
                if (_strResult[0] == '-')
                {
                    if (_strResult.Length > (keta + 1))
                    {
                        return false;
                    }
                }
                else
                {
                    return false;
                }
            }

            // 小数点以下のチェック
            if (priod > 0)
            {
                // 小数点の位置決定
                int _pointPos = _strResult.IndexOf('.');

                // 整数部に入力可能な桁数を決定！
                int _Rketa = (_strResult[0] == '-') ? keta - priod : keta - priod - 1;
                // 整数部の桁数をチェック
                if (_pointPos != -1)
                {
                    if (_pointPos > _Rketa)
                    {
                        return false;
                    }
                }
                else
                {
                    if (_strResult.Length > _Rketa)
                    {
                        return false;
                    }
                }

                // 小数部の桁数をチェック
                if (_pointPos != -1)
                {
                    // 小数部の桁数を計算
                    int _priketa = _strResult.Length - _pointPos - 1;
                    if (priod < _priketa)
                    {
                        return false;
                    }
                }
            }
            return true;
        }
        /// <summary>
        /// 文字列入力チェック処理
        /// </summary>
        /// <param name="keta"></param>
        /// <param name="prevVal"></param>
        /// <param name="key"></param>
        /// <param name="selstart"></param>
        /// <param name="sellength"></param>
        /// <returns></returns>
        private bool KeyPressTextCheck(int keta, string prevVal, char key, int selstart, int sellength)
        {
            // 制御キーが押された？
            if (Char.IsControl(key))
            {
                return true;
            }

            // キーが押されたと仮定した場合の文字列を生成する。
            string _strResult = "";
            if (sellength > 0)
            {
                _strResult = prevVal.Substring(0, selstart) + prevVal.Substring(selstart + sellength, prevVal.Length - (selstart + sellength));
            }
            else
            {
                _strResult = prevVal;
            }

            // キーが押された結果の文字列を生成する。
            _strResult = prevVal.Substring(0, selstart)
                + key
                + prevVal.Substring(selstart + sellength, prevVal.Length - (selstart + sellength));

            // 桁数チェック！
            if (_strResult.Length > keta)
            {
                if (_strResult[0] == '-')
                {
                    if (_strResult.Length > (keta + 1))
                    {
                        return false;
                    }
                }
                else
                {
                    return false;
                }
            }
            return true;
        }
        # endregion

        # region [赤伝グリッドイベント]
        /// <summary>
        /// 赤伝グリッドキープレスイベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>
        /// <br>Update Note : 2009/11/25 呉元嘯</br>
        /// <br>              PM.NS保守依頼③ 不具合対応</br>
        /// <br>              赤伝発行入力タブのグリッドのカラムに金額の入力チェック</br>
        /// <br>Update Note : 2011/02/16 yangmj</br>
        /// <br>              readmine#18996の修正</br>
        /// </remarks>
        private void uGrid_RedSlip_KeyPress(object sender, KeyPressEventArgs e)
        {
            Infragistics.Win.UltraWinGrid.UltraGridCell cell = uGrid_RedSlip.ActiveCell;
            if (cell == null) return;

            if (cell.Column.Key == _detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName)
            {
                //----------------------------------------
                // 仕入返品伝票番号
                //----------------------------------------
                if (cell.IsInEditMode)
                {
                    // ---------- DEL 2012/09/10 ---------->>>>>
                    //// 入力可能文字
                    //if (this.uiSetControl1.CheckMatchingSet("SupplierSlipNum", e.KeyChar) == false)
                    //{
                    //    // イベント処理済みにする
                    //    e.Handled = true;
                    //}
                    // ---------- DEL 2012/09/10 ----------<<<<<

                    // 共通XMLから情報取得
                    UiSet uiSet;
                    int status = uiSetControl1.ReadUISet(out uiSet, "SupplierSlipNum");
                    if (status == 0)
                    {
                        if (!KeyPressTextCheck(uiSet.Column, cell.Text, e.KeyChar, cell.SelStart, cell.SelLength))
                        {
                            // イベント処理済みにする
                            e.Handled = true;
                        }
                    }
                    else
                    {
                        // イベント処理済みにする
                        e.Handled = true;
                    }
                }
            }
            else if (cell.Column.Key == _detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName)
            {
                //----------------------------------------
                // 返品数 (8,2)
                //----------------------------------------
                if (cell.IsInEditMode)
                {

                    //-----UPD 2011/02/16----->>>>>
                    int rowIndex = cell.Row.Index;
                    double shipmentCnt = (double)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ShipmentCntColumn];
                    int salesSlipCd = (int)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesSlipCdColumn];
                    int salesSlipCdDtl = (int)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesSlipCdDtlColumn];
                    int acceptAnOrderNo = (int)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.AcptAnOdrStatusColumn];
                    string goodNo = (string)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.GoodsNoColumn];

                    if (salesSlipCd == 0 && acceptAnOrderNo == 30 && salesSlipCdDtl == 2 && !string.IsNullOrEmpty(goodNo) && shipmentCnt < 0)
                    {
                        if (!KeyPressNumCheck(8, 2, cell.Text, e.KeyChar, cell.SelStart, cell.SelLength, true))
                        {
                            // イベント処理済みにする
                            e.Handled = true;
                        }
                    }
                    else
                    {
                        if (!KeyPressNumCheck(8, 2, cell.Text, e.KeyChar, cell.SelStart, cell.SelLength, false))
                        {
                            // イベント処理済みにする
                            e.Handled = true;
                        }
                    }
                    //if ( !KeyPressNumCheck( 8, 2, cell.Text, e.KeyChar, cell.SelStart, cell.SelLength, false ) )
                    //{
                    //    // イベント処理済みにする
                    //    e.Handled = true;
                    //}
                    //-----UPD 2011/02/16-----<<<<<
                }
            }
            else if (cell.Column.Key == _detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName)
            {
                //----------------------------------------
                // 単価 (9,2)
                //----------------------------------------
                if (cell.IsInEditMode)
                {
                    if (!KeyPressNumCheck(9, 2, cell.Text, e.KeyChar, cell.SelStart, cell.SelLength, false))
                    {
                        // イベント処理済みにする
                        e.Handled = true;
                    }
                }
            }
            else if (cell.Column.Key == _detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName)
            {
                //----------------------------------------
                // 原価 (9,2)
                //----------------------------------------
                if (cell.IsInEditMode)
                {
                    if (!KeyPressNumCheck(9, 2, cell.Text, e.KeyChar, cell.SelStart, cell.SelLength, false))
                    {
                        // イベント処理済みにする
                        e.Handled = true;
                    }
                }
            }
            else if (cell.Column.Key == _detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName)
            {
                //----------------------------------------
                // 倉庫コード (共通XMLに従う)
                //----------------------------------------
                if (cell.IsInEditMode)
                {
                    //// 入力可能文字
                    //if ( this.uiSetControl1.CheckMatchingSet( "tEdit_WarehouseCode", e.KeyChar ) == false )
                    //{
                    //    // イベント処理済みにする
                    //    e.Handled = true;
                    //}

                    // 共通XMLから桁数取得してチェック
                    UiSet uiSet;
                    int status = uiSetControl1.ReadUISet(out uiSet, "tEdit_WarehouseCode");
                    if (status == 0)
                    {
                        if (!KeyPressNumCheck(uiSet.Column, 0, cell.Text, e.KeyChar, cell.SelStart, cell.SelLength, false))
                        {
                            e.Handled = true;
                        }
                    }
                    else
                    {
                        e.Handled = true;
                    }
                }
            }
            // --- ADD 2009/11/25 ---------->>>>>
            //----------------------------------------------
            // ActiveCellが金額場合
            //----------------------------------------------
            else if (cell.Column.Key == this._detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName)
            {
                // 編集モード中？
                if (cell.IsInEditMode)
                {
                    if (!this.KeyPressNumCheck(12, 0, cell.Text, e.KeyChar, cell.SelStart, cell.SelLength, false))
                    {
                        e.Handled = true;
                        return;
                    }
                }
            }
            // --- ADD 2009/11/25 ----------<<<<<
        }

        /// <summary>
        /// 赤伝グリッドセル更新後イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>
        /// <br>Update Note : 2009/11/25 呉元嘯</br>
        /// <br>              PM.NS保守依頼③ 不具合対応</br>
        /// <br>              赤伝発行入力タブのグリッドのカラムに金額の計算</br>
        /// <br>Update Note : 2011/02/16 yangmj</br>
        /// <br>              readmine#18996の修正</br>
        /// <br>Update Note : 2011/02/17 yangmj</br>
        /// <br>              readmine#19055の修正</br>
        /// </remarks>
        private void uGrid_RedSlip_AfterCellUpdate(object sender, Infragistics.Win.UltraWinGrid.CellEventArgs e)
        {
            if (e.Cell == null) return;

            Infragistics.Win.UltraWinGrid.UltraGrid grid = uGrid_RedSlip;
            Infragistics.Win.UltraWinGrid.UltraGridCell cell = e.Cell;
            int rowIndex = e.Cell.Row.Index;

            # region [セル内容補正]
            // セル内容補正開始　＞＞
            grid.AfterCellUpdate -= uGrid_RedSlip_AfterCellUpdate;
            grid.BeforeCellUpdate -= uGrid_RedSlip_BeforeCellUpdate;

            # region [DBNull時のデフォルト値補正]
            if (e.Cell.Value is DBNull)
            {
                if ((e.Cell.Column.DataType == typeof(Int32)) ||
                    (e.Cell.Column.DataType == typeof(Int64)) ||
                    (e.Cell.Column.DataType == typeof(double)))
                {
                    e.Cell.Value = 0;
                }
                else if (e.Cell.Column.DataType == typeof(string))
                {
                    e.Cell.Value = "";
                }
            }
            # endregion

            # region [コードゼロ詰め対応]
            if (e.Cell.Column.DataType == typeof(string))
            {
                if (e.Cell.Value != null)
                {
                    // セル値更新
                    e.Cell.Value = uiSetControl1.GetZeroPaddedText(e.Cell.Column.Key, e.Cell.Value.ToString());
                }
            }
            # endregion

            // セル内容補正終了　＜＜
            grid.AfterCellUpdate += uGrid_RedSlip_AfterCellUpdate;
            grid.BeforeCellUpdate += uGrid_RedSlip_BeforeCellUpdate;
            # endregion

            # region [倉庫]
            if (cell.Column.Key == _detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName)
            {
                string warehouseCode = e.Cell.Text.Trim();
                // ---------- ADD 2012/10/25 Y.Wakita ---------->>>>>
                if (warehouseCode != string.Empty)
                {
                    // ---------- ADD 2012/10/25 Y.Wakita ----------<<<<<
                // ---------- ADD 2012/8/22 ---------- >>>>>
                // 売仕入同時入力の明細の場合
                if (_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SupplyDivNameColumn] != DBNull.Value &&
                    (string)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SupplyDivNameColumn] == "○")
                {
                    // 仕入伝票番号が入力されているかチェック
                    if ((string)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn].ToString().Trim() != string.Empty)
                    {
                        // 仕入伝票番号が入力されていれば警告表示
                        TMsgDisp.Show(
                            this,
                            emErrorLevel.ERR_LEVEL_EXCLAMATION,
                            this.Name,
                            // ----- ADD 2013/01/15 ----->>>>>
                            //"在庫品のため、仕入の返品処理はできません。",
                            "仕入伝票番号と倉庫コードのどちらかしか入力できません。",
                            // ----- ADD 2013/01/15 -----<<<<<
                            -1,
                            MessageBoxButtons.OK);

                        // DataSetの倉庫コードもクリア
                        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn] = string.Empty;

                        // 
                        _cannotWarehouseCodeOfRedSlipRead = true;
                        _errorMsgShow = true;// ADD BY wupf 2014/08/13 FOR Redmine＃43184 倉庫コードの障害解除

                        return;
                    }
                }
                // ---------- ADD 2012/8/22 ---------- <<<<<
                // ---------- ADD 2012/10/25 Y.Wakita ---------->>>>>
                }
                // ---------- ADD 2012/10/25 Y.Wakita ----------<<<<<
            // 在庫・取寄 変更チェック
                int sign = 0;
                if (_prevWarehouseCodeOfRedSlip != string.Empty && warehouseCode == string.Empty)
                {
                    sign = -1;
                }
                else if (_prevWarehouseCodeOfRedSlip == string.Empty && warehouseCode != string.Empty)
                {
                    sign = 1;
                }

                if (warehouseCode != string.Empty)
                {
                    // 倉庫チェック
                    # region [倉庫チェック]
                    Warehouse warehouseInfo;
                    int status = this._warehouseAcs.Read(out warehouseInfo, this._enterpriseCode, string.Empty, warehouseCode);
                    if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                    {
                        // 前回入力倉庫コード更新
                        _prevWarehouseCodeOfRedSlip = warehouseCode.Trim();
                        // 名称セット
                        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseNameColumn] = warehouseInfo.WarehouseName;
                    }
                    else
                    {
                        // エラー時
                        TMsgDisp.Show(
                            this,
                            emErrorLevel.ERR_LEVEL_INFO,
                            this.Name,
                            "倉庫コード [" + warehouseCode + "] に該当するデータが存在しません。",
                            -1,
                            MessageBoxButtons.OK);

                        // コードを戻す
                        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn] = _prevWarehouseCodeOfRedSlip;
                        _cannotWarehouseCodeOfRedSlipRead = true;
                        _errorMsgShow = true;// ADD BY wupf 2014/08/13 FOR Redmine＃43184 倉庫コードの障害解除
                    }
                    # endregion

                    // 倉庫OK
                    if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                    {
                        // 在庫チェック
                        # region [在庫チェック]
                        string goodsNo = (string)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.GoodsNoColumn];
                        int goodsMakerCd = (int)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.GoodsMakerCdColumn];
                        double returnCnt = (double)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnCntColumn];

                        string warehouseShelfNo = string.Empty;
                        double returnedAfterCnt = 0;

                        GoodsUnitData goods;
                        Stock stock;

                        if (_custPtrRedSlipAcs.ReadGoods(goodsNo, goodsMakerCd, out goods) == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            // 商品:更新
                            if (_custPtrRedSlipAcs.SelectStock(goods, warehouseCode, out stock) == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                            {
                                // 在庫:更新
                                warehouseShelfNo = stock.WarehouseShelfNo.Trim();
                                returnedAfterCnt = (double)((decimal)stock.ShipmentPosCnt + (decimal)returnCnt);
                            }
                            else
                            {
                                // 在庫:新規
                                warehouseShelfNo = new string('Z', 8);
                                returnedAfterCnt = returnCnt;
                            }
                        }
                        else
                        {
                            // 商品在庫:新規
                            warehouseShelfNo = new string('S', 8);
                            returnedAfterCnt = returnCnt;
                        }
                        # endregion

                        // 在庫情報セット
                        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ShelfNoColumn] = warehouseShelfNo;
                        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn] = returnedAfterCnt;
                    }
                }
                else
                {
                    // 在庫情報クリア
                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseNameColumn] = string.Empty;
                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ShelfNoColumn] = string.Empty;
                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn] = DBNull.Value;
                }

                // 在庫合計金額を変更
                if (!_cannotWarehouseCodeOfRedSlipRead && sign != 0)
                {
                    //------UPD 2009/11/25------->>>>>
                    //_redSlipStockPrice += (sign * GetDetailPriceForRedTotal(
                    //                                (double)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn],
                    //                                (double)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnCntColumn] ));
                    long money = (long)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn];
                    int rowNo = (int)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.RowNoColumn];
                    if (this.redStockMoney.Count == 0 || !this.redStockMoney.ContainsKey(rowNo))
                    {
                        this.redStockMoney.Add(rowNo, money);
                    }
                    else if (this.redStockMoney.ContainsKey(rowNo))
                    {
                        this.redStockMoney[rowNo] = money;
                    }
                    _redSlipStockPrice += sign * money;
                    //------UPD 2009/11/25-------<<<<
                }
                ChangeRedSlipTotalPrice();
            }
            # endregion

            # region [返品数]
            else if (cell.Column.Key == _detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName)
            {
                // 返品可能数取得・返品数
                double shipmentCnt = (double)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ShipmentCntColumn];
                double returnCnt = 0;
                //-----ADD 2011/02/16----->>>>>
                int salesSlipCd = (int)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesSlipCdColumn];
                int salesSlipCdDtl = (int)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesSlipCdDtlColumn];
                int acceptAnOrderNo = (int)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.AcptAnOdrStatusColumn];
                string goodNo = (string)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.GoodsNoColumn];
                //-----ADD 2011/02/16-----<<<<<

                try
                {
                    returnCnt = Double.Parse(e.Cell.Text);
                }
                catch
                {
                }

                // 返品数の入力チェック
                //-----ADD 2011/02/16----->>>>>
                if (salesSlipCd == 0 && acceptAnOrderNo == 30 && salesSlipCdDtl == 2 && !string.IsNullOrEmpty(goodNo) && shipmentCnt < 0)
                {
                    if (returnCnt < shipmentCnt || returnCnt > 0)
                    {
                        // エラー時
                        TMsgDisp.Show(
                            this,
                            emErrorLevel.ERR_LEVEL_INFO,
                            this.Name,
                            "返品数が返品可能数を超えています。",
                            -1,
                            MessageBoxButtons.OK);
                        // 入力を戻す
                        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnCntColumn] = _prevReturnCntOfRedSlip;
                        _cannotReturnCntOfRedSlipInput = true;
                        _errorMsgShow = true;// ADD BY wupf 2014/08/13 FOR Redmine＃43184 倉庫コードの障害解除
                    }
                    else if (returnCnt == 0)
                    {
                        // エラー時
                        TMsgDisp.Show(
                            this,
                            emErrorLevel.ERR_LEVEL_INFO,
                            this.Name,
                            "返品数を入力して下さい。",
                            -1,
                            MessageBoxButtons.OK);
                        // 入力を戻す
                        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnCntColumn] = _prevReturnCntOfRedSlip;
                        _cannotReturnCntOfRedSlipInput = true;
                        _errorMsgShow = true;// ADD BY wupf 2014/08/13 FOR Redmine＃43184 倉庫コードの障害解除
                    }
                    // --- UPD 2011/02/17 ---------->>>>>
                    else
                    {
                        #region [合計金額]
                        #region [金額再計算]
                        if ((double)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn] == 0) return;

                        this._custPtrRedSlipAcs.CalculationSalesMoney(rowIndex);
                        #endregion

                        #region [保存明細金額]
                        long salesMoneyDisplay = (long)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn];
                        int rowNo = (int)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.RowNoColumn];
                        if (this.redMoney.Count == 0 || !this.redMoney.ContainsKey(rowNo))
                        {
                            this.redMoney.Add(rowNo, salesMoneyDisplay);
                        }
                        else if (this.redMoney.ContainsKey(rowNo))
                        {
                            this.redMoney[rowNo] = salesMoneyDisplay;
                        }
                        if (this.redStockMoney.Count == 0 || !this.redStockMoney.ContainsKey(rowNo))
                        {
                            this.redStockMoney.Add(rowNo, salesMoneyDisplay);
                        }
                        else if (this.redStockMoney.ContainsKey(rowNo))
                        {
                            this.redStockMoney[rowNo] = salesMoneyDisplay;
                        }
                        #endregion
                        // 赤伝合計金額
                        CountMoney();
                        # endregion

                        // 赤伝合計金額変更時の処理
                        ChangeRedSlipTotalPrice();

                        // 在庫返品後数を更新（非表示の場合DBNull）
                        # region [在庫返品後数]
                        if (_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn] != DBNull.Value)
                        {
                            double returnedAfterCnt = (double)((decimal)((double)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn])
                                                             - (decimal)(_prevReturnCntOfRedSlip)
                                                             + (decimal)(returnCnt));
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn] = returnedAfterCnt;
                        }
                        # endregion

                        // 前回値更新
                        _prevReturnCntOfRedSlip = returnCnt;
                    }
                    // --- UPD 2011/02/17 ----------<<<<<
                }
                else
                {
                    //-----ADD 2011/02/16-----<<<<<
                    if (returnCnt > shipmentCnt)
                    {
                        // エラー時
                        TMsgDisp.Show(
                            this,
                            emErrorLevel.ERR_LEVEL_INFO,
                            this.Name,
                            "返品数が返品可能数を超えています。",
                            -1,
                            MessageBoxButtons.OK);
                        // 入力を戻す
                        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnCntColumn] = _prevReturnCntOfRedSlip;
                        _cannotReturnCntOfRedSlipInput = true;
                        _errorMsgShow = true;// ADD BY wupf 2014/08/13 FOR Redmine＃43184 倉庫コードの障害解除
                    }
                    else if (returnCnt == 0)
                    {
                        // エラー時
                        TMsgDisp.Show(
                            this,
                            emErrorLevel.ERR_LEVEL_INFO,
                            this.Name,
                            "返品数を入力して下さい。",
                            -1,
                            MessageBoxButtons.OK);
                        // 入力を戻す
                        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnCntColumn] = _prevReturnCntOfRedSlip;
                        _cannotReturnCntOfRedSlipInput = true;
                        _errorMsgShow = true;// ADD BY wupf 2014/08/13 FOR Redmine＃43184 倉庫コードの障害解除
                    }
                    else
                    {
                        // --- UPD 2009/11/25 ---------->>>>>
                        #region [合計金額]
                        #region [金額再計算]
                        if ((double)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn] == 0) return;

                        this._custPtrRedSlipAcs.CalculationSalesMoney(rowIndex);
                        #endregion

                        #region [保存明細金額]
                        long salesMoneyDisplay = (long)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn];
                        int rowNo = (int)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.RowNoColumn];
                        if (this.redMoney.Count == 0 || !this.redMoney.ContainsKey(rowNo))
                        {
                            this.redMoney.Add(rowNo, salesMoneyDisplay);
                        }
                        else if (this.redMoney.ContainsKey(rowNo))
                        {
                            this.redMoney[rowNo] = salesMoneyDisplay;
                        }
                        if (this.redStockMoney.Count == 0 || !this.redStockMoney.ContainsKey(rowNo))
                        {
                            this.redStockMoney.Add(rowNo, salesMoneyDisplay);
                        }
                        else if (this.redStockMoney.ContainsKey(rowNo))
                        {
                            this.redStockMoney[rowNo] = salesMoneyDisplay;
                        }
                        #endregion
                        // 赤伝合計金額
                        CountMoney();
                        # endregion
                        // --- UPD 2009/11/25 ----------<<<<<

                        // 赤伝合計金額変更時の処理
                        ChangeRedSlipTotalPrice();

                        // 在庫返品後数を更新（非表示の場合DBNull）
                        # region [在庫返品後数]
                        if (_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn] != DBNull.Value)
                        {
                            double returnedAfterCnt = (double)((decimal)((double)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn])
                                                             - (decimal)(_prevReturnCntOfRedSlip)
                                                             + (decimal)(returnCnt));
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn] = returnedAfterCnt;
                        }
                        # endregion

                        // 前回値更新
                        //_prevReturnCntOfRedSlip = (double)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnCntColumn];
                        _prevReturnCntOfRedSlip = returnCnt;
                    }

                }
            }
            # endregion

            # region [単価]
            else if (cell.Column.Key == _detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName)
            {
                double salesUnitPrice = 0;
                try
                {
                    salesUnitPrice = Double.Parse(e.Cell.Text);
                }
                catch
                {
                }
                //------------ UPD 2009/11/25 ------------>>>>>
                if (_prevSalesUnitPriceOfRedSlip == salesUnitPrice) return;

                #region [金額再計算]
                if ((double)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn] == 0)
                {
                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn] = 0;
                }
                else
                {
                    this._custPtrRedSlipAcs.CalculationSalesMoney(rowIndex);
                }
                #endregion

                #region [保存明細金額]
                long salesMoneyDisplay = (long)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn];
                int rowNo = (int)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.RowNoColumn];
                if (this.redMoney.Count == 0 || !this.redMoney.ContainsKey(rowNo))
                {
                    this.redMoney.Add(rowNo, salesMoneyDisplay);
                }
                else if (this.redMoney.ContainsKey(rowNo))
                {
                    this.redMoney[rowNo] = salesMoneyDisplay;
                }
                if (this.redStockMoney.Count == 0 || !this.redStockMoney.ContainsKey(rowNo))
                {
                    this.redStockMoney.Add(rowNo, salesMoneyDisplay);
                }
                else if (this.redStockMoney.ContainsKey(rowNo))
                {
                    this.redStockMoney[rowNo] = salesMoneyDisplay;
                }
                #endregion

                // 赤伝合計金額
                CountMoney();
                // --- UPD 2009/11/25 ----------<<<<<
                ChangeRedSlipTotalPrice();

                // 前回値更新
                _prevSalesUnitPriceOfRedSlip = salesUnitPrice;
            }
            # endregion

            // --- ADD 2009/11/25 ---------->>>>>
            # region [金額]
            else if (cell.Column.Key == _detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName)
            {
                long salesMoneyTaxExc = 0;
                try
                {
                    salesMoneyTaxExc = (long)e.Cell.Value;
                }
                catch
                {
                }
                if (salesMoneyTaxExc != this._preSalesMoney)
                {
                    // 単価をクリア
                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn] = 0.0;
                    int rowNo = (int)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.RowNoColumn];
                    if (this.redMoney.Count == 0 || !this.redMoney.ContainsKey(rowNo))
                    {
                        this.redMoney.Add(rowNo, salesMoneyTaxExc);
                    }
                    else if (this.redMoney.ContainsKey(rowNo))
                    {
                        this.redMoney[rowNo] = salesMoneyTaxExc;
                    }

                    // 合計金額変更
                    _redSlipTotalPrice += (salesMoneyTaxExc - _preSalesMoney);
                    if ((string)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn] != string.Empty)
                    {
                        if (this.redStockMoney.Count == 0 || !this.redStockMoney.ContainsKey(rowNo))
                        {
                            this.redStockMoney.Add(rowNo, salesMoneyTaxExc);
                        }
                        else if (this.redStockMoney.ContainsKey(rowNo))
                        {
                            this.redStockMoney[rowNo] = salesMoneyTaxExc;
                        }
                        // 在庫合計金額変更
                        _redSlipStockPrice += (salesMoneyTaxExc - _preSalesMoney);
                    }
                    ChangeRedSlipTotalPrice();

                    // 前回値更新
                    _preSalesMoney = salesMoneyTaxExc;
                }

            }
            # endregion
            // --- ADD 2009/11/25 ----------<<<<<

            // --- ADD 2012/08/22 ---------->>>>>
            #region [仕入伝票番号]
            if (cell.Column.Key == _detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName)
            {
                if (cell.Text != string.Empty)
                {
                    // 売仕入同時入力の明細の場合
                    if (_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SupplyDivNameColumn] != DBNull.Value &&
                        (string)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SupplyDivNameColumn] == "○")
                    {
                        // ---------- ADD 2012/10/25 Y.Wakita ---------->>>>>
                        int salesSlipCd = (int)tComboEditor_rs_SalesSlipCd.Value;
                        if (salesSlipCd == 0)
                        {
                            // 伝票区分が掛売上で仕入伝票番号が入力された場合、倉庫情報をクリアする。
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn] = string.Empty;
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseNameColumn] = string.Empty;
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ShelfNoColumn] = string.Empty;
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn] = DBNull.Value;
                        }
                        // ---------- ADD 2012/10/25 Y.Wakita ----------<<<<<
                        // 倉庫コードが入力されているかチェック
                        if ((string)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn].ToString().Trim() != string.Empty)
                        {

                            // 倉庫コードが入力されていれば警告表示
                            TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_EXCLAMATION,
                                this.Name,
                                // ----- ADD 2013/01/15 ----->>>>>
                                //"在庫品のため、仕入の返品処理はできません。",
                                "仕入伝票番号と倉庫コードのどちらかしか入力できません。",
                                // ----- ADD 2013/01/15 -----<<<<<
                                -1,
                                MessageBoxButtons.OK);


                            // DataSetの仕入伝票番号もクリア
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn] = string.Empty;

                            _cannotStockPartySaleSlipNum = true;
                            _errorMsgShow = true;// ADD BY wupf 2014/08/13 FOR Redmine＃43184 倉庫コードの障害解除

                            return;
                        }
                    }
                }
            }
            #endregion
            // --- ADD 2012/08/22 ----------<<<<<

            // グリッドセル設定処理
            this.SettingGridRow(rowIndex);
        }
        /// <summary>
        /// 赤伝グリッドアクション実行後イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uGrid_RedSlip_AfterPerformAction(object sender, Infragistics.Win.UltraWinGrid.AfterUltraGridPerformActionEventArgs e)
        {
            Infragistics.Win.UltraWinGrid.UltraGrid grid = (sender as Infragistics.Win.UltraWinGrid.UltraGrid);

            switch (e.UltraGridAction)
            {
                case Infragistics.Win.UltraWinGrid.UltraGridAction.ActivateCell:
                case Infragistics.Win.UltraWinGrid.UltraGridAction.AboveCell:
                case Infragistics.Win.UltraWinGrid.UltraGridAction.BelowCell:
                case Infragistics.Win.UltraWinGrid.UltraGridAction.PrevCell:
                case Infragistics.Win.UltraWinGrid.UltraGridAction.NextCell:
                case Infragistics.Win.UltraWinGrid.UltraGridAction.PageUpCell:
                case Infragistics.Win.UltraWinGrid.UltraGridAction.PageDownCell:

                    // アクティブなセルがあるか？または編集可能セルか？
                    if ((grid.ActiveCell != null) && (grid.ActiveCell.Column.CellActivation == Infragistics.Win.UltraWinGrid.Activation.AllowEdit) && (grid.ActiveCell.Activation == Infragistics.Win.UltraWinGrid.Activation.AllowEdit))
                    {
                        // アクティブセルのスタイルを取得
                        switch (grid.ActiveCell.StyleResolved)
                        {
                            // エディット系スタイル
                            case Infragistics.Win.UltraWinGrid.ColumnStyle.Default:
                            case Infragistics.Win.UltraWinGrid.ColumnStyle.Edit:
                            case Infragistics.Win.UltraWinGrid.ColumnStyle.EditButton:
                                {
                                    // 編集モードにある？
                                    if (grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.EnterEditMode))
                                    {
                                        if (!(grid.ActiveCell.Value is System.DBNull))
                                        {
                                            // 全選択状態にする。
                                            grid.ActiveCell.SelStart = 0;
                                            grid.ActiveCell.SelLength = grid.ActiveCell.Text.Length;
                                        }
                                    }
                                    break;
                                }
                            default:
                                {
                                    // エディット系以外のスタイルであれば、編集状態にする。
                                    grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.EnterEditMode);
                                    break;
                                }
                        }
                    }
                    break;
            }
        }
        /// <summary>
        /// 赤伝グリッド行アクティブ化後イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uGrid_RedSlip_AfterRowActivate(object sender, EventArgs e)
        {
            Infragistics.Win.UltraWinGrid.UltraGrid grid = (sender as Infragistics.Win.UltraWinGrid.UltraGrid);

            if (grid.ActiveRow == null) return;
            Infragistics.Win.UltraWinGrid.UltraGridRow row = grid.ActiveRow;

            // グリッドセル設定処理
            //this.SettingGridRow( this.GetActiveRowIndex() );
            this.SettingGridRow(row.Index);
        }
        /// <summary>
        /// 赤伝グリッドセル更新前イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uGrid_RedSlip_BeforeCellUpdate(object sender, Infragistics.Win.UltraWinGrid.BeforeCellUpdateEventArgs e)
        {
            //if ( e.Cell == null ) return;

            //this._beforeCellUpdateCancel = false;
            //Infragistics.Win.UltraWinGrid.UltraGridCell cell = e.Cell;

            Infragistics.Win.UltraWinGrid.UltraGrid grid = this.uGrid_RedSlip;
            int rowIndex = e.Cell.Row.Index;

            # region [倉庫]
            if (e.Cell.Column.Key == _detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName)
            {
                if (e.Cell.Value != DBNull.Value)
                {
                    _prevWarehouseCodeOfRedSlip = (string)e.Cell.Value;
                }
                else
                {
                    _prevWarehouseCodeOfRedSlip = string.Empty;
                }
            }
            # endregion

            # region [返品数]
            else if (e.Cell.Column.Key == _detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName)
            {
                if (e.Cell.Value != DBNull.Value)
                {
                    _prevReturnCntOfRedSlip = (double)e.Cell.Value;
                }
                else
                {
                    _prevReturnCntOfRedSlip = 0;
                }
            }
            # endregion

            # region [単価]
            else if (e.Cell.Column.Key == _detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName)
            {
                if (e.Cell.Value != DBNull.Value)
                {
                    _prevSalesUnitPriceOfRedSlip = (double)e.Cell.Value;
                }
                else
                {
                    _prevSalesUnitPriceOfRedSlip = 0;
                }
            }
            # endregion

            //---------- ADD 2009/11/25 ------->>>>>
            # region [金額]
            else if (e.Cell.Column.Key == _detailDataSet.RedSlipDetail.SalesMoneyTaxExcColumn.ColumnName)
            {
                if (e.Cell.Value != DBNull.Value)
                {
                    this._preSalesMoney = (long)e.Cell.Value;
                }
                else
                {
                    _preSalesMoney = 0;
                }
            }
            # endregion
            //---------- ADD 2009/11/25 -------<<<<<
        }
        /// <summary>
        /// 赤伝グリッドセルデータエラーイベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uGrid_RedSlip_CellDataError(object sender, Infragistics.Win.UltraWinGrid.CellDataErrorEventArgs e)
        {
            Infragistics.Win.UltraWinGrid.UltraGrid grid = (sender as Infragistics.Win.UltraWinGrid.UltraGrid);

            if (grid.ActiveCell != null)
            {
                // 数値項目の場合
                if ((grid.ActiveCell.Column.DataType == typeof(Int32)) ||
                    (grid.ActiveCell.Column.DataType == typeof(Int64)) ||
                    (grid.ActiveCell.Column.DataType == typeof(double)))
                {
                    Infragistics.Win.EmbeddableEditorBase editorBase = grid.ActiveCell.EditorResolved;

                    // 未入力は0にする
                    if (editorBase.CurrentEditText.Trim() == "")
                    {
                        editorBase.Value = 0;				// 0をセット
                        grid.ActiveCell.Value = 0;
                    }
                    // 数値項目に「-」or「.」だけしか入ってなかったら駄目です
                    else if ((editorBase.CurrentEditText.Trim() == "-") ||
                        (editorBase.CurrentEditText.Trim() == ".") ||
                        (editorBase.CurrentEditText.Trim() == "-."))
                    {
                        editorBase.Value = 0;				// 0をセット
                        grid.ActiveCell.Value = 0;
                    }
                    // 通常入力
                    else
                    {
                        try
                        {
                            editorBase.Value = Convert.ChangeType(editorBase.CurrentEditText.Trim(), grid.ActiveCell.Column.DataType);
                            grid.ActiveCell.Value = editorBase.Value;
                        }
                        catch
                        {
                            editorBase.Value = 0;
                            grid.ActiveCell.Value = 0;
                        }
                    }
                    e.RaiseErrorEvent = false;			// エラーイベントは発生させない
                    e.RestoreOriginalValue = false;		// セルの値を元に戻さない
                    e.StayInEditMode = false;			// 編集モードは抜ける
                }
                // ---------- ADD 2012/08/22 ---------->>>>>
                else if(grid.ActiveCell.Column.DataType == typeof(DateTime))
                {
                    // 無効値ならUNDOする
                    grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.UndoCell);

                    e.RaiseErrorEvent = false;			// エラーイベントは発生させない
                    e.RestoreOriginalValue = true;		// セルの値を元に戻す

                }
                // ---------- ADD 2012/08/22 ----------<<<<<
            }
        }
        /// <summary>
        /// 赤伝グリッド進入イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uGrid_RedSlip_Enter(object sender, EventArgs e)
        {
            //ADD 2011/08/04 FOR redmine #23387
            if (_searchFlg)
            {
                _searchFlg = false;
                return;
            }
            //ADD 2011/08/04 FOR redmine #23387

            try
            {
                // 描画停止＞＞
                this.SuspendLayout();

                Infragistics.Win.UltraWinGrid.UltraGrid grid = (sender as Infragistics.Win.UltraWinGrid.UltraGrid);

                //if ( !_parentEnabled ) return;

                if (grid.ActiveCell == null)
                {
                    if (!grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.ActivateCell) || (grid.ActiveCell == null))
                    {
                        if (grid.Rows.Count > 0)
                        {
                            grid.ActiveCell = grid.Rows[0].Cells[0];

                            // 次入力可能セル移動処理
                            this.MoveNextAllowEditCell(true);
                        }
                    }
                }

                if (grid.ActiveCell != null)
                {
                    if ((!grid.ActiveCell.IsInEditMode) && (grid.ActiveCell.Activation == Infragistics.Win.UltraWinGrid.Activation.AllowEdit) && (grid.ActiveCell.Column.CellActivation == Infragistics.Win.UltraWinGrid.Activation.AllowEdit))
                    {
                        grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.EnterEditMode);
                    }
                    else
                    {
                        // 次入力可能セル移動処理
                        this.MoveNextAllowEditCell(true);
                    }
                }
            }
            finally
            {
                // 描画再開＜＜
                this.ResumeLayout();
            }
        }
        /// <summary>
        /// 赤伝グリッド初期化イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uGrid_RedSlip_InitializeLayout(object sender, Infragistics.Win.UltraWinGrid.InitializeLayoutEventArgs e)
        {

        }
        /// <summary>
        /// 赤伝グリッドキーダウンイベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uGrid_RedSlip_KeyDown(object sender, KeyEventArgs e)
        {
            Infragistics.Win.UltraWinGrid.UltraGrid grid = (sender as Infragistics.Win.UltraWinGrid.UltraGrid);

            if (grid.ActiveCell != null)
            {
                Infragistics.Win.UltraWinGrid.UltraGridCell cell = grid.ActiveCell;

                if (e.KeyCode == Keys.Escape)
                {
                    //// 仕入明細データテーブルRowStatus列初期化処理
                    //this._stockSlipInputAcs.InitializeStockDetailRowStatusColumn();

                    //// 明細グリッドセル設定処理
                    //this.SettingGrid();
                }

                if (e.Shift)
                {
                    switch (e.KeyCode)
                    {
                        case Keys.Down:
                            {
                                grid.ActiveCell = null;
                                grid.ActiveRow = cell.Row;
                                grid.Selected.Rows.Clear();
                                grid.Selected.Rows.Add(cell.Row);
                                break;
                            }
                        case Keys.Up:
                            {
                                grid.ActiveCell = null;
                                grid.ActiveRow = cell.Row;
                                grid.Selected.Rows.Clear();
                                grid.Selected.Rows.Add(cell.Row);
                                break;
                            }
                        case Keys.Home:
                            {
                                if ((grid.ActiveCell != null) && (grid.ActiveCell.IsInEditMode))
                                {
                                    // 編集モードの場合はなにもしない
                                }
                                else
                                {
                                    grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.FirstCellInGrid);
                                    this.MoveNextAllowEditCell(true);
                                }
                                break;
                            }
                        case Keys.End:
                            {
                                if ((grid.ActiveCell != null) && (grid.ActiveCell.IsInEditMode))
                                {
                                    // 編集モードの場合はなにもしない
                                }
                                else
                                {
                                    grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.LastCellInGrid);
                                }
                                break;
                            }
                    }
                }
                else if (e.Alt)
                {
                    switch (e.KeyCode)
                    {
                        case Keys.Down:
                            {
                                //if ((cell.Column.Style != Infragistics.Win.UltraWinGrid.ColumnStyle.DropDown) &&
                                //    (cell.Column.Style != Infragistics.Win.UltraWinGrid.ColumnStyle.DropDownList) &&
                                //    (cell.Column.Style != Infragistics.Win.UltraWinGrid.ColumnStyle.DropDownValidate))
                                //{
                                //    ((Infragistics.Win.UltraWinToolbars.PopupMenuTool)this.tToolbarsManager_Main.Tools["PopupMenuTool_Edit"]).ShowPopup(System.Windows.Forms.Cursor.Position, grid);
                                //}

                                break;
                            }
                    }
                }
                else
                {
                    // 編集中であった場合
                    if (cell.IsInEditMode)
                    {
                        // セルのスタイルにて判定
                        switch (grid.ActiveCell.StyleResolved)
                        {
                            // テキストボックス・テキストボックス(ボタン付)
                            case Infragistics.Win.UltraWinGrid.ColumnStyle.Edit:
                            case Infragistics.Win.UltraWinGrid.ColumnStyle.EditButton:
                            // ---------- ADD 2012/08/22 ---------->>>>>
                            // 日付
                            case Infragistics.Win.UltraWinGrid.ColumnStyle.Date:
                            // ---------- ADD 2012/08/22 ----------<<<<<
                                {
                                    switch (e.KeyData)
                                    {
                                        // ←キー
                                        case Keys.Left:
                                            if (grid.ActiveCell.SelStart == 0)
                                            {
                                                grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.PrevCellByTab);
                                                e.Handled = true;
                                            }
                                            break;
                                        // →キー
                                        case Keys.Right:
                                            if (grid.ActiveCell.SelStart >= grid.ActiveCell.Text.Length)
                                            {
                                                grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.NextCellByTab);
                                                e.Handled = true;
                                            }
                                            break;
                                    }
                                    break;
                                }
                            
                            // 上記以外のスタイル
                            default:
                                {
                                    switch (e.KeyData)
                                    {
                                        // ←キー
                                        case Keys.Left:
                                            {
                                                grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.PrevCellByTab);
                                                e.Handled = true;
                                            }
                                            break;
                                        // →キー
                                        case Keys.Right:
                                            {
                                                grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.NextCellByTab);
                                                e.Handled = true;
                                            }
                                            break;
                                    }
                                    break;
                                }
                        }
                    }

                    switch (e.KeyCode)
                    {
                        case Keys.Home:
                            {
                                if ((grid.ActiveCell != null) && (grid.ActiveCell.IsInEditMode))
                                {
                                    // 編集モードの場合はなにもしない
                                }
                                else
                                {
                                    grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.FirstCellInRow);
                                    grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.EnterEditMode);
                                    e.Handled = true;
                                }
                                break;
                            }
                        case Keys.End:
                            {
                                // 編集モードの場合はなにもしない
                                if ((grid.ActiveCell != null) && (grid.ActiveCell.IsInEditMode))
                                {
                                    //
                                }
                                else
                                {
                                    grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.LastCellInRow);
                                    grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.EnterEditMode);
                                    e.Handled = true;
                                }
                                break;
                            }
                        case Keys.Up:
                            {
                                if ((grid.ActiveCell != null) && (!grid.ActiveCell.DroppedDown))
                                {
                                    if (grid.ActiveCell.Row.Index == 0)
                                    {
                                        this.GridKeyDownTopRowOfRedSlipGrid();
                                        e.Handled = true;
                                    }
                                }

                                break;
                            }
                        case Keys.Down:
                            {
                                if (grid.ActiveCell.Row.Index == grid.Rows.Count - 1)
                                {
                                    if (e.KeyCode == Keys.Down)
                                    {
                                        this.GridKeyDownButtomRowOfRedSlipGrid();
                                        e.Handled = true;
                                    }
                                }

                                break;
                            }
                    }
                }
            }
            else if (grid.ActiveRow != null)
            {
                Infragistics.Win.UltraWinGrid.UltraGridRow row = grid.ActiveRow;

                if (grid.ActiveRow.Index == 0)
                {
                    if (e.KeyCode == Keys.Up)
                    {
                        this.GridKeyDownTopRowOfRedSlipGrid();
                        e.Handled = true;
                    }
                }
                else if (grid.ActiveRow.Index == grid.Rows.Count - 1)
                {
                    if (e.KeyCode == Keys.Down)
                    {
                        this.GridKeyDownButtomRowOfRedSlipGrid();
                        e.Handled = true;
                    }
                }
            }
        }
        /// <summary>
        /// 赤伝グリッド脱出イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <br>UpdateNote : 2011/11/25 yangmj redmine#8080 得意先電子元帳からの返品時、仕入伝票番号にフォーカスがある時ＥＳＣで抜けるとエラーで落ちるの対応</br>
        private void uGrid_RedSlip_Leave(object sender, EventArgs e)
        {
            Infragistics.Win.UltraWinGrid.UltraGrid grid = (sender as Infragistics.Win.UltraWinGrid.UltraGrid);

            if (_prevCellInRedSlip != null)
            {
                if (_prevCellInRedSlip.Column.DataType == typeof(string) &&
                    _prevCellInRedSlip.StyleResolved == Infragistics.Win.UltraWinGrid.ColumnStyle.Edit)
                {
                    // ゼロ詰め実行
                    //-----UPD 2011/11/25----->>>>>
                    if (this._detailDataSet != null && _detailDataSet.RedSlipDetail.Rows.Count > 0)
                    {
                        _detailDataSet.RedSlipDetail.Rows[_prevCellInRedSlip.Row.Index][_prevCellInRedSlip.Column.Key] = uiSetControl1.GetZeroPaddedText(_prevCellInRedSlip.Column.Key, (string)_prevCellInRedSlip.Text);
                    }
                    //_detailDataSet.RedSlipDetail.Rows[_prevCellInRedSlip.Row.Index][_prevCellInRedSlip.Column.Key] = uiSetControl1.GetZeroPaddedText(_prevCellInRedSlip.Column.Key, (string)_prevCellInRedSlip.Text);
                    //-----UPD 2011/11/25-----<<<<<

                }
            }

            // ---------- ADD 2012/08/22 ---------->>>>>
            if (grid.ActiveCell != null)
            {
                // 「仕入伝票番号」が入力済みで「仕入日」に日付が設定されていない場合は、「売上日」で指定されている日付を初期設定
                // 「仕入伝票番号」が未入力であれば、「仕入日」の入力値をクリア
                int rowIndex = grid.ActiveCell.Row.Index;
                if(grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Text.ToString().Trim() != string.Empty &&
                   grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Text.ToString().Trim() != string.Empty)
                {
                    // 売仕入同時入力の明細の場合には、日付を初期設定する前に、
                    // 仕入伝票番号と倉庫コードが同時入力されていないかチェックする
                    if (grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].Text.ToString() != string.Empty &&
                        (string)grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].Text.ToString() == "○")
                    {
                        // ---------- DEL 2012/10/25 Y.Wakita ---------->>>>>
                        //if ((string)grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Text.ToString().Trim() != string.Empty)
                        //{
                        //    // DataSetの仕入伝票番号、倉庫コードをクリア
                        //    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn] = string.Empty;
                        //    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn] = string.Empty;
                        //    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseNameColumn] = string.Empty;
                        //    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ShelfNoColumn] = string.Empty;
                        //    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn] = DBNull.Value;

                        //    // グリッド上の仕入伝票番号、倉庫コードをクリア
                        //    grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Value = string.Empty;
                        //    grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Value = string.Empty;

                        //    // 警告表示
                        //    TMsgDisp.Show(
                        //        new Form(),
                        //        emErrorLevel.ERR_LEVEL_EXCLAMATION,
                        //        this.Name,
                        //        "在庫品のため、仕入の返品処理はできません。",
                        //        -1,
                        //        MessageBoxButtons.OK);
                            
                        //    return;
                          
                        //}
                        //else
                        //{
                        //    // 仕入日を初期表示
                        //    if (_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName] == DBNull.Value)
                        //    {
                        //        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName] = tDateEdit_rs_SalesDate.GetDateTime();
                        //    }
                        //}
                        // ---------- DEL 2012/10/25 Y.Wakita ----------<<<<<
                        // ---------- ADD 2012/10/25 Y.Wakita ---------->>>>>
                        int salesSlipCd = (int)tComboEditor_rs_SalesSlipCd.Value;
                        if (salesSlipCd == 0)
                        {
                            // 伝票区分が掛売上で仕入伝票番号が入力された場合、倉庫情報をクリアする。
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn] = string.Empty;
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseNameColumn] = string.Empty;
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ShelfNoColumn] = string.Empty;
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn] = DBNull.Value;

                            // グリッドセル設定処理
                            this.SettingGridRow(rowIndex);

                            return;
                        }
                        else
                        {
                            bool errFlg = false;
                            if (grid.ActiveCell.Column.Key == _detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName)
                            {
                                // 仕入伝票番号
                                // 倉庫コードが入力されているかチェック
                                if ((string)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn].ToString().Trim() != string.Empty)
                                {
                                    errFlg = true;
                                    // DataSetの仕入伝票番号クリア
                                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn] = string.Empty;
                                    // グリッド上の仕入伝票番号クリア
                                    grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Value = string.Empty;
                                }
                                else
                                {
                                    // 仕入日を初期表示
                                    if (_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName] == DBNull.Value)
                                    {
                                        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName] = tDateEdit_rs_SalesDate.GetDateTime();
                                    }
                                }
                            }
                            else if (grid.ActiveCell.Column.Key == _detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName)
                            {
                                // 倉庫
                                // 仕入伝票番号が入力されているかチェック
                                if (((string)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn].ToString().Trim() != string.Empty) &&
                                    ((string)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn].ToString().Trim() != string.Empty))
                                {
                                    errFlg = true;
                                    // DataSetの倉庫コードクリア
                                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn] = string.Empty;
                                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseNameColumn] = string.Empty;
                                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ShelfNoColumn] = string.Empty;
                                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn] = DBNull.Value;
                                    // グリッド上の倉庫コードクリア
                                    grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Value = string.Empty;
                                }
                            }
                            if (errFlg)
                            {
                                // 警告表示
                                TMsgDisp.Show(
                                    new Form(),
                                    emErrorLevel.ERR_LEVEL_EXCLAMATION,
                                    this.Name,
                                    // ----- ADD 2013/01/15 ----->>>>>
                                    //"在庫品のため、仕入の返品処理はできません。",
                                    "仕入伝票番号と倉庫コードのどちらかしか入力できません。",
                                    // ----- ADD 2013/01/15 -----<<<<<
                                    -1,
                                    MessageBoxButtons.OK);

                                return;
                            }
                        }
                        // ---------- ADD 2012/10/25 Y.Wakita ----------<<<<<
                    }
                }

                // 倉庫コードが未入力状態なら、倉庫コード、倉庫名、棚番、返品後数をクリア
                // 　本来はAfterCellUpdateイベントで行っている処理だが、倉庫コードをクリアして下矢印キー（↓）を押下すると、
                // 　AfterCellUpdateイベントが起きないため、このタイミングで処理を行う
                if (grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Text.ToString().Trim() == string.Empty)
                {
                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn] = string.Empty;
                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseNameColumn] = string.Empty;
                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ShelfNoColumn] = string.Empty;
                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn] = DBNull.Value;
                }

                // さらにグリッド行の設定処理を実施（「仕入日」の入力可・不可状態の変更があるため）
                this.SettingGridRow(rowIndex);
            }
            // ---------- ADD 2012/08/22 ----------<<<<<

            // 脱出後にフォーカス解除する
            if (grid.ActiveCell != null)
            {
                grid.ActiveCell.Selected = false;
                grid.ActiveCell = null;
                grid.Invalidate();
            }
        }
        /// <summary>
        /// 赤伝グリッドセルアクティブ化前処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uGrid_RedSlip_BeforeCellActivate(object sender, Infragistics.Win.UltraWinGrid.CancelableCellEventArgs e)
        {
            Infragistics.Win.UltraWinGrid.UltraGrid grid = this.uGrid_RedSlip;

            // IMEモード設定
            grid.ImeMode = uiSetControl1.GetSettingImeMode(e.Cell.Column.Key);

            // ゼロ詰め解除
            if (e.Cell.Column.DataType == typeof(string) &&
                e.Cell.StyleResolved == Infragistics.Win.UltraWinGrid.ColumnStyle.Edit)
            {
                if (e.Cell.Value != null)
                {
                    _detailDataSet.RedSlipDetail.Rows[e.Cell.Row.Index][e.Cell.Column.Key] = uiSetControl1.GetZeroPadCanceledText(e.Cell.Column.Key, (string)e.Cell.Text);
                }
            }
            // uGrid_RedSlip_BeforeCellDeactivateで使用する為に退避
            _prevCellInRedSlip = e.Cell;
        }
        /// <summary>
        /// 赤伝グリッドセルアクティブ解除前処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uGrid_RedSlip_BeforeCellDeactivate(object sender, CancelEventArgs e)
        {
            // uGrid_RedSlip_BeforeCellActivateで退避しておいたセル
            if (_prevCellInRedSlip != null)
            {
                if (_prevCellInRedSlip.Column.DataType == typeof(string) &&
                    _prevCellInRedSlip.StyleResolved == Infragistics.Win.UltraWinGrid.ColumnStyle.Edit)
                {
                    // ゼロ詰め実行
                    _detailDataSet.RedSlipDetail.Rows[_prevCellInRedSlip.Row.Index][_prevCellInRedSlip.Column.Key] = uiSetControl1.GetZeroPaddedText(_prevCellInRedSlip.Column.Key, (string)_prevCellInRedSlip.Text);
                }
            }
        }
        # endregion

        # region [赤伝発行入力関連]
        /// <summary>
        /// 赤伝発行入力タブの初期化
        /// </summary>
        private void ClearRedSlipInput()
        {
            // 画面クリア
            # region [クリア]
            uLabel_rs_SectionName.Text = string.Empty;
            uLabel_rs_CustomerName.Text = string.Empty;
            tComboEditor_rs_SalesSlipCd.SelectedIndex = 1;
            tEdit_rs_InputEmployeeCd.Text = LoginInfoAcquisition.Employee.EmployeeCode.Trim();
            uLabel_rs_InputEmployeeName.Text = LoginInfoAcquisition.Employee.Name.Trim();
            tDateEdit_rs_SalesDate.SetDateTime(DateTime.Today);
            // --- ADD 2012/12/19 T.Miyamoto ------------------------------>>>>>
            // 日付制御オプション(OPT-CPM0040)がオンの場合,サーバーのシステム日付を初期表示
            if (this._opt_SalesDateDCtrl == (int)Option.ON)
            {
                tDateEdit_rs_SalesDate.SetDateTime(_custPtrRedSlipAcs.GetServerNowTime());
                _SalesDate = _custPtrRedSlipAcs.GetServerNowTime();
            }
            // --- ADD 2012/12/19 T.Miyamoto ------------------------------<<<<<

            tNedit_rs_FeePercent01.Clear();
            tNedit_rs_FeeAmount01.Clear();
            tNedit_rs_FeePercent02.Clear();
            tNedit_rs_FeeAmount02.Clear();
            tNedit_rs_FeePercentTotal.Clear();
            tNedit_rs_FeeAmountTotal.Clear();
            tNedit_rs_ReturnAmountTotal.Clear();
            // ADD 2012/03/29 gezh Redmine#29149 --------->>>>>
            this.tNedit_SalesCodeDiv.Text = string.Empty;
            this.uLabel_SalesCodeDiv.Text = string.Empty;
            // ADD 2012/03/29 gezh Redmine#29149 ---------<<<<<
            tEdit_rs_PartySalesSlipNo.Text = string.Empty;
            tEdit_rs_SlipNote.Text = string.Empty;
            tEdit_rs_SlipNote2.Text = string.Empty;
            tEdit_rs_SlipNote3.Text = string.Empty;
            tEdit_rs_ReturnReason.Text = string.Empty;
            // ---ADD 2009/09/07------->>>>>
            tEdit_rs_SlipNoteCar.Text = string.Empty;
            tNedit_Mileage.Clear();
            _showFlg = false;
            // ---ADD 2009/09/07-------<<<<<
            // --------ADD 2010/01/29-------->>>>>
            tNedit_SlipNote2Code.Clear();
            tNedit_SlipNote3Code.Clear();
            tNedit_SlipNoteCode.Clear();
            tNedit_RetGoodsReason.Clear();
            // --------ADD 2010/01/29--------<<<<<
            # endregion

            // 売掛区分初期表示
            # region [売掛区分]
            this.tComboEditor_rs_SalesSlipCd.Items.Clear();
            // 1:売掛
            this.tComboEditor_rs_SalesSlipCd.Items.Add(new ValueListItem(0, "掛売上"));
            this.tComboEditor_rs_SalesSlipCd.Items.Add(new ValueListItem(1, "掛返品"));
            // 返品を初期表示
            this.tComboEditor_rs_SalesSlipCd.Value = 1;
            # endregion

            // ユーザー設定適用(設定フォームより)
            # region [ユーザー設定適用]
            // -------------UPD 2010/01/29------------->>>>>
            // 3:任意
            // 赤伝備考１
            //if ( _settingForm.UserSetting.SlipNote1Pattern == 2)
            if (_settingForm.UserSetting.SlipNote1Pattern == 3)
            {
                //// 2:任意
                tEdit_rs_SlipNote.Text = _settingForm.UserSetting.SlipNote1Default.Trim();
            }
            // 赤伝備考２
            //if ( _settingForm.UserSetting.SlipNote2Pattern == 2 )
            if (_settingForm.UserSetting.SlipNote2Pattern == 3)
            {
                //// 2:任意
                tEdit_rs_SlipNote2.Text = _settingForm.UserSetting.SlipNote2Default.Trim();
            }
            // 赤伝備考３
            //if ( _settingForm.UserSetting.SlipNote3Pattern == 2 )
            if (_settingForm.UserSetting.SlipNote3Pattern == 3)
            {
                //// 2:任意
                tEdit_rs_SlipNote3.Text = _settingForm.UserSetting.SlipNote3Default.Trim();
            }
            // -------------UPD 2010/01/29-------------<<<<<
            # endregion

            // グリッドクリア
            # region [グリッドクリア]
            // テーブルクリア
            _detailDataSet.RedSlipDetail.Rows.Clear();

            foreach (Infragistics.Win.UltraWinGrid.UltraGridRow gridRow in uGrid_Detail.Rows)
            {
                // DBNullまたは未チェックならば迂回
                if (gridRow.Cells[_detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Value == DBNull.Value ||
                     (bool)gridRow.Cells[_detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName].Value == false) continue;

                // グリッド行背景色設定（選択色の解除）
                RowColorChange(false, gridRow, 1);
            }

            // 明細テーブルのチェックを全て外す
            DataView view = new DataView(_detailDataSet.SalesDetail);
            foreach (DataRowView rowView in view)
            {
                // チェック無効セル(SelectionCheckColumn=DBNull.Value)でなければfalseで初期化する
                if (rowView[_detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName] != DBNull.Value)
                {
                    rowView[_detailDataSet.SalesDetail.SelectionCheckColumn.ColumnName] = false;
                }
            }
            # endregion

            // 各種変数クリア
            # region [変数クリア]
            _selectedRowCountDetail = 0;
            _redSlipStockPrice = 0;
            _redSlipTotalPrice = 0;
            _selectedCustomerCd = 0;
            _selectedSlipNoCd = "";  // ADD 2009/09/07
            _selectedSectionCd = string.Empty;

            _prevInputValue.RedInputEmployeeCd = this.tEdit_rs_InputEmployeeCd.Text.Trim();
            _prevInputValue.RedSalesSlipCd = 0;

            _selectedRowCountSlip = 0;
            // ------ ADD 2009/11/25 ------->>>>>
            redMoney = new Dictionary<int, long>();
            redStockMoney = new Dictionary<int, long>();
            this._retGoodsReason = string.Empty;
            this._retGoodsReasonDiv = 0;
            // ------ ADD 2009/11/25 -------<<<<<
            // ------ ADD 2010/01/29 ------->>>>>
            _prevInputValue.SlipNoteCd1 = 0;
            _prevInputValue.SlipNoteCd2 = 0;
            _prevInputValue.SlipNoteCd3 = 0;
            _prevInputValue.SlipNoteName1 = string.Empty;
            _prevInputValue.SlipNoteName2 = string.Empty;
            _prevInputValue.SlipNoteName3 = string.Empty;
            _prevInputValue.RetGoodsReasonCd = 0;
            _prevInputValue.RetGoodsReasonName = string.Empty;
            // ------ ADD 2010/01/29 -------<<<<<

            # endregion
        }
        /// <summary>
        /// Returnキーダウン処理
        /// </summary>
        /// <returns>true:セル移動完了 false:セル移動失敗</returns>
        private bool ReturnKeyDownOfRedSlipGrid()
        {
            Infragistics.Win.UltraWinGrid.UltraGrid grid = uGrid_RedSlip;

            if (grid.ActiveCell == null) return false;
            Infragistics.Win.UltraWinGrid.UltraGridCell cell = grid.ActiveCell;
            int rowIndex = cell.Row.Index;

            grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.ExitEditMode);
            grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.EnterEditMode);

            grid.BeginUpdate();

            // グリッドセル設定処理
            this.SettingGridRow(rowIndex);

            try
            {
                bool canMove = true;

                // 倉庫
                if (cell.Column.Key == _detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName)
                {
                    if (_cannotWarehouseCodeOfRedSlipRead)
                    {
                        _cannotWarehouseCodeOfRedSlipRead = false;
                    }
                    else
                    {
                        // 次入力可能セル移動処理
                        canMove = this.MoveNextAllowEditCell(false);
                    }
                }
                // 返品数
                else if (cell.Column.Key == _detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName)
                {
                    if (_cannotReturnCntOfRedSlipInput)
                    {
                        _cannotReturnCntOfRedSlipInput = false;
                    }
                    else
                    {
                        // 次入力可能セル移動処理
                        canMove = this.MoveNextAllowEditCell(false);
                    }
                }
                // ---------- ADD 2012/8/22 ---------->>>>>
                // 仕入伝票番号
                else if(cell.Column.Key == _detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName)
                {
                    if (_cannotStockPartySaleSlipNum)
                    {
                        _cannotStockPartySaleSlipNum = false;
                    }
                    else
                    {
                        // 次入力可能セル移動処理
                        canMove = this.MoveNextAllowEditCell(false);
                    }
                }
                // ---------- ADD 2012/8/22 ----------<<<<<
                else
                {
                    // 次入力可能セル移動処理
                    canMove = this.MoveNextAllowEditCell(false);
                }

                return canMove;
            }
            finally
            {
                grid.EndUpdate();
            }
        }
        /// <summary>
        /// 次入力可能セル移動処理
        /// </summary>
        /// <param name="currentCheck">true:ActiveCellが入力可能の場合はNextに移動させない false:ActiveCellに関係なくNextに移動させる</param>
        /// <returns>true:セル移動完了 false:セル移動失敗</returns>
        private bool MoveNextAllowEditCell(bool activeCellCheck)
        {
            Infragistics.Win.UltraWinGrid.UltraGrid grid = uGrid_RedSlip;

            grid.SuspendLayout();
            bool moved = false;
            bool performActionResult = false;

            if ((activeCellCheck) && (grid.ActiveCell != null))
            {
                if ((!grid.ActiveCell.Column.Hidden) &&
                    (grid.ActiveCell.Activation == Infragistics.Win.UltraWinGrid.Activation.AllowEdit) &&
                    (grid.ActiveCell.Column.CellActivation == Infragistics.Win.UltraWinGrid.Activation.AllowEdit))
                {
                    moved = true;
                }
            }

            while (!moved)
            {
                performActionResult = grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.NextCell);

                if (performActionResult)
                {
                    if ((grid.ActiveCell.Activation == Infragistics.Win.UltraWinGrid.Activation.AllowEdit) &&
                        (grid.ActiveCell.Column.CellActivation == Infragistics.Win.UltraWinGrid.Activation.AllowEdit))
                    {
                        moved = true;
                    }
                    else
                    {
                        moved = false;
                    }
                }
                else
                {
                    break;
                }
            }

            if (moved)
            {
                grid.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.EnterEditMode);
            }

            grid.ResumeLayout();
            return performActionResult;
        }
        /// <summary>
        /// グリッド行設定
        /// </summary>
        /// <param name="rowIndex"></param>
        /// <br>Update Note : 2009/12/28 呉元嘯 PM.NS保守依頼④</br>
        /// <br>              ①品番未入力の明細を赤伝発行する場合の倉庫コードの入力制御の変更</br>
        /// <br>              ②単価、原価に変更があった明細を赤伝発行タブに表示する際、売上伝票入力の明細部同様にセルの背景色を変更する</br>
        /// <br>Update Note : 2010/01/29 呉元嘯 4次改良</br>
        /// <br>              返品時在庫登録「1:しない」で赤伝発行した場合に在庫があれば更新するように修正</br>
        private void SettingGridRow(int rowIndex)
        {
            # region [グリッド行制御]
            Infragistics.Win.UltraWinGrid.UltraGrid grid = uGrid_RedSlip;

            //------------------------------------------------------------------------
            // 仕入返品伝票番号入力可否
            //------------------------------------------------------------------------
            // 売上仕入区分
            switch (_salesTtlSt.SalesStockDiv)
            {
                default:
                // 0:しない
                case 0:
                    {
                        // 仕入返品伝票番号入力不可
                        grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Activation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                        grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor;
                        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName] = string.Empty;
                    }
                    break;
                // 1:する
                case 1:
                // 2:必須
                case 2:
                    {
                        // 仕入同時入力マーク取得
                        string stockMark = GetStringFromObject(_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName]);
                        if (string.IsNullOrEmpty(stockMark))
                        {
                            // 仕入返品伝票番号入力不可
                            grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Activation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                            grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor;
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName] = string.Empty;
                        }
                        else
                        {
                            // 仕入返品伝票番号入力可
                            grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Activation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit;
                            grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Appearance.BackColor = grid.Rows[rowIndex].Appearance.BackColor;
                        }
                    }
                    break;
            }
            // --- ADD 2012/12/19 T.Miyamoto ------------------------------>>>>>
            // 売仕入同時入力制御オプション(OPT-CPM0050)がオンの場合,仕入"○"マーク・仕入返品伝票番号を表示しない
            if (this._opt_StockEntCtrl == (int)Option.ON)
            {
                // 仕入返品伝票番号入力不可
                grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Activation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor;
                _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName] = string.Empty;
            }
            // --- ADD 2012/12/19 T.Miyamoto ------------------------------<<<<<

            //------------------------------------------------------------------------
            // 倉庫入力可否
            //------------------------------------------------------------------------
            // 返品時在庫登録区分
            switch (_salesTtlSt.RetGoodsStockEtyDiv)
            {
                default:
                // 0:する
                case 0:
                    {
                        // -------------ADD 2009/12/28-------------->>>>>
                        if (string.IsNullOrEmpty(grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.GoodsNoColumn.ColumnName].Value.ToString()))
                        {
                            // 倉庫コード入力不可
                            grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Activation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                            grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor;
                        }
                        // -------------ADD 2009/12/28--------------<<<<<
                        // 倉庫コード取得
                        string warehouseCode = GetStringFromObject(_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName]);
                        if (string.IsNullOrEmpty(warehouseCode))
                        {
                            // 取寄
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName] = "取寄";
                            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/08 ADD
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesOrderDivCdColumn.ColumnName] = 0;
                            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/08 ADD
                            ////// 棚番入力不可
                            ////grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].Activation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                            ////grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor;
                            ////_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName] = string.Empty;
                        }
                        else
                        {
                            // 在庫
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName] = "在庫";
                            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/08 ADD
                            _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesOrderDivCdColumn.ColumnName] = 1;
                            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/08 ADD
                            ////// 棚番入力可
                            ////grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].Activation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit;
                            ////grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].Appearance.BackColor = grid.Rows[rowIndex].Appearance.BackColor;
                        }
                    }
                    break;
                // 1:しない
                case 1:
                    {
                        // 倉庫入力不可
                        grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Activation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                        grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor;
                        // ----------DEL 2010/01/29------------>>>>>
                        //_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName] = string.Empty;
                        //_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName] = string.Empty;

                        //// 取寄
                        //_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName] = "取寄";
                        //// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/04/08 ADD
                        //_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.SalesOrderDivCdColumn.ColumnName] = 0;
                        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/04/08 ADD
                        // ----------DEL 2010/01/29------------<<<<<
                        ////// 棚番入力不可
                        ////grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].Activation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                        ////grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor;
                        ////_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName] = string.Empty;
                    }
                    break;
            }
            // -------------ADD 2012/08/22-------------->>>>>
            //------------------------------------------------------------------------
            // 仕入日入力可否
            //------------------------------------------------------------------------
            // 入力可となるのは、仕入伝票番号が入力されたタイミングとする
            if (grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Text.ToString().Trim() == string.Empty)
            {
                grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].Activation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor;
                _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName] = DBNull.Value;
                _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName] = DBNull.Value;
            }
            else
            {
                // 入力可となった場合の仕入日には、「売上日」で指定されている日付を初期設定
                // すでに日付が入力されている場合は設定処理はスキップする
                grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].Activation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor;

                if (_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName] == DBNull.Value)
                {
                    _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName] = tDateEdit_rs_SalesDate.GetDateTime();
                }

                grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].Activation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit;
                grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].Appearance.BackColor = grid.Rows[rowIndex].Appearance.BackColor;
            }
            // -------------ADD 2012/08/22--------------<<<<<

            // -------------ADD 2009/12/28-------------->>>>>
            //------------------------------------------------------------------------
            // 単価、原価背景色設定
            //------------------------------------------------------------------------
            int rowNo = (int)_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.RowNoColumn.ColumnName];
            //原価
            SalesUnitCostColorSetting(rowIndex, rowNo);
            // --- ADD 2013/04/26 T.Miyamoto ------------------------------>>>>>
            // 山形部品入力制御オプション(OPT-CPM0010)がオンの場合、在庫品の原価修正不可
            if (this._opt_YamagataCustomCtrl == (int)Option.ON)
            {
                int SlipChngDivCost = 0;
                int salesSlipCd = (int)tComboEditor_rs_SalesSlipCd.Value;
                if (salesSlipCd == 0)
                {
                    //伝票区分＝売上の場合･･･「売上全体設定・伝票修正区分(原価)」を参照
                    SlipChngDivCost = _salesTtlSt.SlipChngDivCost;
                }
                else
                {
                    //伝票区分＝返品の場合･･･「売上全体設定・返品伝票修正区分(原価)」を参照
                    SlipChngDivCost = _salesTtlSt.RetSlipChngDivCost;
                }
                bool bDisabled = true;
                switch (SlipChngDivCost)
                {
                    case 0: bDisabled = true; break;  //可
                    case 1: bDisabled = false; break; //不可
                    case 2: bDisabled = false; break; //未使用
                    case 3: //在庫時不可
                    {
                        // 倉庫コード取得
                        string warehouseCode = GetStringFromObject(_detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName]);
                        if (string.IsNullOrEmpty(warehouseCode))
                        {
                            bDisabled = true;
                        }
                        else
                        {
                            bDisabled = false;
                        }
                    }
                    break;
                }
                if (bDisabled)
                {
                    grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].Activation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit;
                }
                else
                {
                    grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].Activation = Infragistics.Win.UltraWinGrid.Activation.Disabled;
                    grid.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor;
                }
            }
            // --- ADD 2013/04/26 T.Miyamoto ------------------------------<<<<<

            // 単価
            SalesUnitPriceColorSetting(rowIndex, rowNo);
            // -------------ADD 2009/12/28--------------<<<<<

            # endregion

            // グリッド制御に伴うフッタ制御
            SettingRedSlipFooter();
        }

        /// <summary>
        /// 原価背景色設定
        /// </summary>
        /// <param name="rowIndex">rowIndex</param>
        /// <param name="salesRowNo">salesRowNo</param>
        /// <remarks>
        /// <br>Note		: 原価背景色設定を行いします。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009/12/28</br>
        /// </remarks>
        private void SalesUnitCostColorSetting(int rowIndex, int rowNo)
        {
            bool ret = true;
            //原価
            double salesUnitCost = 0;
            try
            {
                salesUnitCost = double.Parse(this.uGrid_RedSlip.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].Value.ToString());
            }
            catch
            {
                salesUnitCost = 0;
            }
            CustPtrSalesDetailDataSet.SalesDetailRow row = this._detailDataSet.SalesDetail.FindByRowNo(rowNo);
            if ((row != null) && (salesUnitCost != 0))
            {
                //売上明細データ（売上履歴明細データ）.変更前原価 ≠ 画面原価
                if (salesUnitCost != row.BfUnitCost) ret = false;
            }
            if (ret == false)
            {
                //原価背景色設定
                this.uGrid_RedSlip.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor2;
            }
            else
            {
                this.uGrid_RedSlip.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].Appearance.BackColor = this.uGrid_RedSlip.DisplayLayout.Override.RowAppearance.BackColor;
            }
        }

        /// <summary>
        /// 原価背景色設定(明細表示グリッド)
        /// </summary>
        /// <param name="detailGridRow">detailGridRow</param>
        /// <param name="salesRowNo">salesRowNo</param>
        /// <remarks>
        /// <br>Note		: 原価背景色設定を行いします。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2010/08/05</br>
        /// </remarks>
        private void DetailGridSalesUnitCostColorSetting(Infragistics.Win.UltraWinGrid.UltraGridRow detailGridRow, int salesRowNo)
        {
            bool ret = true;
            //原価
            CustPtrSalesDetailDataSet.SalesDetailRow row = this._detailDataSet.SalesDetail.FindByRowNo(salesRowNo);
            if ((row != null) && (row.SalesUnitCost != 0))
            {
                //売上明細データ（売上履歴明細データ）.変更前原価 ≠ 画面原価
                if (row.SalesUnitCost != row.BfUnitCost) ret = false;
            }
            if (ret == false)
            {
                //原価背景色設定
                detailGridRow.Cells[_detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor2;
                detailGridRow.Cells[_detailDataSet.SalesDetail.SalesUnitCostColumn.ColumnName].Appearance.BackColor2 = _CellReadOnlyColor2;
            }
        }

        /// <summary>
        /// 単価背景色設定
        /// </summary>
        /// <param name="rowIndex">rowIndex</param>
        /// <param name="salesRowNo">salesRowNo</param>
        /// <remarks>
        /// <br>Note		: 単価背景色設定を行いします。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009/12/28</br>
        /// </remarks>
        private void SalesUnitPriceColorSetting(int rowIndex, int rowNo)
        {
            bool ret = true;
            //単価
            double salesUnitPrice = 0;
            try
            {
                salesUnitPrice = double.Parse(this.uGrid_RedSlip.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Value.ToString());
            }
            catch
            {
                salesUnitPrice = 0;
            }
            CustPtrSalesDetailDataSet.SalesDetailRow row = this._detailDataSet.SalesDetail.FindByRowNo(rowNo);
            if ((row != null) && (salesUnitPrice != 0))
            {
                //売上明細データ（売上履歴明細データ）.変更前売価 ≠ 画面単価
                if (salesUnitPrice != row.BfSalesUnitPrice) ret = false;
            }
            if (ret == false)
            {
                //単価背景色設定
                this.uGrid_RedSlip.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor2;
            }
            else
            {
                this.uGrid_RedSlip.Rows[rowIndex].Cells[_detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Appearance.BackColor = this.uGrid_RedSlip.DisplayLayout.Override.RowAppearance.BackColor;
            }
        }

        /// <summary>
        /// 単価背景色設定(明細表示グリッド)
        /// </summary>
        /// <param name="detailGridRow">detailGridRow</param>
        /// <param name="salesRowNo">salesRowNo</param>
        /// <remarks>
        /// <br>Note		: 単価背景色設定を行いします。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2010/08/05</br>
        /// </remarks>
        private void DetailGridSalesUnitPriceColorSetting(Infragistics.Win.UltraWinGrid.UltraGridRow detailGridRow, int salesRowNo)
        {
            bool ret = true;

            CustPtrSalesDetailDataSet.SalesDetailRow row = this._detailDataSet.SalesDetail.FindByRowNo(salesRowNo);
            if ((row != null) && (row.SalesUnPrcTaxExcFl != 0))
            {
                //売上明細データ（売上履歴明細データ）.変更前売価 ≠ 画面単価
                if (row.SalesUnPrcTaxExcFl != row.BfSalesUnitPrice) ret = false;
            }
            if (ret == false)
            {
                //単価背景色設定
                detailGridRow.Cells[_detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor2;
                detailGridRow.Cells[_detailDataSet.SalesDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Appearance.BackColor2 = _CellReadOnlyColor2;
            }
        }

        /// <summary>
        /// 定価背景色設定(明細表示グリッド)
        /// </summary>
        /// <param name="detailGridRow">detailGridRow</param>
        /// <param name="salesRowNo">salesRowNo</param>
        /// <remarks>
        /// <br>Note		: 定価背景色設定を行いします。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2010/08/05</br>
        /// </remarks>
        private void DetailGridListPriceColorSetting(Infragistics.Win.UltraWinGrid.UltraGridRow detailGridRow, int salesRowNo)
        {
            bool ret = true;


            //2011/7/13 Change by wf
            CustPtrSalesDetailDataSet.SalesDetailRow row = this._detailDataSet.SalesDetail.FindByRowNo(salesRowNo);
            if ((row != null) && (row.ListPriceTaxExcFl != 0))
            {
                //売上明細データ（売上履歴明細データ）.変更前定価 ≠ 画面定価
                if (row.ListPriceTaxExcFl != row.BfListPrice) ret = false;

            }
            //2011/7/13 Change by wf

            if (ret == false)
            {
                //定価背景色設定
                detailGridRow.Cells[_detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName].Appearance.BackColor = _CellReadOnlyColor2;
                detailGridRow.Cells[_detailDataSet.SalesDetail.ListPriceTaxExcFlColumn.ColumnName].Appearance.BackColor2 = _CellReadOnlyColor2;
            }
        }

        /// <summary>
        /// 赤伝グリッド行制御に伴う赤伝フッタ制御
        /// </summary>
        private void SettingRedSlipFooter()
        {
            if (_prevInputValue.RedSalesSlipCd == 1)
            {
                //------------------------------------
                // 返品
                //------------------------------------

                // 取寄行ありフラグ
                bool existsOrderRow = false;
                // 在庫行ありフラグ
                bool existsStockRow = false;

                # region [在庫行/取寄行 有無判定]
                for (int index = 0; index < _detailDataSet.RedSlipDetail.Rows.Count; index++)
                {
                    // 倉庫コード取得して判定
                    string warehouseCode = GetStringFromObject(_detailDataSet.RedSlipDetail.Rows[index][_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName]);

                    if (string.IsNullOrEmpty(warehouseCode))
                    {
                        // 取寄
                        existsOrderRow = true;
                    }
                    else
                    {
                        // 在庫
                        existsStockRow = true;
                    }

                    // 両方ありとわかったら、これ以上は走査不要
                    if (existsOrderRow && existsStockRow) break;
                }
                # endregion


                // 取寄行有無
                # region [取寄行]
                if (existsOrderRow)
                {
                    tNedit_rs_FeePercent01.Enabled = true;
                }
                else
                {
                    tNedit_rs_FeePercent01.Enabled = false;
                    tNedit_rs_FeePercent01.Clear();
                }
                # endregion

                // 在庫行有無
                # region [在庫行]
                if (existsStockRow)
                {
                    tNedit_rs_FeePercent02.Enabled = true;
                }
                else
                {
                    tNedit_rs_FeePercent02.Enabled = false;
                    tNedit_rs_FeePercent02.Clear();
                }
                # endregion
            }
            else
            {
                //------------------------------------
                // 売上
                //------------------------------------
                tNedit_rs_FeePercent01.Enabled = false;
                tNedit_rs_FeePercent01.Clear();
                tNedit_rs_FeePercent02.Enabled = false;
                tNedit_rs_FeePercent02.Clear();
            }
        }
        /// <summary>
        /// オブジェクトからの文字列取得処理
        /// </summary>
        /// <param name="p"></param>
        /// <returns></returns>
        private string GetStringFromObject(object targetObject)
        {
            if (targetObject == null || targetObject == DBNull.Value)
            {
                return string.Empty;
            }
            else
            {
                return (string)targetObject;
            }
        }
        /// <summary>
        /// オブジェクトからの年式取得処理
        /// </summary>
        /// <param name="targetObject"></param>
        /// <returns></returns>
        /// <remarks>
        /// <br>Note       : オブジェクトからの年式取得処理を行う。</br>
        /// <br>Programmer : 呉元嘯</br>
        /// <br>Date       : 2010/01/12</br>
        /// <br>UpdateNote   2019/01/08  譚洪</br>
        /// <br>修正内容     新元号の対応</br>
        /// </remarks>
        private int GetFirstEntryDateFromObject(object targetObject)
        {
            if (targetObject == null || targetObject == DBNull.Value)
            {
                return 0;
            }
            else
            {
                try
                {
                    string firstEntryDate = targetObject.ToString().Replace("/", "");
                    // --- ADD 2012/06/26 №880 ---------->>>>>
                    if (!(IsNumeric(firstEntryDate)))
                    {
                        // 和暦
                        //---- DEL 譚洪  2019/01/08 FOR 新元号の対応 ---->>>>>
                        //CultureInfo culture = new CultureInfo("ja-JP", true);
                        //culture.DateTimeFormat.Calendar = new JapaneseCalendar();
                        //---- DEL 譚洪  2019/01/08 FOR 新元号の対応 ----<<<<<
                        DateTime result;
                        string target = targetObject.ToString().Replace(" ", "");
                        // ---------- UPD 2013/08/01 Y.Wakita ---------->>>>>
                        //if (target.IndexOf("00") >= 0)
                        if (target.IndexOf("月") == -1)
                        // ---------- UPD 2013/08/01 Y.Wakita ----------<<<<<
                        {
                            // 年のみ
                            // ---------- UPD 2013/08/01 Y.Wakita ---------->>>>>
                            //target = target.ToString().Replace("00", "1") + "1日";
                            target = target + "1月1日";
                            // ---------- UPD 2013/08/01 Y.Wakita ----------<<<<<
                            //---- UPD 譚洪  2019/01/08 FOR 新元号の対応 ---->>>>>
                            //result = DateTime.ParseExact(target, "ggyy年M月d日", culture);

                            int targetint = TDateTime.JapaneseDateStringToLongDate(target);
                            result = TDateTime.LongDateToDateTime(targetint);
                            //---- UPD 譚洪  2019/01/08 FOR 新元号の対応 ----<<<<<
                            firstEntryDate = result.ToString("yyyy") + "00";
                        }
                        else
                        {
                            // 年月
                            target = target.ToString() + "1日";
                            //---- UPD 譚洪  2019/01/08 FOR 新元号の対応 ---->>>>>
                            //result = DateTime.ParseExact(target, "ggyy年M月d日", culture);

                            int targetint = TDateTime.JapaneseDateStringToLongDate(target);
                            result = TDateTime.LongDateToDateTime(targetint);
                            //---- UPD 譚洪  2019/01/08 FOR 新元号の対応 ----<<<<<
                            firstEntryDate = result.ToString("yyyyMM");
                        }
                    }
                    // --- ADD 2012/06/26 №880 ----------<<<<<
                    
                    // ---------- ADD 2013/08/01 Y.Wakita ---------->>>>>
                    // 年のみの場合、月を付加
                    if (firstEntryDate.Length == 4)
                        firstEntryDate = firstEntryDate + "00";
                    // ---------- ADD 2013/08/01 Y.Wakita ----------<<<<<

                    return Int32.Parse(firstEntryDate) * 100;
                }
                catch
                {
                    return 0;
                }
            }
        }

        // --- ADD 2012/06/26 №880 ---------->>>>>
        #region　IsNumeric メソッド (+1)
        /// -----------------------------------------------------------------------------
        /// <summary>
        ///     文字列が数値であるかどうかを返します。</summary>
        /// <param name="stTarget">
        ///     検査対象となる文字列。<param>
        /// <returns>
        ///     指定した文字列が数値であれば true。それ以外は false。</returns>
        /// -----------------------------------------------------------------------------
        public static bool IsNumeric(string stTarget)
        {
            double dNullable;

            return double.TryParse(
                stTarget,
                System.Globalization.NumberStyles.Any,
                null,
                out dNullable
            );
        }

        /// -----------------------------------------------------------------------------
        /// <summary>
        ///     オブジェクトが数値であるかどうかを返します。</summary>
        /// <param name="oTarget">
        ///     検査対象となるオブジェクト。<param>
        /// <returns>
        ///     指定したオブジェクトが数値であれば true。それ以外は false。</returns>
        /// -----------------------------------------------------------------------------
        public static bool IsNumeric(object oTarget)
        {
            return IsNumeric(oTarget.ToString());
        }

        #endregion
        // --- ADD 2012/06/26 №880 ----------<<<<<

        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
        /// <summary>
        /// オブジェクトからの数値取得処理
        /// </summary>
        /// <param name="targetObject"></param>
        /// <returns></returns>
        private int GetIntFromObject(object targetObject)
        {
            if (targetObject == null || targetObject == DBNull.Value)
            {
                return 0;
            }
            else
            {
                try
                {
                    return (int)targetObject;
                }
                catch
                {
                    return 0;
                }
            }
        }

        //------------- ADD 連番729 2011/08/18 ------------------------>>>>>
        /// <summary>
        /// オブジェクトからのDouble数値取得処理
        /// </summary>
        /// <param name="targetObject"></param>
        /// <returns></returns>
        private double GetDoubleFromObject(object targetObject)
        {
            if (targetObject == null || targetObject == DBNull.Value)
            {
                return 0.0;
            }
            else
            {
                try
                {
                    return double.Parse(targetObject.ToString());
                }
                catch
                {
                    return 0.0;
                }
            }
        }
        //------------- ADD 連番729 2011/08/18 ------------------------<<<<<

        /// <summary>
        /// オブジェクトからの日付LongDate取得処理
        /// </summary>
        /// <param name="p"></param>
        /// <returns></returns>
        private int GetLongDateFromObject(object targetObject)
        {
            if (targetObject == null || targetObject == DBNull.Value)
            {
                return 0;
            }
            else
            {
                try
                {
                    return TDateTime.DateTimeToLongDate((DateTime)targetObject);
                }
                catch
                {
                    return 0;
                }
            }
        }
        /// <summary>
        /// オブジェクトからの数値配列取得処理
        /// </summary>
        /// <param name="p"></param>
        /// <returns></returns>
        private int[] GetIntArrayFromObject(object targetObject)
        {
            if (targetObject == null || targetObject == DBNull.Value)
            {
                return new int[0];
            }
            else
            {
                try
                {
                    return (int[])targetObject;
                }
                catch
                {
                    return new int[0];
                }
            }
        }
        /// <summary>
        /// オブジェクトからのバイト配列取得処理
        /// </summary>
        /// <param name="p"></param>
        /// <returns></returns>
        private byte[] GetByteArrayFromObject(object targetObject)
        {
            if (targetObject == null || targetObject == DBNull.Value)
            {
                return new byte[0];
            }
            else
            {
                try
                {
                    return (byte[])targetObject;
                }
                catch
                {
                    return new byte[0];
                }
            }
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD
        // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
        /// <summary>
        /// オブジェクトからのLong数値取得処理
        /// </summary>
        /// <param name="targetObject"></param>
        /// <returns></returns>
        private long GetLongFromObject(object targetObject)
        {
            if (targetObject == null || targetObject == DBNull.Value)
            {
                return 0;
            }
            else
            {
                try
                {
                    return long.Parse(targetObject.ToString());
                }
                catch
                {
                    return 0;
                }
            }
        }
        // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
        // -------- ADD 2010/04/27 ------------------>>>>>>
        /// <summary>
        /// オブジェクトからの文字配列取得処理
        /// </summary>
        /// <param name="p"></param>
        /// <returns></returns>
        private string[] GetStringArrayFromObject(object targetObject)
        {
            if (targetObject == null || targetObject == DBNull.Value)
            {
                return new string[0];
            }
            else
            {
                try
                {
                    return (string[])targetObject;
                }
                catch
                {
                    return new string[0];
                }
            }
        }
        // -------- ADD 2010/04/27 ------------------<<<<<<

        /// <summary>
        /// グリッド最上行からの↑移動
        /// </summary>
        private void GridKeyDownTopRowOfRedSlipGrid()
        {
            // 赤伝伝票区分
            tComboEditor_rs_SalesSlipCd.Focus();
        }
        /// <summary>
        /// グリッド最下行からの↓移動
        /// </summary>
        private void GridKeyDownButtomRowOfRedSlipGrid()
        {
            // 次項目
            this.GetRedSlipGridNextControl().Focus();
        }
        /// <summary>
        /// 赤伝グリッドの次フォーカスコントロール取得
        /// </summary>
        private Control GetRedSlipGridNextControl()
        {
            if (tNedit_rs_FeePercent01.Enabled)
            {
                // 取寄手数料率
                return tNedit_rs_FeePercent01;
            }
            else if (tNedit_rs_FeePercent02.Enabled)
            {
                // 在庫手数料率
                return tNedit_rs_FeePercent02;
            }
            else if (tEdit_rs_PartySalesSlipNo.Visible)
            {
                // 指示書(仮伝)番号
                return tEdit_rs_PartySalesSlipNo;
            }
            else
            {
                // 備考１
                //return tEdit_rs_SlipNote;// DEL 2010/01/29
                return tNedit_SlipNoteCode;// ADD 2010/01/29
            }
        }
        /// <summary>
        /// 赤伝伝票区分変更時処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void tComboEditor_rs_SalesSlipCd_SelectionChangeCommitted(object sender, EventArgs e)
        {
            // 伝票区分に従い入力ＵＩ制御
            this.SettingRedSlipFormalBySalesSlipCd();

            // ---------- DEL 2012/10/25 Y.Wakita ---------->>>>>
            //// ---------- ADD 2012/8/22 ---------->>>>>
            //// 入力値取得
            //if (!(tComboEditor_rs_SalesSlipCd.Value is Int32)) return;
            //int salesSlipCd = (int)tComboEditor_rs_SalesSlipCd.Value;

            //// 掛売上を選択された場合は、グリッド上で入力・表示されている倉庫コード、倉庫名、棚番、返品後数をクリア
            //if (salesSlipCd == 0)
            //{
            //    for(int rowIndex = 0; rowIndex < _detailDataSet.RedSlipDetail.Rows.Count; rowIndex++)
            //    {
            //        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseCodeColumn] = string.Empty;
            //        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.WarehouseNameColumn] = string.Empty;
            //        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ShelfNoColumn] = string.Empty;
            //        _detailDataSet.RedSlipDetail.Rows[rowIndex][_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn] = DBNull.Value;
            //    }
            //}
            //// ---------- ADD 2012/8/22 ----------<<<<<
            // ---------- DEL 2012/10/25 Y.Wakita ----------<<<<<
            // --- ADD 2013/04/26 T.Miyamoto ------------------------------<<<<<
            for (int rowIndex = 0; rowIndex < _detailDataSet.RedSlipDetail.Rows.Count; rowIndex++)
            {
                this.SettingGridRow(rowIndex);
        }
            // --- ADD 2013/04/26 T.Miyamoto ------------------------------<<<<<
        }
        /// <summary>
        /// 赤伝伝票区分変更時処理
        /// </summary>
        /// <br>Update Note: liyp 2010/12/20</br>
        /// <br>             返品手数料の初期化処理の修正（MANTIS: 16693）</br>
        private void SettingRedSlipFormalBySalesSlipCd()
        {
            // 入力値取得
            if (!(tComboEditor_rs_SalesSlipCd.Value is Int32)) return;
            int salesSlipCd = (int)tComboEditor_rs_SalesSlipCd.Value;

            // 前回値と比較
            if (salesSlipCd == _prevInputValue.RedSalesSlipCd) return;
            _prevInputValue.RedSalesSlipCd = salesSlipCd;


            # region [コントロール表示制御]
            // フッタの表示制御
            SettingRedSlipFooter();

            // 伝票区分により分岐
            if (salesSlipCd == 0)
            {
                // 売上

                // 返品理由
                uLabel_rs_ReturnReasonTitle.Visible = false;
                tEdit_rs_ReturnReason.Text = string.Empty;
                tEdit_rs_ReturnReason.Visible = false;
                tEdit_rs_ReturnReason.Enabled = false;
                uButton_rs_ReturnReason.Visible = false;
                uButton_rs_ReturnReason.Enabled = false;
                // ADD 2012/03/29 gezh Redmine#29149 --------->>>>>
                tNedit_SalesCodeDiv.Enabled = false;
                uLabel_SalesCodeDiv.Enabled = false;
                uButton_rs_SalesCodeDiv.Enabled = false;
                tNedit_SalesCodeDiv.Text = string.Empty;
                uLabel_SalesCodeDiv.Text = string.Empty;
                // ADD 2012/03/29 gezh Redmine#29149 ---------<<<<<
                // 2010/03/25 Add >>>
                tNedit_RetGoodsReason.Text = string.Empty;
                tNedit_RetGoodsReason.Visible = false;
                tNedit_RetGoodsReason.Enabled = false;
                // 2010/03/25 Add <<<
                // 手数料
                // ------------ADD 2010/12/20 ------------<<<<<
                tNedit_rs_ReturnAmountTotal.SetInt((int)((decimal)tNedit_rs_ReturnAmountTotal.GetInt() + (decimal)tNedit_rs_FeeAmountTotal.GetInt()));
                tNedit_rs_FeePercent01.Text = string.Empty;
                tNedit_rs_FeePercent02.Text = string.Empty;
                tNedit_rs_FeeAmount01.Text = string.Empty;
                tNedit_rs_FeeAmount02.Text = string.Empty;
                tNedit_rs_FeePercentTotal.Text = string.Empty;
                tNedit_rs_FeeAmountTotal.Text = string.Empty;
                // ------------ADD 2010/12/20 ------------>>>>>
                tNedit_rs_FeePercent01.Enabled = false;
                tNedit_rs_FeePercent02.Enabled = false;
                tNedit_rs_FeePercentTotal.Enabled = false;
                tNedit_rs_FeeAmountTotal.Enabled = false;
            }
            else
            {
                // 返品

                // 返品理由
                uLabel_rs_ReturnReasonTitle.Visible = true;
                tEdit_rs_ReturnReason.Visible = true;
                tEdit_rs_ReturnReason.Enabled = true;
                uButton_rs_ReturnReason.Visible = true;
                uButton_rs_ReturnReason.Enabled = true;
                // ADD 2012/03/29 gezh Redmine#29149 --------->>>>>
                tNedit_SalesCodeDiv.Enabled = true;
                uLabel_SalesCodeDiv.Enabled = true;
                uButton_rs_SalesCodeDiv.Enabled = true;
                // ADD 2012/03/29 gezh Redmine#29149 ---------<<<<<
                // 2010/03/25 Add >>>
                tNedit_RetGoodsReason.Visible = true;
                tNedit_RetGoodsReason.Enabled = true;
                // 2010/03/25 Add <<<
                // 手数料
                tNedit_rs_FeePercentTotal.Enabled = true;
                tNedit_rs_FeeAmountTotal.Enabled = true;
            }
            # endregion

            // グリッドカラム設定
            SettingRedSlipColumns(salesSlipCd);

            // グリッド再描画
            uGrid_RedSlip.Refresh();

        }
        /// <summary>
        /// 赤伝グリッドカラム設定
        /// </summary>
        /// <param name="salesSlipCd"></param>
        private void SettingRedSlipColumns(int salesSlipCd)
        {
            bool warehouseColumnsVisible = true;
            bool supplierColumnsVisible = true;

            // 赤伝伝票区分による判定
            if (salesSlipCd == 0)
            {
                // 売上の場合
                warehouseColumnsVisible = false;
            }
            else
            {
                // 返品の場合
                warehouseColumnsVisible = true;
            }

            // ------------DEL 2010/01/29------------->>>>>
            //// 返品時在庫登録＝「1:しない」ならば倉庫コード以降を表示しない
            //if ( _salesTtlSt.RetGoodsStockEtyDiv == 1 )
            //{
            //    warehouseColumnsVisible = false;
            //}
            // ------------DEL 2010/01/29-------------<<<<<
            // 売上仕入同時区分＝「0:しない」ならば仕入"○"マーク・仕入返品伝票番号を表示しない
            if (_salesTtlSt.SalesStockDiv == 0)
            {
                supplierColumnsVisible = false;
            }
            // --- ADD 2012/12/19 T.Miyamoto ------------------------------>>>>>
            // 売仕入同時入力制御オプション(OPT-CPM0050)がオンの場合,仕入"○"マーク・仕入返品伝票番号を表示しない
            if (this._opt_StockEntCtrl == (int)Option.ON)
            {
                supplierColumnsVisible = false;
            }
            // --- ADD 2012/12/19 T.Miyamoto ------------------------------<<<<<

            Infragistics.Win.UltraWinGrid.ColumnsCollection columns = uGrid_RedSlip.DisplayLayout.Bands[0].Columns;

            // 仕入"○"マーク
            columns[_detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].Hidden = !supplierColumnsVisible;
            columns[_detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].ExcludeFromColumnChooser = GetExcludeFromColumnChooser(!supplierColumnsVisible);
            // 仕入返品伝票番号
            columns[_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Hidden = !supplierColumnsVisible;
            columns[_detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].ExcludeFromColumnChooser = GetExcludeFromColumnChooser(!supplierColumnsVisible);

            // 倉庫コード
            columns[_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Hidden = !warehouseColumnsVisible;
            columns[_detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].ExcludeFromColumnChooser = GetExcludeFromColumnChooser(!warehouseColumnsVisible);

            // 倉庫名称
            columns[_detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName].Hidden = !warehouseColumnsVisible;
            columns[_detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName].ExcludeFromColumnChooser = GetExcludeFromColumnChooser(!warehouseColumnsVisible);
            // 棚番
            columns[_detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].Hidden = !warehouseColumnsVisible;
            columns[_detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].ExcludeFromColumnChooser = GetExcludeFromColumnChooser(!warehouseColumnsVisible);
            // 返品後数
            columns[_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].Hidden = !warehouseColumnsVisible;
            columns[_detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].ExcludeFromColumnChooser = GetExcludeFromColumnChooser(!warehouseColumnsVisible);
            // ---------- ADD 2012/08/22 ---------->>>>>
            // 仕入日
            columns[_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].Hidden = !supplierColumnsVisible;
            columns[_detailDataSet.RedSlipDetail.StockDateColumn.ColumnName].ExcludeFromColumnChooser = GetExcludeFromColumnChooser(!supplierColumnsVisible);
            // ---------- ADD 2012/08/22 ----------<<<<<

            // 列幅調整（自動調整ありの場合のみ比率を制御する目的で仮にWidthを設定する）
            if (_columnWidthAutoAdjust_RedSlip)
            {
                columns[this._detailDataSet.RedSlipDetail.GoodsNameColumn.ColumnName].Width = 100;
                columns[this._detailDataSet.RedSlipDetail.GoodsNoColumn.ColumnName].Width = 100;
                columns[this._detailDataSet.RedSlipDetail.ShipmentCntColumn.ColumnName].Width = 60;
                columns[this._detailDataSet.RedSlipDetail.SupplyDivNameColumn.ColumnName].Width = 50;
                columns[this._detailDataSet.RedSlipDetail.StockPartySaleSlipNumColumn.ColumnName].Width = 100;
                columns[this._detailDataSet.RedSlipDetail.ReturnCntColumn.ColumnName].Width = 60;
                columns[this._detailDataSet.RedSlipDetail.SalesUnPrcTaxExcFlColumn.ColumnName].Width = 60;
                columns[this._detailDataSet.RedSlipDetail.SalesUnitCostColumn.ColumnName].Width = 60;
                columns[this._detailDataSet.RedSlipDetail.SalesOrderDivCdNameColumn.ColumnName].Width = 50;
                columns[this._detailDataSet.RedSlipDetail.WarehouseCodeColumn.ColumnName].Width = 50;
                columns[this._detailDataSet.RedSlipDetail.WarehouseNameColumn.ColumnName].Width = 100;
                columns[this._detailDataSet.RedSlipDetail.ShelfNoColumn.ColumnName].Width = 70;
                columns[this._detailDataSet.RedSlipDetail.ReturnedAfterCntColumn.ColumnName].Width = 60;
            }
        }
        /// <summary>
        /// カラムチューザ除外フラグ取得
        /// </summary>
        /// <param name="hidden">カラムのHiddenに設定する値</param>
        /// <returns></returns>
        private Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser GetExcludeFromColumnChooser(bool hidden)
        {
            if (hidden)
            {
                // 非表示・カラムチューザ除外する
                return Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.True;
            }
            else
            {
                // 表示・カラムチューザ除外しない
                return Infragistics.Win.UltraWinGrid.ExcludeFromColumnChooser.False;
            }
        }
        /// <summary>
        /// 赤伝合計金額変更時処理
        /// </summary>
        private void ChangeRedSlipTotalPrice()
        {
            // 合計金額が変わったら、手数料率に従い再計算を行う。

            // 取寄手数料
            if (tNedit_rs_FeePercent01.GetValue() != 0)
            {
                tNedit_rs_FeeAmount01.SetInt((int)(((decimal)_redSlipTotalPrice - (decimal)_redSlipStockPrice) * (decimal)tNedit_rs_FeePercent01.GetValue() / (decimal)100));
            }
            // 在庫手数料
            if (tNedit_rs_FeePercent02.GetValue() != 0)
            {
                tNedit_rs_FeeAmount02.SetInt((int)((decimal)_redSlipStockPrice * (decimal)tNedit_rs_FeePercent02.GetValue() / (decimal)100));
            }

            // 合計手数料
            if (tNedit_rs_FeePercent01.GetValue() != 0 || tNedit_rs_FeePercent02.GetValue() != 0)
            {
                tNedit_rs_FeeAmountTotal.SetInt(tNedit_rs_FeeAmount01.GetInt() + tNedit_rs_FeeAmount02.GetInt());
                _feeAmountTotal = tNedit_rs_FeeAmountTotal.GetInt();
            }
            else if (tNedit_rs_FeePercentTotal.GetValue() != 0)
            {
                tNedit_rs_FeeAmountTotal.SetInt((int)((decimal)_redSlipTotalPrice * (decimal)tNedit_rs_FeePercentTotal.GetValue() / (decimal)100));
                _feeAmountTotal = tNedit_rs_FeeAmountTotal.GetInt();
            }
            else
            {
                _feeAmountTotal = tNedit_rs_FeeAmountTotal.GetInt();
            }
            // 返品伝票合計金額
            tNedit_rs_ReturnAmountTotal.SetInt((int)((decimal)_redSlipTotalPrice - (decimal)tNedit_rs_FeeAmountTotal.GetInt()));
        }
        /// <summary>
        /// 赤伝金額再計算
        /// </summary>
        /// <remarks>
        /// <br>Note       : 赤伝金額再計算を行います。</br>
        /// <br>Programmer : 呉元嘯</br>
        /// <br>Date       : 2009.11.25</br>
        /// </remarks>
        private void CountMoney()
        {
            this._redSlipTotalPrice = 0;
            this._redSlipStockPrice = 0;
            // 金額の総計
            if (this.redMoney.Count > 0)
            {
                foreach (int key in this.redMoney.Keys)
                {
                    this._redSlipTotalPrice += redMoney[key];
                }
            }
            // 在庫金額の総計
            if (this.redStockMoney.Count > 0)
            {
                foreach (int key in this.redStockMoney.Keys)
                {
                    this._redSlipStockPrice += redStockMoney[key];
                }
            }
        }

        #endregion

        # region [照会起動]
        /// <summary>
        /// Enumインスタンス生成
        /// </summary>
        /// <returns></returns>
        private object CreateEnumInstance(string assemblyName, string className, object[] value)
        {
            // enumインスタンスを生成してInvokeMemberでvalue__を書き換える
            System.Reflection.Assembly asm = System.Reflection.Assembly.Load(assemblyName);
            Type objType = asm.GetType(className);

            object retObj = Activator.CreateInstance(objType);
            retObj.GetType().InvokeMember("value__", BindingFlags.SetField, null, retObj, value);

            return retObj;
        }
        /// <summary>
        /// 照会起動処理
        /// </summary>
        private bool Invoke(string assemblyName, string className, object[] createArgs, string methodName, object[] executeArgs)
        {
            bool result = false;

            System.Reflection.Assembly asm = System.Reflection.Assembly.Load(assemblyName);
            Type objType = asm.GetType(className);
            if (objType != null)
            {
                object obj = Activator.CreateInstance(objType, createArgs);

                if (obj != null)
                {
                    if (obj is Form)
                    {
                        (obj as Form).StartPosition = FormStartPosition.CenterScreen;
                    }

                    Type[] parameterTypes = new Type[executeArgs.Length];
                    for (int index = 0; index < executeArgs.Length; index++)
                    {
                        parameterTypes[index] = executeArgs[index].GetType();
                    }
                    MethodInfo methodInfo = obj.GetType().GetMethod(methodName, parameterTypes);

                    if (methodInfo != null)
                    {
                        try
                        {
                            methodInfo.Invoke(obj, executeArgs);
                            result = true;
                        }
                        catch
                        {
                        }
                    }
                }
            }

            return result;
        }
        # endregion

        # region [フォームクローズ前処理]
        /// <summary>
        /// フォームクローズ前処理
        /// </summary>
        /// <remarks>FormClosingイベントだと×ボタン時に抜けてしまうので、Parentでウィンドウメッセージを扱う</remarks>
        public void BeforeFormClose()
        {
            //-----------------------------------------
            // フォームを閉じる時(×ボタンも含む)
            //-----------------------------------------
            // ユーザー設定保存(→XML書き込み)
            SaveSettings();
        }
        /// <summary>
        /// ユーザー設定保存処理
        /// </summary>
        /// <br>Update Note : 2009/12/28 呉元嘯 PM.NS保守依頼④</br>
        /// <br>              明細表示行数を拡大させる件の修正</br>
        private void SaveSettings()
        {
            // グループの展開状態を保存する
            # region [グループ展開状態]
            _settingForm.UserSetting.BalanceChartExpanded = uExGroupBox_BalanceChart.Expanded;
            _settingForm.UserSetting.ExtraConditionExpanded = uExGroupBox_ExtraCondition.Expanded;
            # endregion

            // 詳細条件のチェック状態を保存する
            # region [詳細条件]
            List<string> cndtnList = new List<string>();
            List<string> enableList = new List<string>();// ADD 2009/12/28
            // 抽出条件選択パネル内の全てのコントロールに対して処理
            foreach (Control control in panel_SelectItem.Controls)
            {
                if (control is Infragistics.Win.UltraWinEditors.UltraCheckEditor)
                {
                    // チェックが付いているチェックボックスの名称をリストに追加
                    if ((control as Infragistics.Win.UltraWinEditors.UltraCheckEditor).Checked)
                    {
                        cndtnList.Add(control.Name);
                    }
                    // -------------ADD 2009/12/28-------------->>>>>
                    // チェックがEnableているチェックボックスの名称をリストに追加
                    if ((control as Infragistics.Win.UltraWinEditors.UltraCheckEditor).Enabled == false)
                    {
                        enableList.Add(control.Name);
                    }
                    // -------------ADD 2009/12/28--------------<<<<<
                }

            }
            _settingForm.UserSetting.EnabledConditionList = cndtnList;
            _settingForm.UserSetting.EnabledList = enableList;// ADD 2009/12/28

            # endregion

            // -------------ADD 2009/12/28-------------->>>>>
            // 基本条件のチェック状態を保存する
            # region [基本条件]
            List<string> commonCndtnList = new List<string>();

            // 抽出条件選択パネル内の全てのコントロールに対して処理
            foreach (Control control in panel_Base.Controls)
            {
                if (control is Infragistics.Win.UltraWinEditors.UltraCheckEditor)
                {
                    // チェックが付いているチェックボックスの名称をリストに追加
                    if ((control as Infragistics.Win.UltraWinEditors.UltraCheckEditor).Checked)
                    {
                        commonCndtnList.Add(control.Name);
                    }
                }
            }
            _settingForm.UserSetting.EnabledCommonConditionList = commonCndtnList;

            # endregion
            // -------------ADD 2009/12/28--------------<<<<<

            // グリッドのカラム情報を保存する
            # region [グリッドカラム]
            // 伝票グリッド
            List<ColumnInfo> slipColumnsList;
            this.SaveGridColumnsSetting(uGrid_Slip, out slipColumnsList);
            _settingForm.UserSetting.SlipColumnsList = slipColumnsList;

            // 明細グリッド
            List<ColumnInfo> detailColumnsList;
            this.SaveGridColumnsSetting(uGrid_Detail, out detailColumnsList);
            _settingForm.UserSetting.DetailColumnsList = detailColumnsList;

            // 赤伝グリッド
            List<ColumnInfo> redSlipColumnsList;
            this.SaveGridColumnsSetting(uGrid_RedSlip, out redSlipColumnsList);
            _settingForm.UserSetting.RedSlipColumnsList = redSlipColumnsList;

            // 残高グリッド
            List<ColumnInfo> balanceColumnsList;
            this.SaveGridColumnsSetting(uGrid_BalanceList, out balanceColumnsList);
            _settingForm.UserSetting.BalanceColumnsList = balanceColumnsList;
            # endregion

            // グリッドのカラムサイズ自動調整状態を保存する
            # region  [グリッドカラム自動調整]
            // 伝票グリッド
            _settingForm.UserSetting.AutoAdjustSlip = _columnWidthAutoAdjust_Slip;
            // 明細グリッド
            _settingForm.UserSetting.AutoAdjustDetail = _columnWidthAutoAdjust_Detail;
            // 赤伝グリッド
            _settingForm.UserSetting.AutoAdjustRedSlip = _columnWidthAutoAdjust_RedSlip;
            // 残高グリッド
            _settingForm.UserSetting.AutoAdjustBalance = _columnWidthAutoAdjust_Balance;
            # endregion

            // ADD 2012/06/01 ----------------------->>>>>
            // 残高一覧表示の抽出拠点種別を保存する
            # region [抽出拠点種別]
            // 抽出拠点種別
            _settingForm.UserSetting.RemainSectionType = Int32.Parse(this.tComboEditor_rl_RemainSectionType.SelectedItem.DataValue.ToString());
            # endregion
            // ADD 2012/06/01 -----------------------<<<<<

            // 設定保存
            _settingForm.Serialize();
        }
        # endregion

        # region [グリッドカラム情報 保存・復元]
        /// <summary>
        /// グリッドカラム情報の保存
        /// </summary>
        /// <param name="targetGrid"></param>
        /// <param name="settingList"></param>
        private void SaveGridColumnsSetting(Infragistics.Win.UltraWinGrid.UltraGrid targetGrid, out List<ColumnInfo> settingList)
        {
            settingList = new List<ColumnInfo>();
            foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn ultraGridColumn in targetGrid.DisplayLayout.Bands[0].Columns)
            {
                settingList.Add(new ColumnInfo(ultraGridColumn.Key, ultraGridColumn.Header.VisiblePosition, ultraGridColumn.Hidden, ultraGridColumn.Width, ultraGridColumn.Header.Fixed));
            }
        }
        /// <summary>
        /// グリッドカラム情報の読み込み
        /// </summary>
        /// <param name="targetGrid"></param>
        /// <param name="settingList"></param>
        private void LoadGridColumnsSetting(ref Infragistics.Win.UltraWinGrid.UltraGrid targetGrid, List<ColumnInfo> settingList)
        {
            if (settingList == null || settingList.Count == 0) return;

            targetGrid.DisplayLayout.AutoFitStyle = Infragistics.Win.UltraWinGrid.AutoFitStyle.None;

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/11/24 ADD
            // カラム設定情報を表示順でソートする
            settingList.Sort(new ColumnInfoComparer());

            // 一度、全てのカラムのFixedを解除する
            foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn ultraGridColumn in targetGrid.DisplayLayout.Bands[0].Columns)
            {
                ultraGridColumn.Header.Fixed = false;
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/11/24 ADD

            foreach (ColumnInfo columnInfo in settingList)
            {
                try
                {
                    Infragistics.Win.UltraWinGrid.UltraGridColumn ultraGridColumn = targetGrid.DisplayLayout.Bands[0].Columns[columnInfo.ColumnName];
                    ultraGridColumn.Header.VisiblePosition = columnInfo.VisiblePosition;
                    ultraGridColumn.Hidden = columnInfo.Hidden;
                    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/11/24 DEL // Fixedは最後にまとめて設定する
                    //ultraGridColumn.Header.Fixed = columnInfo.ColumnFixed;
                    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/11/24 DEL
                    ultraGridColumn.Width = columnInfo.Width;
                }
                catch
                {
                }
            }

            // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/11/24 ADD
            // 列並び換え後、まとめてFixedを設定する。
            foreach (ColumnInfo columnInfo in settingList)
            {
                try
                {
                    Infragistics.Win.UltraWinGrid.UltraGridColumn ultraGridColumn = targetGrid.DisplayLayout.Bands[0].Columns[columnInfo.ColumnName];
                    ultraGridColumn.Header.Fixed = columnInfo.ColumnFixed;
                }
                catch
                {
                }
            }
            // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/11/24 ADD
        }
        # endregion

        #region ■オプション情報制御処理

        /// <summary>
        /// オプション情報キャッシュ
        /// </summary>
        /// <remarks>
        /// <br>Note       : オプション情報制御処理。</br>
        /// <br>Programmer : 張莉莉</br>
        /// <br>Date       : 2009/09/07</br>
        /// <br>Update Note :2010/01/29 呉元嘯 4次改良</br>
        /// <br>             テキスト出力、Excel出力機能をオプション化するように修正</br>
        /// <br>Update Note:2011/11/28 楊洋 得意先電子元帳/(BLﾊﾟｰﾂｵｰﾀﾞｰｼｽﾃﾑ)問合せ番号の追加</br>
        /// <br>Update Note: K2013/01/23 鄧潘ハン </br>
        /// <br>           : 特販区分を追加することの登戸個別対応</br>
        /// <br>Update Note: K2014/05/08 林超凡 </br>
        /// <br>           : 得意先電子元帳のCSV出力項目に車種メーカーコードを追加する、東亜商会個別対応</br>
        /// <br>Update Note: K2015/4/27 陳亮</br>
        /// <br>           : 11100842-00 モモセ部品㈱の個別開発依頼
        /// <br>           : 得意先電子元帳第二売価を追加する。モモセ部品㈱オプションが有効の場合のみ。</br>
        /// <br>Update Note: K2015/06/16 鮑晶</br>
        /// <br>管理番号   : 11101427-00</br>
        /// <br>           : メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
        /// <br>Update Note: 2016/01/21 脇田 靖之</br>
        /// <br>管理番号   : 11270007-00</br>
        /// <br>           : 仕掛一覧№2808 貸出受注対応</br>
        /// <br>           : ①検索条件に「出荷状況」項目を追加</br>
        /// <br>           : ②明細表示に計上数、未計上数項目を追加</br>
        /// <br>Update Note: K2016/02/23 時シン</br>
        /// <br>             ㈱イケモト 抽出条件にて受注作成区分を追加する対応</br>
        /// <br>Update Note: 2020/11/20 陳艶丹</br>
        /// <br>管理番号   : 11670305-00</br>
        /// <br>           : PMKOBETSU-4097 TSPインライン機能追加対応</br> 
        /// <br>Update Note: 2021/12/13 田建委</br>
        /// <br>管理番号   : 11770181-00</br>
        /// <br>           : PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応</br>
        /// </remarks>
        private void CacheOptionInfo()
        {
            Broadleaf.Application.Remoting.ParamData.PurchaseStatus ps;

            #region ●車両管理オプション
            ps = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_PM_CarMng);
            if (ps == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            {
                this._opt_CarMng = (int)Option.ON;
            }
            else
            {
                this._opt_CarMng = (int)Option.OFF;
            }
            #endregion
            // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
            #region ●PCCオプション
            //ps = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_PM_PCC);// DEL  2011/08/08
            ps = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_PM_SCM);// ADD  2011/08/08
            if (ps == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            {
                this._opt_Pcc = (int)Option.ON;
                this.uCheckAutoAnswerDivSCM_base.Visible = true;
                this.uCheckAutoAnswerDivSCM.Visible = true;
            }
            else
            {
                this._opt_Pcc = (int)Option.OFF;
                this.uCheckAutoAnswerDivSCM_base.Visible = false;
                this.uCheckAutoAnswerDivSCM.Visible = false;
            }
            #endregion
            // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<

            // --- DEL 2013/02/22 T.Miyamoto ------------------------------>>>>>
            //// --- ADD 2012/12/19 ------------------------------>>>>>
            //#region ●山形部品オプション
            //// 日付制御オプション(OPT-CPM0040)がオンの場合,サーバーのシステム日付を初期表示
            //ps = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_CMN_SalesDateDControl);
            //if (ps == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            //{
            //    this._opt_SalesDateDCtrl = (int)Option.ON;
            //}
            //else
            //{
            //    this._opt_SalesDateDCtrl = (int)Option.OFF;
            //}
            //// 売仕入同時入力制御オプション(OPT-CPM0050)がオンの場合,仕入"○"マーク・仕入返品伝票番号を表示しない
            //ps = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_CMN_StockEntControl);
            //if (ps == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            //{
            //    this._opt_StockEntCtrl = (int)Option.ON;
            //}
            //else
            //{
            //    this._opt_StockEntCtrl = (int)Option.OFF;
            //}
            //#endregion
            //// --- ADD 2012/12/19 ------------------------------<<<<<
            // --- DEL 2013/02/22 T.Miyamoto ------------------------------<<<<<

            //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>
            #region 問合せ番号
            if (ps == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            {
                this._opt_Pcc = (int)Option.ON;
                this.uCheckInquiryNumber_base.Visible = true;
                this.uCheckInquiryNumber.Visible = true;
            }
            else
            {
                this._opt_Pcc = (int)Option.OFF;
                this.uCheckInquiryNumber_base.Visible = false;
                this.uCheckInquiryNumber.Visible = false;
            }
            #endregion
            //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<

            // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
            #region 出荷状況
            if (this._opt_Pcc == (int)Option.ON)
            {
                this.uCheckAddUpRemDiv_base.Location = new System.Drawing.Point(21, 648);
                this.uCheckAddUpRemDiv.Location = new System.Drawing.Point(21, 648);
            }
            else
            {
                this.uCheckAddUpRemDiv_base.Location = new System.Drawing.Point(21, 618);
                this.uCheckAddUpRemDiv.Location = new System.Drawing.Point(21, 618);
            }
            #endregion
            // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<

            // --- ADD 2013/02/22 T.Miyamoto ------------------------------>>>>>
            #region ●山形部品オプション
            // 日付制御オプション(OPT-CPM0040)がオンの場合,サーバーのシステム日付を初期表示
            ps = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_CMN_SalesDateDControl);
            if (ps == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            {
                this._opt_SalesDateDCtrl = (int)Option.ON;
            }
            else
            {
                this._opt_SalesDateDCtrl = (int)Option.OFF;
            }
            // 売仕入同時入力制御オプション(OPT-CPM0050)がオンの場合,仕入"○"マーク・仕入返品伝票番号を表示しない
            ps = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_CMN_StockEntControl);
            if (ps == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            {
                this._opt_StockEntCtrl = (int)Option.ON;
            }
            else
            {
                this._opt_StockEntCtrl = (int)Option.OFF;
            }
            // --- ADD 2013/04/26 T.Miyamoto ------------------------------>>>>>
            // 山形部品入力制御オプション(OPT-CPM0010)がオンの場合,赤伝発行での在庫品の原価修正不可
            ps = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_CMN_YamagataCustomControl);
            if (ps == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            {
                this._opt_YamagataCustomCtrl = (int)Option.ON;
            }
            else
            {
                this._opt_YamagataCustomCtrl = (int)Option.OFF;
            }
            // --- ADD 2013/04/26 T.Miyamoto ------------------------------<<<<<
            #endregion
            // --- ADD 2013/02/22 T.Miyamoto ------------------------------<<<<<

            // --------ADD 2010/01/29-------->>>>>
            #region ● テキスト出力オプション
            Broadleaf.Application.Remoting.ParamData.PurchaseStatus textOutputPs;
            textOutputPs = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_CMN_TextOutput);
            if (textOutputPs == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            {
                this._opt_TextOutput = (int)Option.ON;
            }
            else
            {
                this._opt_TextOutput = (int)Option.OFF;
            }
            #region[テキスト出力、Excel出力]
            //テキスト出力オプションが有効の場合
            if (this._opt_TextOutput == (int)Option.ON)
            {
                // テキスト出力
                this.tToolbarsManager.Tools["ButtonTool_ExtractText"].SharedProps.Visible = true;
                // EXCEL出力
                this.tToolbarsManager.Tools["ButtonTool_ExtractExcel"].SharedProps.Visible = true;
                //設定画面のテキスト出力タブを表示する
                this._settingForm.uTabControlSet(true);
            }
            //テキスト出力オプションが無効の場合
            else
            {
                // テキスト出力
                this.tToolbarsManager.Tools["ButtonTool_ExtractText"].SharedProps.Visible = false;
                // EXCEL出力
                this.tToolbarsManager.Tools["ButtonTool_ExtractExcel"].SharedProps.Visible = false;
                //設定画面のテキスト出力タブを表示する
                this._settingForm.uTabControlSet(false);
            }
            #endregion
            #endregion
            // --------ADD 2010/01/29--------<<<<<
            // --------ADD 2010/05/04-------->>>>>
            if (!OpeAuthDictionary[OperationCode.ReissueSlip])
            {
                this.tToolbarsManager.Tools["ButtonTool_ReissueSlip"].SharedProps.Visible = false;
                this.tToolbarsManager.Tools["ButtonTool_ReissueSlip"].SharedProps.Shortcut = Shortcut.None;
            }
            // --------ADD 2010/05/04--------<<<<<
            // ---ADD K2013/01/23  鄧潘ハン---------------------------------->>>>>
            // 登戸個別オプションコードの追加
            Broadleaf.Application.Remoting.ParamData.PurchaseStatus nobutoCustom;
            nobutoCustom = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_CPM_NobutoCustom);
            if (nobutoCustom == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            {
                this._opt_Nobuto = (int)Option.ON;
            }
            else
            {
                this._opt_Nobuto = (int)Option.OFF;
            }
            // ---ADD K2013/01/23  鄧潘ハン---------------------------------<<<<<

            //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する BEGIN--------->>>>>
            #region 東亜商会オプション
            // 東亜商会個別オプションコードの追加
            Broadleaf.Application.Remoting.ParamData.PurchaseStatus touaCustom;
            touaCustom = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_CPM_ToaCustom);
            if (touaCustom == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            {
                this._opt_Toua = Convert.ToInt32(Option.ON);
            }
            else
            {
                this._opt_Toua = Convert.ToInt32(Option.OFF);
            }
            #endregion
            //----- ADD K2014/05/08 By 林超凡 テキスト出力項目に車種メーカーコードを追加する END---------<<<<<

            // ---- ADD K2015/04/29 陳亮 テキスト出力項目に第二売価を追加する ---->>>>>
            // モモセ部品㈱の個別オプションコードの追加
            #region モモセ部品オプション
            Broadleaf.Application.Remoting.ParamData.PurchaseStatus momoseCustom;
            momoseCustom = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_CPM_MomoseCustom);
            if (momoseCustom == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            {
                this._opt_Momose = Convert.ToInt32(Option.ON);
            }
            else
            {
                this._opt_Momose = Convert.ToInt32(Option.OFF);
            }
            #endregion
            // ---- ADD K2015/04/29 陳亮 テキスト出力項目に第二売価を追加する ----<<<<<

            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
            #region メイゴ㈱オプション
            // メイゴ㈱オプションコードの追加
            Broadleaf.Application.Remoting.ParamData.PurchaseStatus meigoCustom;
            meigoCustom = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_CPM_MeigoLedgerCustom);
            if (meigoCustom == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            {
                this._opt_Meigo = Convert.ToInt32(Option.ON);
            }
            else
            {
                this._opt_Meigo = Convert.ToInt32(Option.OFF);
            }
            #endregion
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<
 
            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
            #region ㈱イケモトオプション
            // ㈱イケモト個別オプションコードの追加
            Broadleaf.Application.Remoting.ParamData.PurchaseStatus iKeMoToCustom;
            iKeMoToCustom = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_CPM_IkemotoCustom);
            if (iKeMoToCustom == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            {
                this._opt_IKeMoTo = Convert.ToInt32(Option.ON);
                this.uCheckAcptAnOdrMakeDiv_base.Visible = true;
                this.uCheckAcptAnOdrMakeDiv.Visible = true;
            }
            else
            {
                this._opt_IKeMoTo = Convert.ToInt32(Option.OFF);
                this.uCheckAcptAnOdrMakeDiv_base.Visible = false;
                this.uCheckAcptAnOdrMakeDiv.Visible = false;
                this.uCheckAcptAnOdrMakeDiv_base.Checked = false;
                this.uCheckAcptAnOdrMakeDiv.Checked = false;
            }
            #endregion
            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<

            // ---------- ADD 2021/12/13 田建委 PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応 ---------->>>>>
            #region 引当済み伝票赤伝発行オプション
            Broadleaf.Application.Remoting.ParamData.PurchaseStatus ctlIssuingAkaden;
            ctlIssuingAkaden = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_PM_CtlIssuingAkaden);
            if (ctlIssuingAkaden == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
            {
                this.Opt_CtlIssuingAkaden = (int)Option.ON;
            }
            else
            {
                this.Opt_CtlIssuingAkaden = (int)Option.OFF;
            }
            #endregion
            // ---------- ADD 2021/12/13 田建委 PMKOBETSU-4199 引当済み伝票赤伝発行オプション改良対応 ----------<<<<<
            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿対応　-------->>>>>
            #region ● 電子帳簿連携オプション(OPT-PM03300)
            #region[電帳.DX]
            // 電子帳簿連携オプション(OPT-PM03300)オプションが有効の場合
            if (this._settingForm._opt_EBooksLink == (int)Option.ON)
            {
                // 電帳.DX
                this.tToolbarsManager.Tools["ButtonTool_EbooksDX"].SharedProps.Visible = true;
                // 電子帳簿連携オプションの有効、無効で設定の電子帳簿連携タブの表示制御を行う
                // 設定画面の電子帳簿連携タブを表示する
                this._settingForm.uTabControlEbookLinkSet(true);
            }
            // 電子帳簿連携オプション(OPT-PM03300)オプションがが無効の場合
            else
            {
                // 電帳.DX
                this.tToolbarsManager.Tools["ButtonTool_EbooksDX"].SharedProps.Visible = false;
                // 電子帳簿連携オプションの有効、無効で設定の電子帳簿連携タブの表示制御を行う
                // 設定画面のテキスト出力タブを表示しない
                this._settingForm.uTabControlEbookLinkSet(false);
            }
            #endregion
            #endregion
            // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿対応　-------<<<<<
        }
        #endregion ■オプション情報制御処理

        /// <summary>
        /// 詳細条件グループの縮小・展開 変更時処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uExGroupBox_ExtraCondition_ExpandedStateChanged(object sender, EventArgs e)
        {
            if (uExGroupBox_ExtraCondition.Expanded)
            {
                this.SuspendLayout();
                try
                {
                    DisplayExtraConditions();
                }
                finally
                {
                    this.ResumeLayout();
                }
            }
        }
        /// <summary>
        /// 残高グリッドキーダウンイベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uGrid_BalanceList_KeyDown(object sender, KeyEventArgs e)
        {
            if (!e.Shift)
            {
                switch (e.KeyCode)
                {
                    case Keys.Up:
                        {
                            Infragistics.Win.UltraWinGrid.UltraGridRow row = uGrid_BalanceList.ActiveRow;
                            if (row == null && uGrid_BalanceList.ActiveCell != null)
                            {
                                row = uGrid_BalanceList.ActiveCell.Row;
                            }

                            if (row != null && row.Index == 0)
                            {
                                // 先頭行から上移動
                                if (uGrid_BalanceList.ActiveCell != null)
                                {
                                    uGrid_BalanceList.ActiveCell.Selected = false;
                                    uGrid_BalanceList.ActiveCell = null;
                                }
                                if (uGrid_BalanceList.ActiveRow != null)
                                {
                                    uGrid_BalanceList.ActiveRow.Selected = false;
                                    uGrid_BalanceList.ActiveRow = null;
                                }
                                tComboEditor_rl_RemainType.Focus();
                            }
                        }
                        break;
                    default:
                        break;
                }
            }
        }

        /// <summary>
        /// 備考１ガイド
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uButton_SlipNote_Click(object sender, EventArgs e)
        {
            const int ctSlipNote1Div = 101;

            NoteGuidBd noteGuidBd;
            int status = _noteGuidAcs.ExecuteGuide(out noteGuidBd, this._enterpriseCode, ctSlipNote1Div);

            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // 備考セット
                tEdit_SlipNote.Text = noteGuidBd.NoteGuideName;

                // ADD 2009/05/12 ------>>>
                // 退避
                _srSlipNote = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_SlipNoteFuzzy.Value, tEdit_SlipNote.Text);
                // ADD 2009/05/12 ------<<<

                // 次フォーカス
                // -------------UPD 2009/12/28-------------->>>>>
                //Control nextControl = GetNextCommonControl( tComboEditor_SlipNoteFuzzy.Name );
                //if ( nextControl != null ) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckSlipNote_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_SlipNote.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_SlipNote.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28--------------<<<<<
            }
        }
        /// <summary>
        /// 備考２ガイド
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uButton_SlipNote2_Click(object sender, EventArgs e)
        {
            //const int ctSlipNote2Div = 102;   // DEL By 孫東響 2013/02/28 For Redmine#34811①
            const int ctSlipNote2Div = 101;     // ADD By 孫東響 2013/02/28 For Redmine#34811①

            NoteGuidBd noteGuidBd;
            int status = _noteGuidAcs.ExecuteGuide(out noteGuidBd, this._enterpriseCode, ctSlipNote2Div);

            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // 備考セット
                tEdit_SlipNote2.Text = noteGuidBd.NoteGuideName;

                // ADD 2009/05/12 ------>>>
                // 退避
                _srSlipNote2 = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_SlipNote2Fuzzy.Value, tEdit_SlipNote2.Text);
                // ADD 2009/05/12 ------<<<

                // 次フォーカス
                // -------------UPD 2009/12/28-------------->>>>>
                //Control nextControl = GetNextControl(tComboEditor_SlipNote2Fuzzy.Name);
                //if (nextControl != null) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckSlipNote2_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_SlipNote2.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_SlipNote2.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28--------------<<<<<
            }
        }
        /// <summary>
        /// 備考３ガイド
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uButton_SlipNote3_Click(object sender, EventArgs e)
        {
            //const int ctSlipNote3Div = 106;   // DEL By 孫東響 2013/02/28 For Redmine#34811①
            const int ctSlipNote3Div = 101;     // ADD By 孫東響 2013/02/28 For Redmine#34811①

            NoteGuidBd noteGuidBd;
            int status = _noteGuidAcs.ExecuteGuide(out noteGuidBd, this._enterpriseCode, ctSlipNote3Div);

            if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
            {
                // 備考セット
                tEdit_SlipNote3.Text = noteGuidBd.NoteGuideName;

                // ADD 2009/05/12 ------>>>
                // 退避
                _srSlipNote3 = GetFuzzyInputOnChangeFuzzyValue((int)tComboEditor_SlipNote3Fuzzy.Value, tEdit_SlipNote3.Text);
                // ADD 2009/05/12 ------<<<

                // 次フォーカス
                // -------------UPD 2009/12/28-------------->>>>>
                //Control nextControl = GetNextControl(tComboEditor_SlipNote3Fuzzy.Name);
                //if (nextControl != null) nextControl.Focus();
                Control nextControl = null;
                if (this.uCheckSlipNote3_base.Checked)
                {
                    nextControl = GetNextCommonControl(this.tEdit_SlipNote3.Name);
                }
                else
                {
                    nextControl = GetNextControl(this.tEdit_SlipNote3.Name);
                }
                if (nextControl != null) nextControl.Focus();
                // -------------UPD 2009/12/28--------------<<<<<
            }
        }
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/15 ADD
        # region [グリッド設定初期化イベント]
        /// <summary>
        /// 伝票表示設定初期イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void SettingForm_ClearSettingSlipGrid(object sender, EventArgs e)
        {
            InitializeGridColumns(this.uGrid_Slip.DisplayLayout.Bands[0].Columns, 0);
            LoadGridColumnsSetting(ref uGrid_Slip, _settingForm.UserSetting.SlipColumnsList);

            autoColumnAdjust(this._columnWidthAutoAdjust_Slip, 0);
        }
        /// <summary>
        /// 明細表示設定初期化イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void SettingForm_ClearSettingDetailGrid(object sender, EventArgs e)
        {
            InitializeGridColumns(this.uGrid_Detail.DisplayLayout.Bands[0].Columns, 1);
            LoadGridColumnsSetting(ref uGrid_Detail, _settingForm.UserSetting.DetailColumnsList);

            autoColumnAdjust(this._columnWidthAutoAdjust_Detail, 1);
        }
        /// <summary>
        /// 赤伝発行入力明細設定初期化イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void SettingForm_ClearSettingRedSlipGrid(object sender, EventArgs e)
        {
            InitializeGridColumns(this.uGrid_RedSlip.DisplayLayout.Bands[0].Columns, 2);
            LoadGridColumnsSetting(ref uGrid_RedSlip, _settingForm.UserSetting.RedSlipColumnsList);

            autoColumnAdjust(this._columnWidthAutoAdjust_RedSlip, 2);

            SettingRedSlipColumns((int)tComboEditor_rs_SalesSlipCd.Value);
        }
        /// <summary>
        /// 残高一覧表示設定初期化イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void SettingForm_ClearSettingBalanceGrid(object sender, EventArgs e)
        {
            InitializeGridColumns(this.uGrid_BalanceList.DisplayLayout.Bands[0].Columns, 3);
            LoadGridColumnsSetting(ref uGrid_BalanceList, _settingForm.UserSetting.BalanceColumnsList);

            autoColumnAdjust(this._columnWidthAutoAdjust_Balance, 3);
        }
        # endregion
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/15 ADD
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/02/26 ADD
        /// <summary>
        /// 現在ソート中カラム取得処理
        /// </summary>
        /// <param name="grid"></param>
        /// <returns></returns>
        private string GetSortingColumns(Infragistics.Win.UltraWinGrid.UltraGrid grid)
        {
            string sortText = string.Empty;
            bool firstCol = true;

            foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn ultraGridColumn in grid.DisplayLayout.Bands[0].SortedColumns)
            {
                if (firstCol == false)
                {
                    sortText += ",";
                }

                // 列名を取得
                sortText += ultraGridColumn.Key;

                // 列のソート方向(昇順,降順)を取得
                if (ultraGridColumn.SortIndicator == Infragistics.Win.UltraWinGrid.SortIndicator.Ascending)
                {
                    sortText += " ASC";
                }
                else
                {
                    sortText += " DESC";
                }

                firstCol = false;
            }

            return sortText;
        }
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/02/26 ADD
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009.08.10 ADD
        /// <summary>
        /// 伝票表示行からの明細表示行取得
        /// </summary>
        /// <param name="slipRow"></param>
        /// <returns></returns>
        private DataRow GetDetailRowFromSlipRow(DataRow slipRow)
        {
            DataRow detailRow = null;

            // 伝票番号・受注ステータス・データ区分(0:売上/1:入金)・伝票日付が合致する行を取得
            string filter = string.Format("{0}='{1}' AND {2}='{3}' AND {4}='{5}' AND {6}='{7}'",
                                            _detailDataSet.SalesDetail.SalesSlipNumColumn.ColumnName, slipRow[_detailDataSet.SalesList.SalesSlipNumColumn.ColumnName],
                                            _detailDataSet.SalesDetail.AcptAnOdrStatusColumn.ColumnName, slipRow[_detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName],
                                            _detailDataSet.SalesDetail.DataDivColumn.ColumnName, slipRow[_detailDataSet.SalesList.DataDivColumn.ColumnName],
                                            _detailDataSet.SalesDetail.SalesDateColumn.ColumnName, slipRow[_detailDataSet.SalesList.SalesDateColumn.ColumnName]);
            // 伝票毎の行番号でソートする
            string sort = string.Format("{0} ASC", _detailDataSet.SalesDetail.SalesRowNoColumn.ColumnName);

            // 行取得
            DataRow[] rows = _detailDataSet.SalesDetail.Select(filter, sort);
            // 先頭行を取得する
            if (rows.Length > 0)
            {
                detailRow = rows[0];
            }

            return detailRow;
        }
        /// <summary>
        /// 伝票表示タブ選択時のファンクション有効・無効制御
        /// </summary>
        private void CheckButtonToolEnableForSlip()
        {
            //---------------------------------------------
            // 対象行を取得
            //---------------------------------------------
            Infragistics.Win.UltraWinGrid.UltraGridRow gridRow = uGrid_Slip.ActiveRow;
            if (gridRow == null)
            {
                return;
            }
            DataRow slipRow = this._detailDataSet.SalesList.Rows.Find((int)gridRow.Cells[this._detailDataSet.SalesList.RowNoColumn.ColumnName].Value);
            DataRow row = GetDetailRowFromSlipRow(slipRow);
            if (row == null) return;

            //---------------------------------------------
            // 入金行ならば見出貼付を無効にする。
            //---------------------------------------------
            if ((int)row[_detailDataSet.SalesDetail.DataDivColumn.ColumnName] == 0)
            {
                // 売上
                this.tToolbarsManager.Tools["ButtonTool_SlipHeaderCopy"].SharedProps.Enabled = true;
            }
            else
            {
                // 入金
                this.tToolbarsManager.Tools["ButtonTool_SlipHeaderCopy"].SharedProps.Enabled = false;
            }
        }
        /// <summary>
        /// 明細表示タブ選択時のファンクション有効・無効制御
        /// </summary>
        private void CheckButtonToolEnableForDetail()
        {
            //---------------------------------------------
            // 対象行を取得
            //---------------------------------------------
            Infragistics.Win.UltraWinGrid.UltraGridRow gridRow = uGrid_Detail.ActiveRow;
            if (gridRow == null)
            {
                return;
            }
            DataRow row = this._detailDataSet.SalesDetail.Rows.Find((int)gridRow.Cells[this._detailDataSet.SalesDetail.RowNoColumn.ColumnName].Value);
            if (row == null) return;

            //---------------------------------------------
            // 入金行ならば見出貼付を無効にする。
            //---------------------------------------------
            if ((int)row[_detailDataSet.SalesDetail.DataDivColumn.ColumnName] == 0)
            {
                // 売上
                this.tToolbarsManager.Tools["ButtonTool_SlipHeaderCopy"].SharedProps.Enabled = true;
            }
            else
            {
                // 入金
                this.tToolbarsManager.Tools["ButtonTool_SlipHeaderCopy"].SharedProps.Enabled = false;
            }
        }
        /// <summary>
        /// 伝票表示グリッド内選択変更後（セル・行の選択/選択解除）
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uGrid_Slip_AfterSelectChange(object sender, Infragistics.Win.UltraWinGrid.AfterSelectChangeEventArgs e)
        {
            CheckButtonToolEnableForSlip();
        }
        /// <summary>
        /// 明細表示グリッド内選択変更後（セル・行の選択/選択解除）
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void uGrid_Detail_AfterSelectChange(object sender, Infragistics.Win.UltraWinGrid.AfterSelectChangeEventArgs e)
        {
            CheckButtonToolEnableForDetail();
        }
        /// <summary>
        /// 基本条件のCheckedChanged
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>
        /// <br>Note		: 基本条件のCheckedChangedを行いします。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009/12/28</br>
        /// <br>Update Note : 2011/11/28 楊洋 得意先電子元帳/(BLﾊﾟｰﾂｵｰﾀﾞｰｼｽﾃﾑ)問合せ番号の追加</br>
        /// <br>Update Note : K2015/06/16 鮑晶</br>
        /// <br>管理番号    : 11101427-00</br>
        /// <br>            : メイゴ㈱得意先電子元帳「地区」と「分析コード」を追加する。</br>
        /// <br>Update Note : 2016/01/21 脇田 靖之</br>
        /// <br>管理番号    : 11270007-00</br>
        /// <br>            : 仕掛一覧№2808 貸出受注対応</br>
        /// <br>            : ①検索条件に「出荷状況」項目を追加</br>
        /// <br>            : ②明細表示に計上数、未計上数項目を追加</br>
        /// <br>Update Note : K2016/02/23 時シン</br>
        /// <br>              ㈱イケモト 抽出条件にて受注作成区分を追加する対応</br>
        /// </remarks>
        private void uCheckSalesSlipCdDtl_base_CheckedChanged(object sender, EventArgs e)
        {
            Infragistics.Win.UltraWinEditors.UltraCheckEditor uCheckEditor = (Infragistics.Win.UltraWinEditors.UltraCheckEditor)sender;
            bool status = true;
            string checkMessage = "選択可能な項目は２項目までです。";

            #region [伝票区分]
            // 伝票区分
            if (uCheckEditor == this.uCheckSalesSlipCd_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckSalesSlipCd.Checked = true;
                        this.uCheckSalesSlipCd.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckSalesSlipCd.Checked = false;
                    this.uCheckSalesSlipCd.Enabled = true;
                }
            }
            #endregion

            #region [明細区分]
            // 明細区分
            else if (uCheckEditor == this.uCheckSalesSlipCdDtl_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckSalesSlipCdDtl.Checked = true;
                        this.uCheckSalesSlipCdDtl.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckSalesSlipCdDtl.Checked = false;
                    this.uCheckSalesSlipCdDtl.Enabled = true;
                }
            }
            #endregion

            #region[伝票番号]
            // 伝票番号
            else if (uCheckEditor == this.uCheckSalesSlipNum_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckSalesSlipNum.Checked = true;
                        this.uCheckSalesSlipNum.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckSalesSlipNum.Checked = false;
                    this.uCheckSalesSlipNum.Enabled = true;

                }
            }
            #endregion

            #region [担当者]
            // 担当者
            else if (uCheckEditor == this.uCheckSalesEmployeeCd_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckSalesEmployeeCd.Checked = true;
                        this.uCheckSalesEmployeeCd.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckSalesEmployeeCd.Checked = false;
                    this.uCheckSalesEmployeeCd.Enabled = true;

                }
            }
            #endregion

            #region [受注者]
            // 受注者
            else if (uCheckEditor == this.uCheckFrontEmployeeCd_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckFrontEmployeeCd.Checked = true;
                        this.uCheckFrontEmployeeCd.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckFrontEmployeeCd.Checked = false;
                    this.uCheckFrontEmployeeCd.Enabled = true;

                }
            }
            #endregion

            #region [発行者]
            // 発行者
            else if (uCheckEditor == this.uCheckSalesInputCode_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckSalesInputCode.Checked = true;
                        this.uCheckSalesInputCode.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckSalesInputCode.Checked = false;
                    this.uCheckSalesInputCode.Enabled = true;

                }
            }
            #endregion

            #region [管理番号]
            // 管理番号
            else if (uCheckEditor == this.uCheckCarMngCode_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckCarMngCode.Checked = true;
                        this.uCheckCarMngCode.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckCarMngCode.Checked = false;
                    this.uCheckCarMngCode.Enabled = true;

                }
            }
            #endregion

            #region [車種名称]
            // 車種名称
            else if (uCheckEditor == this.uCheckModelFullName_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckModelFullName.Checked = true;
                        this.uCheckModelFullName.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckModelFullName.Checked = false;
                    this.uCheckModelFullName.Enabled = true;

                }
            }
            #endregion

            #region [型式]
            // 型式
            else if (uCheckEditor == this.uCheckFullModel_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckFullModel.Checked = true;
                        this.uCheckFullModel.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckFullModel.Checked = false;
                    this.uCheckFullModel.Enabled = true;

                }
            }
            #endregion

            #region [車台No]
            // 車台No
            else if (uCheckEditor == this.uCheckSearchFrameNo_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckSearchFrameNo.Checked = true;
                        this.uCheckSearchFrameNo.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckSearchFrameNo.Checked = false;
                    this.uCheckSearchFrameNo.Enabled = true;

                }
            }
            #endregion

            #region [指示書No]
            // 指示書No
            else if (uCheckEditor == this.uCheckPartySalesSlipNum_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckPartySalesSlipNum.Checked = true;
                        this.uCheckPartySalesSlipNum.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckPartySalesSlipNum.Checked = false;
                    this.uCheckPartySalesSlipNum.Enabled = true;

                }
            }
            #endregion

            #region [カラー名称]
            // カラー名称
            else if (uCheckEditor == this.uCheckColorName1_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckColorName1.Checked = true;
                        this.uCheckColorName1.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckColorName1.Checked = false;
                    this.uCheckColorName1.Enabled = true;

                }
            }
            #endregion

            #region [トリム名称]
            // トリム名称
            else if (uCheckEditor == this.uCheckTrimName_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckTrimName.Checked = true;
                        this.uCheckTrimName.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckTrimName.Checked = false;
                    this.uCheckTrimName.Enabled = true;

                }
            }
            #endregion

            #region [UOE送信]
            // UOE送信
            else if (uCheckEditor == this.uCheckDataSendCode_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckDataSendCode.Checked = true;
                        this.uCheckDataSendCode.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckDataSendCode.Checked = false;
                    this.uCheckDataSendCode.Enabled = true;

                }
            }
            #endregion

            #region [備考１]
            // 備考１
            else if (uCheckEditor == this.uCheckSlipNote_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckSlipNote.Checked = true;
                        this.uCheckSlipNote.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckSlipNote.Checked = false;
                    this.uCheckSlipNote.Enabled = true;

                }
            }
            #endregion

            #region [備考２]
            // 備考２
            else if (uCheckEditor == this.uCheckSlipNote2_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckSlipNote2.Checked = true;
                        this.uCheckSlipNote2.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckSlipNote2.Checked = false;
                    this.uCheckSlipNote2.Enabled = true;

                }
            }
            #endregion

            #region [備考３]
            // 備考３
            else if (uCheckEditor == this.uCheckSlipNote3_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckSlipNote3.Checked = true;
                        this.uCheckSlipNote3.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckSlipNote3.Checked = false;
                    this.uCheckSlipNote3.Enabled = true;

                }
            }
            #endregion

            #region [UOEリマーク1]
            // UOEリマーク1
            else if (uCheckEditor == this.uCheckUoeRemark1_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckUoeRemark1.Checked = true;
                        this.uCheckUoeRemark1.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckUoeRemark1.Checked = false;
                    this.uCheckUoeRemark1.Enabled = true;

                }
            }
            #endregion

            #region [UOEリマーク2]
            // UOEリマーク2
            else if (uCheckEditor == this.uCheckUoeRemark2_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckUoeRemark2.Checked = true;
                        this.uCheckUoeRemark2.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckUoeRemark2.Checked = false;
                    this.uCheckUoeRemark2.Enabled = true;

                }
            }
            #endregion

            #region [商品大分類]
            // 商品大分類
            else if (uCheckEditor == this.uCheckGoodsLGroup_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckGoodsLGroup.Checked = true;
                        this.uCheckGoodsLGroup.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckGoodsLGroup.Checked = false;
                    this.uCheckGoodsLGroup.Enabled = true;

                }
            }
            #endregion

            #region [商品中分類]
            // 商品中分類
            else if (uCheckEditor == this.uCheckGoodsMGroup_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckGoodsMGroup.Checked = true;
                        this.uCheckGoodsMGroup.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckGoodsMGroup.Checked = false;
                    this.uCheckGoodsMGroup.Enabled = true;

                }
            }
            #endregion

            #region [BLグループ]
            // BLグループ
            else if (uCheckEditor == this.uCheckBLGroupCode_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckBLGroupCode.Checked = true;
                        this.uCheckBLGroupCode.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckBLGroupCode.Checked = false;
                    this.uCheckBLGroupCode.Enabled = true;

                }
            }
            #endregion

            #region [BLコード]
            // BLコード
            else if (uCheckEditor == this.uCheckBLGoodsCode_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckBLGoodsCode.Checked = true;
                        this.uCheckBLGoodsCode.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckBLGoodsCode.Checked = false;
                    this.uCheckBLGoodsCode.Enabled = true;

                }
            }
            #endregion

            #region [品名]
            // 品名
            else if (uCheckEditor == this.uCheckGoodsName_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckGoodsName.Checked = true;
                        this.uCheckGoodsName.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckGoodsName.Checked = false;
                    this.uCheckGoodsName.Enabled = true;

                }
            }
            #endregion

            #region [品番]
            // 品番
            else if (uCheckEditor == this.uCheckGoodsNo_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckGoodsNo.Checked = true;
                        this.uCheckGoodsNo.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckGoodsNo.Checked = false;
                    this.uCheckGoodsNo.Enabled = true;

                }
            }
            #endregion

            #region [メーカー]
            // 担当者
            else if (uCheckEditor == this.uCheckGoodsMakerCd_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckGoodsMakerCd.Checked = true;
                        this.uCheckGoodsMakerCd.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckGoodsMakerCd.Checked = false;
                    this.uCheckGoodsMakerCd.Enabled = true;

                }
            }
            #endregion

            #region [販売区分]
            // 販売区分
            else if (uCheckEditor == this.uCheckSalesCode_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckSalesCode.Checked = true;
                        this.uCheckSalesCode.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckSalesCode.Checked = false;
                    this.uCheckSalesCode.Enabled = true;

                }
            }
            #endregion

            #region [自社分類]
            // 自社分類
            else if (uCheckEditor == this.uCheckEnterpriseGanreCode_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckEnterpriseGanreCode.Checked = true;
                        this.uCheckEnterpriseGanreCode.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckEnterpriseGanreCode.Checked = false;
                    this.uCheckEnterpriseGanreCode.Enabled = true;

                }
            }
            #endregion

            #region [商品属性]
            // 商品属性
            else if (uCheckEditor == this.uCheckGoodsKindCode_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckGoodsKindCode.Checked = true;
                        this.uCheckGoodsKindCode.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckGoodsKindCode.Checked = false;
                    this.uCheckGoodsKindCode.Enabled = true;

                }
            }
            #endregion

            #region [在庫取寄区分]
            // 在庫取寄区分
            else if (uCheckEditor == this.uCheckSalesOrderDivCd_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckSalesOrderDivCd.Checked = true;
                        this.uCheckSalesOrderDivCd.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckSalesOrderDivCd.Checked = false;
                    this.uCheckSalesOrderDivCd.Enabled = true;

                }
            }
            #endregion

            #region [倉庫]
            // 倉庫
            else if (uCheckEditor == this.uCheckWarehouseCode_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckWarehouseCode.Checked = true;
                        this.uCheckWarehouseCode.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckWarehouseCode.Checked = false;
                    this.uCheckWarehouseCode.Enabled = true;

                }
            }
            #endregion

            #region [棚番]
            // 棚番
            else if (uCheckEditor == this.uCheckWarehouseShelfNo_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckWarehouseShelfNo.Checked = true;
                        this.uCheckWarehouseShelfNo.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckWarehouseShelfNo.Checked = false;
                    this.uCheckWarehouseShelfNo.Enabled = true;

                }
            }
            #endregion

            #region [仕入伝票番号]
            // 仕入伝票番号
            else if (uCheckEditor == this.uCheckSupplierSlipNo_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckSupplierSlipNo.Checked = true;
                        this.uCheckSupplierSlipNo.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckSupplierSlipNo.Checked = false;
                    this.uCheckSupplierSlipNo.Enabled = true;

                }
            }
            #endregion

            #region [仕入先]
            // 仕入先
            else if (uCheckEditor == this.uCheckSupplierCd_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckSupplierCd.Checked = true;
                        this.uCheckSupplierCd.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckSupplierCd.Checked = false;
                    this.uCheckSupplierCd.Enabled = true;

                }
            }
            #endregion

            #region [発注先]
            // 発注先
            else if (uCheckEditor == this.uCheckUOESupplierCd_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckUOESupplierCd.Checked = true;
                        this.uCheckUOESupplierCd.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckUOESupplierCd.Checked = false;
                    this.uCheckUOESupplierCd.Enabled = true;

                }
            }
            #endregion

            #region [納入先]
            // 納入先
            else if (uCheckEditor == this.uCheckAddresseeCode_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckAddresseeCode.Checked = true;
                        this.uCheckAddresseeCode.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckAddresseeCode.Checked = false;
                    this.uCheckAddresseeCode.Enabled = true;

                }
            }
            #endregion

            #region [明細備考]
            // 明細備考
            else if (uCheckEditor == this.uCheckDtlNote_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckDtlNote.Checked = true;
                        this.uCheckDtlNote.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckDtlNote.Checked = false;
                    this.uCheckDtlNote.Enabled = true;

                }
            }
            #endregion

            #region [削除指定区分]
            // 削除指定区分
            else if (uCheckEditor == this.uCheckDeleteFlag_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckDeleteFlag.Checked = true;
                        this.uCheckDeleteFlag.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckDeleteFlag.Checked = false;
                    this.uCheckDeleteFlag.Enabled = true;

                }
            }
            #endregion

            #region [請求先]
            // 請求先
            else if (uCheckEditor == this.uCheckClaimCode_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckClaimCode.Checked = true;
                        this.uCheckClaimCode.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckClaimCode.Checked = false;
                    this.uCheckClaimCode.Enabled = true;

                }
            }
            #endregion

            #region [入力日開始]
            // 入力日開始
            else if (uCheckEditor == this.uCheckAddUpADateSt_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckAddUpADateSt.Checked = true;
                        this.uCheckAddUpADateSt.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckAddUpADateSt.Checked = false;
                    this.uCheckAddUpADateSt.Enabled = true;

                }
            }
            #endregion

            #region [入力日終了]
            // 入力日終了
            else if (uCheckEditor == this.uCheckAddUpADateEd_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckAddUpADateEd.Checked = true;
                        this.uCheckAddUpADateEd.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckAddUpADateEd.Checked = false;
                    this.uCheckAddUpADateEd.Enabled = true;

                }
            }
            #endregion

            // ---------------------- ADD START 2011/07/18 朱宝軍 ----------------->>>>>
            #region [自動回答]
            // 自動回答
            else if (uCheckEditor == this.uCheckAutoAnswerDivSCM_base && this._opt_Pcc == (int)Option.ON)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckAutoAnswerDivSCM.Checked = true;
                        this.uCheckAutoAnswerDivSCM.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckAutoAnswerDivSCM.Checked = false;
                    this.uCheckAutoAnswerDivSCM.Enabled = true;

                }
            }
            #endregion
            // ---------------------- ADD END   2011/07/18 朱宝軍 -----------------<<<<<

            //---ADD START 2011/11/28 楊洋 ----------------------------------->>>>>
            #region 問合せ番号
            else if (uCheckEditor == this.uCheckInquiryNumber_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckInquiryNumber.Checked = true;
                        this.uCheckInquiryNumber.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckInquiryNumber.Checked = false;
                    this.uCheckInquiryNumber.Enabled = true;

                }
            }
            #endregion
            //---ADD END 2011/11/28 楊洋 -----------------------------------<<<<<
            	
            // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
            #region 出荷状況
            else if (uCheckEditor == this.uCheckAddUpRemDiv_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckAddUpRemDiv.Checked = true;
                        this.uCheckAddUpRemDiv.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckAddUpRemDiv.Checked = false;
                    this.uCheckAddUpRemDiv.Enabled = true;

                }
            }
            #endregion
            // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<

            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
            #region 地区
            // 地区 
            else if (uCheckEditor == this.ultraCheckEditor_salesArea_base&&this._opt_Meigo==(int)Option.ON)
            {
                if (uCheckEditor.Checked)
                {       
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.ultraCheckEditor_salesArea.Checked = true;
                        this.ultraCheckEditor_salesArea.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.ultraCheckEditor_salesArea.Checked = false;
                    this.ultraCheckEditor_salesArea.Enabled = true;

                }
            }
            #endregion

            #region 分析コード
            // 分析コード
            else if (uCheckEditor == this.ultraCheckEditor_custAnalysCode_base && this._opt_Meigo == (int)Option.ON)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.ultraCheckEditor_custAnalysCode.Checked = true;
                        this.ultraCheckEditor_custAnalysCode.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.ultraCheckEditor_custAnalysCode.Checked = false;
                    this.ultraCheckEditor_custAnalysCode.Enabled = true;

                }
            }
            #endregion
            //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<
            
            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 ----->>>>>
            #region [受注作成区分]
            // 受注作成区分
            else if (this._opt_IKeMoTo == (int)Option.ON && uCheckEditor == this.uCheckAcptAnOdrMakeDiv_base)
            {
                if (uCheckEditor.Checked)
                {
                    this._checkCount++;
                    if (this._checkCount > 2)
                    {
                        status = false;
                        this._checkCount--;
                        uCheckEditor.Checked = false;
                    }
                    else
                    {
                        this.uCheckAcptAnOdrMakeDiv.Checked = true;
                        this.uCheckAcptAnOdrMakeDiv.Enabled = false;
                    }
                }
                else
                {
                    this._checkCount--;
                    this.uCheckAcptAnOdrMakeDiv.Checked = false;
                    this.uCheckAcptAnOdrMakeDiv.Enabled = true;

                }
            }
            #endregion
            //----- ADD K2016/02/23 時シン ㈱イケモト 抽出条件にて受注作成区分を追加する対応 -----<<<<<
 
            if (status == false)
            {
                TMsgDisp.Show(this,                         // 親ウィンドウフォーム
                    emErrorLevel.ERR_LEVEL_EXCLAMATION,     // エラーレベル
                    "PMKAU04001U",							// アセンブリID
                    checkMessage,	                        // 表示するメッセージ
                    0,									    // ステータス値
                    MessageBoxButtons.OK);					// 表示するボタン
            }
        }

        /// <summary>
        /// tEdit_ClaimName_Enter
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>
        /// <br>Note		: tEdit_ClaimName_Enterを行いします。</br>
        /// <br>Programmer	: 呉元嘯</br>
        /// <br>Date		: 2009/12/28</br>
        /// </remarks>
        private void tEdit_ClaimName_Enter(object sender, EventArgs e)
        {
            // 請求先コードが保存されていれば置き換え
            if (this._prevInputValue.ClaimCode > 0)
            {
                this.tEdit_ClaimName.Text = this._prevInputValue.ClaimCode.ToString();
            }

        }

        // ------------ ADD 2010/09/16 ----------------------------------------->>>>>
        /// <summary>
        /// ESCキーで検索内容の取消、ESCキーでPGを終了する機能を追加する。
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>
        /// <br>Note       : ESCキーで検索内容の取消、ESCキーでPGを終了する機能を追加する。</br>
        /// <br>Programmer : tianjw</br>
        /// <br>Date       : 2010/09/16</br>
        /// <br>Note       : Redmine#43863 ESCにて画面キャンセルした後Enter、及び矢印キーにて伝票検索の対応。</br>
        /// <br>Programmer : chenyk</br>
        /// <br>Date       : 2014/10/29</br>
        /// <br>Note       : Redmine#43863 ESCにて画面キャンセルした後Enter、及び矢印キーにて伝票検索の対応。</br>
        /// <br>Programmer : chenyk</br>
        /// <br>Date       : 2015/01/28</br>
        /// </remarks>
        private void PMKAU04001UA_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Escape)
            {
                if (uGrid_Slip.Rows.Count > 0 || uGrid_Detail.Rows.Count > 0 || uGrid_BalanceList.Rows.Count > 0)
                {
                    if (TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_QUESTION, this.Name,
                        "検索内容を取り消ししてよろしいですか？",
                        0, MessageBoxButtons.YesNo) == DialogResult.Yes)
                    {
                        this._detailDataSet.SalesList.Clear();
                        this._detailDataSet.SalesDetail.Clear();
                        this._detailDataSet.BalanceList.Clear();
                        this._detailDataSet.RedSlipDetail.Clear();

                        this.tNedit_CustomerCode.Focus();
                        //------------ADD BY 凌小青 on 2011/12/06 for Redmine#8080--------->>>>>>>>
                        this.uTabControl.Tabs["uTab_SlipDetail"].Selected = true;
                        this.tToolbarsManager.Tools["ButtonTool_Search"].SharedProps.Enabled = true;
                        this._custPrtPpr.CustomerCode = 0;
                        this.uLabel_rs_CustomerName.Text = "";//指示書(仮伝)番号
                        this.uLabel_rs_SectionName.Text = ""; //拠点
                        this.tNedit_rs_FeePercent01.Clear();//取寄 手数料率(%)
                        this.tNedit_rs_FeePercent02.Clear();//在庫 手数料率(%)
                        this.tNedit_rs_FeePercentTotal.Clear();// 合計 手数料率(%)
                        this.tNedit_rs_FeeAmount01.Clear();//取寄手数料額
                        this.tNedit_rs_FeeAmount02.Clear();//在庫手数料額
                        this.tNedit_rs_FeeAmountTotal.Clear();//合計手数料額
                        this.tNedit_rs_ReturnAmountTotal.Clear();//返品伝票金額
                        // ADD 2012/03/29 gezh Redmine#29149 --------->>>>>
                        this.tNedit_SalesCodeDiv.Clear();
                        this.uLabel_SalesCodeDiv.Text = string.Empty;
                        // ADD 2012/03/29 gezh Redmine#29149 ---------<<<<<
                        this.tEdit_rs_PartySalesSlipNo.Clear();//指示書(仮伝)番号
                        this.tNedit_SlipNoteCode.Clear();//備考
                        this.tEdit_rs_SlipNote.Clear();
                        this.tNedit_SlipNote2Code.Clear();//備考２
                        this.tEdit_rs_SlipNote2.Clear();
                        this.tNedit_SlipNote3Code.Clear();//備考３
                        this.tEdit_rs_SlipNote3.Clear();
                        this.tEdit_rs_SlipNote.Clear();
                        this.tNedit_RetGoodsReason.Clear();//返品理由
                        this.tEdit_rs_ReturnReason.Clear();
                        this.tEdit_rs_SlipNoteCar.Clear();//車輌備考
                        this.tNedit_Mileage.Clear();//走行距離
                        this.uLabel_AcpOdrTtl2TmBfBlDmd.Text = ""; //前々々回残高
                        this.uLabel_LastTimeDemand.Text = "";//前々回残高
                        this.uLabel_AfCalDemandPrice.Text = ""; //前回残高
                        this.uLabel_ThisSalesPriceTotal.Text = ""; //今回売上
                        this.uLabel_OfsThisSalesTax.Text = ""; //消費税(売)
                        this.uLabel_ThisTimeDmdNrml.Text = "";//今回入金
                        this.uLabel_AfCalBlc.Text = ""; //請求残高
                        this.uLabel_StandardPrice_Total.Text = ""; //標準価格合計
                        this.uLabel_SoldAmount_Total.Text = "";//金額合計
                        this.uLabel_Cost_Total.Text = "";//原価合計
                        this.uLabel_GrossProfitAmount_Total.Text = "";//粗利額合計
                        this.uLabel_StandardPrice_Avg.Text = "";//標準価格平均
                        this.uLabel_SoldAmount_Avg.Text = "";//金額平均
                        this.uLabel_Cost_Avg.Text = "";//原価平均
                        this.uLabel_GrossProfitAmount_Avg.Text = "";//粗利額平均
                        this.uLabel_GrossProfitPercentage.Text = "";//粗利率
                        this.uLabel_SlipCount.Text = ""; //伝票枚数
                        this.uLabel_Amount.Text = "";//数量
                        this.uLabel_ConsumeTaxAmount.Text = "";//消費税
                        this.uLabel_DetailCount.Text = "";//明細数
                        this.tComboEditor_rs_SalesSlipCd.SelectedIndex = 1;//伝票区分
                        this.tEdit_rs_InputEmployeeCd.Text = LoginInfoAcquisition.Employee.EmployeeCode.Trim();//発行者コード
                        uLabel_rs_InputEmployeeName.Text = LoginInfoAcquisition.Employee.Name.Trim();//発行者名称
                        this.tDateEdit_rs_SalesDate.SetDateTime(DateTime.Now);//売上日
                        // --- ADD 2012/12/19 T.Miyamoto ------------------------------>>>>>
                        // 日付制御オプション(OPT-CPM0040)がオンの場合,サーバーのシステム日付を初期表示
                        if (this._opt_SalesDateDCtrl == (int)Option.ON)
                        {
                            this.tDateEdit_rs_SalesDate.SetDateTime(_custPtrRedSlipAcs.GetServerNowTime());//売上日
                            _SalesDate = _custPtrRedSlipAcs.GetServerNowTime();
                        }
                        // --- ADD 2012/12/19 T.Miyamoto ------------------------------<<<<<
                        this.tComboEditor_rl_RemainType.SelectedIndex = 0;//残高種別
                        this.tDateEdit_rl_TargetYMSt.SetDateTime(DateTime.Now);//対象年月開始
                        this.tDateEdit_rl_TargetYMEd.SetDateTime(DateTime.Now);//対象年月終了
                        this.uLabel_AddUpYearMonth.Text = ""; //請求範囲
                        this.uLabel_ConsTaxLayMethod.Text = "";//消費税転嫁方式
                        //------------ADD BY 凌小青 on 2011/12/06 for Redmine#8080---------<<<<<<<<<<
                        this._custPrtPprBackUp = null; // ADD BY chenyk on 2014/10/29 for Redmine#43863 ESCにて画面キャンセルした後Enter、及び矢印キーにて伝票検索の対応
                        this._custPrtPprBlnceBackUp = null; // ADD BY chenyk on 2015/01/28 for Redmine#43863 ESCにて画面キャンセルした後Enter、及び矢印キーにて伝票検索の対応
                    }
                    else
                    {
                    }
                }
                else
                {
                    if (TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_QUESTION, this.Name,
                        "終了してもよろしいですか？",
                        0, MessageBoxButtons.YesNo) == DialogResult.Yes)
                    {
                        this.Close();
                    }
                    else
                    {
                    }
                }
            }
        }
        // ------------ ADD 2010/09/16 -----------------------------------------<<<<<


        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009.08.10 ADD

        // --- ADD 2011/08/31 ---------->>>>>
        /// <summary>
        /// 伝票備考、伝票備考２、伝票備考３の入力桁数設定処理
        /// </summary>
        /// <remarks>
        /// <br>Note		: 伝票備考、伝票備考２、伝票備考３の入力桁数設定を処理する。</br>
        /// <br>Programmer	: 李占川</br>
        /// <br>Date		: 2011/08/31</br>
        /// <br>Update Note : 2011/09/08 李占川 Redmine#24110の対応</br>
        /// <br>              桁数を設定しない場合、入力できない</br>
        /// </remarks>
        private void SetNoteCharCnt()
        {
            if (this._custPtrRedSlipAcs.SlipNoteCharCnt == 0)
            {
                // --- ADD 2011/09/08---------->>>>>
                //tEdit_rs_SlipNote.ExtEdit.Column = uiSetControl1.GetSettingColumnCount("tEdit_SlipNote") * 2;
                tEdit_rs_SlipNote.ExtEdit.Column = 30 * 2;
                this._custPtrRedSlipAcs.SlipNoteCharCnt = 30;
                // --- ADD 2011/09/08----------<<<<<
            }
            else
            {
                tEdit_rs_SlipNote.ExtEdit.Column = this._custPtrRedSlipAcs.SlipNoteCharCnt * 2;
            }

            if (this._custPtrRedSlipAcs.SlipNote2CharCnt == 0)
            {
                // --- ADD 2011/09/08---------->>>>>
                //tEdit_rs_SlipNote2.ExtEdit.Column = uiSetControl1.GetSettingColumnCount("tEdit_SlipNote2") * 2;
                tEdit_rs_SlipNote2.ExtEdit.Column = 30 * 2;
                this._custPtrRedSlipAcs.SlipNote2CharCnt = 30;
                // --- ADD 2011/09/08----------<<<<<
            }
            else
            {
                tEdit_rs_SlipNote2.ExtEdit.Column = this._custPtrRedSlipAcs.SlipNote2CharCnt * 2;
            }

            if (this._custPtrRedSlipAcs.SlipNote3CharCnt == 0)
            {
                // --- ADD 2011/09/08---------->>>>>
                //tEdit_rs_SlipNote3.ExtEdit.Column = uiSetControl1.GetSettingColumnCount("tEdit_SlipNote3") * 2;
                tEdit_rs_SlipNote3.ExtEdit.Column = 30 * 2;
                this._custPtrRedSlipAcs.SlipNote3CharCnt = 30;
                // --- ADD 2011/09/08----------<<<<<
            }
            else
            {
                tEdit_rs_SlipNote3.ExtEdit.Column = this._custPtrRedSlipAcs.SlipNote3CharCnt * 2;
            }
        }

        /// <summary>
        /// 備考桁数のチェック処理
        /// </summary>
        /// <param name="num">備考号</param>
        /// <param name="slipNote">備考の内容</param>
        /// <returns>チェック結果</returns>
        /// <remarks>
        /// <br>Note		: 備考桁数のチェックを処理する。</br>
        /// <br>Programmer	: 李占川</br>
        /// <br>Date		: 2011/08/31</br>
        /// <br>Update Note : 2011/09/08 李占川 Redmine#24110の対応</br>
        /// <br>              桁数を設定しない場合、入力できない</br>
        /// </remarks>
        public bool CheckSlipNote(int num, string slipNote)
        {
            bool checkRs = true;

            if (slipNote == "") return checkRs;

            // 伝票備考、伝票備考２、伝票備考３の入力桁数取得処理
            this._custPtrRedSlipAcs.GetNoteCharCnt(this.tEdit_SectionCodeAllowZero.Text.Trim(), this.tNedit_CustomerCode.GetInt());
            this.SetNoteCharCnt();  // ADD 2011/09/08

            string name = string.Empty;
            int maxLength = 0;

            switch (num)
            {
                // 赤伝備考１
                case 1:
                    {
                        name = "備考";
                        maxLength = (this._custPtrRedSlipAcs.SlipNoteCharCnt * 2 < 30 ? this._custPtrRedSlipAcs.SlipNoteCharCnt : 30);

                        break;
                    }
                // 赤伝備考２
                case 2:
                    {
                        name = "備考２";
                        maxLength = (this._custPtrRedSlipAcs.SlipNote2CharCnt * 2 < 30 ? this._custPtrRedSlipAcs.SlipNote2CharCnt : 30);

                        break;
                    }
                // 赤伝備考３
                case 3:
                    {
                        name = "備考３";
                        maxLength = (this._custPtrRedSlipAcs.SlipNote3CharCnt * 2 < 30 ? this._custPtrRedSlipAcs.SlipNote3CharCnt : 30);

                        break;
                    }
            }

            if (maxLength >= 30)
            {
                // 桁数の判断
                if (slipNote.Length > maxLength)
                {
                    checkRs = false;
                    this.ShowSlipNoteMsg(name, maxLength.ToString());
                }
            }
            else
            {
                byte[] byteArray = System.Text.Encoding.Default.GetBytes(slipNote);

                // 桁数の判断
                if (byteArray.Length > maxLength * 2)
                {
                    checkRs = false;
                    this.ShowSlipNoteMsg(name, maxLength.ToString());
                }
            }

            return checkRs;
        }

        /// <summary>
        /// 備考欄の入力桁数チェックのメッセージ
        /// </summary>
        /// <param name="name">備考</param>
        /// <param name="cnt">文字数</param>
        /// <remarks>
        /// <br>Note		: 備考欄の入力桁数チェックのメッセージを処理する。</br>
        /// <br>Programmer	: 李占川</br>
        /// <br>Date		: 2011/08/31</br>
        /// </remarks>
        private void ShowSlipNoteMsg(string name, string cnt)
        {
            TMsgDisp.Show(
                  this,
                  emErrorLevel.ERR_LEVEL_EXCLAMATION,
                  this.Name,
                  string.Format("{0}の入力可能文字数が規定値({1}文字)を超えています", name, cnt),
                  -1,
                  MessageBoxButtons.OK);
        }
		// ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
		/// <summary>
		/// 残高集計検索
		/// </summary>
		/// <returns>検索結果</returns>
		/// <remarks>
		/// <br>Note		: 残高集計検索を行う。</br>
		/// <br>Programmer	: wangf</br>
		/// <br>Date		: 2012/01/30</br>
		/// </remarks>
		private int SearchBalance()
		{
			int retStatus = (int)ConstantManagement.MethodResult.ctFNC_ERROR;
			// 得意先コードが空白の場合、処理無し、Falseを戻る
			int inputValue = tNedit_CustomerCode.GetInt();
			if (0 == inputValue)
			{
				return retStatus;
			}
            // 残高集計情報クリア
            this.BalanceClear();
			// 画面上の項目からパラメータを作成
			if (!SetDisplay2SearchConditionClass())
			{
				return retStatus;
			}
			// パラメータクラスを使って検索開始
			retStatus = this._custPtrSearchAcs.SearchBalanceResult(this._custPrtPpr);
			return retStatus;
		}
        /// <summary>
        /// 残高集計情報クリア
        /// </summary>
        /// <remarks>
        /// <br>Note		: 残高集計情報クリアを行う。</br>
        /// <br>Programmer	: wangf</br>
        /// <br>Date		: 2012/01/30</br>
        /// </remarks>
        private void BalanceClear()
        {
            // 前々々回残高
            this.uLabel_AcpOdrTtl2TmBfBlDmd.Text = string.Empty;
            // 前々回残高
            this.uLabel_LastTimeDemand.Text = string.Empty;
            // 前回残高
            this.uLabel_AfCalDemandPrice.Text = string.Empty;
            // 今回売上
            this.uLabel_ThisSalesPriceTotal.Text = string.Empty;
            // 消費税(売)
            this.uLabel_OfsThisSalesTax.Text = string.Empty;
            // 今回入金
            this.uLabel_ThisTimeDmdNrml.Text = string.Empty;
            // 請求残高
            this.uLabel_AfCalBlc.Text = string.Empty;
            // 請求範囲
            this.uLabel_AddUpYearMonth.Text = string.Empty;
            // 税転嫁方式
            this.uLabel_ConsTaxLayMethod.Text = string.Empty;
            if (this._detailDataSet.BalanceTotal.Rows.Count > 0)
            {
                this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ExistsTotalColumn] = false;
            }
        }
		// ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<

        /// <summary>
        /// 備考テキスト変更時イベント処理
        /// </summary>
        /// <param name="sender">対象オブジェクト</param>
        /// <param name="e">イベントパラメータクラス</param>
        /// <remarks>
        /// <br>Note		: 備考テキスト変更時イベント処理。</br>
        /// <br>Programmer	: 李占川</br>
        /// <br>Date		: 2011/08/31</br>
        /// <br>Update Note : 2013/10/10 gezh Redmine#40654の対応</br>
        /// <br>              設定画面「赤伝発行」が「任意」のとき、画面の起動時にエラーが発生する</br>
        /// </remarks>
        private void tEdit_rs_SlipNote_ValueChanged(object sender, EventArgs e)
        {
            byte[] byteArray = System.Text.Encoding.Default.GetBytes(this.tEdit_rs_SlipNote.Text);

            //if (byteArray.Length > this._custPtrRedSlipAcs.SlipNoteCharCnt * 2)  // DEL gezh 2013/10/10 FOR Redmine#40654 
            if (byteArray.Length > this._custPtrRedSlipAcs.SlipNoteCharCnt * 2 && this.tEdit_rs_SlipNote.IsInEditMode)  // ADD gezh 2013/10/10 FOR Redmine#40654
            {
                this.tEdit_rs_SlipNote.ValueChanged -= new System.EventHandler(this.tEdit_rs_SlipNote_ValueChanged);
                int startBf = tEdit_rs_SlipNote.SelectionStart;
                int startAf = startBf - (this.tEdit_rs_SlipNote.Text.Length - this._prevInputValue.SlipNoteName1.Length);
                tEdit_rs_SlipNote.Text = this._beslipNoteNm;
                tEdit_rs_SlipNote.SelectionStart = startAf;
                this.tEdit_rs_SlipNote.ValueChanged += new System.EventHandler(this.tEdit_rs_SlipNote_ValueChanged);
            }

            this._beslipNoteNm = tEdit_rs_SlipNote.Text;
        }

        /// <summary>
        /// 備考２テキスト変更時イベント処理
        /// </summary>
        /// <param name="sender">対象オブジェクト</param>
        /// <param name="e">イベントパラメータクラス</param>
        /// <remarks>
        /// <br>Note		: 備考２テキスト変更時イベント処理。</br>
        /// <br>Programmer	: 李占川</br>
        /// <br>Date		: 2011/08/31</br>
        /// <br>Update Note : 2013/10/10 gezh Redmine#40654の対応</br>
        /// <br>              設定画面「赤伝発行」が「任意」のとき、画面の起動時にエラーが発生する</br>
        /// </remarks>
        private void tEdit_rs_SlipNote2_ValueChanged(object sender, EventArgs e)
        {
            byte[] byteArray = System.Text.Encoding.Default.GetBytes(this.tEdit_rs_SlipNote2.Text);

            //if (byteArray.Length > this._custPtrRedSlipAcs.SlipNote2CharCnt * 2)  // DEL gezh 2013/10/10 FOR Redmine#40654
            if (byteArray.Length > this._custPtrRedSlipAcs.SlipNote2CharCnt * 2 && this.tEdit_rs_SlipNote2.IsInEditMode)  // ADD gezh 2013/10/10 FOR Redmine#40654
            {
                this.tEdit_rs_SlipNote2.ValueChanged -= new System.EventHandler(this.tEdit_rs_SlipNote2_ValueChanged);
                int startBf = tEdit_rs_SlipNote2.SelectionStart;
                int startAf = startBf - (this.tEdit_rs_SlipNote2.Text.Length - this._prevInputValue.SlipNoteName2.Length);
                tEdit_rs_SlipNote2.Text = this._beslipNote2Nm;
                tEdit_rs_SlipNote2.SelectionStart = startAf;
                this.tEdit_rs_SlipNote2.ValueChanged += new System.EventHandler(this.tEdit_rs_SlipNote2_ValueChanged);
            }

            this._beslipNote2Nm = tEdit_rs_SlipNote2.Text;
        }

        /// <summary>
        /// 備考３テキスト変更時イベント処理
        /// </summary>
        /// <param name="sender">対象オブジェクト</param>
        /// <param name="e">イベントパラメータクラス</param>
        /// <remarks>
        /// <br>Note		: 備考３テキスト変更時イベント処理。</br>
        /// <br>Programmer	: 李占川</br>
        /// <br>Date		: 2011/08/31</br>
        /// <br>Update Note : 2013/10/10 gezh Redmine#40654の対応</br>
        /// <br>              設定画面「赤伝発行」が「任意」のとき、画面の起動時にエラーが発生する</br>
        /// </remarks>
        private void tEdit_rs_SlipNote3_ValueChanged(object sender, EventArgs e)
        {
            byte[] byteArray = System.Text.Encoding.Default.GetBytes(this.tEdit_rs_SlipNote3.Text);

            //if (byteArray.Length > this._custPtrRedSlipAcs.SlipNote3CharCnt * 2)  // DEL gezh 2013/10/10 FOR Redmine#40654
            if (byteArray.Length > this._custPtrRedSlipAcs.SlipNote3CharCnt * 2 && this.tEdit_rs_SlipNote3.IsInEditMode)  // ADD gezh 2013/10/10 FOR Redmine#40654
            {
                this.tEdit_rs_SlipNote3.ValueChanged -= new System.EventHandler(this.tEdit_rs_SlipNote3_ValueChanged);
                int startBf = tEdit_rs_SlipNote3.SelectionStart;
                int startAf = startBf - (this.tEdit_rs_SlipNote3.Text.Length - this._prevInputValue.SlipNoteName3.Length);
                tEdit_rs_SlipNote3.Text = this._beslipNote3Nm;
                tEdit_rs_SlipNote3.SelectionStart = startAf;
                this.tEdit_rs_SlipNote3.ValueChanged += new System.EventHandler(this.tEdit_rs_SlipNote3_ValueChanged);
            }

            this._beslipNote3Nm = tEdit_rs_SlipNote3.Text;
        }
        // --- ADD 2011/08/31 ----------<<<<<

        // ---------- ADD 2012/08/22 ---------->>>>>
        /// <summary>
        /// グリッドセル値変更イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>
        /// <br>Note		: グリッドセル値変更イベント処理。</br>
        /// <br>Programmer	: FSI菅原　要</br>
        /// <br>Date		: 2012/08/22</br>
        /// </remarks>
        private void uGrid_RedSlip_CellChange(object sender, CellEventArgs e)
        {
            Infragistics.Win.UltraWinGrid.UltraGridCell cell = uGrid_RedSlip.ActiveCell;
            if (cell == null) return;

            // セルが「仕入日」だった場合にチェック実行
            if (cell.Column.Key == _detailDataSet.RedSlipDetail.StockDateColumn.ColumnName)
            {
                // セルに入力されている値が無効値であるかチェック
                // （日付の値としてみた場合に無効であるかどうかチェック)
                if (cell.EditorResolved.IsValid == false)
                {
                    // 上記チェックで無効状態となっていた場合でも、日付として正常な値が取得できた場合は、
                    // 正常扱いとする
                    DateTime dt = (DateTime)cell.Value;
                    if (dt != DateTime.MinValue)
                    {
                        return;
                    }

                    // 無効値ならUNDOする
                    cell.CancelUpdate();
                }
            }
        }
        // ---------- ADD 2012/08/22 ----------<<<<<
        // --- ADD 2012/12/19 T.Miyamoto ------------------------------>>>>>
        /// <summary>
        /// 売上日付変更時イベント処理
        /// </summary>
        /// <param name="sender">対象オブジェクト</param>
        /// <param name="e">イベントパラメータクラス</param>
        /// <remarks>
        /// <br>Note		: 売上日付のチェック処理</br>
        /// </remarks>
        private void tDateEdit_rs_SalesDate_Leave(object sender, EventArgs e)
        {
            // 日付制御オプション(OPT-CPM0040)がオンの場合
            if (this._opt_SalesDateDCtrl == (int)Option.ON)
            {
                // 売上日付のチェック(システム日付より前の場合)
                if (tDateEdit_rs_SalesDate.GetDateTime().CompareTo(_custPtrRedSlipAcs.GetServerNowTime()) < 0 && !_SalesDateChecking)
                {
                    _SalesDateChecking = true;
                    TMsgDisp.Show(this, emErrorLevel.ERR_LEVEL_EXCLAMATION, this.Name, "売上日がシステム日付より前に設定されています。", -1, MessageBoxButtons.OK);
                    this.tDateEdit_rs_SalesDate.SetDateTime(_SalesDate);
                    this.tDateEdit_rs_SalesDate.Focus();
                    _SalesDateChecking = false;
                }
                else if (!_SalesDateChecking)
                {
                    _SalesDate = tDateEdit_rs_SalesDate.GetDateTime();
                }
            }
        }
        // --- ADD 2012/12/19 T.Miyamoto ------------------------------<<<<<
		// ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
		/// <summary>
		/// 残高集計クリックイベント処理
		/// </summary>
		/// <param name="sender">対象オブジェクト</param>
		/// <param name="e">イベントパラメータクラス</param>
		/// <remarks>
		/// <br>Note		: 残高集計クリックイベント処理を行う。</br>
		/// <br>Programmer	: wangf</br>
		/// <br>Date		: 2013/01/30</br>
        /// <br>Update Note : 2013/02/16 wangf </br>
        /// <br>            : 10801804-00、速度改善関連、Redmine#34513 サーバー負荷軽減の為、得意先電子元帳の改良の対応</br>
        /// <br>            : ①残高集計をファンクションキー「残高照会(F2)」と連動させる</br>
        /// <br>            : ②検索(F10)後に基本条件を変更時、メッセージを表示時に残高をクリアしないように変更</br>
        /// <br>            : ③検索(F10)後に条件変更が無い場合は、残高集計を実行しても再集計をしないように変更</br>
        /// <br>            : ④「残高集計」ボタンへのフォーカス遷移変更</br>
		/// </remarks>
		private void uButton_Balance_Click(object sender, EventArgs e)
		{
            // ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
            // 拠点コード、得意先コード、売上日が変更された場合、メッセージを表示する
            if (this._prevInputValue.SalesDateSt.CompareTo(this.tDateEdit_SalesDateSt.GetDateTime()) != 0
                || this._prevInputValue.SalesDateEd.CompareTo(this.tDateEdit_SalesDateEd.GetDateTime()) != 0
                || this._prevInputValue.CustomerCodeBalance != this.tNedit_CustomerCode.GetInt()
                //|| !this._prevInputValue.SectionCodeBalance.Equals(this.tEdit_SectionCodeAllowZero.Text.Trim())) // DEL wangf 2013/02/16 FOR Redmine#34513
                || !this._prevInputValue.SectionCodeBalance.PadLeft(2, '0').Equals(this.tEdit_SectionCodeAllowZero.Text.PadLeft(2, '0'))) // ADD wangf 2013/02/16 FOR Redmine#34513
            {
                TMsgDisp.Show(
                                this,
                                emErrorLevel.ERR_LEVEL_INFO,
                                this.Name,
                                "検索条件が変更されています。\r\n検索(F10)を実行後に残高集計を実行して下さい。",
                                -1,
                                MessageBoxButtons.OK);
                // ------------DEL wangf 2013/02/16 FOR Redmine#34513--------->>>>
                //this.uButton_Balance.Enabled = false;
                //this.BalanceClear();
                // ------------DEL wangf 2013/02/16 FOR Redmine#34513---------<<<<
                return;
            }
            // ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<
            // ------------ADD wangf 2013/02/16 FOR Redmine#34513--------->>>>
            else
            {
                if (!isFirstBalance) return;
                isFirstBalance = false;
            }
            // ------------ADD wangf 2013/02/16 FOR Redmine#34513---------<<<<
			Control errorControl;
			// 必須入力チェック
			if (!CheckItemValues(out errorControl))
			{
				// エラーコントロールに移動
				if (errorControl != null)
				{
					errorControl.Focus();
					return;
				}
			}
			_processingDialog = new SFCMN00299CA();
			SFCMN00299CA processingDialog = _processingDialog;
			try
			{
				processingDialog.Title = "抽出処理";
				processingDialog.Message = "現在、データ抽出中です．．．\r\nしばらくお待ちください";
				processingDialog.Show((Form)this.Parent);
				TimeSpan balanceSearchTimeSt = new TimeSpan(System.DateTime.Now.Ticks);
                //this._custPtrSearchAcs.WriteLogMessage(this._enterpriseCode, "得意先電子元帳", "残高集計　抽出開始", "PMKAU04000U", 0, _loginSectionCode); // DEL wangf 2013/01/30 FOR Redmine#34513
                // ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
                OperationHistoryLog operationHistoryLog = new OperationHistoryLog();
                operationHistoryLog.WriteOperationLog(this, LogDataKind.OperationLog, "PMKAU04000U", "得意先電子元帳", "", 0, 0, "残高集計　抽出開始", "");
                // ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<
				int st = this.SearchBalance();
				TimeSpan balanceSearchTimeEd = new TimeSpan(System.DateTime.Now.Ticks);
				TimeSpan balanceDuration = balanceSearchTimeSt.Subtract(balanceSearchTimeEd).Duration();
                // ------------DEL wangf 2013/01/30 FOR Redmine#34513--------->>>>
                //this._custPtrSearchAcs.WriteLogMessage(this._enterpriseCode, "得意先電子元帳"
                //                                       , "残高集計　抽出終了、" + balanceDuration.Seconds.ToString() + "秒"
                //                                       , "PMKAU04000U", 0, _loginSectionCode);
                // ------------DEL wangf 2013/01/30 FOR Redmine#34513---------<<<<
                // ------------ADD wangf 2013/01/30 FOR Redmine#34513--------->>>>
                operationHistoryLog.WriteOperationLog(this, LogDataKind.OperationLog, "PMKAU04000U"
                                                      , "得意先電子元帳", "", 0, 0
                                                      , "残高集計　抽出終了、" + balanceDuration.Seconds.ToString() + "秒", "");
                // ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<
				if ((int)ConstantManagement.MethodResult.ctFNC_NORMAL == st)
				{
					// 残高表示のデータテーブルからUIへ
					// ただし、残高表示データが複数返ってきた場合は出さない（得意先未設定の場合など）
					// 1件特定できた場合のみ表示
					if (this._detailDataSet.BalanceTotal.Rows.Count == 1)
					{
						if ((bool)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ExistsTotalColumn] == true)
						{
							// 税転嫁方式区分
							string consTaxLayMethod = this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ConsTaxLayMethodColumn.ColumnName].ToString();

							if ((bool)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.IsParentColumn.ColumnName])
							{
								//----------------------------------
								// 親の場合
								//----------------------------------
								// 前々々回残高
								this.uLabel_AcpOdrTtl2TmBfBlDmd.Text = ((long)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.AcpOdrTtl2TmBfBlDmdColumn.ColumnName]).ToString("#,##0;-#,##0;");
								// 前々回残高
								this.uLabel_LastTimeDemand.Text = ((long)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.LastTimeDemandColumn.ColumnName]).ToString("#,##0;-#,##0;");
								// 前回残高
								this.uLabel_AfCalDemandPrice.Text = ((long)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.AfCalDemandPriceColumn.ColumnName]).ToString("#,##0;-#,##0;");

								// 今回売上
								this.uLabel_ThisSalesPriceTotal.Text = (Double.Parse(this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ThisSalesPriceTotalColumn.ColumnName].ToString())).ToString("#,##0;-#,##0;");
								// 消費税(売)
								this.uLabel_OfsThisSalesTax.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.OfsThisSalesTaxColumn.ColumnName]).ToString("#,##0;-#,##0;");
								// 今回入金
								this.uLabel_ThisTimeDmdNrml.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ThisTimeDmdNrmlColumn.ColumnName]).ToString("#,##0;-#,##0;");
								// 請求残高
								this.uLabel_AfCalBlc.Text = ((double)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.AfCalBlcColumn.ColumnName]).ToString("#,##0;-#,##0;");
							}
							else
							{
								//----------------------------------
								// 子の場合
								//----------------------------------
								// 前々々回残高
								this.uLabel_AcpOdrTtl2TmBfBlDmd.Text = string.Empty;
								// 前々回残高
								this.uLabel_LastTimeDemand.Text = string.Empty;
								// 前回残高
								this.uLabel_AfCalDemandPrice.Text = string.Empty;

								// 今回売上
								this.uLabel_ThisSalesPriceTotal.Text = (Double.Parse(this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.ThisSalesPriceTotalColumn.ColumnName].ToString())).ToString("#,##0;-#,##0;");
								// 消費税(売)
								this.uLabel_OfsThisSalesTax.Text = string.Empty;
								// 今回入金
								this.uLabel_ThisTimeDmdNrml.Text = string.Empty;
								// 請求残高
								this.uLabel_AfCalBlc.Text = string.Empty;
							}
							// 請求範囲
							string addUpYearMonthText = string.Empty;
							DateTime stDate = (DateTime)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.DmdStDayColumn.ColumnName];
							DateTime edDate = (DateTime)this._detailDataSet.BalanceTotal.Rows[0][_detailDataSet.BalanceTotal.TotalDayColumn.ColumnName];

							if (stDate != DateTime.MinValue)
							{
								addUpYearMonthText += stDate.ToString("yyyy年MM月dd日");
							}
							else
							{
								addUpYearMonthText += new string(' ', 14);
							}
							addUpYearMonthText += "～";
							if (edDate != DateTime.MinValue)
							{
								addUpYearMonthText += edDate.ToString("yyyy年MM月dd日");
							}
							this.uLabel_AddUpYearMonth.Text = addUpYearMonthText;


							// 税転嫁方式
							switch (consTaxLayMethod)
							{
								case "0": this.uLabel_ConsTaxLayMethod.Text = "伝票単位"; break;
								case "1": this.uLabel_ConsTaxLayMethod.Text = "明細単位"; break;
								case "2": this.uLabel_ConsTaxLayMethod.Text = "請求親"; break;
								case "3": this.uLabel_ConsTaxLayMethod.Text = "請求子"; break;
								case "9": this.uLabel_ConsTaxLayMethod.Text = "非課税"; break;
								default: this.uLabel_ConsTaxLayMethod.Text = ""; break;
							}
						}
						else
						{
							// 空白表示
                            BalanceClear();
						}
					}
					else
					{
						// 空白表示
                        BalanceClear();
					}
                }
                else
                {
                    // 空白表示
                    BalanceClear();
                }
			}
			finally
			{
				processingDialog.Dispose();
			}
		}
		// ------------ADD wangf 2013/01/30 FOR Redmine#34513---------<<<<

        //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する----->>>>>
        /// <summary>
        /// 地区クリックイベント処理
        /// </summary>
        /// <param name="sender">sender</param>
        /// <param name="e">e</param>
        /// <remark>
        /// <br>Note		: メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する</br>
        /// <br>管理番号    : 11101427-00</br>
        /// <br>Programmer	: 鮑晶</br>
        /// <br>Date		: K2015/06/16</br>
        /// </remark>
        private void uButton_SalesAreaCdGuide_Click(object sender, EventArgs e)
        {
            try
            {   // ガイド起動
                UserGdBd userGdBd;
                UserGdHd userGdHd;
                Control nextCtrl = null;
                int userGdCodeArea = 21;
                int status = this._userGuideAcs.ExecuteGuid(this._enterpriseCode, out userGdHd, out userGdBd, userGdCodeArea);
                if (sender is Infragistics.Win.Misc.UltraButton)
                {
                    if (status == 0)
                    {
                        this.tEdit_SalesAreaNm.Text =userGdBd.GuideCode.ToString("D4")+":"+userGdBd.GuideName;
                        this._salesAreaCd = userGdBd.GuideCode;
                        this._salesAreaNm = userGdBd.GuideCode.ToString("D4") + ":" + userGdBd.GuideName;
                        if (this.ultraCheckEditor_salesArea_base.Checked)
                        {
                            nextCtrl = this.GetNextCommonControl("uButton_SalesAreaCdGuide");
                        }
                        else
                        {
                            nextCtrl = this.GetNextControl("uButton_SalesAreaCdGuide");
                        }
                    }
                }
                else {
                    if (status == 0)
                    {
                        this.tEdit_SalesAreaNm.Text = userGdBd.GuideCode.ToString("D4")+":"+userGdBd.GuideName;
                        this._salesAreaCd = userGdBd.GuideCode;
                        this._salesAreaNm = userGdBd.GuideCode.ToString("D4") + ":" + userGdBd.GuideName;
                        if (this.ultraCheckEditor_salesArea_base.Checked)
                        {
                            nextCtrl = this.GetNextCommonControl("uButton_SalesAreaCdGuide");
                        }
                        else
                        {
                            nextCtrl = this.GetNextControl("uButton_SalesAreaCdGuide");
                        }
                    }
                }
                    if (nextCtrl != null) 
                    {
                        nextCtrl.Focus();
                    }
            }
            catch 
            {
                this.tEdit_SalesAreaNm.Clear();
                this._salesAreaCd = 0;
                this._salesAreaNm = string.Empty;
            }
        }

        /// <summary>
        /// 地区テキスト処理
        /// </summary>
        /// <param name="sender">sender</param>
        /// <param name="e">e</param>
        /// <remark>
        /// <br>Note		: メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する</br>
        /// <br>管理番号    : 11101427-00</br>
        /// <br>Programmer	: 鮑晶</br>
        /// <br>Date		: K2015/06/16</br>
        /// </remark>
        private void tEdit_SalesAreaNm_Enter(object sender, EventArgs e)
        {
            this.tEdit_SalesAreaNm.Text = this._salesAreaCd == 0 ? string.Empty : this._salesAreaCd.ToString();
        }
        //----- ADD K2015/06/16 鮑晶 メイゴ㈱の個別開発依頼:得意先電子元帳「地区」と「分析コード」を追加する-----<<<<<

        // ---------- ADD 2016/01/21 Y.Wakita ---------->>>>>
        #region ■伝票種別コンボエディタ
        /// <summary>
        /// 伝票種別コンボエディタ ValueChangedイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>伝票種別の選択を変更時に、出荷状況の状態を変更する</remarks>
        private void tComboEditor_SalesSlipCd_ValueChanged(object sender, EventArgs e)
        {
            // 出荷状況
            if (this.tComboEditor_AddUpRemDiv.Visible)
            {
                this.tComboEditor_AddUpRemDiv.Enabled = false;
                this.tComboEditor_AddUpRemDiv.SelectedIndex = 0; // 0:全て

                if (this.tComboEditor_SalesSlipCd.SelectedIndex == CT_SELECTEDINDEX_ACCEPTANORDER ||
                    this.tComboEditor_SalesSlipCd.SelectedIndex == CT_SELECTEDINDEX_SHIPMENT)
                {
                    // 貸出または受注の場合
                    this.tComboEditor_AddUpRemDiv.Enabled = true;
                }
            }
        }
        // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2008/11/10 ADD
        /// <summary>
        /// 伝票種別コンボエディタ SelectionChangeCommittedイベント
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        /// <remarks>伝票種別の選択を変更時に、出荷状況の状態を変更する</remarks>
        private void tComboEditor_SalesSlipCd_SelectionChangeCommitted(object sender, EventArgs e)
        {
            // 出荷状況
            if (this.tComboEditor_AddUpRemDiv.Visible)
            {
                this.tComboEditor_AddUpRemDiv.Enabled = false;
                this.tComboEditor_AddUpRemDiv.SelectedIndex = 0; // 0:全て

                if (this.tComboEditor_SalesSlipCd.SelectedIndex == CT_SELECTEDINDEX_ACCEPTANORDER ||
                    this.tComboEditor_SalesSlipCd.SelectedIndex == CT_SELECTEDINDEX_SHIPMENT)
                {
                    // 貸出または受注の場合
                    this.tComboEditor_AddUpRemDiv.Enabled = true;
                }
            }
        }
        #endregion

        private void tComboEditor_SalesSlipCd_SelectionChangeCommitted_1(object sender, EventArgs e)
        {

        }
        // ---------- ADD 2016/01/21 Y.Wakita ----------<<<<<

        // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　------->>>>>
        #region[仮想プリンタのポート元に戻す]
        /// 仮想プリンタのポート元に戻す
        /// </summary>
        /// <remarks>
        /// </remarks>
        private void PrinterPortNameRecovery()
        {

            // 仮想プリンタのポート元に戻す
            IntPtr hPrinter = IntPtr.Zero;
            IntPtr pPrinterInfo = IntPtr.Zero;
            PRINTER_DEFAULTS def;
            PRINTER_INFO_2 pi = new PRINTER_INFO_2();            
            try
            {
                int needed2;
                int temp;
                // プリンターのデータ型、環境、初期化データ、およびアクセス権を指定
                def = new PRINTER_DEFAULTS();
                def.pDatatype = null;
                def.pDevMode = IntPtr.Zero;
                def.DesiredAccess = 0xf000C;

                // 仮想プリンタのハンドルを取得する
                int n = OpenPrinter(CT_PRINTER, ref hPrinter, def);
                if (n == 0) return;
                // バッファに必要なバイト数を取得する
                GetPrinter(hPrinter, 2, IntPtr.Zero, 0, out needed2);
                // メモリを割り当てる
                pPrinterInfo = Marshal.AllocHGlobal(needed2);
                // 詳細なプリンタ情報を取得
                bool result = GetPrinter(hPrinter, CT_Printer_Level2, (IntPtr)pPrinterInfo, needed2, out temp);
                if (!result) return;
                // PRINTER_INFO_2型にマーシャリングする
                pi = (PRINTER_INFO_2)Marshal.PtrToStructure(pPrinterInfo, typeof(PRINTER_INFO_2));
                // プリンタ設定：デフォルトポートに戻す
                pi.pPortName = CT_DEFALUT_PORTNAME;
                Marshal.StructureToPtr(pi, pPrinterInfo, true);
                // プリンタ設定情報を反映
                result = SetPrinter(hPrinter, CT_Printer_Level2, pPrinterInfo, 0);
                if (!result) return;
                // プリンタを閉じる
                ClosePrinter(hPrinter);
                Marshal.FreeHGlobal(pPrinterInfo);
                // 追加のローカルポート名
                string portName = Path.Combine(_sWorkFolderPath, _portName);
                def = new PRINTER_DEFAULTS();
                def.pDatatype = null;
                def.pDevMode = IntPtr.Zero;
                def.DesiredAccess = 1;
                hPrinter = IntPtr.Zero;
                pPrinterInfo = IntPtr.Zero;
                // 追加のローカルポートのハンドルを取得する
                n = OpenPrinter(CT_LOCALPORT, ref hPrinter, def);
                if (n == 0) return;
                if (!portName.EndsWith(CT_ZERO)) portName += CT_ZERO;
                uint size = (uint)(portName.Length * 2);
                pPrinterInfo = Marshal.AllocHGlobal((int)size);
                Marshal.Copy(portName.ToCharArray(), 0, pPrinterInfo, portName.Length);

                uint needed;
                uint xcvResult;
                // 追加のローカルポートを削除
                result = XcvData(hPrinter, CT_DELETEPORT, pPrinterInfo, size, IntPtr.Zero, 0, out needed, out xcvResult);
                if (!result) return;
                Marshal.FreeHGlobal(pPrinterInfo);
                ClosePrinter(hPrinter);
            }
            catch (Exception)
            {
                Marshal.FreeHGlobal(pPrinterInfo);
                ClosePrinter(hPrinter);
                // 警告メッセージを出す
                Form form = new Form();
                form.TopMost = true;
                DialogResult dialogResult = TMsgDisp.Show(
                    form,
                    emErrorLevel.ERR_LEVEL_EXCLAMATION,
                    "todo",
                    string.Format(MESS_PRINTERPORT_ERR, 2),
                    0,
                    MessageBoxButtons.OK,
                    MessageBoxDefaultButton.Button1);
                form.TopMost = false; 
            }

        }
        #endregion

        #region [仮想プリンタのポート変更]
        /// <summary>
        /// 仮想プリンタのポート変更
        /// </summary>
        /// <remarks>
        /// </remarks>
        private void PrinterPortNameChange()
        {
            // ポート名
            string portName = string.Empty;
            IntPtr hPrinter = IntPtr.Zero;
            IntPtr pPrinterInfo = IntPtr.Zero;
            PRINTER_DEFAULTS def;
            PRINTER_INFO_2 pi;
            try
            {
                // ポート名
                portName = Path.Combine(_sWorkFolderPath, _portName);
                //ローカルポートのデータ型、環境、初期化データ、およびアクセス権を指定
                def = new PRINTER_DEFAULTS();
                def.pDatatype = null;
                def.pDevMode = IntPtr.Zero;
                def.DesiredAccess = 1;

                // ローカルポートのハンドルを取得する
                int n = OpenPrinter(CT_LOCALPORT, ref hPrinter, def);
                if (n == 0) return;

                if (!portName.EndsWith(CT_ZERO)) portName += CT_ZERO;
                uint size = (uint)(portName.Length * 2);
                pPrinterInfo = Marshal.AllocHGlobal((int)size);
                Marshal.Copy(portName.ToCharArray(), 0, pPrinterInfo, portName.Length);

                uint needed;
                uint xcvResult;
                // ローカルポートを追加
                bool result = XcvData(hPrinter, CT_ADDPORT, pPrinterInfo, size, IntPtr.Zero, 0, out needed, out xcvResult);
                if (!result) return;
                Marshal.FreeHGlobal(pPrinterInfo);
                ClosePrinter(hPrinter);

                pi = new PRINTER_INFO_2();
                hPrinter = IntPtr.Zero;
                pPrinterInfo = IntPtr.Zero;
                int needed2;
                int temp;

                // プリンターのデータ型、環境、初期化データ、およびアクセス権を指定
                def = new PRINTER_DEFAULTS();
                def.pDatatype = null;
                def.pDevMode = IntPtr.Zero;
                def.DesiredAccess = 0xf000C;

                // 仮想プリンタのハンドルを取得する
                n = OpenPrinter(CT_PRINTER, ref hPrinter, def);
                if (n == 0) return;
                // バッファに必要なバイト数を取得する
                GetPrinter(hPrinter, CT_Printer_Level2, IntPtr.Zero, 0, out needed2);
                // メモリを割り当てる
                pPrinterInfo = Marshal.AllocHGlobal(needed2);
                // 詳細なプリンタ情報を取得
                result = GetPrinter(hPrinter, CT_Printer_Level2, (IntPtr)pPrinterInfo, needed2, out temp);
                if (!result) return;
                // PRINTER_INFO_2型にマーシャリングする
                pi = (PRINTER_INFO_2)Marshal.PtrToStructure(pPrinterInfo, typeof(PRINTER_INFO_2));

                // プリンタ設定：ポート名
                pi.pPortName = portName;
                Marshal.StructureToPtr(pi, pPrinterInfo, true);
                // プリンター内のすべての印刷ジョブを削除
                result = SetPrinter(hPrinter, CT_Printer_Level, IntPtr.Zero, PRINTER_CONTROL_PURGE);
                if (!result) return;
                // プリンタ設定情報を反映
                result = SetPrinter(hPrinter, CT_Printer_Level2, pPrinterInfo, 0);
                if (!result) return;
            }
            catch (Exception)
            {
                Marshal.FreeHGlobal(pPrinterInfo);
                ClosePrinter(hPrinter);
                // 警告メッセージを出す
                Form form = new Form();
                form.TopMost = true;
                DialogResult dialogResult = TMsgDisp.Show(
                    form,
                    emErrorLevel.ERR_LEVEL_EXCLAMATION,
                    "todo",
                    string.Format(MESS_PRINTERPORT_ERR, 1),
                    0,
                    MessageBoxButtons.OK,
                    MessageBoxDefaultButton.Button1);
                form.TopMost = false; 
            }
        }
        #endregion

        #region[ファイル保存ダイアログ表示を制御 ※今回の電子帳簿対応ではダイアログ表示を使用しない]
        /// <summary>
        /// ファイル保存ダイアログ表示を制御 ※今回の電子帳簿対応ではダイアログ表示を使用しない
        /// </summary>
        /// <remarks>
        /// </remarks>
        private void GetFileDialogDisplay()
        {
            try
            {
                // ファイル保存ダイアログ表示を制御
                if (UserSettingController.ExistUserSetting(Path.Combine(ConstantManagement_ClientDirectory.UISettings, XML_PDFPRINTERSETTINGENABLE)))
                {
                    this._fileDialogDisplay = true;
                }
                else
                {
                    this._fileDialogDisplay = false;
                }
            }
            catch
            {
                this._fileDialogDisplay = false;
            }
        }
        #endregion

        # region[電子帳簿連携サポート設定情報を取得]
        /// <summary>
        /// 電子帳簿連携サポート設定情報を取得
        /// </summary>
        /// <returns>電子帳簿連携サポート設定情報を取得</returns>
        /// <remarks> 
        /// </remarks>
        private EBooksLinkSetInfo GetEBooksLinkSetInfo()
        {
            EBooksLinkSetInfo eBooksLinkSetInfo = new EBooksLinkSetInfo();
            // 電子帳簿受け渡しフォルダ
            string sEBooksFolder = System.IO.Path.Combine(ConstantManagement_ClientDirectory.NSCurrentDirectory, ctEBooksFolderPath);
            // 取引先リスト受け渡しフォルダ
            string sCustomFolder = System.IO.Path.Combine(ConstantManagement_ClientDirectory.NSCurrentDirectory, ctCustomFolderPath);
            //  電子帳簿連携サポート設定情報XMLファイル存在の判断           
            if (UserSettingController.ExistUserSetting(Path.Combine(ConstantManagement_ClientDirectory.UISettings, ctXML_EBOOKLINK_FILE_NAME)))
            {
                try
                {
                    eBooksLinkSetInfo = UserSettingController.DeserializeUserSetting<EBooksLinkSetInfo>(Path.Combine(ConstantManagement_ClientDirectory.UISettings, ctXML_EBOOKLINK_FILE_NAME));
                    // 電子帳簿受け渡しフォルダ 未設定の場合、
                    if (string.IsNullOrEmpty(eBooksLinkSetInfo.EBooksFolder))
                    {
                        eBooksLinkSetInfo.EBooksFolder = sEBooksFolder;
                    }
                    // 取引先リスト受け渡しフォルダ 未設定の場合、
                    if (string.IsNullOrEmpty(eBooksLinkSetInfo.CustomFolder))
                    {
                        eBooksLinkSetInfo.CustomFolder = sCustomFolder;
                    }

                }
                catch (System.InvalidOperationException)
                {
                    eBooksLinkSetInfo.EBooksFolder = sEBooksFolder;
                    eBooksLinkSetInfo.CustomFolder = sCustomFolder;
                }
            }
            else 
            {
                eBooksLinkSetInfo.EBooksFolder = sEBooksFolder;
                eBooksLinkSetInfo.CustomFolder = sCustomFolder;
            }

            return eBooksLinkSetInfo;
        }

        #endregion

        #region[得意先電帳連携PDFファイル出力]
        /// <summary>
        /// 得意先電帳連携PDFファイル出力
        /// </summary>
        /// <param name="keyList"></param>
        /// <param name="startKbn"></param>
        /// <param name="paraScmFlag"></param>
        /// <param name="nomalSalesSlipPrintFlag"></param>
        /// <param name="customerInfo"></param>
        private void pdfOutPut_EbooksLink(List<SalesSlipPrintCndtn.SalesSlipKey> keyList, int startKbn, bool paraScmFlag, int nomalSalesSlipPrintFlag, Dictionary<string, CustomerInfo> customerInfo)
        {
            eBooksOutputSetting eBookSetting = this._settingForm.geteBooksOutputSetting();
            // 初期化処理
            // 伝票印刷情報設定画面インスタンス生成
            DCCMN02000UA printDisp = new DCCMN02000UA();
            _pdfOutputSlipKey = new List<SalesSlipPrintCndtn.SalesSlipKey>();
            // プリンタ設定フラグ：プリンタ設定に対して通常動作するか仮想プリンタ動作するかを指定
            int iOutPutMode = Convert.ToInt32(eBookSetting.OutputMode);

            //排他対象
            System.Threading.Mutex mutex = new System.Threading.Mutex(false, CT_NAME_EBOOK);
            //電子帳簿出力制御(売上伝票入力/得意先電子元帳/BLP自動回答を排他)
            int count = 0;
            while (!mutex.WaitOne(0, false))
            {
                if (count++ >= CT_MUTEX_WAIT_MAX)
                {
                    Form form = new Form();
                    form.TopMost = true;
                    DialogResult dialogResult = TMsgDisp.Show(
                    form,
                    emErrorLevel.ERR_LEVEL_STOPDISP,
                    "",
                    MESS_PRINTERMUTEX_ERR,
                    0,
                    MessageBoxButtons.OK,
                    MessageBoxDefaultButton.Button1);
                    form.TopMost = false;
                    return;
                }
                Thread.Sleep(1000);
            }

            try
            {
                // 電帳処理の場合、tempフォルダ初期化
                if (!Directory.Exists(_sWorkFolderPath))
                {
                    Directory.CreateDirectory(_sWorkFolderPath);
                }
                else
                {
                    foreach (string strFile in Directory.GetFiles(_sWorkFolderPath))
                    {
                        File.Delete(strFile);
                    }
                }

                // ファイル保存ダイアログが表示しない時、作業フォルダ\Renameを初期化
                if (!this._fileDialogDisplay)
                {
                    if (!Directory.Exists(_sRenameFolderPath))
                    {
                        Directory.CreateDirectory(_sRenameFolderPath);
                    }
                    else
                    {
                        foreach (string strFile in Directory.GetFiles(_sRenameFolderPath))
                        {
                            File.Delete(strFile);
                        }
                    }
                }

                // 電帳PDF出力
                for (int i = 0; i < keyList.Count; i++)
                {
                    CustomerInfo tempCustomerInfo = customerInfo[keyList[i].SalesSlipNum];
                    _portName = string.Empty;
                    // プリンタ設定フラグ：プリンタ設定に対して通常動作するか仮想プリンタ動作するかを指定
                    if ((iOutPutMode == 0) || ((iOutPutMode == 2) && (tempCustomerInfo.DmOutCode == 0)))
                    {
                        // 伝票区分(30:売上)のみ出力
                        if (keyList[i].AcptAnOdrStatus == 30)
                        {
                            // 電子帳簿出力
                            CustPrtSlipSearchAcs.PDFPrinterStatus = (int)PDFPrint.EBook;
                            Process WindowController = new Process();
                            ProcessStartInfo startInfo = new ProcessStartInfo();
                            // PDF出力
                            startInfo.FileName = _sVirtualPrinterControllerPath;
                            {
                                // パス
                                string filePath = CT_STRSPLIT + _sWorkFolderPath + CT_STRSPLIT;
                                // 得意先コード
                                string customerCd = tempCustomerInfo.CustomerCode.ToString(CT_CUSTOMERCDFOMART);
                                // 得意先名
                                string cuntomerNm = CT_STRSPLIT + EditText(tempCustomerInfo.CustomerSnm) + CT_STRSPLIT;
                                // 伝票区分
                                string acptAnOdrStatusNm = CT_NAME_SALE;
                                // 伝票番号
                                string salesSlipNo = keyList[i].SalesSlipNum;
                                // 待機時間
                                string waitTime = eBookSetting.PDFPrinterWait.ToString();
                                // 起動元
                                string startFrom = CT_MODE;

                                startInfo.Arguments = filePath + " " + customerCd + " "
                                                    + cuntomerNm + " " + acptAnOdrStatusNm + " " + salesSlipNo + " "
                                                    + waitTime + " " + startFrom;
                                WindowController.StartInfo = startInfo;
                                if (!this._fileDialogDisplay)
                                {
                                    // PDFファイル名「<得意先コード>_<得意先名称>_<伝票区分名>_<伝票番号>_<出力日時>.pdf」
                                    _portName = string.Format(CT_PORTNAME, customerCd, EditText(tempCustomerInfo.CustomerSnm), acptAnOdrStatusNm, salesSlipNo);
                                }
                                // PDF出力監視処理起動
                                WindowController.Start();
                            }
                            try
                            {
                                //ファイル保存ダイアログが表示しない時、仮想プリンタのポート変更
                                if (!this._fileDialogDisplay)
                                {
                                    PrinterPortNameChange();
                                }
                                SalesSlipPrintCndtn.SalesSlipKey tempKey = new SalesSlipPrintCndtn.SalesSlipKey(); 　　　　　　　  // 伝票印刷用Keyインスタンス生成
                                List<SalesSlipPrintCndtn.SalesSlipKey> tempKeyList = new List<SalesSlipPrintCndtn.SalesSlipKey>(); // 伝票印刷用KeyListインスタンス生成
                                tempKey = new SalesSlipPrintCndtn.SalesSlipKey();
                                tempKey.AcptAnOdrStatus = keyList[i].AcptAnOdrStatus;
                                tempKey.SalesSlipNum = keyList[i].SalesSlipNum;
                                tempKeyList.Add(tempKey);

                                // 印刷情報パラメータセット
                                SalesSlipPrintCndtn salesSlipPrintCndtn = new SalesSlipPrintCndtn();
                                salesSlipPrintCndtn.EnterpriseCode = this._enterpriseCode;
                                salesSlipPrintCndtn.SalesSlipKeyList = tempKeyList;
                                salesSlipPrintCndtn.RemoteSalesSlipPrintFlag = 1;                            // リモート伝票発行しない
                                if (startKbn == 0)
                                {
                                    salesSlipPrintCndtn.ReissueDiv = true;                                   // 伝票再発行                            
                                    // PDF出力
                                    printDisp.ShowDialog(salesSlipPrintCndtn, !(_settingForm.UserSetting.ReisssuePrintDialog));
                                }
                                else if (startKbn == 1)
                                {
                                    salesSlipPrintCndtn.ReissueDiv = false;                                   // 赤伝=false
                                    salesSlipPrintCndtn.NomalSalesSlipPrintFlag = nomalSalesSlipPrintFlag;
                                    salesSlipPrintCndtn.ScmFlg = paraScmFlag;
                                    // PDF出力
                                    printDisp.ShowDialog(salesSlipPrintCndtn, !(_settingForm.UserSetting.RedPrintDialog));
                                }

                                // PDF出力監視処理終了後、続け
                                WindowController.WaitForExit();
                                _pdfOutputSlipKey.Add(keyList[i]);
                            }
                            finally
                            {
                                // ファイル保存ダイアログが表示しない時、仮想プリンタのポート元に戻す
                                if (!this._fileDialogDisplay)
                                {
                                    PrinterPortNameRecovery();
                                }
                            }
                        }
                    }
                }
            }
            finally
            {
                //ミューテックスを解放する
                mutex.ReleaseMutex();
            }
        }
        #endregion

        #region[インデックスファイル作成]
        /// <summary>
        /// インデックスファイル作成
        /// </summary>
        /// <param name="keyList">伝票リスト</param>        
        /// <param name="eBooksFileFolderXmlInfo">XMLファイル</param>        
        /// <param name="denchoDXIndexCSVEntityList">インデックスcsvファイルリスト</param>
        /// <remarks>
        /// </remarks>
        public void MakeIndexFile(List<SalesSlipPrintCndtn.SalesSlipKey> keyList,EBooksLinkSetInfo eBooksFileFolderXmlInfo, out List<DenchoDXIndexCSVEntity> denchoDXIndexCSVEntityList)
        {
            denchoDXIndexCSVEntityList = new List<DenchoDXIndexCSVEntity>();
            try
            {
                // ファイル名リスト
                Dictionary<string, ArrayList> pdfFileNmList = new Dictionary<string, ArrayList>();

                // PDF受け渡し
                // ファイルコピー
                DirectoryInfo dir;
                if (this._fileDialogDisplay)
                {
                    // 作業フォルダから取得
                    dir = new DirectoryInfo(_sWorkFolderPath);
                }
                else
                {
                    // 作業フォルダ\Renameから取得
                    dir = new DirectoryInfo(_sRenameFolderPath);
                }

                FileSystemInfo[] fileinfo = dir.GetFileSystemInfos();
                foreach (FileSystemInfo i in fileinfo)
                {
                    if (i is DirectoryInfo)
                    {
                        continue;
                    }
                    else
                    {
                        string[] subFlNm = i.FullName.Split(CT_SPLITCHAR);
                        if (pdfFileNmList.ContainsKey(subFlNm[3]))
                        {
                            pdfFileNmList[subFlNm[3]].Add(i.Name);
                        }
                        else
                        {
                            ArrayList al = new ArrayList();
                            al.Add(i.Name);
                            pdfFileNmList.Add(subFlNm[3], al);
                        }
                    }
                }

                if (pdfFileNmList.Count == 0) return;
                int status;
                foreach (SalesSlipPrintCndtn.SalesSlipKey key in keyList)
                {
                    SalesSlipWork salesSlipWork = null;
                    List<SalesDetailWork> salesDetailList = null;
                    List<SalesDetailWork> addUpSrcDetailList = null;
                    SearchDepsitMain depsitMain = null;
                    SearchDepositAlw depositAlw = null;
                    List<StockSlipWork> stockSlipWorkList = null;
                    List<StockDetailWork> stockDetailWorkList = null;
                    List<AddUpOrgStockDetailWork> addUpSrcStockDetailWorkList = null;
                    List<StockWork> stockWorkList = null;
                    List<AcceptOdrCarWork> acceptOdrCarList = null;
                    // 伝票番号と受注ステータスによって、伝票表示グリッドから伝票履歴情報を取得
                    DataRow[] SalesRow = null;
                    string filter = string.Format("{0}='{1}' AND {2}='{3}'",
                                _detailDataSet.SalesList.SalesSlipNumColumn.ColumnName, key.SalesSlipNum,
                                _detailDataSet.SalesList.AcptAnOdrStatusColumn.ColumnName, key.AcptAnOdrStatus);
                    // 伝票毎の行番号でソートする
                    string sort = string.Format("{0} ASC", _detailDataSet.SalesList.SalesSlipNumColumn.ColumnName);
                    SalesRow = _detailDataSet.SalesList.Select(filter, sort);

                    // 伝票表示グリッドからデータ取得
                    if (SalesRow.Length > 0)
                    {
                        // 売上データ
                        int iReadMode = (int)readModeEnum.Normal;

                        if (!string.IsNullOrEmpty(this.GetStringFromObject(SalesRow[0][_detailDataSet.SalesList.HistoryDivNameColumn])))
                        {
                            // 売上履歴データ
                            iReadMode = (int)readModeEnum.History;
                        }

                        if (_logicalDelDiv == 0)
                        {
                            // 通常
                            status = _custPtrRedSlipAcs.ReadDBDataProc2(ConstantManagement.LogicalMode.GetData0,
                                        this._enterpriseCode, key.AcptAnOdrStatus,
                                        key.SalesSlipNum,
                                        out salesSlipWork,
                                        out salesDetailList,
                                        out addUpSrcDetailList,
                                        out depsitMain,
                                        out depositAlw,
                                        out stockSlipWorkList,
                                        out stockDetailWorkList,
                                        out addUpSrcStockDetailWorkList,
                                        out stockWorkList,
                                        out acceptOdrCarList,
                                        iReadMode);
                        }
                        else
                        {
                            // 論理削除
                            status = _custPtrRedSlipAcs.ReadDBDataProc2(ConstantManagement.LogicalMode.GetData1,
                                        this._enterpriseCode, key.AcptAnOdrStatus,
                                        key.SalesSlipNum,
                                        out salesSlipWork,
                                        out salesDetailList,
                                        out addUpSrcDetailList,
                                        out depsitMain,
                                        out depositAlw,
                                        out stockSlipWorkList,
                                        out stockDetailWorkList,
                                        out addUpSrcStockDetailWorkList,
                                        out stockWorkList,
                                        out acceptOdrCarList,
                                        iReadMode);
                        }

                        if (status == (int)ConstantManagement.DB_Status.ctDB_NORMAL)
                        {
                            // 売上データ
                            // インデックスファイル作成用エンティティ
                            DenchoDXIndexCSVEntity denchoDXIndexCSVEntity = new DenchoDXIndexCSVEntity();
                            // システム区分
                            denchoDXIndexCSVEntity.Mcd = DenchoDXIndexCSVEntity.EMcdType.PMNS;
                            // 取引先コード(自社)	
                            denchoDXIndexCSVEntity.Blcustomercd = LoginInfoAcquisition.EnterpriseCode;
                            // 納品書
                            denchoDXIndexCSVEntity.Doctype = DenchoDXIndexCSVEntity.EDocType.DeliverySlip;
                            // 取引先コード	
                            denchoDXIndexCSVEntity.Customercd = salesSlipWork.CustomerCode.ToString(CT_CUSTOMERCDFOMART);
                            // 取引先名称	
                            denchoDXIndexCSVEntity.Customername = EditText(salesSlipWork.CustomerSnm);
                            // 書類番号	
                            denchoDXIndexCSVEntity.Docnumber = key.SalesSlipNum;
                            // 得意先の転嫁方式：請求先/請求子の時
                            if (salesSlipWork.ConsTaxLayMethod == (int)ConsTaxLayMethod.DemandParentLay ||
                                salesSlipWork.ConsTaxLayMethod == (int)ConsTaxLayMethod.DemandChildLay)
                            {
                                //取引金額合計(税抜き)	
                                denchoDXIndexCSVEntity.Price_tax_excluded = (decimal)salesSlipWork.SalesTotalTaxExc;
                                //取引金額合計(税込み)	
                                denchoDXIndexCSVEntity.Price_tax_included = (decimal)salesSlipWork.SalesTotalTaxExc;
                                //消費税金額合計	
                                denchoDXIndexCSVEntity.Total_tax = 0;
                            }
                            else
                            {
                                //取引金額合計(税込み)	
                                denchoDXIndexCSVEntity.Price_tax_included = (decimal)salesSlipWork.SalesTotalTaxInc;
                                //取引金額合計(税抜き)	
                                denchoDXIndexCSVEntity.Price_tax_excluded = (decimal)salesSlipWork.SalesTotalTaxExc;
                                //消費税金額合計	
                                denchoDXIndexCSVEntity.Total_tax = (decimal)(salesSlipWork.SalesTotalTaxInc - salesSlipWork.SalesTotalTaxExc);
                            }
                            // 備考
                            denchoDXIndexCSVEntity.Memo = salesSlipWork.SlipNote;
                            // 登録番号(発行者)
                            denchoDXIndexCSVEntity.Aojcorporatenumber = string.Empty;
                            // 発行者名称
                            try
                            {
                                CompanyInfAcs companyInfAcs = new CompanyInfAcs();
                                CompanyInf companyInf = null;
                                companyInfAcs.Read(out companyInf, LoginInfoAcquisition.EnterpriseCode);
                                // 発行者名称
                                denchoDXIndexCSVEntity.Companyname = companyInf.CompanyName1;
                            }
                            catch (Exception)
                            {
                                // 発行者名称
                                denchoDXIndexCSVEntity.Companyname = string.Empty;
                            }


                            // 発行拠点コード
                            denchoDXIndexCSVEntity.Sectioncd = Convert.ToUInt64(salesSlipWork.ResultsAddUpSecCd);

                            // 拠点情報を取得
                            SecInfoSet sectionInfo;
                            int st = this._secInfoSetAcs.Read(out sectionInfo, this._enterpriseCode, salesSlipWork.ResultsAddUpSecCd);
                            if (st == (int)ConstantManagement.DB_Status.ctDB_NORMAL && sectionInfo.LogicalDeleteCode == 0)
                            {
                                denchoDXIndexCSVEntity.Sectionname = sectionInfo.SectionGuideNm.TrimEnd();
                            }
                            else
                            {
                                denchoDXIndexCSVEntity.Sectionname = string.Empty;
                            }

                            //通貨単位
                            denchoDXIndexCSVEntity.Currencyunit = DenchoDXIndexCSVEntity.ECurrencyUnitType.JPY;

                            // 税率分金額取得
                            decimal price_taxrate1_excluded = decimal.Zero;
                            decimal price_taxrate1_included = decimal.Zero;
                            decimal tax1 = decimal.Zero;
                            decimal price_taxrate2_excluded = decimal.Zero;
                            decimal price_taxrate2_included = decimal.Zero;
                            decimal tax2 = decimal.Zero;
                            decimal price_taxrate3_excluded = decimal.Zero;
                            decimal price_taxrate3_included = decimal.Zero;
                            decimal tax3 = decimal.Zero;
                            GetPriceByRate(salesSlipWork, salesDetailList,
                                out price_taxrate1_excluded, out price_taxrate1_included, out tax1,
                                out price_taxrate2_excluded, out price_taxrate2_included, out tax2,
                                out price_taxrate3_excluded, out price_taxrate3_included, out tax3);

                            // 税率(1)	
                            denchoDXIndexCSVEntity.Taxrate1 = 100;
                            // 税率(1)対象金額合計(税抜き)
                            denchoDXIndexCSVEntity.Price_taxrate1_excluded = price_taxrate1_excluded;
                            // 税率(1)対象金額合計(税込み)
                            denchoDXIndexCSVEntity.Price_taxrate1_included = price_taxrate1_included;
                            // 税額(1)
                            denchoDXIndexCSVEntity.Tax1 = tax1;
                            // 税率(2)	
                            denchoDXIndexCSVEntity.Taxrate2 = 80;
                            // 税率(2)対象金額合計(税抜き)
                            denchoDXIndexCSVEntity.Price_taxrate2_excluded = price_taxrate2_excluded;
                            // 税率(2)対象金額合計(税込み)
                            denchoDXIndexCSVEntity.Price_taxrate2_included = price_taxrate2_included;
                            // 税額(2)
                            denchoDXIndexCSVEntity.Tax2 = tax2;
                            // 税率(3)	
                            denchoDXIndexCSVEntity.Taxrate3 = 0;
                            // 税率(3)対象金額合計(税抜き)
                            denchoDXIndexCSVEntity.Price_taxrate3_excluded = price_taxrate3_excluded;
                            // 税率(3)対象金額合計(税込み)
                            denchoDXIndexCSVEntity.Price_taxrate3_included = price_taxrate3_included;
                            // 税額(3)
                            denchoDXIndexCSVEntity.Tax3 = tax3;

                            if (pdfFileNmList.Count > 0)
                            {
                                ArrayList al = pdfFileNmList[key.SalesSlipNum];
                                if (al.Count == 1)
                                {
                                    // 同一伝票が1件PDF生成のみ
                                    // ファイル名	 
                                    denchoDXIndexCSVEntity.Filename = (string)al[0];
                                    // 取引年月日
                                    int idx = ((string)al[0]).LastIndexOf(CT_SPLITSTR);
                                    string dateStr = ((string)al[0]).Substring(idx + 1, 14);
                                    DateTime dateTime = DateTime.ParseExact(dateStr, CT_DATETIMEFOMART, System.Globalization.CultureInfo.CurrentCulture);
                                    denchoDXIndexCSVEntity.Transactiondate = dateTime;
                                    // 取引時間	
                                    denchoDXIndexCSVEntity.Transactiontime = dateTime;
                                    denchoDXIndexCSVEntityList.Add(denchoDXIndexCSVEntity);
                                }
                                else
                                {
                                    // 同一伝票が複数件PDF生成
                                    foreach (string fileName in al)
                                    {
                                        DenchoDXIndexCSVEntity csvEntity = DenchoDXIndexCSVEntityClone(denchoDXIndexCSVEntity);
                                        // ファイル名
                                        csvEntity.Filename = fileName;
                                        // 取引年月日
                                        int idx = fileName.LastIndexOf(CT_SPLITSTR);
                                        string dateStr = fileName.Substring(idx + 1, 14);
                                        DateTime dateTime = DateTime.ParseExact(dateStr, CT_DATETIMEFOMART, System.Globalization.CultureInfo.CurrentCulture);
                                        csvEntity.Transactiondate = dateTime;
                                        // 取引時間
                                        csvEntity.Transactiontime = dateTime;
                                        denchoDXIndexCSVEntityList.Add(csvEntity);
                                    }
                                }
                            }
                        }
                    }
                }
                DenchoDXIndexCSV denchoDXIndexCSV = new DenchoDXIndexCSV(denchoDXIndexCSVEntityList);
                string pathCSV = dir + string.Format(CT_EBOOKSFLPATH, LoginInfoAcquisition.EnterpriseCode, DateTime.Now.ToString(CT_DATETIMEFOMART));
                denchoDXIndexCSV.MakeIndexCSV(pathCSV);
                // ファイルコピー
                fileinfo = dir.GetFileSystemInfos();
                foreach (FileSystemInfo i in fileinfo)
                {
                    if (i is DirectoryInfo)
                    {
                        continue;
                    }
                    else
                    {
                        File.Copy(i.FullName, Path.Combine(eBooksFileFolderXmlInfo.EBooksFolder, i.Name));
                    }
                }
            }
            catch
            {
                // 既存処理影響なし
            }
                                
        }

        /// <summary>
        /// Clone処理
        /// </summary>
        /// <param name="denchoDXIndexCSVEntity">インデックスcsvファイル</param>
        /// <remarks>
        /// </remarks>
        private DenchoDXIndexCSVEntity DenchoDXIndexCSVEntityClone(DenchoDXIndexCSVEntity denchoDXIndexCSVEntity)
        {
            DenchoDXIndexCSVEntity csvEntity = new DenchoDXIndexCSVEntity();
            //システム区分
            csvEntity.Mcd = denchoDXIndexCSVEntity.Mcd;
            //取引先コード(自社)	
            csvEntity.Blcustomercd = denchoDXIndexCSVEntity.Blcustomercd;
            //ファイル名	
            csvEntity.Filename = denchoDXIndexCSVEntity.Filename;
            //書類分類	
            csvEntity.Doctype = denchoDXIndexCSVEntity.Doctype;
            //取引先コード	
            csvEntity.Customercd = denchoDXIndexCSVEntity.Customercd;
            //取引先名称	
            csvEntity.Customername = denchoDXIndexCSVEntity.Customername;
            //書類番号	
            csvEntity.Docnumber = denchoDXIndexCSVEntity.Docnumber;
            //取引年月日	
            csvEntity.Transactiondate = denchoDXIndexCSVEntity.Transactiondate;
            //取引時間
            csvEntity.Transactiontime = denchoDXIndexCSVEntity.Transactiontime;
            //取引金額合計(税込み)	
            csvEntity.Price_tax_included = denchoDXIndexCSVEntity.Price_tax_included;
            //取引金額合計(税抜き)	
            csvEntity.Price_tax_excluded = denchoDXIndexCSVEntity.Price_tax_excluded;
            //消費税金額合計	
            csvEntity.Total_tax = denchoDXIndexCSVEntity.Total_tax;
            // 備考
            csvEntity.Memo = denchoDXIndexCSVEntity.Memo;
            // 登録番号(発行者)
            csvEntity.Aojcorporatenumber = denchoDXIndexCSVEntity.Aojcorporatenumber;
            // 発行者名称
            csvEntity.Companyname = denchoDXIndexCSVEntity.Companyname;
            // 発行拠点コード
            csvEntity.Sectioncd = denchoDXIndexCSVEntity.Sectioncd;
            // 発行拠点名称
            csvEntity.Sectionname = denchoDXIndexCSVEntity.Sectionname;
            //通貨単位
            csvEntity.Currencyunit = denchoDXIndexCSVEntity.Currencyunit;
            // 税率(1)	
            csvEntity.Taxrate1 = denchoDXIndexCSVEntity.Taxrate1;
            // 税率(1)対象金額合計(税抜き)
            csvEntity.Price_taxrate1_excluded = denchoDXIndexCSVEntity.Price_taxrate1_excluded;
            // 税率(1)対象金額合計(税込み)
            csvEntity.Price_taxrate1_included = denchoDXIndexCSVEntity.Price_taxrate1_included;
            // 税額(1)
            csvEntity.Tax1 = denchoDXIndexCSVEntity.Tax1;
            // 税率(2)	
            csvEntity.Taxrate2 = denchoDXIndexCSVEntity.Taxrate2;
            // 税率(2)対象金額合計(税抜き)
            csvEntity.Price_taxrate2_excluded = denchoDXIndexCSVEntity.Price_taxrate2_excluded;
            // 税率(2)対象金額合計(税込み)
            csvEntity.Price_taxrate2_included = denchoDXIndexCSVEntity.Price_taxrate2_included;
            // 税額(2)
            csvEntity.Tax2 = denchoDXIndexCSVEntity.Tax2;
            // 税率(3)	
            csvEntity.Taxrate3 = denchoDXIndexCSVEntity.Taxrate3;
            // 税率(3)対象金額合計(税抜き)
            csvEntity.Price_taxrate3_excluded = denchoDXIndexCSVEntity.Price_taxrate3_excluded;
            // 税率(3)対象金額合計(税込み)
            csvEntity.Price_taxrate3_included = denchoDXIndexCSVEntity.Price_taxrate3_included;
            // 税額(3)
            csvEntity.Tax3 = denchoDXIndexCSVEntity.Tax3;
            return csvEntity;
        }

        /// <summary>
        /// 税率１～税率３の金額を算出
        /// </summary>
        /// <param name="salesDetailWorkList">売上明細データリスト</param>
        /// <param name="salesSlipWork">売上伝票データリスト</param>
        /// <param name="price_taxrate1_excluded">税率(1)対象金額合計(税抜き)</param>
        /// <param name="price_taxrate1_included">税率(1)対象金額合計(税込み)</param>
        /// <param name="tax1">税額(1)</param>
        /// <param name="price_taxrate2_excluded">税率(2)対象金額合計(税抜き)</param>
        /// <param name="price_taxrate2_included">税率(2)対象金額合計(税込み)</param>
        /// <param name="tax2">税額(2)</param>
        /// <param name="price_taxrate3_excluded">税率(3)対象金額合計(税抜き)</param>
        /// <param name="price_taxrate3_included">税率(3)対象金額合計(税込み)</param>
        /// <param name="tax3">税額(3)</param>
        /// <remarks>
        /// </remarks>
        private void GetPriceByRate(SalesSlipWork salesSlipWork, List<SalesDetailWork> salesDetailWorkList,
                        out decimal price_taxrate1_excluded, out decimal price_taxrate1_included, out decimal tax1,
                        out decimal price_taxrate2_excluded, out decimal price_taxrate2_included, out decimal tax2,
                        out decimal price_taxrate3_excluded, out decimal price_taxrate3_included, out decimal tax3)
        {
            // 初期化
            price_taxrate1_excluded = decimal.Zero;
            price_taxrate1_included = decimal.Zero;
            tax1 = 0;
            price_taxrate2_excluded = decimal.Zero;
            price_taxrate2_included = decimal.Zero;
            tax2 = 0;
            price_taxrate3_excluded = decimal.Zero;
            price_taxrate3_included = decimal.Zero;
            tax3 = 0;

            // 非課税の場合
            if (salesSlipWork.ConsTaxLayMethod == (int)ConsTaxLayMethod.TaxExempt)
            {
                price_taxrate3_excluded = (decimal)salesSlipWork.SalesTotalTaxExc;
                price_taxrate3_included = (decimal)salesSlipWork.SalesTotalTaxInc;
            }
            else
            {
                decimal price_excluded = (decimal)salesSlipWork.SalesTotalTaxExc;
                decimal price_included = (decimal)salesSlipWork.SalesTotalTaxInc;
                decimal tax = (decimal)salesSlipWork.SalesSubtotalTax;
                decimal price_taxNone = decimal.Zero;
                foreach (SalesDetailWork detailWork in salesDetailWorkList)
                {
                    if (detailWork.TaxationDivCd == (int)TaxationCode.TaxNone)
                    {
                        // 非課税金額算出
                        price_taxNone = price_taxNone + detailWork.SalesMoneyTaxExc;
                    }
                }
                if (salesSlipWork.ConsTaxRate == RATE10)
                {
                    //得意先の転嫁方式：請求先/請求子の時
                    if (salesSlipWork.ConsTaxLayMethod == (int)ConsTaxLayMethod.DemandParentLay ||
                        salesSlipWork.ConsTaxLayMethod == (int)ConsTaxLayMethod.DemandChildLay)
                    {
                        price_taxrate1_excluded = price_excluded - price_taxNone;
                        price_taxrate1_included = price_taxrate1_excluded;
                        tax1 = 0;
                    }
                    else
                    {
                        price_taxrate1_excluded = price_excluded - price_taxNone;
                        price_taxrate1_included = price_included - price_taxNone;
                        tax1 = tax;
                    }

                }
                if (salesSlipWork.ConsTaxRate == RATE8)
                {
                    //得意先の転嫁方式：請求先/請求子の時
                    if (salesSlipWork.ConsTaxLayMethod == (int)ConsTaxLayMethod.DemandParentLay ||
                        salesSlipWork.ConsTaxLayMethod == (int)ConsTaxLayMethod.DemandChildLay)
                    {
                        price_taxrate2_excluded = price_excluded - price_taxNone;
                        price_taxrate2_included = price_taxrate2_excluded;
                        tax2 = 0;
                    }
                    else
                    {
                        price_taxrate2_excluded = price_excluded - price_taxNone;
                        price_taxrate2_included = price_included - price_taxNone;
                        tax2 = tax;
                    }
                }
                price_taxrate3_excluded = price_taxNone;
                price_taxrate3_included = price_taxNone;
            }
        }
        #endregion

        #region[電子帳簿ログ出力]
        /// <summary>
        /// 電子帳簿ログ出力
        /// </summary>
        /// <param name="stDateTime">システム時間</param>
        /// <param name="denchoDXIndexCSVEntityList">インデックスcsvファイルリスト</param>
        /// <remarks>
        /// </remarks>
        private void OutEBooksLog(DateTime stDateTime, List<DenchoDXIndexCSVEntity> denchoDXIndexCSVEntityList)
        {
            System.IO.StreamWriter writer = null;
            try
            {
                // 端末番号取得
                PosTerminalMgAcs posTerminalMgAcs = new PosTerminalMgAcs();
                int cashRegisterNo;
                posTerminalMgAcs.GetCashRegisterNo(out cashRegisterNo, LoginInfoAcquisition.EnterpriseCode);

                string sLogFolderPath = Path.Combine(ConstantManagement_ClientDirectory.NSCurrentDirectory, CT_LOGFOLDER);
                // フォルダ作成
                if (!Directory.Exists(sLogFolderPath))
                {
                    DirectoryInfo di = Directory.CreateDirectory(sLogFolderPath);
                }

                string logPath = Path.Combine(sLogFolderPath, string.Format(CT_LOGFILENM, DateTime.Now.ToString(CT_YMDFOMART), cashRegisterNo.ToString()));
                writer = new System.IO.StreamWriter(logPath, true, System.Text.Encoding.Default);

                // 出力日時
                writer.Write(stDateTime.ToString(CT_LOGDATETIMEFOMART));
                writer.Write(Environment.NewLine);

                // 件数
                writer.Write(string.Format(CT_LOGCOUNT, denchoDXIndexCSVEntityList.Count.ToString()));
                writer.Write(Environment.NewLine);

                // ファイル名
                foreach (DenchoDXIndexCSVEntity work in denchoDXIndexCSVEntityList)
                {
                    writer.Write(work.Filename);
                    writer.Write(Environment.NewLine);
                }

                OperationHistoryLog operationHistoryLog = new OperationHistoryLog();
                string opLogMsg = string.Format(CT_OPLOGMSG, denchoDXIndexCSVEntityList.Count.ToString(), logPath);
                operationHistoryLog.WriteOperationLog(this, LogDataKind.OperationLog, ASSID_PMKAU04000U, PGNAME_STR, string.Empty, OPERATIONCODE_EBOOKS, 0, opLogMsg, string.Empty);

            }
            catch
            {
            }
            finally
            {
                if (writer != null)
                {
                    writer.Close();
                }
            }
        }
        #endregion

        #region[禁止文字を削除]
        /// <summary>
        /// 禁止文字を削除
        /// </summary>
        /// <param name="strValue"></param>
        /// <returns></returns>
        private string EditText(string strValue)
        {
            string outValue = string.Empty;
            try
            {
                if (!strValue.Equals(string.Empty))
                {
                    // 禁止文字の置換
                    strValue = strValue.Replace(@"\", "");
                    strValue = strValue.Replace(":", "");
                    strValue = strValue.Replace("/", "");
                    strValue = strValue.Replace("*", "");
                    strValue = strValue.Replace("?", "");
                    strValue = strValue.Replace("\"", "");
                    strValue = strValue.Replace("<", "");
                    strValue = strValue.Replace(">", "");
                    strValue = strValue.Replace("|", "");
                    strValue = strValue.Replace("_", "");
                }
                outValue = strValue;
            }

            catch (Exception)
            {
                //　影響無し
            }

            return outValue;
        }
        #endregion

        #region[印刷スプーラー 情報]
        /// <summary>
        /// 印刷スプーラー API 構造体「プリンターの既定のデータ型、環境、初期化データ」
        /// </summary>
        [StructLayout(LayoutKind.Sequential)]
        private class PRINTER_DEFAULTS
        {
            public string pDatatype;
            public IntPtr pDevMode;
            public int DesiredAccess;
        }

        /// <summary>
        /// 印刷スプーラー API 構造体「プリンターの詳細情報」
        /// </summary>
        [StructLayout(LayoutKind.Sequential)]
        private struct PRINTER_INFO_2
        {
            [MarshalAs(UnmanagedType.LPStr)]
            public string pServerName;
            [MarshalAs(UnmanagedType.LPStr)]
            public string pPrinterName;
            [MarshalAs(UnmanagedType.LPStr)]
            public string pShareName;
            [MarshalAs(UnmanagedType.LPStr)]
            public string pPortName;
            [MarshalAs(UnmanagedType.LPStr)]
            public string pDriverName;
            [MarshalAs(UnmanagedType.LPStr)]
            public string pComment;
            [MarshalAs(UnmanagedType.LPStr)]
            public string pLocation;
            public IntPtr pDevMode;
            [MarshalAs(UnmanagedType.LPStr)]
            public string pSepFile;
            [MarshalAs(UnmanagedType.LPStr)]
            public string pPrintProcessor;
            [MarshalAs(UnmanagedType.LPStr)]
            public string pDatatype;
            [MarshalAs(UnmanagedType.LPStr)]
            public string pParameters;
            public IntPtr pSecurityDescriptor;
            public Int32 Attributes;
            public Int32 Priority;
            public Int32 DefaultPriority;
            public Int32 StartTime;
            public Int32 UntilTime;
            public Int32 Status;
            public Int32 cJobs;
            public Int32 AveragePPM;
        }
        #endregion

        #region[印刷ジョブ関数API]
        [DllImport("winspool.drv", SetLastError = true)]
        private static extern bool GetPrinter(IntPtr hPrinter,
            int dwLevel, IntPtr pPrinter, int cbBuf, out int pcbNeeded);
        [DllImport("winspool.drv", SetLastError = true)]
        private static extern bool ClosePrinter(IntPtr hPrinter);
        [DllImport("winspool.drv", CharSet = CharSet.Ansi, SetLastError = true)]
        private static extern bool SetPrinter(IntPtr hPrinter, int Level, IntPtr
        pPrinter, int Command);
        [DllImport("winspool.drv", EntryPoint = "XcvDataW", SetLastError = true)]
        private static extern bool XcvData(
            IntPtr hXcv,
            [MarshalAs(UnmanagedType.LPWStr)] string pszDataName,
            IntPtr pInputData,
            uint cbInputData,
            IntPtr pOutputData,
            uint cbOutputData,
            out uint pcbOutputNeeded,
            out uint pwdStatus);
        [DllImport("winspool.drv", EntryPoint = "OpenPrinterA", SetLastError = true)]
        private static extern int OpenPrinter(
            string pPrinterName,
            ref IntPtr phPrinter,
            PRINTER_DEFAULTS pDefault);
        #endregion
        // --------ADD 2022/05/05 仰亮亮 納品書電子帳簿連携対応　-------<<<<<
    }
    // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  m.suzuki 2009/01/15 ADD
    # region [グリッドカラムポジションFix制御クラス]
    /// <summary>
    /// グリッドカラムポジションFix制御クラス
    /// </summary>
    internal class GridColPosFixController
    {
        private Infragistics.Win.UltraWinGrid.UltraGrid _targetGrid;
        private Dictionary<string, int> _fixPosDic;
        private Dictionary<string, bool> _fixDic;

        # region [プロパティ]
        /// <summary>
        /// 対象グリッド
        /// </summary>
        public Infragistics.Win.UltraWinGrid.UltraGrid TargetGrid
        {
            get { return _targetGrid; }
            set
            {
                // 対象グリッドが既に設定済みならばイベントハンドラの登録を削除する
                if (_targetGrid != null)
                {
                    _targetGrid.BeforeColPosChanged -= Grid_BeforeColPosChanged;
                    _targetGrid.AfterColPosChanged -= Grid_AfterColPosChanged;
                }

                // グリッド
                _targetGrid = value;

                // グリッドイベント
                _targetGrid.BeforeColPosChanged += Grid_BeforeColPosChanged;
                _targetGrid.AfterColPosChanged += Grid_AfterColPosChanged;

                // 内部使用するフィールド初期化
                _fixPosDic = new Dictionary<string, int>();
                _fixDic = new Dictionary<string, bool>();
            }
        }
        # endregion

        # region [コンストラクタ]
        /// <summary>
        /// デフォルトコンストラクタ
        /// </summary>
        public GridColPosFixController()
        {
        }
        /// <summary>
        /// コンストラクタ
        /// </summary>
        public GridColPosFixController(Infragistics.Win.UltraWinGrid.UltraGrid targetGrid)
            : this()
        {
            this.TargetGrid = targetGrid;
        }
        # endregion

        # region [対象のグリッドに追加するイベント処理]
        /// <summary>
        /// カラムポジション変更前イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void Grid_BeforeColPosChanged(object sender, Infragistics.Win.UltraWinGrid.BeforeColPosChangedEventArgs e)
        {
            // Moved以外は無視する
            if (e.PosChanged != Infragistics.Win.UltraWinGrid.PosChanged.Moved) return;

            if (_fixDic.ContainsKey(e.ColumnHeaders[0].Column.Key))
            {
                if (_fixDic[e.ColumnHeaders[0].Column.Key] != e.ColumnHeaders[0].Fixed)
                {
                    if (e.ColumnHeaders[0].Fixed == true)
                    {
                        int fixedColCount = 0;
                        foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn col in _targetGrid.DisplayLayout.Bands[0].Columns)
                        {
                            if (!col.Hidden && col.Header.Fixed) fixedColCount++;
                        }

                        // 変更前のポジションを退避する(fixedになっているカラム数は除く)
                        _fixPosDic[e.ColumnHeaders[0].Column.Key] = e.ColumnHeaders[0].VisiblePosition - fixedColCount;
                    }
                }
            }
            else
            {
                int fixedColCount = 0;
                foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn col in _targetGrid.DisplayLayout.Bands[0].Columns)
                {
                    if (!col.Hidden && col.Header.Fixed) fixedColCount++;
                }

                // 追加して次回以降の変更で処理
                _fixDic.Add(e.ColumnHeaders[0].Column.Key, false);
                _fixPosDic.Add(e.ColumnHeaders[0].Column.Key, e.ColumnHeaders[0].VisiblePosition - fixedColCount);
            }
        }
        /// <summary>
        /// カラムポジション変更後イベント処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void Grid_AfterColPosChanged(object sender, Infragistics.Win.UltraWinGrid.AfterColPosChangedEventArgs e)
        {
            if (e.PosChanged != Infragistics.Win.UltraWinGrid.PosChanged.Moved) return;

            if (_fixDic.ContainsKey(e.ColumnHeaders[0].Column.Key) && _fixDic[e.ColumnHeaders[0].Column.Key] != e.ColumnHeaders[0].Fixed)
            {
                // Fix状態が変更された
                if (e.ColumnHeaders[0].Fixed == false)
                {
                    int fixedColCount = 0;
                    foreach (Infragistics.Win.UltraWinGrid.UltraGridColumn col in _targetGrid.DisplayLayout.Bands[0].Columns)
                    {
                        if (!col.Hidden && col.Header.Fixed) fixedColCount++;
                    }

                    // ポジションを戻す（fixedになっているカラム数を考慮する）
                    e.ColumnHeaders[0].VisiblePosition = _fixPosDic[e.ColumnHeaders[0].Column.Key] + fixedColCount;

                    // 戻すことで他のカラムに影響する
                    List<string> dicKeyList = new List<string>();
                    foreach (string colKey in _fixPosDic.Keys)
                    {
                        if (_fixPosDic[colKey] > _fixPosDic[e.ColumnHeaders[0].Column.Key])
                        {
                            dicKeyList.Add(colKey);
                        }
                    }
                    foreach (string colKey in dicKeyList)
                    {
                        _fixPosDic[colKey]--;
                    }
                }

                // 前回退避値更新
                _fixDic[e.ColumnHeaders[0].Column.Key] = e.ColumnHeaders[0].Fixed;
            }
        }
        # endregion
    }
    # endregion
    // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  m.suzuki 2009/01/15 ADD
}