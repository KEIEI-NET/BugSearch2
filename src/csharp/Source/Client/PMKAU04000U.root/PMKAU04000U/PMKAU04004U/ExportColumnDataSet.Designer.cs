//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.5485
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Windows.Forms {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ExportColumnDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ExportColumnDataSet : global::System.Data.DataSet {
        
        private SalesListDataTable tableSalesList;
        
        private SalesDetailDataTable tableSalesDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ExportColumnDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ExportColumnDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SalesList"] != null)) {
                    base.Tables.Add(new SalesListDataTable(ds.Tables["SalesList"]));
                }
                if ((ds.Tables["SalesDetail"] != null)) {
                    base.Tables.Add(new SalesDetailDataTable(ds.Tables["SalesDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesListDataTable SalesList {
            get {
                return this.tableSalesList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesDetailDataTable SalesDetail {
            get {
                return this.tableSalesDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ExportColumnDataSet cln = ((ExportColumnDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SalesList"] != null)) {
                    base.Tables.Add(new SalesListDataTable(ds.Tables["SalesList"]));
                }
                if ((ds.Tables["SalesDetail"] != null)) {
                    base.Tables.Add(new SalesDetailDataTable(ds.Tables["SalesDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSalesList = ((SalesListDataTable)(base.Tables["SalesList"]));
            if ((initTable == true)) {
                if ((this.tableSalesList != null)) {
                    this.tableSalesList.InitVars();
                }
            }
            this.tableSalesDetail = ((SalesDetailDataTable)(base.Tables["SalesDetail"]));
            if ((initTable == true)) {
                if ((this.tableSalesDetail != null)) {
                    this.tableSalesDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ExportColumnDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ExportColumnDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSalesList = new SalesListDataTable();
            base.Tables.Add(this.tableSalesList);
            this.tableSalesDetail = new SalesDetailDataTable();
            base.Tables.Add(this.tableSalesDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ExportColumnDataSet ds = new ExportColumnDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SalesListRowChangeEventHandler(object sender, SalesListRowChangeEvent e);
        
        public delegate void SalesDetailRowChangeEventHandler(object sender, SalesDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesListDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSalesDate;
            
            private global::System.Data.DataColumn columnSalesSlipNum;
            
            private global::System.Data.DataColumn columnSalesSlipCdName;
            
            private global::System.Data.DataColumn columnSalesEmployeeNm;
            
            private global::System.Data.DataColumn columnSalesTotalTaxExc;
            
            private global::System.Data.DataColumn columnConsumeTax;
            
            private global::System.Data.DataColumn columnGrossProfit;
            
            private global::System.Data.DataColumn columnCategoryNo;
            
            private global::System.Data.DataColumn columnModelFullName;
            
            private global::System.Data.DataColumn columnFirstEntryDate;
            
            private global::System.Data.DataColumn columnSearchFrameNo;
            
            private global::System.Data.DataColumn columnFullModel;
            
            private global::System.Data.DataColumn columnSlipNote;
            
            private global::System.Data.DataColumn columnSlipNote2;
            
            private global::System.Data.DataColumn columnSlipNote3;
            
            private global::System.Data.DataColumn columnFrontEmployeeNm;
            
            private global::System.Data.DataColumn columnSalesInputName;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerSnm;
            
            private global::System.Data.DataColumn columnPartySaleSlipNum;
            
            private global::System.Data.DataColumn columnCarMngCode;
            
            private global::System.Data.DataColumn columnAcceptAnOrderNo;
            
            private global::System.Data.DataColumn columnShipmSalesSlipNum;
            
            private global::System.Data.DataColumn columnUoeRemark1;
            
            private global::System.Data.DataColumn columnUoeRemark2;
            
            private global::System.Data.DataColumn columnSectionGuideNm;
            
            private global::System.Data.DataColumn columnColorName1;
            
            private global::System.Data.DataColumn columnTrimName;
            
            private global::System.Data.DataColumn columnCustSlipNo;
            
            private global::System.Data.DataColumn columnAddUpADate;
            
            private global::System.Data.DataColumn columnAccRecDivCdName;
            
            private global::System.Data.DataColumn columnDebitNoteDiv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesListDataTable() {
                this.TableName = "SalesList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipNumColumn {
                get {
                    return this.columnSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipCdNameColumn {
                get {
                    return this.columnSalesSlipCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesEmployeeNmColumn {
                get {
                    return this.columnSalesEmployeeNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesTotalTaxExcColumn {
                get {
                    return this.columnSalesTotalTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsumeTaxColumn {
                get {
                    return this.columnConsumeTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfitColumn {
                get {
                    return this.columnGrossProfit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryNoColumn {
                get {
                    return this.columnCategoryNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelFullNameColumn {
                get {
                    return this.columnModelFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstEntryDateColumn {
                get {
                    return this.columnFirstEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SearchFrameNoColumn {
                get {
                    return this.columnSearchFrameNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullModelColumn {
                get {
                    return this.columnFullModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNoteColumn {
                get {
                    return this.columnSlipNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNote2Column {
                get {
                    return this.columnSlipNote2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNote3Column {
                get {
                    return this.columnSlipNote3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrontEmployeeNmColumn {
                get {
                    return this.columnFrontEmployeeNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesInputNameColumn {
                get {
                    return this.columnSalesInputName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerSnmColumn {
                get {
                    return this.columnCustomerSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartySaleSlipNumColumn {
                get {
                    return this.columnPartySaleSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarMngCodeColumn {
                get {
                    return this.columnCarMngCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcceptAnOrderNoColumn {
                get {
                    return this.columnAcceptAnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmSalesSlipNumColumn {
                get {
                    return this.columnShipmSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UoeRemark1Column {
                get {
                    return this.columnUoeRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UoeRemark2Column {
                get {
                    return this.columnUoeRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionGuideNmColumn {
                get {
                    return this.columnSectionGuideNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColorName1Column {
                get {
                    return this.columnColorName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrimNameColumn {
                get {
                    return this.columnTrimName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustSlipNoColumn {
                get {
                    return this.columnCustSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddUpADateColumn {
                get {
                    return this.columnAddUpADate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccRecDivCdNameColumn {
                get {
                    return this.columnAccRecDivCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteDivColumn {
                get {
                    return this.columnDebitNoteDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesListRow this[int index] {
                get {
                    return ((SalesListRow)(this.Rows[index]));
                }
            }
            
            public event SalesListRowChangeEventHandler SalesListRowChanging;
            
            public event SalesListRowChangeEventHandler SalesListRowChanged;
            
            public event SalesListRowChangeEventHandler SalesListRowDeleting;
            
            public event SalesListRowChangeEventHandler SalesListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesListRow(SalesListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesListRow AddSalesListRow(
                        string SalesDate, 
                        string SalesSlipNum, 
                        string SalesSlipCdName, 
                        string SalesEmployeeNm, 
                        string SalesTotalTaxExc, 
                        string ConsumeTax, 
                        string GrossProfit, 
                        string CategoryNo, 
                        string ModelFullName, 
                        string FirstEntryDate, 
                        string SearchFrameNo, 
                        string FullModel, 
                        string SlipNote, 
                        string SlipNote2, 
                        string SlipNote3, 
                        string FrontEmployeeNm, 
                        string SalesInputName, 
                        string CustomerCode, 
                        string CustomerSnm, 
                        string PartySaleSlipNum, 
                        string CarMngCode, 
                        string AcceptAnOrderNo, 
                        string ShipmSalesSlipNum, 
                        string UoeRemark1, 
                        string UoeRemark2, 
                        string SectionGuideNm, 
                        string ColorName1, 
                        string TrimName, 
                        string CustSlipNo, 
                        string AddUpADate, 
                        string AccRecDivCdName, 
                        string DebitNoteDiv) {
                SalesListRow rowSalesListRow = ((SalesListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SalesDate,
                        SalesSlipNum,
                        SalesSlipCdName,
                        SalesEmployeeNm,
                        SalesTotalTaxExc,
                        ConsumeTax,
                        GrossProfit,
                        CategoryNo,
                        ModelFullName,
                        FirstEntryDate,
                        SearchFrameNo,
                        FullModel,
                        SlipNote,
                        SlipNote2,
                        SlipNote3,
                        FrontEmployeeNm,
                        SalesInputName,
                        CustomerCode,
                        CustomerSnm,
                        PartySaleSlipNum,
                        CarMngCode,
                        AcceptAnOrderNo,
                        ShipmSalesSlipNum,
                        UoeRemark1,
                        UoeRemark2,
                        SectionGuideNm,
                        ColorName1,
                        TrimName,
                        CustSlipNo,
                        AddUpADate,
                        AccRecDivCdName,
                        DebitNoteDiv};
                rowSalesListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesListRow);
                return rowSalesListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesListDataTable cln = ((SalesListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSalesDate = base.Columns["SalesDate"];
                this.columnSalesSlipNum = base.Columns["SalesSlipNum"];
                this.columnSalesSlipCdName = base.Columns["SalesSlipCdName"];
                this.columnSalesEmployeeNm = base.Columns["SalesEmployeeNm"];
                this.columnSalesTotalTaxExc = base.Columns["SalesTotalTaxExc"];
                this.columnConsumeTax = base.Columns["ConsumeTax"];
                this.columnGrossProfit = base.Columns["GrossProfit"];
                this.columnCategoryNo = base.Columns["CategoryNo"];
                this.columnModelFullName = base.Columns["ModelFullName"];
                this.columnFirstEntryDate = base.Columns["FirstEntryDate"];
                this.columnSearchFrameNo = base.Columns["SearchFrameNo"];
                this.columnFullModel = base.Columns["FullModel"];
                this.columnSlipNote = base.Columns["SlipNote"];
                this.columnSlipNote2 = base.Columns["SlipNote2"];
                this.columnSlipNote3 = base.Columns["SlipNote3"];
                this.columnFrontEmployeeNm = base.Columns["FrontEmployeeNm"];
                this.columnSalesInputName = base.Columns["SalesInputName"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerSnm = base.Columns["CustomerSnm"];
                this.columnPartySaleSlipNum = base.Columns["PartySaleSlipNum"];
                this.columnCarMngCode = base.Columns["CarMngCode"];
                this.columnAcceptAnOrderNo = base.Columns["AcceptAnOrderNo"];
                this.columnShipmSalesSlipNum = base.Columns["ShipmSalesSlipNum"];
                this.columnUoeRemark1 = base.Columns["UoeRemark1"];
                this.columnUoeRemark2 = base.Columns["UoeRemark2"];
                this.columnSectionGuideNm = base.Columns["SectionGuideNm"];
                this.columnColorName1 = base.Columns["ColorName1"];
                this.columnTrimName = base.Columns["TrimName"];
                this.columnCustSlipNo = base.Columns["CustSlipNo"];
                this.columnAddUpADate = base.Columns["AddUpADate"];
                this.columnAccRecDivCdName = base.Columns["AccRecDivCdName"];
                this.columnDebitNoteDiv = base.Columns["DebitNoteDiv"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
                this.columnSalesSlipNum = new global::System.Data.DataColumn("SalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipNum);
                this.columnSalesSlipCdName = new global::System.Data.DataColumn("SalesSlipCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipCdName);
                this.columnSalesEmployeeNm = new global::System.Data.DataColumn("SalesEmployeeNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesEmployeeNm);
                this.columnSalesTotalTaxExc = new global::System.Data.DataColumn("SalesTotalTaxExc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTotalTaxExc);
                this.columnConsumeTax = new global::System.Data.DataColumn("ConsumeTax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumeTax);
                this.columnGrossProfit = new global::System.Data.DataColumn("GrossProfit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfit);
                this.columnCategoryNo = new global::System.Data.DataColumn("CategoryNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryNo);
                this.columnModelFullName = new global::System.Data.DataColumn("ModelFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelFullName);
                this.columnFirstEntryDate = new global::System.Data.DataColumn("FirstEntryDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstEntryDate);
                this.columnSearchFrameNo = new global::System.Data.DataColumn("SearchFrameNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSearchFrameNo);
                this.columnFullModel = new global::System.Data.DataColumn("FullModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullModel);
                this.columnSlipNote = new global::System.Data.DataColumn("SlipNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote);
                this.columnSlipNote2 = new global::System.Data.DataColumn("SlipNote2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote2);
                this.columnSlipNote3 = new global::System.Data.DataColumn("SlipNote3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote3);
                this.columnFrontEmployeeNm = new global::System.Data.DataColumn("FrontEmployeeNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrontEmployeeNm);
                this.columnSalesInputName = new global::System.Data.DataColumn("SalesInputName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesInputName);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerSnm = new global::System.Data.DataColumn("CustomerSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerSnm);
                this.columnPartySaleSlipNum = new global::System.Data.DataColumn("PartySaleSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartySaleSlipNum);
                this.columnCarMngCode = new global::System.Data.DataColumn("CarMngCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarMngCode);
                this.columnAcceptAnOrderNo = new global::System.Data.DataColumn("AcceptAnOrderNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptAnOrderNo);
                this.columnShipmSalesSlipNum = new global::System.Data.DataColumn("ShipmSalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmSalesSlipNum);
                this.columnUoeRemark1 = new global::System.Data.DataColumn("UoeRemark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUoeRemark1);
                this.columnUoeRemark2 = new global::System.Data.DataColumn("UoeRemark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUoeRemark2);
                this.columnSectionGuideNm = new global::System.Data.DataColumn("SectionGuideNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionGuideNm);
                this.columnColorName1 = new global::System.Data.DataColumn("ColorName1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColorName1);
                this.columnTrimName = new global::System.Data.DataColumn("TrimName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrimName);
                this.columnCustSlipNo = new global::System.Data.DataColumn("CustSlipNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustSlipNo);
                this.columnAddUpADate = new global::System.Data.DataColumn("AddUpADate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddUpADate);
                this.columnAccRecDivCdName = new global::System.Data.DataColumn("AccRecDivCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccRecDivCdName);
                this.columnDebitNoteDiv = new global::System.Data.DataColumn("DebitNoteDiv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteDiv);
                this.columnSalesDate.Caption = "伝票日付";
                this.columnSalesSlipNum.Caption = "伝票番号";
                this.columnSalesSlipCdName.Caption = "区分";
                this.columnSalesEmployeeNm.Caption = "担当者名";
                this.columnSalesTotalTaxExc.Caption = "金額";
                this.columnConsumeTax.Caption = "消費税";
                this.columnGrossProfit.Caption = "粗利";
                this.columnCategoryNo.Caption = "類別番号";
                this.columnModelFullName.Caption = "車種";
                this.columnFirstEntryDate.Caption = "年式";
                this.columnSearchFrameNo.Caption = "車台No";
                this.columnFullModel.Caption = "型式";
                this.columnSlipNote.Caption = "備考１";
                this.columnSlipNote2.Caption = "備考２";
                this.columnSlipNote3.Caption = "備考３";
                this.columnFrontEmployeeNm.Caption = "受注者";
                this.columnSalesInputName.Caption = "発行者";
                this.columnCustomerCode.Caption = "得意先コード";
                this.columnCustomerSnm.Caption = "得意先名";
                this.columnPartySaleSlipNum.Caption = "指示書(仮伝)番号";
                this.columnCarMngCode.Caption = "管理No";
                this.columnAcceptAnOrderNo.Caption = "計上元受注№";
                this.columnShipmSalesSlipNum.Caption = "計上元出荷№";
                this.columnUoeRemark1.Caption = "ＵＯＥリマーク１";
                this.columnUoeRemark2.Caption = "ＵＯＥリマーク２";
                this.columnSectionGuideNm.Caption = "拠点";
                this.columnColorName1.Caption = "カラー名称";
                this.columnTrimName.Caption = "トリム名称";
                this.columnCustSlipNo.Caption = "得意先伝票番号";
                this.columnAddUpADate.Caption = "計上日";
                this.columnAccRecDivCdName.Caption = "売掛区分名";
                this.columnDebitNoteDiv.Caption = "赤伝区分";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesListRow NewSalesListRow() {
                return ((SalesListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesListRowChanged != null)) {
                    this.SalesListRowChanged(this, new SalesListRowChangeEvent(((SalesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesListRowChanging != null)) {
                    this.SalesListRowChanging(this, new SalesListRowChangeEvent(((SalesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesListRowDeleted != null)) {
                    this.SalesListRowDeleted(this, new SalesListRowChangeEvent(((SalesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesListRowDeleting != null)) {
                    this.SalesListRowDeleting(this, new SalesListRowChangeEvent(((SalesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesListRow(SalesListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExportColumnDataSet ds = new ExportColumnDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSalesDate;
            
            private global::System.Data.DataColumn columnSalesSlipNum;
            
            private global::System.Data.DataColumn columnSalesRowNo;
            
            private global::System.Data.DataColumn columnSalesSlipCdName;
            
            private global::System.Data.DataColumn columnSalesEmployeeNm;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnBLGoodsCode;
            
            private global::System.Data.DataColumn columnBLGroupCode;
            
            private global::System.Data.DataColumn columnShipmentCnt;
            
            private global::System.Data.DataColumn columnListPriceTaxExcFl;
            
            private global::System.Data.DataColumn columnSalesUnPrcTaxExcFl;
            
            private global::System.Data.DataColumn columnSalesUnitCost;
            
            private global::System.Data.DataColumn columnSalesMoneyTaxExc;
            
            private global::System.Data.DataColumn columnSalesPriceConsTax;
            
            private global::System.Data.DataColumn columnSalesTotalTaxInc;
            
            private global::System.Data.DataColumn columnCategoryNo;
            
            private global::System.Data.DataColumn columnModelFullName;
            
            private global::System.Data.DataColumn columnFirstEntryDate;
            
            private global::System.Data.DataColumn columnSearchFrameNo;
            
            private global::System.Data.DataColumn columnFullModel;
            
            private global::System.Data.DataColumn columnSlipNote;
            
            private global::System.Data.DataColumn columnSlipNote2;
            
            private global::System.Data.DataColumn columnSlipNote3;
            
            private global::System.Data.DataColumn columnFrontEmployeeNm;
            
            private global::System.Data.DataColumn columnSalesInputName;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerSnm;
            
            private global::System.Data.DataColumn columnSupplierCd;
            
            private global::System.Data.DataColumn columnSupplierSnm;
            
            private global::System.Data.DataColumn columnPartySaleSlipNum;
            
            private global::System.Data.DataColumn columnCarMngCode;
            
            private global::System.Data.DataColumn columnAcceptAnOrderNo;
            
            private global::System.Data.DataColumn columnShipSalesSlipNum;
            
            private global::System.Data.DataColumn columnSrcSalesSlipNum;
            
            private global::System.Data.DataColumn columnSalesOrderDivCd;
            
            private global::System.Data.DataColumn columnWarehouseName;
            
            private global::System.Data.DataColumn columnSupplierSlipNo;
            
            private global::System.Data.DataColumn columnUOESupplierCd;
            
            private global::System.Data.DataColumn columnUOESupplierSnm;
            
            private global::System.Data.DataColumn columnUOERemark1;
            
            private global::System.Data.DataColumn columnUOERemark2;
            
            private global::System.Data.DataColumn columnGuideName;
            
            private global::System.Data.DataColumn columnSectionGuideName;
            
            private global::System.Data.DataColumn columnDtlNote;
            
            private global::System.Data.DataColumn columnColorName1;
            
            private global::System.Data.DataColumn columnTrimName;
            
            private global::System.Data.DataColumn columnStdUnPrcLPrice;
            
            private global::System.Data.DataColumn columnStdUnPrcSalUnPrc;
            
            private global::System.Data.DataColumn columnStdUnPrcUnCst;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnMakerName;
            
            private global::System.Data.DataColumn columnCost;
            
            private global::System.Data.DataColumn columnCustSlipNo;
            
            private global::System.Data.DataColumn columnAddUpADate;
            
            private global::System.Data.DataColumn columnAccRecDivCdName;
            
            private global::System.Data.DataColumn columnDebitNoteDiv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailDataTable() {
                this.TableName = "SalesDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipNumColumn {
                get {
                    return this.columnSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesRowNoColumn {
                get {
                    return this.columnSalesRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipCdNameColumn {
                get {
                    return this.columnSalesSlipCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesEmployeeNmColumn {
                get {
                    return this.columnSalesEmployeeNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGoodsCodeColumn {
                get {
                    return this.columnBLGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGroupCodeColumn {
                get {
                    return this.columnBLGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentCntColumn {
                get {
                    return this.columnShipmentCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceTaxExcFlColumn {
                get {
                    return this.columnListPriceTaxExcFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnPrcTaxExcFlColumn {
                get {
                    return this.columnSalesUnPrcTaxExcFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnitCostColumn {
                get {
                    return this.columnSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesMoneyTaxExcColumn {
                get {
                    return this.columnSalesMoneyTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesPriceConsTaxColumn {
                get {
                    return this.columnSalesPriceConsTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesTotalTaxIncColumn {
                get {
                    return this.columnSalesTotalTaxInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryNoColumn {
                get {
                    return this.columnCategoryNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelFullNameColumn {
                get {
                    return this.columnModelFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstEntryDateColumn {
                get {
                    return this.columnFirstEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SearchFrameNoColumn {
                get {
                    return this.columnSearchFrameNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullModelColumn {
                get {
                    return this.columnFullModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNoteColumn {
                get {
                    return this.columnSlipNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNote2Column {
                get {
                    return this.columnSlipNote2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNote3Column {
                get {
                    return this.columnSlipNote3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrontEmployeeNmColumn {
                get {
                    return this.columnFrontEmployeeNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesInputNameColumn {
                get {
                    return this.columnSalesInputName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerSnmColumn {
                get {
                    return this.columnCustomerSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCdColumn {
                get {
                    return this.columnSupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSnmColumn {
                get {
                    return this.columnSupplierSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartySaleSlipNumColumn {
                get {
                    return this.columnPartySaleSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarMngCodeColumn {
                get {
                    return this.columnCarMngCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcceptAnOrderNoColumn {
                get {
                    return this.columnAcceptAnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipSalesSlipNumColumn {
                get {
                    return this.columnShipSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrcSalesSlipNumColumn {
                get {
                    return this.columnSrcSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesOrderDivCdColumn {
                get {
                    return this.columnSalesOrderDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseNameColumn {
                get {
                    return this.columnWarehouseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNoColumn {
                get {
                    return this.columnSupplierSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOESupplierCdColumn {
                get {
                    return this.columnUOESupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOESupplierSnmColumn {
                get {
                    return this.columnUOESupplierSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOERemark1Column {
                get {
                    return this.columnUOERemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOERemark2Column {
                get {
                    return this.columnUOERemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GuideNameColumn {
                get {
                    return this.columnGuideName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionGuideNameColumn {
                get {
                    return this.columnSectionGuideName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DtlNoteColumn {
                get {
                    return this.columnDtlNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColorName1Column {
                get {
                    return this.columnColorName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrimNameColumn {
                get {
                    return this.columnTrimName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StdUnPrcLPriceColumn {
                get {
                    return this.columnStdUnPrcLPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StdUnPrcSalUnPrcColumn {
                get {
                    return this.columnStdUnPrcSalUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StdUnPrcUnCstColumn {
                get {
                    return this.columnStdUnPrcUnCst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerNameColumn {
                get {
                    return this.columnMakerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustSlipNoColumn {
                get {
                    return this.columnCustSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddUpADateColumn {
                get {
                    return this.columnAddUpADate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccRecDivCdNameColumn {
                get {
                    return this.columnAccRecDivCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteDivColumn {
                get {
                    return this.columnDebitNoteDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRow this[int index] {
                get {
                    return ((SalesDetailRow)(this.Rows[index]));
                }
            }
            
            public event SalesDetailRowChangeEventHandler SalesDetailRowChanging;
            
            public event SalesDetailRowChangeEventHandler SalesDetailRowChanged;
            
            public event SalesDetailRowChangeEventHandler SalesDetailRowDeleting;
            
            public event SalesDetailRowChangeEventHandler SalesDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesDetailRow(SalesDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRow AddSalesDetailRow(
                        string SalesDate, 
                        string SalesSlipNum, 
                        string SalesRowNo, 
                        string SalesSlipCdName, 
                        string SalesEmployeeNm, 
                        string GoodsName, 
                        string GoodsNo, 
                        string BLGoodsCode, 
                        string BLGroupCode, 
                        string ShipmentCnt, 
                        string ListPriceTaxExcFl, 
                        string SalesUnPrcTaxExcFl, 
                        string SalesUnitCost, 
                        string SalesMoneyTaxExc, 
                        string SalesPriceConsTax, 
                        string SalesTotalTaxInc, 
                        string CategoryNo, 
                        string ModelFullName, 
                        string FirstEntryDate, 
                        string SearchFrameNo, 
                        string FullModel, 
                        string SlipNote, 
                        string SlipNote2, 
                        string SlipNote3, 
                        string FrontEmployeeNm, 
                        string SalesInputName, 
                        string CustomerCode, 
                        string CustomerSnm, 
                        string SupplierCd, 
                        string SupplierSnm, 
                        string PartySaleSlipNum, 
                        string CarMngCode, 
                        string AcceptAnOrderNo, 
                        string ShipSalesSlipNum, 
                        string SrcSalesSlipNum, 
                        string SalesOrderDivCd, 
                        string WarehouseName, 
                        string SupplierSlipNo, 
                        string UOESupplierCd, 
                        string UOESupplierSnm, 
                        string UOERemark1, 
                        string UOERemark2, 
                        string GuideName, 
                        string SectionGuideName, 
                        string DtlNote, 
                        string ColorName1, 
                        string TrimName, 
                        string StdUnPrcLPrice, 
                        string StdUnPrcSalUnPrc, 
                        string StdUnPrcUnCst, 
                        string GoodsMakerCd, 
                        string MakerName, 
                        string Cost, 
                        string CustSlipNo, 
                        string AddUpADate, 
                        string AccRecDivCdName, 
                        string DebitNoteDiv) {
                SalesDetailRow rowSalesDetailRow = ((SalesDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SalesDate,
                        SalesSlipNum,
                        SalesRowNo,
                        SalesSlipCdName,
                        SalesEmployeeNm,
                        GoodsName,
                        GoodsNo,
                        BLGoodsCode,
                        BLGroupCode,
                        ShipmentCnt,
                        ListPriceTaxExcFl,
                        SalesUnPrcTaxExcFl,
                        SalesUnitCost,
                        SalesMoneyTaxExc,
                        SalesPriceConsTax,
                        SalesTotalTaxInc,
                        CategoryNo,
                        ModelFullName,
                        FirstEntryDate,
                        SearchFrameNo,
                        FullModel,
                        SlipNote,
                        SlipNote2,
                        SlipNote3,
                        FrontEmployeeNm,
                        SalesInputName,
                        CustomerCode,
                        CustomerSnm,
                        SupplierCd,
                        SupplierSnm,
                        PartySaleSlipNum,
                        CarMngCode,
                        AcceptAnOrderNo,
                        ShipSalesSlipNum,
                        SrcSalesSlipNum,
                        SalesOrderDivCd,
                        WarehouseName,
                        SupplierSlipNo,
                        UOESupplierCd,
                        UOESupplierSnm,
                        UOERemark1,
                        UOERemark2,
                        GuideName,
                        SectionGuideName,
                        DtlNote,
                        ColorName1,
                        TrimName,
                        StdUnPrcLPrice,
                        StdUnPrcSalUnPrc,
                        StdUnPrcUnCst,
                        GoodsMakerCd,
                        MakerName,
                        Cost,
                        CustSlipNo,
                        AddUpADate,
                        AccRecDivCdName,
                        DebitNoteDiv};
                rowSalesDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesDetailRow);
                return rowSalesDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesDetailDataTable cln = ((SalesDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSalesDate = base.Columns["SalesDate"];
                this.columnSalesSlipNum = base.Columns["SalesSlipNum"];
                this.columnSalesRowNo = base.Columns["SalesRowNo"];
                this.columnSalesSlipCdName = base.Columns["SalesSlipCdName"];
                this.columnSalesEmployeeNm = base.Columns["SalesEmployeeNm"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnBLGoodsCode = base.Columns["BLGoodsCode"];
                this.columnBLGroupCode = base.Columns["BLGroupCode"];
                this.columnShipmentCnt = base.Columns["ShipmentCnt"];
                this.columnListPriceTaxExcFl = base.Columns["ListPriceTaxExcFl"];
                this.columnSalesUnPrcTaxExcFl = base.Columns["SalesUnPrcTaxExcFl"];
                this.columnSalesUnitCost = base.Columns["SalesUnitCost"];
                this.columnSalesMoneyTaxExc = base.Columns["SalesMoneyTaxExc"];
                this.columnSalesPriceConsTax = base.Columns["SalesPriceConsTax"];
                this.columnSalesTotalTaxInc = base.Columns["SalesTotalTaxInc"];
                this.columnCategoryNo = base.Columns["CategoryNo"];
                this.columnModelFullName = base.Columns["ModelFullName"];
                this.columnFirstEntryDate = base.Columns["FirstEntryDate"];
                this.columnSearchFrameNo = base.Columns["SearchFrameNo"];
                this.columnFullModel = base.Columns["FullModel"];
                this.columnSlipNote = base.Columns["SlipNote"];
                this.columnSlipNote2 = base.Columns["SlipNote2"];
                this.columnSlipNote3 = base.Columns["SlipNote3"];
                this.columnFrontEmployeeNm = base.Columns["FrontEmployeeNm"];
                this.columnSalesInputName = base.Columns["SalesInputName"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerSnm = base.Columns["CustomerSnm"];
                this.columnSupplierCd = base.Columns["SupplierCd"];
                this.columnSupplierSnm = base.Columns["SupplierSnm"];
                this.columnPartySaleSlipNum = base.Columns["PartySaleSlipNum"];
                this.columnCarMngCode = base.Columns["CarMngCode"];
                this.columnAcceptAnOrderNo = base.Columns["AcceptAnOrderNo"];
                this.columnShipSalesSlipNum = base.Columns["ShipSalesSlipNum"];
                this.columnSrcSalesSlipNum = base.Columns["SrcSalesSlipNum"];
                this.columnSalesOrderDivCd = base.Columns["SalesOrderDivCd"];
                this.columnWarehouseName = base.Columns["WarehouseName"];
                this.columnSupplierSlipNo = base.Columns["SupplierSlipNo"];
                this.columnUOESupplierCd = base.Columns["UOESupplierCd"];
                this.columnUOESupplierSnm = base.Columns["UOESupplierSnm"];
                this.columnUOERemark1 = base.Columns["UOERemark1"];
                this.columnUOERemark2 = base.Columns["UOERemark2"];
                this.columnGuideName = base.Columns["GuideName"];
                this.columnSectionGuideName = base.Columns["SectionGuideName"];
                this.columnDtlNote = base.Columns["DtlNote"];
                this.columnColorName1 = base.Columns["ColorName1"];
                this.columnTrimName = base.Columns["TrimName"];
                this.columnStdUnPrcLPrice = base.Columns["StdUnPrcLPrice"];
                this.columnStdUnPrcSalUnPrc = base.Columns["StdUnPrcSalUnPrc"];
                this.columnStdUnPrcUnCst = base.Columns["StdUnPrcUnCst"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnMakerName = base.Columns["MakerName"];
                this.columnCost = base.Columns["Cost"];
                this.columnCustSlipNo = base.Columns["CustSlipNo"];
                this.columnAddUpADate = base.Columns["AddUpADate"];
                this.columnAccRecDivCdName = base.Columns["AccRecDivCdName"];
                this.columnDebitNoteDiv = base.Columns["DebitNoteDiv"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
                this.columnSalesSlipNum = new global::System.Data.DataColumn("SalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipNum);
                this.columnSalesRowNo = new global::System.Data.DataColumn("SalesRowNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesRowNo);
                this.columnSalesSlipCdName = new global::System.Data.DataColumn("SalesSlipCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipCdName);
                this.columnSalesEmployeeNm = new global::System.Data.DataColumn("SalesEmployeeNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesEmployeeNm);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnBLGoodsCode = new global::System.Data.DataColumn("BLGoodsCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGoodsCode);
                this.columnBLGroupCode = new global::System.Data.DataColumn("BLGroupCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGroupCode);
                this.columnShipmentCnt = new global::System.Data.DataColumn("ShipmentCnt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentCnt);
                this.columnListPriceTaxExcFl = new global::System.Data.DataColumn("ListPriceTaxExcFl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPriceTaxExcFl);
                this.columnSalesUnPrcTaxExcFl = new global::System.Data.DataColumn("SalesUnPrcTaxExcFl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnPrcTaxExcFl);
                this.columnSalesUnitCost = new global::System.Data.DataColumn("SalesUnitCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnitCost);
                this.columnSalesMoneyTaxExc = new global::System.Data.DataColumn("SalesMoneyTaxExc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMoneyTaxExc);
                this.columnSalesPriceConsTax = new global::System.Data.DataColumn("SalesPriceConsTax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPriceConsTax);
                this.columnSalesTotalTaxInc = new global::System.Data.DataColumn("SalesTotalTaxInc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTotalTaxInc);
                this.columnCategoryNo = new global::System.Data.DataColumn("CategoryNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryNo);
                this.columnModelFullName = new global::System.Data.DataColumn("ModelFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelFullName);
                this.columnFirstEntryDate = new global::System.Data.DataColumn("FirstEntryDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstEntryDate);
                this.columnSearchFrameNo = new global::System.Data.DataColumn("SearchFrameNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSearchFrameNo);
                this.columnFullModel = new global::System.Data.DataColumn("FullModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullModel);
                this.columnSlipNote = new global::System.Data.DataColumn("SlipNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote);
                this.columnSlipNote2 = new global::System.Data.DataColumn("SlipNote2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote2);
                this.columnSlipNote3 = new global::System.Data.DataColumn("SlipNote3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote3);
                this.columnFrontEmployeeNm = new global::System.Data.DataColumn("FrontEmployeeNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrontEmployeeNm);
                this.columnSalesInputName = new global::System.Data.DataColumn("SalesInputName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesInputName);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerSnm = new global::System.Data.DataColumn("CustomerSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerSnm);
                this.columnSupplierCd = new global::System.Data.DataColumn("SupplierCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCd);
                this.columnSupplierSnm = new global::System.Data.DataColumn("SupplierSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSnm);
                this.columnPartySaleSlipNum = new global::System.Data.DataColumn("PartySaleSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartySaleSlipNum);
                this.columnCarMngCode = new global::System.Data.DataColumn("CarMngCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarMngCode);
                this.columnAcceptAnOrderNo = new global::System.Data.DataColumn("AcceptAnOrderNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptAnOrderNo);
                this.columnShipSalesSlipNum = new global::System.Data.DataColumn("ShipSalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipSalesSlipNum);
                this.columnSrcSalesSlipNum = new global::System.Data.DataColumn("SrcSalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrcSalesSlipNum);
                this.columnSalesOrderDivCd = new global::System.Data.DataColumn("SalesOrderDivCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesOrderDivCd);
                this.columnWarehouseName = new global::System.Data.DataColumn("WarehouseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseName);
                this.columnSupplierSlipNo = new global::System.Data.DataColumn("SupplierSlipNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNo);
                this.columnUOESupplierCd = new global::System.Data.DataColumn("UOESupplierCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOESupplierCd);
                this.columnUOESupplierSnm = new global::System.Data.DataColumn("UOESupplierSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOESupplierSnm);
                this.columnUOERemark1 = new global::System.Data.DataColumn("UOERemark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOERemark1);
                this.columnUOERemark2 = new global::System.Data.DataColumn("UOERemark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOERemark2);
                this.columnGuideName = new global::System.Data.DataColumn("GuideName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuideName);
                this.columnSectionGuideName = new global::System.Data.DataColumn("SectionGuideName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionGuideName);
                this.columnDtlNote = new global::System.Data.DataColumn("DtlNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDtlNote);
                this.columnColorName1 = new global::System.Data.DataColumn("ColorName1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColorName1);
                this.columnTrimName = new global::System.Data.DataColumn("TrimName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrimName);
                this.columnStdUnPrcLPrice = new global::System.Data.DataColumn("StdUnPrcLPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStdUnPrcLPrice);
                this.columnStdUnPrcSalUnPrc = new global::System.Data.DataColumn("StdUnPrcSalUnPrc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStdUnPrcSalUnPrc);
                this.columnStdUnPrcUnCst = new global::System.Data.DataColumn("StdUnPrcUnCst", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStdUnPrcUnCst);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnMakerName = new global::System.Data.DataColumn("MakerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerName);
                this.columnCost = new global::System.Data.DataColumn("Cost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnCustSlipNo = new global::System.Data.DataColumn("CustSlipNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustSlipNo);
                this.columnAddUpADate = new global::System.Data.DataColumn("AddUpADate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddUpADate);
                this.columnAccRecDivCdName = new global::System.Data.DataColumn("AccRecDivCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccRecDivCdName);
                this.columnDebitNoteDiv = new global::System.Data.DataColumn("DebitNoteDiv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteDiv);
                this.columnSalesDate.Caption = "伝票日付";
                this.columnSalesSlipNum.Caption = "伝票番号";
                this.columnSalesRowNo.Caption = "行No";
                this.columnSalesSlipCdName.Caption = "区分";
                this.columnSalesEmployeeNm.Caption = "担当者名";
                this.columnGoodsName.Caption = "品名";
                this.columnGoodsNo.Caption = "品番";
                this.columnBLGoodsCode.Caption = "BLコード";
                this.columnBLGroupCode.Caption = "BLグループ";
                this.columnShipmentCnt.Caption = "数量";
                this.columnListPriceTaxExcFl.Caption = "標準価格";
                this.columnSalesUnPrcTaxExcFl.Caption = "単価";
                this.columnSalesUnitCost.Caption = "原価";
                this.columnSalesMoneyTaxExc.Caption = "金額";
                this.columnSalesPriceConsTax.Caption = "消費税";
                this.columnSalesTotalTaxInc.Caption = "粗利";
                this.columnCategoryNo.Caption = "類別番号";
                this.columnModelFullName.Caption = "車種";
                this.columnFirstEntryDate.Caption = "年式";
                this.columnSearchFrameNo.Caption = "車台No";
                this.columnFullModel.Caption = "型式";
                this.columnSlipNote.Caption = "備考１";
                this.columnSlipNote2.Caption = "備考２";
                this.columnSlipNote3.Caption = "備考３";
                this.columnFrontEmployeeNm.Caption = "受注者";
                this.columnSalesInputName.Caption = "発行者";
                this.columnCustomerCode.Caption = "得意先コード";
                this.columnCustomerSnm.Caption = "得意先名";
                this.columnSupplierCd.Caption = "仕入先コード";
                this.columnSupplierSnm.Caption = "仕入先名";
                this.columnPartySaleSlipNum.Caption = "指示書(仮伝)番号";
                this.columnCarMngCode.Caption = "管理No";
                this.columnAcceptAnOrderNo.Caption = "計上元受注No";
                this.columnShipSalesSlipNum.Caption = "計上元出荷No";
                this.columnSrcSalesSlipNum.Caption = "元黒No";
                this.columnSalesOrderDivCd.Caption = "在取";
                this.columnWarehouseName.Caption = "倉庫";
                this.columnSupplierSlipNo.Caption = "同時仕入No";
                this.columnUOESupplierCd.Caption = "発注先コード";
                this.columnUOESupplierSnm.Caption = "発注先名";
                this.columnUOERemark1.Caption = "UOEリマーク１";
                this.columnUOERemark2.Caption = "UOEリマーク２";
                this.columnGuideName.Caption = "販売区分";
                this.columnSectionGuideName.Caption = "拠点名";
                this.columnDtlNote.Caption = "明細備考";
                this.columnColorName1.Caption = "カラー名称";
                this.columnTrimName.Caption = "トリム名称";
                this.columnStdUnPrcLPrice.Caption = "算出価格";
                this.columnStdUnPrcSalUnPrc.Caption = "算出売価";
                this.columnStdUnPrcUnCst.Caption = "算出原価";
                this.columnGoodsMakerCd.Caption = "メーカーコード";
                this.columnMakerName.Caption = "メーカー名";
                this.columnCost.Caption = "粗利";
                this.columnCustSlipNo.Caption = "得意先伝票番号";
                this.columnAddUpADate.Caption = "計上日";
                this.columnAccRecDivCdName.Caption = "売掛区分名";
                this.columnDebitNoteDiv.Caption = "赤伝区分";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRow NewSalesDetailRow() {
                return ((SalesDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesDetailRowChanged != null)) {
                    this.SalesDetailRowChanged(this, new SalesDetailRowChangeEvent(((SalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesDetailRowChanging != null)) {
                    this.SalesDetailRowChanging(this, new SalesDetailRowChangeEvent(((SalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesDetailRowDeleted != null)) {
                    this.SalesDetailRowDeleted(this, new SalesDetailRowChangeEvent(((SalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesDetailRowDeleting != null)) {
                    this.SalesDetailRowDeleting(this, new SalesDetailRowChangeEvent(((SalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesDetailRow(SalesDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ExportColumnDataSet ds = new ExportColumnDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesListRow : global::System.Data.DataRow {
            
            private SalesListDataTable tableSalesList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesList = ((SalesListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesDate {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SalesSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipCdName {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SalesSlipCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesSlipCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesSlipCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesEmployeeNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SalesEmployeeNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesEmployeeNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesEmployeeNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesTotalTaxExc {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SalesTotalTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesTotalTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesTotalTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConsumeTax {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.ConsumeTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'ConsumeTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.ConsumeTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GrossProfit {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.GrossProfitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'GrossProfit\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.GrossProfitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CategoryNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.CategoryNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CategoryNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CategoryNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelFullName {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.ModelFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'ModelFullName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.ModelFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstEntryDate {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.FirstEntryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'FirstEntryDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.FirstEntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SearchFrameNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SearchFrameNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SearchFrameNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SearchFrameNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullModel {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.FullModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'FullModel\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.FullModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SlipNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SlipNote\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SlipNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SlipNote2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SlipNote2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SlipNote2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote3 {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SlipNote3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SlipNote3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SlipNote3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FrontEmployeeNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.FrontEmployeeNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'FrontEmployeeNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.FrontEmployeeNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesInputName {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SalesInputNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesInputName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesInputNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerSnm {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.CustomerSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CustomerSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CustomerSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartySaleSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.PartySaleSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'PartySaleSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.PartySaleSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarMngCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.CarMngCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CarMngCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CarMngCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcceptAnOrderNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.AcceptAnOrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'AcceptAnOrderNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.AcceptAnOrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipmSalesSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.ShipmSalesSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'ShipmSalesSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.ShipmSalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UoeRemark1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.UoeRemark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'UoeRemark1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.UoeRemark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UoeRemark2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.UoeRemark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'UoeRemark2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.UoeRemark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionGuideNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SectionGuideNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SectionGuideNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SectionGuideNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ColorName1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.ColorName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'ColorName1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.ColorName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrimName {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.TrimNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'TrimName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.TrimNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustSlipNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.CustSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CustSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CustSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddUpADate {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.AddUpADateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'AddUpADate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.AddUpADateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccRecDivCdName {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.AccRecDivCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'AccRecDivCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.AccRecDivCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebitNoteDiv {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.DebitNoteDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'DebitNoteDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.DebitNoteDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tableSalesList.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tableSalesList.SalesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipNumNull() {
                return this.IsNull(this.tableSalesList.SalesSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipNumNull() {
                this[this.tableSalesList.SalesSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipCdNameNull() {
                return this.IsNull(this.tableSalesList.SalesSlipCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipCdNameNull() {
                this[this.tableSalesList.SalesSlipCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesEmployeeNmNull() {
                return this.IsNull(this.tableSalesList.SalesEmployeeNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesEmployeeNmNull() {
                this[this.tableSalesList.SalesEmployeeNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesTotalTaxExcNull() {
                return this.IsNull(this.tableSalesList.SalesTotalTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesTotalTaxExcNull() {
                this[this.tableSalesList.SalesTotalTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsumeTaxNull() {
                return this.IsNull(this.tableSalesList.ConsumeTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsumeTaxNull() {
                this[this.tableSalesList.ConsumeTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfitNull() {
                return this.IsNull(this.tableSalesList.GrossProfitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfitNull() {
                this[this.tableSalesList.GrossProfitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNoNull() {
                return this.IsNull(this.tableSalesList.CategoryNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNoNull() {
                this[this.tableSalesList.CategoryNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelFullNameNull() {
                return this.IsNull(this.tableSalesList.ModelFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelFullNameNull() {
                this[this.tableSalesList.ModelFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstEntryDateNull() {
                return this.IsNull(this.tableSalesList.FirstEntryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstEntryDateNull() {
                this[this.tableSalesList.FirstEntryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSearchFrameNoNull() {
                return this.IsNull(this.tableSalesList.SearchFrameNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSearchFrameNoNull() {
                this[this.tableSalesList.SearchFrameNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullModelNull() {
                return this.IsNull(this.tableSalesList.FullModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullModelNull() {
                this[this.tableSalesList.FullModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNoteNull() {
                return this.IsNull(this.tableSalesList.SlipNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNoteNull() {
                this[this.tableSalesList.SlipNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNote2Null() {
                return this.IsNull(this.tableSalesList.SlipNote2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNote2Null() {
                this[this.tableSalesList.SlipNote2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNote3Null() {
                return this.IsNull(this.tableSalesList.SlipNote3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNote3Null() {
                this[this.tableSalesList.SlipNote3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrontEmployeeNmNull() {
                return this.IsNull(this.tableSalesList.FrontEmployeeNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrontEmployeeNmNull() {
                this[this.tableSalesList.FrontEmployeeNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesInputNameNull() {
                return this.IsNull(this.tableSalesList.SalesInputNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesInputNameNull() {
                this[this.tableSalesList.SalesInputNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableSalesList.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableSalesList.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerSnmNull() {
                return this.IsNull(this.tableSalesList.CustomerSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerSnmNull() {
                this[this.tableSalesList.CustomerSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartySaleSlipNumNull() {
                return this.IsNull(this.tableSalesList.PartySaleSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartySaleSlipNumNull() {
                this[this.tableSalesList.PartySaleSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarMngCodeNull() {
                return this.IsNull(this.tableSalesList.CarMngCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarMngCodeNull() {
                this[this.tableSalesList.CarMngCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcceptAnOrderNoNull() {
                return this.IsNull(this.tableSalesList.AcceptAnOrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcceptAnOrderNoNull() {
                this[this.tableSalesList.AcceptAnOrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmSalesSlipNumNull() {
                return this.IsNull(this.tableSalesList.ShipmSalesSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmSalesSlipNumNull() {
                this[this.tableSalesList.ShipmSalesSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUoeRemark1Null() {
                return this.IsNull(this.tableSalesList.UoeRemark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUoeRemark1Null() {
                this[this.tableSalesList.UoeRemark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUoeRemark2Null() {
                return this.IsNull(this.tableSalesList.UoeRemark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUoeRemark2Null() {
                this[this.tableSalesList.UoeRemark2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionGuideNmNull() {
                return this.IsNull(this.tableSalesList.SectionGuideNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionGuideNmNull() {
                this[this.tableSalesList.SectionGuideNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorName1Null() {
                return this.IsNull(this.tableSalesList.ColorName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorName1Null() {
                this[this.tableSalesList.ColorName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrimNameNull() {
                return this.IsNull(this.tableSalesList.TrimNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrimNameNull() {
                this[this.tableSalesList.TrimNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustSlipNoNull() {
                return this.IsNull(this.tableSalesList.CustSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustSlipNoNull() {
                this[this.tableSalesList.CustSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddUpADateNull() {
                return this.IsNull(this.tableSalesList.AddUpADateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddUpADateNull() {
                this[this.tableSalesList.AddUpADateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccRecDivCdNameNull() {
                return this.IsNull(this.tableSalesList.AccRecDivCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccRecDivCdNameNull() {
                this[this.tableSalesList.AccRecDivCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteDivNull() {
                return this.IsNull(this.tableSalesList.DebitNoteDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteDivNull() {
                this[this.tableSalesList.DebitNoteDivColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesDetailRow : global::System.Data.DataRow {
            
            private SalesDetailDataTable tableSalesDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesDetail = ((SalesDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesDate {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesRowNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipCdName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesSlipCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesSlipCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesSlipCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesEmployeeNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesEmployeeNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesEmployeeNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesEmployeeNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLGoodsCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.BLGoodsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BLGoodsCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BLGoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLGroupCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.BLGroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BLGroupCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BLGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipmentCnt {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.ShipmentCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ShipmentCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ShipmentCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ListPriceTaxExcFl {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.ListPriceTaxExcFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ListPriceTaxExcFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ListPriceTaxExcFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesUnPrcTaxExcFl {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesUnPrcTaxExcFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesUnPrcTaxExcFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesUnPrcTaxExcFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesUnitCost {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesMoneyTaxExc {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesMoneyTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesMoneyTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesMoneyTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesPriceConsTax {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesPriceConsTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesPriceConsTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesPriceConsTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesTotalTaxInc {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesTotalTaxIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesTotalTaxInc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesTotalTaxIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CategoryNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.CategoryNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CategoryNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CategoryNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelFullName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.ModelFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ModelFullName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ModelFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstEntryDate {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.FirstEntryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FirstEntryDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FirstEntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SearchFrameNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SearchFrameNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SearchFrameNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SearchFrameNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullModel {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.FullModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FullModel\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FullModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SlipNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SlipNote\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SlipNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SlipNote2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SlipNote2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SlipNote2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote3 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SlipNote3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SlipNote3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SlipNote3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FrontEmployeeNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.FrontEmployeeNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FrontEmployeeNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FrontEmployeeNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesInputName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesInputNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesInputName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesInputNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerSnm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.CustomerSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustomerSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustomerSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SupplierCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SupplierCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSnm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SupplierSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SupplierSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SupplierSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartySaleSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.PartySaleSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'PartySaleSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.PartySaleSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarMngCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.CarMngCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CarMngCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CarMngCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcceptAnOrderNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.AcceptAnOrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AcceptAnOrderNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AcceptAnOrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipSalesSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.ShipSalesSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ShipSalesSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ShipSalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SrcSalesSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SrcSalesSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SrcSalesSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SrcSalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesOrderDivCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesOrderDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesOrderDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesOrderDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.WarehouseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'WarehouseName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.WarehouseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSlipNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SupplierSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SupplierSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SupplierSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOESupplierCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.UOESupplierCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UOESupplierCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UOESupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOESupplierSnm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.UOESupplierSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UOESupplierSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UOESupplierSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOERemark1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.UOERemark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UOERemark1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UOERemark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOERemark2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.UOERemark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UOERemark2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UOERemark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GuideName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GuideNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GuideName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GuideNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionGuideName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SectionGuideNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SectionGuideName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SectionGuideNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DtlNote {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.DtlNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'DtlNote\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.DtlNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ColorName1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.ColorName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ColorName1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ColorName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrimName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.TrimNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'TrimName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.TrimNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StdUnPrcLPrice {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.StdUnPrcLPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'StdUnPrcLPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.StdUnPrcLPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StdUnPrcSalUnPrc {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.StdUnPrcSalUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'StdUnPrcSalUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.StdUnPrcSalUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StdUnPrcUnCst {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.StdUnPrcUnCstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'StdUnPrcUnCst\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.StdUnPrcUnCstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsMakerCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.MakerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'MakerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.MakerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cost {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'Cost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustSlipNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.CustSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddUpADate {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.AddUpADateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AddUpADate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AddUpADateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccRecDivCdName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.AccRecDivCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AccRecDivCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AccRecDivCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebitNoteDiv {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.DebitNoteDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'DebitNoteDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.DebitNoteDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tableSalesDetail.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tableSalesDetail.SalesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipNumNull() {
                return this.IsNull(this.tableSalesDetail.SalesSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipNumNull() {
                this[this.tableSalesDetail.SalesSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesRowNoNull() {
                return this.IsNull(this.tableSalesDetail.SalesRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesRowNoNull() {
                this[this.tableSalesDetail.SalesRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipCdNameNull() {
                return this.IsNull(this.tableSalesDetail.SalesSlipCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipCdNameNull() {
                this[this.tableSalesDetail.SalesSlipCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesEmployeeNmNull() {
                return this.IsNull(this.tableSalesDetail.SalesEmployeeNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesEmployeeNmNull() {
                this[this.tableSalesDetail.SalesEmployeeNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableSalesDetail.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableSalesDetail.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNull() {
                return this.IsNull(this.tableSalesDetail.GoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNull() {
                this[this.tableSalesDetail.GoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGoodsCodeNull() {
                return this.IsNull(this.tableSalesDetail.BLGoodsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGoodsCodeNull() {
                this[this.tableSalesDetail.BLGoodsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGroupCodeNull() {
                return this.IsNull(this.tableSalesDetail.BLGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGroupCodeNull() {
                this[this.tableSalesDetail.BLGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentCntNull() {
                return this.IsNull(this.tableSalesDetail.ShipmentCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentCntNull() {
                this[this.tableSalesDetail.ShipmentCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceTaxExcFlNull() {
                return this.IsNull(this.tableSalesDetail.ListPriceTaxExcFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceTaxExcFlNull() {
                this[this.tableSalesDetail.ListPriceTaxExcFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnPrcTaxExcFlNull() {
                return this.IsNull(this.tableSalesDetail.SalesUnPrcTaxExcFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnPrcTaxExcFlNull() {
                this[this.tableSalesDetail.SalesUnPrcTaxExcFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnitCostNull() {
                return this.IsNull(this.tableSalesDetail.SalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnitCostNull() {
                this[this.tableSalesDetail.SalesUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesMoneyTaxExcNull() {
                return this.IsNull(this.tableSalesDetail.SalesMoneyTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesMoneyTaxExcNull() {
                this[this.tableSalesDetail.SalesMoneyTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesPriceConsTaxNull() {
                return this.IsNull(this.tableSalesDetail.SalesPriceConsTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesPriceConsTaxNull() {
                this[this.tableSalesDetail.SalesPriceConsTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesTotalTaxIncNull() {
                return this.IsNull(this.tableSalesDetail.SalesTotalTaxIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesTotalTaxIncNull() {
                this[this.tableSalesDetail.SalesTotalTaxIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNoNull() {
                return this.IsNull(this.tableSalesDetail.CategoryNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNoNull() {
                this[this.tableSalesDetail.CategoryNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelFullNameNull() {
                return this.IsNull(this.tableSalesDetail.ModelFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelFullNameNull() {
                this[this.tableSalesDetail.ModelFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstEntryDateNull() {
                return this.IsNull(this.tableSalesDetail.FirstEntryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstEntryDateNull() {
                this[this.tableSalesDetail.FirstEntryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSearchFrameNoNull() {
                return this.IsNull(this.tableSalesDetail.SearchFrameNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSearchFrameNoNull() {
                this[this.tableSalesDetail.SearchFrameNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullModelNull() {
                return this.IsNull(this.tableSalesDetail.FullModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullModelNull() {
                this[this.tableSalesDetail.FullModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNoteNull() {
                return this.IsNull(this.tableSalesDetail.SlipNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNoteNull() {
                this[this.tableSalesDetail.SlipNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNote2Null() {
                return this.IsNull(this.tableSalesDetail.SlipNote2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNote2Null() {
                this[this.tableSalesDetail.SlipNote2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNote3Null() {
                return this.IsNull(this.tableSalesDetail.SlipNote3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNote3Null() {
                this[this.tableSalesDetail.SlipNote3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrontEmployeeNmNull() {
                return this.IsNull(this.tableSalesDetail.FrontEmployeeNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrontEmployeeNmNull() {
                this[this.tableSalesDetail.FrontEmployeeNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesInputNameNull() {
                return this.IsNull(this.tableSalesDetail.SalesInputNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesInputNameNull() {
                this[this.tableSalesDetail.SalesInputNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableSalesDetail.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableSalesDetail.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerSnmNull() {
                return this.IsNull(this.tableSalesDetail.CustomerSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerSnmNull() {
                this[this.tableSalesDetail.CustomerSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCdNull() {
                return this.IsNull(this.tableSalesDetail.SupplierCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCdNull() {
                this[this.tableSalesDetail.SupplierCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSnmNull() {
                return this.IsNull(this.tableSalesDetail.SupplierSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSnmNull() {
                this[this.tableSalesDetail.SupplierSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartySaleSlipNumNull() {
                return this.IsNull(this.tableSalesDetail.PartySaleSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartySaleSlipNumNull() {
                this[this.tableSalesDetail.PartySaleSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarMngCodeNull() {
                return this.IsNull(this.tableSalesDetail.CarMngCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarMngCodeNull() {
                this[this.tableSalesDetail.CarMngCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcceptAnOrderNoNull() {
                return this.IsNull(this.tableSalesDetail.AcceptAnOrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcceptAnOrderNoNull() {
                this[this.tableSalesDetail.AcceptAnOrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipSalesSlipNumNull() {
                return this.IsNull(this.tableSalesDetail.ShipSalesSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipSalesSlipNumNull() {
                this[this.tableSalesDetail.ShipSalesSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrcSalesSlipNumNull() {
                return this.IsNull(this.tableSalesDetail.SrcSalesSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrcSalesSlipNumNull() {
                this[this.tableSalesDetail.SrcSalesSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesOrderDivCdNull() {
                return this.IsNull(this.tableSalesDetail.SalesOrderDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesOrderDivCdNull() {
                this[this.tableSalesDetail.SalesOrderDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNameNull() {
                return this.IsNull(this.tableSalesDetail.WarehouseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNameNull() {
                this[this.tableSalesDetail.WarehouseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNoNull() {
                return this.IsNull(this.tableSalesDetail.SupplierSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNoNull() {
                this[this.tableSalesDetail.SupplierSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOESupplierCdNull() {
                return this.IsNull(this.tableSalesDetail.UOESupplierCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOESupplierCdNull() {
                this[this.tableSalesDetail.UOESupplierCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOESupplierSnmNull() {
                return this.IsNull(this.tableSalesDetail.UOESupplierSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOESupplierSnmNull() {
                this[this.tableSalesDetail.UOESupplierSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOERemark1Null() {
                return this.IsNull(this.tableSalesDetail.UOERemark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOERemark1Null() {
                this[this.tableSalesDetail.UOERemark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOERemark2Null() {
                return this.IsNull(this.tableSalesDetail.UOERemark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOERemark2Null() {
                this[this.tableSalesDetail.UOERemark2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGuideNameNull() {
                return this.IsNull(this.tableSalesDetail.GuideNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGuideNameNull() {
                this[this.tableSalesDetail.GuideNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionGuideNameNull() {
                return this.IsNull(this.tableSalesDetail.SectionGuideNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionGuideNameNull() {
                this[this.tableSalesDetail.SectionGuideNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDtlNoteNull() {
                return this.IsNull(this.tableSalesDetail.DtlNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDtlNoteNull() {
                this[this.tableSalesDetail.DtlNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorName1Null() {
                return this.IsNull(this.tableSalesDetail.ColorName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorName1Null() {
                this[this.tableSalesDetail.ColorName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrimNameNull() {
                return this.IsNull(this.tableSalesDetail.TrimNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrimNameNull() {
                this[this.tableSalesDetail.TrimNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStdUnPrcLPriceNull() {
                return this.IsNull(this.tableSalesDetail.StdUnPrcLPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStdUnPrcLPriceNull() {
                this[this.tableSalesDetail.StdUnPrcLPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStdUnPrcSalUnPrcNull() {
                return this.IsNull(this.tableSalesDetail.StdUnPrcSalUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStdUnPrcSalUnPrcNull() {
                this[this.tableSalesDetail.StdUnPrcSalUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStdUnPrcUnCstNull() {
                return this.IsNull(this.tableSalesDetail.StdUnPrcUnCstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStdUnPrcUnCstNull() {
                this[this.tableSalesDetail.StdUnPrcUnCstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMakerCdNull() {
                return this.IsNull(this.tableSalesDetail.GoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMakerCdNull() {
                this[this.tableSalesDetail.GoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerNameNull() {
                return this.IsNull(this.tableSalesDetail.MakerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerNameNull() {
                this[this.tableSalesDetail.MakerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostNull() {
                return this.IsNull(this.tableSalesDetail.CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostNull() {
                this[this.tableSalesDetail.CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustSlipNoNull() {
                return this.IsNull(this.tableSalesDetail.CustSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustSlipNoNull() {
                this[this.tableSalesDetail.CustSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddUpADateNull() {
                return this.IsNull(this.tableSalesDetail.AddUpADateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddUpADateNull() {
                this[this.tableSalesDetail.AddUpADateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccRecDivCdNameNull() {
                return this.IsNull(this.tableSalesDetail.AccRecDivCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccRecDivCdNameNull() {
                this[this.tableSalesDetail.AccRecDivCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteDivNull() {
                return this.IsNull(this.tableSalesDetail.DebitNoteDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteDivNull() {
                this[this.tableSalesDetail.DebitNoteDivColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesListRowChangeEvent : global::System.EventArgs {
            
            private SalesListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesListRowChangeEvent(SalesListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesDetailRowChangeEvent : global::System.EventArgs {
            
            private SalesDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRowChangeEvent(SalesDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591