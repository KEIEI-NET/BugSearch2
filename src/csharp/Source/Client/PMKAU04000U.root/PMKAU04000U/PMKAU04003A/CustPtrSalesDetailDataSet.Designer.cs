//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.5485
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using Broadleaf.Application.Resources;
using Broadleaf.Application.Common;
namespace Broadleaf.Application.Controller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("CustPtrSalesDetailDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class CustPtrSalesDetailDataSet : global::System.Data.DataSet {
        
        private SalesDetailDataTable tableSalesDetail;
        
        private SalesListDataTable tableSalesList;
        
        private BalanceTotalDataTable tableBalanceTotal;
        
        private SalesDetailDspDataTable tableSalesDetailDsp;
        
        private RedSlipDetailDataTable tableRedSlipDetail;
        
        private BalanceListDataTable tableBalanceList;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CustPtrSalesDetailDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected CustPtrSalesDetailDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SalesDetail"] != null)) {
                    base.Tables.Add(new SalesDetailDataTable(ds.Tables["SalesDetail"]));
                }
                if ((ds.Tables["SalesList"] != null)) {
                    base.Tables.Add(new SalesListDataTable(ds.Tables["SalesList"]));
                }
                if ((ds.Tables["BalanceTotal"] != null)) {
                    base.Tables.Add(new BalanceTotalDataTable(ds.Tables["BalanceTotal"]));
                }
                if ((ds.Tables["SalesDetailDsp"] != null)) {
                    base.Tables.Add(new SalesDetailDspDataTable(ds.Tables["SalesDetailDsp"]));
                }
                if ((ds.Tables["RedSlipDetail"] != null)) {
                    base.Tables.Add(new RedSlipDetailDataTable(ds.Tables["RedSlipDetail"]));
                }
                if ((ds.Tables["BalanceList"] != null)) {
                    base.Tables.Add(new BalanceListDataTable(ds.Tables["BalanceList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesDetailDataTable SalesDetail {
            get {
                return this.tableSalesDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesListDataTable SalesList {
            get {
                return this.tableSalesList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BalanceTotalDataTable BalanceTotal {
            get {
                return this.tableBalanceTotal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesDetailDspDataTable SalesDetailDsp {
            get {
                return this.tableSalesDetailDsp;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RedSlipDetailDataTable RedSlipDetail {
            get {
                return this.tableRedSlipDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BalanceListDataTable BalanceList {
            get {
                return this.tableBalanceList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            CustPtrSalesDetailDataSet cln = ((CustPtrSalesDetailDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SalesDetail"] != null)) {
                    base.Tables.Add(new SalesDetailDataTable(ds.Tables["SalesDetail"]));
                }
                if ((ds.Tables["SalesList"] != null)) {
                    base.Tables.Add(new SalesListDataTable(ds.Tables["SalesList"]));
                }
                if ((ds.Tables["BalanceTotal"] != null)) {
                    base.Tables.Add(new BalanceTotalDataTable(ds.Tables["BalanceTotal"]));
                }
                if ((ds.Tables["SalesDetailDsp"] != null)) {
                    base.Tables.Add(new SalesDetailDspDataTable(ds.Tables["SalesDetailDsp"]));
                }
                if ((ds.Tables["RedSlipDetail"] != null)) {
                    base.Tables.Add(new RedSlipDetailDataTable(ds.Tables["RedSlipDetail"]));
                }
                if ((ds.Tables["BalanceList"] != null)) {
                    base.Tables.Add(new BalanceListDataTable(ds.Tables["BalanceList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSalesDetail = ((SalesDetailDataTable)(base.Tables["SalesDetail"]));
            if ((initTable == true)) {
                if ((this.tableSalesDetail != null)) {
                    this.tableSalesDetail.InitVars();
                }
            }
            this.tableSalesList = ((SalesListDataTable)(base.Tables["SalesList"]));
            if ((initTable == true)) {
                if ((this.tableSalesList != null)) {
                    this.tableSalesList.InitVars();
                }
            }
            this.tableBalanceTotal = ((BalanceTotalDataTable)(base.Tables["BalanceTotal"]));
            if ((initTable == true)) {
                if ((this.tableBalanceTotal != null)) {
                    this.tableBalanceTotal.InitVars();
                }
            }
            this.tableSalesDetailDsp = ((SalesDetailDspDataTable)(base.Tables["SalesDetailDsp"]));
            if ((initTable == true)) {
                if ((this.tableSalesDetailDsp != null)) {
                    this.tableSalesDetailDsp.InitVars();
                }
            }
            this.tableRedSlipDetail = ((RedSlipDetailDataTable)(base.Tables["RedSlipDetail"]));
            if ((initTable == true)) {
                if ((this.tableRedSlipDetail != null)) {
                    this.tableRedSlipDetail.InitVars();
                }
            }
            this.tableBalanceList = ((BalanceListDataTable)(base.Tables["BalanceList"]));
            if ((initTable == true)) {
                if ((this.tableBalanceList != null)) {
                    this.tableBalanceList.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "CustPtrSalesDetailDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CustPtrSalesDetailDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSalesDetail = new SalesDetailDataTable();
            base.Tables.Add(this.tableSalesDetail);
            this.tableSalesList = new SalesListDataTable();
            base.Tables.Add(this.tableSalesList);
            this.tableBalanceTotal = new BalanceTotalDataTable();
            base.Tables.Add(this.tableBalanceTotal);
            this.tableSalesDetailDsp = new SalesDetailDspDataTable();
            base.Tables.Add(this.tableSalesDetailDsp);
            this.tableRedSlipDetail = new RedSlipDetailDataTable();
            base.Tables.Add(this.tableRedSlipDetail);
            this.tableBalanceList = new BalanceListDataTable();
            base.Tables.Add(this.tableBalanceList);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBalanceTotal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesDetailDsp() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRedSlipDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBalanceList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            CustPtrSalesDetailDataSet ds = new CustPtrSalesDetailDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SalesDetailRowChangeEventHandler(object sender, SalesDetailRowChangeEvent e);
        
        public delegate void SalesListRowChangeEventHandler(object sender, SalesListRowChangeEvent e);
        
        public delegate void BalanceTotalRowChangeEventHandler(object sender, BalanceTotalRowChangeEvent e);
        
        public delegate void SalesDetailDspRowChangeEventHandler(object sender, SalesDetailDspRowChangeEvent e);
        
        public delegate void RedSlipDetailRowChangeEventHandler(object sender, RedSlipDetailRowChangeEvent e);
        
        public delegate void BalanceListRowChangeEventHandler(object sender, BalanceListRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSelectionCheck;
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnDataDiv;
            
            private global::System.Data.DataColumn columnSalesDate;
            
            private global::System.Data.DataColumn columnSalesSlipNum;
            
            private global::System.Data.DataColumn columnSalesRowNo;
            
            private global::System.Data.DataColumn columnAcptAnOdrStatus;
            
            private global::System.Data.DataColumn columnSalesSlipCd;
            
            private global::System.Data.DataColumn columnSalesSlipCdName;
            
            private global::System.Data.DataColumn columnSalesSlipCdDtl;
            
            private global::System.Data.DataColumn columnSalesSlipCdDtlName;
            
            private global::System.Data.DataColumn columnSalesEmployeeNm;
            
            private global::System.Data.DataColumn columnSalesTotalTaxExc;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnBLGoodsCode;
            
            private global::System.Data.DataColumn columnBLGroupCode;
            
            private global::System.Data.DataColumn columnGoodsMGroup;
            
            private global::System.Data.DataColumn columnGoodsMGroupName;
            
            private global::System.Data.DataColumn columnGoodsLGroup;
            
            private global::System.Data.DataColumn columnGoodsLGroupName;
            
            private global::System.Data.DataColumn columnShipmentCnt;
            
            private global::System.Data.DataColumn columnListPriceTaxExcFl;
            
            private global::System.Data.DataColumn columnOpenPriceDiv;
            
            private global::System.Data.DataColumn columnSalesUnPrcTaxExcFl;
            
            private global::System.Data.DataColumn columnSalesUnitCost;
            
            private global::System.Data.DataColumn columnSalesMoneyTaxExc;
            
            private global::System.Data.DataColumn columnConsTaxLayMethod;
            
            private global::System.Data.DataColumn columnSalesTotalTaxInc;
            
            private global::System.Data.DataColumn columnSalesPriceConsTax;
            
            private global::System.Data.DataColumn columnTotalCost;
            
            private global::System.Data.DataColumn columnGrossProfitDetail;
            
            private global::System.Data.DataColumn columnGrossProfitMargin;
            
            private global::System.Data.DataColumn columnCategoryNo;
            
            private global::System.Data.DataColumn columnModelFullName;
            
            private global::System.Data.DataColumn columnFirstEntryDate;
            
            private global::System.Data.DataColumn columnFrameNo;
            
            private global::System.Data.DataColumn columnFullModel;
            
            private global::System.Data.DataColumn columnSlipNote;
            
            private global::System.Data.DataColumn columnSlipNote2;
            
            private global::System.Data.DataColumn columnSlipNote3;
            
            private global::System.Data.DataColumn columnFrontEmployeeNm;
            
            private global::System.Data.DataColumn columnSalesInputName;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerSnm;
            
            private global::System.Data.DataColumn columnSupplierCd;
            
            private global::System.Data.DataColumn columnSupplierSnm;
            
            private global::System.Data.DataColumn columnPartySaleSlipNum;
            
            private global::System.Data.DataColumn columnCarMngCode;
            
            private global::System.Data.DataColumn columnAcceptAnOrderNo;
            
            private global::System.Data.DataColumn columnShipSalesSlipNum;
            
            private global::System.Data.DataColumn columnSrcSalesSlipNum;
            
            private global::System.Data.DataColumn columnGoodsKindCode;
            
            private global::System.Data.DataColumn columnGoodsKindCodeName;
            
            private global::System.Data.DataColumn columnSalesOrderDivCd;
            
            private global::System.Data.DataColumn columnSalesOrderDivCdName;
            
            private global::System.Data.DataColumn columnWarehouseCd;
            
            private global::System.Data.DataColumn columnWarehouseName;
            
            private global::System.Data.DataColumn columnWarehouseShelfNo;
            
            private global::System.Data.DataColumn columnSupplierSlipNo;
            
            private global::System.Data.DataColumn columnUOESupplierCd;
            
            private global::System.Data.DataColumn columnUOESupplierSnm;
            
            private global::System.Data.DataColumn columnUOERemark1;
            
            private global::System.Data.DataColumn columnUOERemark2;
            
            private global::System.Data.DataColumn columnGuideName;
            
            private global::System.Data.DataColumn columnSectionCd;
            
            private global::System.Data.DataColumn columnSectionGuideName;
            
            private global::System.Data.DataColumn columnDtlNote;
            
            private global::System.Data.DataColumn columnColorName1;
            
            private global::System.Data.DataColumn columnTrimName;
            
            private global::System.Data.DataColumn columnStdUnPrcLPrice;
            
            private global::System.Data.DataColumn columnStdUnPrcSalUnPrc;
            
            private global::System.Data.DataColumn columnStdUnPrcUnCst;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnMakerName;
            
            private global::System.Data.DataColumn columnCost;
            
            private global::System.Data.DataColumn columnCustSlipNo;
            
            private global::System.Data.DataColumn columnAddUpADate;
            
            private global::System.Data.DataColumn columnAccRecDivCd;
            
            private global::System.Data.DataColumn columnAccRecDivCdName;
            
            private global::System.Data.DataColumn columnDebitNoteDiv;
            
            private global::System.Data.DataColumn columnStockPartySaleSlipNum;
            
            private global::System.Data.DataColumn columnAddresseeCode;
            
            private global::System.Data.DataColumn columnAddresseeName;
            
            private global::System.Data.DataColumn columnAcptAnOdrRemainCnt;
            
            private global::System.Data.DataColumn columnEnterpriseGanreCode;
            
            private global::System.Data.DataColumn columnInputDay;
            
            private global::System.Data.DataColumn columnCarMngNo;
            
            private global::System.Data.DataColumn columnMakerCode;
            
            private global::System.Data.DataColumn columnModelCode;
            
            private global::System.Data.DataColumn columnModelSubCode;
            
            private global::System.Data.DataColumn columnEngineModelNm;
            
            private global::System.Data.DataColumn columnColorCode;
            
            private global::System.Data.DataColumn columnTrimCode;
            
            private global::System.Data.DataColumn columnDeliveredGoodsDiv;
            
            private global::System.Data.DataColumn columnFullModelFixedNoAry;
            
            private global::System.Data.DataColumn columnCategoryObjAry;
            
            private global::System.Data.DataColumn columnModelDesignationNoOrg;
            
            private global::System.Data.DataColumn columnCategoryNoOrg;
            
            private global::System.Data.DataColumn columnAddresseeName1;
            
            private global::System.Data.DataColumn columnAddresseeName2;
            
            private global::System.Data.DataColumn columnSalesInputCode;
            
            private global::System.Data.DataColumn columnFrontEmployeeCd;
            
            private global::System.Data.DataColumn columnHistoryDivName;
            
            private global::System.Data.DataColumn columnMileage;
            
            private global::System.Data.DataColumn columnCarNote;
            
            private global::System.Data.DataColumn columnSlipPrintTime;
            
            private global::System.Data.DataColumn columnBfUnitCost;
            
            private global::System.Data.DataColumn columnBfSalesUnitPrice;
            
            private global::System.Data.DataColumn columnRetuppercnt;
            
            private global::System.Data.DataColumn columnRetuppercntDiv;
            
            private global::System.Data.DataColumn columnModelHalfName;
            
            private global::System.Data.DataColumn columnFreeSrchMdlFxdNoAry;
            
            private global::System.Data.DataColumn columnBfListPrice;
            
            private global::System.Data.DataColumn columnSalesRate;
            
            private global::System.Data.DataColumn columnCostRate;
            
            private global::System.Data.DataColumn columnAutoAnswerDivSCM;
            
            private global::System.Data.DataColumn columnInquiryNumber;
            
            private global::System.Data.DataColumn columnUpdateDateTime;
            
            private global::System.Data.DataColumn columnSalesDateJP;
            
            private global::System.Data.DataColumn columnAddUpADateJP;
            
            private global::System.Data.DataColumn columnInputDayJP;
            
            private global::System.Data.DataColumn columnUpdateDateTimeJP;
            
            private global::System.Data.DataColumn columnChangeGoodsNo;
            
            private global::System.Data.DataColumn columnSalesRecognitionCnt;
            
            private global::System.Data.DataColumn columnSalesNotRecognitionCnt;
            
            private global::System.Data.DataColumn columnSecondSalePrice;
            
            private global::System.Data.DataColumn columnSalesAreaName;
            
            private global::System.Data.DataColumn columnCustAnalysCode1;
            
            private global::System.Data.DataColumn columnCustAnalysCode2;
            
            private global::System.Data.DataColumn columnCustAnalysCode3;
            
            private global::System.Data.DataColumn columnCustAnalysCode4;
            
            private global::System.Data.DataColumn columnCustAnalysCode5;
            
            private global::System.Data.DataColumn columnCustAnalysCode6;
            
            private global::System.Data.DataColumn columnConsTaxRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailDataTable() {
                this.TableName = "SalesDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectionCheckColumn {
                get {
                    return this.columnSelectionCheck;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataDivColumn {
                get {
                    return this.columnDataDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipNumColumn {
                get {
                    return this.columnSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesRowNoColumn {
                get {
                    return this.columnSalesRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcptAnOdrStatusColumn {
                get {
                    return this.columnAcptAnOdrStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipCdColumn {
                get {
                    return this.columnSalesSlipCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipCdNameColumn {
                get {
                    return this.columnSalesSlipCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipCdDtlColumn {
                get {
                    return this.columnSalesSlipCdDtl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipCdDtlNameColumn {
                get {
                    return this.columnSalesSlipCdDtlName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesEmployeeNmColumn {
                get {
                    return this.columnSalesEmployeeNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesTotalTaxExcColumn {
                get {
                    return this.columnSalesTotalTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGoodsCodeColumn {
                get {
                    return this.columnBLGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGroupCodeColumn {
                get {
                    return this.columnBLGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMGroupColumn {
                get {
                    return this.columnGoodsMGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMGroupNameColumn {
                get {
                    return this.columnGoodsMGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsLGroupColumn {
                get {
                    return this.columnGoodsLGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsLGroupNameColumn {
                get {
                    return this.columnGoodsLGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentCntColumn {
                get {
                    return this.columnShipmentCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceTaxExcFlColumn {
                get {
                    return this.columnListPriceTaxExcFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OpenPriceDivColumn {
                get {
                    return this.columnOpenPriceDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnPrcTaxExcFlColumn {
                get {
                    return this.columnSalesUnPrcTaxExcFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnitCostColumn {
                get {
                    return this.columnSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesMoneyTaxExcColumn {
                get {
                    return this.columnSalesMoneyTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsTaxLayMethodColumn {
                get {
                    return this.columnConsTaxLayMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesTotalTaxIncColumn {
                get {
                    return this.columnSalesTotalTaxInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesPriceConsTaxColumn {
                get {
                    return this.columnSalesPriceConsTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalCostColumn {
                get {
                    return this.columnTotalCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfitDetailColumn {
                get {
                    return this.columnGrossProfitDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfitMarginColumn {
                get {
                    return this.columnGrossProfitMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryNoColumn {
                get {
                    return this.columnCategoryNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelFullNameColumn {
                get {
                    return this.columnModelFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstEntryDateColumn {
                get {
                    return this.columnFirstEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrameNoColumn {
                get {
                    return this.columnFrameNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullModelColumn {
                get {
                    return this.columnFullModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNoteColumn {
                get {
                    return this.columnSlipNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNote2Column {
                get {
                    return this.columnSlipNote2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNote3Column {
                get {
                    return this.columnSlipNote3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrontEmployeeNmColumn {
                get {
                    return this.columnFrontEmployeeNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesInputNameColumn {
                get {
                    return this.columnSalesInputName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerSnmColumn {
                get {
                    return this.columnCustomerSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCdColumn {
                get {
                    return this.columnSupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSnmColumn {
                get {
                    return this.columnSupplierSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartySaleSlipNumColumn {
                get {
                    return this.columnPartySaleSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarMngCodeColumn {
                get {
                    return this.columnCarMngCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcceptAnOrderNoColumn {
                get {
                    return this.columnAcceptAnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipSalesSlipNumColumn {
                get {
                    return this.columnShipSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrcSalesSlipNumColumn {
                get {
                    return this.columnSrcSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsKindCodeColumn {
                get {
                    return this.columnGoodsKindCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsKindCodeNameColumn {
                get {
                    return this.columnGoodsKindCodeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesOrderDivCdColumn {
                get {
                    return this.columnSalesOrderDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesOrderDivCdNameColumn {
                get {
                    return this.columnSalesOrderDivCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCdColumn {
                get {
                    return this.columnWarehouseCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseNameColumn {
                get {
                    return this.columnWarehouseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseShelfNoColumn {
                get {
                    return this.columnWarehouseShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNoColumn {
                get {
                    return this.columnSupplierSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOESupplierCdColumn {
                get {
                    return this.columnUOESupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOESupplierSnmColumn {
                get {
                    return this.columnUOESupplierSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOERemark1Column {
                get {
                    return this.columnUOERemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOERemark2Column {
                get {
                    return this.columnUOERemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GuideNameColumn {
                get {
                    return this.columnGuideName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionCdColumn {
                get {
                    return this.columnSectionCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionGuideNameColumn {
                get {
                    return this.columnSectionGuideName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DtlNoteColumn {
                get {
                    return this.columnDtlNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColorName1Column {
                get {
                    return this.columnColorName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrimNameColumn {
                get {
                    return this.columnTrimName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StdUnPrcLPriceColumn {
                get {
                    return this.columnStdUnPrcLPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StdUnPrcSalUnPrcColumn {
                get {
                    return this.columnStdUnPrcSalUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StdUnPrcUnCstColumn {
                get {
                    return this.columnStdUnPrcUnCst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerNameColumn {
                get {
                    return this.columnMakerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustSlipNoColumn {
                get {
                    return this.columnCustSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddUpADateColumn {
                get {
                    return this.columnAddUpADate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccRecDivCdColumn {
                get {
                    return this.columnAccRecDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccRecDivCdNameColumn {
                get {
                    return this.columnAccRecDivCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteDivColumn {
                get {
                    return this.columnDebitNoteDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockPartySaleSlipNumColumn {
                get {
                    return this.columnStockPartySaleSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeCodeColumn {
                get {
                    return this.columnAddresseeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeNameColumn {
                get {
                    return this.columnAddresseeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcptAnOdrRemainCntColumn {
                get {
                    return this.columnAcptAnOdrRemainCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterpriseGanreCodeColumn {
                get {
                    return this.columnEnterpriseGanreCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputDayColumn {
                get {
                    return this.columnInputDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarMngNoColumn {
                get {
                    return this.columnCarMngNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerCodeColumn {
                get {
                    return this.columnMakerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelCodeColumn {
                get {
                    return this.columnModelCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelSubCodeColumn {
                get {
                    return this.columnModelSubCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EngineModelNmColumn {
                get {
                    return this.columnEngineModelNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColorCodeColumn {
                get {
                    return this.columnColorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrimCodeColumn {
                get {
                    return this.columnTrimCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveredGoodsDivColumn {
                get {
                    return this.columnDeliveredGoodsDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullModelFixedNoAryColumn {
                get {
                    return this.columnFullModelFixedNoAry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryObjAryColumn {
                get {
                    return this.columnCategoryObjAry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelDesignationNoOrgColumn {
                get {
                    return this.columnModelDesignationNoOrg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryNoOrgColumn {
                get {
                    return this.columnCategoryNoOrg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeName1Column {
                get {
                    return this.columnAddresseeName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeName2Column {
                get {
                    return this.columnAddresseeName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesInputCodeColumn {
                get {
                    return this.columnSalesInputCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrontEmployeeCdColumn {
                get {
                    return this.columnFrontEmployeeCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryDivNameColumn {
                get {
                    return this.columnHistoryDivName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MileageColumn {
                get {
                    return this.columnMileage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarNoteColumn {
                get {
                    return this.columnCarNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipPrintTimeColumn {
                get {
                    return this.columnSlipPrintTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfUnitCostColumn {
                get {
                    return this.columnBfUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfSalesUnitPriceColumn {
                get {
                    return this.columnBfSalesUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RetuppercntColumn {
                get {
                    return this.columnRetuppercnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RetuppercntDivColumn {
                get {
                    return this.columnRetuppercntDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelHalfNameColumn {
                get {
                    return this.columnModelHalfName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreeSrchMdlFxdNoAryColumn {
                get {
                    return this.columnFreeSrchMdlFxdNoAry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfListPriceColumn {
                get {
                    return this.columnBfListPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesRateColumn {
                get {
                    return this.columnSalesRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostRateColumn {
                get {
                    return this.columnCostRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AutoAnswerDivSCMColumn {
                get {
                    return this.columnAutoAnswerDivSCM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InquiryNumberColumn {
                get {
                    return this.columnInquiryNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateDateTimeColumn {
                get {
                    return this.columnUpdateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateJPColumn {
                get {
                    return this.columnSalesDateJP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddUpADateJPColumn {
                get {
                    return this.columnAddUpADateJP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputDayJPColumn {
                get {
                    return this.columnInputDayJP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateDateTimeJPColumn {
                get {
                    return this.columnUpdateDateTimeJP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChangeGoodsNoColumn {
                get {
                    return this.columnChangeGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesRecognitionCntColumn {
                get {
                    return this.columnSalesRecognitionCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesNotRecognitionCntColumn {
                get {
                    return this.columnSalesNotRecognitionCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SecondSalePriceColumn {
                get {
                    return this.columnSecondSalePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesAreaNameColumn {
                get {
                    return this.columnSalesAreaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustAnalysCode1Column {
                get {
                    return this.columnCustAnalysCode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustAnalysCode2Column {
                get {
                    return this.columnCustAnalysCode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustAnalysCode3Column {
                get {
                    return this.columnCustAnalysCode3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustAnalysCode4Column {
                get {
                    return this.columnCustAnalysCode4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustAnalysCode5Column {
                get {
                    return this.columnCustAnalysCode5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustAnalysCode6Column {
                get {
                    return this.columnCustAnalysCode6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsTaxRateColumn {
                get {
                    return this.columnConsTaxRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRow this[int index] {
                get {
                    return ((SalesDetailRow)(this.Rows[index]));
                }
            }
            
            public event SalesDetailRowChangeEventHandler SalesDetailRowChanging;
            
            public event SalesDetailRowChangeEventHandler SalesDetailRowChanged;
            
            public event SalesDetailRowChangeEventHandler SalesDetailRowDeleting;
            
            public event SalesDetailRowChangeEventHandler SalesDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesDetailRow(SalesDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRow AddSalesDetailRow(
                        bool SelectionCheck, 
                        int RowNo, 
                        int DataDiv, 
                        System.DateTime SalesDate, 
                        string SalesSlipNum, 
                        int SalesRowNo, 
                        int AcptAnOdrStatus, 
                        int SalesSlipCd, 
                        string SalesSlipCdName, 
                        int SalesSlipCdDtl, 
                        string SalesSlipCdDtlName, 
                        string SalesEmployeeNm, 
                        long SalesTotalTaxExc, 
                        string GoodsName, 
                        string GoodsNo, 
                        string BLGoodsCode, 
                        int BLGroupCode, 
                        int GoodsMGroup, 
                        string GoodsMGroupName, 
                        int GoodsLGroup, 
                        string GoodsLGroupName, 
                        double ShipmentCnt, 
                        double ListPriceTaxExcFl, 
                        int OpenPriceDiv, 
                        double SalesUnPrcTaxExcFl, 
                        double SalesUnitCost, 
                        long SalesMoneyTaxExc, 
                        int ConsTaxLayMethod, 
                        long SalesTotalTaxInc, 
                        long SalesPriceConsTax, 
                        long TotalCost, 
                        long GrossProfitDetail, 
                        decimal GrossProfitMargin, 
                        string CategoryNo, 
                        string ModelFullName, 
                        string FirstEntryDate, 
                        string FrameNo, 
                        string FullModel, 
                        string SlipNote, 
                        string SlipNote2, 
                        string SlipNote3, 
                        string FrontEmployeeNm, 
                        string SalesInputName, 
                        int CustomerCode, 
                        string CustomerSnm, 
                        int SupplierCd, 
                        string SupplierSnm, 
                        string PartySaleSlipNum, 
                        string CarMngCode, 
                        string AcceptAnOrderNo, 
                        string ShipSalesSlipNum, 
                        string SrcSalesSlipNum, 
                        int GoodsKindCode, 
                        string GoodsKindCodeName, 
                        int SalesOrderDivCd, 
                        string SalesOrderDivCdName, 
                        string WarehouseCd, 
                        string WarehouseName, 
                        string WarehouseShelfNo, 
                        int SupplierSlipNo, 
                        string UOESupplierCd, 
                        string UOESupplierSnm, 
                        string UOERemark1, 
                        string UOERemark2, 
                        string GuideName, 
                        string SectionCd, 
                        string SectionGuideName, 
                        string DtlNote, 
                        string ColorName1, 
                        string TrimName, 
                        double StdUnPrcLPrice, 
                        double StdUnPrcSalUnPrc, 
                        double StdUnPrcUnCst, 
                        int GoodsMakerCd, 
                        string MakerName, 
                        long Cost, 
                        int CustSlipNo, 
                        System.DateTime AddUpADate, 
                        int AccRecDivCd, 
                        string AccRecDivCdName, 
                        string DebitNoteDiv, 
                        string StockPartySaleSlipNum, 
                        int AddresseeCode, 
                        string AddresseeName, 
                        double AcptAnOdrRemainCnt, 
                        string EnterpriseGanreCode, 
                        System.DateTime InputDay, 
                        int CarMngNo, 
                        int MakerCode, 
                        int ModelCode, 
                        int ModelSubCode, 
                        string EngineModelNm, 
                        string ColorCode, 
                        string TrimCode, 
                        int DeliveredGoodsDiv, 
                        object FullModelFixedNoAry, 
                        object CategoryObjAry, 
                        int ModelDesignationNoOrg, 
                        int CategoryNoOrg, 
                        string AddresseeName1, 
                        string AddresseeName2, 
                        string SalesInputCode, 
                        string FrontEmployeeCd, 
                        string HistoryDivName, 
                        int Mileage, 
                        string CarNote, 
                        string SlipPrintTime, 
                        double BfUnitCost, 
                        double BfSalesUnitPrice, 
                        double Retuppercnt, 
                        int RetuppercntDiv, 
                        string ModelHalfName, 
                        string[] FreeSrchMdlFxdNoAry, 
                        double BfListPrice, 
                        double SalesRate, 
                        double CostRate, 
                        string AutoAnswerDivSCM, 
                        string InquiryNumber, 
                        string UpdateDateTime, 
                        string SalesDateJP, 
                        string AddUpADateJP, 
                        string InputDayJP, 
                        string UpdateDateTimeJP, 
                        string ChangeGoodsNo, 
                        double SalesRecognitionCnt, 
                        double SalesNotRecognitionCnt, 
                        long SecondSalePrice, 
                        string SalesAreaName, 
                        int CustAnalysCode1, 
                        int CustAnalysCode2, 
                        int CustAnalysCode3, 
                        int CustAnalysCode4, 
                        int CustAnalysCode5, 
                        int CustAnalysCode6, 
                        double ConsTaxRate) {
                SalesDetailRow rowSalesDetailRow = ((SalesDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SelectionCheck,
                        RowNo,
                        DataDiv,
                        SalesDate,
                        SalesSlipNum,
                        SalesRowNo,
                        AcptAnOdrStatus,
                        SalesSlipCd,
                        SalesSlipCdName,
                        SalesSlipCdDtl,
                        SalesSlipCdDtlName,
                        SalesEmployeeNm,
                        SalesTotalTaxExc,
                        GoodsName,
                        GoodsNo,
                        BLGoodsCode,
                        BLGroupCode,
                        GoodsMGroup,
                        GoodsMGroupName,
                        GoodsLGroup,
                        GoodsLGroupName,
                        ShipmentCnt,
                        ListPriceTaxExcFl,
                        OpenPriceDiv,
                        SalesUnPrcTaxExcFl,
                        SalesUnitCost,
                        SalesMoneyTaxExc,
                        ConsTaxLayMethod,
                        SalesTotalTaxInc,
                        SalesPriceConsTax,
                        TotalCost,
                        GrossProfitDetail,
                        GrossProfitMargin,
                        CategoryNo,
                        ModelFullName,
                        FirstEntryDate,
                        FrameNo,
                        FullModel,
                        SlipNote,
                        SlipNote2,
                        SlipNote3,
                        FrontEmployeeNm,
                        SalesInputName,
                        CustomerCode,
                        CustomerSnm,
                        SupplierCd,
                        SupplierSnm,
                        PartySaleSlipNum,
                        CarMngCode,
                        AcceptAnOrderNo,
                        ShipSalesSlipNum,
                        SrcSalesSlipNum,
                        GoodsKindCode,
                        GoodsKindCodeName,
                        SalesOrderDivCd,
                        SalesOrderDivCdName,
                        WarehouseCd,
                        WarehouseName,
                        WarehouseShelfNo,
                        SupplierSlipNo,
                        UOESupplierCd,
                        UOESupplierSnm,
                        UOERemark1,
                        UOERemark2,
                        GuideName,
                        SectionCd,
                        SectionGuideName,
                        DtlNote,
                        ColorName1,
                        TrimName,
                        StdUnPrcLPrice,
                        StdUnPrcSalUnPrc,
                        StdUnPrcUnCst,
                        GoodsMakerCd,
                        MakerName,
                        Cost,
                        CustSlipNo,
                        AddUpADate,
                        AccRecDivCd,
                        AccRecDivCdName,
                        DebitNoteDiv,
                        StockPartySaleSlipNum,
                        AddresseeCode,
                        AddresseeName,
                        AcptAnOdrRemainCnt,
                        EnterpriseGanreCode,
                        InputDay,
                        CarMngNo,
                        MakerCode,
                        ModelCode,
                        ModelSubCode,
                        EngineModelNm,
                        ColorCode,
                        TrimCode,
                        DeliveredGoodsDiv,
                        FullModelFixedNoAry,
                        CategoryObjAry,
                        ModelDesignationNoOrg,
                        CategoryNoOrg,
                        AddresseeName1,
                        AddresseeName2,
                        SalesInputCode,
                        FrontEmployeeCd,
                        HistoryDivName,
                        Mileage,
                        CarNote,
                        SlipPrintTime,
                        BfUnitCost,
                        BfSalesUnitPrice,
                        Retuppercnt,
                        RetuppercntDiv,
                        ModelHalfName,
                        FreeSrchMdlFxdNoAry,
                        BfListPrice,
                        SalesRate,
                        CostRate,
                        AutoAnswerDivSCM,
                        InquiryNumber,
                        UpdateDateTime,
                        SalesDateJP,
                        AddUpADateJP,
                        InputDayJP,
                        UpdateDateTimeJP,
                        ChangeGoodsNo,
                        SalesRecognitionCnt,
                        SalesNotRecognitionCnt,
                        SecondSalePrice,
                        SalesAreaName,
                        CustAnalysCode1,
                        CustAnalysCode2,
                        CustAnalysCode3,
                        CustAnalysCode4,
                        CustAnalysCode5,
                        CustAnalysCode6,
                        ConsTaxRate};
                rowSalesDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesDetailRow);
                return rowSalesDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRow FindByRowNo(int RowNo) {
                return ((SalesDetailRow)(this.Rows.Find(new object[] {
                            RowNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesDetailDataTable cln = ((SalesDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSelectionCheck = base.Columns["SelectionCheck"];
                this.columnRowNo = base.Columns["RowNo"];
                this.columnDataDiv = base.Columns["DataDiv"];
                this.columnSalesDate = base.Columns["SalesDate"];
                this.columnSalesSlipNum = base.Columns["SalesSlipNum"];
                this.columnSalesRowNo = base.Columns["SalesRowNo"];
                this.columnAcptAnOdrStatus = base.Columns["AcptAnOdrStatus"];
                this.columnSalesSlipCd = base.Columns["SalesSlipCd"];
                this.columnSalesSlipCdName = base.Columns["SalesSlipCdName"];
                this.columnSalesSlipCdDtl = base.Columns["SalesSlipCdDtl"];
                this.columnSalesSlipCdDtlName = base.Columns["SalesSlipCdDtlName"];
                this.columnSalesEmployeeNm = base.Columns["SalesEmployeeNm"];
                this.columnSalesTotalTaxExc = base.Columns["SalesTotalTaxExc"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnBLGoodsCode = base.Columns["BLGoodsCode"];
                this.columnBLGroupCode = base.Columns["BLGroupCode"];
                this.columnGoodsMGroup = base.Columns["GoodsMGroup"];
                this.columnGoodsMGroupName = base.Columns["GoodsMGroupName"];
                this.columnGoodsLGroup = base.Columns["GoodsLGroup"];
                this.columnGoodsLGroupName = base.Columns["GoodsLGroupName"];
                this.columnShipmentCnt = base.Columns["ShipmentCnt"];
                this.columnListPriceTaxExcFl = base.Columns["ListPriceTaxExcFl"];
                this.columnOpenPriceDiv = base.Columns["OpenPriceDiv"];
                this.columnSalesUnPrcTaxExcFl = base.Columns["SalesUnPrcTaxExcFl"];
                this.columnSalesUnitCost = base.Columns["SalesUnitCost"];
                this.columnSalesMoneyTaxExc = base.Columns["SalesMoneyTaxExc"];
                this.columnConsTaxLayMethod = base.Columns["ConsTaxLayMethod"];
                this.columnSalesTotalTaxInc = base.Columns["SalesTotalTaxInc"];
                this.columnSalesPriceConsTax = base.Columns["SalesPriceConsTax"];
                this.columnTotalCost = base.Columns["TotalCost"];
                this.columnGrossProfitDetail = base.Columns["GrossProfitDetail"];
                this.columnGrossProfitMargin = base.Columns["GrossProfitMargin"];
                this.columnCategoryNo = base.Columns["CategoryNo"];
                this.columnModelFullName = base.Columns["ModelFullName"];
                this.columnFirstEntryDate = base.Columns["FirstEntryDate"];
                this.columnFrameNo = base.Columns["FrameNo"];
                this.columnFullModel = base.Columns["FullModel"];
                this.columnSlipNote = base.Columns["SlipNote"];
                this.columnSlipNote2 = base.Columns["SlipNote2"];
                this.columnSlipNote3 = base.Columns["SlipNote3"];
                this.columnFrontEmployeeNm = base.Columns["FrontEmployeeNm"];
                this.columnSalesInputName = base.Columns["SalesInputName"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerSnm = base.Columns["CustomerSnm"];
                this.columnSupplierCd = base.Columns["SupplierCd"];
                this.columnSupplierSnm = base.Columns["SupplierSnm"];
                this.columnPartySaleSlipNum = base.Columns["PartySaleSlipNum"];
                this.columnCarMngCode = base.Columns["CarMngCode"];
                this.columnAcceptAnOrderNo = base.Columns["AcceptAnOrderNo"];
                this.columnShipSalesSlipNum = base.Columns["ShipSalesSlipNum"];
                this.columnSrcSalesSlipNum = base.Columns["SrcSalesSlipNum"];
                this.columnGoodsKindCode = base.Columns["GoodsKindCode"];
                this.columnGoodsKindCodeName = base.Columns["GoodsKindCodeName"];
                this.columnSalesOrderDivCd = base.Columns["SalesOrderDivCd"];
                this.columnSalesOrderDivCdName = base.Columns["SalesOrderDivCdName"];
                this.columnWarehouseCd = base.Columns["WarehouseCd"];
                this.columnWarehouseName = base.Columns["WarehouseName"];
                this.columnWarehouseShelfNo = base.Columns["WarehouseShelfNo"];
                this.columnSupplierSlipNo = base.Columns["SupplierSlipNo"];
                this.columnUOESupplierCd = base.Columns["UOESupplierCd"];
                this.columnUOESupplierSnm = base.Columns["UOESupplierSnm"];
                this.columnUOERemark1 = base.Columns["UOERemark1"];
                this.columnUOERemark2 = base.Columns["UOERemark2"];
                this.columnGuideName = base.Columns["GuideName"];
                this.columnSectionCd = base.Columns["SectionCd"];
                this.columnSectionGuideName = base.Columns["SectionGuideName"];
                this.columnDtlNote = base.Columns["DtlNote"];
                this.columnColorName1 = base.Columns["ColorName1"];
                this.columnTrimName = base.Columns["TrimName"];
                this.columnStdUnPrcLPrice = base.Columns["StdUnPrcLPrice"];
                this.columnStdUnPrcSalUnPrc = base.Columns["StdUnPrcSalUnPrc"];
                this.columnStdUnPrcUnCst = base.Columns["StdUnPrcUnCst"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnMakerName = base.Columns["MakerName"];
                this.columnCost = base.Columns["Cost"];
                this.columnCustSlipNo = base.Columns["CustSlipNo"];
                this.columnAddUpADate = base.Columns["AddUpADate"];
                this.columnAccRecDivCd = base.Columns["AccRecDivCd"];
                this.columnAccRecDivCdName = base.Columns["AccRecDivCdName"];
                this.columnDebitNoteDiv = base.Columns["DebitNoteDiv"];
                this.columnStockPartySaleSlipNum = base.Columns["StockPartySaleSlipNum"];
                this.columnAddresseeCode = base.Columns["AddresseeCode"];
                this.columnAddresseeName = base.Columns["AddresseeName"];
                this.columnAcptAnOdrRemainCnt = base.Columns["AcptAnOdrRemainCnt"];
                this.columnEnterpriseGanreCode = base.Columns["EnterpriseGanreCode"];
                this.columnInputDay = base.Columns["InputDay"];
                this.columnCarMngNo = base.Columns["CarMngNo"];
                this.columnMakerCode = base.Columns["MakerCode"];
                this.columnModelCode = base.Columns["ModelCode"];
                this.columnModelSubCode = base.Columns["ModelSubCode"];
                this.columnEngineModelNm = base.Columns["EngineModelNm"];
                this.columnColorCode = base.Columns["ColorCode"];
                this.columnTrimCode = base.Columns["TrimCode"];
                this.columnDeliveredGoodsDiv = base.Columns["DeliveredGoodsDiv"];
                this.columnFullModelFixedNoAry = base.Columns["FullModelFixedNoAry"];
                this.columnCategoryObjAry = base.Columns["CategoryObjAry"];
                this.columnModelDesignationNoOrg = base.Columns["ModelDesignationNoOrg"];
                this.columnCategoryNoOrg = base.Columns["CategoryNoOrg"];
                this.columnAddresseeName1 = base.Columns["AddresseeName1"];
                this.columnAddresseeName2 = base.Columns["AddresseeName2"];
                this.columnSalesInputCode = base.Columns["SalesInputCode"];
                this.columnFrontEmployeeCd = base.Columns["FrontEmployeeCd"];
                this.columnHistoryDivName = base.Columns["HistoryDivName"];
                this.columnMileage = base.Columns["Mileage"];
                this.columnCarNote = base.Columns["CarNote"];
                this.columnSlipPrintTime = base.Columns["SlipPrintTime"];
                this.columnBfUnitCost = base.Columns["BfUnitCost"];
                this.columnBfSalesUnitPrice = base.Columns["BfSalesUnitPrice"];
                this.columnRetuppercnt = base.Columns["Retuppercnt"];
                this.columnRetuppercntDiv = base.Columns["RetuppercntDiv"];
                this.columnModelHalfName = base.Columns["ModelHalfName"];
                this.columnFreeSrchMdlFxdNoAry = base.Columns["FreeSrchMdlFxdNoAry"];
                this.columnBfListPrice = base.Columns["BfListPrice"];
                this.columnSalesRate = base.Columns["SalesRate"];
                this.columnCostRate = base.Columns["CostRate"];
                this.columnAutoAnswerDivSCM = base.Columns["AutoAnswerDivSCM"];
                this.columnInquiryNumber = base.Columns["InquiryNumber"];
                this.columnUpdateDateTime = base.Columns["UpdateDateTime"];
                this.columnSalesDateJP = base.Columns["SalesDateJP"];
                this.columnAddUpADateJP = base.Columns["AddUpADateJP"];
                this.columnInputDayJP = base.Columns["InputDayJP"];
                this.columnUpdateDateTimeJP = base.Columns["UpdateDateTimeJP"];
                this.columnChangeGoodsNo = base.Columns["ChangeGoodsNo"];
                this.columnSalesRecognitionCnt = base.Columns["SalesRecognitionCnt"];
                this.columnSalesNotRecognitionCnt = base.Columns["SalesNotRecognitionCnt"];
                this.columnSecondSalePrice = base.Columns["SecondSalePrice"];
                this.columnSalesAreaName = base.Columns["SalesAreaName"];
                this.columnCustAnalysCode1 = base.Columns["CustAnalysCode1"];
                this.columnCustAnalysCode2 = base.Columns["CustAnalysCode2"];
                this.columnCustAnalysCode3 = base.Columns["CustAnalysCode3"];
                this.columnCustAnalysCode4 = base.Columns["CustAnalysCode4"];
                this.columnCustAnalysCode5 = base.Columns["CustAnalysCode5"];
                this.columnCustAnalysCode6 = base.Columns["CustAnalysCode6"];
                this.columnConsTaxRate = base.Columns["ConsTaxRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                //----- ADD K2014/06/04 By 呉軍 Redmine42764 №8 東亜商会得意先電子元帳 --------->>>>>
                // 東亜商会個別オプション
                int _opt_Toua;

                // 東亜商会個別オプションコードの取得
                Broadleaf.Application.Remoting.ParamData.PurchaseStatus touaCustom;
                touaCustom = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_CPM_ToaCustom);
                if (touaCustom == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
                {
                    _opt_Toua = Convert.ToInt32(Broadleaf.Application.Controller.CustPrtSlipSearchAcs.Option.ON);
                }
                else
                {
                    _opt_Toua = Convert.ToInt32(Broadleaf.Application.Controller.CustPrtSlipSearchAcs.Option.OFF);
                }
                //----- ADD K2014/06/04 By 呉軍 Redmine42764 №8 東亜商会得意先電子元帳 ---------<<<<<
                this.columnSelectionCheck = new global::System.Data.DataColumn("SelectionCheck", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectionCheck);
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnDataDiv = new global::System.Data.DataColumn("DataDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataDiv);
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
                this.columnSalesSlipNum = new global::System.Data.DataColumn("SalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipNum);
                this.columnSalesRowNo = new global::System.Data.DataColumn("SalesRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesRowNo);
                this.columnAcptAnOdrStatus = new global::System.Data.DataColumn("AcptAnOdrStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcptAnOdrStatus);
                this.columnSalesSlipCd = new global::System.Data.DataColumn("SalesSlipCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipCd);
                this.columnSalesSlipCdName = new global::System.Data.DataColumn("SalesSlipCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipCdName);
                this.columnSalesSlipCdDtl = new global::System.Data.DataColumn("SalesSlipCdDtl", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipCdDtl);
                this.columnSalesSlipCdDtlName = new global::System.Data.DataColumn("SalesSlipCdDtlName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipCdDtlName);
                this.columnSalesEmployeeNm = new global::System.Data.DataColumn("SalesEmployeeNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesEmployeeNm);
                this.columnSalesTotalTaxExc = new global::System.Data.DataColumn("SalesTotalTaxExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTotalTaxExc);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnBLGoodsCode = new global::System.Data.DataColumn("BLGoodsCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGoodsCode);
                this.columnBLGroupCode = new global::System.Data.DataColumn("BLGroupCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGroupCode);
                this.columnGoodsMGroup = new global::System.Data.DataColumn("GoodsMGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMGroup);
                this.columnGoodsMGroupName = new global::System.Data.DataColumn("GoodsMGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMGroupName);
                this.columnGoodsLGroup = new global::System.Data.DataColumn("GoodsLGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsLGroup);
                this.columnGoodsLGroupName = new global::System.Data.DataColumn("GoodsLGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsLGroupName);
                this.columnShipmentCnt = new global::System.Data.DataColumn("ShipmentCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentCnt);
                this.columnListPriceTaxExcFl = new global::System.Data.DataColumn("ListPriceTaxExcFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPriceTaxExcFl);
                this.columnOpenPriceDiv = new global::System.Data.DataColumn("OpenPriceDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpenPriceDiv);
                this.columnSalesUnPrcTaxExcFl = new global::System.Data.DataColumn("SalesUnPrcTaxExcFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnPrcTaxExcFl);
                this.columnSalesUnitCost = new global::System.Data.DataColumn("SalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnitCost);
                this.columnSalesMoneyTaxExc = new global::System.Data.DataColumn("SalesMoneyTaxExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMoneyTaxExc);
                this.columnConsTaxLayMethod = new global::System.Data.DataColumn("ConsTaxLayMethod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsTaxLayMethod);
                this.columnSalesTotalTaxInc = new global::System.Data.DataColumn("SalesTotalTaxInc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTotalTaxInc);
                this.columnSalesPriceConsTax = new global::System.Data.DataColumn("SalesPriceConsTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPriceConsTax);
                this.columnTotalCost = new global::System.Data.DataColumn("TotalCost", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCost);
                this.columnGrossProfitDetail = new global::System.Data.DataColumn("GrossProfitDetail", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfitDetail);
                this.columnGrossProfitMargin = new global::System.Data.DataColumn("GrossProfitMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfitMargin);
                this.columnCategoryNo = new global::System.Data.DataColumn("CategoryNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryNo);
                //----- ADD K2014/06/04 By 呉軍 Redmine42764 №8 東亜商会得意先電子元帳 --------->>>>>
                if (_opt_Toua == Convert.ToInt32(Broadleaf.Application.Controller.CustPrtSlipSearchAcs.Option.ON))
                {
                    this.columnMakerCode = new global::System.Data.DataColumn("MakerCode", typeof(int), null, global::System.Data.MappingType.Element);
                    base.Columns.Add(this.columnMakerCode);
                }
                //----- ADD K2014/06/04 By 呉軍 Redmine42764 №8 東亜商会得意先電子元帳 ---------<<<<<
                this.columnModelFullName = new global::System.Data.DataColumn("ModelFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelFullName);
                this.columnFirstEntryDate = new global::System.Data.DataColumn("FirstEntryDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstEntryDate);
                this.columnFrameNo = new global::System.Data.DataColumn("FrameNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrameNo);
                this.columnFullModel = new global::System.Data.DataColumn("FullModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullModel);
                this.columnSlipNote = new global::System.Data.DataColumn("SlipNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote);
                this.columnSlipNote2 = new global::System.Data.DataColumn("SlipNote2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote2);
                this.columnSlipNote3 = new global::System.Data.DataColumn("SlipNote3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote3);
                this.columnFrontEmployeeNm = new global::System.Data.DataColumn("FrontEmployeeNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrontEmployeeNm);
                this.columnSalesInputName = new global::System.Data.DataColumn("SalesInputName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesInputName);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerSnm = new global::System.Data.DataColumn("CustomerSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerSnm);
                this.columnSupplierCd = new global::System.Data.DataColumn("SupplierCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCd);
                this.columnSupplierSnm = new global::System.Data.DataColumn("SupplierSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSnm);
                this.columnPartySaleSlipNum = new global::System.Data.DataColumn("PartySaleSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartySaleSlipNum);
                this.columnCarMngCode = new global::System.Data.DataColumn("CarMngCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarMngCode);
                this.columnAcceptAnOrderNo = new global::System.Data.DataColumn("AcceptAnOrderNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptAnOrderNo);
                this.columnShipSalesSlipNum = new global::System.Data.DataColumn("ShipSalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipSalesSlipNum);
                this.columnSrcSalesSlipNum = new global::System.Data.DataColumn("SrcSalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrcSalesSlipNum);
                this.columnGoodsKindCode = new global::System.Data.DataColumn("GoodsKindCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsKindCode);
                this.columnGoodsKindCodeName = new global::System.Data.DataColumn("GoodsKindCodeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsKindCodeName);
                this.columnSalesOrderDivCd = new global::System.Data.DataColumn("SalesOrderDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesOrderDivCd);
                this.columnSalesOrderDivCdName = new global::System.Data.DataColumn("SalesOrderDivCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesOrderDivCdName);
                this.columnWarehouseCd = new global::System.Data.DataColumn("WarehouseCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCd);
                this.columnWarehouseName = new global::System.Data.DataColumn("WarehouseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseName);
                this.columnWarehouseShelfNo = new global::System.Data.DataColumn("WarehouseShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseShelfNo);
                this.columnSupplierSlipNo = new global::System.Data.DataColumn("SupplierSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNo);
                this.columnUOESupplierCd = new global::System.Data.DataColumn("UOESupplierCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOESupplierCd);
                this.columnUOESupplierSnm = new global::System.Data.DataColumn("UOESupplierSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOESupplierSnm);
                this.columnUOERemark1 = new global::System.Data.DataColumn("UOERemark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOERemark1);
                this.columnUOERemark2 = new global::System.Data.DataColumn("UOERemark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOERemark2);
                this.columnGuideName = new global::System.Data.DataColumn("GuideName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGuideName);
                this.columnSectionCd = new global::System.Data.DataColumn("SectionCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionCd);
                this.columnSectionGuideName = new global::System.Data.DataColumn("SectionGuideName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionGuideName);
                this.columnDtlNote = new global::System.Data.DataColumn("DtlNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDtlNote);
                this.columnColorName1 = new global::System.Data.DataColumn("ColorName1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColorName1);
                this.columnTrimName = new global::System.Data.DataColumn("TrimName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrimName);
                this.columnStdUnPrcLPrice = new global::System.Data.DataColumn("StdUnPrcLPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStdUnPrcLPrice);
                this.columnStdUnPrcSalUnPrc = new global::System.Data.DataColumn("StdUnPrcSalUnPrc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStdUnPrcSalUnPrc);
                this.columnStdUnPrcUnCst = new global::System.Data.DataColumn("StdUnPrcUnCst", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStdUnPrcUnCst);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnMakerName = new global::System.Data.DataColumn("MakerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerName);
                this.columnCost = new global::System.Data.DataColumn("Cost", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnCustSlipNo = new global::System.Data.DataColumn("CustSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustSlipNo);
                this.columnAddUpADate = new global::System.Data.DataColumn("AddUpADate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddUpADate);
                this.columnAccRecDivCd = new global::System.Data.DataColumn("AccRecDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccRecDivCd);
                this.columnAccRecDivCdName = new global::System.Data.DataColumn("AccRecDivCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccRecDivCdName);
                this.columnDebitNoteDiv = new global::System.Data.DataColumn("DebitNoteDiv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteDiv);
                this.columnStockPartySaleSlipNum = new global::System.Data.DataColumn("StockPartySaleSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockPartySaleSlipNum);
                this.columnAddresseeCode = new global::System.Data.DataColumn("AddresseeCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeCode);
                this.columnAddresseeName = new global::System.Data.DataColumn("AddresseeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeName);
                this.columnAcptAnOdrRemainCnt = new global::System.Data.DataColumn("AcptAnOdrRemainCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcptAnOdrRemainCnt);
                this.columnEnterpriseGanreCode = new global::System.Data.DataColumn("EnterpriseGanreCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterpriseGanreCode);
                this.columnInputDay = new global::System.Data.DataColumn("InputDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputDay);
                this.columnCarMngNo = new global::System.Data.DataColumn("CarMngNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarMngNo);
                //----- ADD K2014/06/04 By 呉軍 Redmine42764 №8 東亜商会得意先電子元帳 --------->>>>>
                if (_opt_Toua == Convert.ToInt32(Broadleaf.Application.Controller.CustPrtSlipSearchAcs.Option.OFF))
                {
                this.columnMakerCode = new global::System.Data.DataColumn("MakerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerCode);
                }
                //----- ADD K2014/06/04 By 呉軍 Redmine42764 №8 東亜商会得意先電子元帳 ---------<<<<<
                this.columnModelCode = new global::System.Data.DataColumn("ModelCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelCode);
                this.columnModelSubCode = new global::System.Data.DataColumn("ModelSubCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelSubCode);
                this.columnEngineModelNm = new global::System.Data.DataColumn("EngineModelNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngineModelNm);
                this.columnColorCode = new global::System.Data.DataColumn("ColorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColorCode);
                this.columnTrimCode = new global::System.Data.DataColumn("TrimCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrimCode);
                this.columnDeliveredGoodsDiv = new global::System.Data.DataColumn("DeliveredGoodsDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveredGoodsDiv);
                this.columnFullModelFixedNoAry = new global::System.Data.DataColumn("FullModelFixedNoAry", typeof(object), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullModelFixedNoAry);
                this.columnCategoryObjAry = new global::System.Data.DataColumn("CategoryObjAry", typeof(object), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryObjAry);
                this.columnModelDesignationNoOrg = new global::System.Data.DataColumn("ModelDesignationNoOrg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelDesignationNoOrg);
                this.columnCategoryNoOrg = new global::System.Data.DataColumn("CategoryNoOrg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryNoOrg);
                this.columnAddresseeName1 = new global::System.Data.DataColumn("AddresseeName1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeName1);
                this.columnAddresseeName2 = new global::System.Data.DataColumn("AddresseeName2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeName2);
                this.columnSalesInputCode = new global::System.Data.DataColumn("SalesInputCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesInputCode);
                this.columnFrontEmployeeCd = new global::System.Data.DataColumn("FrontEmployeeCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrontEmployeeCd);
                this.columnHistoryDivName = new global::System.Data.DataColumn("HistoryDivName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryDivName);
                this.columnMileage = new global::System.Data.DataColumn("Mileage", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMileage);
                this.columnCarNote = new global::System.Data.DataColumn("CarNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarNote);
                this.columnSlipPrintTime = new global::System.Data.DataColumn("SlipPrintTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipPrintTime);
                this.columnBfUnitCost = new global::System.Data.DataColumn("BfUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfUnitCost);
                this.columnBfSalesUnitPrice = new global::System.Data.DataColumn("BfSalesUnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfSalesUnitPrice);
                this.columnRetuppercnt = new global::System.Data.DataColumn("Retuppercnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetuppercnt);
                this.columnRetuppercntDiv = new global::System.Data.DataColumn("RetuppercntDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetuppercntDiv);
                this.columnModelHalfName = new global::System.Data.DataColumn("ModelHalfName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelHalfName);
                this.columnFreeSrchMdlFxdNoAry = new global::System.Data.DataColumn("FreeSrchMdlFxdNoAry", typeof(string[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreeSrchMdlFxdNoAry);
                this.columnBfListPrice = new global::System.Data.DataColumn("BfListPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfListPrice);
                this.columnSalesRate = new global::System.Data.DataColumn("SalesRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesRate);
                this.columnCostRate = new global::System.Data.DataColumn("CostRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostRate);
                this.columnAutoAnswerDivSCM = new global::System.Data.DataColumn("AutoAnswerDivSCM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoAnswerDivSCM);
                this.columnInquiryNumber = new global::System.Data.DataColumn("InquiryNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInquiryNumber);
                this.columnUpdateDateTime = new global::System.Data.DataColumn("UpdateDateTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDateTime);
                this.columnSalesDateJP = new global::System.Data.DataColumn("SalesDateJP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDateJP);
                this.columnAddUpADateJP = new global::System.Data.DataColumn("AddUpADateJP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddUpADateJP);
                this.columnInputDayJP = new global::System.Data.DataColumn("InputDayJP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputDayJP);
                this.columnUpdateDateTimeJP = new global::System.Data.DataColumn("UpdateDateTimeJP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDateTimeJP);
                // --- ADD 陳永康 2014/12/28 変換後品番の追加対応----->>>>>
                this.columnChangeGoodsNo = new global::System.Data.DataColumn("ChangeGoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChangeGoodsNo);
                // --- ADD 陳永康 2014/12/28 変換後品番の追加対応-----<<<<<
                this.columnSalesRecognitionCnt = new global::System.Data.DataColumn("SalesRecognitionCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesRecognitionCnt);
                this.columnSalesNotRecognitionCnt = new global::System.Data.DataColumn("SalesNotRecognitionCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesNotRecognitionCnt);
                this.columnSecondSalePrice = new global::System.Data.DataColumn("SecondSalePrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondSalePrice);
                this.columnSalesAreaName = new global::System.Data.DataColumn("SalesAreaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesAreaName);
                this.columnCustAnalysCode1 = new global::System.Data.DataColumn("CustAnalysCode1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustAnalysCode1);
                this.columnCustAnalysCode2 = new global::System.Data.DataColumn("CustAnalysCode2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustAnalysCode2);
                this.columnCustAnalysCode3 = new global::System.Data.DataColumn("CustAnalysCode3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustAnalysCode3);
                this.columnCustAnalysCode4 = new global::System.Data.DataColumn("CustAnalysCode4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustAnalysCode4);
                this.columnCustAnalysCode5 = new global::System.Data.DataColumn("CustAnalysCode5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustAnalysCode5);
                this.columnCustAnalysCode6 = new global::System.Data.DataColumn("CustAnalysCode6", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustAnalysCode6);
                this.columnConsTaxRate = new global::System.Data.DataColumn("ConsTaxRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsTaxRate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, true));
                this.columnSelectionCheck.Caption = "選択";
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "行数";
                this.columnDataDiv.Caption = "データ区分";
                this.columnSalesDate.Caption = "伝票日付";
                this.columnSalesSlipNum.Caption = "伝票番号";
                this.columnSalesRowNo.Caption = "行No";
                this.columnAcptAnOdrStatus.Caption = "受注ステータス";
                this.columnSalesSlipCd.Caption = "売上伝票区分";
                this.columnSalesSlipCdName.Caption = "区分名";
                this.columnSalesSlipCdDtlName.Caption = "明細区分";
                this.columnSalesEmployeeNm.Caption = "担当者名";
                this.columnSalesTotalTaxExc.Caption = "金額（伝票表示）";
                this.columnGoodsName.Caption = "品名（明細表示）";
                this.columnGoodsNo.Caption = "品番（明細表示）";
                this.columnBLGoodsCode.Caption = "BLコード（明細表示）";
                this.columnBLGroupCode.Caption = "BLグループ（明細表示）";
                this.columnGoodsMGroup.Caption = "中分類コード";
                this.columnGoodsMGroupName.Caption = "中分類名";
                this.columnGoodsLGroup.Caption = "大分類コード";
                this.columnGoodsLGroupName.Caption = "大分類名";
                this.columnShipmentCnt.Caption = "数量（明細表示）";
                this.columnListPriceTaxExcFl.Caption = "標準価格（明細表示）";
                this.columnOpenPriceDiv.Caption = "オープン価格区分（明細表示）";
                this.columnSalesUnPrcTaxExcFl.Caption = "単価（明細表示）";
                this.columnSalesUnitCost.Caption = "原価（明細表示）";
                this.columnSalesMoneyTaxExc.Caption = "金額（明細表示）";
                this.columnConsTaxLayMethod.Caption = "消費税転嫁方式";
                this.columnSalesTotalTaxInc.Caption = "売上伝票合計（税込）";
                this.columnSalesPriceConsTax.Caption = "売上金額消費税額";
                this.columnTotalCost.Caption = "原価金額計";
                this.columnGrossProfitDetail.Caption = "粗利";
                this.columnGrossProfitMargin.Caption = "粗利率";
                this.columnCategoryNo.Caption = "類別番号";
                this.columnModelFullName.Caption = "車種";
                this.columnFirstEntryDate.Caption = "年式";
                this.columnFrameNo.Caption = "車台No";
                this.columnFullModel.Caption = "型式";
                this.columnSlipNote.Caption = "備考１";
                this.columnSlipNote2.Caption = "備考２";
                this.columnSlipNote3.Caption = "備考３";
                this.columnFrontEmployeeNm.Caption = "受注者";
                this.columnSalesInputName.Caption = "発行者";
                this.columnCustomerCode.Caption = "得意先コード";
                this.columnCustomerSnm.Caption = "得意先名称";
                this.columnSupplierCd.Caption = "仕入先コード（明細表示）";
                this.columnSupplierSnm.Caption = "仕入先名称（明細表示）";
                this.columnPartySaleSlipNum.Caption = "指示書(仮伝)番号";
                this.columnCarMngCode.Caption = "管理No";
                this.columnAcceptAnOrderNo.Caption = "計上元受注No";
                this.columnShipSalesSlipNum.Caption = "計上元出荷No";
                this.columnSrcSalesSlipNum.Caption = "元黒No（明細表示）";
                this.columnGoodsKindCodeName.Caption = "商品属性";
                this.columnSalesOrderDivCd.Caption = "在取（明細表示）";
                this.columnSalesOrderDivCdName.Caption = "在取名";
                this.columnWarehouseCd.Caption = "倉庫コード";
                this.columnWarehouseName.Caption = "倉庫（明細表示）";
                this.columnWarehouseShelfNo.Caption = "棚番";
                this.columnSupplierSlipNo.Caption = "同時仕入No（明細表示）";
                this.columnUOESupplierCd.Caption = "発注先コード（明細表示）";
                this.columnUOESupplierSnm.Caption = "発注先名（明細表示）";
                this.columnUOERemark1.Caption = "UOEリマーク１";
                this.columnUOERemark2.Caption = "UOEリマーク２";
                this.columnGuideName.Caption = "販売区分（明細表示）";
                this.columnSectionCd.Caption = "拠点コード";
                this.columnSectionGuideName.Caption = "拠点";
                this.columnDtlNote.Caption = "明細備考（明細表示）";
                this.columnColorName1.Caption = "カラー名称";
                this.columnTrimName.Caption = "トリム名称";
                this.columnStdUnPrcLPrice.Caption = "算出価格（明細表示）";
                this.columnStdUnPrcSalUnPrc.Caption = "算出売価（明細表示）";
                this.columnStdUnPrcUnCst.Caption = "算出原価（明細表示）";
                this.columnGoodsMakerCd.Caption = "メーカーコード（明細表示）";
                this.columnMakerName.Caption = "メーカー名称（明細表示）";
                this.columnCost.Caption = "原価";
                this.columnCustSlipNo.Caption = "得意先伝票番号";
                this.columnAddUpADate.Caption = "計上日";
                this.columnAccRecDivCd.Caption = "売掛区分";
                this.columnAccRecDivCdName.Caption = "売掛区分名";
                this.columnDebitNoteDiv.Caption = "赤伝区分";
                this.columnStockPartySaleSlipNum.Caption = "同時仕入№";
                this.columnAddresseeCode.Caption = "納入先コード";
                this.columnAddresseeName.Caption = "納入先名";
                this.columnAcptAnOdrRemainCnt.Caption = "受注残数";
                this.columnInputDay.Caption = "入力日";
                this.columnMakerCode.Caption = "車種メーカーコード";
                this.columnHistoryDivName.Caption = "履歴";
                this.columnSlipPrintTime.Caption = "伝票発行時刻";
                this.columnBfUnitCost.Caption = "変更前原価";
                this.columnBfUnitCost.DefaultValue = ((double)(0));
                this.columnBfSalesUnitPrice.Caption = "変更前単価";
                this.columnBfSalesUnitPrice.DefaultValue = ((double)(0));
                this.columnRetuppercntDiv.DefaultValue = ((int)(-1));
                this.columnModelHalfName.Caption = "車種名カナ";
                this.columnFreeSrchMdlFxdNoAry.Caption = "自由検索型式固定番号配列";
                this.columnBfListPrice.Caption = "変更前定価";
                this.columnBfListPrice.DefaultValue = ((double)(0));
                this.columnSalesRate.Caption = "売価率(明細非表示)";
                this.columnCostRate.Caption = "原価率(明細非表示)";
                this.columnAutoAnswerDivSCM.Caption = "自動回答";
                this.columnInquiryNumber.Caption = "問合せ番号";
                this.columnUpdateDateTime.Caption = "更新日時";
                this.columnSalesDateJP.Caption = "伝票日付";
                this.columnAddUpADateJP.Caption = "計上日";
                this.columnInputDayJP.Caption = "入力日";
                this.columnUpdateDateTimeJP.Caption = "更新日時";
                this.columnSalesRecognitionCnt.Caption = "計上数";
                this.columnSalesNotRecognitionCnt.Caption = "未計上数";
                this.columnSecondSalePrice.Caption = "第二売価";
                this.columnSalesAreaName.Caption = "地区";
                this.columnCustAnalysCode1.Caption = "分析コード1";
                this.columnCustAnalysCode2.Caption = "分析コード2";
                this.columnCustAnalysCode3.Caption = "分析コード3";
                this.columnCustAnalysCode4.Caption = "分析コード4";
                this.columnCustAnalysCode5.Caption = "分析コード5";
                this.columnCustAnalysCode6.Caption = "分析コード6";
                this.columnConsTaxRate.Caption = "消費税率";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRow NewSalesDetailRow() {
                return ((SalesDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesDetailRowChanged != null)) {
                    this.SalesDetailRowChanged(this, new SalesDetailRowChangeEvent(((SalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesDetailRowChanging != null)) {
                    this.SalesDetailRowChanging(this, new SalesDetailRowChangeEvent(((SalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesDetailRowDeleted != null)) {
                    this.SalesDetailRowDeleted(this, new SalesDetailRowChangeEvent(((SalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesDetailRowDeleting != null)) {
                    this.SalesDetailRowDeleting(this, new SalesDetailRowChangeEvent(((SalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesDetailRow(SalesDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustPtrSalesDetailDataSet ds = new CustPtrSalesDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesListDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSelection;
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnDataDiv;
            
            private global::System.Data.DataColumn columnSalesDate;
            
            private global::System.Data.DataColumn columnSalesSlipNum;
            
            private global::System.Data.DataColumn columnAcptAnOdrStatus;
            
            private global::System.Data.DataColumn columnSalesSlipCd;
            
            private global::System.Data.DataColumn columnSalesSlipCdName;
            
            private global::System.Data.DataColumn columnSalesEmployeeNm;
            
            private global::System.Data.DataColumn columnSalesTotalTaxExc;
            
            private global::System.Data.DataColumn columnConsumeTax;
            
            private global::System.Data.DataColumn columnGrossProfit;
            
            private global::System.Data.DataColumn columnCategoryNo;
            
            private global::System.Data.DataColumn columnModelFullName;
            
            private global::System.Data.DataColumn columnFirstEntryDate;
            
            private global::System.Data.DataColumn columnFrameNo;
            
            private global::System.Data.DataColumn columnFullModel;
            
            private global::System.Data.DataColumn columnSlipNote;
            
            private global::System.Data.DataColumn columnSlipNote2;
            
            private global::System.Data.DataColumn columnSlipNote3;
            
            private global::System.Data.DataColumn columnFrontEmployeeNm;
            
            private global::System.Data.DataColumn columnSalesInputName;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerSnm;
            
            private global::System.Data.DataColumn columnPartySaleSlipNum;
            
            private global::System.Data.DataColumn columnCarMngCode;
            
            private global::System.Data.DataColumn columnAcceptAnOrderNo;
            
            private global::System.Data.DataColumn columnShipmSalesSlipNum;
            
            private global::System.Data.DataColumn columnUoeRemark1;
            
            private global::System.Data.DataColumn columnUoeRemark2;
            
            private global::System.Data.DataColumn columnSectionCd;
            
            private global::System.Data.DataColumn columnSectionGuideNm;
            
            private global::System.Data.DataColumn columnColorName1;
            
            private global::System.Data.DataColumn columnTrimName;
            
            private global::System.Data.DataColumn columnCustSlipNo;
            
            private global::System.Data.DataColumn columnAddUpADate;
            
            private global::System.Data.DataColumn columnAccRecDivCd;
            
            private global::System.Data.DataColumn columnAccRecDivCdName;
            
            private global::System.Data.DataColumn columnDebitNoteDiv;
            
            private global::System.Data.DataColumn columnAddresseeCode;
            
            private global::System.Data.DataColumn columnAddresseeName;
            
            private global::System.Data.DataColumn columnEnterpriseGanreCode;
            
            private global::System.Data.DataColumn columnInputDay;
            
            private global::System.Data.DataColumn columnHistoryDivName;
            
            private global::System.Data.DataColumn columnSlipPrintTime;
            
            private global::System.Data.DataColumn columnModelHalfName;
            
            private global::System.Data.DataColumn columnUpdateDateTime;
            
            private global::System.Data.DataColumn columnSalesDateJP;
            
            private global::System.Data.DataColumn columnAddUpADateJP;
            
            private global::System.Data.DataColumn columnInputDayJP;
            
            private global::System.Data.DataColumn columnUpdateDateTimeJP;
            
            private global::System.Data.DataColumn columnMakerCode;
            
            private global::System.Data.DataColumn columnSalesAreaName;
            
            private global::System.Data.DataColumn columnCustAnalysCode1;
            
            private global::System.Data.DataColumn columnCustAnalysCode2;
            
            private global::System.Data.DataColumn columnCustAnalysCode3;
            
            private global::System.Data.DataColumn columnCustAnalysCode4;
            
            private global::System.Data.DataColumn columnCustAnalysCode5;
            
            private global::System.Data.DataColumn columnCustAnalysCode6;
            
            private global::System.Data.DataColumn columnConsTaxRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesListDataTable() {
                this.TableName = "SalesList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectionColumn {
                get {
                    return this.columnSelection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataDivColumn {
                get {
                    return this.columnDataDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipNumColumn {
                get {
                    return this.columnSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcptAnOdrStatusColumn {
                get {
                    return this.columnAcptAnOdrStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipCdColumn {
                get {
                    return this.columnSalesSlipCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipCdNameColumn {
                get {
                    return this.columnSalesSlipCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesEmployeeNmColumn {
                get {
                    return this.columnSalesEmployeeNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesTotalTaxExcColumn {
                get {
                    return this.columnSalesTotalTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsumeTaxColumn {
                get {
                    return this.columnConsumeTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfitColumn {
                get {
                    return this.columnGrossProfit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryNoColumn {
                get {
                    return this.columnCategoryNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelFullNameColumn {
                get {
                    return this.columnModelFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstEntryDateColumn {
                get {
                    return this.columnFirstEntryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrameNoColumn {
                get {
                    return this.columnFrameNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullModelColumn {
                get {
                    return this.columnFullModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNoteColumn {
                get {
                    return this.columnSlipNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNote2Column {
                get {
                    return this.columnSlipNote2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNote3Column {
                get {
                    return this.columnSlipNote3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrontEmployeeNmColumn {
                get {
                    return this.columnFrontEmployeeNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesInputNameColumn {
                get {
                    return this.columnSalesInputName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerSnmColumn {
                get {
                    return this.columnCustomerSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartySaleSlipNumColumn {
                get {
                    return this.columnPartySaleSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarMngCodeColumn {
                get {
                    return this.columnCarMngCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcceptAnOrderNoColumn {
                get {
                    return this.columnAcceptAnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmSalesSlipNumColumn {
                get {
                    return this.columnShipmSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UoeRemark1Column {
                get {
                    return this.columnUoeRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UoeRemark2Column {
                get {
                    return this.columnUoeRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionCdColumn {
                get {
                    return this.columnSectionCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionGuideNmColumn {
                get {
                    return this.columnSectionGuideNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColorName1Column {
                get {
                    return this.columnColorName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrimNameColumn {
                get {
                    return this.columnTrimName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustSlipNoColumn {
                get {
                    return this.columnCustSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddUpADateColumn {
                get {
                    return this.columnAddUpADate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccRecDivCdColumn {
                get {
                    return this.columnAccRecDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccRecDivCdNameColumn {
                get {
                    return this.columnAccRecDivCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteDivColumn {
                get {
                    return this.columnDebitNoteDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeCodeColumn {
                get {
                    return this.columnAddresseeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeNameColumn {
                get {
                    return this.columnAddresseeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterpriseGanreCodeColumn {
                get {
                    return this.columnEnterpriseGanreCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputDayColumn {
                get {
                    return this.columnInputDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryDivNameColumn {
                get {
                    return this.columnHistoryDivName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipPrintTimeColumn {
                get {
                    return this.columnSlipPrintTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelHalfNameColumn {
                get {
                    return this.columnModelHalfName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateDateTimeColumn {
                get {
                    return this.columnUpdateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateJPColumn {
                get {
                    return this.columnSalesDateJP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddUpADateJPColumn {
                get {
                    return this.columnAddUpADateJP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputDayJPColumn {
                get {
                    return this.columnInputDayJP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateDateTimeJPColumn {
                get {
                    return this.columnUpdateDateTimeJP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerCodeColumn {
                get {
                    return this.columnMakerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesAreaNameColumn {
                get {
                    return this.columnSalesAreaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustAnalysCode1Column {
                get {
                    return this.columnCustAnalysCode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustAnalysCode2Column {
                get {
                    return this.columnCustAnalysCode2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustAnalysCode3Column {
                get {
                    return this.columnCustAnalysCode3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustAnalysCode4Column {
                get {
                    return this.columnCustAnalysCode4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustAnalysCode5Column {
                get {
                    return this.columnCustAnalysCode5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustAnalysCode6Column {
                get {
                    return this.columnCustAnalysCode6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsTaxRateColumn {
                get {
                    return this.columnConsTaxRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesListRow this[int index] {
                get {
                    return ((SalesListRow)(this.Rows[index]));
                }
            }
            
            public event SalesListRowChangeEventHandler SalesListRowChanging;
            
            public event SalesListRowChangeEventHandler SalesListRowChanged;
            
            public event SalesListRowChangeEventHandler SalesListRowDeleting;
            
            public event SalesListRowChangeEventHandler SalesListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesListRow(SalesListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesListRow AddSalesListRow(
                        bool Selection, 
                        int RowNo, 
                        int DataDiv, 
                        System.DateTime SalesDate, 
                        string SalesSlipNum, 
                        int AcptAnOdrStatus, 
                        int SalesSlipCd, 
                        string SalesSlipCdName, 
                        string SalesEmployeeNm, 
                        long SalesTotalTaxExc, 
                        long ConsumeTax, 
                        long GrossProfit, 
                        string CategoryNo, 
                        string ModelFullName, 
                        string FirstEntryDate, 
                        string FrameNo, 
                        string FullModel, 
                        string SlipNote, 
                        string SlipNote2, 
                        string SlipNote3, 
                        string FrontEmployeeNm, 
                        string SalesInputName, 
                        int CustomerCode, 
                        string CustomerSnm, 
                        string PartySaleSlipNum, 
                        string CarMngCode, 
                        string AcceptAnOrderNo, 
                        string ShipmSalesSlipNum, 
                        string UoeRemark1, 
                        string UoeRemark2, 
                        string SectionCd, 
                        string SectionGuideNm, 
                        string ColorName1, 
                        string TrimName, 
                        int CustSlipNo, 
                        System.DateTime AddUpADate, 
                        int AccRecDivCd, 
                        string AccRecDivCdName, 
                        string DebitNoteDiv, 
                        int AddresseeCode, 
                        string AddresseeName, 
                        string EnterpriseGanreCode, 
                        System.DateTime InputDay, 
                        string HistoryDivName, 
                        string SlipPrintTime, 
                        string ModelHalfName, 
                        string UpdateDateTime, 
                        string SalesDateJP, 
                        string AddUpADateJP, 
                        string InputDayJP, 
                        string UpdateDateTimeJP, 
                        int MakerCode, 
                        string SalesAreaName, 
                        int CustAnalysCode1, 
                        int CustAnalysCode2, 
                        int CustAnalysCode3, 
                        int CustAnalysCode4, 
                        int CustAnalysCode5, 
                        int CustAnalysCode6, 
                        double ConsTaxRate) {
                SalesListRow rowSalesListRow = ((SalesListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Selection,
                        RowNo,
                        DataDiv,
                        SalesDate,
                        SalesSlipNum,
                        AcptAnOdrStatus,
                        SalesSlipCd,
                        SalesSlipCdName,
                        SalesEmployeeNm,
                        SalesTotalTaxExc,
                        ConsumeTax,
                        GrossProfit,
                        CategoryNo,
                        ModelFullName,
                        FirstEntryDate,
                        FrameNo,
                        FullModel,
                        SlipNote,
                        SlipNote2,
                        SlipNote3,
                        FrontEmployeeNm,
                        SalesInputName,
                        CustomerCode,
                        CustomerSnm,
                        PartySaleSlipNum,
                        CarMngCode,
                        AcceptAnOrderNo,
                        ShipmSalesSlipNum,
                        UoeRemark1,
                        UoeRemark2,
                        SectionCd,
                        SectionGuideNm,
                        ColorName1,
                        TrimName,
                        CustSlipNo,
                        AddUpADate,
                        AccRecDivCd,
                        AccRecDivCdName,
                        DebitNoteDiv,
                        AddresseeCode,
                        AddresseeName,
                        EnterpriseGanreCode,
                        InputDay,
                        HistoryDivName,
                        SlipPrintTime,
                        ModelHalfName,
                        UpdateDateTime,
                        SalesDateJP,
                        AddUpADateJP,
                        InputDayJP,
                        UpdateDateTimeJP,
                        MakerCode,
                        SalesAreaName,
                        CustAnalysCode1,
                        CustAnalysCode2,
                        CustAnalysCode3,
                        CustAnalysCode4,
                        CustAnalysCode5,
                        CustAnalysCode6,
                        ConsTaxRate};
                rowSalesListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesListRow);
                return rowSalesListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesListRow FindByRowNo(int RowNo) {
                return ((SalesListRow)(this.Rows.Find(new object[] {
                            RowNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesListDataTable cln = ((SalesListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSelection = base.Columns["Selection"];
                this.columnRowNo = base.Columns["RowNo"];
                this.columnDataDiv = base.Columns["DataDiv"];
                this.columnSalesDate = base.Columns["SalesDate"];
                this.columnSalesSlipNum = base.Columns["SalesSlipNum"];
                this.columnAcptAnOdrStatus = base.Columns["AcptAnOdrStatus"];
                this.columnSalesSlipCd = base.Columns["SalesSlipCd"];
                this.columnSalesSlipCdName = base.Columns["SalesSlipCdName"];
                this.columnSalesEmployeeNm = base.Columns["SalesEmployeeNm"];
                this.columnSalesTotalTaxExc = base.Columns["SalesTotalTaxExc"];
                this.columnConsumeTax = base.Columns["ConsumeTax"];
                this.columnGrossProfit = base.Columns["GrossProfit"];
                this.columnCategoryNo = base.Columns["CategoryNo"];
                this.columnModelFullName = base.Columns["ModelFullName"];
                this.columnFirstEntryDate = base.Columns["FirstEntryDate"];
                this.columnFrameNo = base.Columns["FrameNo"];
                this.columnFullModel = base.Columns["FullModel"];
                this.columnSlipNote = base.Columns["SlipNote"];
                this.columnSlipNote2 = base.Columns["SlipNote2"];
                this.columnSlipNote3 = base.Columns["SlipNote3"];
                this.columnFrontEmployeeNm = base.Columns["FrontEmployeeNm"];
                this.columnSalesInputName = base.Columns["SalesInputName"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerSnm = base.Columns["CustomerSnm"];
                this.columnPartySaleSlipNum = base.Columns["PartySaleSlipNum"];
                this.columnCarMngCode = base.Columns["CarMngCode"];
                this.columnAcceptAnOrderNo = base.Columns["AcceptAnOrderNo"];
                this.columnShipmSalesSlipNum = base.Columns["ShipmSalesSlipNum"];
                this.columnUoeRemark1 = base.Columns["UoeRemark1"];
                this.columnUoeRemark2 = base.Columns["UoeRemark2"];
                this.columnSectionCd = base.Columns["SectionCd"];
                this.columnSectionGuideNm = base.Columns["SectionGuideNm"];
                this.columnColorName1 = base.Columns["ColorName1"];
                this.columnTrimName = base.Columns["TrimName"];
                this.columnCustSlipNo = base.Columns["CustSlipNo"];
                this.columnAddUpADate = base.Columns["AddUpADate"];
                this.columnAccRecDivCd = base.Columns["AccRecDivCd"];
                this.columnAccRecDivCdName = base.Columns["AccRecDivCdName"];
                this.columnDebitNoteDiv = base.Columns["DebitNoteDiv"];
                this.columnAddresseeCode = base.Columns["AddresseeCode"];
                this.columnAddresseeName = base.Columns["AddresseeName"];
                this.columnEnterpriseGanreCode = base.Columns["EnterpriseGanreCode"];
                this.columnInputDay = base.Columns["InputDay"];
                this.columnHistoryDivName = base.Columns["HistoryDivName"];
                this.columnSlipPrintTime = base.Columns["SlipPrintTime"];
                this.columnModelHalfName = base.Columns["ModelHalfName"];
                this.columnUpdateDateTime = base.Columns["UpdateDateTime"];
                this.columnSalesDateJP = base.Columns["SalesDateJP"];
                this.columnAddUpADateJP = base.Columns["AddUpADateJP"];
                this.columnInputDayJP = base.Columns["InputDayJP"];
                this.columnUpdateDateTimeJP = base.Columns["UpdateDateTimeJP"];
                this.columnMakerCode = base.Columns["MakerCode"];
                this.columnSalesAreaName = base.Columns["SalesAreaName"];
                this.columnCustAnalysCode1 = base.Columns["CustAnalysCode1"];
                this.columnCustAnalysCode2 = base.Columns["CustAnalysCode2"];
                this.columnCustAnalysCode3 = base.Columns["CustAnalysCode3"];
                this.columnCustAnalysCode4 = base.Columns["CustAnalysCode4"];
                this.columnCustAnalysCode5 = base.Columns["CustAnalysCode5"];
                this.columnCustAnalysCode6 = base.Columns["CustAnalysCode6"];
                this.columnConsTaxRate = base.Columns["ConsTaxRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                //----- ADD K2014/06/04 By 呉軍 Redmine42764 №8 東亜商会得意先電子元帳 --------->>>>>
                // 東亜商会個別オプション
                int _opt_Toua;

                // 東亜商会個別オプションコードの取得
                Broadleaf.Application.Remoting.ParamData.PurchaseStatus touaCustom;
                touaCustom = LoginInfoAcquisition.SoftwarePurchasedCheckForUSB(ConstantManagement_SF_PRO.SoftwareCode_OPT_CPM_ToaCustom);
                if (touaCustom == Broadleaf.Application.Remoting.ParamData.PurchaseStatus.Contract)
                {
                    _opt_Toua = Convert.ToInt32(Broadleaf.Application.Controller.CustPrtSlipSearchAcs.Option.ON);
                }
                else
                {
                    _opt_Toua = Convert.ToInt32(Broadleaf.Application.Controller.CustPrtSlipSearchAcs.Option.OFF);
                }
                //----- ADD K2014/06/04 By 呉軍 Redmine42764 №8 東亜商会得意先電子元帳 ---------<<<<<
                this.columnSelection = new global::System.Data.DataColumn("Selection", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelection);
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnDataDiv = new global::System.Data.DataColumn("DataDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataDiv);
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
                this.columnSalesSlipNum = new global::System.Data.DataColumn("SalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipNum);
                this.columnAcptAnOdrStatus = new global::System.Data.DataColumn("AcptAnOdrStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcptAnOdrStatus);
                this.columnSalesSlipCd = new global::System.Data.DataColumn("SalesSlipCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipCd);
                this.columnSalesSlipCdName = new global::System.Data.DataColumn("SalesSlipCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipCdName);
                this.columnSalesEmployeeNm = new global::System.Data.DataColumn("SalesEmployeeNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesEmployeeNm);
                this.columnSalesTotalTaxExc = new global::System.Data.DataColumn("SalesTotalTaxExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTotalTaxExc);
                this.columnConsumeTax = new global::System.Data.DataColumn("ConsumeTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumeTax);
                this.columnGrossProfit = new global::System.Data.DataColumn("GrossProfit", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfit);
                this.columnCategoryNo = new global::System.Data.DataColumn("CategoryNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryNo);
                //----- ADD K2014/06/04 By 呉軍 Redmine42764 №8 東亜商会得意先電子元帳 --------->>>>>
                if (_opt_Toua == Convert.ToInt32(Broadleaf.Application.Controller.CustPrtSlipSearchAcs.Option.ON))
                {
                    this.columnMakerCode = new global::System.Data.DataColumn("MakerCode", typeof(int), null, global::System.Data.MappingType.Element);
                    base.Columns.Add(this.columnMakerCode);
                }
                //----- ADD K2014/06/04 By 呉軍 Redmine42764 №8 東亜商会得意先電子元帳 ---------<<<<<
                this.columnModelFullName = new global::System.Data.DataColumn("ModelFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelFullName);
                this.columnFirstEntryDate = new global::System.Data.DataColumn("FirstEntryDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstEntryDate);
                this.columnFrameNo = new global::System.Data.DataColumn("FrameNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrameNo);
                this.columnFullModel = new global::System.Data.DataColumn("FullModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullModel);
                this.columnSlipNote = new global::System.Data.DataColumn("SlipNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote);
                this.columnSlipNote2 = new global::System.Data.DataColumn("SlipNote2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote2);
                this.columnSlipNote3 = new global::System.Data.DataColumn("SlipNote3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote3);
                this.columnFrontEmployeeNm = new global::System.Data.DataColumn("FrontEmployeeNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrontEmployeeNm);
                this.columnSalesInputName = new global::System.Data.DataColumn("SalesInputName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesInputName);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerSnm = new global::System.Data.DataColumn("CustomerSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerSnm);
                this.columnPartySaleSlipNum = new global::System.Data.DataColumn("PartySaleSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartySaleSlipNum);
                this.columnCarMngCode = new global::System.Data.DataColumn("CarMngCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarMngCode);
                this.columnAcceptAnOrderNo = new global::System.Data.DataColumn("AcceptAnOrderNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptAnOrderNo);
                this.columnShipmSalesSlipNum = new global::System.Data.DataColumn("ShipmSalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmSalesSlipNum);
                this.columnUoeRemark1 = new global::System.Data.DataColumn("UoeRemark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUoeRemark1);
                this.columnUoeRemark2 = new global::System.Data.DataColumn("UoeRemark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUoeRemark2);
                this.columnSectionCd = new global::System.Data.DataColumn("SectionCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionCd);
                this.columnSectionGuideNm = new global::System.Data.DataColumn("SectionGuideNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionGuideNm);
                this.columnColorName1 = new global::System.Data.DataColumn("ColorName1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColorName1);
                this.columnTrimName = new global::System.Data.DataColumn("TrimName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrimName);
                this.columnCustSlipNo = new global::System.Data.DataColumn("CustSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustSlipNo);
                this.columnAddUpADate = new global::System.Data.DataColumn("AddUpADate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddUpADate);
                this.columnAccRecDivCd = new global::System.Data.DataColumn("AccRecDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccRecDivCd);
                this.columnAccRecDivCdName = new global::System.Data.DataColumn("AccRecDivCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccRecDivCdName);
                this.columnDebitNoteDiv = new global::System.Data.DataColumn("DebitNoteDiv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteDiv);
                this.columnAddresseeCode = new global::System.Data.DataColumn("AddresseeCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeCode);
                this.columnAddresseeName = new global::System.Data.DataColumn("AddresseeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeName);
                this.columnEnterpriseGanreCode = new global::System.Data.DataColumn("EnterpriseGanreCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterpriseGanreCode);
                this.columnInputDay = new global::System.Data.DataColumn("InputDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputDay);
                this.columnHistoryDivName = new global::System.Data.DataColumn("HistoryDivName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryDivName);
                this.columnSlipPrintTime = new global::System.Data.DataColumn("SlipPrintTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipPrintTime);
                this.columnModelHalfName = new global::System.Data.DataColumn("ModelHalfName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelHalfName);
                this.columnUpdateDateTime = new global::System.Data.DataColumn("UpdateDateTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDateTime);
                this.columnSalesDateJP = new global::System.Data.DataColumn("SalesDateJP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDateJP);
                this.columnAddUpADateJP = new global::System.Data.DataColumn("AddUpADateJP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddUpADateJP);
                this.columnInputDayJP = new global::System.Data.DataColumn("InputDayJP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputDayJP);
                this.columnUpdateDateTimeJP = new global::System.Data.DataColumn("UpdateDateTimeJP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDateTimeJP);
                //----- ADD K2014/06/04 By 呉軍 Redmine42764 №8 東亜商会得意先電子元帳 --------->>>>>
                if (_opt_Toua == Convert.ToInt32(Broadleaf.Application.Controller.CustPrtSlipSearchAcs.Option.OFF))
                {
                this.columnMakerCode = new global::System.Data.DataColumn("MakerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerCode);
                }
                //----- ADD K2014/06/04 By 呉軍 Redmine42764 №8 東亜商会得意先電子元帳 ---------<<<<<
                this.columnSalesAreaName = new global::System.Data.DataColumn("SalesAreaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesAreaName);
                this.columnCustAnalysCode1 = new global::System.Data.DataColumn("CustAnalysCode1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustAnalysCode1);
                this.columnCustAnalysCode2 = new global::System.Data.DataColumn("CustAnalysCode2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustAnalysCode2);
                this.columnCustAnalysCode3 = new global::System.Data.DataColumn("CustAnalysCode3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustAnalysCode3);
                this.columnCustAnalysCode4 = new global::System.Data.DataColumn("CustAnalysCode4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustAnalysCode4);
                this.columnCustAnalysCode5 = new global::System.Data.DataColumn("CustAnalysCode5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustAnalysCode5);
                this.columnCustAnalysCode6 = new global::System.Data.DataColumn("CustAnalysCode6", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustAnalysCode6);
                this.columnConsTaxRate = new global::System.Data.DataColumn("ConsTaxRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsTaxRate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, true));
                this.columnSelection.Caption = "行選択";
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "行数";
                this.columnDataDiv.Caption = "データ区分";
                this.columnSalesDate.Caption = "伝票日付";
                this.columnSalesSlipNum.Caption = "伝票番号";
                this.columnAcptAnOdrStatus.Caption = "受注ステータス";
                this.columnSalesSlipCd.Caption = "区分";
                this.columnSalesSlipCdName.Caption = "区分名";
                this.columnSalesEmployeeNm.Caption = "担当者名";
                this.columnSalesTotalTaxExc.Caption = "金額";
                this.columnConsumeTax.Caption = "消費税";
                this.columnGrossProfit.Caption = "粗利";
                this.columnCategoryNo.Caption = "類別番号";
                this.columnModelFullName.Caption = "車種";
                this.columnFirstEntryDate.Caption = "年式";
                this.columnFrameNo.Caption = "車台No";
                this.columnFullModel.Caption = "型式";
                this.columnSlipNote.Caption = "備考１";
                this.columnSlipNote2.Caption = "備考２";
                this.columnSlipNote3.Caption = "備考３";
                this.columnFrontEmployeeNm.Caption = "受注者";
                this.columnSalesInputName.Caption = "発行者";
                this.columnCustomerCode.Caption = "得意先コード";
                this.columnCustomerSnm.Caption = "得意先名称";
                this.columnPartySaleSlipNum.Caption = "指示書(仮伝)番号";
                this.columnCarMngCode.Caption = "管理No";
                this.columnAcceptAnOrderNo.Caption = "計上元受注№";
                this.columnShipmSalesSlipNum.Caption = "計上元出荷№";
                this.columnUoeRemark1.Caption = "ＵＯＥリマーク１";
                this.columnUoeRemark2.Caption = "ＵＯＥリマーク２";
                this.columnSectionCd.Caption = "拠点コード";
                this.columnSectionGuideNm.Caption = "拠点";
                this.columnColorName1.Caption = "カラー名称";
                this.columnTrimName.Caption = "トリム名称";
                this.columnCustSlipNo.Caption = "得意先伝票番号";
                this.columnAddUpADate.Caption = "計上日";
                this.columnAccRecDivCd.Caption = "売掛区分";
                this.columnAccRecDivCdName.Caption = "売掛区分名";
                this.columnDebitNoteDiv.Caption = "赤伝区分";
                this.columnAddresseeCode.Caption = "納入先コード";
                this.columnAddresseeName.Caption = "納入先名";
                this.columnEnterpriseGanreCode.Caption = "商品区分";
                this.columnInputDay.Caption = "入力日";
                this.columnHistoryDivName.Caption = "履歴";
                this.columnSlipPrintTime.Caption = "伝票発行時刻";
                this.columnModelHalfName.Caption = "車種名カナ";
                this.columnUpdateDateTime.Caption = "更新日時";
                this.columnSalesDateJP.Caption = "伝票日付";
                this.columnAddUpADateJP.Caption = "計上日";
                this.columnInputDayJP.Caption = "入力日";
                this.columnUpdateDateTimeJP.Caption = "更新日時";
                this.columnMakerCode.Caption = "車種メーカーコード";
                this.columnSalesAreaName.Caption = "地区";
                this.columnCustAnalysCode1.Caption = "分析コード1";
                this.columnCustAnalysCode2.Caption = "分析コード2";
                this.columnCustAnalysCode3.Caption = "分析コード3";
                this.columnCustAnalysCode4.Caption = "分析コード4";
                this.columnCustAnalysCode5.Caption = "分析コード5";
                this.columnCustAnalysCode6.Caption = "分析コード6";
                this.columnConsTaxRate.Caption = "消費税率";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesListRow NewSalesListRow() {
                return ((SalesListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesListRowChanged != null)) {
                    this.SalesListRowChanged(this, new SalesListRowChangeEvent(((SalesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesListRowChanging != null)) {
                    this.SalesListRowChanging(this, new SalesListRowChangeEvent(((SalesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesListRowDeleted != null)) {
                    this.SalesListRowDeleted(this, new SalesListRowChangeEvent(((SalesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesListRowDeleting != null)) {
                    this.SalesListRowDeleting(this, new SalesListRowChangeEvent(((SalesListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesListRow(SalesListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustPtrSalesDetailDataSet ds = new CustPtrSalesDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BalanceTotalDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAcpOdrTtl2TmBfBlDmd;
            
            private global::System.Data.DataColumn columnLastTimeDemand;
            
            private global::System.Data.DataColumn columnAfCalDemandPrice;
            
            private global::System.Data.DataColumn columnAddUpYearMonth;
            
            private global::System.Data.DataColumn columnConsTaxLayMethod;
            
            private global::System.Data.DataColumn columnThisSalesPriceTotal;
            
            private global::System.Data.DataColumn columnOfsThisSalesTax;
            
            private global::System.Data.DataColumn columnThisTimeDmdNrml;
            
            private global::System.Data.DataColumn columnAfCalBlc;
            
            private global::System.Data.DataColumn columnStandardPrice_Total;
            
            private global::System.Data.DataColumn columnStandardPrice_Avg;
            
            private global::System.Data.DataColumn columnSoldAmount_Total;
            
            private global::System.Data.DataColumn columnSoldAmount_Avg;
            
            private global::System.Data.DataColumn columnCost_Total;
            
            private global::System.Data.DataColumn columnCost_Avg;
            
            private global::System.Data.DataColumn columnGrossProfitAmount_Total;
            
            private global::System.Data.DataColumn columnGrossProfitAmount_Avg;
            
            private global::System.Data.DataColumn columnGrossProfitPercentage;
            
            private global::System.Data.DataColumn columnSlipCount;
            
            private global::System.Data.DataColumn columnDetailCount;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnConsumeTaxAmount;
            
            private global::System.Data.DataColumn columnDmdStDay;
            
            private global::System.Data.DataColumn columnTotalDay;
            
            private global::System.Data.DataColumn columnIsParent;
            
            private global::System.Data.DataColumn columnExistsTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceTotalDataTable() {
                this.TableName = "BalanceTotal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BalanceTotalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BalanceTotalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcpOdrTtl2TmBfBlDmdColumn {
                get {
                    return this.columnAcpOdrTtl2TmBfBlDmd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastTimeDemandColumn {
                get {
                    return this.columnLastTimeDemand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfCalDemandPriceColumn {
                get {
                    return this.columnAfCalDemandPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddUpYearMonthColumn {
                get {
                    return this.columnAddUpYearMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsTaxLayMethodColumn {
                get {
                    return this.columnConsTaxLayMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisSalesPriceTotalColumn {
                get {
                    return this.columnThisSalesPriceTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfsThisSalesTaxColumn {
                get {
                    return this.columnOfsThisSalesTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisTimeDmdNrmlColumn {
                get {
                    return this.columnThisTimeDmdNrml;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfCalBlcColumn {
                get {
                    return this.columnAfCalBlc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardPrice_TotalColumn {
                get {
                    return this.columnStandardPrice_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardPrice_AvgColumn {
                get {
                    return this.columnStandardPrice_Avg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SoldAmount_TotalColumn {
                get {
                    return this.columnSoldAmount_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SoldAmount_AvgColumn {
                get {
                    return this.columnSoldAmount_Avg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cost_TotalColumn {
                get {
                    return this.columnCost_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Cost_AvgColumn {
                get {
                    return this.columnCost_Avg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfitAmount_TotalColumn {
                get {
                    return this.columnGrossProfitAmount_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfitAmount_AvgColumn {
                get {
                    return this.columnGrossProfitAmount_Avg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfitPercentageColumn {
                get {
                    return this.columnGrossProfitPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipCountColumn {
                get {
                    return this.columnSlipCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailCountColumn {
                get {
                    return this.columnDetailCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsumeTaxAmountColumn {
                get {
                    return this.columnConsumeTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DmdStDayColumn {
                get {
                    return this.columnDmdStDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalDayColumn {
                get {
                    return this.columnTotalDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsParentColumn {
                get {
                    return this.columnIsParent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExistsTotalColumn {
                get {
                    return this.columnExistsTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceTotalRow this[int index] {
                get {
                    return ((BalanceTotalRow)(this.Rows[index]));
                }
            }
            
            public event BalanceTotalRowChangeEventHandler BalanceTotalRowChanging;
            
            public event BalanceTotalRowChangeEventHandler BalanceTotalRowChanged;
            
            public event BalanceTotalRowChangeEventHandler BalanceTotalRowDeleting;
            
            public event BalanceTotalRowChangeEventHandler BalanceTotalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBalanceTotalRow(BalanceTotalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceTotalRow AddBalanceTotalRow(
                        long AcpOdrTtl2TmBfBlDmd, 
                        long LastTimeDemand, 
                        long AfCalDemandPrice, 
                        System.DateTime AddUpYearMonth, 
                        int ConsTaxLayMethod, 
                        double ThisSalesPriceTotal, 
                        double OfsThisSalesTax, 
                        double ThisTimeDmdNrml, 
                        double AfCalBlc, 
                        double StandardPrice_Total, 
                        double StandardPrice_Avg, 
                        double SoldAmount_Total, 
                        double SoldAmount_Avg, 
                        double Cost_Total, 
                        double Cost_Avg, 
                        double GrossProfitAmount_Total, 
                        double GrossProfitAmount_Avg, 
                        double GrossProfitPercentage, 
                        int SlipCount, 
                        double DetailCount, 
                        double Amount, 
                        double ConsumeTaxAmount, 
                        System.DateTime DmdStDay, 
                        System.DateTime TotalDay, 
                        bool IsParent, 
                        bool ExistsTotal) {
                BalanceTotalRow rowBalanceTotalRow = ((BalanceTotalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AcpOdrTtl2TmBfBlDmd,
                        LastTimeDemand,
                        AfCalDemandPrice,
                        AddUpYearMonth,
                        ConsTaxLayMethod,
                        ThisSalesPriceTotal,
                        OfsThisSalesTax,
                        ThisTimeDmdNrml,
                        AfCalBlc,
                        StandardPrice_Total,
                        StandardPrice_Avg,
                        SoldAmount_Total,
                        SoldAmount_Avg,
                        Cost_Total,
                        Cost_Avg,
                        GrossProfitAmount_Total,
                        GrossProfitAmount_Avg,
                        GrossProfitPercentage,
                        SlipCount,
                        DetailCount,
                        Amount,
                        ConsumeTaxAmount,
                        DmdStDay,
                        TotalDay,
                        IsParent,
                        ExistsTotal};
                rowBalanceTotalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBalanceTotalRow);
                return rowBalanceTotalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BalanceTotalDataTable cln = ((BalanceTotalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BalanceTotalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAcpOdrTtl2TmBfBlDmd = base.Columns["AcpOdrTtl2TmBfBlDmd"];
                this.columnLastTimeDemand = base.Columns["LastTimeDemand"];
                this.columnAfCalDemandPrice = base.Columns["AfCalDemandPrice"];
                this.columnAddUpYearMonth = base.Columns["AddUpYearMonth"];
                this.columnConsTaxLayMethod = base.Columns["ConsTaxLayMethod"];
                this.columnThisSalesPriceTotal = base.Columns["ThisSalesPriceTotal"];
                this.columnOfsThisSalesTax = base.Columns["OfsThisSalesTax"];
                this.columnThisTimeDmdNrml = base.Columns["ThisTimeDmdNrml"];
                this.columnAfCalBlc = base.Columns["AfCalBlc"];
                this.columnStandardPrice_Total = base.Columns["StandardPrice_Total"];
                this.columnStandardPrice_Avg = base.Columns["StandardPrice_Avg"];
                this.columnSoldAmount_Total = base.Columns["SoldAmount_Total"];
                this.columnSoldAmount_Avg = base.Columns["SoldAmount_Avg"];
                this.columnCost_Total = base.Columns["Cost_Total"];
                this.columnCost_Avg = base.Columns["Cost_Avg"];
                this.columnGrossProfitAmount_Total = base.Columns["GrossProfitAmount_Total"];
                this.columnGrossProfitAmount_Avg = base.Columns["GrossProfitAmount_Avg"];
                this.columnGrossProfitPercentage = base.Columns["GrossProfitPercentage"];
                this.columnSlipCount = base.Columns["SlipCount"];
                this.columnDetailCount = base.Columns["DetailCount"];
                this.columnAmount = base.Columns["Amount"];
                this.columnConsumeTaxAmount = base.Columns["ConsumeTaxAmount"];
                this.columnDmdStDay = base.Columns["DmdStDay"];
                this.columnTotalDay = base.Columns["TotalDay"];
                this.columnIsParent = base.Columns["IsParent"];
                this.columnExistsTotal = base.Columns["ExistsTotal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAcpOdrTtl2TmBfBlDmd = new global::System.Data.DataColumn("AcpOdrTtl2TmBfBlDmd", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcpOdrTtl2TmBfBlDmd);
                this.columnLastTimeDemand = new global::System.Data.DataColumn("LastTimeDemand", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTimeDemand);
                this.columnAfCalDemandPrice = new global::System.Data.DataColumn("AfCalDemandPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfCalDemandPrice);
                this.columnAddUpYearMonth = new global::System.Data.DataColumn("AddUpYearMonth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddUpYearMonth);
                this.columnConsTaxLayMethod = new global::System.Data.DataColumn("ConsTaxLayMethod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsTaxLayMethod);
                this.columnThisSalesPriceTotal = new global::System.Data.DataColumn("ThisSalesPriceTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisSalesPriceTotal);
                this.columnOfsThisSalesTax = new global::System.Data.DataColumn("OfsThisSalesTax", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfsThisSalesTax);
                this.columnThisTimeDmdNrml = new global::System.Data.DataColumn("ThisTimeDmdNrml", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisTimeDmdNrml);
                this.columnAfCalBlc = new global::System.Data.DataColumn("AfCalBlc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfCalBlc);
                this.columnStandardPrice_Total = new global::System.Data.DataColumn("StandardPrice_Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardPrice_Total);
                this.columnStandardPrice_Avg = new global::System.Data.DataColumn("StandardPrice_Avg", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardPrice_Avg);
                this.columnSoldAmount_Total = new global::System.Data.DataColumn("SoldAmount_Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoldAmount_Total);
                this.columnSoldAmount_Avg = new global::System.Data.DataColumn("SoldAmount_Avg", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoldAmount_Avg);
                this.columnCost_Total = new global::System.Data.DataColumn("Cost_Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost_Total);
                this.columnCost_Avg = new global::System.Data.DataColumn("Cost_Avg", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost_Avg);
                this.columnGrossProfitAmount_Total = new global::System.Data.DataColumn("GrossProfitAmount_Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfitAmount_Total);
                this.columnGrossProfitAmount_Avg = new global::System.Data.DataColumn("GrossProfitAmount_Avg", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfitAmount_Avg);
                this.columnGrossProfitPercentage = new global::System.Data.DataColumn("GrossProfitPercentage", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfitPercentage);
                this.columnSlipCount = new global::System.Data.DataColumn("SlipCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipCount);
                this.columnDetailCount = new global::System.Data.DataColumn("DetailCount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailCount);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnConsumeTaxAmount = new global::System.Data.DataColumn("ConsumeTaxAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumeTaxAmount);
                this.columnDmdStDay = new global::System.Data.DataColumn("DmdStDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDmdStDay);
                this.columnTotalDay = new global::System.Data.DataColumn("TotalDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDay);
                this.columnIsParent = new global::System.Data.DataColumn("IsParent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsParent);
                this.columnExistsTotal = new global::System.Data.DataColumn("ExistsTotal", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExistsTotal);
                this.columnAcpOdrTtl2TmBfBlDmd.Caption = "前々々回残高";
                this.columnLastTimeDemand.Caption = "前回請求金額";
                this.columnAfCalDemandPrice.Caption = "前回残高";
                this.columnAddUpYearMonth.Caption = "請求範囲";
                this.columnConsTaxLayMethod.Caption = "消費税転嫁方式";
                this.columnThisSalesPriceTotal.Caption = "今回売上";
                this.columnOfsThisSalesTax.Caption = "消費税";
                this.columnThisTimeDmdNrml.Caption = "今回入金";
                this.columnAfCalBlc.Caption = "請求残高";
                this.columnStandardPrice_Total.Caption = "標準価格合計";
                this.columnStandardPrice_Avg.Caption = "標準価格平均";
                this.columnSoldAmount_Total.Caption = "売上金額合計";
                this.columnSoldAmount_Avg.Caption = "売上金額平均";
                this.columnCost_Total.Caption = "原価合計";
                this.columnCost_Avg.Caption = "原価平均";
                this.columnGrossProfitAmount_Total.Caption = "粗利額合計";
                this.columnGrossProfitAmount_Avg.Caption = "粗利額平均";
                this.columnGrossProfitPercentage.Caption = "粗利率";
                this.columnSlipCount.Caption = "伝票枚数";
                this.columnDetailCount.Caption = "明細数";
                this.columnAmount.Caption = "数量";
                this.columnConsumeTaxAmount.Caption = "消費税";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceTotalRow NewBalanceTotalRow() {
                return ((BalanceTotalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BalanceTotalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BalanceTotalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BalanceTotalRowChanged != null)) {
                    this.BalanceTotalRowChanged(this, new BalanceTotalRowChangeEvent(((BalanceTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BalanceTotalRowChanging != null)) {
                    this.BalanceTotalRowChanging(this, new BalanceTotalRowChangeEvent(((BalanceTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BalanceTotalRowDeleted != null)) {
                    this.BalanceTotalRowDeleted(this, new BalanceTotalRowChangeEvent(((BalanceTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BalanceTotalRowDeleting != null)) {
                    this.BalanceTotalRowDeleting(this, new BalanceTotalRowChangeEvent(((BalanceTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBalanceTotalRow(BalanceTotalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustPtrSalesDetailDataSet ds = new CustPtrSalesDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BalanceTotalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesDetailDspDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSelectionCheck;
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnDataDiv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailDspDataTable() {
                this.TableName = "SalesDetailDsp";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesDetailDspDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesDetailDspDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectionCheckColumn {
                get {
                    return this.columnSelectionCheck;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataDivColumn {
                get {
                    return this.columnDataDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailDspRow this[int index] {
                get {
                    return ((SalesDetailDspRow)(this.Rows[index]));
                }
            }
            
            public event SalesDetailDspRowChangeEventHandler SalesDetailDspRowChanging;
            
            public event SalesDetailDspRowChangeEventHandler SalesDetailDspRowChanged;
            
            public event SalesDetailDspRowChangeEventHandler SalesDetailDspRowDeleting;
            
            public event SalesDetailDspRowChangeEventHandler SalesDetailDspRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesDetailDspRow(SalesDetailDspRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailDspRow AddSalesDetailDspRow(bool SelectionCheck, int RowNo, int DataDiv) {
                SalesDetailDspRow rowSalesDetailDspRow = ((SalesDetailDspRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SelectionCheck,
                        RowNo,
                        DataDiv};
                rowSalesDetailDspRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesDetailDspRow);
                return rowSalesDetailDspRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesDetailDspDataTable cln = ((SalesDetailDspDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesDetailDspDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSelectionCheck = base.Columns["SelectionCheck"];
                this.columnRowNo = base.Columns["RowNo"];
                this.columnDataDiv = base.Columns["DataDiv"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSelectionCheck = new global::System.Data.DataColumn("SelectionCheck", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectionCheck);
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnDataDiv = new global::System.Data.DataColumn("DataDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataDiv);
                this.columnSelectionCheck.Caption = "選択";
                this.columnRowNo.Caption = "行数";
                this.columnDataDiv.Caption = "データ区分";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailDspRow NewSalesDetailDspRow() {
                return ((SalesDetailDspRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesDetailDspRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesDetailDspRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesDetailDspRowChanged != null)) {
                    this.SalesDetailDspRowChanged(this, new SalesDetailDspRowChangeEvent(((SalesDetailDspRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesDetailDspRowChanging != null)) {
                    this.SalesDetailDspRowChanging(this, new SalesDetailDspRowChangeEvent(((SalesDetailDspRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesDetailDspRowDeleted != null)) {
                    this.SalesDetailDspRowDeleted(this, new SalesDetailDspRowChangeEvent(((SalesDetailDspRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesDetailDspRowDeleting != null)) {
                    this.SalesDetailDspRowDeleting(this, new SalesDetailDspRowChangeEvent(((SalesDetailDspRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesDetailDspRow(SalesDetailDspRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustPtrSalesDetailDataSet ds = new CustPtrSalesDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesDetailDspDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RedSlipDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnSalesSlipNum;
            
            private global::System.Data.DataColumn columnAcptAnOdrStatus;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnShipmentCnt;
            
            private global::System.Data.DataColumn columnSupplyDivName;
            
            private global::System.Data.DataColumn columnSupplierSlipNo;
            
            private global::System.Data.DataColumn columnReturnCnt;
            
            private global::System.Data.DataColumn columnSalesUnPrcTaxExcFl;
            
            private global::System.Data.DataColumn columnSalesMoneyTaxExc;
            
            private global::System.Data.DataColumn columnSalesUnitCost;
            
            private global::System.Data.DataColumn columnSalesOrderDivCd;
            
            private global::System.Data.DataColumn columnSalesOrderDivCdName;
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            private global::System.Data.DataColumn columnWarehouseName;
            
            private global::System.Data.DataColumn columnShelfNo;
            
            private global::System.Data.DataColumn columnReturnedAfterCnt;
            
            private global::System.Data.DataColumn columnSalesRowNo;
            
            private global::System.Data.DataColumn columnSupplierCd;
            
            private global::System.Data.DataColumn columnStockPartySaleSlipNum;
            
            private global::System.Data.DataColumn columnStockDate;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnRedSlipInputRowNo;
            
            private global::System.Data.DataColumn columnRedSlipWorkSlipNo;
            
            private global::System.Data.DataColumn columnHistoryDivName;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnSalesSlipCdDtl;
            
            private global::System.Data.DataColumn columnSalesSlipCd;
            
            private global::System.Data.DataColumn PartySaleSlipNum;
            
            private global::System.Data.DataColumn columnSlipNote;
            
            private global::System.Data.DataColumn columnSlipNote2;
            
            private global::System.Data.DataColumn columnSlipNote3;
            
            private global::System.Data.DataColumn columnDateAndSlipNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RedSlipDetailDataTable() {
                this.TableName = "RedSlipDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RedSlipDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RedSlipDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipNumColumn {
                get {
                    return this.columnSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcptAnOdrStatusColumn {
                get {
                    return this.columnAcptAnOdrStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentCntColumn {
                get {
                    return this.columnShipmentCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplyDivNameColumn {
                get {
                    return this.columnSupplyDivName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNoColumn {
                get {
                    return this.columnSupplierSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnCntColumn {
                get {
                    return this.columnReturnCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnPrcTaxExcFlColumn {
                get {
                    return this.columnSalesUnPrcTaxExcFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesMoneyTaxExcColumn {
                get {
                    return this.columnSalesMoneyTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnitCostColumn {
                get {
                    return this.columnSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesOrderDivCdColumn {
                get {
                    return this.columnSalesOrderDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesOrderDivCdNameColumn {
                get {
                    return this.columnSalesOrderDivCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseNameColumn {
                get {
                    return this.columnWarehouseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShelfNoColumn {
                get {
                    return this.columnShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnedAfterCntColumn {
                get {
                    return this.columnReturnedAfterCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesRowNoColumn {
                get {
                    return this.columnSalesRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCdColumn {
                get {
                    return this.columnSupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockPartySaleSlipNumColumn {
                get {
                    return this.columnStockPartySaleSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockDateColumn {
                get {
                    return this.columnStockDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RedSlipInputRowNoColumn {
                get {
                    return this.columnRedSlipInputRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RedSlipWorkSlipNoColumn {
                get {
                    return this.columnRedSlipWorkSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryDivNameColumn {
                get {
                    return this.columnHistoryDivName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipCdDtlColumn {
                get {
                    return this.columnSalesSlipCdDtl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipCdColumn {
                get {
                    return this.columnSalesSlipCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartySaleSlipNumColumn {
                get {
                    return this.PartySaleSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNoteColumn {
                get {
                    return this.columnSlipNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNote2Column {
                get {
                    return this.columnSlipNote2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNote3Column {
                get {
                    return this.columnSlipNote3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateAndSlipNoColumn {
                get {
                    return this.columnDateAndSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RedSlipDetailRow this[int index] {
                get {
                    return ((RedSlipDetailRow)(this.Rows[index]));
                }
            }
            
            public event RedSlipDetailRowChangeEventHandler RedSlipDetailRowChanging;
            
            public event RedSlipDetailRowChangeEventHandler RedSlipDetailRowChanged;
            
            public event RedSlipDetailRowChangeEventHandler RedSlipDetailRowDeleting;
            
            public event RedSlipDetailRowChangeEventHandler RedSlipDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRedSlipDetailRow(RedSlipDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RedSlipDetailRow AddRedSlipDetailRow(
                        int RowNo, 
                        string SalesSlipNum, 
                        int AcptAnOdrStatus, 
                        string GoodsName, 
                        string GoodsNo, 
                        double ShipmentCnt, 
                        string SupplyDivName, 
                        int SupplierSlipNo, 
                        double ReturnCnt, 
                        double SalesUnPrcTaxExcFl, 
                        long SalesMoneyTaxExc, 
                        double SalesUnitCost, 
                        int SalesOrderDivCd, 
                        string SalesOrderDivCdName, 
                        string WarehouseCode, 
                        string WarehouseName, 
                        string ShelfNo, 
                        double ReturnedAfterCnt, 
                        int SalesRowNo, 
                        int SupplierCd, 
                        string StockPartySaleSlipNum, 
                        System.DateTime StockDate, 
                        int GoodsMakerCd, 
                        int RedSlipInputRowNo, 
                        int RedSlipWorkSlipNo, 
                        string HistoryDivName, 
                        string CustomerCode, 
                        int SalesSlipCdDtl, 
                        int SalesSlipCd, 
                        string PartySaleSlipNum, 
                        string SlipNote, 
                        string SlipNote2, 
                        string SlipNote3, 
                        string DateAndSlipNo) {
                RedSlipDetailRow rowRedSlipDetailRow = ((RedSlipDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowNo,
                        SalesSlipNum,
                        AcptAnOdrStatus,
                        GoodsName,
                        GoodsNo,
                        ShipmentCnt,
                        SupplyDivName,
                        SupplierSlipNo,
                        ReturnCnt,
                        SalesUnPrcTaxExcFl,
                        SalesMoneyTaxExc,
                        SalesUnitCost,
                        SalesOrderDivCd,
                        SalesOrderDivCdName,
                        WarehouseCode,
                        WarehouseName,
                        ShelfNo,
                        ReturnedAfterCnt,
                        SalesRowNo,
                        SupplierCd,
                        StockPartySaleSlipNum,
                        StockDate,
                        GoodsMakerCd,
                        RedSlipInputRowNo,
                        RedSlipWorkSlipNo,
                        HistoryDivName,
                        CustomerCode,
                        SalesSlipCdDtl,
                        SalesSlipCd,
                        PartySaleSlipNum,
                        SlipNote,
                        SlipNote2,
                        SlipNote3,
                        DateAndSlipNo};
                rowRedSlipDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRedSlipDetailRow);
                return rowRedSlipDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RedSlipDetailRow FindByRowNo(int RowNo) {
                return ((RedSlipDetailRow)(this.Rows.Find(new object[] {
                            RowNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RedSlipDetailDataTable cln = ((RedSlipDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RedSlipDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowNo = base.Columns["RowNo"];
                this.columnSalesSlipNum = base.Columns["SalesSlipNum"];
                this.columnAcptAnOdrStatus = base.Columns["AcptAnOdrStatus"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnShipmentCnt = base.Columns["ShipmentCnt"];
                this.columnSupplyDivName = base.Columns["SupplyDivName"];
                this.columnSupplierSlipNo = base.Columns["SupplierSlipNo"];
                this.columnReturnCnt = base.Columns["ReturnCnt"];
                this.columnSalesUnPrcTaxExcFl = base.Columns["SalesUnPrcTaxExcFl"];
                this.columnSalesMoneyTaxExc = base.Columns["SalesMoneyTaxExc"];
                this.columnSalesUnitCost = base.Columns["SalesUnitCost"];
                this.columnSalesOrderDivCd = base.Columns["SalesOrderDivCd"];
                this.columnSalesOrderDivCdName = base.Columns["SalesOrderDivCdName"];
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnWarehouseName = base.Columns["WarehouseName"];
                this.columnShelfNo = base.Columns["ShelfNo"];
                this.columnReturnedAfterCnt = base.Columns["ReturnedAfterCnt"];
                this.columnSalesRowNo = base.Columns["SalesRowNo"];
                this.columnSupplierCd = base.Columns["SupplierCd"];
                this.columnStockPartySaleSlipNum = base.Columns["StockPartySaleSlipNum"];
                this.columnStockDate = base.Columns["StockDate"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnRedSlipInputRowNo = base.Columns["RedSlipInputRowNo"];
                this.columnRedSlipWorkSlipNo = base.Columns["RedSlipWorkSlipNo"];
                this.columnHistoryDivName = base.Columns["HistoryDivName"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnSalesSlipCdDtl = base.Columns["SalesSlipCdDtl"];
                this.columnSalesSlipCd = base.Columns["SalesSlipCd"];
                this.PartySaleSlipNum = base.Columns["PartySaleSlipNum"];
                this.columnSlipNote = base.Columns["SlipNote"];
                this.columnSlipNote2 = base.Columns["SlipNote2"];
                this.columnSlipNote3 = base.Columns["SlipNote3"];
                this.columnDateAndSlipNo = base.Columns["DateAndSlipNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnSalesSlipNum = new global::System.Data.DataColumn("SalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipNum);
                this.columnAcptAnOdrStatus = new global::System.Data.DataColumn("AcptAnOdrStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcptAnOdrStatus);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnShipmentCnt = new global::System.Data.DataColumn("ShipmentCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentCnt);
                this.columnSupplyDivName = new global::System.Data.DataColumn("SupplyDivName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplyDivName);
                this.columnSupplierSlipNo = new global::System.Data.DataColumn("SupplierSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNo);
                this.columnReturnCnt = new global::System.Data.DataColumn("ReturnCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnCnt);
                this.columnSalesUnPrcTaxExcFl = new global::System.Data.DataColumn("SalesUnPrcTaxExcFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnPrcTaxExcFl);
                this.columnSalesMoneyTaxExc = new global::System.Data.DataColumn("SalesMoneyTaxExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMoneyTaxExc);
                this.columnSalesUnitCost = new global::System.Data.DataColumn("SalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnitCost);
                this.columnSalesOrderDivCd = new global::System.Data.DataColumn("SalesOrderDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesOrderDivCd);
                this.columnSalesOrderDivCdName = new global::System.Data.DataColumn("SalesOrderDivCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesOrderDivCdName);
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnWarehouseName = new global::System.Data.DataColumn("WarehouseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseName);
                this.columnShelfNo = new global::System.Data.DataColumn("ShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShelfNo);
                this.columnReturnedAfterCnt = new global::System.Data.DataColumn("ReturnedAfterCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnedAfterCnt);
                this.columnSalesRowNo = new global::System.Data.DataColumn("SalesRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesRowNo);
                this.columnSupplierCd = new global::System.Data.DataColumn("SupplierCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCd);
                this.columnStockPartySaleSlipNum = new global::System.Data.DataColumn("StockPartySaleSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockPartySaleSlipNum);
                this.columnStockDate = new global::System.Data.DataColumn("StockDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockDate);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnRedSlipInputRowNo = new global::System.Data.DataColumn("RedSlipInputRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRedSlipInputRowNo);
                this.columnRedSlipWorkSlipNo = new global::System.Data.DataColumn("RedSlipWorkSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRedSlipWorkSlipNo);
                this.columnHistoryDivName = new global::System.Data.DataColumn("HistoryDivName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryDivName);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnSalesSlipCdDtl = new global::System.Data.DataColumn("SalesSlipCdDtl", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipCdDtl);
                this.columnSalesSlipCd = new global::System.Data.DataColumn("SalesSlipCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipCd);
                this.PartySaleSlipNum = new global::System.Data.DataColumn("PartySaleSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                this.PartySaleSlipNum.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "PartySaleSlipNum");
                this.PartySaleSlipNum.ExtendedProperties.Add("Generator_UserColumnName", "PartySaleSlipNum");
                base.Columns.Add(this.PartySaleSlipNum);
                this.columnSlipNote = new global::System.Data.DataColumn("SlipNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote);
                this.columnSlipNote2 = new global::System.Data.DataColumn("SlipNote2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote2);
                this.columnSlipNote3 = new global::System.Data.DataColumn("SlipNote3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote3);
                this.columnDateAndSlipNo = new global::System.Data.DataColumn("DateAndSlipNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateAndSlipNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, true));
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "行No";
                this.columnSalesSlipNum.Caption = "伝票番号";
                this.columnAcptAnOdrStatus.Caption = "受注ステータス";
                this.columnGoodsName.Caption = "品名";
                this.columnGoodsNo.Caption = "品番";
                this.columnShipmentCnt.Caption = "可能数";
                this.columnSupplyDivName.Caption = "仕入";
                this.columnSupplierSlipNo.Caption = "仕入SEQ番号";
                this.columnReturnCnt.Caption = "返品数";
                this.columnSalesUnPrcTaxExcFl.Caption = "単価";
                this.columnSalesMoneyTaxExc.Caption = "金額";
                this.columnSalesUnitCost.Caption = "原価";
                this.columnSalesOrderDivCd.Caption = "在庫取寄区分";
                this.columnSalesOrderDivCdName.Caption = "在庫取寄区分";
                this.columnWarehouseCode.Caption = "倉庫コード";
                this.columnWarehouseName.Caption = "倉庫";
                this.columnShelfNo.Caption = "棚番";
                this.columnReturnedAfterCnt.Caption = "返品後数";
                this.columnSalesRowNo.Caption = "行番号";
                this.columnSupplierCd.Caption = "仕入先コード";
                this.columnStockPartySaleSlipNum.Caption = "仕入伝票番号";
                this.columnHistoryDivName.Caption = "履歴";
                this.columnCustomerCode.Caption = "得意先コード";
                this.columnSalesSlipCd.Caption = "売上伝票区分";
                this.PartySaleSlipNum.Caption = "指示書(仮伝)番号";
                this.columnSlipNote.Caption = "備考１";
                this.columnSlipNote2.Caption = "備考２";
                this.columnSlipNote3.Caption = "備考３";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RedSlipDetailRow NewRedSlipDetailRow() {
                return ((RedSlipDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RedSlipDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RedSlipDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RedSlipDetailRowChanged != null)) {
                    this.RedSlipDetailRowChanged(this, new RedSlipDetailRowChangeEvent(((RedSlipDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RedSlipDetailRowChanging != null)) {
                    this.RedSlipDetailRowChanging(this, new RedSlipDetailRowChangeEvent(((RedSlipDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RedSlipDetailRowDeleted != null)) {
                    this.RedSlipDetailRowDeleted(this, new RedSlipDetailRowChangeEvent(((RedSlipDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RedSlipDetailRowDeleting != null)) {
                    this.RedSlipDetailRowDeleting(this, new RedSlipDetailRowChangeEvent(((RedSlipDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRedSlipDetailRow(RedSlipDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustPtrSalesDetailDataSet ds = new CustPtrSalesDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RedSlipDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BalanceListDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnAddUpDate;
            
            private global::System.Data.DataColumn columnLastTimeBlc;
            
            private global::System.Data.DataColumn columnThisTimeDmdNrml;
            
            private global::System.Data.DataColumn columnThisTimeTtlBlc;
            
            private global::System.Data.DataColumn columnThisTimeSales;
            
            private global::System.Data.DataColumn columnSalesPriceRgdsDis;
            
            private global::System.Data.DataColumn columnOfsThisTimeSales;
            
            private global::System.Data.DataColumn columnOfsThisSalesTax;
            
            private global::System.Data.DataColumn columnThisSalesPricTotal;
            
            private global::System.Data.DataColumn columnAfCalBlc;
            
            private global::System.Data.DataColumn columnSalesSlipCount;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnSectionCode;
            
            private global::System.Data.DataColumn columnClaimSectionCode;
            
            private global::System.Data.DataColumn columnCreditMngCode;
            
            private global::System.Data.DataColumn columnCreditMoney;
            
            private global::System.Data.DataColumn columnWarningCreditMoney;
            
            private global::System.Data.DataColumn columnPrsntAccRecBalance;
            
            private global::System.Data.DataColumn columnTotalDay;
            
            private global::System.Data.DataColumn columnCompanyTotalDay;
            
            private global::System.Data.DataColumn columnDifference;
            
            private global::System.Data.DataColumn columnCreditDifference;
            
            private global::System.Data.DataColumn columnAccRecDivCd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceListDataTable() {
                this.TableName = "BalanceList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BalanceListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BalanceListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddUpDateColumn {
                get {
                    return this.columnAddUpDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastTimeBlcColumn {
                get {
                    return this.columnLastTimeBlc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisTimeDmdNrmlColumn {
                get {
                    return this.columnThisTimeDmdNrml;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisTimeTtlBlcColumn {
                get {
                    return this.columnThisTimeTtlBlc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisTimeSalesColumn {
                get {
                    return this.columnThisTimeSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesPriceRgdsDisColumn {
                get {
                    return this.columnSalesPriceRgdsDis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfsThisTimeSalesColumn {
                get {
                    return this.columnOfsThisTimeSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfsThisSalesTaxColumn {
                get {
                    return this.columnOfsThisSalesTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisSalesPricTotalColumn {
                get {
                    return this.columnThisSalesPricTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfCalBlcColumn {
                get {
                    return this.columnAfCalBlc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipCountColumn {
                get {
                    return this.columnSalesSlipCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionCodeColumn {
                get {
                    return this.columnSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClaimSectionCodeColumn {
                get {
                    return this.columnClaimSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditMngCodeColumn {
                get {
                    return this.columnCreditMngCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditMoneyColumn {
                get {
                    return this.columnCreditMoney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarningCreditMoneyColumn {
                get {
                    return this.columnWarningCreditMoney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrsntAccRecBalanceColumn {
                get {
                    return this.columnPrsntAccRecBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalDayColumn {
                get {
                    return this.columnTotalDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyTotalDayColumn {
                get {
                    return this.columnCompanyTotalDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DifferenceColumn {
                get {
                    return this.columnDifference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditDifferenceColumn {
                get {
                    return this.columnCreditDifference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccRecDivCdColumn {
                get {
                    return this.columnAccRecDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceListRow this[int index] {
                get {
                    return ((BalanceListRow)(this.Rows[index]));
                }
            }
            
            public event BalanceListRowChangeEventHandler BalanceListRowChanging;
            
            public event BalanceListRowChangeEventHandler BalanceListRowChanged;
            
            public event BalanceListRowChangeEventHandler BalanceListRowDeleting;
            
            public event BalanceListRowChangeEventHandler BalanceListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBalanceListRow(BalanceListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceListRow AddBalanceListRow(
                        int RowNo, 
                        System.DateTime AddUpDate, 
                        long LastTimeBlc, 
                        long ThisTimeDmdNrml, 
                        long ThisTimeTtlBlc, 
                        long ThisTimeSales, 
                        long SalesPriceRgdsDis, 
                        long OfsThisTimeSales, 
                        long OfsThisSalesTax, 
                        long ThisSalesPricTotal, 
                        long AfCalBlc, 
                        int SalesSlipCount, 
                        string CustomerName, 
                        int CustomerCode, 
                        string SectionCode, 
                        string ClaimSectionCode, 
                        string CreditMngCode, 
                        long CreditMoney, 
                        long WarningCreditMoney, 
                        long PrsntAccRecBalance, 
                        int TotalDay, 
                        int CompanyTotalDay, 
                        string Difference, 
                        long CreditDifference, 
                        string AccRecDivCd) {
                BalanceListRow rowBalanceListRow = ((BalanceListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowNo,
                        AddUpDate,
                        LastTimeBlc,
                        ThisTimeDmdNrml,
                        ThisTimeTtlBlc,
                        ThisTimeSales,
                        SalesPriceRgdsDis,
                        OfsThisTimeSales,
                        OfsThisSalesTax,
                        ThisSalesPricTotal,
                        AfCalBlc,
                        SalesSlipCount,
                        CustomerName,
                        CustomerCode,
                        SectionCode,
                        ClaimSectionCode,
                        CreditMngCode,
                        CreditMoney,
                        WarningCreditMoney,
                        PrsntAccRecBalance,
                        TotalDay,
                        CompanyTotalDay,
                        Difference,
                        CreditDifference,
                        AccRecDivCd};
                rowBalanceListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBalanceListRow);
                return rowBalanceListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceListRow FindByRowNo(int RowNo) {
                return ((BalanceListRow)(this.Rows.Find(new object[] {
                            RowNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BalanceListDataTable cln = ((BalanceListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BalanceListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowNo = base.Columns["RowNo"];
                this.columnAddUpDate = base.Columns["AddUpDate"];
                this.columnLastTimeBlc = base.Columns["LastTimeBlc"];
                this.columnThisTimeDmdNrml = base.Columns["ThisTimeDmdNrml"];
                this.columnThisTimeTtlBlc = base.Columns["ThisTimeTtlBlc"];
                this.columnThisTimeSales = base.Columns["ThisTimeSales"];
                this.columnSalesPriceRgdsDis = base.Columns["SalesPriceRgdsDis"];
                this.columnOfsThisTimeSales = base.Columns["OfsThisTimeSales"];
                this.columnOfsThisSalesTax = base.Columns["OfsThisSalesTax"];
                this.columnThisSalesPricTotal = base.Columns["ThisSalesPricTotal"];
                this.columnAfCalBlc = base.Columns["AfCalBlc"];
                this.columnSalesSlipCount = base.Columns["SalesSlipCount"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnSectionCode = base.Columns["SectionCode"];
                this.columnClaimSectionCode = base.Columns["ClaimSectionCode"];
                this.columnCreditMngCode = base.Columns["CreditMngCode"];
                this.columnCreditMoney = base.Columns["CreditMoney"];
                this.columnWarningCreditMoney = base.Columns["WarningCreditMoney"];
                this.columnPrsntAccRecBalance = base.Columns["PrsntAccRecBalance"];
                this.columnTotalDay = base.Columns["TotalDay"];
                this.columnCompanyTotalDay = base.Columns["CompanyTotalDay"];
                this.columnDifference = base.Columns["Difference"];
                this.columnCreditDifference = base.Columns["CreditDifference"];
                this.columnAccRecDivCd = base.Columns["AccRecDivCd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnAddUpDate = new global::System.Data.DataColumn("AddUpDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddUpDate);
                this.columnLastTimeBlc = new global::System.Data.DataColumn("LastTimeBlc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTimeBlc);
                this.columnThisTimeDmdNrml = new global::System.Data.DataColumn("ThisTimeDmdNrml", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisTimeDmdNrml);
                this.columnThisTimeTtlBlc = new global::System.Data.DataColumn("ThisTimeTtlBlc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisTimeTtlBlc);
                this.columnThisTimeSales = new global::System.Data.DataColumn("ThisTimeSales", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisTimeSales);
                this.columnSalesPriceRgdsDis = new global::System.Data.DataColumn("SalesPriceRgdsDis", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPriceRgdsDis);
                this.columnOfsThisTimeSales = new global::System.Data.DataColumn("OfsThisTimeSales", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfsThisTimeSales);
                this.columnOfsThisSalesTax = new global::System.Data.DataColumn("OfsThisSalesTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfsThisSalesTax);
                this.columnThisSalesPricTotal = new global::System.Data.DataColumn("ThisSalesPricTotal", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisSalesPricTotal);
                this.columnAfCalBlc = new global::System.Data.DataColumn("AfCalBlc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfCalBlc);
                this.columnSalesSlipCount = new global::System.Data.DataColumn("SalesSlipCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipCount);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnSectionCode = new global::System.Data.DataColumn("SectionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionCode);
                this.columnClaimSectionCode = new global::System.Data.DataColumn("ClaimSectionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClaimSectionCode);
                this.columnCreditMngCode = new global::System.Data.DataColumn("CreditMngCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditMngCode);
                this.columnCreditMoney = new global::System.Data.DataColumn("CreditMoney", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditMoney);
                this.columnWarningCreditMoney = new global::System.Data.DataColumn("WarningCreditMoney", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarningCreditMoney);
                this.columnPrsntAccRecBalance = new global::System.Data.DataColumn("PrsntAccRecBalance", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrsntAccRecBalance);
                this.columnTotalDay = new global::System.Data.DataColumn("TotalDay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDay);
                this.columnCompanyTotalDay = new global::System.Data.DataColumn("CompanyTotalDay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyTotalDay);
                this.columnDifference = new global::System.Data.DataColumn("Difference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDifference);
                this.columnCreditDifference = new global::System.Data.DataColumn("CreditDifference", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditDifference);
                this.columnAccRecDivCd = new global::System.Data.DataColumn("AccRecDivCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccRecDivCd);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, true));
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "行No";
                this.columnAddUpDate.Caption = "計上日";
                this.columnLastTimeBlc.Caption = "前回残高";
                this.columnThisTimeDmdNrml.Caption = "今回入金額";
                this.columnThisTimeTtlBlc.Caption = "繰越残高";
                this.columnThisTimeSales.Caption = "今回売上額";
                this.columnSalesPriceRgdsDis.Caption = "返品・値引額";
                this.columnOfsThisTimeSales.Caption = "純売上額";
                this.columnOfsThisSalesTax.Caption = "消費税額";
                this.columnThisSalesPricTotal.Caption = "今回合計";
                this.columnAfCalBlc.Caption = "今回残高";
                this.columnSalesSlipCount.Caption = "伝票枚数";
                this.columnCustomerName.Caption = "請求先名";
                this.columnCustomerCode.Caption = "請求先";
                this.columnSectionCode.Caption = "拠点";
                this.columnClaimSectionCode.Caption = "請求拠点";
                this.columnCreditMngCode.Caption = "与信区分";
                this.columnCreditMoney.Caption = "与信額";
                this.columnWarningCreditMoney.Caption = "警告与信額";
                this.columnPrsntAccRecBalance.Caption = "与信売掛残高";
                this.columnTotalDay.Caption = "請求締日";
                this.columnCompanyTotalDay.Caption = "月次締日";
                this.columnDifference.Caption = "請求・月次差異額";
                this.columnCreditDifference.Caption = "与信額差異";
                this.columnAccRecDivCd.Caption = "売掛区分";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceListRow NewBalanceListRow() {
                return ((BalanceListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BalanceListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BalanceListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BalanceListRowChanged != null)) {
                    this.BalanceListRowChanged(this, new BalanceListRowChangeEvent(((BalanceListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BalanceListRowChanging != null)) {
                    this.BalanceListRowChanging(this, new BalanceListRowChangeEvent(((BalanceListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BalanceListRowDeleted != null)) {
                    this.BalanceListRowDeleted(this, new BalanceListRowChangeEvent(((BalanceListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BalanceListRowDeleting != null)) {
                    this.BalanceListRowDeleting(this, new BalanceListRowChangeEvent(((BalanceListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBalanceListRow(BalanceListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustPtrSalesDetailDataSet ds = new CustPtrSalesDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BalanceListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesDetailRow : global::System.Data.DataRow {
            
            private SalesDetailDataTable tableSalesDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesDetail = ((SalesDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SelectionCheck {
                get {
                    try {
                        return ((bool)(this[this.tableSalesDetail.SelectionCheckColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SelectionCheck\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SelectionCheckColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableSalesDetail.RowNoColumn]));
                }
                set {
                    this[this.tableSalesDetail.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DataDiv {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.DataDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'DataDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.DataDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SalesDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesDetail.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesRowNo {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SalesRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AcptAnOdrStatus {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.AcptAnOdrStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AcptAnOdrStatus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AcptAnOdrStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesSlipCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SalesSlipCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesSlipCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesSlipCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipCdName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesSlipCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesSlipCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesSlipCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesSlipCdDtl {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SalesSlipCdDtlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesSlipCdDtl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesSlipCdDtlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipCdDtlName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesSlipCdDtlNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesSlipCdDtlName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesSlipCdDtlNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesEmployeeNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesEmployeeNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesEmployeeNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesEmployeeNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesTotalTaxExc {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.SalesTotalTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesTotalTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesTotalTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLGoodsCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.BLGoodsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BLGoodsCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BLGoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BLGroupCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.BLGroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BLGroupCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BLGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMGroup {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.GoodsMGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsMGroup\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsMGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsMGroupName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GoodsMGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsMGroupName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsMGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsLGroup {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.GoodsLGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsLGroup\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsLGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsLGroupName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GoodsLGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsLGroupName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsLGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ShipmentCnt {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.ShipmentCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ShipmentCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ShipmentCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ListPriceTaxExcFl {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.ListPriceTaxExcFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ListPriceTaxExcFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ListPriceTaxExcFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OpenPriceDiv {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.OpenPriceDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'OpenPriceDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.OpenPriceDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesUnPrcTaxExcFl {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.SalesUnPrcTaxExcFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesUnPrcTaxExcFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesUnPrcTaxExcFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.SalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesMoneyTaxExc {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.SalesMoneyTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesMoneyTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesMoneyTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConsTaxLayMethod {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.ConsTaxLayMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ConsTaxLayMethod\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ConsTaxLayMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesTotalTaxInc {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.SalesTotalTaxIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesTotalTaxInc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesTotalTaxIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesPriceConsTax {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.SalesPriceConsTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesPriceConsTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesPriceConsTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TotalCost {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.TotalCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'TotalCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.TotalCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long GrossProfitDetail {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.GrossProfitDetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GrossProfitDetail\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GrossProfitDetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GrossProfitMargin {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesDetail.GrossProfitMarginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GrossProfitMargin\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GrossProfitMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CategoryNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.CategoryNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CategoryNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CategoryNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelFullName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.ModelFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ModelFullName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ModelFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstEntryDate {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.FirstEntryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FirstEntryDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FirstEntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FrameNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.FrameNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FrameNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FrameNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullModel {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.FullModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FullModel\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FullModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SlipNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SlipNote\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SlipNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SlipNote2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SlipNote2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SlipNote2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote3 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SlipNote3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SlipNote3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SlipNote3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FrontEmployeeNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.FrontEmployeeNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FrontEmployeeNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FrontEmployeeNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesInputName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesInputNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesInputName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesInputNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerSnm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.CustomerSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustomerSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustomerSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SupplierCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SupplierCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSnm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SupplierSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SupplierSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SupplierSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartySaleSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.PartySaleSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'PartySaleSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.PartySaleSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarMngCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.CarMngCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CarMngCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CarMngCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcceptAnOrderNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.AcceptAnOrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AcceptAnOrderNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AcceptAnOrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipSalesSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.ShipSalesSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ShipSalesSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ShipSalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SrcSalesSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SrcSalesSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SrcSalesSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SrcSalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsKindCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.GoodsKindCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsKindCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsKindCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsKindCodeName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GoodsKindCodeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsKindCodeName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsKindCodeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesOrderDivCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SalesOrderDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesOrderDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesOrderDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesOrderDivCdName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesOrderDivCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesOrderDivCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesOrderDivCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.WarehouseCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'WarehouseCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.WarehouseCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.WarehouseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'WarehouseName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.WarehouseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.WarehouseShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'WarehouseShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.WarehouseShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SupplierSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SupplierSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SupplierSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOESupplierCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.UOESupplierCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UOESupplierCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UOESupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOESupplierSnm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.UOESupplierSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UOESupplierSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UOESupplierSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOERemark1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.UOERemark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UOERemark1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UOERemark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOERemark2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.UOERemark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UOERemark2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UOERemark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GuideName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GuideNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GuideName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GuideNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SectionCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SectionCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SectionCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionGuideName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SectionGuideNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SectionGuideName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SectionGuideNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DtlNote {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.DtlNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'DtlNote\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.DtlNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ColorName1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.ColorName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ColorName1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ColorName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrimName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.TrimNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'TrimName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.TrimNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StdUnPrcLPrice {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.StdUnPrcLPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'StdUnPrcLPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.StdUnPrcLPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StdUnPrcSalUnPrc {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.StdUnPrcSalUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'StdUnPrcSalUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.StdUnPrcSalUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StdUnPrcUnCst {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.StdUnPrcUnCstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'StdUnPrcUnCst\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.StdUnPrcUnCstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.GoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerName {
                get {
                    if (this.IsMakerNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableSalesDetail.MakerNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesDetail.MakerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Cost {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'Cost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.CustSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AddUpADate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesDetail.AddUpADateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AddUpADate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AddUpADateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AccRecDivCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.AccRecDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AccRecDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AccRecDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccRecDivCdName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.AccRecDivCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AccRecDivCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AccRecDivCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebitNoteDiv {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.DebitNoteDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'DebitNoteDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.DebitNoteDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockPartySaleSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.StockPartySaleSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'StockPartySaleSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.StockPartySaleSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AddresseeCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.AddresseeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AddresseeCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AddresseeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseeName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.AddresseeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AddresseeName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AddresseeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AcptAnOdrRemainCnt {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.AcptAnOdrRemainCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AcptAnOdrRemainCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AcptAnOdrRemainCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnterpriseGanreCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.EnterpriseGanreCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'EnterpriseGanreCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.EnterpriseGanreCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InputDay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesDetail.InputDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'InputDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.InputDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CarMngNo {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.CarMngNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CarMngNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CarMngNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MakerCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.MakerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'MakerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.MakerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModelCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.ModelCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ModelCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ModelCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModelSubCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.ModelSubCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ModelSubCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ModelSubCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EngineModelNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.EngineModelNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'EngineModelNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.EngineModelNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ColorCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.ColorCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ColorCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ColorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrimCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.TrimCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'TrimCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.TrimCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeliveredGoodsDiv {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.DeliveredGoodsDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'DeliveredGoodsDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.DeliveredGoodsDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public object FullModelFixedNoAry {
                get {
                    try {
                        return ((object)(this[this.tableSalesDetail.FullModelFixedNoAryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FullModelFixedNoAry\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FullModelFixedNoAryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public object CategoryObjAry {
                get {
                    try {
                        return ((object)(this[this.tableSalesDetail.CategoryObjAryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CategoryObjAry\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CategoryObjAryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ModelDesignationNoOrg {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.ModelDesignationNoOrgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ModelDesignationNoOrg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ModelDesignationNoOrgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CategoryNoOrg {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.CategoryNoOrgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CategoryNoOrg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CategoryNoOrgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseeName1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.AddresseeName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AddresseeName1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AddresseeName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseeName2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.AddresseeName2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AddresseeName2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AddresseeName2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesInputCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesInputCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesInputCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesInputCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FrontEmployeeCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.FrontEmployeeCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FrontEmployeeCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FrontEmployeeCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryDivName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.HistoryDivNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'HistoryDivName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.HistoryDivNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Mileage {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.MileageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'Mileage\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.MileageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarNote {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.CarNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CarNote\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CarNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipPrintTime {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SlipPrintTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SlipPrintTime\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SlipPrintTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BfUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.BfUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BfUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BfUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BfSalesUnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.BfSalesUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BfSalesUnitPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BfSalesUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Retuppercnt {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.RetuppercntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'Retuppercnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.RetuppercntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RetuppercntDiv {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.RetuppercntDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'RetuppercntDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.RetuppercntDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelHalfName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.ModelHalfNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ModelHalfName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ModelHalfNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string[] FreeSrchMdlFxdNoAry {
                get {
                    try {
                        return ((string[])(this[this.tableSalesDetail.FreeSrchMdlFxdNoAryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FreeSrchMdlFxdNoAry\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FreeSrchMdlFxdNoAryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BfListPrice {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.BfListPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BfListPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BfListPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesRate {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.SalesRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CostRate {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.CostRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CostRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CostRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AutoAnswerDivSCM {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.AutoAnswerDivSCMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AutoAnswerDivSCM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AutoAnswerDivSCMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InquiryNumber {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.InquiryNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'InquiryNumber\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.InquiryNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdateDateTime {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.UpdateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UpdateDateTime\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UpdateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesDateJP {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesDateJPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesDateJP\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesDateJPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddUpADateJP {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.AddUpADateJPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AddUpADateJP\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AddUpADateJPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InputDayJP {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.InputDayJPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'InputDayJP\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.InputDayJPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdateDateTimeJP {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.UpdateDateTimeJPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UpdateDateTimeJP\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UpdateDateTimeJPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChangeGoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.ChangeGoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ChangeGoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ChangeGoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesRecognitionCnt {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.SalesRecognitionCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesRecognitionCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesRecognitionCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesNotRecognitionCnt {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.SalesNotRecognitionCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesNotRecognitionCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesNotRecognitionCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SecondSalePrice {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.SecondSalePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SecondSalePrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SecondSalePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesAreaName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesAreaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesAreaName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesAreaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustAnalysCode1 {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.CustAnalysCode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustAnalysCode1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustAnalysCode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustAnalysCode2 {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.CustAnalysCode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustAnalysCode2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustAnalysCode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustAnalysCode3 {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.CustAnalysCode3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustAnalysCode3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustAnalysCode3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustAnalysCode4 {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.CustAnalysCode4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustAnalysCode4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustAnalysCode4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustAnalysCode5 {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.CustAnalysCode5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustAnalysCode5\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustAnalysCode5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustAnalysCode6 {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.CustAnalysCode6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustAnalysCode6\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustAnalysCode6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ConsTaxRate {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.ConsTaxRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ConsTaxRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ConsTaxRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectionCheckNull() {
                return this.IsNull(this.tableSalesDetail.SelectionCheckColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectionCheckNull() {
                this[this.tableSalesDetail.SelectionCheckColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataDivNull() {
                return this.IsNull(this.tableSalesDetail.DataDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataDivNull() {
                this[this.tableSalesDetail.DataDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tableSalesDetail.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tableSalesDetail.SalesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipNumNull() {
                return this.IsNull(this.tableSalesDetail.SalesSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipNumNull() {
                this[this.tableSalesDetail.SalesSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesRowNoNull() {
                return this.IsNull(this.tableSalesDetail.SalesRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesRowNoNull() {
                this[this.tableSalesDetail.SalesRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcptAnOdrStatusNull() {
                return this.IsNull(this.tableSalesDetail.AcptAnOdrStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcptAnOdrStatusNull() {
                this[this.tableSalesDetail.AcptAnOdrStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipCdNull() {
                return this.IsNull(this.tableSalesDetail.SalesSlipCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipCdNull() {
                this[this.tableSalesDetail.SalesSlipCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipCdNameNull() {
                return this.IsNull(this.tableSalesDetail.SalesSlipCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipCdNameNull() {
                this[this.tableSalesDetail.SalesSlipCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipCdDtlNull() {
                return this.IsNull(this.tableSalesDetail.SalesSlipCdDtlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipCdDtlNull() {
                this[this.tableSalesDetail.SalesSlipCdDtlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipCdDtlNameNull() {
                return this.IsNull(this.tableSalesDetail.SalesSlipCdDtlNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipCdDtlNameNull() {
                this[this.tableSalesDetail.SalesSlipCdDtlNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesEmployeeNmNull() {
                return this.IsNull(this.tableSalesDetail.SalesEmployeeNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesEmployeeNmNull() {
                this[this.tableSalesDetail.SalesEmployeeNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesTotalTaxExcNull() {
                return this.IsNull(this.tableSalesDetail.SalesTotalTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesTotalTaxExcNull() {
                this[this.tableSalesDetail.SalesTotalTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableSalesDetail.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableSalesDetail.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNull() {
                return this.IsNull(this.tableSalesDetail.GoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNull() {
                this[this.tableSalesDetail.GoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGoodsCodeNull() {
                return this.IsNull(this.tableSalesDetail.BLGoodsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGoodsCodeNull() {
                this[this.tableSalesDetail.BLGoodsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGroupCodeNull() {
                return this.IsNull(this.tableSalesDetail.BLGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGroupCodeNull() {
                this[this.tableSalesDetail.BLGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMGroupNull() {
                return this.IsNull(this.tableSalesDetail.GoodsMGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMGroupNull() {
                this[this.tableSalesDetail.GoodsMGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMGroupNameNull() {
                return this.IsNull(this.tableSalesDetail.GoodsMGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMGroupNameNull() {
                this[this.tableSalesDetail.GoodsMGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsLGroupNull() {
                return this.IsNull(this.tableSalesDetail.GoodsLGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsLGroupNull() {
                this[this.tableSalesDetail.GoodsLGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsLGroupNameNull() {
                return this.IsNull(this.tableSalesDetail.GoodsLGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsLGroupNameNull() {
                this[this.tableSalesDetail.GoodsLGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentCntNull() {
                return this.IsNull(this.tableSalesDetail.ShipmentCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentCntNull() {
                this[this.tableSalesDetail.ShipmentCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceTaxExcFlNull() {
                return this.IsNull(this.tableSalesDetail.ListPriceTaxExcFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceTaxExcFlNull() {
                this[this.tableSalesDetail.ListPriceTaxExcFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpenPriceDivNull() {
                return this.IsNull(this.tableSalesDetail.OpenPriceDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpenPriceDivNull() {
                this[this.tableSalesDetail.OpenPriceDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnPrcTaxExcFlNull() {
                return this.IsNull(this.tableSalesDetail.SalesUnPrcTaxExcFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnPrcTaxExcFlNull() {
                this[this.tableSalesDetail.SalesUnPrcTaxExcFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnitCostNull() {
                return this.IsNull(this.tableSalesDetail.SalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnitCostNull() {
                this[this.tableSalesDetail.SalesUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesMoneyTaxExcNull() {
                return this.IsNull(this.tableSalesDetail.SalesMoneyTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesMoneyTaxExcNull() {
                this[this.tableSalesDetail.SalesMoneyTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsTaxLayMethodNull() {
                return this.IsNull(this.tableSalesDetail.ConsTaxLayMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsTaxLayMethodNull() {
                this[this.tableSalesDetail.ConsTaxLayMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesTotalTaxIncNull() {
                return this.IsNull(this.tableSalesDetail.SalesTotalTaxIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesTotalTaxIncNull() {
                this[this.tableSalesDetail.SalesTotalTaxIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesPriceConsTaxNull() {
                return this.IsNull(this.tableSalesDetail.SalesPriceConsTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesPriceConsTaxNull() {
                this[this.tableSalesDetail.SalesPriceConsTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalCostNull() {
                return this.IsNull(this.tableSalesDetail.TotalCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalCostNull() {
                this[this.tableSalesDetail.TotalCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfitDetailNull() {
                return this.IsNull(this.tableSalesDetail.GrossProfitDetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfitDetailNull() {
                this[this.tableSalesDetail.GrossProfitDetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfitMarginNull() {
                return this.IsNull(this.tableSalesDetail.GrossProfitMarginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfitMarginNull() {
                this[this.tableSalesDetail.GrossProfitMarginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNoNull() {
                return this.IsNull(this.tableSalesDetail.CategoryNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNoNull() {
                this[this.tableSalesDetail.CategoryNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelFullNameNull() {
                return this.IsNull(this.tableSalesDetail.ModelFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelFullNameNull() {
                this[this.tableSalesDetail.ModelFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstEntryDateNull() {
                return this.IsNull(this.tableSalesDetail.FirstEntryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstEntryDateNull() {
                this[this.tableSalesDetail.FirstEntryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrameNoNull() {
                return this.IsNull(this.tableSalesDetail.FrameNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrameNoNull() {
                this[this.tableSalesDetail.FrameNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullModelNull() {
                return this.IsNull(this.tableSalesDetail.FullModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullModelNull() {
                this[this.tableSalesDetail.FullModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNoteNull() {
                return this.IsNull(this.tableSalesDetail.SlipNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNoteNull() {
                this[this.tableSalesDetail.SlipNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNote2Null() {
                return this.IsNull(this.tableSalesDetail.SlipNote2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNote2Null() {
                this[this.tableSalesDetail.SlipNote2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNote3Null() {
                return this.IsNull(this.tableSalesDetail.SlipNote3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNote3Null() {
                this[this.tableSalesDetail.SlipNote3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrontEmployeeNmNull() {
                return this.IsNull(this.tableSalesDetail.FrontEmployeeNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrontEmployeeNmNull() {
                this[this.tableSalesDetail.FrontEmployeeNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesInputNameNull() {
                return this.IsNull(this.tableSalesDetail.SalesInputNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesInputNameNull() {
                this[this.tableSalesDetail.SalesInputNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableSalesDetail.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableSalesDetail.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerSnmNull() {
                return this.IsNull(this.tableSalesDetail.CustomerSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerSnmNull() {
                this[this.tableSalesDetail.CustomerSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCdNull() {
                return this.IsNull(this.tableSalesDetail.SupplierCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCdNull() {
                this[this.tableSalesDetail.SupplierCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSnmNull() {
                return this.IsNull(this.tableSalesDetail.SupplierSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSnmNull() {
                this[this.tableSalesDetail.SupplierSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartySaleSlipNumNull() {
                return this.IsNull(this.tableSalesDetail.PartySaleSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartySaleSlipNumNull() {
                this[this.tableSalesDetail.PartySaleSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarMngCodeNull() {
                return this.IsNull(this.tableSalesDetail.CarMngCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarMngCodeNull() {
                this[this.tableSalesDetail.CarMngCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcceptAnOrderNoNull() {
                return this.IsNull(this.tableSalesDetail.AcceptAnOrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcceptAnOrderNoNull() {
                this[this.tableSalesDetail.AcceptAnOrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipSalesSlipNumNull() {
                return this.IsNull(this.tableSalesDetail.ShipSalesSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipSalesSlipNumNull() {
                this[this.tableSalesDetail.ShipSalesSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrcSalesSlipNumNull() {
                return this.IsNull(this.tableSalesDetail.SrcSalesSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrcSalesSlipNumNull() {
                this[this.tableSalesDetail.SrcSalesSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsKindCodeNull() {
                return this.IsNull(this.tableSalesDetail.GoodsKindCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsKindCodeNull() {
                this[this.tableSalesDetail.GoodsKindCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsKindCodeNameNull() {
                return this.IsNull(this.tableSalesDetail.GoodsKindCodeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsKindCodeNameNull() {
                this[this.tableSalesDetail.GoodsKindCodeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesOrderDivCdNull() {
                return this.IsNull(this.tableSalesDetail.SalesOrderDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesOrderDivCdNull() {
                this[this.tableSalesDetail.SalesOrderDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesOrderDivCdNameNull() {
                return this.IsNull(this.tableSalesDetail.SalesOrderDivCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesOrderDivCdNameNull() {
                this[this.tableSalesDetail.SalesOrderDivCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCdNull() {
                return this.IsNull(this.tableSalesDetail.WarehouseCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCdNull() {
                this[this.tableSalesDetail.WarehouseCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNameNull() {
                return this.IsNull(this.tableSalesDetail.WarehouseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNameNull() {
                this[this.tableSalesDetail.WarehouseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseShelfNoNull() {
                return this.IsNull(this.tableSalesDetail.WarehouseShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseShelfNoNull() {
                this[this.tableSalesDetail.WarehouseShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNoNull() {
                return this.IsNull(this.tableSalesDetail.SupplierSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNoNull() {
                this[this.tableSalesDetail.SupplierSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOESupplierCdNull() {
                return this.IsNull(this.tableSalesDetail.UOESupplierCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOESupplierCdNull() {
                this[this.tableSalesDetail.UOESupplierCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOESupplierSnmNull() {
                return this.IsNull(this.tableSalesDetail.UOESupplierSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOESupplierSnmNull() {
                this[this.tableSalesDetail.UOESupplierSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOERemark1Null() {
                return this.IsNull(this.tableSalesDetail.UOERemark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOERemark1Null() {
                this[this.tableSalesDetail.UOERemark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOERemark2Null() {
                return this.IsNull(this.tableSalesDetail.UOERemark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOERemark2Null() {
                this[this.tableSalesDetail.UOERemark2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGuideNameNull() {
                return this.IsNull(this.tableSalesDetail.GuideNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGuideNameNull() {
                this[this.tableSalesDetail.GuideNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionCdNull() {
                return this.IsNull(this.tableSalesDetail.SectionCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionCdNull() {
                this[this.tableSalesDetail.SectionCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionGuideNameNull() {
                return this.IsNull(this.tableSalesDetail.SectionGuideNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionGuideNameNull() {
                this[this.tableSalesDetail.SectionGuideNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDtlNoteNull() {
                return this.IsNull(this.tableSalesDetail.DtlNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDtlNoteNull() {
                this[this.tableSalesDetail.DtlNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorName1Null() {
                return this.IsNull(this.tableSalesDetail.ColorName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorName1Null() {
                this[this.tableSalesDetail.ColorName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrimNameNull() {
                return this.IsNull(this.tableSalesDetail.TrimNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrimNameNull() {
                this[this.tableSalesDetail.TrimNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStdUnPrcLPriceNull() {
                return this.IsNull(this.tableSalesDetail.StdUnPrcLPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStdUnPrcLPriceNull() {
                this[this.tableSalesDetail.StdUnPrcLPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStdUnPrcSalUnPrcNull() {
                return this.IsNull(this.tableSalesDetail.StdUnPrcSalUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStdUnPrcSalUnPrcNull() {
                this[this.tableSalesDetail.StdUnPrcSalUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStdUnPrcUnCstNull() {
                return this.IsNull(this.tableSalesDetail.StdUnPrcUnCstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStdUnPrcUnCstNull() {
                this[this.tableSalesDetail.StdUnPrcUnCstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMakerCdNull() {
                return this.IsNull(this.tableSalesDetail.GoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMakerCdNull() {
                this[this.tableSalesDetail.GoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerNameNull() {
                return this.IsNull(this.tableSalesDetail.MakerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerNameNull() {
                this[this.tableSalesDetail.MakerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostNull() {
                return this.IsNull(this.tableSalesDetail.CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostNull() {
                this[this.tableSalesDetail.CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustSlipNoNull() {
                return this.IsNull(this.tableSalesDetail.CustSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustSlipNoNull() {
                this[this.tableSalesDetail.CustSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddUpADateNull() {
                return this.IsNull(this.tableSalesDetail.AddUpADateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddUpADateNull() {
                this[this.tableSalesDetail.AddUpADateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccRecDivCdNull() {
                return this.IsNull(this.tableSalesDetail.AccRecDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccRecDivCdNull() {
                this[this.tableSalesDetail.AccRecDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccRecDivCdNameNull() {
                return this.IsNull(this.tableSalesDetail.AccRecDivCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccRecDivCdNameNull() {
                this[this.tableSalesDetail.AccRecDivCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteDivNull() {
                return this.IsNull(this.tableSalesDetail.DebitNoteDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteDivNull() {
                this[this.tableSalesDetail.DebitNoteDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockPartySaleSlipNumNull() {
                return this.IsNull(this.tableSalesDetail.StockPartySaleSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockPartySaleSlipNumNull() {
                this[this.tableSalesDetail.StockPartySaleSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeCodeNull() {
                return this.IsNull(this.tableSalesDetail.AddresseeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeCodeNull() {
                this[this.tableSalesDetail.AddresseeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeNameNull() {
                return this.IsNull(this.tableSalesDetail.AddresseeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeNameNull() {
                this[this.tableSalesDetail.AddresseeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcptAnOdrRemainCntNull() {
                return this.IsNull(this.tableSalesDetail.AcptAnOdrRemainCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcptAnOdrRemainCntNull() {
                this[this.tableSalesDetail.AcptAnOdrRemainCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnterpriseGanreCodeNull() {
                return this.IsNull(this.tableSalesDetail.EnterpriseGanreCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnterpriseGanreCodeNull() {
                this[this.tableSalesDetail.EnterpriseGanreCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputDayNull() {
                return this.IsNull(this.tableSalesDetail.InputDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputDayNull() {
                this[this.tableSalesDetail.InputDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarMngNoNull() {
                return this.IsNull(this.tableSalesDetail.CarMngNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarMngNoNull() {
                this[this.tableSalesDetail.CarMngNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerCodeNull() {
                return this.IsNull(this.tableSalesDetail.MakerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerCodeNull() {
                this[this.tableSalesDetail.MakerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelCodeNull() {
                return this.IsNull(this.tableSalesDetail.ModelCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelCodeNull() {
                this[this.tableSalesDetail.ModelCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelSubCodeNull() {
                return this.IsNull(this.tableSalesDetail.ModelSubCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelSubCodeNull() {
                this[this.tableSalesDetail.ModelSubCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEngineModelNmNull() {
                return this.IsNull(this.tableSalesDetail.EngineModelNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEngineModelNmNull() {
                this[this.tableSalesDetail.EngineModelNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorCodeNull() {
                return this.IsNull(this.tableSalesDetail.ColorCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorCodeNull() {
                this[this.tableSalesDetail.ColorCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrimCodeNull() {
                return this.IsNull(this.tableSalesDetail.TrimCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrimCodeNull() {
                this[this.tableSalesDetail.TrimCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveredGoodsDivNull() {
                return this.IsNull(this.tableSalesDetail.DeliveredGoodsDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveredGoodsDivNull() {
                this[this.tableSalesDetail.DeliveredGoodsDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullModelFixedNoAryNull() {
                return this.IsNull(this.tableSalesDetail.FullModelFixedNoAryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullModelFixedNoAryNull() {
                this[this.tableSalesDetail.FullModelFixedNoAryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryObjAryNull() {
                return this.IsNull(this.tableSalesDetail.CategoryObjAryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryObjAryNull() {
                this[this.tableSalesDetail.CategoryObjAryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelDesignationNoOrgNull() {
                return this.IsNull(this.tableSalesDetail.ModelDesignationNoOrgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelDesignationNoOrgNull() {
                this[this.tableSalesDetail.ModelDesignationNoOrgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNoOrgNull() {
                return this.IsNull(this.tableSalesDetail.CategoryNoOrgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNoOrgNull() {
                this[this.tableSalesDetail.CategoryNoOrgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeName1Null() {
                return this.IsNull(this.tableSalesDetail.AddresseeName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeName1Null() {
                this[this.tableSalesDetail.AddresseeName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeName2Null() {
                return this.IsNull(this.tableSalesDetail.AddresseeName2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeName2Null() {
                this[this.tableSalesDetail.AddresseeName2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesInputCodeNull() {
                return this.IsNull(this.tableSalesDetail.SalesInputCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesInputCodeNull() {
                this[this.tableSalesDetail.SalesInputCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrontEmployeeCdNull() {
                return this.IsNull(this.tableSalesDetail.FrontEmployeeCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrontEmployeeCdNull() {
                this[this.tableSalesDetail.FrontEmployeeCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryDivNameNull() {
                return this.IsNull(this.tableSalesDetail.HistoryDivNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryDivNameNull() {
                this[this.tableSalesDetail.HistoryDivNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMileageNull() {
                return this.IsNull(this.tableSalesDetail.MileageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMileageNull() {
                this[this.tableSalesDetail.MileageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarNoteNull() {
                return this.IsNull(this.tableSalesDetail.CarNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarNoteNull() {
                this[this.tableSalesDetail.CarNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipPrintTimeNull() {
                return this.IsNull(this.tableSalesDetail.SlipPrintTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipPrintTimeNull() {
                this[this.tableSalesDetail.SlipPrintTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfUnitCostNull() {
                return this.IsNull(this.tableSalesDetail.BfUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfUnitCostNull() {
                this[this.tableSalesDetail.BfUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfSalesUnitPriceNull() {
                return this.IsNull(this.tableSalesDetail.BfSalesUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfSalesUnitPriceNull() {
                this[this.tableSalesDetail.BfSalesUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRetuppercntNull() {
                return this.IsNull(this.tableSalesDetail.RetuppercntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRetuppercntNull() {
                this[this.tableSalesDetail.RetuppercntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRetuppercntDivNull() {
                return this.IsNull(this.tableSalesDetail.RetuppercntDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRetuppercntDivNull() {
                this[this.tableSalesDetail.RetuppercntDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelHalfNameNull() {
                return this.IsNull(this.tableSalesDetail.ModelHalfNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelHalfNameNull() {
                this[this.tableSalesDetail.ModelHalfNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreeSrchMdlFxdNoAryNull() {
                return this.IsNull(this.tableSalesDetail.FreeSrchMdlFxdNoAryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreeSrchMdlFxdNoAryNull() {
                this[this.tableSalesDetail.FreeSrchMdlFxdNoAryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfListPriceNull() {
                return this.IsNull(this.tableSalesDetail.BfListPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfListPriceNull() {
                this[this.tableSalesDetail.BfListPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesRateNull() {
                return this.IsNull(this.tableSalesDetail.SalesRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesRateNull() {
                this[this.tableSalesDetail.SalesRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostRateNull() {
                return this.IsNull(this.tableSalesDetail.CostRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostRateNull() {
                this[this.tableSalesDetail.CostRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAutoAnswerDivSCMNull() {
                return this.IsNull(this.tableSalesDetail.AutoAnswerDivSCMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAutoAnswerDivSCMNull() {
                this[this.tableSalesDetail.AutoAnswerDivSCMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInquiryNumberNull() {
                return this.IsNull(this.tableSalesDetail.InquiryNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInquiryNumberNull() {
                this[this.tableSalesDetail.InquiryNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateDateTimeNull() {
                return this.IsNull(this.tableSalesDetail.UpdateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateDateTimeNull() {
                this[this.tableSalesDetail.UpdateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateJPNull() {
                return this.IsNull(this.tableSalesDetail.SalesDateJPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateJPNull() {
                this[this.tableSalesDetail.SalesDateJPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddUpADateJPNull() {
                return this.IsNull(this.tableSalesDetail.AddUpADateJPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddUpADateJPNull() {
                this[this.tableSalesDetail.AddUpADateJPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputDayJPNull() {
                return this.IsNull(this.tableSalesDetail.InputDayJPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputDayJPNull() {
                this[this.tableSalesDetail.InputDayJPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateDateTimeJPNull() {
                return this.IsNull(this.tableSalesDetail.UpdateDateTimeJPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateDateTimeJPNull() {
                this[this.tableSalesDetail.UpdateDateTimeJPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChangeGoodsNoNull() {
                return this.IsNull(this.tableSalesDetail.ChangeGoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChangeGoodsNoNull() {
                this[this.tableSalesDetail.ChangeGoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesRecognitionCntNull() {
                return this.IsNull(this.tableSalesDetail.SalesRecognitionCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesRecognitionCntNull() {
                this[this.tableSalesDetail.SalesRecognitionCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesNotRecognitionCntNull() {
                return this.IsNull(this.tableSalesDetail.SalesNotRecognitionCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesNotRecognitionCntNull() {
                this[this.tableSalesDetail.SalesNotRecognitionCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSecondSalePriceNull() {
                return this.IsNull(this.tableSalesDetail.SecondSalePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSecondSalePriceNull() {
                this[this.tableSalesDetail.SecondSalePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesAreaNameNull() {
                return this.IsNull(this.tableSalesDetail.SalesAreaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesAreaNameNull() {
                this[this.tableSalesDetail.SalesAreaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustAnalysCode1Null() {
                return this.IsNull(this.tableSalesDetail.CustAnalysCode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustAnalysCode1Null() {
                this[this.tableSalesDetail.CustAnalysCode1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustAnalysCode2Null() {
                return this.IsNull(this.tableSalesDetail.CustAnalysCode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustAnalysCode2Null() {
                this[this.tableSalesDetail.CustAnalysCode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustAnalysCode3Null() {
                return this.IsNull(this.tableSalesDetail.CustAnalysCode3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustAnalysCode3Null() {
                this[this.tableSalesDetail.CustAnalysCode3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustAnalysCode4Null() {
                return this.IsNull(this.tableSalesDetail.CustAnalysCode4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustAnalysCode4Null() {
                this[this.tableSalesDetail.CustAnalysCode4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustAnalysCode5Null() {
                return this.IsNull(this.tableSalesDetail.CustAnalysCode5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustAnalysCode5Null() {
                this[this.tableSalesDetail.CustAnalysCode5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustAnalysCode6Null() {
                return this.IsNull(this.tableSalesDetail.CustAnalysCode6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustAnalysCode6Null() {
                this[this.tableSalesDetail.CustAnalysCode6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsTaxRateNull() {
                return this.IsNull(this.tableSalesDetail.ConsTaxRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsTaxRateNull() {
                this[this.tableSalesDetail.ConsTaxRateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesListRow : global::System.Data.DataRow {
            
            private SalesListDataTable tableSalesList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesList = ((SalesListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Selection {
                get {
                    try {
                        return ((bool)(this[this.tableSalesList.SelectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'Selection\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SelectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableSalesList.RowNoColumn]));
                }
                set {
                    this[this.tableSalesList.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DataDiv {
                get {
                    try {
                        return ((int)(this[this.tableSalesList.DataDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'DataDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.DataDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SalesDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesList.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SalesSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AcptAnOdrStatus {
                get {
                    try {
                        return ((int)(this[this.tableSalesList.AcptAnOdrStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'AcptAnOdrStatus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.AcptAnOdrStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesSlipCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesList.SalesSlipCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesSlipCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesSlipCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipCdName {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SalesSlipCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesSlipCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesSlipCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesEmployeeNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SalesEmployeeNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesEmployeeNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesEmployeeNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesTotalTaxExc {
                get {
                    try {
                        return ((long)(this[this.tableSalesList.SalesTotalTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesTotalTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesTotalTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ConsumeTax {
                get {
                    try {
                        return ((long)(this[this.tableSalesList.ConsumeTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'ConsumeTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.ConsumeTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long GrossProfit {
                get {
                    try {
                        return ((long)(this[this.tableSalesList.GrossProfitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'GrossProfit\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.GrossProfitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CategoryNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.CategoryNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CategoryNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CategoryNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelFullName {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.ModelFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'ModelFullName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.ModelFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstEntryDate {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.FirstEntryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'FirstEntryDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.FirstEntryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FrameNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.FrameNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'FrameNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.FrameNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullModel {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.FullModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'FullModel\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.FullModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SlipNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SlipNote\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SlipNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SlipNote2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SlipNote2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SlipNote2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote3 {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SlipNote3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SlipNote3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SlipNote3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FrontEmployeeNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.FrontEmployeeNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'FrontEmployeeNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.FrontEmployeeNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesInputName {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SalesInputNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesInputName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesInputNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesList.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerSnm {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.CustomerSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CustomerSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CustomerSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartySaleSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.PartySaleSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'PartySaleSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.PartySaleSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarMngCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.CarMngCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CarMngCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CarMngCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcceptAnOrderNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.AcceptAnOrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'AcceptAnOrderNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.AcceptAnOrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipmSalesSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.ShipmSalesSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'ShipmSalesSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.ShipmSalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UoeRemark1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.UoeRemark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'UoeRemark1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.UoeRemark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UoeRemark2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.UoeRemark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'UoeRemark2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.UoeRemark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SectionCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SectionCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SectionCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionGuideNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SectionGuideNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SectionGuideNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SectionGuideNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ColorName1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.ColorName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'ColorName1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.ColorName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TrimName {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.TrimNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'TrimName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.TrimNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableSalesList.CustSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CustSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CustSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AddUpADate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesList.AddUpADateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'AddUpADate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.AddUpADateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AccRecDivCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesList.AccRecDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'AccRecDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.AccRecDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccRecDivCdName {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.AccRecDivCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'AccRecDivCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.AccRecDivCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebitNoteDiv {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.DebitNoteDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'DebitNoteDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.DebitNoteDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AddresseeCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesList.AddresseeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'AddresseeCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.AddresseeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseeName {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.AddresseeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'AddresseeName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.AddresseeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnterpriseGanreCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.EnterpriseGanreCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'EnterpriseGanreCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.EnterpriseGanreCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InputDay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesList.InputDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'InputDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.InputDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryDivName {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.HistoryDivNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'HistoryDivName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.HistoryDivNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipPrintTime {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SlipPrintTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SlipPrintTime\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SlipPrintTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelHalfName {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.ModelHalfNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'ModelHalfName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.ModelHalfNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdateDateTime {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.UpdateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'UpdateDateTime\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.UpdateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesDateJP {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SalesDateJPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesDateJP\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesDateJPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddUpADateJP {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.AddUpADateJPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'AddUpADateJP\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.AddUpADateJPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InputDayJP {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.InputDayJPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'InputDayJP\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.InputDayJPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdateDateTimeJP {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.UpdateDateTimeJPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'UpdateDateTimeJP\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.UpdateDateTimeJPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MakerCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesList.MakerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'MakerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.MakerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesAreaName {
                get {
                    try {
                        return ((string)(this[this.tableSalesList.SalesAreaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'SalesAreaName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.SalesAreaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustAnalysCode1 {
                get {
                    try {
                        return ((int)(this[this.tableSalesList.CustAnalysCode1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CustAnalysCode1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CustAnalysCode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustAnalysCode2 {
                get {
                    try {
                        return ((int)(this[this.tableSalesList.CustAnalysCode2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CustAnalysCode2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CustAnalysCode2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustAnalysCode3 {
                get {
                    try {
                        return ((int)(this[this.tableSalesList.CustAnalysCode3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CustAnalysCode3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CustAnalysCode3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustAnalysCode4 {
                get {
                    try {
                        return ((int)(this[this.tableSalesList.CustAnalysCode4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CustAnalysCode4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CustAnalysCode4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustAnalysCode5 {
                get {
                    try {
                        return ((int)(this[this.tableSalesList.CustAnalysCode5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CustAnalysCode5\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CustAnalysCode5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustAnalysCode6 {
                get {
                    try {
                        return ((int)(this[this.tableSalesList.CustAnalysCode6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'CustAnalysCode6\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.CustAnalysCode6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ConsTaxRate {
                get {
                    try {
                        return ((double)(this[this.tableSalesList.ConsTaxRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesList\' にある列 \'ConsTaxRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesList.ConsTaxRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectionNull() {
                return this.IsNull(this.tableSalesList.SelectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectionNull() {
                this[this.tableSalesList.SelectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataDivNull() {
                return this.IsNull(this.tableSalesList.DataDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataDivNull() {
                this[this.tableSalesList.DataDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tableSalesList.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tableSalesList.SalesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipNumNull() {
                return this.IsNull(this.tableSalesList.SalesSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipNumNull() {
                this[this.tableSalesList.SalesSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcptAnOdrStatusNull() {
                return this.IsNull(this.tableSalesList.AcptAnOdrStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcptAnOdrStatusNull() {
                this[this.tableSalesList.AcptAnOdrStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipCdNull() {
                return this.IsNull(this.tableSalesList.SalesSlipCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipCdNull() {
                this[this.tableSalesList.SalesSlipCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipCdNameNull() {
                return this.IsNull(this.tableSalesList.SalesSlipCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipCdNameNull() {
                this[this.tableSalesList.SalesSlipCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesEmployeeNmNull() {
                return this.IsNull(this.tableSalesList.SalesEmployeeNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesEmployeeNmNull() {
                this[this.tableSalesList.SalesEmployeeNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesTotalTaxExcNull() {
                return this.IsNull(this.tableSalesList.SalesTotalTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesTotalTaxExcNull() {
                this[this.tableSalesList.SalesTotalTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsumeTaxNull() {
                return this.IsNull(this.tableSalesList.ConsumeTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsumeTaxNull() {
                this[this.tableSalesList.ConsumeTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfitNull() {
                return this.IsNull(this.tableSalesList.GrossProfitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfitNull() {
                this[this.tableSalesList.GrossProfitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNoNull() {
                return this.IsNull(this.tableSalesList.CategoryNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNoNull() {
                this[this.tableSalesList.CategoryNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelFullNameNull() {
                return this.IsNull(this.tableSalesList.ModelFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelFullNameNull() {
                this[this.tableSalesList.ModelFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstEntryDateNull() {
                return this.IsNull(this.tableSalesList.FirstEntryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstEntryDateNull() {
                this[this.tableSalesList.FirstEntryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrameNoNull() {
                return this.IsNull(this.tableSalesList.FrameNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrameNoNull() {
                this[this.tableSalesList.FrameNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullModelNull() {
                return this.IsNull(this.tableSalesList.FullModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullModelNull() {
                this[this.tableSalesList.FullModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNoteNull() {
                return this.IsNull(this.tableSalesList.SlipNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNoteNull() {
                this[this.tableSalesList.SlipNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNote2Null() {
                return this.IsNull(this.tableSalesList.SlipNote2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNote2Null() {
                this[this.tableSalesList.SlipNote2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNote3Null() {
                return this.IsNull(this.tableSalesList.SlipNote3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNote3Null() {
                this[this.tableSalesList.SlipNote3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrontEmployeeNmNull() {
                return this.IsNull(this.tableSalesList.FrontEmployeeNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrontEmployeeNmNull() {
                this[this.tableSalesList.FrontEmployeeNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesInputNameNull() {
                return this.IsNull(this.tableSalesList.SalesInputNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesInputNameNull() {
                this[this.tableSalesList.SalesInputNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableSalesList.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableSalesList.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerSnmNull() {
                return this.IsNull(this.tableSalesList.CustomerSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerSnmNull() {
                this[this.tableSalesList.CustomerSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartySaleSlipNumNull() {
                return this.IsNull(this.tableSalesList.PartySaleSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartySaleSlipNumNull() {
                this[this.tableSalesList.PartySaleSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarMngCodeNull() {
                return this.IsNull(this.tableSalesList.CarMngCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarMngCodeNull() {
                this[this.tableSalesList.CarMngCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcceptAnOrderNoNull() {
                return this.IsNull(this.tableSalesList.AcceptAnOrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcceptAnOrderNoNull() {
                this[this.tableSalesList.AcceptAnOrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmSalesSlipNumNull() {
                return this.IsNull(this.tableSalesList.ShipmSalesSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmSalesSlipNumNull() {
                this[this.tableSalesList.ShipmSalesSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUoeRemark1Null() {
                return this.IsNull(this.tableSalesList.UoeRemark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUoeRemark1Null() {
                this[this.tableSalesList.UoeRemark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUoeRemark2Null() {
                return this.IsNull(this.tableSalesList.UoeRemark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUoeRemark2Null() {
                this[this.tableSalesList.UoeRemark2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionCdNull() {
                return this.IsNull(this.tableSalesList.SectionCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionCdNull() {
                this[this.tableSalesList.SectionCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionGuideNmNull() {
                return this.IsNull(this.tableSalesList.SectionGuideNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionGuideNmNull() {
                this[this.tableSalesList.SectionGuideNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColorName1Null() {
                return this.IsNull(this.tableSalesList.ColorName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColorName1Null() {
                this[this.tableSalesList.ColorName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrimNameNull() {
                return this.IsNull(this.tableSalesList.TrimNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrimNameNull() {
                this[this.tableSalesList.TrimNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustSlipNoNull() {
                return this.IsNull(this.tableSalesList.CustSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustSlipNoNull() {
                this[this.tableSalesList.CustSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddUpADateNull() {
                return this.IsNull(this.tableSalesList.AddUpADateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddUpADateNull() {
                this[this.tableSalesList.AddUpADateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccRecDivCdNull() {
                return this.IsNull(this.tableSalesList.AccRecDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccRecDivCdNull() {
                this[this.tableSalesList.AccRecDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccRecDivCdNameNull() {
                return this.IsNull(this.tableSalesList.AccRecDivCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccRecDivCdNameNull() {
                this[this.tableSalesList.AccRecDivCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteDivNull() {
                return this.IsNull(this.tableSalesList.DebitNoteDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteDivNull() {
                this[this.tableSalesList.DebitNoteDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeCodeNull() {
                return this.IsNull(this.tableSalesList.AddresseeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeCodeNull() {
                this[this.tableSalesList.AddresseeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeNameNull() {
                return this.IsNull(this.tableSalesList.AddresseeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeNameNull() {
                this[this.tableSalesList.AddresseeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnterpriseGanreCodeNull() {
                return this.IsNull(this.tableSalesList.EnterpriseGanreCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnterpriseGanreCodeNull() {
                this[this.tableSalesList.EnterpriseGanreCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputDayNull() {
                return this.IsNull(this.tableSalesList.InputDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputDayNull() {
                this[this.tableSalesList.InputDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryDivNameNull() {
                return this.IsNull(this.tableSalesList.HistoryDivNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryDivNameNull() {
                this[this.tableSalesList.HistoryDivNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipPrintTimeNull() {
                return this.IsNull(this.tableSalesList.SlipPrintTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipPrintTimeNull() {
                this[this.tableSalesList.SlipPrintTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelHalfNameNull() {
                return this.IsNull(this.tableSalesList.ModelHalfNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelHalfNameNull() {
                this[this.tableSalesList.ModelHalfNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateDateTimeNull() {
                return this.IsNull(this.tableSalesList.UpdateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateDateTimeNull() {
                this[this.tableSalesList.UpdateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateJPNull() {
                return this.IsNull(this.tableSalesList.SalesDateJPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateJPNull() {
                this[this.tableSalesList.SalesDateJPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddUpADateJPNull() {
                return this.IsNull(this.tableSalesList.AddUpADateJPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddUpADateJPNull() {
                this[this.tableSalesList.AddUpADateJPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputDayJPNull() {
                return this.IsNull(this.tableSalesList.InputDayJPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputDayJPNull() {
                this[this.tableSalesList.InputDayJPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateDateTimeJPNull() {
                return this.IsNull(this.tableSalesList.UpdateDateTimeJPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateDateTimeJPNull() {
                this[this.tableSalesList.UpdateDateTimeJPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerCodeNull() {
                return this.IsNull(this.tableSalesList.MakerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerCodeNull() {
                this[this.tableSalesList.MakerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesAreaNameNull() {
                return this.IsNull(this.tableSalesList.SalesAreaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesAreaNameNull() {
                this[this.tableSalesList.SalesAreaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustAnalysCode1Null() {
                return this.IsNull(this.tableSalesList.CustAnalysCode1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustAnalysCode1Null() {
                this[this.tableSalesList.CustAnalysCode1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustAnalysCode2Null() {
                return this.IsNull(this.tableSalesList.CustAnalysCode2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustAnalysCode2Null() {
                this[this.tableSalesList.CustAnalysCode2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustAnalysCode3Null() {
                return this.IsNull(this.tableSalesList.CustAnalysCode3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustAnalysCode3Null() {
                this[this.tableSalesList.CustAnalysCode3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustAnalysCode4Null() {
                return this.IsNull(this.tableSalesList.CustAnalysCode4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustAnalysCode4Null() {
                this[this.tableSalesList.CustAnalysCode4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustAnalysCode5Null() {
                return this.IsNull(this.tableSalesList.CustAnalysCode5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustAnalysCode5Null() {
                this[this.tableSalesList.CustAnalysCode5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustAnalysCode6Null() {
                return this.IsNull(this.tableSalesList.CustAnalysCode6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustAnalysCode6Null() {
                this[this.tableSalesList.CustAnalysCode6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsTaxRateNull() {
                return this.IsNull(this.tableSalesList.ConsTaxRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsTaxRateNull() {
                this[this.tableSalesList.ConsTaxRateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BalanceTotalRow : global::System.Data.DataRow {
            
            private BalanceTotalDataTable tableBalanceTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BalanceTotalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBalanceTotal = ((BalanceTotalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long AcpOdrTtl2TmBfBlDmd {
                get {
                    try {
                        return ((long)(this[this.tableBalanceTotal.AcpOdrTtl2TmBfBlDmdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'AcpOdrTtl2TmBfBlDmd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.AcpOdrTtl2TmBfBlDmdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LastTimeDemand {
                get {
                    try {
                        return ((long)(this[this.tableBalanceTotal.LastTimeDemandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'LastTimeDemand\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.LastTimeDemandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long AfCalDemandPrice {
                get {
                    try {
                        return ((long)(this[this.tableBalanceTotal.AfCalDemandPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'AfCalDemandPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.AfCalDemandPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AddUpYearMonth {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBalanceTotal.AddUpYearMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'AddUpYearMonth\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.AddUpYearMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConsTaxLayMethod {
                get {
                    try {
                        return ((int)(this[this.tableBalanceTotal.ConsTaxLayMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'ConsTaxLayMethod\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.ConsTaxLayMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ThisSalesPriceTotal {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.ThisSalesPriceTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'ThisSalesPriceTotal\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.ThisSalesPriceTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OfsThisSalesTax {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.OfsThisSalesTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'OfsThisSalesTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.OfsThisSalesTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ThisTimeDmdNrml {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.ThisTimeDmdNrmlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'ThisTimeDmdNrml\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.ThisTimeDmdNrmlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AfCalBlc {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.AfCalBlcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'AfCalBlc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.AfCalBlcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StandardPrice_Total {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.StandardPrice_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'StandardPrice_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.StandardPrice_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StandardPrice_Avg {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.StandardPrice_AvgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'StandardPrice_Avg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.StandardPrice_AvgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SoldAmount_Total {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.SoldAmount_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'SoldAmount_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.SoldAmount_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SoldAmount_Avg {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.SoldAmount_AvgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'SoldAmount_Avg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.SoldAmount_AvgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cost_Total {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.Cost_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'Cost_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.Cost_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cost_Avg {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.Cost_AvgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'Cost_Avg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.Cost_AvgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GrossProfitAmount_Total {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.GrossProfitAmount_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'GrossProfitAmount_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.GrossProfitAmount_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GrossProfitAmount_Avg {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.GrossProfitAmount_AvgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'GrossProfitAmount_Avg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.GrossProfitAmount_AvgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GrossProfitPercentage {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.GrossProfitPercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'GrossProfitPercentage\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.GrossProfitPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SlipCount {
                get {
                    try {
                        return ((int)(this[this.tableBalanceTotal.SlipCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'SlipCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.SlipCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DetailCount {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.DetailCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'DetailCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.DetailCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Amount {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'Amount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ConsumeTaxAmount {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.ConsumeTaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'ConsumeTaxAmount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.ConsumeTaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DmdStDay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBalanceTotal.DmdStDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'DmdStDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.DmdStDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TotalDay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBalanceTotal.TotalDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'TotalDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.TotalDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParent {
                get {
                    try {
                        return ((bool)(this[this.tableBalanceTotal.IsParentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'IsParent\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.IsParentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ExistsTotal {
                get {
                    try {
                        return ((bool)(this[this.tableBalanceTotal.ExistsTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'ExistsTotal\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.ExistsTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcpOdrTtl2TmBfBlDmdNull() {
                return this.IsNull(this.tableBalanceTotal.AcpOdrTtl2TmBfBlDmdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcpOdrTtl2TmBfBlDmdNull() {
                this[this.tableBalanceTotal.AcpOdrTtl2TmBfBlDmdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastTimeDemandNull() {
                return this.IsNull(this.tableBalanceTotal.LastTimeDemandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastTimeDemandNull() {
                this[this.tableBalanceTotal.LastTimeDemandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfCalDemandPriceNull() {
                return this.IsNull(this.tableBalanceTotal.AfCalDemandPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfCalDemandPriceNull() {
                this[this.tableBalanceTotal.AfCalDemandPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddUpYearMonthNull() {
                return this.IsNull(this.tableBalanceTotal.AddUpYearMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddUpYearMonthNull() {
                this[this.tableBalanceTotal.AddUpYearMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsTaxLayMethodNull() {
                return this.IsNull(this.tableBalanceTotal.ConsTaxLayMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsTaxLayMethodNull() {
                this[this.tableBalanceTotal.ConsTaxLayMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisSalesPriceTotalNull() {
                return this.IsNull(this.tableBalanceTotal.ThisSalesPriceTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisSalesPriceTotalNull() {
                this[this.tableBalanceTotal.ThisSalesPriceTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfsThisSalesTaxNull() {
                return this.IsNull(this.tableBalanceTotal.OfsThisSalesTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfsThisSalesTaxNull() {
                this[this.tableBalanceTotal.OfsThisSalesTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisTimeDmdNrmlNull() {
                return this.IsNull(this.tableBalanceTotal.ThisTimeDmdNrmlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisTimeDmdNrmlNull() {
                this[this.tableBalanceTotal.ThisTimeDmdNrmlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfCalBlcNull() {
                return this.IsNull(this.tableBalanceTotal.AfCalBlcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfCalBlcNull() {
                this[this.tableBalanceTotal.AfCalBlcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardPrice_TotalNull() {
                return this.IsNull(this.tableBalanceTotal.StandardPrice_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardPrice_TotalNull() {
                this[this.tableBalanceTotal.StandardPrice_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardPrice_AvgNull() {
                return this.IsNull(this.tableBalanceTotal.StandardPrice_AvgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardPrice_AvgNull() {
                this[this.tableBalanceTotal.StandardPrice_AvgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoldAmount_TotalNull() {
                return this.IsNull(this.tableBalanceTotal.SoldAmount_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoldAmount_TotalNull() {
                this[this.tableBalanceTotal.SoldAmount_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSoldAmount_AvgNull() {
                return this.IsNull(this.tableBalanceTotal.SoldAmount_AvgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSoldAmount_AvgNull() {
                this[this.tableBalanceTotal.SoldAmount_AvgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCost_TotalNull() {
                return this.IsNull(this.tableBalanceTotal.Cost_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCost_TotalNull() {
                this[this.tableBalanceTotal.Cost_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCost_AvgNull() {
                return this.IsNull(this.tableBalanceTotal.Cost_AvgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCost_AvgNull() {
                this[this.tableBalanceTotal.Cost_AvgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfitAmount_TotalNull() {
                return this.IsNull(this.tableBalanceTotal.GrossProfitAmount_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfitAmount_TotalNull() {
                this[this.tableBalanceTotal.GrossProfitAmount_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfitAmount_AvgNull() {
                return this.IsNull(this.tableBalanceTotal.GrossProfitAmount_AvgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfitAmount_AvgNull() {
                this[this.tableBalanceTotal.GrossProfitAmount_AvgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfitPercentageNull() {
                return this.IsNull(this.tableBalanceTotal.GrossProfitPercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfitPercentageNull() {
                this[this.tableBalanceTotal.GrossProfitPercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipCountNull() {
                return this.IsNull(this.tableBalanceTotal.SlipCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipCountNull() {
                this[this.tableBalanceTotal.SlipCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailCountNull() {
                return this.IsNull(this.tableBalanceTotal.DetailCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailCountNull() {
                this[this.tableBalanceTotal.DetailCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableBalanceTotal.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableBalanceTotal.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsumeTaxAmountNull() {
                return this.IsNull(this.tableBalanceTotal.ConsumeTaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsumeTaxAmountNull() {
                this[this.tableBalanceTotal.ConsumeTaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDmdStDayNull() {
                return this.IsNull(this.tableBalanceTotal.DmdStDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDmdStDayNull() {
                this[this.tableBalanceTotal.DmdStDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalDayNull() {
                return this.IsNull(this.tableBalanceTotal.TotalDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalDayNull() {
                this[this.tableBalanceTotal.TotalDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsParentNull() {
                return this.IsNull(this.tableBalanceTotal.IsParentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsParentNull() {
                this[this.tableBalanceTotal.IsParentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExistsTotalNull() {
                return this.IsNull(this.tableBalanceTotal.ExistsTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExistsTotalNull() {
                this[this.tableBalanceTotal.ExistsTotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesDetailDspRow : global::System.Data.DataRow {
            
            private SalesDetailDspDataTable tableSalesDetailDsp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesDetailDspRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesDetailDsp = ((SalesDetailDspDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SelectionCheck {
                get {
                    try {
                        return ((bool)(this[this.tableSalesDetailDsp.SelectionCheckColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetailDsp\' にある列 \'SelectionCheck\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetailDsp.SelectionCheckColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetailDsp.RowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetailDsp\' にある列 \'RowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetailDsp.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DataDiv {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetailDsp.DataDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetailDsp\' にある列 \'DataDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetailDsp.DataDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectionCheckNull() {
                return this.IsNull(this.tableSalesDetailDsp.SelectionCheckColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectionCheckNull() {
                this[this.tableSalesDetailDsp.SelectionCheckColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowNoNull() {
                return this.IsNull(this.tableSalesDetailDsp.RowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowNoNull() {
                this[this.tableSalesDetailDsp.RowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataDivNull() {
                return this.IsNull(this.tableSalesDetailDsp.DataDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataDivNull() {
                this[this.tableSalesDetailDsp.DataDivColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RedSlipDetailRow : global::System.Data.DataRow {
            
            private RedSlipDetailDataTable tableRedSlipDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RedSlipDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRedSlipDetail = ((RedSlipDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableRedSlipDetail.RowNoColumn]));
                }
                set {
                    this[this.tableRedSlipDetail.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.SalesSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SalesSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AcptAnOdrStatus {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.AcptAnOdrStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'AcptAnOdrStatus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.AcptAnOdrStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.GoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'GoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ShipmentCnt {
                get {
                    try {
                        return ((double)(this[this.tableRedSlipDetail.ShipmentCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'ShipmentCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.ShipmentCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplyDivName {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.SupplyDivNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SupplyDivName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SupplyDivNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.SupplierSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SupplierSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SupplierSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ReturnCnt {
                get {
                    try {
                        return ((double)(this[this.tableRedSlipDetail.ReturnCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'ReturnCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.ReturnCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesUnPrcTaxExcFl {
                get {
                    try {
                        return ((double)(this[this.tableRedSlipDetail.SalesUnPrcTaxExcFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SalesUnPrcTaxExcFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SalesUnPrcTaxExcFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesMoneyTaxExc {
                get {
                    try {
                        return ((long)(this[this.tableRedSlipDetail.SalesMoneyTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SalesMoneyTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SalesMoneyTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableRedSlipDetail.SalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesOrderDivCd {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.SalesOrderDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SalesOrderDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SalesOrderDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesOrderDivCdName {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.SalesOrderDivCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SalesOrderDivCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SalesOrderDivCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.WarehouseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'WarehouseCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseName {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.WarehouseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'WarehouseName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.WarehouseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.ShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'ShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.ShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ReturnedAfterCnt {
                get {
                    try {
                        return ((double)(this[this.tableRedSlipDetail.ReturnedAfterCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'ReturnedAfterCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.ReturnedAfterCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesRowNo {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.SalesRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SalesRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SalesRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierCd {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.SupplierCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SupplierCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockPartySaleSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.StockPartySaleSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'StockPartySaleSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.StockPartySaleSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StockDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRedSlipDetail.StockDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'StockDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.StockDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCd {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.GoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'GoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RedSlipInputRowNo {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.RedSlipInputRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'RedSlipInputRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.RedSlipInputRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RedSlipWorkSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.RedSlipWorkSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'RedSlipWorkSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.RedSlipWorkSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HistoryDivName {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.HistoryDivNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'HistoryDivName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.HistoryDivNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'CustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesSlipCdDtl {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.SalesSlipCdDtlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SalesSlipCdDtl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SalesSlipCdDtlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesSlipCd {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.SalesSlipCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SalesSlipCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SalesSlipCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartySaleSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.PartySaleSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'PartySaleSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.PartySaleSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.SlipNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SlipNote\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SlipNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote2 {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.SlipNote2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SlipNote2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SlipNote2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote3 {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.SlipNote3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SlipNote3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SlipNote3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateAndSlipNo {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.DateAndSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'DateAndSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.DateAndSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipNumNull() {
                return this.IsNull(this.tableRedSlipDetail.SalesSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipNumNull() {
                this[this.tableRedSlipDetail.SalesSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcptAnOdrStatusNull() {
                return this.IsNull(this.tableRedSlipDetail.AcptAnOdrStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcptAnOdrStatusNull() {
                this[this.tableRedSlipDetail.AcptAnOdrStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableRedSlipDetail.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableRedSlipDetail.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNull() {
                return this.IsNull(this.tableRedSlipDetail.GoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNull() {
                this[this.tableRedSlipDetail.GoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentCntNull() {
                return this.IsNull(this.tableRedSlipDetail.ShipmentCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentCntNull() {
                this[this.tableRedSlipDetail.ShipmentCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplyDivNameNull() {
                return this.IsNull(this.tableRedSlipDetail.SupplyDivNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplyDivNameNull() {
                this[this.tableRedSlipDetail.SupplyDivNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNoNull() {
                return this.IsNull(this.tableRedSlipDetail.SupplierSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNoNull() {
                this[this.tableRedSlipDetail.SupplierSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnCntNull() {
                return this.IsNull(this.tableRedSlipDetail.ReturnCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnCntNull() {
                this[this.tableRedSlipDetail.ReturnCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnPrcTaxExcFlNull() {
                return this.IsNull(this.tableRedSlipDetail.SalesUnPrcTaxExcFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnPrcTaxExcFlNull() {
                this[this.tableRedSlipDetail.SalesUnPrcTaxExcFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesMoneyTaxExcNull() {
                return this.IsNull(this.tableRedSlipDetail.SalesMoneyTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesMoneyTaxExcNull() {
                this[this.tableRedSlipDetail.SalesMoneyTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnitCostNull() {
                return this.IsNull(this.tableRedSlipDetail.SalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnitCostNull() {
                this[this.tableRedSlipDetail.SalesUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesOrderDivCdNull() {
                return this.IsNull(this.tableRedSlipDetail.SalesOrderDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesOrderDivCdNull() {
                this[this.tableRedSlipDetail.SalesOrderDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesOrderDivCdNameNull() {
                return this.IsNull(this.tableRedSlipDetail.SalesOrderDivCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesOrderDivCdNameNull() {
                this[this.tableRedSlipDetail.SalesOrderDivCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCodeNull() {
                return this.IsNull(this.tableRedSlipDetail.WarehouseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCodeNull() {
                this[this.tableRedSlipDetail.WarehouseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNameNull() {
                return this.IsNull(this.tableRedSlipDetail.WarehouseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNameNull() {
                this[this.tableRedSlipDetail.WarehouseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShelfNoNull() {
                return this.IsNull(this.tableRedSlipDetail.ShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShelfNoNull() {
                this[this.tableRedSlipDetail.ShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnedAfterCntNull() {
                return this.IsNull(this.tableRedSlipDetail.ReturnedAfterCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnedAfterCntNull() {
                this[this.tableRedSlipDetail.ReturnedAfterCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesRowNoNull() {
                return this.IsNull(this.tableRedSlipDetail.SalesRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesRowNoNull() {
                this[this.tableRedSlipDetail.SalesRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCdNull() {
                return this.IsNull(this.tableRedSlipDetail.SupplierCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCdNull() {
                this[this.tableRedSlipDetail.SupplierCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockPartySaleSlipNumNull() {
                return this.IsNull(this.tableRedSlipDetail.StockPartySaleSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockPartySaleSlipNumNull() {
                this[this.tableRedSlipDetail.StockPartySaleSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockDateNull() {
                return this.IsNull(this.tableRedSlipDetail.StockDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockDateNull() {
                this[this.tableRedSlipDetail.StockDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMakerCdNull() {
                return this.IsNull(this.tableRedSlipDetail.GoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMakerCdNull() {
                this[this.tableRedSlipDetail.GoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRedSlipInputRowNoNull() {
                return this.IsNull(this.tableRedSlipDetail.RedSlipInputRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRedSlipInputRowNoNull() {
                this[this.tableRedSlipDetail.RedSlipInputRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRedSlipWorkSlipNoNull() {
                return this.IsNull(this.tableRedSlipDetail.RedSlipWorkSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRedSlipWorkSlipNoNull() {
                this[this.tableRedSlipDetail.RedSlipWorkSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryDivNameNull() {
                return this.IsNull(this.tableRedSlipDetail.HistoryDivNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryDivNameNull() {
                this[this.tableRedSlipDetail.HistoryDivNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableRedSlipDetail.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableRedSlipDetail.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipCdDtlNull() {
                return this.IsNull(this.tableRedSlipDetail.SalesSlipCdDtlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipCdDtlNull() {
                this[this.tableRedSlipDetail.SalesSlipCdDtlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipCdNull() {
                return this.IsNull(this.tableRedSlipDetail.SalesSlipCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipCdNull() {
                this[this.tableRedSlipDetail.SalesSlipCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartySaleSlipNumNull() {
                return this.IsNull(this.tableRedSlipDetail.PartySaleSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartySaleSlipNumNull() {
                this[this.tableRedSlipDetail.PartySaleSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNoteNull() {
                return this.IsNull(this.tableRedSlipDetail.SlipNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNoteNull() {
                this[this.tableRedSlipDetail.SlipNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNote2Null() {
                return this.IsNull(this.tableRedSlipDetail.SlipNote2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNote2Null() {
                this[this.tableRedSlipDetail.SlipNote2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNote3Null() {
                return this.IsNull(this.tableRedSlipDetail.SlipNote3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNote3Null() {
                this[this.tableRedSlipDetail.SlipNote3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateAndSlipNoNull() {
                return this.IsNull(this.tableRedSlipDetail.DateAndSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateAndSlipNoNull() {
                this[this.tableRedSlipDetail.DateAndSlipNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BalanceListRow : global::System.Data.DataRow {
            
            private BalanceListDataTable tableBalanceList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BalanceListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBalanceList = ((BalanceListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableBalanceList.RowNoColumn]));
                }
                set {
                    this[this.tableBalanceList.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AddUpDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBalanceList.AddUpDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'AddUpDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.AddUpDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LastTimeBlc {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.LastTimeBlcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'LastTimeBlc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.LastTimeBlcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ThisTimeDmdNrml {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.ThisTimeDmdNrmlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'ThisTimeDmdNrml\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.ThisTimeDmdNrmlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ThisTimeTtlBlc {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.ThisTimeTtlBlcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'ThisTimeTtlBlc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.ThisTimeTtlBlcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ThisTimeSales {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.ThisTimeSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'ThisTimeSales\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.ThisTimeSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesPriceRgdsDis {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.SalesPriceRgdsDisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'SalesPriceRgdsDis\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.SalesPriceRgdsDisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long OfsThisTimeSales {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.OfsThisTimeSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'OfsThisTimeSales\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.OfsThisTimeSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long OfsThisSalesTax {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.OfsThisSalesTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'OfsThisSalesTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.OfsThisSalesTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ThisSalesPricTotal {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.ThisSalesPricTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'ThisSalesPricTotal\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.ThisSalesPricTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long AfCalBlc {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.AfCalBlcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'AfCalBlc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.AfCalBlcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesSlipCount {
                get {
                    try {
                        return ((int)(this[this.tableBalanceList.SalesSlipCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'SalesSlipCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.SalesSlipCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableBalanceList.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'CustomerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerCode {
                get {
                    try {
                        return ((int)(this[this.tableBalanceList.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'CustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionCode {
                get {
                    try {
                        return ((string)(this[this.tableBalanceList.SectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'SectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.SectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClaimSectionCode {
                get {
                    try {
                        return ((string)(this[this.tableBalanceList.ClaimSectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'ClaimSectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.ClaimSectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreditMngCode {
                get {
                    try {
                        return ((string)(this[this.tableBalanceList.CreditMngCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'CreditMngCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.CreditMngCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreditMoney {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.CreditMoneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'CreditMoney\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.CreditMoneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long WarningCreditMoney {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.WarningCreditMoneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'WarningCreditMoney\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.WarningCreditMoneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PrsntAccRecBalance {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.PrsntAccRecBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'PrsntAccRecBalance\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.PrsntAccRecBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TotalDay {
                get {
                    try {
                        return ((int)(this[this.tableBalanceList.TotalDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'TotalDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.TotalDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompanyTotalDay {
                get {
                    try {
                        return ((int)(this[this.tableBalanceList.CompanyTotalDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'CompanyTotalDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.CompanyTotalDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Difference {
                get {
                    try {
                        return ((string)(this[this.tableBalanceList.DifferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'Difference\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.DifferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreditDifference {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.CreditDifferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'CreditDifference\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.CreditDifferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccRecDivCd {
                get {
                    try {
                        return ((string)(this[this.tableBalanceList.AccRecDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'AccRecDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.AccRecDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddUpDateNull() {
                return this.IsNull(this.tableBalanceList.AddUpDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddUpDateNull() {
                this[this.tableBalanceList.AddUpDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastTimeBlcNull() {
                return this.IsNull(this.tableBalanceList.LastTimeBlcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastTimeBlcNull() {
                this[this.tableBalanceList.LastTimeBlcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisTimeDmdNrmlNull() {
                return this.IsNull(this.tableBalanceList.ThisTimeDmdNrmlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisTimeDmdNrmlNull() {
                this[this.tableBalanceList.ThisTimeDmdNrmlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisTimeTtlBlcNull() {
                return this.IsNull(this.tableBalanceList.ThisTimeTtlBlcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisTimeTtlBlcNull() {
                this[this.tableBalanceList.ThisTimeTtlBlcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisTimeSalesNull() {
                return this.IsNull(this.tableBalanceList.ThisTimeSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisTimeSalesNull() {
                this[this.tableBalanceList.ThisTimeSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesPriceRgdsDisNull() {
                return this.IsNull(this.tableBalanceList.SalesPriceRgdsDisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesPriceRgdsDisNull() {
                this[this.tableBalanceList.SalesPriceRgdsDisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfsThisTimeSalesNull() {
                return this.IsNull(this.tableBalanceList.OfsThisTimeSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfsThisTimeSalesNull() {
                this[this.tableBalanceList.OfsThisTimeSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfsThisSalesTaxNull() {
                return this.IsNull(this.tableBalanceList.OfsThisSalesTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfsThisSalesTaxNull() {
                this[this.tableBalanceList.OfsThisSalesTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisSalesPricTotalNull() {
                return this.IsNull(this.tableBalanceList.ThisSalesPricTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisSalesPricTotalNull() {
                this[this.tableBalanceList.ThisSalesPricTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfCalBlcNull() {
                return this.IsNull(this.tableBalanceList.AfCalBlcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfCalBlcNull() {
                this[this.tableBalanceList.AfCalBlcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipCountNull() {
                return this.IsNull(this.tableBalanceList.SalesSlipCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipCountNull() {
                this[this.tableBalanceList.SalesSlipCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableBalanceList.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableBalanceList.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableBalanceList.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableBalanceList.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionCodeNull() {
                return this.IsNull(this.tableBalanceList.SectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionCodeNull() {
                this[this.tableBalanceList.SectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClaimSectionCodeNull() {
                return this.IsNull(this.tableBalanceList.ClaimSectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClaimSectionCodeNull() {
                this[this.tableBalanceList.ClaimSectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditMngCodeNull() {
                return this.IsNull(this.tableBalanceList.CreditMngCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditMngCodeNull() {
                this[this.tableBalanceList.CreditMngCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditMoneyNull() {
                return this.IsNull(this.tableBalanceList.CreditMoneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditMoneyNull() {
                this[this.tableBalanceList.CreditMoneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarningCreditMoneyNull() {
                return this.IsNull(this.tableBalanceList.WarningCreditMoneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarningCreditMoneyNull() {
                this[this.tableBalanceList.WarningCreditMoneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrsntAccRecBalanceNull() {
                return this.IsNull(this.tableBalanceList.PrsntAccRecBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrsntAccRecBalanceNull() {
                this[this.tableBalanceList.PrsntAccRecBalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalDayNull() {
                return this.IsNull(this.tableBalanceList.TotalDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalDayNull() {
                this[this.tableBalanceList.TotalDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyTotalDayNull() {
                return this.IsNull(this.tableBalanceList.CompanyTotalDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyTotalDayNull() {
                this[this.tableBalanceList.CompanyTotalDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDifferenceNull() {
                return this.IsNull(this.tableBalanceList.DifferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDifferenceNull() {
                this[this.tableBalanceList.DifferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditDifferenceNull() {
                return this.IsNull(this.tableBalanceList.CreditDifferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditDifferenceNull() {
                this[this.tableBalanceList.CreditDifferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccRecDivCdNull() {
                return this.IsNull(this.tableBalanceList.AccRecDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccRecDivCdNull() {
                this[this.tableBalanceList.AccRecDivCdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesDetailRowChangeEvent : global::System.EventArgs {
            
            private SalesDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRowChangeEvent(SalesDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesListRowChangeEvent : global::System.EventArgs {
            
            private SalesListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesListRowChangeEvent(SalesListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BalanceTotalRowChangeEvent : global::System.EventArgs {
            
            private BalanceTotalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceTotalRowChangeEvent(BalanceTotalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceTotalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesDetailDspRowChangeEvent : global::System.EventArgs {
            
            private SalesDetailDspRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailDspRowChangeEvent(SalesDetailDspRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailDspRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RedSlipDetailRowChangeEvent : global::System.EventArgs {
            
            private RedSlipDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RedSlipDetailRowChangeEvent(RedSlipDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RedSlipDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BalanceListRowChangeEvent : global::System.EventArgs {
            
            private BalanceListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceListRowChangeEvent(BalanceListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591