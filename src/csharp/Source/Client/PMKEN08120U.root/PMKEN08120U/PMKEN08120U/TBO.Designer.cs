//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3053
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Library.Windows.Forms
{


    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Data.Design.TypedDataSetGenerator", "2.0.0.0" )]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute( "code" )]
    [global::System.ComponentModel.ToolboxItem( true )]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute( "GetTypedDataSetSchema" )]
    [global::System.Xml.Serialization.XmlRootAttribute( "TBO" )]
    [global::System.ComponentModel.Design.HelpKeywordAttribute( "vs.data.DataSet" )]
    internal partial class TBO : global::System.Data.DataSet
    {

        private MakerDataTable tableMaker;

        private StockDataTable tableStock;

        private TBOInfoDataTable tableTBOInfo;

        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TBO()
        {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler( this.SchemaChanged );
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected TBO( global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context )
            :
                base( info, context, false )
        {
            if ( (this.IsBinarySerialized( info, context ) == true) )
            {
                this.InitVars( false );
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler( this.SchemaChanged );
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue( "XmlSchema", typeof( string ) )));
            if ( (this.DetermineSchemaSerializationMode( info, context ) == global::System.Data.SchemaSerializationMode.IncludeSchema) )
            {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema( new global::System.Xml.XmlTextReader( new global::System.IO.StringReader( strSchema ) ) );
                if ( (ds.Tables["Maker"] != null) )
                {
                    base.Tables.Add( new MakerDataTable( ds.Tables["Maker"] ) );
                }
                if ( (ds.Tables["Stock"] != null) )
                {
                    base.Tables.Add( new StockDataTable( ds.Tables["Stock"] ) );
                }
                if ( (ds.Tables["TBOInfo"] != null) )
                {
                    base.Tables.Add( new TBOInfoDataTable( ds.Tables["TBOInfo"] ) );
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge( ds, false, global::System.Data.MissingSchemaAction.Add );
                this.InitVars();
            }
            else
            {
                this.ReadXmlSchema( new global::System.Xml.XmlTextReader( new global::System.IO.StringReader( strSchema ) ) );
            }
            this.GetSerializationData( info, context );
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler( this.SchemaChanged );
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable( false )]
        [global::System.ComponentModel.DesignerSerializationVisibility( global::System.ComponentModel.DesignerSerializationVisibility.Content )]
        public MakerDataTable Maker
        {
            get
            {
                return this.tableMaker;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable( false )]
        [global::System.ComponentModel.DesignerSerializationVisibility( global::System.ComponentModel.DesignerSerializationVisibility.Content )]
        public StockDataTable Stock
        {
            get
            {
                return this.tableStock;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable( false )]
        [global::System.ComponentModel.DesignerSerializationVisibility( global::System.ComponentModel.DesignerSerializationVisibility.Content )]
        public TBOInfoDataTable TBOInfo
        {
            get
            {
                return this.tableTBOInfo;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute( true )]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute( global::System.ComponentModel.DesignerSerializationVisibility.Visible )]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return this._schemaSerializationMode;
            }
            set
            {
                this._schemaSerializationMode = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute( global::System.ComponentModel.DesignerSerializationVisibility.Hidden )]
        public new global::System.Data.DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute( global::System.ComponentModel.DesignerSerializationVisibility.Hidden )]
        public new global::System.Data.DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet()
        {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone()
        {
            TBO cln = ((TBO)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable( global::System.Xml.XmlReader reader )
        {
            if ( (this.DetermineSchemaSerializationMode( reader ) == global::System.Data.SchemaSerializationMode.IncludeSchema) )
            {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml( reader );
                if ( (ds.Tables["Maker"] != null) )
                {
                    base.Tables.Add( new MakerDataTable( ds.Tables["Maker"] ) );
                }
                if ( (ds.Tables["Stock"] != null) )
                {
                    base.Tables.Add( new StockDataTable( ds.Tables["Stock"] ) );
                }
                if ( (ds.Tables["TBOInfo"] != null) )
                {
                    base.Tables.Add( new TBOInfoDataTable( ds.Tables["TBOInfo"] ) );
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge( ds, false, global::System.Data.MissingSchemaAction.Add );
                this.InitVars();
            }
            else
            {
                this.ReadXml( reader );
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema( new global::System.Xml.XmlTextWriter( stream, null ) );
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read( new global::System.Xml.XmlTextReader( stream ), null );
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars()
        {
            this.InitVars( true );
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars( bool initTable )
        {
            this.tableMaker = ((MakerDataTable)(base.Tables["Maker"]));
            if ( (initTable == true) )
            {
                if ( (this.tableMaker != null) )
                {
                    this.tableMaker.InitVars();
                }
            }
            this.tableStock = ((StockDataTable)(base.Tables["Stock"]));
            if ( (initTable == true) )
            {
                if ( (this.tableStock != null) )
                {
                    this.tableStock.InitVars();
                }
            }
            this.tableTBOInfo = ((TBOInfoDataTable)(base.Tables["TBOInfo"]));
            if ( (initTable == true) )
            {
                if ( (this.tableTBOInfo != null) )
                {
                    this.tableTBOInfo.InitVars();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass()
        {
            this.DataSetName = "TBO";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TBO.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMaker = new MakerDataTable();
            base.Tables.Add( this.tableMaker );
            this.tableStock = new StockDataTable();
            base.Tables.Add( this.tableStock );
            this.tableTBOInfo = new TBOInfoDataTable();
            base.Tables.Add( this.tableTBOInfo );
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMaker()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStock()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTBOInfo()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged( object sender, global::System.ComponentModel.CollectionChangeEventArgs e )
        {
            if ( (e.Action == global::System.ComponentModel.CollectionChangeAction.Remove) )
            {
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema( global::System.Xml.Schema.XmlSchemaSet xs )
        {
            TBO ds = new TBO();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add( any );
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if ( xs.Contains( dsSchema.TargetNamespace ) )
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write( s1 );
                    for ( global::System.Collections.IEnumerator schemas = xs.Schemas( dsSchema.TargetNamespace ).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength( 0 );
                        schema.Write( s2 );
                        if ( (s1.Length == s2.Length) )
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for ( ; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ( (s1.Position == s1.Length) )
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ( (s1 != null) )
                    {
                        s1.Close();
                    }
                    if ( (s2 != null) )
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add( dsSchema );
            return type;
        }

        public delegate void MakerRowChangeEventHandler( object sender, MakerRowChangeEvent e );

        public delegate void StockRowChangeEventHandler( object sender, StockRowChangeEvent e );

        public delegate void TBOInfoRowChangeEventHandler( object sender, TBOInfoRowChangeEvent e );

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Data.Design.TypedDataSetGenerator", "2.0.0.0" )]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute( "GetTypedTableSchema" )]
        public partial class MakerDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnSelImg;

            private global::System.Data.DataColumn columnMakerCd;

            private global::System.Data.DataColumn columnMakerNm;

            private global::System.Data.DataColumn columnEquipGenreCode;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MakerDataTable()
            {
                this.TableName = "Maker";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MakerDataTable( global::System.Data.DataTable table )
            {
                this.TableName = table.TableName;
                if ( (table.CaseSensitive != table.DataSet.CaseSensitive) )
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ( (table.Locale.ToString() != table.DataSet.Locale.ToString()) )
                {
                    this.Locale = table.Locale;
                }
                if ( (table.Namespace != table.DataSet.Namespace) )
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MakerDataTable( global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context )
                :
                    base( info, context )
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelImgColumn
            {
                get
                {
                    return this.columnSelImg;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerCdColumn
            {
                get
                {
                    return this.columnMakerCd;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerNmColumn
            {
                get
                {
                    return this.columnMakerNm;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EquipGenreCodeColumn
            {
                get
                {
                    return this.columnEquipGenreCode;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable( false )]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MakerRow this[int index]
            {
                get
                {
                    return ((MakerRow)(this.Rows[index]));
                }
            }

            public event MakerRowChangeEventHandler MakerRowChanging;

            public event MakerRowChangeEventHandler MakerRowChanged;

            public event MakerRowChangeEventHandler MakerRowDeleting;

            public event MakerRowChangeEventHandler MakerRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMakerRow( MakerRow row )
            {
                this.Rows.Add( row );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MakerRow AddMakerRow( System.Drawing.Image SelImg, int MakerCd, string MakerNm, int EquipGenreCode )
            {
                MakerRow rowMakerRow = ((MakerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SelImg,
                        MakerCd,
                        MakerNm,
                        EquipGenreCode};
                rowMakerRow.ItemArray = columnValuesArray;
                this.Rows.Add( rowMakerRow );
                return rowMakerRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MakerRow FindByEquipGenreCodeMakerCd( int EquipGenreCode, int MakerCd )
            {
                return ((MakerRow)(this.Rows.Find( new object[] {
                            EquipGenreCode,
                            MakerCd} )));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                MakerDataTable cln = ((MakerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new MakerDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnSelImg = base.Columns["SelImg"];
                this.columnMakerCd = base.Columns["MakerCd"];
                this.columnMakerNm = base.Columns["MakerNm"];
                this.columnEquipGenreCode = base.Columns["EquipGenreCode"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnSelImg = new global::System.Data.DataColumn( "SelImg", typeof( global::System.Drawing.Image ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnSelImg );
                this.columnMakerCd = new global::System.Data.DataColumn( "MakerCd", typeof( int ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnMakerCd );
                this.columnMakerNm = new global::System.Data.DataColumn( "MakerNm", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnMakerNm );
                this.columnEquipGenreCode = new global::System.Data.DataColumn( "EquipGenreCode", typeof( int ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnEquipGenreCode );
                this.Constraints.Add( new global::System.Data.UniqueConstraint( "Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEquipGenreCode,
                                this.columnMakerCd}, true ) );
                this.columnSelImg.Caption = "選択";
                this.columnMakerCd.AllowDBNull = false;
                this.columnMakerCd.Caption = "";
                this.columnMakerCd.DefaultValue = ((int)(0));
                this.columnMakerNm.Caption = "メーカー";
                this.columnMakerNm.DefaultValue = ((string)(""));
                this.columnEquipGenreCode.AllowDBNull = false;
                this.columnEquipGenreCode.DefaultValue = ((int)(0));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MakerRow NewMakerRow()
            {
                return ((MakerRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder( global::System.Data.DataRowBuilder builder )
            {
                return new MakerRow( builder );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof( MakerRow );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged( global::System.Data.DataRowChangeEventArgs e )
            {
                base.OnRowChanged( e );
                if ( (this.MakerRowChanged != null) )
                {
                    this.MakerRowChanged( this, new MakerRowChangeEvent( ((MakerRow)(e.Row)), e.Action ) );
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging( global::System.Data.DataRowChangeEventArgs e )
            {
                base.OnRowChanging( e );
                if ( (this.MakerRowChanging != null) )
                {
                    this.MakerRowChanging( this, new MakerRowChangeEvent( ((MakerRow)(e.Row)), e.Action ) );
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted( global::System.Data.DataRowChangeEventArgs e )
            {
                base.OnRowDeleted( e );
                if ( (this.MakerRowDeleted != null) )
                {
                    this.MakerRowDeleted( this, new MakerRowChangeEvent( ((MakerRow)(e.Row)), e.Action ) );
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting( global::System.Data.DataRowChangeEventArgs e )
            {
                base.OnRowDeleting( e );
                if ( (this.MakerRowDeleting != null) )
                {
                    this.MakerRowDeleting( this, new MakerRowChangeEvent( ((MakerRow)(e.Row)), e.Action ) );
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMakerRow( MakerRow row )
            {
                this.Rows.Remove( row );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema( global::System.Xml.Schema.XmlSchemaSet xs )
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TBO ds = new TBO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal( 0 );
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add( any1 );
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal( 1 );
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add( any2 );
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add( attribute1 );
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MakerDataTable";
                type.Attributes.Add( attribute2 );
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if ( xs.Contains( dsSchema.TargetNamespace ) )
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write( s1 );
                        for ( global::System.Collections.IEnumerator schemas = xs.Schemas( dsSchema.TargetNamespace ).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength( 0 );
                            schema.Write( s2 );
                            if ( (s1.Length == s2.Length) )
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for ( ; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ( (s1.Position == s1.Length) )
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ( (s1 != null) )
                        {
                            s1.Close();
                        }
                        if ( (s2 != null) )
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add( dsSchema );
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Data.Design.TypedDataSetGenerator", "2.0.0.0" )]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute( "GetTypedTableSchema" )]
        public partial class StockDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnWarehouseCode;

            private global::System.Data.DataColumn columnGoodsMakerCd;

            private global::System.Data.DataColumn columnGoodsNo;

            private global::System.Data.DataColumn columnShipmentPosCnt;

            private global::System.Data.DataColumn columnMinimumStockCnt;

            private global::System.Data.DataColumn columnMaximumStockCnt;

            private global::System.Data.DataColumn columnWarehouseShelfNo;

            private global::System.Data.DataColumn columnWarehouseName;

            private global::System.Data.DataColumn columnSelectionState;

            private global::System.Data.DataColumn columnSelImage;

            private global::System.Data.DataColumn columnSortDiv;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDataTable()
            {
                this.TableName = "Stock";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockDataTable( global::System.Data.DataTable table )
            {
                this.TableName = table.TableName;
                if ( (table.CaseSensitive != table.DataSet.CaseSensitive) )
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ( (table.Locale.ToString() != table.DataSet.Locale.ToString()) )
                {
                    this.Locale = table.Locale;
                }
                if ( (table.Namespace != table.DataSet.Namespace) )
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockDataTable( global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context )
                :
                    base( info, context )
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn
            {
                get
                {
                    return this.columnWarehouseCode;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn
            {
                get
                {
                    return this.columnGoodsMakerCd;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn
            {
                get
                {
                    return this.columnGoodsNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentPosCntColumn
            {
                get
                {
                    return this.columnShipmentPosCnt;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinimumStockCntColumn
            {
                get
                {
                    return this.columnMinimumStockCnt;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaximumStockCntColumn
            {
                get
                {
                    return this.columnMaximumStockCnt;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseShelfNoColumn
            {
                get
                {
                    return this.columnWarehouseShelfNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseNameColumn
            {
                get
                {
                    return this.columnWarehouseName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectionStateColumn
            {
                get
                {
                    return this.columnSelectionState;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelImageColumn
            {
                get
                {
                    return this.columnSelImage;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortDivColumn
            {
                get
                {
                    return this.columnSortDiv;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable( false )]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow this[int index]
            {
                get
                {
                    return ((StockRow)(this.Rows[index]));
                }
            }

            public event StockRowChangeEventHandler StockRowChanging;

            public event StockRowChangeEventHandler StockRowChanged;

            public event StockRowChangeEventHandler StockRowDeleting;

            public event StockRowChangeEventHandler StockRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockRow( StockRow row )
            {
                this.Rows.Add( row );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow AddStockRow( string WarehouseCode, int GoodsMakerCd, string GoodsNo, double ShipmentPosCnt, double MinimumStockCnt, double MaximumStockCnt, string WarehouseShelfNo, string WarehouseName, bool SelectionState, System.Drawing.Image SelImage, int SortDiv )
            {
                StockRow rowStockRow = ((StockRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WarehouseCode,
                        GoodsMakerCd,
                        GoodsNo,
                        ShipmentPosCnt,
                        MinimumStockCnt,
                        MaximumStockCnt,
                        WarehouseShelfNo,
                        WarehouseName,
                        SelectionState,
                        SelImage,
                        SortDiv};
                rowStockRow.ItemArray = columnValuesArray;
                this.Rows.Add( rowStockRow );
                return rowStockRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow FindByWarehouseCodeGoodsMakerCdGoodsNo( string WarehouseCode, int GoodsMakerCd, string GoodsNo )
            {
                return ((StockRow)(this.Rows.Find( new object[] {
                            WarehouseCode,
                            GoodsMakerCd,
                            GoodsNo} )));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                StockDataTable cln = ((StockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new StockDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnShipmentPosCnt = base.Columns["ShipmentPosCnt"];
                this.columnMinimumStockCnt = base.Columns["MinimumStockCnt"];
                this.columnMaximumStockCnt = base.Columns["MaximumStockCnt"];
                this.columnWarehouseShelfNo = base.Columns["WarehouseShelfNo"];
                this.columnWarehouseName = base.Columns["WarehouseName"];
                this.columnSelectionState = base.Columns["SelectionState"];
                this.columnSelImage = base.Columns["SelImage"];
                this.columnSortDiv = base.Columns["SortDiv"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnWarehouseCode = new global::System.Data.DataColumn( "WarehouseCode", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnWarehouseCode );
                this.columnGoodsMakerCd = new global::System.Data.DataColumn( "GoodsMakerCd", typeof( int ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnGoodsMakerCd );
                this.columnGoodsNo = new global::System.Data.DataColumn( "GoodsNo", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnGoodsNo );
                this.columnShipmentPosCnt = new global::System.Data.DataColumn( "ShipmentPosCnt", typeof( double ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnShipmentPosCnt );
                this.columnMinimumStockCnt = new global::System.Data.DataColumn( "MinimumStockCnt", typeof( double ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnMinimumStockCnt );
                this.columnMaximumStockCnt = new global::System.Data.DataColumn( "MaximumStockCnt", typeof( double ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnMaximumStockCnt );
                this.columnWarehouseShelfNo = new global::System.Data.DataColumn( "WarehouseShelfNo", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnWarehouseShelfNo );
                this.columnWarehouseName = new global::System.Data.DataColumn( "WarehouseName", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnWarehouseName );
                this.columnSelectionState = new global::System.Data.DataColumn( "SelectionState", typeof( bool ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnSelectionState );
                this.columnSelImage = new global::System.Data.DataColumn( "SelImage", typeof( global::System.Drawing.Image ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnSelImage );
                this.columnSortDiv = new global::System.Data.DataColumn( "SortDiv", typeof( int ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnSortDiv );
                this.Constraints.Add( new global::System.Data.UniqueConstraint( "Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWarehouseCode,
                                this.columnGoodsMakerCd,
                                this.columnGoodsNo}, true ) );
                this.columnWarehouseCode.AllowDBNull = false;
                this.columnWarehouseCode.Caption = "倉庫コード";
                this.columnWarehouseCode.DefaultValue = ((string)(""));
                this.columnWarehouseCode.MaxLength = 6;
                this.columnGoodsMakerCd.AllowDBNull = false;
                this.columnGoodsMakerCd.Caption = "商品メーカー";
                this.columnGoodsMakerCd.DefaultValue = ((int)(0));
                this.columnGoodsNo.AllowDBNull = false;
                this.columnGoodsNo.Caption = "品番";
                this.columnGoodsNo.DefaultValue = ((string)(""));
                this.columnGoodsNo.MaxLength = 40;
                this.columnShipmentPosCnt.Caption = "現在庫数";
                this.columnShipmentPosCnt.DefaultValue = ((double)(0));
                this.columnMinimumStockCnt.Caption = "最低在庫数";
                this.columnMinimumStockCnt.DefaultValue = ((double)(0));
                this.columnMaximumStockCnt.Caption = "最高在庫数";
                this.columnMaximumStockCnt.DefaultValue = ((double)(0));
                this.columnWarehouseShelfNo.Caption = "棚番";
                this.columnWarehouseShelfNo.DefaultValue = ((string)(""));
                this.columnWarehouseShelfNo.MaxLength = 8;
                this.columnWarehouseName.Caption = "倉庫";
                this.columnWarehouseName.DefaultValue = ((string)(""));
                this.columnSelectionState.DefaultValue = ((bool)(false));
                this.columnSelImage.Caption = "選択";
                this.columnSortDiv.Caption = "ソート区分";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow NewStockRow()
            {
                return ((StockRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder( global::System.Data.DataRowBuilder builder )
            {
                return new StockRow( builder );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof( StockRow );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged( global::System.Data.DataRowChangeEventArgs e )
            {
                base.OnRowChanged( e );
                if ( (this.StockRowChanged != null) )
                {
                    this.StockRowChanged( this, new StockRowChangeEvent( ((StockRow)(e.Row)), e.Action ) );
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging( global::System.Data.DataRowChangeEventArgs e )
            {
                base.OnRowChanging( e );
                if ( (this.StockRowChanging != null) )
                {
                    this.StockRowChanging( this, new StockRowChangeEvent( ((StockRow)(e.Row)), e.Action ) );
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted( global::System.Data.DataRowChangeEventArgs e )
            {
                base.OnRowDeleted( e );
                if ( (this.StockRowDeleted != null) )
                {
                    this.StockRowDeleted( this, new StockRowChangeEvent( ((StockRow)(e.Row)), e.Action ) );
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting( global::System.Data.DataRowChangeEventArgs e )
            {
                base.OnRowDeleting( e );
                if ( (this.StockRowDeleting != null) )
                {
                    this.StockRowDeleting( this, new StockRowChangeEvent( ((StockRow)(e.Row)), e.Action ) );
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockRow( StockRow row )
            {
                this.Rows.Remove( row );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema( global::System.Xml.Schema.XmlSchemaSet xs )
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TBO ds = new TBO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal( 0 );
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add( any1 );
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal( 1 );
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add( any2 );
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add( attribute1 );
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockDataTable";
                type.Attributes.Add( attribute2 );
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if ( xs.Contains( dsSchema.TargetNamespace ) )
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write( s1 );
                        for ( global::System.Collections.IEnumerator schemas = xs.Schemas( dsSchema.TargetNamespace ).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength( 0 );
                            schema.Write( s2 );
                            if ( (s1.Length == s2.Length) )
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for ( ; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ( (s1.Position == s1.Length) )
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ( (s1 != null) )
                        {
                            s1.Close();
                        }
                        if ( (s2 != null) )
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add( dsSchema );
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Data.Design.TypedDataSetGenerator", "2.0.0.0" )]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute( "GetTypedTableSchema" )]
        public partial class TBOInfoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable
        {

            private global::System.Data.DataColumn columnGoodsMGroup;

            private global::System.Data.DataColumn columnTbsPartsCode;

            private global::System.Data.DataColumn columnEquipGenreCode;

            private global::System.Data.DataColumn columnEquipName;

            private global::System.Data.DataColumn columnCarInfoJoinDispOrder;

            private global::System.Data.DataColumn columnJoinDestMakerCd;

            private global::System.Data.DataColumn columnJoinDestPartsNo;

            private global::System.Data.DataColumn columnJoinQty;

            private global::System.Data.DataColumn columnEquipSpecialNote;

            private global::System.Data.DataColumn columnPrimePartsName;

            private global::System.Data.DataColumn columnPartsLayerCd;

            private global::System.Data.DataColumn columnPrimePartsSpecialNote;

            private global::System.Data.DataColumn columnPartsAttribute;

            private global::System.Data.DataColumn columnCatalogDeleteFlag;

            private global::System.Data.DataColumn columnSelectionState;

            private global::System.Data.DataColumn columnJoinDestMakerNm;

            private global::System.Data.DataColumn columnMakerDispOrder;

            private global::System.Data.DataColumn columnSelImage;

            private global::System.Data.DataColumn columnSubst;

            private global::System.Data.DataColumn columnGenka;

            private global::System.Data.DataColumn columnUrika;

            private global::System.Data.DataColumn columnArarigaku;

            private global::System.Data.DataColumn columnArariritu;

            private global::System.Data.DataColumn columnPrice;

            private global::System.Data.DataColumn columnWarehouse;

            private global::System.Data.DataColumn columnShelf;

            private global::System.Data.DataColumn columnStockCnt;

            private global::System.Data.DataColumn columnKubun;

            private global::System.Data.DataColumn columnEquipmentDispOrder;

            private global::System.Data.DataColumn columnWarehouseCode;

            private global::System.Data.DataColumn columnJoinDestOrgPartsNo;

            private global::System.Data.DataColumn columnOfferKubun;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBOInfoDataTable()
            {
                this.TableName = "TBOInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBOInfoDataTable( global::System.Data.DataTable table )
            {
                this.TableName = table.TableName;
                if ( (table.CaseSensitive != table.DataSet.CaseSensitive) )
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ( (table.Locale.ToString() != table.DataSet.Locale.ToString()) )
                {
                    this.Locale = table.Locale;
                }
                if ( (table.Namespace != table.DataSet.Namespace) )
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TBOInfoDataTable( global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context )
                :
                    base( info, context )
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMGroupColumn
            {
                get
                {
                    return this.columnGoodsMGroup;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TbsPartsCodeColumn
            {
                get
                {
                    return this.columnTbsPartsCode;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EquipGenreCodeColumn
            {
                get
                {
                    return this.columnEquipGenreCode;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EquipNameColumn
            {
                get
                {
                    return this.columnEquipName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarInfoJoinDispOrderColumn
            {
                get
                {
                    return this.columnCarInfoJoinDispOrder;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinDestMakerCdColumn
            {
                get
                {
                    return this.columnJoinDestMakerCd;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinDestPartsNoColumn
            {
                get
                {
                    return this.columnJoinDestPartsNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinQtyColumn
            {
                get
                {
                    return this.columnJoinQty;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EquipSpecialNoteColumn
            {
                get
                {
                    return this.columnEquipSpecialNote;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrimePartsNameColumn
            {
                get
                {
                    return this.columnPrimePartsName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartsLayerCdColumn
            {
                get
                {
                    return this.columnPartsLayerCd;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrimePartsSpecialNoteColumn
            {
                get
                {
                    return this.columnPrimePartsSpecialNote;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartsAttributeColumn
            {
                get
                {
                    return this.columnPartsAttribute;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CatalogDeleteFlagColumn
            {
                get
                {
                    return this.columnCatalogDeleteFlag;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectionStateColumn
            {
                get
                {
                    return this.columnSelectionState;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinDestMakerNmColumn
            {
                get
                {
                    return this.columnJoinDestMakerNm;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerDispOrderColumn
            {
                get
                {
                    return this.columnMakerDispOrder;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelImageColumn
            {
                get
                {
                    return this.columnSelImage;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubstColumn
            {
                get
                {
                    return this.columnSubst;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenkaColumn
            {
                get
                {
                    return this.columnGenka;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UrikaColumn
            {
                get
                {
                    return this.columnUrika;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArarigakuColumn
            {
                get
                {
                    return this.columnArarigaku;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArarirituColumn
            {
                get
                {
                    return this.columnArariritu;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn
            {
                get
                {
                    return this.columnPrice;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseColumn
            {
                get
                {
                    return this.columnWarehouse;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShelfColumn
            {
                get
                {
                    return this.columnShelf;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockCntColumn
            {
                get
                {
                    return this.columnStockCnt;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KubunColumn
            {
                get
                {
                    return this.columnKubun;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EquipmentDispOrderColumn
            {
                get
                {
                    return this.columnEquipmentDispOrder;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn
            {
                get
                {
                    return this.columnWarehouseCode;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinDestOrgPartsNoColumn
            {
                get
                {
                    return this.columnJoinDestOrgPartsNo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfferKubunColumn
            {
                get
                {
                    return this.columnOfferKubun;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable( false )]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBOInfoRow this[int index]
            {
                get
                {
                    return ((TBOInfoRow)(this.Rows[index]));
                }
            }

            public event TBOInfoRowChangeEventHandler TBOInfoRowChanging;

            public event TBOInfoRowChangeEventHandler TBOInfoRowChanged;

            public event TBOInfoRowChangeEventHandler TBOInfoRowDeleting;

            public event TBOInfoRowChangeEventHandler TBOInfoRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTBOInfoRow( TBOInfoRow row )
            {
                this.Rows.Add( row );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBOInfoRow AddTBOInfoRow(
                        int GoodsMGroup,
                        int TbsPartsCode,
                        int EquipGenreCode,
                        string EquipName,
                        int CarInfoJoinDispOrder,
                        int JoinDestMakerCd,
                        string JoinDestPartsNo,
                        double JoinQty,
                        string EquipSpecialNote,
                        string PrimePartsName,
                        string PartsLayerCd,
                        string PrimePartsSpecialNote,
                        int PartsAttribute,
                        int CatalogDeleteFlag,
                        bool SelectionState,
                        string JoinDestMakerNm,
                        int MakerDispOrder,
                        System.Drawing.Image SelImage,
                        System.Drawing.Image Subst,
                        double Genka,
                        double Urika,
                        double Ararigaku,
                        double Arariritu,
                        double Price,
                        string Warehouse,
                        string Shelf,
                        double StockCnt,
                        string Kubun,
                        int EquipmentDispOrder,
                        string WarehouseCode,
                        string JoinDestOrgPartsNo,
                        int OfferKubun )
            {
                TBOInfoRow rowTBOInfoRow = ((TBOInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GoodsMGroup,
                        TbsPartsCode,
                        EquipGenreCode,
                        EquipName,
                        CarInfoJoinDispOrder,
                        JoinDestMakerCd,
                        JoinDestPartsNo,
                        JoinQty,
                        EquipSpecialNote,
                        PrimePartsName,
                        PartsLayerCd,
                        PrimePartsSpecialNote,
                        PartsAttribute,
                        CatalogDeleteFlag,
                        SelectionState,
                        JoinDestMakerNm,
                        MakerDispOrder,
                        SelImage,
                        Subst,
                        Genka,
                        Urika,
                        Ararigaku,
                        Arariritu,
                        Price,
                        Warehouse,
                        Shelf,
                        StockCnt,
                        Kubun,
                        EquipmentDispOrder,
                        WarehouseCode,
                        JoinDestOrgPartsNo,
                        OfferKubun};
                rowTBOInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add( rowTBOInfoRow );
                return rowTBOInfoRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator()
            {
                return this.Rows.GetEnumerator();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                TBOInfoDataTable cln = ((TBOInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new TBOInfoDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnGoodsMGroup = base.Columns["GoodsMGroup"];
                this.columnTbsPartsCode = base.Columns["TbsPartsCode"];
                this.columnEquipGenreCode = base.Columns["EquipGenreCode"];
                this.columnEquipName = base.Columns["EquipName"];
                this.columnCarInfoJoinDispOrder = base.Columns["CarInfoJoinDispOrder"];
                this.columnJoinDestMakerCd = base.Columns["JoinDestMakerCd"];
                this.columnJoinDestPartsNo = base.Columns["JoinDestPartsNo"];
                this.columnJoinQty = base.Columns["JoinQty"];
                this.columnEquipSpecialNote = base.Columns["EquipSpecialNote"];
                this.columnPrimePartsName = base.Columns["PrimePartsName"];
                this.columnPartsLayerCd = base.Columns["PartsLayerCd"];
                this.columnPrimePartsSpecialNote = base.Columns["PrimePartsSpecialNote"];
                this.columnPartsAttribute = base.Columns["PartsAttribute"];
                this.columnCatalogDeleteFlag = base.Columns["CatalogDeleteFlag"];
                this.columnSelectionState = base.Columns["SelectionState"];
                this.columnJoinDestMakerNm = base.Columns["JoinDestMakerNm"];
                this.columnMakerDispOrder = base.Columns["MakerDispOrder"];
                this.columnSelImage = base.Columns["SelImage"];
                this.columnSubst = base.Columns["Subst"];
                this.columnGenka = base.Columns["Genka"];
                this.columnUrika = base.Columns["Urika"];
                this.columnArarigaku = base.Columns["Ararigaku"];
                this.columnArariritu = base.Columns["Arariritu"];
                this.columnPrice = base.Columns["Price"];
                this.columnWarehouse = base.Columns["Warehouse"];
                this.columnShelf = base.Columns["Shelf"];
                this.columnStockCnt = base.Columns["StockCnt"];
                this.columnKubun = base.Columns["Kubun"];
                this.columnEquipmentDispOrder = base.Columns["EquipmentDispOrder"];
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnJoinDestOrgPartsNo = base.Columns["JoinDestOrgPartsNo"];
                this.columnOfferKubun = base.Columns["OfferKubun"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnGoodsMGroup = new global::System.Data.DataColumn( "GoodsMGroup", typeof( int ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnGoodsMGroup );
                this.columnTbsPartsCode = new global::System.Data.DataColumn( "TbsPartsCode", typeof( int ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnTbsPartsCode );
                this.columnEquipGenreCode = new global::System.Data.DataColumn( "EquipGenreCode", typeof( int ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnEquipGenreCode );
                this.columnEquipName = new global::System.Data.DataColumn( "EquipName", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnEquipName );
                this.columnCarInfoJoinDispOrder = new global::System.Data.DataColumn( "CarInfoJoinDispOrder", typeof( int ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnCarInfoJoinDispOrder );
                this.columnJoinDestMakerCd = new global::System.Data.DataColumn( "JoinDestMakerCd", typeof( int ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnJoinDestMakerCd );
                this.columnJoinDestPartsNo = new global::System.Data.DataColumn( "JoinDestPartsNo", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnJoinDestPartsNo );
                this.columnJoinQty = new global::System.Data.DataColumn( "JoinQty", typeof( double ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnJoinQty );
                this.columnEquipSpecialNote = new global::System.Data.DataColumn( "EquipSpecialNote", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnEquipSpecialNote );
                this.columnPrimePartsName = new global::System.Data.DataColumn( "PrimePartsName", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnPrimePartsName );
                this.columnPartsLayerCd = new global::System.Data.DataColumn( "PartsLayerCd", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnPartsLayerCd );
                this.columnPrimePartsSpecialNote = new global::System.Data.DataColumn( "PrimePartsSpecialNote", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnPrimePartsSpecialNote );
                this.columnPartsAttribute = new global::System.Data.DataColumn( "PartsAttribute", typeof( int ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnPartsAttribute );
                this.columnCatalogDeleteFlag = new global::System.Data.DataColumn( "CatalogDeleteFlag", typeof( int ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnCatalogDeleteFlag );
                this.columnSelectionState = new global::System.Data.DataColumn( "SelectionState", typeof( bool ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnSelectionState );
                this.columnJoinDestMakerNm = new global::System.Data.DataColumn( "JoinDestMakerNm", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnJoinDestMakerNm );
                this.columnMakerDispOrder = new global::System.Data.DataColumn( "MakerDispOrder", typeof( int ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnMakerDispOrder );
                this.columnSelImage = new global::System.Data.DataColumn( "SelImage", typeof( global::System.Drawing.Image ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnSelImage );
                this.columnSubst = new global::System.Data.DataColumn( "Subst", typeof( global::System.Drawing.Image ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnSubst );
                this.columnGenka = new global::System.Data.DataColumn( "Genka", typeof( double ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnGenka );
                this.columnUrika = new global::System.Data.DataColumn( "Urika", typeof( double ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnUrika );
                this.columnArarigaku = new global::System.Data.DataColumn( "Ararigaku", typeof( double ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnArarigaku );
                this.columnArariritu = new global::System.Data.DataColumn( "Arariritu", typeof( double ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnArariritu );
                this.columnPrice = new global::System.Data.DataColumn( "Price", typeof( double ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnPrice );
                this.columnWarehouse = new global::System.Data.DataColumn( "Warehouse", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnWarehouse );
                this.columnShelf = new global::System.Data.DataColumn( "Shelf", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnShelf );
                this.columnStockCnt = new global::System.Data.DataColumn( "StockCnt", typeof( double ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnStockCnt );
                this.columnKubun = new global::System.Data.DataColumn( "Kubun", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnKubun );
                this.columnEquipmentDispOrder = new global::System.Data.DataColumn( "EquipmentDispOrder", typeof( int ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnEquipmentDispOrder );
                this.columnWarehouseCode = new global::System.Data.DataColumn( "WarehouseCode", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnWarehouseCode );
                this.columnJoinDestOrgPartsNo = new global::System.Data.DataColumn( "JoinDestOrgPartsNo", typeof( string ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnJoinDestOrgPartsNo );
                this.columnOfferKubun = new global::System.Data.DataColumn( "OfferKubun", typeof( int ), null, global::System.Data.MappingType.Element );
                base.Columns.Add( this.columnOfferKubun );
                this.columnGoodsMGroup.AllowDBNull = false;
                this.columnGoodsMGroup.Caption = "商品中分類";
                this.columnGoodsMGroup.DefaultValue = ((int)(0));
                this.columnTbsPartsCode.AllowDBNull = false;
                this.columnTbsPartsCode.Caption = "BLコード";
                this.columnTbsPartsCode.DefaultValue = ((int)(0));
                this.columnEquipGenreCode.AllowDBNull = false;
                this.columnEquipGenreCode.Caption = "装備分類";
                this.columnEquipGenreCode.DefaultValue = ((int)(0));
                this.columnEquipName.AllowDBNull = false;
                this.columnEquipName.Caption = "装備名称";
                this.columnEquipName.DefaultValue = ((string)(""));
                this.columnEquipName.MaxLength = 60;
                this.columnCarInfoJoinDispOrder.AllowDBNull = false;
                this.columnCarInfoJoinDispOrder.Caption = "車両情報結合表示順位";
                this.columnCarInfoJoinDispOrder.DefaultValue = ((int)(0));
                this.columnJoinDestMakerCd.AllowDBNull = false;
                this.columnJoinDestMakerCd.Caption = "";
                this.columnJoinDestMakerCd.DefaultValue = ((int)(0));
                this.columnJoinDestPartsNo.AllowDBNull = false;
                this.columnJoinDestPartsNo.Caption = "品番";
                this.columnJoinDestPartsNo.DefaultValue = ((string)(""));
                this.columnJoinDestPartsNo.MaxLength = 24;
                this.columnJoinQty.AllowDBNull = false;
                this.columnJoinQty.Caption = "QTY";
                this.columnJoinQty.DefaultValue = ((double)(0));
                this.columnEquipSpecialNote.AllowDBNull = false;
                this.columnEquipSpecialNote.Caption = "装備特記事項";
                this.columnEquipSpecialNote.DefaultValue = ((string)(""));
                this.columnEquipSpecialNote.MaxLength = 80;
                this.columnPrimePartsName.AllowDBNull = false;
                this.columnPrimePartsName.Caption = "品名";
                this.columnPrimePartsName.DefaultValue = ((string)(""));
                this.columnPrimePartsName.MaxLength = 60;
                this.columnPartsLayerCd.AllowDBNull = false;
                this.columnPartsLayerCd.Caption = "PARTSLAYERCDRF";
                this.columnPartsLayerCd.DefaultValue = ((string)(""));
                this.columnPartsLayerCd.MaxLength = 2;
                this.columnPrimePartsSpecialNote.AllowDBNull = false;
                this.columnPrimePartsSpecialNote.Caption = "PRIMEPARTSSPECIALNOTERF";
                this.columnPrimePartsSpecialNote.DefaultValue = ((string)(""));
                this.columnPrimePartsSpecialNote.MaxLength = 40;
                this.columnPartsAttribute.AllowDBNull = false;
                this.columnPartsAttribute.Caption = "PARTSATTRIBUTERF";
                this.columnPartsAttribute.DefaultValue = ((int)(0));
                this.columnCatalogDeleteFlag.AllowDBNull = false;
                this.columnCatalogDeleteFlag.Caption = "CATALOGDELETEFLAGRF";
                this.columnCatalogDeleteFlag.DefaultValue = ((int)(0));
                this.columnSelectionState.Caption = "選択状態";
                this.columnSelectionState.DefaultValue = ((bool)(false));
                this.columnJoinDestMakerNm.Caption = "メーカー";
                this.columnJoinDestMakerNm.DefaultValue = ((string)(""));
                this.columnMakerDispOrder.Caption = "メーカー表示順位";
                this.columnMakerDispOrder.DefaultValue = ((int)(0));
                this.columnSelImage.Caption = "選択";
                this.columnSubst.Caption = "代替";
                this.columnGenka.Caption = "原単価";
                this.columnGenka.DefaultValue = ((double)(0));
                this.columnUrika.Caption = "売単価";
                this.columnUrika.DefaultValue = ((double)(0));
                this.columnArarigaku.Caption = "粗利額";
                this.columnArarigaku.DefaultValue = ((double)(0));
                this.columnArariritu.Caption = "粗利率";
                this.columnArariritu.DefaultValue = ((double)(0));
                this.columnPrice.Caption = "標準価格";
                this.columnPrice.DefaultValue = ((double)(0));
                this.columnWarehouse.Caption = "倉庫";
                this.columnWarehouse.DefaultValue = ((string)(""));
                this.columnShelf.Caption = "棚番";
                this.columnShelf.DefaultValue = ((string)(""));
                this.columnStockCnt.Caption = "現在庫数";
                this.columnStockCnt.DefaultValue = ((double)(0));
                this.columnKubun.Caption = "区分";
                this.columnKubun.DefaultValue = ((string)(""));
                this.columnEquipmentDispOrder.DefaultValue = ((int)(0));
                this.columnWarehouseCode.DefaultValue = ((string)(""));
                this.columnJoinDestOrgPartsNo.DefaultValue = ((string)(""));
                this.columnOfferKubun.DefaultValue = ((int)(0));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBOInfoRow NewTBOInfoRow()
            {
                return ((TBOInfoRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder( global::System.Data.DataRowBuilder builder )
            {
                return new TBOInfoRow( builder );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof( TBOInfoRow );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged( global::System.Data.DataRowChangeEventArgs e )
            {
                base.OnRowChanged( e );
                if ( (this.TBOInfoRowChanged != null) )
                {
                    this.TBOInfoRowChanged( this, new TBOInfoRowChangeEvent( ((TBOInfoRow)(e.Row)), e.Action ) );
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging( global::System.Data.DataRowChangeEventArgs e )
            {
                base.OnRowChanging( e );
                if ( (this.TBOInfoRowChanging != null) )
                {
                    this.TBOInfoRowChanging( this, new TBOInfoRowChangeEvent( ((TBOInfoRow)(e.Row)), e.Action ) );
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted( global::System.Data.DataRowChangeEventArgs e )
            {
                base.OnRowDeleted( e );
                if ( (this.TBOInfoRowDeleted != null) )
                {
                    this.TBOInfoRowDeleted( this, new TBOInfoRowChangeEvent( ((TBOInfoRow)(e.Row)), e.Action ) );
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting( global::System.Data.DataRowChangeEventArgs e )
            {
                base.OnRowDeleting( e );
                if ( (this.TBOInfoRowDeleting != null) )
                {
                    this.TBOInfoRowDeleting( this, new TBOInfoRowChangeEvent( ((TBOInfoRow)(e.Row)), e.Action ) );
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTBOInfoRow( TBOInfoRow row )
            {
                this.Rows.Remove( row );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema( global::System.Xml.Schema.XmlSchemaSet xs )
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TBO ds = new TBO();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal( 0 );
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add( any1 );
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal( 1 );
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add( any2 );
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add( attribute1 );
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TBOInfoDataTable";
                type.Attributes.Add( attribute2 );
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if ( xs.Contains( dsSchema.TargetNamespace ) )
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write( s1 );
                        for ( global::System.Collections.IEnumerator schemas = xs.Schemas( dsSchema.TargetNamespace ).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength( 0 );
                            schema.Write( s2 );
                            if ( (s1.Length == s2.Length) )
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for ( ; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ( (s1.Position == s1.Length) )
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ( (s1 != null) )
                        {
                            s1.Close();
                        }
                        if ( (s2 != null) )
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add( dsSchema );
                return type;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Data.Design.TypedDataSetGenerator", "2.0.0.0" )]
        public partial class MakerRow : global::System.Data.DataRow
        {

            private MakerDataTable tableMaker;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MakerRow( global::System.Data.DataRowBuilder rb )
                :
                    base( rb )
            {
                this.tableMaker = ((MakerDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image SelImg
            {
                get
                {
                    try
                    {
                        return ((global::System.Drawing.Image)(this[this.tableMaker.SelImgColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'Maker\' にある列 \'SelImg\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableMaker.SelImgColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MakerCd
            {
                get
                {
                    return ((int)(this[this.tableMaker.MakerCdColumn]));
                }
                set
                {
                    this[this.tableMaker.MakerCdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerNm
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableMaker.MakerNmColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'Maker\' にある列 \'MakerNm\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableMaker.MakerNmColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EquipGenreCode
            {
                get
                {
                    return ((int)(this[this.tableMaker.EquipGenreCodeColumn]));
                }
                set
                {
                    this[this.tableMaker.EquipGenreCodeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelImgNull()
            {
                return this.IsNull( this.tableMaker.SelImgColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelImgNull()
            {
                this[this.tableMaker.SelImgColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerNmNull()
            {
                return this.IsNull( this.tableMaker.MakerNmColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerNmNull()
            {
                this[this.tableMaker.MakerNmColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Data.Design.TypedDataSetGenerator", "2.0.0.0" )]
        public partial class StockRow : global::System.Data.DataRow
        {

            private StockDataTable tableStock;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockRow( global::System.Data.DataRowBuilder rb )
                :
                    base( rb )
            {
                this.tableStock = ((StockDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode
            {
                get
                {
                    return ((string)(this[this.tableStock.WarehouseCodeColumn]));
                }
                set
                {
                    this[this.tableStock.WarehouseCodeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCd
            {
                get
                {
                    return ((int)(this[this.tableStock.GoodsMakerCdColumn]));
                }
                set
                {
                    this[this.tableStock.GoodsMakerCdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo
            {
                get
                {
                    return ((string)(this[this.tableStock.GoodsNoColumn]));
                }
                set
                {
                    this[this.tableStock.GoodsNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ShipmentPosCnt
            {
                get
                {
                    try
                    {
                        return ((double)(this[this.tableStock.ShipmentPosCntColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'Stock\' にある列 \'ShipmentPosCnt\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableStock.ShipmentPosCntColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MinimumStockCnt
            {
                get
                {
                    try
                    {
                        return ((double)(this[this.tableStock.MinimumStockCntColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'Stock\' にある列 \'MinimumStockCnt\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableStock.MinimumStockCntColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MaximumStockCnt
            {
                get
                {
                    try
                    {
                        return ((double)(this[this.tableStock.MaximumStockCntColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'Stock\' にある列 \'MaximumStockCnt\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableStock.MaximumStockCntColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseShelfNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStock.WarehouseShelfNoColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'Stock\' にある列 \'WarehouseShelfNo\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableStock.WarehouseShelfNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStock.WarehouseNameColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'Stock\' にある列 \'WarehouseName\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableStock.WarehouseNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SelectionState
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableStock.SelectionStateColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'Stock\' にある列 \'SelectionState\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableStock.SelectionStateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image SelImage
            {
                get
                {
                    try
                    {
                        return ((global::System.Drawing.Image)(this[this.tableStock.SelImageColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'Stock\' にある列 \'SelImage\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableStock.SelImageColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SortDiv
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableStock.SortDivColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'Stock\' にある列 \'SortDiv\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableStock.SortDivColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentPosCntNull()
            {
                return this.IsNull( this.tableStock.ShipmentPosCntColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentPosCntNull()
            {
                this[this.tableStock.ShipmentPosCntColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinimumStockCntNull()
            {
                return this.IsNull( this.tableStock.MinimumStockCntColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinimumStockCntNull()
            {
                this[this.tableStock.MinimumStockCntColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaximumStockCntNull()
            {
                return this.IsNull( this.tableStock.MaximumStockCntColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaximumStockCntNull()
            {
                this[this.tableStock.MaximumStockCntColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseShelfNoNull()
            {
                return this.IsNull( this.tableStock.WarehouseShelfNoColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseShelfNoNull()
            {
                this[this.tableStock.WarehouseShelfNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNameNull()
            {
                return this.IsNull( this.tableStock.WarehouseNameColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNameNull()
            {
                this[this.tableStock.WarehouseNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectionStateNull()
            {
                return this.IsNull( this.tableStock.SelectionStateColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectionStateNull()
            {
                this[this.tableStock.SelectionStateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelImageNull()
            {
                return this.IsNull( this.tableStock.SelImageColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelImageNull()
            {
                this[this.tableStock.SelImageColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortDivNull()
            {
                return this.IsNull( this.tableStock.SortDivColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortDivNull()
            {
                this[this.tableStock.SortDivColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Data.Design.TypedDataSetGenerator", "2.0.0.0" )]
        public partial class TBOInfoRow : global::System.Data.DataRow
        {

            private TBOInfoDataTable tableTBOInfo;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TBOInfoRow( global::System.Data.DataRowBuilder rb )
                :
                    base( rb )
            {
                this.tableTBOInfo = ((TBOInfoDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMGroup
            {
                get
                {
                    return ((int)(this[this.tableTBOInfo.GoodsMGroupColumn]));
                }
                set
                {
                    this[this.tableTBOInfo.GoodsMGroupColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TbsPartsCode
            {
                get
                {
                    return ((int)(this[this.tableTBOInfo.TbsPartsCodeColumn]));
                }
                set
                {
                    this[this.tableTBOInfo.TbsPartsCodeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EquipGenreCode
            {
                get
                {
                    return ((int)(this[this.tableTBOInfo.EquipGenreCodeColumn]));
                }
                set
                {
                    this[this.tableTBOInfo.EquipGenreCodeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EquipName
            {
                get
                {
                    return ((string)(this[this.tableTBOInfo.EquipNameColumn]));
                }
                set
                {
                    this[this.tableTBOInfo.EquipNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CarInfoJoinDispOrder
            {
                get
                {
                    return ((int)(this[this.tableTBOInfo.CarInfoJoinDispOrderColumn]));
                }
                set
                {
                    this[this.tableTBOInfo.CarInfoJoinDispOrderColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JoinDestMakerCd
            {
                get
                {
                    return ((int)(this[this.tableTBOInfo.JoinDestMakerCdColumn]));
                }
                set
                {
                    this[this.tableTBOInfo.JoinDestMakerCdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JoinDestPartsNo
            {
                get
                {
                    return ((string)(this[this.tableTBOInfo.JoinDestPartsNoColumn]));
                }
                set
                {
                    this[this.tableTBOInfo.JoinDestPartsNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double JoinQty
            {
                get
                {
                    return ((double)(this[this.tableTBOInfo.JoinQtyColumn]));
                }
                set
                {
                    this[this.tableTBOInfo.JoinQtyColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EquipSpecialNote
            {
                get
                {
                    return ((string)(this[this.tableTBOInfo.EquipSpecialNoteColumn]));
                }
                set
                {
                    this[this.tableTBOInfo.EquipSpecialNoteColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrimePartsName
            {
                get
                {
                    return ((string)(this[this.tableTBOInfo.PrimePartsNameColumn]));
                }
                set
                {
                    this[this.tableTBOInfo.PrimePartsNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartsLayerCd
            {
                get
                {
                    return ((string)(this[this.tableTBOInfo.PartsLayerCdColumn]));
                }
                set
                {
                    this[this.tableTBOInfo.PartsLayerCdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrimePartsSpecialNote
            {
                get
                {
                    return ((string)(this[this.tableTBOInfo.PrimePartsSpecialNoteColumn]));
                }
                set
                {
                    this[this.tableTBOInfo.PrimePartsSpecialNoteColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PartsAttribute
            {
                get
                {
                    return ((int)(this[this.tableTBOInfo.PartsAttributeColumn]));
                }
                set
                {
                    this[this.tableTBOInfo.PartsAttributeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CatalogDeleteFlag
            {
                get
                {
                    return ((int)(this[this.tableTBOInfo.CatalogDeleteFlagColumn]));
                }
                set
                {
                    this[this.tableTBOInfo.CatalogDeleteFlagColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SelectionState
            {
                get
                {
                    try
                    {
                        return ((bool)(this[this.tableTBOInfo.SelectionStateColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'SelectionState\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.SelectionStateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JoinDestMakerNm
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableTBOInfo.JoinDestMakerNmColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'JoinDestMakerNm\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.JoinDestMakerNmColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MakerDispOrder
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTBOInfo.MakerDispOrderColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'MakerDispOrder\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.MakerDispOrderColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image SelImage
            {
                get
                {
                    try
                    {
                        return ((global::System.Drawing.Image)(this[this.tableTBOInfo.SelImageColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'SelImage\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.SelImageColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image Subst
            {
                get
                {
                    try
                    {
                        return ((global::System.Drawing.Image)(this[this.tableTBOInfo.SubstColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'Subst\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.SubstColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Genka
            {
                get
                {
                    try
                    {
                        return ((double)(this[this.tableTBOInfo.GenkaColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'Genka\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.GenkaColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Urika
            {
                get
                {
                    try
                    {
                        return ((double)(this[this.tableTBOInfo.UrikaColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'Urika\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.UrikaColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Ararigaku
            {
                get
                {
                    try
                    {
                        return ((double)(this[this.tableTBOInfo.ArarigakuColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'Ararigaku\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.ArarigakuColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Arariritu
            {
                get
                {
                    try
                    {
                        return ((double)(this[this.tableTBOInfo.ArarirituColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'Arariritu\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.ArarirituColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Price
            {
                get
                {
                    try
                    {
                        return ((double)(this[this.tableTBOInfo.PriceColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'Price\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.PriceColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Warehouse
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableTBOInfo.WarehouseColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'Warehouse\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.WarehouseColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Shelf
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableTBOInfo.ShelfColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'Shelf\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.ShelfColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockCnt
            {
                get
                {
                    try
                    {
                        return ((double)(this[this.tableTBOInfo.StockCntColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'StockCnt\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.StockCntColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kubun
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableTBOInfo.KubunColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'Kubun\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.KubunColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EquipmentDispOrder
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTBOInfo.EquipmentDispOrderColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'EquipmentDispOrder\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.EquipmentDispOrderColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableTBOInfo.WarehouseCodeColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'WarehouseCode\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.WarehouseCodeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JoinDestOrgPartsNo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableTBOInfo.JoinDestOrgPartsNoColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'JoinDestOrgPartsNo\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.JoinDestOrgPartsNoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OfferKubun
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tableTBOInfo.OfferKubunColumn]));
                    }
                    catch ( global::System.InvalidCastException e )
                    {
                        throw new global::System.Data.StrongTypingException( "テーブル \'TBOInfo\' にある列 \'OfferKubun\' の値は DBNull です。", e );
                    }
                }
                set
                {
                    this[this.tableTBOInfo.OfferKubunColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectionStateNull()
            {
                return this.IsNull( this.tableTBOInfo.SelectionStateColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectionStateNull()
            {
                this[this.tableTBOInfo.SelectionStateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoinDestMakerNmNull()
            {
                return this.IsNull( this.tableTBOInfo.JoinDestMakerNmColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoinDestMakerNmNull()
            {
                this[this.tableTBOInfo.JoinDestMakerNmColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerDispOrderNull()
            {
                return this.IsNull( this.tableTBOInfo.MakerDispOrderColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerDispOrderNull()
            {
                this[this.tableTBOInfo.MakerDispOrderColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelImageNull()
            {
                return this.IsNull( this.tableTBOInfo.SelImageColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelImageNull()
            {
                this[this.tableTBOInfo.SelImageColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubstNull()
            {
                return this.IsNull( this.tableTBOInfo.SubstColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubstNull()
            {
                this[this.tableTBOInfo.SubstColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenkaNull()
            {
                return this.IsNull( this.tableTBOInfo.GenkaColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenkaNull()
            {
                this[this.tableTBOInfo.GenkaColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUrikaNull()
            {
                return this.IsNull( this.tableTBOInfo.UrikaColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUrikaNull()
            {
                this[this.tableTBOInfo.UrikaColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArarigakuNull()
            {
                return this.IsNull( this.tableTBOInfo.ArarigakuColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArarigakuNull()
            {
                this[this.tableTBOInfo.ArarigakuColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArarirituNull()
            {
                return this.IsNull( this.tableTBOInfo.ArarirituColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArarirituNull()
            {
                this[this.tableTBOInfo.ArarirituColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull()
            {
                return this.IsNull( this.tableTBOInfo.PriceColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull()
            {
                this[this.tableTBOInfo.PriceColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNull()
            {
                return this.IsNull( this.tableTBOInfo.WarehouseColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNull()
            {
                this[this.tableTBOInfo.WarehouseColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShelfNull()
            {
                return this.IsNull( this.tableTBOInfo.ShelfColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShelfNull()
            {
                this[this.tableTBOInfo.ShelfColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockCntNull()
            {
                return this.IsNull( this.tableTBOInfo.StockCntColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockCntNull()
            {
                this[this.tableTBOInfo.StockCntColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKubunNull()
            {
                return this.IsNull( this.tableTBOInfo.KubunColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKubunNull()
            {
                this[this.tableTBOInfo.KubunColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEquipmentDispOrderNull()
            {
                return this.IsNull( this.tableTBOInfo.EquipmentDispOrderColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEquipmentDispOrderNull()
            {
                this[this.tableTBOInfo.EquipmentDispOrderColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCodeNull()
            {
                return this.IsNull( this.tableTBOInfo.WarehouseCodeColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCodeNull()
            {
                this[this.tableTBOInfo.WarehouseCodeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoinDestOrgPartsNoNull()
            {
                return this.IsNull( this.tableTBOInfo.JoinDestOrgPartsNoColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoinDestOrgPartsNoNull()
            {
                this[this.tableTBOInfo.JoinDestOrgPartsNoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfferKubunNull()
            {
                return this.IsNull( this.tableTBOInfo.OfferKubunColumn );
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfferKubunNull()
            {
                this[this.tableTBOInfo.OfferKubunColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Data.Design.TypedDataSetGenerator", "2.0.0.0" )]
        public class MakerRowChangeEvent : global::System.EventArgs
        {

            private MakerRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MakerRowChangeEvent( MakerRow row, global::System.Data.DataRowAction action )
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MakerRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Data.Design.TypedDataSetGenerator", "2.0.0.0" )]
        public class StockRowChangeEvent : global::System.EventArgs
        {

            private StockRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRowChangeEvent( StockRow row, global::System.Data.DataRowAction action )
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute( "System.Data.Design.TypedDataSetGenerator", "2.0.0.0" )]
        public class TBOInfoRowChangeEvent : global::System.EventArgs
        {

            private TBOInfoRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBOInfoRowChangeEvent( TBOInfoRow row, global::System.Data.DataRowAction action )
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TBOInfoRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591