//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.5485
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.Controller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RecBgnGdsDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RecBgnGdsDataSet : global::System.Data.DataSet {
        
        private SecCusSetDataTable tableSecCusSet;
        
        private RecBgnGdsDataTable tableRecBgnGds;
        
        private RecBgnCustTmpDataTable tableRecBgnCustTmp;
        
        private RecBgnCustDataTable tableRecBgnCust;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RecBgnGdsDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RecBgnGdsDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SecCusSet"] != null)) {
                    base.Tables.Add(new SecCusSetDataTable(ds.Tables["SecCusSet"]));
                }
                if ((ds.Tables["RecBgnGds"] != null)) {
                    base.Tables.Add(new RecBgnGdsDataTable(ds.Tables["RecBgnGds"]));
                }
                if ((ds.Tables["RecBgnCustTmp"] != null)) {
                    base.Tables.Add(new RecBgnCustTmpDataTable(ds.Tables["RecBgnCustTmp"]));
                }
                if ((ds.Tables["RecBgnCust"] != null)) {
                    base.Tables.Add(new RecBgnCustDataTable(ds.Tables["RecBgnCust"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SecCusSetDataTable SecCusSet {
            get {
                return this.tableSecCusSet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RecBgnGdsDataTable RecBgnGds {
            get {
                return this.tableRecBgnGds;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RecBgnCustTmpDataTable RecBgnCustTmp {
            get {
                return this.tableRecBgnCustTmp;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RecBgnCustDataTable RecBgnCust {
            get {
                return this.tableRecBgnCust;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RecBgnGdsDataSet cln = ((RecBgnGdsDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SecCusSet"] != null)) {
                    base.Tables.Add(new SecCusSetDataTable(ds.Tables["SecCusSet"]));
                }
                if ((ds.Tables["RecBgnGds"] != null)) {
                    base.Tables.Add(new RecBgnGdsDataTable(ds.Tables["RecBgnGds"]));
                }
                if ((ds.Tables["RecBgnCustTmp"] != null)) {
                    base.Tables.Add(new RecBgnCustTmpDataTable(ds.Tables["RecBgnCustTmp"]));
                }
                if ((ds.Tables["RecBgnCust"] != null)) {
                    base.Tables.Add(new RecBgnCustDataTable(ds.Tables["RecBgnCust"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSecCusSet = ((SecCusSetDataTable)(base.Tables["SecCusSet"]));
            if ((initTable == true)) {
                if ((this.tableSecCusSet != null)) {
                    this.tableSecCusSet.InitVars();
                }
            }
            this.tableRecBgnGds = ((RecBgnGdsDataTable)(base.Tables["RecBgnGds"]));
            if ((initTable == true)) {
                if ((this.tableRecBgnGds != null)) {
                    this.tableRecBgnGds.InitVars();
                }
            }
            this.tableRecBgnCustTmp = ((RecBgnCustTmpDataTable)(base.Tables["RecBgnCustTmp"]));
            if ((initTable == true)) {
                if ((this.tableRecBgnCustTmp != null)) {
                    this.tableRecBgnCustTmp.InitVars();
                }
            }
            this.tableRecBgnCust = ((RecBgnCustDataTable)(base.Tables["RecBgnCust"]));
            if ((initTable == true)) {
                if ((this.tableRecBgnCust != null)) {
                    this.tableRecBgnCust.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RecBgnGdsDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RecBgnGdsDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSecCusSet = new SecCusSetDataTable();
            base.Tables.Add(this.tableSecCusSet);
            this.tableRecBgnGds = new RecBgnGdsDataTable();
            base.Tables.Add(this.tableRecBgnGds);
            this.tableRecBgnCustTmp = new RecBgnCustTmpDataTable();
            base.Tables.Add(this.tableRecBgnCustTmp);
            this.tableRecBgnCust = new RecBgnCustDataTable();
            base.Tables.Add(this.tableRecBgnCust);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSecCusSet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRecBgnGds() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRecBgnCustTmp() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRecBgnCust() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RecBgnGdsDataSet ds = new RecBgnGdsDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SecCusSetRowChangeEventHandler(object sender, SecCusSetRowChangeEvent e);
        
        public delegate void RecBgnGdsRowChangeEventHandler(object sender, RecBgnGdsRowChangeEvent e);
        
        public delegate void RecBgnCustTmpRowChangeEventHandler(object sender, RecBgnCustTmpRowChangeEvent e);
        
        public delegate void RecBgnCustRowChangeEventHandler(object sender, RecBgnCustRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SecCusSetDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSelImage;
            
            private global::System.Data.DataColumn columnSelectionState;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnSectionCode;
            
            private global::System.Data.DataColumn columnSectionName;
            
            private global::System.Data.DataColumn columnMngSectionCode;
            
            private global::System.Data.DataColumn columnCnectOriginalEpCd;
            
            private global::System.Data.DataColumn columnCnectOriginalSecCd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SecCusSetDataTable() {
                this.TableName = "SecCusSet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SecCusSetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SecCusSetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelImageColumn {
                get {
                    return this.columnSelImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectionStateColumn {
                get {
                    return this.columnSelectionState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionCodeColumn {
                get {
                    return this.columnSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionNameColumn {
                get {
                    return this.columnSectionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MngSectionCodeColumn {
                get {
                    return this.columnMngSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CnectOriginalEpCdColumn {
                get {
                    return this.columnCnectOriginalEpCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CnectOriginalSecCdColumn {
                get {
                    return this.columnCnectOriginalSecCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SecCusSetRow this[int index] {
                get {
                    return ((SecCusSetRow)(this.Rows[index]));
                }
            }
            
            public event SecCusSetRowChangeEventHandler SecCusSetRowChanging;
            
            public event SecCusSetRowChangeEventHandler SecCusSetRowChanged;
            
            public event SecCusSetRowChangeEventHandler SecCusSetRowDeleting;
            
            public event SecCusSetRowChangeEventHandler SecCusSetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSecCusSetRow(SecCusSetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SecCusSetRow AddSecCusSetRow(System.Drawing.Image SelImage, bool SelectionState, string CustomerCode, string CustomerName, string SectionCode, string SectionName, string MngSectionCode, string CnectOriginalEpCd, string CnectOriginalSecCd) {
                SecCusSetRow rowSecCusSetRow = ((SecCusSetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SelImage,
                        SelectionState,
                        CustomerCode,
                        CustomerName,
                        SectionCode,
                        SectionName,
                        MngSectionCode,
                        CnectOriginalEpCd,
                        CnectOriginalSecCd};
                rowSecCusSetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSecCusSetRow);
                return rowSecCusSetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SecCusSetDataTable cln = ((SecCusSetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SecCusSetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSelImage = base.Columns["SelImage"];
                this.columnSelectionState = base.Columns["SelectionState"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnSectionCode = base.Columns["SectionCode"];
                this.columnSectionName = base.Columns["SectionName"];
                this.columnMngSectionCode = base.Columns["MngSectionCode"];
                this.columnCnectOriginalEpCd = base.Columns["CnectOriginalEpCd"];
                this.columnCnectOriginalSecCd = base.Columns["CnectOriginalSecCd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSelImage = new global::System.Data.DataColumn("SelImage", typeof(global::System.Drawing.Image), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelImage);
                this.columnSelectionState = new global::System.Data.DataColumn("SelectionState", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectionState);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnSectionCode = new global::System.Data.DataColumn("SectionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionCode);
                this.columnSectionName = new global::System.Data.DataColumn("SectionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionName);
                this.columnMngSectionCode = new global::System.Data.DataColumn("MngSectionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMngSectionCode);
                this.columnCnectOriginalEpCd = new global::System.Data.DataColumn("CnectOriginalEpCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCnectOriginalEpCd);
                this.columnCnectOriginalSecCd = new global::System.Data.DataColumn("CnectOriginalSecCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCnectOriginalSecCd);
                this.columnSelImage.Caption = "選択";
                this.columnSelectionState.DefaultValue = ((bool)(false));
                this.columnCustomerCode.AllowDBNull = false;
                this.columnCustomerCode.Caption = "得意先コード";
                this.columnCustomerCode.DefaultValue = ((string)(""));
                this.columnCustomerName.Caption = "得意先名";
                this.columnCustomerName.DefaultValue = ((string)(""));
                this.columnSectionCode.AllowDBNull = false;
                this.columnSectionCode.Caption = "拠点コード";
                this.columnSectionCode.DefaultValue = ((string)("00"));
                this.columnSectionName.Caption = "拠点名";
                this.columnSectionName.DefaultValue = ((string)(""));
                this.columnMngSectionCode.Caption = "管理拠点";
                this.columnCnectOriginalEpCd.Caption = "連結元企業";
                this.columnCnectOriginalSecCd.Caption = "連結元拠点";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SecCusSetRow NewSecCusSetRow() {
                return ((SecCusSetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SecCusSetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SecCusSetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SecCusSetRowChanged != null)) {
                    this.SecCusSetRowChanged(this, new SecCusSetRowChangeEvent(((SecCusSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SecCusSetRowChanging != null)) {
                    this.SecCusSetRowChanging(this, new SecCusSetRowChangeEvent(((SecCusSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SecCusSetRowDeleted != null)) {
                    this.SecCusSetRowDeleted(this, new SecCusSetRowChangeEvent(((SecCusSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SecCusSetRowDeleting != null)) {
                    this.SecCusSetRowDeleting(this, new SecCusSetRowChangeEvent(((SecCusSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSecCusSetRow(SecCusSetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecBgnGdsDataSet ds = new RecBgnGdsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SecCusSetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RecBgnGdsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnUpdateTime;
            
            private global::System.Data.DataColumn columnInqOtherEpCd;
            
            private global::System.Data.DataColumn columnInqOtherSecCd;
            
            private global::System.Data.DataColumn columnInqOtherSecNm;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnGoodsMakerCode;
            
            private global::System.Data.DataColumn columnGoodsMakerName;
            
            private global::System.Data.DataColumn columnGoodsComment;
            
            private global::System.Data.DataColumn columnGoodsImageDmy;
            
            private global::System.Data.DataColumn columnGoodsImage;
            
            private global::System.Data.DataColumn columnApplyStaDate;
            
            private global::System.Data.DataColumn columnApplyEndDate;
            
            private global::System.Data.DataColumn columnDisplayDivCode;
            
            private global::System.Data.DataColumn columnBrgnGoodsGrpCode;
            
            private global::System.Data.DataColumn columnBrgnGoodsGrpName;
            
            private global::System.Data.DataColumn columnMkrSuggestRtPric;
            
            private global::System.Data.DataColumn columnListPrice;
            
            private global::System.Data.DataColumn columnUnitCalcRate;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnRecBgnCust;
            
            private global::System.Data.DataColumn columnBLGoodsCode;
            
            private global::System.Data.DataColumn columnBLGroupCode;
            
            private global::System.Data.DataColumn columnCustRateGrpCode;
            
            private global::System.Data.DataColumn columnFilterGuid;
            
            private global::System.Data.DataColumn columnRowDeleteFlg;
            
            private global::System.Data.DataColumn columnModelFitDiv;
            
            private global::System.Data.DataColumn columnRowDevelopFlg;
            
            private global::System.Data.DataColumn columngoodsUnitData;
            
            private global::System.Data.DataColumn columnmkrSuggestRtPricList;
            
            private global::System.Data.DataColumn columnmkrSuggestRtPricUList;
            
            private global::System.Data.DataColumn columnCustUpdFlg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnGdsDataTable() {
                this.TableName = "RecBgnGds";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RecBgnGdsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RecBgnGdsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateTimeColumn {
                get {
                    return this.columnUpdateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOtherEpCdColumn {
                get {
                    return this.columnInqOtherEpCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOtherSecCdColumn {
                get {
                    return this.columnInqOtherSecCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOtherSecNmColumn {
                get {
                    return this.columnInqOtherSecNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCodeColumn {
                get {
                    return this.columnGoodsMakerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerNameColumn {
                get {
                    return this.columnGoodsMakerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsCommentColumn {
                get {
                    return this.columnGoodsComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsImageDmyColumn {
                get {
                    return this.columnGoodsImageDmy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsImageColumn {
                get {
                    return this.columnGoodsImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyStaDateColumn {
                get {
                    return this.columnApplyStaDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyEndDateColumn {
                get {
                    return this.columnApplyEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisplayDivCodeColumn {
                get {
                    return this.columnDisplayDivCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrgnGoodsGrpCodeColumn {
                get {
                    return this.columnBrgnGoodsGrpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrgnGoodsGrpNameColumn {
                get {
                    return this.columnBrgnGoodsGrpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MkrSuggestRtPricColumn {
                get {
                    return this.columnMkrSuggestRtPric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceColumn {
                get {
                    return this.columnListPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitCalcRateColumn {
                get {
                    return this.columnUnitCalcRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecBgnCustColumn {
                get {
                    return this.columnRecBgnCust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGoodsCodeColumn {
                get {
                    return this.columnBLGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGroupCodeColumn {
                get {
                    return this.columnBLGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustRateGrpCodeColumn {
                get {
                    return this.columnCustRateGrpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterGuidColumn {
                get {
                    return this.columnFilterGuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowDeleteFlgColumn {
                get {
                    return this.columnRowDeleteFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelFitDivColumn {
                get {
                    return this.columnModelFitDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowDevelopFlgColumn {
                get {
                    return this.columnRowDevelopFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn goodsUnitDataColumn {
                get {
                    return this.columngoodsUnitData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mkrSuggestRtPricListColumn {
                get {
                    return this.columnmkrSuggestRtPricList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mkrSuggestRtPricUListColumn {
                get {
                    return this.columnmkrSuggestRtPricUList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustUpdFlgColumn {
                get {
                    return this.columnCustUpdFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnGdsRow this[int index] {
                get {
                    return ((RecBgnGdsRow)(this.Rows[index]));
                }
            }
            
            public event RecBgnGdsRowChangeEventHandler RecBgnGdsRowChanging;
            
            public event RecBgnGdsRowChangeEventHandler RecBgnGdsRowChanged;
            
            public event RecBgnGdsRowChangeEventHandler RecBgnGdsRowDeleting;
            
            public event RecBgnGdsRowChangeEventHandler RecBgnGdsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRecBgnGdsRow(RecBgnGdsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnGdsRow AddRecBgnGdsRow(
                        int RowNo, 
                        string UpdateTime, 
                        string InqOtherEpCd, 
                        string InqOtherSecCd, 
                        string InqOtherSecNm, 
                        string GoodsNo, 
                        string GoodsName, 
                        int GoodsMakerCode, 
                        string GoodsMakerName, 
                        string GoodsComment, 
                        string GoodsImageDmy, 
                        byte[] GoodsImage, 
                        string ApplyStaDate, 
                        string ApplyEndDate, 
                        int DisplayDivCode, 
                        short BrgnGoodsGrpCode, 
                        string BrgnGoodsGrpName, 
                        long MkrSuggestRtPric, 
                        long ListPrice, 
                        double UnitCalcRate, 
                        long UnitPrice, 
                        string RecBgnCust, 
                        int BLGoodsCode, 
                        int BLGroupCode, 
                        int CustRateGrpCode, 
                        System.Guid FilterGuid, 
                        int RowDeleteFlg, 
                        short ModelFitDiv, 
                        int RowDevelopFlg, 
                        object goodsUnitData, 
                        object mkrSuggestRtPricList, 
                        object mkrSuggestRtPricUList, 
                        int CustUpdFlg) {
                RecBgnGdsRow rowRecBgnGdsRow = ((RecBgnGdsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowNo,
                        UpdateTime,
                        InqOtherEpCd,
                        InqOtherSecCd,
                        InqOtherSecNm,
                        GoodsNo,
                        GoodsName,
                        GoodsMakerCode,
                        GoodsMakerName,
                        GoodsComment,
                        GoodsImageDmy,
                        GoodsImage,
                        ApplyStaDate,
                        ApplyEndDate,
                        DisplayDivCode,
                        BrgnGoodsGrpCode,
                        BrgnGoodsGrpName,
                        MkrSuggestRtPric,
                        ListPrice,
                        UnitCalcRate,
                        UnitPrice,
                        RecBgnCust,
                        BLGoodsCode,
                        BLGroupCode,
                        CustRateGrpCode,
                        FilterGuid,
                        RowDeleteFlg,
                        ModelFitDiv,
                        RowDevelopFlg,
                        goodsUnitData,
                        mkrSuggestRtPricList,
                        mkrSuggestRtPricUList,
                        CustUpdFlg};
                rowRecBgnGdsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRecBgnGdsRow);
                return rowRecBgnGdsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RecBgnGdsDataTable cln = ((RecBgnGdsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RecBgnGdsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowNo = base.Columns["RowNo"];
                this.columnUpdateTime = base.Columns["UpdateTime"];
                this.columnInqOtherEpCd = base.Columns["InqOtherEpCd"];
                this.columnInqOtherSecCd = base.Columns["InqOtherSecCd"];
                this.columnInqOtherSecNm = base.Columns["InqOtherSecNm"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnGoodsMakerCode = base.Columns["GoodsMakerCode"];
                this.columnGoodsMakerName = base.Columns["GoodsMakerName"];
                this.columnGoodsComment = base.Columns["GoodsComment"];
                this.columnGoodsImageDmy = base.Columns["GoodsImageDmy"];
                this.columnGoodsImage = base.Columns["GoodsImage"];
                this.columnApplyStaDate = base.Columns["ApplyStaDate"];
                this.columnApplyEndDate = base.Columns["ApplyEndDate"];
                this.columnDisplayDivCode = base.Columns["DisplayDivCode"];
                this.columnBrgnGoodsGrpCode = base.Columns["BrgnGoodsGrpCode"];
                this.columnBrgnGoodsGrpName = base.Columns["BrgnGoodsGrpName"];
                this.columnMkrSuggestRtPric = base.Columns["MkrSuggestRtPric"];
                this.columnListPrice = base.Columns["ListPrice"];
                this.columnUnitCalcRate = base.Columns["UnitCalcRate"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnRecBgnCust = base.Columns["RecBgnCust"];
                this.columnBLGoodsCode = base.Columns["BLGoodsCode"];
                this.columnBLGroupCode = base.Columns["BLGroupCode"];
                this.columnCustRateGrpCode = base.Columns["CustRateGrpCode"];
                this.columnFilterGuid = base.Columns["FilterGuid"];
                this.columnRowDeleteFlg = base.Columns["RowDeleteFlg"];
                this.columnModelFitDiv = base.Columns["ModelFitDiv"];
                this.columnRowDevelopFlg = base.Columns["RowDevelopFlg"];
                this.columngoodsUnitData = base.Columns["goodsUnitData"];
                this.columnmkrSuggestRtPricList = base.Columns["mkrSuggestRtPricList"];
                this.columnmkrSuggestRtPricUList = base.Columns["mkrSuggestRtPricUList"];
                this.columnCustUpdFlg = base.Columns["CustUpdFlg"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnUpdateTime = new global::System.Data.DataColumn("UpdateTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTime);
                this.columnInqOtherEpCd = new global::System.Data.DataColumn("InqOtherEpCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOtherEpCd);
                this.columnInqOtherSecCd = new global::System.Data.DataColumn("InqOtherSecCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOtherSecCd);
                this.columnInqOtherSecNm = new global::System.Data.DataColumn("InqOtherSecNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOtherSecNm);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnGoodsMakerCode = new global::System.Data.DataColumn("GoodsMakerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCode);
                this.columnGoodsMakerName = new global::System.Data.DataColumn("GoodsMakerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerName);
                this.columnGoodsComment = new global::System.Data.DataColumn("GoodsComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsComment);
                this.columnGoodsImageDmy = new global::System.Data.DataColumn("GoodsImageDmy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsImageDmy);
                this.columnGoodsImage = new global::System.Data.DataColumn("GoodsImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsImage);
                this.columnApplyStaDate = new global::System.Data.DataColumn("ApplyStaDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyStaDate);
                this.columnApplyEndDate = new global::System.Data.DataColumn("ApplyEndDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyEndDate);
                this.columnDisplayDivCode = new global::System.Data.DataColumn("DisplayDivCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayDivCode);
                this.columnBrgnGoodsGrpCode = new global::System.Data.DataColumn("BrgnGoodsGrpCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrgnGoodsGrpCode);
                this.columnBrgnGoodsGrpName = new global::System.Data.DataColumn("BrgnGoodsGrpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrgnGoodsGrpName);
                this.columnMkrSuggestRtPric = new global::System.Data.DataColumn("MkrSuggestRtPric", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMkrSuggestRtPric);
                this.columnListPrice = new global::System.Data.DataColumn("ListPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPrice);
                this.columnUnitCalcRate = new global::System.Data.DataColumn("UnitCalcRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCalcRate);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnRecBgnCust = new global::System.Data.DataColumn("RecBgnCust", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecBgnCust);
                this.columnBLGoodsCode = new global::System.Data.DataColumn("BLGoodsCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGoodsCode);
                this.columnBLGroupCode = new global::System.Data.DataColumn("BLGroupCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGroupCode);
                this.columnCustRateGrpCode = new global::System.Data.DataColumn("CustRateGrpCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustRateGrpCode);
                this.columnFilterGuid = new global::System.Data.DataColumn("FilterGuid", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterGuid);
                this.columnRowDeleteFlg = new global::System.Data.DataColumn("RowDeleteFlg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowDeleteFlg);
                this.columnModelFitDiv = new global::System.Data.DataColumn("ModelFitDiv", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelFitDiv);
                this.columnRowDevelopFlg = new global::System.Data.DataColumn("RowDevelopFlg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowDevelopFlg);
                this.columngoodsUnitData = new global::System.Data.DataColumn("goodsUnitData", typeof(object), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngoodsUnitData);
                this.columnmkrSuggestRtPricList = new global::System.Data.DataColumn("mkrSuggestRtPricList", typeof(object), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmkrSuggestRtPricList);
                this.columnmkrSuggestRtPricUList = new global::System.Data.DataColumn("mkrSuggestRtPricUList", typeof(object), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmkrSuggestRtPricUList);
                this.columnCustUpdFlg = new global::System.Data.DataColumn("CustUpdFlg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustUpdFlg);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("RecBgnGdsKey1", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, false));
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "No.";
                this.columnRowNo.DefaultValue = ((int)(0));
                this.columnUpdateTime.AllowDBNull = false;
                this.columnUpdateTime.Caption = "削除日";
                this.columnUpdateTime.DefaultValue = ((string)(""));
                this.columnInqOtherEpCd.AllowDBNull = false;
                this.columnInqOtherEpCd.Caption = "問合せ先企業";
                this.columnInqOtherEpCd.DefaultValue = ((string)(""));
                this.columnInqOtherSecCd.AllowDBNull = false;
                this.columnInqOtherSecCd.Caption = "拠点";
                this.columnInqOtherSecCd.DefaultValue = ((string)(""));
                this.columnInqOtherSecNm.Caption = "拠点名";
                this.columnInqOtherSecNm.DefaultValue = ((string)(""));
                this.columnGoodsNo.AllowDBNull = false;
                this.columnGoodsNo.Caption = "品番";
                this.columnGoodsNo.DefaultValue = ((string)(""));
                this.columnGoodsName.Caption = "品名";
                this.columnGoodsName.DefaultValue = ((string)(""));
                this.columnGoodsMakerCode.AllowDBNull = false;
                this.columnGoodsMakerCode.Caption = "ﾒｰｶｰ";
                this.columnGoodsMakerCode.DefaultValue = ((int)(0));
                this.columnGoodsMakerName.Caption = "ﾒｰｶｰ名";
                this.columnGoodsMakerName.DefaultValue = ((string)(""));
                this.columnGoodsComment.Caption = "オススメPOINT";
                this.columnGoodsComment.DefaultValue = ((string)(""));
                this.columnGoodsImageDmy.Caption = "ｲﾒｰｼﾞ";
                this.columnGoodsImage.Caption = "ｲﾒｰｼﾞ";
                this.columnApplyStaDate.AllowDBNull = false;
                this.columnApplyStaDate.Caption = "公開開始日";
                this.columnApplyStaDate.DefaultValue = ((string)(""));
                this.columnApplyEndDate.AllowDBNull = false;
                this.columnApplyEndDate.Caption = "公開終了日";
                this.columnApplyEndDate.DefaultValue = ((string)(""));
                this.columnDisplayDivCode.Caption = "公開";
                this.columnDisplayDivCode.DefaultValue = ((int)(0));
                this.columnBrgnGoodsGrpCode.AllowDBNull = false;
                this.columnBrgnGoodsGrpCode.Caption = "ｸﾞﾙｰﾌﾟ";
                this.columnBrgnGoodsGrpCode.DefaultValue = ((short)(0));
                this.columnBrgnGoodsGrpName.Caption = "商品ｸﾞﾙｰﾌﾟ名";
                this.columnBrgnGoodsGrpName.DefaultValue = ((string)(""));
                this.columnMkrSuggestRtPric.AllowDBNull = false;
                this.columnMkrSuggestRtPric.Caption = "ﾒｰｶｰ価格";
                this.columnMkrSuggestRtPric.DefaultValue = ((long)(0));
                this.columnListPrice.AllowDBNull = false;
                this.columnListPrice.Caption = "標準価格";
                this.columnListPrice.DefaultValue = ((long)(0));
                this.columnUnitCalcRate.AllowDBNull = false;
                this.columnUnitCalcRate.Caption = "売価率";
                this.columnUnitCalcRate.DefaultValue = ((double)(0));
                this.columnUnitPrice.AllowDBNull = false;
                this.columnUnitPrice.Caption = "売単価";
                this.columnUnitPrice.DefaultValue = ((long)(0));
                this.columnRecBgnCust.Caption = "得意先別設定";
                this.columnRecBgnCust.DefaultValue = ((string)(""));
                this.columnBLGoodsCode.AllowDBNull = false;
                this.columnBLGoodsCode.Caption = "BLｺｰﾄﾞ";
                this.columnBLGoodsCode.DefaultValue = ((int)(0));
                this.columnBLGroupCode.AllowDBNull = false;
                this.columnBLGroupCode.Caption = "ｸﾞﾙｰﾌﾟ";
                this.columnBLGroupCode.DefaultValue = ((int)(0));
                this.columnCustRateGrpCode.Caption = "得意先掛率グループコード";
                this.columnCustRateGrpCode.DefaultValue = ((int)(0));
                this.columnFilterGuid.AllowDBNull = false;
                this.columnRowDeleteFlg.AllowDBNull = false;
                this.columnRowDeleteFlg.Caption = "行削除フラグ";
                this.columnRowDeleteFlg.DefaultValue = ((int)(0));
                this.columnModelFitDiv.AllowDBNull = false;
                this.columnModelFitDiv.Caption = "適合車種区分";
                this.columnModelFitDiv.DefaultValue = ((short)(0));
                this.columnRowDevelopFlg.AllowDBNull = false;
                this.columnRowDevelopFlg.Caption = "行展開フラグ";
                this.columnRowDevelopFlg.DefaultValue = ((int)(0));
                this.columnCustUpdFlg.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnGdsRow NewRecBgnGdsRow() {
                return ((RecBgnGdsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RecBgnGdsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RecBgnGdsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RecBgnGdsRowChanged != null)) {
                    this.RecBgnGdsRowChanged(this, new RecBgnGdsRowChangeEvent(((RecBgnGdsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RecBgnGdsRowChanging != null)) {
                    this.RecBgnGdsRowChanging(this, new RecBgnGdsRowChangeEvent(((RecBgnGdsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RecBgnGdsRowDeleted != null)) {
                    this.RecBgnGdsRowDeleted(this, new RecBgnGdsRowChangeEvent(((RecBgnGdsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RecBgnGdsRowDeleting != null)) {
                    this.RecBgnGdsRowDeleting(this, new RecBgnGdsRowChangeEvent(((RecBgnGdsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRecBgnGdsRow(RecBgnGdsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecBgnGdsDataSet ds = new RecBgnGdsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RecBgnGdsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RecBgnCustTmpDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnUpdateTime;
            
            private global::System.Data.DataColumn columnInqOriginalEpCd;
            
            private global::System.Data.DataColumn columnInqOriginalSecCd;
            
            private global::System.Data.DataColumn columnInqOtherSecCd;
            
            private global::System.Data.DataColumn columnInqOtherEpCd;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnGoodsMakerCode;
            
            private global::System.Data.DataColumn columnGoodsApplyStaDate;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnBrgnGoodsGrpCode;
            
            private global::System.Data.DataColumn columnMngSectionCode;
            
            private global::System.Data.DataColumn columnDisplayDivCode;
            
            private global::System.Data.DataColumn columnApplyStaDate;
            
            private global::System.Data.DataColumn columnApplyEndDate;
            
            private global::System.Data.DataColumn columnMkrSuggestRtPric;
            
            private global::System.Data.DataColumn columnListPrice;
            
            private global::System.Data.DataColumn columnUnitCalcRate;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnFilterGuid;
            
            private global::System.Data.DataColumn columnRowDeleteFlg;
            
            private global::System.Data.DataColumn columnErrorDiv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnCustTmpDataTable() {
                this.TableName = "RecBgnCustTmp";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RecBgnCustTmpDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RecBgnCustTmpDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateTimeColumn {
                get {
                    return this.columnUpdateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOriginalEpCdColumn {
                get {
                    return this.columnInqOriginalEpCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOriginalSecCdColumn {
                get {
                    return this.columnInqOriginalSecCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOtherSecCdColumn {
                get {
                    return this.columnInqOtherSecCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOtherEpCdColumn {
                get {
                    return this.columnInqOtherEpCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCodeColumn {
                get {
                    return this.columnGoodsMakerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsApplyStaDateColumn {
                get {
                    return this.columnGoodsApplyStaDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrgnGoodsGrpCodeColumn {
                get {
                    return this.columnBrgnGoodsGrpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MngSectionCodeColumn {
                get {
                    return this.columnMngSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisplayDivCodeColumn {
                get {
                    return this.columnDisplayDivCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyStaDateColumn {
                get {
                    return this.columnApplyStaDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyEndDateColumn {
                get {
                    return this.columnApplyEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MkrSuggestRtPricColumn {
                get {
                    return this.columnMkrSuggestRtPric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceColumn {
                get {
                    return this.columnListPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitCalcRateColumn {
                get {
                    return this.columnUnitCalcRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterGuidColumn {
                get {
                    return this.columnFilterGuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowDeleteFlgColumn {
                get {
                    return this.columnRowDeleteFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ErrorDivColumn {
                get {
                    return this.columnErrorDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnCustTmpRow this[int index] {
                get {
                    return ((RecBgnCustTmpRow)(this.Rows[index]));
                }
            }
            
            public event RecBgnCustTmpRowChangeEventHandler RecBgnCustTmpRowChanging;
            
            public event RecBgnCustTmpRowChangeEventHandler RecBgnCustTmpRowChanged;
            
            public event RecBgnCustTmpRowChangeEventHandler RecBgnCustTmpRowDeleting;
            
            public event RecBgnCustTmpRowChangeEventHandler RecBgnCustTmpRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRecBgnCustTmpRow(RecBgnCustTmpRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnCustTmpRow AddRecBgnCustTmpRow(
                        int RowNo, 
                        string UpdateTime, 
                        string InqOriginalEpCd, 
                        string InqOriginalSecCd, 
                        string InqOtherSecCd, 
                        string InqOtherEpCd, 
                        string GoodsNo, 
                        int GoodsMakerCode, 
                        int GoodsApplyStaDate, 
                        string CustomerCode, 
                        short BrgnGoodsGrpCode, 
                        string MngSectionCode, 
                        int DisplayDivCode, 
                        int ApplyStaDate, 
                        int ApplyEndDate, 
                        long MkrSuggestRtPric, 
                        long ListPrice, 
                        double UnitCalcRate, 
                        long UnitPrice, 
                        System.Guid FilterGuid, 
                        int RowDeleteFlg, 
                        int ErrorDiv) {
                RecBgnCustTmpRow rowRecBgnCustTmpRow = ((RecBgnCustTmpRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowNo,
                        UpdateTime,
                        InqOriginalEpCd,
                        InqOriginalSecCd,
                        InqOtherSecCd,
                        InqOtherEpCd,
                        GoodsNo,
                        GoodsMakerCode,
                        GoodsApplyStaDate,
                        CustomerCode,
                        BrgnGoodsGrpCode,
                        MngSectionCode,
                        DisplayDivCode,
                        ApplyStaDate,
                        ApplyEndDate,
                        MkrSuggestRtPric,
                        ListPrice,
                        UnitCalcRate,
                        UnitPrice,
                        FilterGuid,
                        RowDeleteFlg,
                        ErrorDiv};
                rowRecBgnCustTmpRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRecBgnCustTmpRow);
                return rowRecBgnCustTmpRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RecBgnCustTmpDataTable cln = ((RecBgnCustTmpDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RecBgnCustTmpDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowNo = base.Columns["RowNo"];
                this.columnUpdateTime = base.Columns["UpdateTime"];
                this.columnInqOriginalEpCd = base.Columns["InqOriginalEpCd"];
                this.columnInqOriginalSecCd = base.Columns["InqOriginalSecCd"];
                this.columnInqOtherSecCd = base.Columns["InqOtherSecCd"];
                this.columnInqOtherEpCd = base.Columns["InqOtherEpCd"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnGoodsMakerCode = base.Columns["GoodsMakerCode"];
                this.columnGoodsApplyStaDate = base.Columns["GoodsApplyStaDate"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnBrgnGoodsGrpCode = base.Columns["BrgnGoodsGrpCode"];
                this.columnMngSectionCode = base.Columns["MngSectionCode"];
                this.columnDisplayDivCode = base.Columns["DisplayDivCode"];
                this.columnApplyStaDate = base.Columns["ApplyStaDate"];
                this.columnApplyEndDate = base.Columns["ApplyEndDate"];
                this.columnMkrSuggestRtPric = base.Columns["MkrSuggestRtPric"];
                this.columnListPrice = base.Columns["ListPrice"];
                this.columnUnitCalcRate = base.Columns["UnitCalcRate"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnFilterGuid = base.Columns["FilterGuid"];
                this.columnRowDeleteFlg = base.Columns["RowDeleteFlg"];
                this.columnErrorDiv = base.Columns["ErrorDiv"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnUpdateTime = new global::System.Data.DataColumn("UpdateTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTime);
                this.columnInqOriginalEpCd = new global::System.Data.DataColumn("InqOriginalEpCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOriginalEpCd);
                this.columnInqOriginalSecCd = new global::System.Data.DataColumn("InqOriginalSecCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOriginalSecCd);
                this.columnInqOtherSecCd = new global::System.Data.DataColumn("InqOtherSecCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOtherSecCd);
                this.columnInqOtherEpCd = new global::System.Data.DataColumn("InqOtherEpCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOtherEpCd);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnGoodsMakerCode = new global::System.Data.DataColumn("GoodsMakerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCode);
                this.columnGoodsApplyStaDate = new global::System.Data.DataColumn("GoodsApplyStaDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsApplyStaDate);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnBrgnGoodsGrpCode = new global::System.Data.DataColumn("BrgnGoodsGrpCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrgnGoodsGrpCode);
                this.columnMngSectionCode = new global::System.Data.DataColumn("MngSectionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMngSectionCode);
                this.columnDisplayDivCode = new global::System.Data.DataColumn("DisplayDivCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayDivCode);
                this.columnApplyStaDate = new global::System.Data.DataColumn("ApplyStaDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyStaDate);
                this.columnApplyEndDate = new global::System.Data.DataColumn("ApplyEndDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyEndDate);
                this.columnMkrSuggestRtPric = new global::System.Data.DataColumn("MkrSuggestRtPric", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMkrSuggestRtPric);
                this.columnListPrice = new global::System.Data.DataColumn("ListPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPrice);
                this.columnUnitCalcRate = new global::System.Data.DataColumn("UnitCalcRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCalcRate);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnFilterGuid = new global::System.Data.DataColumn("FilterGuid", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterGuid);
                this.columnRowDeleteFlg = new global::System.Data.DataColumn("RowDeleteFlg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowDeleteFlg);
                this.columnErrorDiv = new global::System.Data.DataColumn("ErrorDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnErrorDiv);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("RecBgnGdsKey1", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, false));
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "No.";
                this.columnRowNo.DefaultValue = ((int)(0));
                this.columnUpdateTime.AllowDBNull = false;
                this.columnUpdateTime.Caption = "削除日";
                this.columnUpdateTime.DefaultValue = ((string)(""));
                this.columnInqOriginalEpCd.AllowDBNull = false;
                this.columnInqOriginalEpCd.Caption = "問合せ元企業";
                this.columnInqOriginalEpCd.DefaultValue = ((string)(""));
                this.columnInqOriginalSecCd.AllowDBNull = false;
                this.columnInqOriginalSecCd.Caption = "問合せ元拠点";
                this.columnInqOriginalSecCd.DefaultValue = ((string)(""));
                this.columnInqOtherSecCd.AllowDBNull = false;
                this.columnInqOtherSecCd.Caption = "拠点";
                this.columnInqOtherSecCd.DefaultValue = ((string)(""));
                this.columnInqOtherEpCd.AllowDBNull = false;
                this.columnInqOtherEpCd.Caption = "問合せ先企業";
                this.columnInqOtherEpCd.DefaultValue = ((string)(""));
                this.columnGoodsNo.AllowDBNull = false;
                this.columnGoodsNo.Caption = "品番";
                this.columnGoodsNo.DefaultValue = ((string)(""));
                this.columnGoodsMakerCode.AllowDBNull = false;
                this.columnGoodsMakerCode.Caption = "ﾒｰｶｰ";
                this.columnGoodsMakerCode.DefaultValue = ((int)(0));
                this.columnGoodsApplyStaDate.Caption = "商品適用開始日";
                this.columnGoodsApplyStaDate.DefaultValue = ((int)(0));
                this.columnCustomerCode.AllowDBNull = false;
                this.columnCustomerCode.Caption = "得意先";
                this.columnCustomerCode.DefaultValue = ((string)(""));
                this.columnBrgnGoodsGrpCode.AllowDBNull = false;
                this.columnBrgnGoodsGrpCode.Caption = "ｸﾞﾙｰﾌﾟ";
                this.columnBrgnGoodsGrpCode.DefaultValue = ((short)(0));
                this.columnMngSectionCode.Caption = "管理拠点コード";
                this.columnMngSectionCode.DefaultValue = ((string)("00"));
                this.columnDisplayDivCode.Caption = "公開";
                this.columnDisplayDivCode.DefaultValue = ((int)(0));
                this.columnApplyStaDate.Caption = "公開開始日";
                this.columnApplyStaDate.DefaultValue = ((int)(0));
                this.columnApplyEndDate.Caption = "公開終了日";
                this.columnApplyEndDate.DefaultValue = ((int)(0));
                this.columnMkrSuggestRtPric.AllowDBNull = false;
                this.columnMkrSuggestRtPric.Caption = "ﾒｰｶｰ希望小売価格";
                this.columnMkrSuggestRtPric.DefaultValue = ((long)(0));
                this.columnListPrice.AllowDBNull = false;
                this.columnListPrice.Caption = "標準価格";
                this.columnListPrice.DefaultValue = ((long)(0));
                this.columnUnitCalcRate.AllowDBNull = false;
                this.columnUnitCalcRate.Caption = "売価率";
                this.columnUnitCalcRate.DefaultValue = ((double)(0));
                this.columnUnitPrice.AllowDBNull = false;
                this.columnUnitPrice.Caption = "売単価";
                this.columnUnitPrice.DefaultValue = ((long)(0));
                this.columnFilterGuid.AllowDBNull = false;
                this.columnRowDeleteFlg.AllowDBNull = false;
                this.columnRowDeleteFlg.Caption = "行削除フラグ";
                this.columnRowDeleteFlg.DefaultValue = ((int)(0));
                this.columnErrorDiv.AllowDBNull = false;
                this.columnErrorDiv.Caption = "行展開フラグ";
                this.columnErrorDiv.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnCustTmpRow NewRecBgnCustTmpRow() {
                return ((RecBgnCustTmpRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RecBgnCustTmpRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RecBgnCustTmpRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RecBgnCustTmpRowChanged != null)) {
                    this.RecBgnCustTmpRowChanged(this, new RecBgnCustTmpRowChangeEvent(((RecBgnCustTmpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RecBgnCustTmpRowChanging != null)) {
                    this.RecBgnCustTmpRowChanging(this, new RecBgnCustTmpRowChangeEvent(((RecBgnCustTmpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RecBgnCustTmpRowDeleted != null)) {
                    this.RecBgnCustTmpRowDeleted(this, new RecBgnCustTmpRowChangeEvent(((RecBgnCustTmpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RecBgnCustTmpRowDeleting != null)) {
                    this.RecBgnCustTmpRowDeleting(this, new RecBgnCustTmpRowChangeEvent(((RecBgnCustTmpRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRecBgnCustTmpRow(RecBgnCustTmpRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecBgnGdsDataSet ds = new RecBgnGdsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RecBgnCustTmpDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RecBgnCustDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnUpdateTime;
            
            private global::System.Data.DataColumn columnInqOriginalEpCd;
            
            private global::System.Data.DataColumn columnInqOriginalSecCd;
            
            private global::System.Data.DataColumn columnInqOtherSecCd;
            
            private global::System.Data.DataColumn columnInqOtherEpCd;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnGoodsMakerCode;
            
            private global::System.Data.DataColumn columnGoodsApplyStaDate;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnApplyStaDate;
            
            private global::System.Data.DataColumn columnApplyEndDate;
            
            private global::System.Data.DataColumn columnDisplayDivCode;
            
            private global::System.Data.DataColumn columnBrgnGoodsGrpCode;
            
            private global::System.Data.DataColumn columnBrgnGoodsGrpName;
            
            private global::System.Data.DataColumn columnMkrSuggestRtPric;
            
            private global::System.Data.DataColumn columnListPrice;
            
            private global::System.Data.DataColumn columnUnitCalcRate;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnMngSectionCode;
            
            private global::System.Data.DataColumn columnFilterGuid;
            
            private global::System.Data.DataColumn columnRowDeleteFlg;
            
            private global::System.Data.DataColumn columnRowDevelopFlg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnCustDataTable() {
                this.TableName = "RecBgnCust";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RecBgnCustDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RecBgnCustDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateTimeColumn {
                get {
                    return this.columnUpdateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOriginalEpCdColumn {
                get {
                    return this.columnInqOriginalEpCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOriginalSecCdColumn {
                get {
                    return this.columnInqOriginalSecCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOtherSecCdColumn {
                get {
                    return this.columnInqOtherSecCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOtherEpCdColumn {
                get {
                    return this.columnInqOtherEpCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCodeColumn {
                get {
                    return this.columnGoodsMakerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsApplyStaDateColumn {
                get {
                    return this.columnGoodsApplyStaDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyStaDateColumn {
                get {
                    return this.columnApplyStaDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyEndDateColumn {
                get {
                    return this.columnApplyEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisplayDivCodeColumn {
                get {
                    return this.columnDisplayDivCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrgnGoodsGrpCodeColumn {
                get {
                    return this.columnBrgnGoodsGrpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrgnGoodsGrpNameColumn {
                get {
                    return this.columnBrgnGoodsGrpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MkrSuggestRtPricColumn {
                get {
                    return this.columnMkrSuggestRtPric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceColumn {
                get {
                    return this.columnListPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitCalcRateColumn {
                get {
                    return this.columnUnitCalcRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MngSectionCodeColumn {
                get {
                    return this.columnMngSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterGuidColumn {
                get {
                    return this.columnFilterGuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowDeleteFlgColumn {
                get {
                    return this.columnRowDeleteFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowDevelopFlgColumn {
                get {
                    return this.columnRowDevelopFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnCustRow this[int index] {
                get {
                    return ((RecBgnCustRow)(this.Rows[index]));
                }
            }
            
            public event RecBgnCustRowChangeEventHandler RecBgnCustRowChanging;
            
            public event RecBgnCustRowChangeEventHandler RecBgnCustRowChanged;
            
            public event RecBgnCustRowChangeEventHandler RecBgnCustRowDeleting;
            
            public event RecBgnCustRowChangeEventHandler RecBgnCustRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRecBgnCustRow(RecBgnCustRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnCustRow AddRecBgnCustRow(
                        int RowNo, 
                        string UpdateTime, 
                        string InqOriginalEpCd, 
                        string InqOriginalSecCd, 
                        string InqOtherSecCd, 
                        string InqOtherEpCd, 
                        string GoodsNo, 
                        int GoodsMakerCode, 
                        int GoodsApplyStaDate, 
                        string CustomerCode, 
                        string CustomerName, 
                        string ApplyStaDate, 
                        string ApplyEndDate, 
                        int DisplayDivCode, 
                        short BrgnGoodsGrpCode, 
                        string BrgnGoodsGrpName, 
                        long MkrSuggestRtPric, 
                        long ListPrice, 
                        double UnitCalcRate, 
                        long UnitPrice, 
                        string MngSectionCode, 
                        System.Guid FilterGuid, 
                        int RowDeleteFlg, 
                        short RowDevelopFlg) {
                RecBgnCustRow rowRecBgnCustRow = ((RecBgnCustRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowNo,
                        UpdateTime,
                        InqOriginalEpCd,
                        InqOriginalSecCd,
                        InqOtherSecCd,
                        InqOtherEpCd,
                        GoodsNo,
                        GoodsMakerCode,
                        GoodsApplyStaDate,
                        CustomerCode,
                        CustomerName,
                        ApplyStaDate,
                        ApplyEndDate,
                        DisplayDivCode,
                        BrgnGoodsGrpCode,
                        BrgnGoodsGrpName,
                        MkrSuggestRtPric,
                        ListPrice,
                        UnitCalcRate,
                        UnitPrice,
                        MngSectionCode,
                        FilterGuid,
                        RowDeleteFlg,
                        RowDevelopFlg};
                rowRecBgnCustRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRecBgnCustRow);
                return rowRecBgnCustRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RecBgnCustDataTable cln = ((RecBgnCustDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RecBgnCustDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowNo = base.Columns["RowNo"];
                this.columnUpdateTime = base.Columns["UpdateTime"];
                this.columnInqOriginalEpCd = base.Columns["InqOriginalEpCd"];
                this.columnInqOriginalSecCd = base.Columns["InqOriginalSecCd"];
                this.columnInqOtherSecCd = base.Columns["InqOtherSecCd"];
                this.columnInqOtherEpCd = base.Columns["InqOtherEpCd"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnGoodsMakerCode = base.Columns["GoodsMakerCode"];
                this.columnGoodsApplyStaDate = base.Columns["GoodsApplyStaDate"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnApplyStaDate = base.Columns["ApplyStaDate"];
                this.columnApplyEndDate = base.Columns["ApplyEndDate"];
                this.columnDisplayDivCode = base.Columns["DisplayDivCode"];
                this.columnBrgnGoodsGrpCode = base.Columns["BrgnGoodsGrpCode"];
                this.columnBrgnGoodsGrpName = base.Columns["BrgnGoodsGrpName"];
                this.columnMkrSuggestRtPric = base.Columns["MkrSuggestRtPric"];
                this.columnListPrice = base.Columns["ListPrice"];
                this.columnUnitCalcRate = base.Columns["UnitCalcRate"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnMngSectionCode = base.Columns["MngSectionCode"];
                this.columnFilterGuid = base.Columns["FilterGuid"];
                this.columnRowDeleteFlg = base.Columns["RowDeleteFlg"];
                this.columnRowDevelopFlg = base.Columns["RowDevelopFlg"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnUpdateTime = new global::System.Data.DataColumn("UpdateTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTime);
                this.columnInqOriginalEpCd = new global::System.Data.DataColumn("InqOriginalEpCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOriginalEpCd);
                this.columnInqOriginalSecCd = new global::System.Data.DataColumn("InqOriginalSecCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOriginalSecCd);
                this.columnInqOtherSecCd = new global::System.Data.DataColumn("InqOtherSecCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOtherSecCd);
                this.columnInqOtherEpCd = new global::System.Data.DataColumn("InqOtherEpCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOtherEpCd);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnGoodsMakerCode = new global::System.Data.DataColumn("GoodsMakerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCode);
                this.columnGoodsApplyStaDate = new global::System.Data.DataColumn("GoodsApplyStaDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsApplyStaDate);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnApplyStaDate = new global::System.Data.DataColumn("ApplyStaDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyStaDate);
                this.columnApplyEndDate = new global::System.Data.DataColumn("ApplyEndDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyEndDate);
                this.columnDisplayDivCode = new global::System.Data.DataColumn("DisplayDivCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayDivCode);
                this.columnBrgnGoodsGrpCode = new global::System.Data.DataColumn("BrgnGoodsGrpCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrgnGoodsGrpCode);
                this.columnBrgnGoodsGrpName = new global::System.Data.DataColumn("BrgnGoodsGrpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrgnGoodsGrpName);
                this.columnMkrSuggestRtPric = new global::System.Data.DataColumn("MkrSuggestRtPric", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMkrSuggestRtPric);
                this.columnListPrice = new global::System.Data.DataColumn("ListPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPrice);
                this.columnUnitCalcRate = new global::System.Data.DataColumn("UnitCalcRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCalcRate);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnMngSectionCode = new global::System.Data.DataColumn("MngSectionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMngSectionCode);
                this.columnFilterGuid = new global::System.Data.DataColumn("FilterGuid", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterGuid);
                this.columnRowDeleteFlg = new global::System.Data.DataColumn("RowDeleteFlg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowDeleteFlg);
                this.columnRowDevelopFlg = new global::System.Data.DataColumn("RowDevelopFlg", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowDevelopFlg);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("RecBgnGdsKey1", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, false));
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "No.";
                this.columnRowNo.DefaultValue = ((int)(0));
                this.columnUpdateTime.AllowDBNull = false;
                this.columnUpdateTime.Caption = "削除日";
                this.columnUpdateTime.DefaultValue = ((string)(""));
                this.columnInqOriginalEpCd.AllowDBNull = false;
                this.columnInqOriginalEpCd.Caption = "問合せ元企業";
                this.columnInqOriginalEpCd.DefaultValue = ((string)(""));
                this.columnInqOriginalSecCd.AllowDBNull = false;
                this.columnInqOriginalSecCd.Caption = "問合せ元拠点";
                this.columnInqOriginalSecCd.DefaultValue = ((string)(""));
                this.columnInqOtherSecCd.AllowDBNull = false;
                this.columnInqOtherSecCd.Caption = "拠点";
                this.columnInqOtherSecCd.DefaultValue = ((string)(""));
                this.columnInqOtherEpCd.AllowDBNull = false;
                this.columnInqOtherEpCd.Caption = "問合せ先企業";
                this.columnInqOtherEpCd.DefaultValue = ((string)(""));
                this.columnGoodsNo.AllowDBNull = false;
                this.columnGoodsNo.Caption = "品番";
                this.columnGoodsNo.DefaultValue = ((string)(""));
                this.columnGoodsMakerCode.AllowDBNull = false;
                this.columnGoodsMakerCode.Caption = "ﾒｰｶｰ";
                this.columnGoodsMakerCode.DefaultValue = ((int)(0));
                this.columnGoodsApplyStaDate.Caption = "商品適用開始日";
                this.columnGoodsApplyStaDate.DefaultValue = ((int)(0));
                this.columnCustomerCode.AllowDBNull = false;
                this.columnCustomerCode.Caption = "得意先";
                this.columnCustomerCode.DefaultValue = ((string)(""));
                this.columnCustomerName.Caption = "得意先名";
                this.columnApplyStaDate.Caption = "公開開始日";
                this.columnApplyStaDate.DefaultValue = ((string)(""));
                this.columnApplyEndDate.Caption = "公開終了日";
                this.columnApplyEndDate.DefaultValue = ((string)(""));
                this.columnDisplayDivCode.Caption = "公開";
                this.columnDisplayDivCode.DefaultValue = ((int)(0));
                this.columnBrgnGoodsGrpCode.AllowDBNull = false;
                this.columnBrgnGoodsGrpCode.Caption = "ｸﾞﾙｰﾌﾟ";
                this.columnBrgnGoodsGrpCode.DefaultValue = ((short)(0));
                this.columnBrgnGoodsGrpName.Caption = "商品ｸﾞﾙｰﾌﾟ名";
                this.columnMkrSuggestRtPric.AllowDBNull = false;
                this.columnMkrSuggestRtPric.Caption = "ﾒｰｶｰ価格";
                this.columnMkrSuggestRtPric.DefaultValue = ((long)(0));
                this.columnListPrice.AllowDBNull = false;
                this.columnListPrice.Caption = "標準価格";
                this.columnListPrice.DefaultValue = ((long)(0));
                this.columnUnitCalcRate.AllowDBNull = false;
                this.columnUnitCalcRate.Caption = "売価率";
                this.columnUnitCalcRate.DefaultValue = ((double)(0));
                this.columnUnitPrice.AllowDBNull = false;
                this.columnUnitPrice.Caption = "売単価";
                this.columnUnitPrice.DefaultValue = ((long)(0));
                this.columnMngSectionCode.Caption = "管理拠点コード";
                this.columnMngSectionCode.DefaultValue = ((string)("00"));
                this.columnFilterGuid.AllowDBNull = false;
                this.columnRowDeleteFlg.AllowDBNull = false;
                this.columnRowDeleteFlg.Caption = "行削除フラグ";
                this.columnRowDeleteFlg.DefaultValue = ((int)(0));
                this.columnRowDevelopFlg.DefaultValue = ((short)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnCustRow NewRecBgnCustRow() {
                return ((RecBgnCustRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RecBgnCustRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RecBgnCustRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RecBgnCustRowChanged != null)) {
                    this.RecBgnCustRowChanged(this, new RecBgnCustRowChangeEvent(((RecBgnCustRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RecBgnCustRowChanging != null)) {
                    this.RecBgnCustRowChanging(this, new RecBgnCustRowChangeEvent(((RecBgnCustRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RecBgnCustRowDeleted != null)) {
                    this.RecBgnCustRowDeleted(this, new RecBgnCustRowChangeEvent(((RecBgnCustRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RecBgnCustRowDeleting != null)) {
                    this.RecBgnCustRowDeleting(this, new RecBgnCustRowChangeEvent(((RecBgnCustRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRecBgnCustRow(RecBgnCustRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecBgnGdsDataSet ds = new RecBgnGdsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RecBgnCustDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SecCusSetRow : global::System.Data.DataRow {
            
            private SecCusSetDataTable tableSecCusSet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SecCusSetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSecCusSet = ((SecCusSetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image SelImage {
                get {
                    try {
                        return ((global::System.Drawing.Image)(this[this.tableSecCusSet.SelImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SecCusSet\' にある列 \'SelImage\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSecCusSet.SelImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SelectionState {
                get {
                    try {
                        return ((bool)(this[this.tableSecCusSet.SelectionStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SecCusSet\' にある列 \'SelectionState\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSecCusSet.SelectionStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    return ((string)(this[this.tableSecCusSet.CustomerCodeColumn]));
                }
                set {
                    this[this.tableSecCusSet.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableSecCusSet.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SecCusSet\' にある列 \'CustomerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSecCusSet.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionCode {
                get {
                    return ((string)(this[this.tableSecCusSet.SectionCodeColumn]));
                }
                set {
                    this[this.tableSecCusSet.SectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionName {
                get {
                    try {
                        return ((string)(this[this.tableSecCusSet.SectionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SecCusSet\' にある列 \'SectionName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSecCusSet.SectionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MngSectionCode {
                get {
                    try {
                        return ((string)(this[this.tableSecCusSet.MngSectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SecCusSet\' にある列 \'MngSectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSecCusSet.MngSectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CnectOriginalEpCd {
                get {
                    try {
                        return ((string)(this[this.tableSecCusSet.CnectOriginalEpCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SecCusSet\' にある列 \'CnectOriginalEpCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSecCusSet.CnectOriginalEpCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CnectOriginalSecCd {
                get {
                    try {
                        return ((string)(this[this.tableSecCusSet.CnectOriginalSecCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SecCusSet\' にある列 \'CnectOriginalSecCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSecCusSet.CnectOriginalSecCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelImageNull() {
                return this.IsNull(this.tableSecCusSet.SelImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelImageNull() {
                this[this.tableSecCusSet.SelImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectionStateNull() {
                return this.IsNull(this.tableSecCusSet.SelectionStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectionStateNull() {
                this[this.tableSecCusSet.SelectionStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableSecCusSet.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableSecCusSet.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNameNull() {
                return this.IsNull(this.tableSecCusSet.SectionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNameNull() {
                this[this.tableSecCusSet.SectionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMngSectionCodeNull() {
                return this.IsNull(this.tableSecCusSet.MngSectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMngSectionCodeNull() {
                this[this.tableSecCusSet.MngSectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCnectOriginalEpCdNull() {
                return this.IsNull(this.tableSecCusSet.CnectOriginalEpCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCnectOriginalEpCdNull() {
                this[this.tableSecCusSet.CnectOriginalEpCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCnectOriginalSecCdNull() {
                return this.IsNull(this.tableSecCusSet.CnectOriginalSecCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCnectOriginalSecCdNull() {
                this[this.tableSecCusSet.CnectOriginalSecCdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RecBgnGdsRow : global::System.Data.DataRow {
            
            private RecBgnGdsDataTable tableRecBgnGds;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RecBgnGdsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRecBgnGds = ((RecBgnGdsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableRecBgnGds.RowNoColumn]));
                }
                set {
                    this[this.tableRecBgnGds.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdateTime {
                get {
                    return ((string)(this[this.tableRecBgnGds.UpdateTimeColumn]));
                }
                set {
                    this[this.tableRecBgnGds.UpdateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOtherEpCd {
                get {
                    return ((string)(this[this.tableRecBgnGds.InqOtherEpCdColumn]));
                }
                set {
                    this[this.tableRecBgnGds.InqOtherEpCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOtherSecCd {
                get {
                    return ((string)(this[this.tableRecBgnGds.InqOtherSecCdColumn]));
                }
                set {
                    this[this.tableRecBgnGds.InqOtherSecCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOtherSecNm {
                get {
                    try {
                        return ((string)(this[this.tableRecBgnGds.InqOtherSecNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnGds\' にある列 \'InqOtherSecNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnGds.InqOtherSecNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    return ((string)(this[this.tableRecBgnGds.GoodsNoColumn]));
                }
                set {
                    this[this.tableRecBgnGds.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableRecBgnGds.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnGds\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnGds.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCode {
                get {
                    return ((int)(this[this.tableRecBgnGds.GoodsMakerCodeColumn]));
                }
                set {
                    this[this.tableRecBgnGds.GoodsMakerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsMakerName {
                get {
                    try {
                        return ((string)(this[this.tableRecBgnGds.GoodsMakerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnGds\' にある列 \'GoodsMakerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnGds.GoodsMakerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsComment {
                get {
                    try {
                        return ((string)(this[this.tableRecBgnGds.GoodsCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnGds\' にある列 \'GoodsComment\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnGds.GoodsCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsImageDmy {
                get {
                    try {
                        return ((string)(this[this.tableRecBgnGds.GoodsImageDmyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnGds\' にある列 \'GoodsImageDmy\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnGds.GoodsImageDmyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] GoodsImage {
                get {
                    try {
                        return ((byte[])(this[this.tableRecBgnGds.GoodsImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnGds\' にある列 \'GoodsImage\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnGds.GoodsImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplyStaDate {
                get {
                    return ((string)(this[this.tableRecBgnGds.ApplyStaDateColumn]));
                }
                set {
                    this[this.tableRecBgnGds.ApplyStaDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplyEndDate {
                get {
                    return ((string)(this[this.tableRecBgnGds.ApplyEndDateColumn]));
                }
                set {
                    this[this.tableRecBgnGds.ApplyEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DisplayDivCode {
                get {
                    try {
                        return ((int)(this[this.tableRecBgnGds.DisplayDivCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnGds\' にある列 \'DisplayDivCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnGds.DisplayDivCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short BrgnGoodsGrpCode {
                get {
                    return ((short)(this[this.tableRecBgnGds.BrgnGoodsGrpCodeColumn]));
                }
                set {
                    this[this.tableRecBgnGds.BrgnGoodsGrpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BrgnGoodsGrpName {
                get {
                    try {
                        return ((string)(this[this.tableRecBgnGds.BrgnGoodsGrpNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnGds\' にある列 \'BrgnGoodsGrpName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnGds.BrgnGoodsGrpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MkrSuggestRtPric {
                get {
                    return ((long)(this[this.tableRecBgnGds.MkrSuggestRtPricColumn]));
                }
                set {
                    this[this.tableRecBgnGds.MkrSuggestRtPricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ListPrice {
                get {
                    return ((long)(this[this.tableRecBgnGds.ListPriceColumn]));
                }
                set {
                    this[this.tableRecBgnGds.ListPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UnitCalcRate {
                get {
                    return ((double)(this[this.tableRecBgnGds.UnitCalcRateColumn]));
                }
                set {
                    this[this.tableRecBgnGds.UnitCalcRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long UnitPrice {
                get {
                    return ((long)(this[this.tableRecBgnGds.UnitPriceColumn]));
                }
                set {
                    this[this.tableRecBgnGds.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecBgnCust {
                get {
                    try {
                        return ((string)(this[this.tableRecBgnGds.RecBgnCustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnGds\' にある列 \'RecBgnCust\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnGds.RecBgnCustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BLGoodsCode {
                get {
                    return ((int)(this[this.tableRecBgnGds.BLGoodsCodeColumn]));
                }
                set {
                    this[this.tableRecBgnGds.BLGoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BLGroupCode {
                get {
                    return ((int)(this[this.tableRecBgnGds.BLGroupCodeColumn]));
                }
                set {
                    this[this.tableRecBgnGds.BLGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustRateGrpCode {
                get {
                    try {
                        return ((int)(this[this.tableRecBgnGds.CustRateGrpCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnGds\' にある列 \'CustRateGrpCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnGds.CustRateGrpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid FilterGuid {
                get {
                    return ((global::System.Guid)(this[this.tableRecBgnGds.FilterGuidColumn]));
                }
                set {
                    this[this.tableRecBgnGds.FilterGuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowDeleteFlg {
                get {
                    return ((int)(this[this.tableRecBgnGds.RowDeleteFlgColumn]));
                }
                set {
                    this[this.tableRecBgnGds.RowDeleteFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ModelFitDiv {
                get {
                    return ((short)(this[this.tableRecBgnGds.ModelFitDivColumn]));
                }
                set {
                    this[this.tableRecBgnGds.ModelFitDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowDevelopFlg {
                get {
                    return ((int)(this[this.tableRecBgnGds.RowDevelopFlgColumn]));
                }
                set {
                    this[this.tableRecBgnGds.RowDevelopFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public object goodsUnitData {
                get {
                    try {
                        return ((object)(this[this.tableRecBgnGds.goodsUnitDataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnGds\' にある列 \'goodsUnitData\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnGds.goodsUnitDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public object mkrSuggestRtPricList {
                get {
                    try {
                        return ((object)(this[this.tableRecBgnGds.mkrSuggestRtPricListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnGds\' にある列 \'mkrSuggestRtPricList\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnGds.mkrSuggestRtPricListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public object mkrSuggestRtPricUList {
                get {
                    try {
                        return ((object)(this[this.tableRecBgnGds.mkrSuggestRtPricUListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnGds\' にある列 \'mkrSuggestRtPricUList\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnGds.mkrSuggestRtPricUListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustUpdFlg {
                get {
                    try {
                        return ((int)(this[this.tableRecBgnGds.CustUpdFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnGds\' にある列 \'CustUpdFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnGds.CustUpdFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInqOtherSecNmNull() {
                return this.IsNull(this.tableRecBgnGds.InqOtherSecNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInqOtherSecNmNull() {
                this[this.tableRecBgnGds.InqOtherSecNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableRecBgnGds.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableRecBgnGds.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMakerNameNull() {
                return this.IsNull(this.tableRecBgnGds.GoodsMakerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMakerNameNull() {
                this[this.tableRecBgnGds.GoodsMakerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsCommentNull() {
                return this.IsNull(this.tableRecBgnGds.GoodsCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsCommentNull() {
                this[this.tableRecBgnGds.GoodsCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsImageDmyNull() {
                return this.IsNull(this.tableRecBgnGds.GoodsImageDmyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsImageDmyNull() {
                this[this.tableRecBgnGds.GoodsImageDmyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsImageNull() {
                return this.IsNull(this.tableRecBgnGds.GoodsImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsImageNull() {
                this[this.tableRecBgnGds.GoodsImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisplayDivCodeNull() {
                return this.IsNull(this.tableRecBgnGds.DisplayDivCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisplayDivCodeNull() {
                this[this.tableRecBgnGds.DisplayDivCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrgnGoodsGrpNameNull() {
                return this.IsNull(this.tableRecBgnGds.BrgnGoodsGrpNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrgnGoodsGrpNameNull() {
                this[this.tableRecBgnGds.BrgnGoodsGrpNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecBgnCustNull() {
                return this.IsNull(this.tableRecBgnGds.RecBgnCustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecBgnCustNull() {
                this[this.tableRecBgnGds.RecBgnCustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustRateGrpCodeNull() {
                return this.IsNull(this.tableRecBgnGds.CustRateGrpCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustRateGrpCodeNull() {
                this[this.tableRecBgnGds.CustRateGrpCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgoodsUnitDataNull() {
                return this.IsNull(this.tableRecBgnGds.goodsUnitDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgoodsUnitDataNull() {
                this[this.tableRecBgnGds.goodsUnitDataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmkrSuggestRtPricListNull() {
                return this.IsNull(this.tableRecBgnGds.mkrSuggestRtPricListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmkrSuggestRtPricListNull() {
                this[this.tableRecBgnGds.mkrSuggestRtPricListColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmkrSuggestRtPricUListNull() {
                return this.IsNull(this.tableRecBgnGds.mkrSuggestRtPricUListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmkrSuggestRtPricUListNull() {
                this[this.tableRecBgnGds.mkrSuggestRtPricUListColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustUpdFlgNull() {
                return this.IsNull(this.tableRecBgnGds.CustUpdFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustUpdFlgNull() {
                this[this.tableRecBgnGds.CustUpdFlgColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RecBgnCustTmpRow : global::System.Data.DataRow {
            
            private RecBgnCustTmpDataTable tableRecBgnCustTmp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RecBgnCustTmpRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRecBgnCustTmp = ((RecBgnCustTmpDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableRecBgnCustTmp.RowNoColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdateTime {
                get {
                    return ((string)(this[this.tableRecBgnCustTmp.UpdateTimeColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.UpdateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOriginalEpCd {
                get {
                    return ((string)(this[this.tableRecBgnCustTmp.InqOriginalEpCdColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.InqOriginalEpCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOriginalSecCd {
                get {
                    return ((string)(this[this.tableRecBgnCustTmp.InqOriginalSecCdColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.InqOriginalSecCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOtherSecCd {
                get {
                    return ((string)(this[this.tableRecBgnCustTmp.InqOtherSecCdColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.InqOtherSecCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOtherEpCd {
                get {
                    return ((string)(this[this.tableRecBgnCustTmp.InqOtherEpCdColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.InqOtherEpCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    return ((string)(this[this.tableRecBgnCustTmp.GoodsNoColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCode {
                get {
                    return ((int)(this[this.tableRecBgnCustTmp.GoodsMakerCodeColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.GoodsMakerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsApplyStaDate {
                get {
                    try {
                        return ((int)(this[this.tableRecBgnCustTmp.GoodsApplyStaDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnCustTmp\' にある列 \'GoodsApplyStaDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnCustTmp.GoodsApplyStaDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    return ((string)(this[this.tableRecBgnCustTmp.CustomerCodeColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short BrgnGoodsGrpCode {
                get {
                    return ((short)(this[this.tableRecBgnCustTmp.BrgnGoodsGrpCodeColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.BrgnGoodsGrpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MngSectionCode {
                get {
                    try {
                        return ((string)(this[this.tableRecBgnCustTmp.MngSectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnCustTmp\' にある列 \'MngSectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnCustTmp.MngSectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DisplayDivCode {
                get {
                    try {
                        return ((int)(this[this.tableRecBgnCustTmp.DisplayDivCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnCustTmp\' にある列 \'DisplayDivCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnCustTmp.DisplayDivCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApplyStaDate {
                get {
                    try {
                        return ((int)(this[this.tableRecBgnCustTmp.ApplyStaDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnCustTmp\' にある列 \'ApplyStaDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnCustTmp.ApplyStaDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApplyEndDate {
                get {
                    try {
                        return ((int)(this[this.tableRecBgnCustTmp.ApplyEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnCustTmp\' にある列 \'ApplyEndDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnCustTmp.ApplyEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MkrSuggestRtPric {
                get {
                    return ((long)(this[this.tableRecBgnCustTmp.MkrSuggestRtPricColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.MkrSuggestRtPricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ListPrice {
                get {
                    return ((long)(this[this.tableRecBgnCustTmp.ListPriceColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.ListPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UnitCalcRate {
                get {
                    return ((double)(this[this.tableRecBgnCustTmp.UnitCalcRateColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.UnitCalcRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long UnitPrice {
                get {
                    return ((long)(this[this.tableRecBgnCustTmp.UnitPriceColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid FilterGuid {
                get {
                    return ((global::System.Guid)(this[this.tableRecBgnCustTmp.FilterGuidColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.FilterGuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowDeleteFlg {
                get {
                    return ((int)(this[this.tableRecBgnCustTmp.RowDeleteFlgColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.RowDeleteFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ErrorDiv {
                get {
                    return ((int)(this[this.tableRecBgnCustTmp.ErrorDivColumn]));
                }
                set {
                    this[this.tableRecBgnCustTmp.ErrorDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsApplyStaDateNull() {
                return this.IsNull(this.tableRecBgnCustTmp.GoodsApplyStaDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsApplyStaDateNull() {
                this[this.tableRecBgnCustTmp.GoodsApplyStaDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMngSectionCodeNull() {
                return this.IsNull(this.tableRecBgnCustTmp.MngSectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMngSectionCodeNull() {
                this[this.tableRecBgnCustTmp.MngSectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisplayDivCodeNull() {
                return this.IsNull(this.tableRecBgnCustTmp.DisplayDivCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisplayDivCodeNull() {
                this[this.tableRecBgnCustTmp.DisplayDivCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyStaDateNull() {
                return this.IsNull(this.tableRecBgnCustTmp.ApplyStaDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyStaDateNull() {
                this[this.tableRecBgnCustTmp.ApplyStaDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyEndDateNull() {
                return this.IsNull(this.tableRecBgnCustTmp.ApplyEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyEndDateNull() {
                this[this.tableRecBgnCustTmp.ApplyEndDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RecBgnCustRow : global::System.Data.DataRow {
            
            private RecBgnCustDataTable tableRecBgnCust;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RecBgnCustRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRecBgnCust = ((RecBgnCustDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableRecBgnCust.RowNoColumn]));
                }
                set {
                    this[this.tableRecBgnCust.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdateTime {
                get {
                    return ((string)(this[this.tableRecBgnCust.UpdateTimeColumn]));
                }
                set {
                    this[this.tableRecBgnCust.UpdateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOriginalEpCd {
                get {
                    return ((string)(this[this.tableRecBgnCust.InqOriginalEpCdColumn]));
                }
                set {
                    this[this.tableRecBgnCust.InqOriginalEpCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOriginalSecCd {
                get {
                    return ((string)(this[this.tableRecBgnCust.InqOriginalSecCdColumn]));
                }
                set {
                    this[this.tableRecBgnCust.InqOriginalSecCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOtherSecCd {
                get {
                    return ((string)(this[this.tableRecBgnCust.InqOtherSecCdColumn]));
                }
                set {
                    this[this.tableRecBgnCust.InqOtherSecCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOtherEpCd {
                get {
                    return ((string)(this[this.tableRecBgnCust.InqOtherEpCdColumn]));
                }
                set {
                    this[this.tableRecBgnCust.InqOtherEpCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    return ((string)(this[this.tableRecBgnCust.GoodsNoColumn]));
                }
                set {
                    this[this.tableRecBgnCust.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCode {
                get {
                    return ((int)(this[this.tableRecBgnCust.GoodsMakerCodeColumn]));
                }
                set {
                    this[this.tableRecBgnCust.GoodsMakerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsApplyStaDate {
                get {
                    try {
                        return ((int)(this[this.tableRecBgnCust.GoodsApplyStaDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnCust\' にある列 \'GoodsApplyStaDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnCust.GoodsApplyStaDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    return ((string)(this[this.tableRecBgnCust.CustomerCodeColumn]));
                }
                set {
                    this[this.tableRecBgnCust.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableRecBgnCust.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnCust\' にある列 \'CustomerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnCust.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplyStaDate {
                get {
                    try {
                        return ((string)(this[this.tableRecBgnCust.ApplyStaDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnCust\' にある列 \'ApplyStaDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnCust.ApplyStaDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplyEndDate {
                get {
                    try {
                        return ((string)(this[this.tableRecBgnCust.ApplyEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnCust\' にある列 \'ApplyEndDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnCust.ApplyEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DisplayDivCode {
                get {
                    try {
                        return ((int)(this[this.tableRecBgnCust.DisplayDivCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnCust\' にある列 \'DisplayDivCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnCust.DisplayDivCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short BrgnGoodsGrpCode {
                get {
                    return ((short)(this[this.tableRecBgnCust.BrgnGoodsGrpCodeColumn]));
                }
                set {
                    this[this.tableRecBgnCust.BrgnGoodsGrpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BrgnGoodsGrpName {
                get {
                    try {
                        return ((string)(this[this.tableRecBgnCust.BrgnGoodsGrpNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnCust\' にある列 \'BrgnGoodsGrpName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnCust.BrgnGoodsGrpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MkrSuggestRtPric {
                get {
                    return ((long)(this[this.tableRecBgnCust.MkrSuggestRtPricColumn]));
                }
                set {
                    this[this.tableRecBgnCust.MkrSuggestRtPricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ListPrice {
                get {
                    return ((long)(this[this.tableRecBgnCust.ListPriceColumn]));
                }
                set {
                    this[this.tableRecBgnCust.ListPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UnitCalcRate {
                get {
                    return ((double)(this[this.tableRecBgnCust.UnitCalcRateColumn]));
                }
                set {
                    this[this.tableRecBgnCust.UnitCalcRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long UnitPrice {
                get {
                    return ((long)(this[this.tableRecBgnCust.UnitPriceColumn]));
                }
                set {
                    this[this.tableRecBgnCust.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MngSectionCode {
                get {
                    try {
                        return ((string)(this[this.tableRecBgnCust.MngSectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnCust\' にある列 \'MngSectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnCust.MngSectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid FilterGuid {
                get {
                    return ((global::System.Guid)(this[this.tableRecBgnCust.FilterGuidColumn]));
                }
                set {
                    this[this.tableRecBgnCust.FilterGuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowDeleteFlg {
                get {
                    return ((int)(this[this.tableRecBgnCust.RowDeleteFlgColumn]));
                }
                set {
                    this[this.tableRecBgnCust.RowDeleteFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RowDevelopFlg {
                get {
                    try {
                        return ((short)(this[this.tableRecBgnCust.RowDevelopFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecBgnCust\' にある列 \'RowDevelopFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecBgnCust.RowDevelopFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsApplyStaDateNull() {
                return this.IsNull(this.tableRecBgnCust.GoodsApplyStaDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsApplyStaDateNull() {
                this[this.tableRecBgnCust.GoodsApplyStaDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableRecBgnCust.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableRecBgnCust.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyStaDateNull() {
                return this.IsNull(this.tableRecBgnCust.ApplyStaDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyStaDateNull() {
                this[this.tableRecBgnCust.ApplyStaDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyEndDateNull() {
                return this.IsNull(this.tableRecBgnCust.ApplyEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyEndDateNull() {
                this[this.tableRecBgnCust.ApplyEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisplayDivCodeNull() {
                return this.IsNull(this.tableRecBgnCust.DisplayDivCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisplayDivCodeNull() {
                this[this.tableRecBgnCust.DisplayDivCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrgnGoodsGrpNameNull() {
                return this.IsNull(this.tableRecBgnCust.BrgnGoodsGrpNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrgnGoodsGrpNameNull() {
                this[this.tableRecBgnCust.BrgnGoodsGrpNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMngSectionCodeNull() {
                return this.IsNull(this.tableRecBgnCust.MngSectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMngSectionCodeNull() {
                this[this.tableRecBgnCust.MngSectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowDevelopFlgNull() {
                return this.IsNull(this.tableRecBgnCust.RowDevelopFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowDevelopFlgNull() {
                this[this.tableRecBgnCust.RowDevelopFlgColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SecCusSetRowChangeEvent : global::System.EventArgs {
            
            private SecCusSetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SecCusSetRowChangeEvent(SecCusSetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SecCusSetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RecBgnGdsRowChangeEvent : global::System.EventArgs {
            
            private RecBgnGdsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnGdsRowChangeEvent(RecBgnGdsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnGdsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RecBgnCustTmpRowChangeEvent : global::System.EventArgs {
            
            private RecBgnCustTmpRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnCustTmpRowChangeEvent(RecBgnCustTmpRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnCustTmpRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RecBgnCustRowChangeEvent : global::System.EventArgs {
            
            private RecBgnCustRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnCustRowChangeEvent(RecBgnCustRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecBgnCustRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591