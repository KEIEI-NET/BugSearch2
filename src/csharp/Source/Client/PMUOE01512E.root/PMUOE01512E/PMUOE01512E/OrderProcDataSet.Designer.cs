//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3053
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.UIData {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("OrderProcDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class OrderProcDataSet : global::System.Data.DataSet {
        
        private OrderExpansionDataTable tableOrderExpansion;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OrderProcDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected OrderProcDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["OrderExpansion"] != null)) {
                    base.Tables.Add(new OrderExpansionDataTable(ds.Tables["OrderExpansion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrderExpansionDataTable OrderExpansion {
            get {
                return this.tableOrderExpansion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            OrderProcDataSet cln = ((OrderProcDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["OrderExpansion"] != null)) {
                    base.Tables.Add(new OrderExpansionDataTable(ds.Tables["OrderExpansion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableOrderExpansion = ((OrderExpansionDataTable)(base.Tables["OrderExpansion"]));
            if ((initTable == true)) {
                if ((this.tableOrderExpansion != null)) {
                    this.tableOrderExpansion.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "OrderProcDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/OrderProcDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableOrderExpansion = new OrderExpansionDataTable();
            base.Tables.Add(this.tableOrderExpansion);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOrderExpansion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            OrderProcDataSet ds = new OrderProcDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void OrderExpansionRowChangeEventHandler(object sender, OrderExpansionRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrderExpansionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnOrderNo;
            
            private global::System.Data.DataColumn columnInpSelect;
            
            private global::System.Data.DataColumn columnOnlineNo;
            
            private global::System.Data.DataColumn columnCustomerSnm;
            
            private global::System.Data.DataColumn columnCashRegisterNo;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnAcceptAnOrderCnt;
            
            private global::System.Data.DataColumn columnInputDay;
            
            private global::System.Data.DataColumn columnUoeRemark1;
            
            private global::System.Data.DataColumn columnEmployeeCode;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            private global::System.Data.DataColumn columnOnlineRowNo;
            
            private global::System.Data.DataColumn columnUOEKind;
            
            private global::System.Data.DataColumn columnCommonSeqNo;
            
            private global::System.Data.DataColumn columnSupplierFormal;
            
            private global::System.Data.DataColumn columnStockSlipDtlNum;
            
            private global::System.Data.DataColumn columnUOEDeliGoodsDiv;
            
            private global::System.Data.DataColumn columnFollowDeliGoodsDiv;
            
            private global::System.Data.DataColumn columnUOEResvdSection;
            
            private global::System.Data.DataColumn columnBoCode;
            
            private global::System.Data.DataColumn columnUOEDeliGoodsDivNm;
            
            private global::System.Data.DataColumn columnFollowDeliGoodsDivNm;
            
            private global::System.Data.DataColumn columnUOEResvdSectionNm;
            
            private global::System.Data.DataColumn columnUoeRemark2;
            
            private global::System.Data.DataColumn columnWarehouseName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderExpansionDataTable() {
                this.TableName = "OrderExpansion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderExpansionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OrderExpansionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderNoColumn {
                get {
                    return this.columnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InpSelectColumn {
                get {
                    return this.columnInpSelect;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnlineNoColumn {
                get {
                    return this.columnOnlineNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerSnmColumn {
                get {
                    return this.columnCustomerSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashRegisterNoColumn {
                get {
                    return this.columnCashRegisterNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcceptAnOrderCntColumn {
                get {
                    return this.columnAcceptAnOrderCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputDayColumn {
                get {
                    return this.columnInputDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UoeRemark1Column {
                get {
                    return this.columnUoeRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeCodeColumn {
                get {
                    return this.columnEmployeeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnlineRowNoColumn {
                get {
                    return this.columnOnlineRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOEKindColumn {
                get {
                    return this.columnUOEKind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommonSeqNoColumn {
                get {
                    return this.columnCommonSeqNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierFormalColumn {
                get {
                    return this.columnSupplierFormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockSlipDtlNumColumn {
                get {
                    return this.columnStockSlipDtlNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOEDeliGoodsDivColumn {
                get {
                    return this.columnUOEDeliGoodsDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FollowDeliGoodsDivColumn {
                get {
                    return this.columnFollowDeliGoodsDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOEResvdSectionColumn {
                get {
                    return this.columnUOEResvdSection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BoCodeColumn {
                get {
                    return this.columnBoCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOEDeliGoodsDivNmColumn {
                get {
                    return this.columnUOEDeliGoodsDivNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FollowDeliGoodsDivNmColumn {
                get {
                    return this.columnFollowDeliGoodsDivNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOEResvdSectionNmColumn {
                get {
                    return this.columnUOEResvdSectionNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UoeRemark2Column {
                get {
                    return this.columnUoeRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseNameColumn {
                get {
                    return this.columnWarehouseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderExpansionRow this[int index] {
                get {
                    return ((OrderExpansionRow)(this.Rows[index]));
                }
            }
            
            public event OrderExpansionRowChangeEventHandler OrderExpansionRowChanging;
            
            public event OrderExpansionRowChangeEventHandler OrderExpansionRowChanged;
            
            public event OrderExpansionRowChangeEventHandler OrderExpansionRowDeleting;
            
            public event OrderExpansionRowChangeEventHandler OrderExpansionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOrderExpansionRow(OrderExpansionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderExpansionRow AddOrderExpansionRow(
                        int OrderNo, 
                        bool InpSelect, 
                        int OnlineNo, 
                        string CustomerSnm, 
                        int CashRegisterNo, 
                        int GoodsMakerCd, 
                        string GoodsNo, 
                        string GoodsName, 
                        double AcceptAnOrderCnt, 
                        System.DateTime InputDay, 
                        string UoeRemark1, 
                        string EmployeeCode, 
                        string EmployeeName, 
                        int OnlineRowNo, 
                        int UOEKind, 
                        long CommonSeqNo, 
                        int SupplierFormal, 
                        long StockSlipDtlNum, 
                        string UOEDeliGoodsDiv, 
                        string FollowDeliGoodsDiv, 
                        string UOEResvdSection, 
                        string BoCode, 
                        string UOEDeliGoodsDivNm, 
                        string FollowDeliGoodsDivNm, 
                        string UOEResvdSectionNm, 
                        string UoeRemark2, 
                        string WarehouseName) {
                OrderExpansionRow rowOrderExpansionRow = ((OrderExpansionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OrderNo,
                        InpSelect,
                        OnlineNo,
                        CustomerSnm,
                        CashRegisterNo,
                        GoodsMakerCd,
                        GoodsNo,
                        GoodsName,
                        AcceptAnOrderCnt,
                        InputDay,
                        UoeRemark1,
                        EmployeeCode,
                        EmployeeName,
                        OnlineRowNo,
                        UOEKind,
                        CommonSeqNo,
                        SupplierFormal,
                        StockSlipDtlNum,
                        UOEDeliGoodsDiv,
                        FollowDeliGoodsDiv,
                        UOEResvdSection,
                        BoCode,
                        UOEDeliGoodsDivNm,
                        FollowDeliGoodsDivNm,
                        UOEResvdSectionNm,
                        UoeRemark2,
                        WarehouseName};
                rowOrderExpansionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOrderExpansionRow);
                return rowOrderExpansionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderExpansionRow FindByOrderNo(int OrderNo) {
                return ((OrderExpansionRow)(this.Rows.Find(new object[] {
                            OrderNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OrderExpansionDataTable cln = ((OrderExpansionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OrderExpansionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrderNo = base.Columns["OrderNo"];
                this.columnInpSelect = base.Columns["InpSelect"];
                this.columnOnlineNo = base.Columns["OnlineNo"];
                this.columnCustomerSnm = base.Columns["CustomerSnm"];
                this.columnCashRegisterNo = base.Columns["CashRegisterNo"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnAcceptAnOrderCnt = base.Columns["AcceptAnOrderCnt"];
                this.columnInputDay = base.Columns["InputDay"];
                this.columnUoeRemark1 = base.Columns["UoeRemark1"];
                this.columnEmployeeCode = base.Columns["EmployeeCode"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
                this.columnOnlineRowNo = base.Columns["OnlineRowNo"];
                this.columnUOEKind = base.Columns["UOEKind"];
                this.columnCommonSeqNo = base.Columns["CommonSeqNo"];
                this.columnSupplierFormal = base.Columns["SupplierFormal"];
                this.columnStockSlipDtlNum = base.Columns["StockSlipDtlNum"];
                this.columnUOEDeliGoodsDiv = base.Columns["UOEDeliGoodsDiv"];
                this.columnFollowDeliGoodsDiv = base.Columns["FollowDeliGoodsDiv"];
                this.columnUOEResvdSection = base.Columns["UOEResvdSection"];
                this.columnBoCode = base.Columns["BoCode"];
                this.columnUOEDeliGoodsDivNm = base.Columns["UOEDeliGoodsDivNm"];
                this.columnFollowDeliGoodsDivNm = base.Columns["FollowDeliGoodsDivNm"];
                this.columnUOEResvdSectionNm = base.Columns["UOEResvdSectionNm"];
                this.columnUoeRemark2 = base.Columns["UoeRemark2"];
                this.columnWarehouseName = base.Columns["WarehouseName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrderNo = new global::System.Data.DataColumn("OrderNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNo);
                this.columnInpSelect = new global::System.Data.DataColumn("InpSelect", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInpSelect);
                this.columnOnlineNo = new global::System.Data.DataColumn("OnlineNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlineNo);
                this.columnCustomerSnm = new global::System.Data.DataColumn("CustomerSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerSnm);
                this.columnCashRegisterNo = new global::System.Data.DataColumn("CashRegisterNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashRegisterNo);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnAcceptAnOrderCnt = new global::System.Data.DataColumn("AcceptAnOrderCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptAnOrderCnt);
                this.columnInputDay = new global::System.Data.DataColumn("InputDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputDay);
                this.columnUoeRemark1 = new global::System.Data.DataColumn("UoeRemark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUoeRemark1);
                this.columnEmployeeCode = new global::System.Data.DataColumn("EmployeeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeCode);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnOnlineRowNo = new global::System.Data.DataColumn("OnlineRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlineRowNo);
                this.columnUOEKind = new global::System.Data.DataColumn("UOEKind", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOEKind);
                this.columnCommonSeqNo = new global::System.Data.DataColumn("CommonSeqNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommonSeqNo);
                this.columnSupplierFormal = new global::System.Data.DataColumn("SupplierFormal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierFormal);
                this.columnStockSlipDtlNum = new global::System.Data.DataColumn("StockSlipDtlNum", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSlipDtlNum);
                this.columnUOEDeliGoodsDiv = new global::System.Data.DataColumn("UOEDeliGoodsDiv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOEDeliGoodsDiv);
                this.columnFollowDeliGoodsDiv = new global::System.Data.DataColumn("FollowDeliGoodsDiv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFollowDeliGoodsDiv);
                this.columnUOEResvdSection = new global::System.Data.DataColumn("UOEResvdSection", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOEResvdSection);
                this.columnBoCode = new global::System.Data.DataColumn("BoCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoCode);
                this.columnUOEDeliGoodsDivNm = new global::System.Data.DataColumn("UOEDeliGoodsDivNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOEDeliGoodsDivNm);
                this.columnFollowDeliGoodsDivNm = new global::System.Data.DataColumn("FollowDeliGoodsDivNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFollowDeliGoodsDivNm);
                this.columnUOEResvdSectionNm = new global::System.Data.DataColumn("UOEResvdSectionNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOEResvdSectionNm);
                this.columnUoeRemark2 = new global::System.Data.DataColumn("UoeRemark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUoeRemark2);
                this.columnWarehouseName = new global::System.Data.DataColumn("WarehouseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOrderNo}, true));
                this.columnOrderNo.AllowDBNull = false;
                this.columnOrderNo.Unique = true;
                this.columnOrderNo.DefaultValue = ((int)(0));
                this.columnInpSelect.Caption = "選択";
                this.columnInpSelect.DefaultValue = ((bool)(true));
                this.columnOnlineNo.Caption = "オンライン番号";
                this.columnCustomerSnm.Caption = "得意先略称";
                this.columnCashRegisterNo.Caption = "レジ番号";
                this.columnGoodsMakerCd.Caption = "商品メーカーコード";
                this.columnGoodsNo.Caption = "商品番号";
                this.columnGoodsName.Caption = "商品名称";
                this.columnAcceptAnOrderCnt.Caption = "受注数量";
                this.columnInputDay.Caption = "入力日";
                this.columnUoeRemark1.Caption = "ＵＯＥリマーク１";
                this.columnEmployeeCode.Caption = "依頼者コード";
                this.columnEmployeeName.Caption = "依頼者名称";
                this.columnOnlineRowNo.Caption = "オンライン行番号";
                this.columnUOEKind.Caption = "UOE種別";
                this.columnCommonSeqNo.Caption = "共通通番";
                this.columnSupplierFormal.Caption = "仕入形式";
                this.columnStockSlipDtlNum.Caption = "仕入明細通番";
                this.columnUOEDeliGoodsDiv.DefaultValue = ((string)(""));
                this.columnFollowDeliGoodsDiv.DefaultValue = ((string)(""));
                this.columnUOEResvdSection.DefaultValue = ((string)(""));
                this.columnBoCode.Caption = "BO区分";
                this.columnBoCode.DefaultValue = ((string)(""));
                this.columnUOEDeliGoodsDivNm.DefaultValue = ((string)(""));
                this.columnFollowDeliGoodsDivNm.DefaultValue = ((string)(""));
                this.columnUOEResvdSectionNm.DefaultValue = ((string)(""));
                this.columnUoeRemark2.Caption = "ＵＯＥリマーク２";
                this.columnWarehouseName.Caption = "倉庫";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderExpansionRow NewOrderExpansionRow() {
                return ((OrderExpansionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OrderExpansionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OrderExpansionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrderExpansionRowChanged != null)) {
                    this.OrderExpansionRowChanged(this, new OrderExpansionRowChangeEvent(((OrderExpansionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrderExpansionRowChanging != null)) {
                    this.OrderExpansionRowChanging(this, new OrderExpansionRowChangeEvent(((OrderExpansionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrderExpansionRowDeleted != null)) {
                    this.OrderExpansionRowDeleted(this, new OrderExpansionRowChangeEvent(((OrderExpansionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrderExpansionRowDeleting != null)) {
                    this.OrderExpansionRowDeleting(this, new OrderExpansionRowChangeEvent(((OrderExpansionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOrderExpansionRow(OrderExpansionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OrderProcDataSet ds = new OrderProcDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrderExpansionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OrderExpansionRow : global::System.Data.DataRow {
            
            private OrderExpansionDataTable tableOrderExpansion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderExpansionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrderExpansion = ((OrderExpansionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OrderNo {
                get {
                    return ((int)(this[this.tableOrderExpansion.OrderNoColumn]));
                }
                set {
                    this[this.tableOrderExpansion.OrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InpSelect {
                get {
                    try {
                        return ((bool)(this[this.tableOrderExpansion.InpSelectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'InpSelect\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.InpSelectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OnlineNo {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.OnlineNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'OnlineNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.OnlineNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerSnm {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.CustomerSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'CustomerSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.CustomerSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CashRegisterNo {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.CashRegisterNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'CashRegisterNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.CashRegisterNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCd {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.GoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'GoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.GoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'GoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AcceptAnOrderCnt {
                get {
                    try {
                        return ((double)(this[this.tableOrderExpansion.AcceptAnOrderCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'AcceptAnOrderCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.AcceptAnOrderCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InputDay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOrderExpansion.InputDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'InputDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.InputDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UoeRemark1 {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.UoeRemark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'UoeRemark1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.UoeRemark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeeCode {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.EmployeeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'EmployeeCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.EmployeeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeeName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.EmployeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'EmployeeName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OnlineRowNo {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.OnlineRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'OnlineRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.OnlineRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UOEKind {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.UOEKindColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'UOEKind\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.UOEKindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CommonSeqNo {
                get {
                    try {
                        return ((long)(this[this.tableOrderExpansion.CommonSeqNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'CommonSeqNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.CommonSeqNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierFormal {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.SupplierFormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'SupplierFormal\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.SupplierFormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockSlipDtlNum {
                get {
                    try {
                        return ((long)(this[this.tableOrderExpansion.StockSlipDtlNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'StockSlipDtlNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.StockSlipDtlNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOEDeliGoodsDiv {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.UOEDeliGoodsDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'UOEDeliGoodsDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.UOEDeliGoodsDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FollowDeliGoodsDiv {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.FollowDeliGoodsDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'FollowDeliGoodsDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.FollowDeliGoodsDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOEResvdSection {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.UOEResvdSectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'UOEResvdSection\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.UOEResvdSectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BoCode {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.BoCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'BoCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.BoCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOEDeliGoodsDivNm {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.UOEDeliGoodsDivNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'UOEDeliGoodsDivNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.UOEDeliGoodsDivNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FollowDeliGoodsDivNm {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.FollowDeliGoodsDivNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'FollowDeliGoodsDivNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.FollowDeliGoodsDivNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOEResvdSectionNm {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.UOEResvdSectionNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'UOEResvdSectionNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.UOEResvdSectionNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UoeRemark2 {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.UoeRemark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'UoeRemark2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.UoeRemark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.WarehouseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'WarehouseName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.WarehouseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInpSelectNull() {
                return this.IsNull(this.tableOrderExpansion.InpSelectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInpSelectNull() {
                this[this.tableOrderExpansion.InpSelectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOnlineNoNull() {
                return this.IsNull(this.tableOrderExpansion.OnlineNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOnlineNoNull() {
                this[this.tableOrderExpansion.OnlineNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerSnmNull() {
                return this.IsNull(this.tableOrderExpansion.CustomerSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerSnmNull() {
                this[this.tableOrderExpansion.CustomerSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashRegisterNoNull() {
                return this.IsNull(this.tableOrderExpansion.CashRegisterNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashRegisterNoNull() {
                this[this.tableOrderExpansion.CashRegisterNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMakerCdNull() {
                return this.IsNull(this.tableOrderExpansion.GoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMakerCdNull() {
                this[this.tableOrderExpansion.GoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNull() {
                return this.IsNull(this.tableOrderExpansion.GoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNull() {
                this[this.tableOrderExpansion.GoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableOrderExpansion.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableOrderExpansion.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcceptAnOrderCntNull() {
                return this.IsNull(this.tableOrderExpansion.AcceptAnOrderCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcceptAnOrderCntNull() {
                this[this.tableOrderExpansion.AcceptAnOrderCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputDayNull() {
                return this.IsNull(this.tableOrderExpansion.InputDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputDayNull() {
                this[this.tableOrderExpansion.InputDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUoeRemark1Null() {
                return this.IsNull(this.tableOrderExpansion.UoeRemark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUoeRemark1Null() {
                this[this.tableOrderExpansion.UoeRemark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeCodeNull() {
                return this.IsNull(this.tableOrderExpansion.EmployeeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeCodeNull() {
                this[this.tableOrderExpansion.EmployeeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeNameNull() {
                return this.IsNull(this.tableOrderExpansion.EmployeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeNameNull() {
                this[this.tableOrderExpansion.EmployeeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOnlineRowNoNull() {
                return this.IsNull(this.tableOrderExpansion.OnlineRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOnlineRowNoNull() {
                this[this.tableOrderExpansion.OnlineRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOEKindNull() {
                return this.IsNull(this.tableOrderExpansion.UOEKindColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOEKindNull() {
                this[this.tableOrderExpansion.UOEKindColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommonSeqNoNull() {
                return this.IsNull(this.tableOrderExpansion.CommonSeqNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommonSeqNoNull() {
                this[this.tableOrderExpansion.CommonSeqNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierFormalNull() {
                return this.IsNull(this.tableOrderExpansion.SupplierFormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierFormalNull() {
                this[this.tableOrderExpansion.SupplierFormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockSlipDtlNumNull() {
                return this.IsNull(this.tableOrderExpansion.StockSlipDtlNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockSlipDtlNumNull() {
                this[this.tableOrderExpansion.StockSlipDtlNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOEDeliGoodsDivNull() {
                return this.IsNull(this.tableOrderExpansion.UOEDeliGoodsDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOEDeliGoodsDivNull() {
                this[this.tableOrderExpansion.UOEDeliGoodsDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFollowDeliGoodsDivNull() {
                return this.IsNull(this.tableOrderExpansion.FollowDeliGoodsDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFollowDeliGoodsDivNull() {
                this[this.tableOrderExpansion.FollowDeliGoodsDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOEResvdSectionNull() {
                return this.IsNull(this.tableOrderExpansion.UOEResvdSectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOEResvdSectionNull() {
                this[this.tableOrderExpansion.UOEResvdSectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBoCodeNull() {
                return this.IsNull(this.tableOrderExpansion.BoCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBoCodeNull() {
                this[this.tableOrderExpansion.BoCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOEDeliGoodsDivNmNull() {
                return this.IsNull(this.tableOrderExpansion.UOEDeliGoodsDivNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOEDeliGoodsDivNmNull() {
                this[this.tableOrderExpansion.UOEDeliGoodsDivNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFollowDeliGoodsDivNmNull() {
                return this.IsNull(this.tableOrderExpansion.FollowDeliGoodsDivNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFollowDeliGoodsDivNmNull() {
                this[this.tableOrderExpansion.FollowDeliGoodsDivNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOEResvdSectionNmNull() {
                return this.IsNull(this.tableOrderExpansion.UOEResvdSectionNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOEResvdSectionNmNull() {
                this[this.tableOrderExpansion.UOEResvdSectionNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUoeRemark2Null() {
                return this.IsNull(this.tableOrderExpansion.UoeRemark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUoeRemark2Null() {
                this[this.tableOrderExpansion.UoeRemark2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNameNull() {
                return this.IsNull(this.tableOrderExpansion.WarehouseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNameNull() {
                this[this.tableOrderExpansion.WarehouseNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OrderExpansionRowChangeEvent : global::System.EventArgs {
            
            private OrderExpansionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderExpansionRowChangeEvent(OrderExpansionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderExpansionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591