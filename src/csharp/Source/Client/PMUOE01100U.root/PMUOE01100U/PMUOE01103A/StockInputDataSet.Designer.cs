//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3031
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.Controller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("StockInputDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class StockInputDataSet : global::System.Data.DataSet {
        
        private OrderExpansionDataTable tableOrderExpansion;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockInputDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected StockInputDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["OrderExpansion"] != null)) {
                    base.Tables.Add(new OrderExpansionDataTable(ds.Tables["OrderExpansion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrderExpansionDataTable OrderExpansion {
            get {
                return this.tableOrderExpansion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            StockInputDataSet cln = ((StockInputDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["OrderExpansion"] != null)) {
                    base.Tables.Add(new OrderExpansionDataTable(ds.Tables["OrderExpansion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableOrderExpansion = ((OrderExpansionDataTable)(base.Tables["OrderExpansion"]));
            if ((initTable == true)) {
                if ((this.tableOrderExpansion != null)) {
                    this.tableOrderExpansion.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "StockInputDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/StockInputDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableOrderExpansion = new OrderExpansionDataTable();
            base.Tables.Add(this.tableOrderExpansion);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOrderExpansion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            StockInputDataSet ds = new StockInputDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void OrderExpansionRowChangeEventHandler(object sender, OrderExpansionRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrderExpansionDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnOrderNo;
            
            private global::System.Data.DataColumn columnOrderNoDisplay;
            
            private global::System.Data.DataColumn columnEditStatus;
            
            private global::System.Data.DataColumn columnRowStatus;
            
            private global::System.Data.DataColumn columnInpGoodsNo;
            
            private global::System.Data.DataColumn columnInpGoodsNoGuideButton;
            
            private global::System.Data.DataColumn columnInpAcceptAnOrderCnt;
            
            private global::System.Data.DataColumn columnInpBoCode;
            
            private global::System.Data.DataColumn columnInpGoodsMakerCd;
            
            private global::System.Data.DataColumn columnInpBLGoodsCode;
            
            private global::System.Data.DataColumn columnInpBLGoodsName;
            
            private global::System.Data.DataColumn columnInpMakerName;
            
            private global::System.Data.DataColumn columnDspBLGoodsName;
            
            private global::System.Data.DataColumn columnDspStockCnt;
            
            private global::System.Data.DataColumn columnDspWarehouseName;
            
            private global::System.Data.DataColumn columnDspWarehouseShelfNo;
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            private global::System.Data.DataColumn columnWarehouseName;
            
            private global::System.Data.DataColumn columnWarehouseShelfNo;
            
            private global::System.Data.DataColumn columnBoCode;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnMakerName;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnGoodsNoNoneHyphen;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnAcceptAnOrderCnt;
            
            private global::System.Data.DataColumn columnUoeRemark1;
            
            private global::System.Data.DataColumn columnUoeRemark2;
            
            private global::System.Data.DataColumn columnGoodsKindCode;
            
            private global::System.Data.DataColumn columnMakerKanaName;
            
            private global::System.Data.DataColumn columnGoodsNameKana;
            
            private global::System.Data.DataColumn columnGoodsLGroup;
            
            private global::System.Data.DataColumn columnGoodsLGroupName;
            
            private global::System.Data.DataColumn columnGoodsMGroup;
            
            private global::System.Data.DataColumn columnGoodsMGroupName;
            
            private global::System.Data.DataColumn columnBLGroupCode;
            
            private global::System.Data.DataColumn columnBLGroupName;
            
            private global::System.Data.DataColumn columnBLGoodsCode;
            
            private global::System.Data.DataColumn columnBLGoodsFullName;
            
            private global::System.Data.DataColumn columnStockOrderDivCd;
            
            private global::System.Data.DataColumn columnOpenPriceDiv;
            
            private global::System.Data.DataColumn columnListPriceTaxExcFl;
            
            private global::System.Data.DataColumn columnListPriceTaxIncFl;
            
            private global::System.Data.DataColumn columnBfListPrice;
            
            private global::System.Data.DataColumn columnRateBLGoodsCode;
            
            private global::System.Data.DataColumn columnRateBLGoodsName;
            
            private global::System.Data.DataColumn columnTaxationCode;
            
            private global::System.Data.DataColumn columnListPrice;
            
            private global::System.Data.DataColumn columnSalesUnitCost;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderExpansionDataTable() {
                this.TableName = "OrderExpansion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderExpansionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OrderExpansionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderNoColumn {
                get {
                    return this.columnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderNoDisplayColumn {
                get {
                    return this.columnOrderNoDisplay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EditStatusColumn {
                get {
                    return this.columnEditStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowStatusColumn {
                get {
                    return this.columnRowStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InpGoodsNoColumn {
                get {
                    return this.columnInpGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InpGoodsNoGuideButtonColumn {
                get {
                    return this.columnInpGoodsNoGuideButton;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InpAcceptAnOrderCntColumn {
                get {
                    return this.columnInpAcceptAnOrderCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InpBoCodeColumn {
                get {
                    return this.columnInpBoCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InpGoodsMakerCdColumn {
                get {
                    return this.columnInpGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InpBLGoodsCodeColumn {
                get {
                    return this.columnInpBLGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InpBLGoodsNameColumn {
                get {
                    return this.columnInpBLGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InpMakerNameColumn {
                get {
                    return this.columnInpMakerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DspBLGoodsNameColumn {
                get {
                    return this.columnDspBLGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DspStockCntColumn {
                get {
                    return this.columnDspStockCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DspWarehouseNameColumn {
                get {
                    return this.columnDspWarehouseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DspWarehouseShelfNoColumn {
                get {
                    return this.columnDspWarehouseShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseNameColumn {
                get {
                    return this.columnWarehouseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseShelfNoColumn {
                get {
                    return this.columnWarehouseShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BoCodeColumn {
                get {
                    return this.columnBoCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerNameColumn {
                get {
                    return this.columnMakerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoNoneHyphenColumn {
                get {
                    return this.columnGoodsNoNoneHyphen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcceptAnOrderCntColumn {
                get {
                    return this.columnAcceptAnOrderCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UoeRemark1Column {
                get {
                    return this.columnUoeRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UoeRemark2Column {
                get {
                    return this.columnUoeRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsKindCodeColumn {
                get {
                    return this.columnGoodsKindCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerKanaNameColumn {
                get {
                    return this.columnMakerKanaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameKanaColumn {
                get {
                    return this.columnGoodsNameKana;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsLGroupColumn {
                get {
                    return this.columnGoodsLGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsLGroupNameColumn {
                get {
                    return this.columnGoodsLGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMGroupColumn {
                get {
                    return this.columnGoodsMGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMGroupNameColumn {
                get {
                    return this.columnGoodsMGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGroupCodeColumn {
                get {
                    return this.columnBLGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGroupNameColumn {
                get {
                    return this.columnBLGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGoodsCodeColumn {
                get {
                    return this.columnBLGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGoodsFullNameColumn {
                get {
                    return this.columnBLGoodsFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockOrderDivCdColumn {
                get {
                    return this.columnStockOrderDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OpenPriceDivColumn {
                get {
                    return this.columnOpenPriceDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceTaxExcFlColumn {
                get {
                    return this.columnListPriceTaxExcFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceTaxIncFlColumn {
                get {
                    return this.columnListPriceTaxIncFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfListPriceColumn {
                get {
                    return this.columnBfListPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateBLGoodsCodeColumn {
                get {
                    return this.columnRateBLGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateBLGoodsNameColumn {
                get {
                    return this.columnRateBLGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxationCodeColumn {
                get {
                    return this.columnTaxationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceColumn {
                get {
                    return this.columnListPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnitCostColumn {
                get {
                    return this.columnSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderExpansionRow this[int index] {
                get {
                    return ((OrderExpansionRow)(this.Rows[index]));
                }
            }
            
            public event OrderExpansionRowChangeEventHandler OrderExpansionRowChanging;
            
            public event OrderExpansionRowChangeEventHandler OrderExpansionRowChanged;
            
            public event OrderExpansionRowChangeEventHandler OrderExpansionRowDeleting;
            
            public event OrderExpansionRowChangeEventHandler OrderExpansionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOrderExpansionRow(OrderExpansionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderExpansionRow AddOrderExpansionRow(
                        int OrderNo, 
                        int OrderNoDisplay, 
                        int EditStatus, 
                        int RowStatus, 
                        string InpGoodsNo, 
                        string InpGoodsNoGuideButton, 
                        double InpAcceptAnOrderCnt, 
                        string InpBoCode, 
                        string InpGoodsMakerCd, 
                        int InpBLGoodsCode, 
                        string InpBLGoodsName, 
                        int InpMakerName, 
                        string DspBLGoodsName, 
                        string DspStockCnt, 
                        string DspWarehouseName, 
                        string DspWarehouseShelfNo, 
                        string WarehouseCode, 
                        string WarehouseName, 
                        string WarehouseShelfNo, 
                        string BoCode, 
                        int GoodsMakerCd, 
                        string MakerName, 
                        string GoodsNo, 
                        string GoodsNoNoneHyphen, 
                        string GoodsName, 
                        double AcceptAnOrderCnt, 
                        string UoeRemark1, 
                        string UoeRemark2, 
                        int GoodsKindCode, 
                        string MakerKanaName, 
                        string GoodsNameKana, 
                        int GoodsLGroup, 
                        string GoodsLGroupName, 
                        int GoodsMGroup, 
                        string GoodsMGroupName, 
                        int BLGroupCode, 
                        string BLGroupName, 
                        int BLGoodsCode, 
                        string BLGoodsFullName, 
                        int StockOrderDivCd, 
                        int OpenPriceDiv, 
                        double ListPriceTaxExcFl, 
                        double ListPriceTaxIncFl, 
                        double BfListPrice, 
                        int RateBLGoodsCode, 
                        string RateBLGoodsName, 
                        int TaxationCode, 
                        double ListPrice, 
                        double SalesUnitCost) {
                OrderExpansionRow rowOrderExpansionRow = ((OrderExpansionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OrderNo,
                        OrderNoDisplay,
                        EditStatus,
                        RowStatus,
                        InpGoodsNo,
                        InpGoodsNoGuideButton,
                        InpAcceptAnOrderCnt,
                        InpBoCode,
                        InpGoodsMakerCd,
                        InpBLGoodsCode,
                        InpBLGoodsName,
                        InpMakerName,
                        DspBLGoodsName,
                        DspStockCnt,
                        DspWarehouseName,
                        DspWarehouseShelfNo,
                        WarehouseCode,
                        WarehouseName,
                        WarehouseShelfNo,
                        BoCode,
                        GoodsMakerCd,
                        MakerName,
                        GoodsNo,
                        GoodsNoNoneHyphen,
                        GoodsName,
                        AcceptAnOrderCnt,
                        UoeRemark1,
                        UoeRemark2,
                        GoodsKindCode,
                        MakerKanaName,
                        GoodsNameKana,
                        GoodsLGroup,
                        GoodsLGroupName,
                        GoodsMGroup,
                        GoodsMGroupName,
                        BLGroupCode,
                        BLGroupName,
                        BLGoodsCode,
                        BLGoodsFullName,
                        StockOrderDivCd,
                        OpenPriceDiv,
                        ListPriceTaxExcFl,
                        ListPriceTaxIncFl,
                        BfListPrice,
                        RateBLGoodsCode,
                        RateBLGoodsName,
                        TaxationCode,
                        ListPrice,
                        SalesUnitCost};
                rowOrderExpansionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOrderExpansionRow);
                return rowOrderExpansionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderExpansionRow FindByOrderNo(int OrderNo) {
                return ((OrderExpansionRow)(this.Rows.Find(new object[] {
                            OrderNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OrderExpansionDataTable cln = ((OrderExpansionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OrderExpansionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOrderNo = base.Columns["OrderNo"];
                this.columnOrderNoDisplay = base.Columns["OrderNoDisplay"];
                this.columnEditStatus = base.Columns["EditStatus"];
                this.columnRowStatus = base.Columns["RowStatus"];
                this.columnInpGoodsNo = base.Columns["InpGoodsNo"];
                this.columnInpGoodsNoGuideButton = base.Columns["InpGoodsNoGuideButton"];
                this.columnInpAcceptAnOrderCnt = base.Columns["InpAcceptAnOrderCnt"];
                this.columnInpBoCode = base.Columns["InpBoCode"];
                this.columnInpGoodsMakerCd = base.Columns["InpGoodsMakerCd"];
                this.columnInpBLGoodsCode = base.Columns["InpBLGoodsCode"];
                this.columnInpBLGoodsName = base.Columns["InpBLGoodsName"];
                this.columnInpMakerName = base.Columns["InpMakerName"];
                this.columnDspBLGoodsName = base.Columns["DspBLGoodsName"];
                this.columnDspStockCnt = base.Columns["DspStockCnt"];
                this.columnDspWarehouseName = base.Columns["DspWarehouseName"];
                this.columnDspWarehouseShelfNo = base.Columns["DspWarehouseShelfNo"];
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnWarehouseName = base.Columns["WarehouseName"];
                this.columnWarehouseShelfNo = base.Columns["WarehouseShelfNo"];
                this.columnBoCode = base.Columns["BoCode"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnMakerName = base.Columns["MakerName"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnGoodsNoNoneHyphen = base.Columns["GoodsNoNoneHyphen"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnAcceptAnOrderCnt = base.Columns["AcceptAnOrderCnt"];
                this.columnUoeRemark1 = base.Columns["UoeRemark1"];
                this.columnUoeRemark2 = base.Columns["UoeRemark2"];
                this.columnGoodsKindCode = base.Columns["GoodsKindCode"];
                this.columnMakerKanaName = base.Columns["MakerKanaName"];
                this.columnGoodsNameKana = base.Columns["GoodsNameKana"];
                this.columnGoodsLGroup = base.Columns["GoodsLGroup"];
                this.columnGoodsLGroupName = base.Columns["GoodsLGroupName"];
                this.columnGoodsMGroup = base.Columns["GoodsMGroup"];
                this.columnGoodsMGroupName = base.Columns["GoodsMGroupName"];
                this.columnBLGroupCode = base.Columns["BLGroupCode"];
                this.columnBLGroupName = base.Columns["BLGroupName"];
                this.columnBLGoodsCode = base.Columns["BLGoodsCode"];
                this.columnBLGoodsFullName = base.Columns["BLGoodsFullName"];
                this.columnStockOrderDivCd = base.Columns["StockOrderDivCd"];
                this.columnOpenPriceDiv = base.Columns["OpenPriceDiv"];
                this.columnListPriceTaxExcFl = base.Columns["ListPriceTaxExcFl"];
                this.columnListPriceTaxIncFl = base.Columns["ListPriceTaxIncFl"];
                this.columnBfListPrice = base.Columns["BfListPrice"];
                this.columnRateBLGoodsCode = base.Columns["RateBLGoodsCode"];
                this.columnRateBLGoodsName = base.Columns["RateBLGoodsName"];
                this.columnTaxationCode = base.Columns["TaxationCode"];
                this.columnListPrice = base.Columns["ListPrice"];
                this.columnSalesUnitCost = base.Columns["SalesUnitCost"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOrderNo = new global::System.Data.DataColumn("OrderNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNo);
                this.columnOrderNoDisplay = new global::System.Data.DataColumn("OrderNoDisplay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNoDisplay);
                this.columnEditStatus = new global::System.Data.DataColumn("EditStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEditStatus);
                this.columnRowStatus = new global::System.Data.DataColumn("RowStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowStatus);
                this.columnInpGoodsNo = new global::System.Data.DataColumn("InpGoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInpGoodsNo);
                this.columnInpGoodsNoGuideButton = new global::System.Data.DataColumn("InpGoodsNoGuideButton", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInpGoodsNoGuideButton);
                this.columnInpAcceptAnOrderCnt = new global::System.Data.DataColumn("InpAcceptAnOrderCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInpAcceptAnOrderCnt);
                this.columnInpBoCode = new global::System.Data.DataColumn("InpBoCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInpBoCode);
                this.columnInpGoodsMakerCd = new global::System.Data.DataColumn("InpGoodsMakerCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInpGoodsMakerCd);
                this.columnInpBLGoodsCode = new global::System.Data.DataColumn("InpBLGoodsCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInpBLGoodsCode);
                this.columnInpBLGoodsName = new global::System.Data.DataColumn("InpBLGoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInpBLGoodsName);
                this.columnInpMakerName = new global::System.Data.DataColumn("InpMakerName", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInpMakerName);
                this.columnDspBLGoodsName = new global::System.Data.DataColumn("DspBLGoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDspBLGoodsName);
                this.columnDspStockCnt = new global::System.Data.DataColumn("DspStockCnt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDspStockCnt);
                this.columnDspWarehouseName = new global::System.Data.DataColumn("DspWarehouseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDspWarehouseName);
                this.columnDspWarehouseShelfNo = new global::System.Data.DataColumn("DspWarehouseShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDspWarehouseShelfNo);
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnWarehouseName = new global::System.Data.DataColumn("WarehouseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseName);
                this.columnWarehouseShelfNo = new global::System.Data.DataColumn("WarehouseShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseShelfNo);
                this.columnBoCode = new global::System.Data.DataColumn("BoCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoCode);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnMakerName = new global::System.Data.DataColumn("MakerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerName);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnGoodsNoNoneHyphen = new global::System.Data.DataColumn("GoodsNoNoneHyphen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNoNoneHyphen);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnAcceptAnOrderCnt = new global::System.Data.DataColumn("AcceptAnOrderCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptAnOrderCnt);
                this.columnUoeRemark1 = new global::System.Data.DataColumn("UoeRemark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUoeRemark1);
                this.columnUoeRemark2 = new global::System.Data.DataColumn("UoeRemark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUoeRemark2);
                this.columnGoodsKindCode = new global::System.Data.DataColumn("GoodsKindCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsKindCode);
                this.columnMakerKanaName = new global::System.Data.DataColumn("MakerKanaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerKanaName);
                this.columnGoodsNameKana = new global::System.Data.DataColumn("GoodsNameKana", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNameKana);
                this.columnGoodsLGroup = new global::System.Data.DataColumn("GoodsLGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsLGroup);
                this.columnGoodsLGroupName = new global::System.Data.DataColumn("GoodsLGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsLGroupName);
                this.columnGoodsMGroup = new global::System.Data.DataColumn("GoodsMGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMGroup);
                this.columnGoodsMGroupName = new global::System.Data.DataColumn("GoodsMGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMGroupName);
                this.columnBLGroupCode = new global::System.Data.DataColumn("BLGroupCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGroupCode);
                this.columnBLGroupName = new global::System.Data.DataColumn("BLGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGroupName);
                this.columnBLGoodsCode = new global::System.Data.DataColumn("BLGoodsCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGoodsCode);
                this.columnBLGoodsFullName = new global::System.Data.DataColumn("BLGoodsFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGoodsFullName);
                this.columnStockOrderDivCd = new global::System.Data.DataColumn("StockOrderDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockOrderDivCd);
                this.columnOpenPriceDiv = new global::System.Data.DataColumn("OpenPriceDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpenPriceDiv);
                this.columnListPriceTaxExcFl = new global::System.Data.DataColumn("ListPriceTaxExcFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPriceTaxExcFl);
                this.columnListPriceTaxIncFl = new global::System.Data.DataColumn("ListPriceTaxIncFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPriceTaxIncFl);
                this.columnBfListPrice = new global::System.Data.DataColumn("BfListPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfListPrice);
                this.columnRateBLGoodsCode = new global::System.Data.DataColumn("RateBLGoodsCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateBLGoodsCode);
                this.columnRateBLGoodsName = new global::System.Data.DataColumn("RateBLGoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateBLGoodsName);
                this.columnTaxationCode = new global::System.Data.DataColumn("TaxationCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxationCode);
                this.columnListPrice = new global::System.Data.DataColumn("ListPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPrice);
                this.columnSalesUnitCost = new global::System.Data.DataColumn("SalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnitCost);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOrderNo}, true));
                this.columnOrderNo.AllowDBNull = false;
                this.columnOrderNo.Unique = true;
                this.columnOrderNo.DefaultValue = ((int)(0));
                this.columnOrderNoDisplay.Caption = "No.";
                this.columnOrderNoDisplay.DefaultValue = ((int)(0));
                this.columnEditStatus.DefaultValue = ((int)(0));
                this.columnRowStatus.DefaultValue = ((int)(0));
                this.columnInpGoodsNo.Caption = "品番";
                this.columnInpGoodsNo.DefaultValue = ((string)(""));
                this.columnInpGoodsNoGuideButton.ReadOnly = true;
                this.columnInpGoodsNoGuideButton.Caption = "";
                this.columnInpGoodsNoGuideButton.DefaultValue = ((string)(""));
                this.columnInpAcceptAnOrderCnt.Caption = "受注数量（入力）";
                this.columnInpAcceptAnOrderCnt.DefaultValue = ((double)(0));
                this.columnInpBoCode.Caption = "BO区分（入力）";
                this.columnInpBoCode.DefaultValue = ((string)(""));
                this.columnInpGoodsMakerCd.Caption = "メーカーコード";
                this.columnInpGoodsMakerCd.DefaultValue = ((string)(""));
                this.columnInpBLGoodsCode.Caption = "BL商品コード";
                this.columnInpBLGoodsCode.DefaultValue = ((int)(0));
                this.columnInpBLGoodsName.Caption = "品名";
                this.columnInpBLGoodsName.DefaultValue = ((string)(""));
                this.columnInpMakerName.Caption = "メーカー名";
                this.columnInpMakerName.DefaultValue = ((int)(0));
                this.columnDspBLGoodsName.Caption = "BL商品コード名称";
                this.columnDspBLGoodsName.DefaultValue = ((string)(""));
                this.columnDspStockCnt.Caption = "現在庫数";
                this.columnDspStockCnt.DefaultValue = ((string)(""));
                this.columnDspWarehouseName.Caption = "倉庫";
                this.columnDspWarehouseName.DefaultValue = ((string)(""));
                this.columnDspWarehouseShelfNo.Caption = "棚番";
                this.columnDspWarehouseShelfNo.DefaultValue = ((string)(""));
                this.columnWarehouseCode.Caption = "倉庫コード";
                this.columnWarehouseCode.DefaultValue = ((string)(""));
                this.columnWarehouseName.Caption = "倉庫";
                this.columnWarehouseName.DefaultValue = ((string)(""));
                this.columnWarehouseShelfNo.Caption = "棚番";
                this.columnWarehouseShelfNo.DefaultValue = ((string)(""));
                this.columnBoCode.Caption = "BO区分";
                this.columnBoCode.DefaultValue = ((string)(""));
                this.columnGoodsMakerCd.Caption = "商品メーカーコード";
                this.columnGoodsMakerCd.DefaultValue = ((int)(0));
                this.columnMakerName.Caption = "メーカー名称";
                this.columnMakerName.DefaultValue = ((string)(""));
                this.columnGoodsNo.Caption = "商品番号";
                this.columnGoodsNo.DefaultValue = ((string)(""));
                this.columnGoodsNoNoneHyphen.Caption = "ハイフン無商品番号";
                this.columnGoodsNoNoneHyphen.DefaultValue = ((string)(""));
                this.columnGoodsName.Caption = "商品名称";
                this.columnGoodsName.DefaultValue = ((string)(""));
                this.columnAcceptAnOrderCnt.Caption = "受注数量";
                this.columnAcceptAnOrderCnt.DefaultValue = ((double)(0));
                this.columnUoeRemark1.Caption = "ＵＯＥリマーク１";
                this.columnUoeRemark1.DefaultValue = ((string)(""));
                this.columnUoeRemark2.Caption = "ＵＯＥリマーク２";
                this.columnUoeRemark2.DefaultValue = ((string)(""));
                this.columnGoodsKindCode.Caption = "商品属性";
                this.columnGoodsKindCode.DefaultValue = ((int)(0));
                this.columnMakerKanaName.Caption = "メーカーカナ名称";
                this.columnMakerKanaName.DefaultValue = ((string)(""));
                this.columnGoodsNameKana.Caption = "商品名称カナ";
                this.columnGoodsNameKana.DefaultValue = ((string)(""));
                this.columnGoodsLGroup.Caption = "商品大分類コード";
                this.columnGoodsLGroup.DefaultValue = ((int)(0));
                this.columnGoodsLGroupName.Caption = "商品大分類名称";
                this.columnGoodsLGroupName.DefaultValue = ((string)(""));
                this.columnGoodsMGroup.Caption = "商品中分類コード";
                this.columnGoodsMGroup.DefaultValue = ((int)(0));
                this.columnGoodsMGroupName.Caption = "商品中分類名称";
                this.columnGoodsMGroupName.DefaultValue = ((string)(""));
                this.columnBLGroupCode.Caption = "BLグループコード";
                this.columnBLGroupCode.DefaultValue = ((int)(0));
                this.columnBLGroupName.Caption = "BLグループコード名称";
                this.columnBLGroupName.DefaultValue = ((string)(""));
                this.columnBLGoodsCode.Caption = "BL商品コード";
                this.columnBLGoodsCode.DefaultValue = ((int)(0));
                this.columnBLGoodsFullName.Caption = "BL商品コード名称（全角）";
                this.columnBLGoodsFullName.DefaultValue = ((string)(""));
                this.columnStockOrderDivCd.Caption = "仕入在庫取寄せ区分";
                this.columnStockOrderDivCd.DefaultValue = ((int)(0));
                this.columnOpenPriceDiv.Caption = "オープン価格区分";
                this.columnOpenPriceDiv.DefaultValue = ((int)(0));
                this.columnListPriceTaxExcFl.Caption = "定価（税抜，浮動）";
                this.columnListPriceTaxExcFl.DefaultValue = ((double)(0));
                this.columnListPriceTaxIncFl.Caption = "定価（税込，浮動）";
                this.columnListPriceTaxIncFl.DefaultValue = ((double)(0));
                this.columnBfListPrice.Caption = "変更前定価";
                this.columnBfListPrice.DefaultValue = ((double)(0));
                this.columnRateBLGoodsCode.Caption = "BL商品コード（掛率）";
                this.columnRateBLGoodsCode.DefaultValue = ((int)(0));
                this.columnRateBLGoodsName.Caption = "BL商品コード名称（掛率）";
                this.columnRateBLGoodsName.DefaultValue = ((string)(""));
                this.columnTaxationCode.Caption = "課税区分";
                this.columnTaxationCode.DefaultValue = ((int)(0));
                this.columnListPrice.Caption = "定価（浮動）";
                this.columnListPrice.DefaultValue = ((double)(0));
                this.columnSalesUnitCost.Caption = "原価単価";
                this.columnSalesUnitCost.DefaultValue = ((double)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderExpansionRow NewOrderExpansionRow() {
                return ((OrderExpansionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OrderExpansionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OrderExpansionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrderExpansionRowChanged != null)) {
                    this.OrderExpansionRowChanged(this, new OrderExpansionRowChangeEvent(((OrderExpansionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrderExpansionRowChanging != null)) {
                    this.OrderExpansionRowChanging(this, new OrderExpansionRowChangeEvent(((OrderExpansionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrderExpansionRowDeleted != null)) {
                    this.OrderExpansionRowDeleted(this, new OrderExpansionRowChangeEvent(((OrderExpansionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrderExpansionRowDeleting != null)) {
                    this.OrderExpansionRowDeleting(this, new OrderExpansionRowChangeEvent(((OrderExpansionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOrderExpansionRow(OrderExpansionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StockInputDataSet ds = new StockInputDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrderExpansionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OrderExpansionRow : global::System.Data.DataRow {
            
            private OrderExpansionDataTable tableOrderExpansion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderExpansionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrderExpansion = ((OrderExpansionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OrderNo {
                get {
                    return ((int)(this[this.tableOrderExpansion.OrderNoColumn]));
                }
                set {
                    this[this.tableOrderExpansion.OrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OrderNoDisplay {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.OrderNoDisplayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'OrderNoDisplay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.OrderNoDisplayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EditStatus {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.EditStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'EditStatus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.EditStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowStatus {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.RowStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'RowStatus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.RowStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InpGoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.InpGoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'InpGoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.InpGoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InpGoodsNoGuideButton {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.InpGoodsNoGuideButtonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'InpGoodsNoGuideButton\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.InpGoodsNoGuideButtonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double InpAcceptAnOrderCnt {
                get {
                    try {
                        return ((double)(this[this.tableOrderExpansion.InpAcceptAnOrderCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'InpAcceptAnOrderCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.InpAcceptAnOrderCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InpBoCode {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.InpBoCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'InpBoCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.InpBoCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InpGoodsMakerCd {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.InpGoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'InpGoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.InpGoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InpBLGoodsCode {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.InpBLGoodsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'InpBLGoodsCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.InpBLGoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InpBLGoodsName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.InpBLGoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'InpBLGoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.InpBLGoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InpMakerName {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.InpMakerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'InpMakerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.InpMakerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DspBLGoodsName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.DspBLGoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'DspBLGoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.DspBLGoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DspStockCnt {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.DspStockCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'DspStockCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.DspStockCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DspWarehouseName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.DspWarehouseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'DspWarehouseName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.DspWarehouseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DspWarehouseShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.DspWarehouseShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'DspWarehouseShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.DspWarehouseShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.WarehouseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'WarehouseCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.WarehouseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'WarehouseName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.WarehouseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.WarehouseShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'WarehouseShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.WarehouseShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BoCode {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.BoCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'BoCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.BoCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCd {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.GoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'GoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.MakerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'MakerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.MakerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.GoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'GoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNoNoneHyphen {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.GoodsNoNoneHyphenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'GoodsNoNoneHyphen\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.GoodsNoNoneHyphenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AcceptAnOrderCnt {
                get {
                    try {
                        return ((double)(this[this.tableOrderExpansion.AcceptAnOrderCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'AcceptAnOrderCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.AcceptAnOrderCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UoeRemark1 {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.UoeRemark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'UoeRemark1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.UoeRemark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UoeRemark2 {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.UoeRemark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'UoeRemark2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.UoeRemark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsKindCode {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.GoodsKindCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'GoodsKindCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.GoodsKindCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerKanaName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.MakerKanaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'MakerKanaName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.MakerKanaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNameKana {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.GoodsNameKanaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'GoodsNameKana\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.GoodsNameKanaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsLGroup {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.GoodsLGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'GoodsLGroup\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.GoodsLGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsLGroupName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.GoodsLGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'GoodsLGroupName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.GoodsLGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMGroup {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.GoodsMGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'GoodsMGroup\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.GoodsMGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsMGroupName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.GoodsMGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'GoodsMGroupName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.GoodsMGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BLGroupCode {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.BLGroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'BLGroupCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.BLGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLGroupName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.BLGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'BLGroupName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.BLGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BLGoodsCode {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.BLGoodsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'BLGoodsCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.BLGoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLGoodsFullName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.BLGoodsFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'BLGoodsFullName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.BLGoodsFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockOrderDivCd {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.StockOrderDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'StockOrderDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.StockOrderDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OpenPriceDiv {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.OpenPriceDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'OpenPriceDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.OpenPriceDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ListPriceTaxExcFl {
                get {
                    try {
                        return ((double)(this[this.tableOrderExpansion.ListPriceTaxExcFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'ListPriceTaxExcFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.ListPriceTaxExcFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ListPriceTaxIncFl {
                get {
                    try {
                        return ((double)(this[this.tableOrderExpansion.ListPriceTaxIncFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'ListPriceTaxIncFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.ListPriceTaxIncFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BfListPrice {
                get {
                    try {
                        return ((double)(this[this.tableOrderExpansion.BfListPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'BfListPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.BfListPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RateBLGoodsCode {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.RateBLGoodsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'RateBLGoodsCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.RateBLGoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RateBLGoodsName {
                get {
                    try {
                        return ((string)(this[this.tableOrderExpansion.RateBLGoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'RateBLGoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.RateBLGoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TaxationCode {
                get {
                    try {
                        return ((int)(this[this.tableOrderExpansion.TaxationCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'TaxationCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.TaxationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ListPrice {
                get {
                    try {
                        return ((double)(this[this.tableOrderExpansion.ListPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'ListPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.ListPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableOrderExpansion.SalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OrderExpansion\' にある列 \'SalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOrderExpansion.SalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderNoDisplayNull() {
                return this.IsNull(this.tableOrderExpansion.OrderNoDisplayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderNoDisplayNull() {
                this[this.tableOrderExpansion.OrderNoDisplayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEditStatusNull() {
                return this.IsNull(this.tableOrderExpansion.EditStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEditStatusNull() {
                this[this.tableOrderExpansion.EditStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowStatusNull() {
                return this.IsNull(this.tableOrderExpansion.RowStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowStatusNull() {
                this[this.tableOrderExpansion.RowStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInpGoodsNoNull() {
                return this.IsNull(this.tableOrderExpansion.InpGoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInpGoodsNoNull() {
                this[this.tableOrderExpansion.InpGoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInpGoodsNoGuideButtonNull() {
                return this.IsNull(this.tableOrderExpansion.InpGoodsNoGuideButtonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInpGoodsNoGuideButtonNull() {
                this[this.tableOrderExpansion.InpGoodsNoGuideButtonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInpAcceptAnOrderCntNull() {
                return this.IsNull(this.tableOrderExpansion.InpAcceptAnOrderCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInpAcceptAnOrderCntNull() {
                this[this.tableOrderExpansion.InpAcceptAnOrderCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInpBoCodeNull() {
                return this.IsNull(this.tableOrderExpansion.InpBoCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInpBoCodeNull() {
                this[this.tableOrderExpansion.InpBoCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInpGoodsMakerCdNull() {
                return this.IsNull(this.tableOrderExpansion.InpGoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInpGoodsMakerCdNull() {
                this[this.tableOrderExpansion.InpGoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInpBLGoodsCodeNull() {
                return this.IsNull(this.tableOrderExpansion.InpBLGoodsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInpBLGoodsCodeNull() {
                this[this.tableOrderExpansion.InpBLGoodsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInpBLGoodsNameNull() {
                return this.IsNull(this.tableOrderExpansion.InpBLGoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInpBLGoodsNameNull() {
                this[this.tableOrderExpansion.InpBLGoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInpMakerNameNull() {
                return this.IsNull(this.tableOrderExpansion.InpMakerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInpMakerNameNull() {
                this[this.tableOrderExpansion.InpMakerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDspBLGoodsNameNull() {
                return this.IsNull(this.tableOrderExpansion.DspBLGoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDspBLGoodsNameNull() {
                this[this.tableOrderExpansion.DspBLGoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDspStockCntNull() {
                return this.IsNull(this.tableOrderExpansion.DspStockCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDspStockCntNull() {
                this[this.tableOrderExpansion.DspStockCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDspWarehouseNameNull() {
                return this.IsNull(this.tableOrderExpansion.DspWarehouseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDspWarehouseNameNull() {
                this[this.tableOrderExpansion.DspWarehouseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDspWarehouseShelfNoNull() {
                return this.IsNull(this.tableOrderExpansion.DspWarehouseShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDspWarehouseShelfNoNull() {
                this[this.tableOrderExpansion.DspWarehouseShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCodeNull() {
                return this.IsNull(this.tableOrderExpansion.WarehouseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCodeNull() {
                this[this.tableOrderExpansion.WarehouseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNameNull() {
                return this.IsNull(this.tableOrderExpansion.WarehouseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNameNull() {
                this[this.tableOrderExpansion.WarehouseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseShelfNoNull() {
                return this.IsNull(this.tableOrderExpansion.WarehouseShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseShelfNoNull() {
                this[this.tableOrderExpansion.WarehouseShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBoCodeNull() {
                return this.IsNull(this.tableOrderExpansion.BoCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBoCodeNull() {
                this[this.tableOrderExpansion.BoCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMakerCdNull() {
                return this.IsNull(this.tableOrderExpansion.GoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMakerCdNull() {
                this[this.tableOrderExpansion.GoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerNameNull() {
                return this.IsNull(this.tableOrderExpansion.MakerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerNameNull() {
                this[this.tableOrderExpansion.MakerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNull() {
                return this.IsNull(this.tableOrderExpansion.GoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNull() {
                this[this.tableOrderExpansion.GoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNoneHyphenNull() {
                return this.IsNull(this.tableOrderExpansion.GoodsNoNoneHyphenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNoneHyphenNull() {
                this[this.tableOrderExpansion.GoodsNoNoneHyphenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableOrderExpansion.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableOrderExpansion.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcceptAnOrderCntNull() {
                return this.IsNull(this.tableOrderExpansion.AcceptAnOrderCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcceptAnOrderCntNull() {
                this[this.tableOrderExpansion.AcceptAnOrderCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUoeRemark1Null() {
                return this.IsNull(this.tableOrderExpansion.UoeRemark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUoeRemark1Null() {
                this[this.tableOrderExpansion.UoeRemark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUoeRemark2Null() {
                return this.IsNull(this.tableOrderExpansion.UoeRemark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUoeRemark2Null() {
                this[this.tableOrderExpansion.UoeRemark2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsKindCodeNull() {
                return this.IsNull(this.tableOrderExpansion.GoodsKindCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsKindCodeNull() {
                this[this.tableOrderExpansion.GoodsKindCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerKanaNameNull() {
                return this.IsNull(this.tableOrderExpansion.MakerKanaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerKanaNameNull() {
                this[this.tableOrderExpansion.MakerKanaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameKanaNull() {
                return this.IsNull(this.tableOrderExpansion.GoodsNameKanaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameKanaNull() {
                this[this.tableOrderExpansion.GoodsNameKanaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsLGroupNull() {
                return this.IsNull(this.tableOrderExpansion.GoodsLGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsLGroupNull() {
                this[this.tableOrderExpansion.GoodsLGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsLGroupNameNull() {
                return this.IsNull(this.tableOrderExpansion.GoodsLGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsLGroupNameNull() {
                this[this.tableOrderExpansion.GoodsLGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMGroupNull() {
                return this.IsNull(this.tableOrderExpansion.GoodsMGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMGroupNull() {
                this[this.tableOrderExpansion.GoodsMGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMGroupNameNull() {
                return this.IsNull(this.tableOrderExpansion.GoodsMGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMGroupNameNull() {
                this[this.tableOrderExpansion.GoodsMGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGroupCodeNull() {
                return this.IsNull(this.tableOrderExpansion.BLGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGroupCodeNull() {
                this[this.tableOrderExpansion.BLGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGroupNameNull() {
                return this.IsNull(this.tableOrderExpansion.BLGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGroupNameNull() {
                this[this.tableOrderExpansion.BLGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGoodsCodeNull() {
                return this.IsNull(this.tableOrderExpansion.BLGoodsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGoodsCodeNull() {
                this[this.tableOrderExpansion.BLGoodsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGoodsFullNameNull() {
                return this.IsNull(this.tableOrderExpansion.BLGoodsFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGoodsFullNameNull() {
                this[this.tableOrderExpansion.BLGoodsFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockOrderDivCdNull() {
                return this.IsNull(this.tableOrderExpansion.StockOrderDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockOrderDivCdNull() {
                this[this.tableOrderExpansion.StockOrderDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpenPriceDivNull() {
                return this.IsNull(this.tableOrderExpansion.OpenPriceDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpenPriceDivNull() {
                this[this.tableOrderExpansion.OpenPriceDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceTaxExcFlNull() {
                return this.IsNull(this.tableOrderExpansion.ListPriceTaxExcFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceTaxExcFlNull() {
                this[this.tableOrderExpansion.ListPriceTaxExcFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceTaxIncFlNull() {
                return this.IsNull(this.tableOrderExpansion.ListPriceTaxIncFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceTaxIncFlNull() {
                this[this.tableOrderExpansion.ListPriceTaxIncFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfListPriceNull() {
                return this.IsNull(this.tableOrderExpansion.BfListPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfListPriceNull() {
                this[this.tableOrderExpansion.BfListPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateBLGoodsCodeNull() {
                return this.IsNull(this.tableOrderExpansion.RateBLGoodsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateBLGoodsCodeNull() {
                this[this.tableOrderExpansion.RateBLGoodsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateBLGoodsNameNull() {
                return this.IsNull(this.tableOrderExpansion.RateBLGoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateBLGoodsNameNull() {
                this[this.tableOrderExpansion.RateBLGoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxationCodeNull() {
                return this.IsNull(this.tableOrderExpansion.TaxationCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxationCodeNull() {
                this[this.tableOrderExpansion.TaxationCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceNull() {
                return this.IsNull(this.tableOrderExpansion.ListPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceNull() {
                this[this.tableOrderExpansion.ListPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnitCostNull() {
                return this.IsNull(this.tableOrderExpansion.SalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnitCostNull() {
                this[this.tableOrderExpansion.SalesUnitCostColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OrderExpansionRowChangeEvent : global::System.EventArgs {
            
            private OrderExpansionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderExpansionRowChangeEvent(OrderExpansionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderExpansionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591