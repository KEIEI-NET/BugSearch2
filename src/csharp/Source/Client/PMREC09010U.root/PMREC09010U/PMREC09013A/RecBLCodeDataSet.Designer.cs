//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.5485
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.Controller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RecGoodsLkDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RecGoodsLkDataSet : global::System.Data.DataSet {
        
        private RecGoodsLkDataTable tableRecGoodsLk;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RecGoodsLkDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RecGoodsLkDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["RecGoodsLk"] != null)) {
                    base.Tables.Add(new RecGoodsLkDataTable(ds.Tables["RecGoodsLk"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RecGoodsLkDataTable RecGoodsLk {
            get {
                return this.tableRecGoodsLk;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RecGoodsLkDataSet cln = ((RecGoodsLkDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["RecGoodsLk"] != null)) {
                    base.Tables.Add(new RecGoodsLkDataTable(ds.Tables["RecGoodsLk"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableRecGoodsLk = ((RecGoodsLkDataTable)(base.Tables["RecGoodsLk"]));
            if ((initTable == true)) {
                if ((this.tableRecGoodsLk != null)) {
                    this.tableRecGoodsLk.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RecGoodsLkDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RecGoodsLkDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableRecGoodsLk = new RecGoodsLkDataTable();
            base.Tables.Add(this.tableRecGoodsLk);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRecGoodsLk() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RecGoodsLkDataSet ds = new RecGoodsLkDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void RecGoodsLkRowChangeEventHandler(object sender, RecGoodsLkRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RecGoodsLkDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnUpdateTime;
            
            private global::System.Data.DataColumn columnInqOtherSecCd;
            
            private global::System.Data.DataColumn columnInqOtherSecNm;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerSnm;
            
            private global::System.Data.DataColumn columnRecSourceBLGoodsCd;
            
            private global::System.Data.DataColumn columnRecSourceBLGoodsNm;
            
            private global::System.Data.DataColumn columnRecDestBLGoodsCd;
            
            private global::System.Data.DataColumn columnRecDestBLGoodsNm;
            
            private global::System.Data.DataColumn columnGoodsComment;
            
            private global::System.Data.DataColumn columnInqOriginalEpCd;
            
            private global::System.Data.DataColumn columnInqOriginalSecCd;
            
            private global::System.Data.DataColumn columnInqOtherEpCd;
            
            private global::System.Data.DataColumn columnFilterGuid;
            
            private global::System.Data.DataColumn columnRowDeleteFlg;
            
            private global::System.Data.DataColumn columnRowStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecGoodsLkDataTable() {
                this.TableName = "RecGoodsLk";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RecGoodsLkDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RecGoodsLkDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateTimeColumn {
                get {
                    return this.columnUpdateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOtherSecCdColumn {
                get {
                    return this.columnInqOtherSecCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOtherSecNmColumn {
                get {
                    return this.columnInqOtherSecNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerSnmColumn {
                get {
                    return this.columnCustomerSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecSourceBLGoodsCdColumn {
                get {
                    return this.columnRecSourceBLGoodsCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecSourceBLGoodsNmColumn {
                get {
                    return this.columnRecSourceBLGoodsNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecDestBLGoodsCdColumn {
                get {
                    return this.columnRecDestBLGoodsCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecDestBLGoodsNmColumn {
                get {
                    return this.columnRecDestBLGoodsNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsCommentColumn {
                get {
                    return this.columnGoodsComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOriginalEpCdColumn {
                get {
                    return this.columnInqOriginalEpCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOriginalSecCdColumn {
                get {
                    return this.columnInqOriginalSecCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqOtherEpCdColumn {
                get {
                    return this.columnInqOtherEpCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FilterGuidColumn {
                get {
                    return this.columnFilterGuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowDeleteFlgColumn {
                get {
                    return this.columnRowDeleteFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowStatusColumn {
                get {
                    return this.columnRowStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecGoodsLkRow this[int index] {
                get {
                    return ((RecGoodsLkRow)(this.Rows[index]));
                }
            }
            
            public event RecGoodsLkRowChangeEventHandler RecGoodsLkRowChanging;
            
            public event RecGoodsLkRowChangeEventHandler RecGoodsLkRowChanged;
            
            public event RecGoodsLkRowChangeEventHandler RecGoodsLkRowDeleting;
            
            public event RecGoodsLkRowChangeEventHandler RecGoodsLkRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRecGoodsLkRow(RecGoodsLkRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecGoodsLkRow AddRecGoodsLkRow(
                        int RowNo, 
                        string UpdateTime, 
                        string InqOtherSecCd, 
                        string InqOtherSecNm, 
                        string CustomerCode, 
                        string CustomerSnm, 
                        int RecSourceBLGoodsCd, 
                        string RecSourceBLGoodsNm, 
                        int RecDestBLGoodsCd, 
                        string RecDestBLGoodsNm, 
                        string GoodsComment, 
                        string InqOriginalEpCd, 
                        string InqOriginalSecCd, 
                        string InqOtherEpCd, 
                        System.Guid FilterGuid, 
                        int RowDeleteFlg, 
                        int RowStatus) {
                RecGoodsLkRow rowRecGoodsLkRow = ((RecGoodsLkRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowNo,
                        UpdateTime,
                        InqOtherSecCd,
                        InqOtherSecNm,
                        CustomerCode,
                        CustomerSnm,
                        RecSourceBLGoodsCd,
                        RecSourceBLGoodsNm,
                        RecDestBLGoodsCd,
                        RecDestBLGoodsNm,
                        GoodsComment,
                        InqOriginalEpCd,
                        InqOriginalSecCd,
                        InqOtherEpCd,
                        FilterGuid,
                        RowDeleteFlg,
                        RowStatus};
                rowRecGoodsLkRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRecGoodsLkRow);
                return rowRecGoodsLkRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecGoodsLkRow FindByRowNo(int RowNo) {
                return ((RecGoodsLkRow)(this.Rows.Find(new object[] {
                            RowNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RecGoodsLkDataTable cln = ((RecGoodsLkDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RecGoodsLkDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowNo = base.Columns["RowNo"];
                this.columnUpdateTime = base.Columns["UpdateTime"];
                this.columnInqOtherSecCd = base.Columns["InqOtherSecCd"];
                this.columnInqOtherSecNm = base.Columns["InqOtherSecNm"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerSnm = base.Columns["CustomerSnm"];
                this.columnRecSourceBLGoodsCd = base.Columns["RecSourceBLGoodsCd"];
                this.columnRecSourceBLGoodsNm = base.Columns["RecSourceBLGoodsNm"];
                this.columnRecDestBLGoodsCd = base.Columns["RecDestBLGoodsCd"];
                this.columnRecDestBLGoodsNm = base.Columns["RecDestBLGoodsNm"];
                this.columnGoodsComment = base.Columns["GoodsComment"];
                this.columnInqOriginalEpCd = base.Columns["InqOriginalEpCd"];
                this.columnInqOriginalSecCd = base.Columns["InqOriginalSecCd"];
                this.columnInqOtherEpCd = base.Columns["InqOtherEpCd"];
                this.columnFilterGuid = base.Columns["FilterGuid"];
                this.columnRowDeleteFlg = base.Columns["RowDeleteFlg"];
                this.columnRowStatus = base.Columns["RowStatus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnUpdateTime = new global::System.Data.DataColumn("UpdateTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateTime);
                this.columnInqOtherSecCd = new global::System.Data.DataColumn("InqOtherSecCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOtherSecCd);
                this.columnInqOtherSecNm = new global::System.Data.DataColumn("InqOtherSecNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOtherSecNm);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerSnm = new global::System.Data.DataColumn("CustomerSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerSnm);
                this.columnRecSourceBLGoodsCd = new global::System.Data.DataColumn("RecSourceBLGoodsCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecSourceBLGoodsCd);
                this.columnRecSourceBLGoodsNm = new global::System.Data.DataColumn("RecSourceBLGoodsNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecSourceBLGoodsNm);
                this.columnRecDestBLGoodsCd = new global::System.Data.DataColumn("RecDestBLGoodsCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecDestBLGoodsCd);
                this.columnRecDestBLGoodsNm = new global::System.Data.DataColumn("RecDestBLGoodsNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecDestBLGoodsNm);
                this.columnGoodsComment = new global::System.Data.DataColumn("GoodsComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsComment);
                this.columnInqOriginalEpCd = new global::System.Data.DataColumn("InqOriginalEpCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOriginalEpCd);
                this.columnInqOriginalSecCd = new global::System.Data.DataColumn("InqOriginalSecCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOriginalSecCd);
                this.columnInqOtherEpCd = new global::System.Data.DataColumn("InqOtherEpCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqOtherEpCd);
                this.columnFilterGuid = new global::System.Data.DataColumn("FilterGuid", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilterGuid);
                this.columnRowDeleteFlg = new global::System.Data.DataColumn("RowDeleteFlg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowDeleteFlg);
                this.columnRowStatus = new global::System.Data.DataColumn("RowStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, true));
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "No.";
                this.columnRowNo.DefaultValue = ((int)(0));
                this.columnUpdateTime.AllowDBNull = false;
                this.columnUpdateTime.Caption = "削除日";
                this.columnUpdateTime.DefaultValue = ((string)(""));
                this.columnInqOtherSecCd.Caption = "拠点";
                this.columnInqOtherSecCd.DefaultValue = ((string)(""));
                this.columnInqOtherSecNm.Caption = "拠点名";
                this.columnInqOtherSecNm.DefaultValue = ((string)(""));
                this.columnCustomerCode.AllowDBNull = false;
                this.columnCustomerCode.Caption = "得意先ｺｰﾄﾞ";
                this.columnCustomerCode.DefaultValue = ((string)(""));
                this.columnCustomerSnm.Caption = "得意先名";
                this.columnCustomerSnm.DefaultValue = ((string)(""));
                this.columnRecSourceBLGoodsCd.AllowDBNull = false;
                this.columnRecSourceBLGoodsCd.Caption = "元BLｺｰﾄﾞ";
                this.columnRecSourceBLGoodsCd.DefaultValue = ((int)(0));
                this.columnRecSourceBLGoodsNm.Caption = "推奨元BLｺｰﾄﾞ名";
                this.columnRecSourceBLGoodsNm.DefaultValue = ((string)(""));
                this.columnRecDestBLGoodsCd.AllowDBNull = false;
                this.columnRecDestBLGoodsCd.Caption = "先BLｺｰﾄﾞ";
                this.columnRecDestBLGoodsCd.DefaultValue = ((int)(0));
                this.columnRecDestBLGoodsNm.Caption = "推奨先BLｺｰﾄﾞ名";
                this.columnRecDestBLGoodsNm.DefaultValue = ((string)(""));
                this.columnGoodsComment.Caption = "パーツ説明";
                this.columnGoodsComment.DefaultValue = ((string)(""));
                this.columnInqOriginalEpCd.Caption = "問合せ元企業コード";
                this.columnInqOriginalEpCd.DefaultValue = ((string)(""));
                this.columnInqOriginalSecCd.Caption = "問合せ元拠点コード";
                this.columnInqOriginalSecCd.DefaultValue = ((string)(""));
                this.columnInqOtherEpCd.Caption = "問合せ先企業コード";
                this.columnInqOtherEpCd.DefaultValue = ((string)(""));
                this.columnFilterGuid.AllowDBNull = false;
                this.columnRowDeleteFlg.AllowDBNull = false;
                this.columnRowDeleteFlg.Caption = "行削除フラグ";
                this.columnRowDeleteFlg.DefaultValue = ((int)(0));
                this.columnRowStatus.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecGoodsLkRow NewRecGoodsLkRow() {
                return ((RecGoodsLkRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RecGoodsLkRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RecGoodsLkRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RecGoodsLkRowChanged != null)) {
                    this.RecGoodsLkRowChanged(this, new RecGoodsLkRowChangeEvent(((RecGoodsLkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RecGoodsLkRowChanging != null)) {
                    this.RecGoodsLkRowChanging(this, new RecGoodsLkRowChangeEvent(((RecGoodsLkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RecGoodsLkRowDeleted != null)) {
                    this.RecGoodsLkRowDeleted(this, new RecGoodsLkRowChangeEvent(((RecGoodsLkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RecGoodsLkRowDeleting != null)) {
                    this.RecGoodsLkRowDeleting(this, new RecGoodsLkRowChangeEvent(((RecGoodsLkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRecGoodsLkRow(RecGoodsLkRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RecGoodsLkDataSet ds = new RecGoodsLkDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RecGoodsLkDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RecGoodsLkRow : global::System.Data.DataRow {
            
            private RecGoodsLkDataTable tableRecGoodsLk;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RecGoodsLkRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRecGoodsLk = ((RecGoodsLkDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableRecGoodsLk.RowNoColumn]));
                }
                set {
                    this[this.tableRecGoodsLk.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdateTime {
                get {
                    return ((string)(this[this.tableRecGoodsLk.UpdateTimeColumn]));
                }
                set {
                    this[this.tableRecGoodsLk.UpdateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOtherSecCd {
                get {
                    try {
                        return ((string)(this[this.tableRecGoodsLk.InqOtherSecCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecGoodsLk\' にある列 \'InqOtherSecCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecGoodsLk.InqOtherSecCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOtherSecNm {
                get {
                    try {
                        return ((string)(this[this.tableRecGoodsLk.InqOtherSecNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecGoodsLk\' にある列 \'InqOtherSecNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecGoodsLk.InqOtherSecNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    return ((string)(this[this.tableRecGoodsLk.CustomerCodeColumn]));
                }
                set {
                    this[this.tableRecGoodsLk.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerSnm {
                get {
                    try {
                        return ((string)(this[this.tableRecGoodsLk.CustomerSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecGoodsLk\' にある列 \'CustomerSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecGoodsLk.CustomerSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RecSourceBLGoodsCd {
                get {
                    return ((int)(this[this.tableRecGoodsLk.RecSourceBLGoodsCdColumn]));
                }
                set {
                    this[this.tableRecGoodsLk.RecSourceBLGoodsCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecSourceBLGoodsNm {
                get {
                    try {
                        return ((string)(this[this.tableRecGoodsLk.RecSourceBLGoodsNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecGoodsLk\' にある列 \'RecSourceBLGoodsNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecGoodsLk.RecSourceBLGoodsNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RecDestBLGoodsCd {
                get {
                    return ((int)(this[this.tableRecGoodsLk.RecDestBLGoodsCdColumn]));
                }
                set {
                    this[this.tableRecGoodsLk.RecDestBLGoodsCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RecDestBLGoodsNm {
                get {
                    try {
                        return ((string)(this[this.tableRecGoodsLk.RecDestBLGoodsNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecGoodsLk\' にある列 \'RecDestBLGoodsNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecGoodsLk.RecDestBLGoodsNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsComment {
                get {
                    try {
                        return ((string)(this[this.tableRecGoodsLk.GoodsCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecGoodsLk\' にある列 \'GoodsComment\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecGoodsLk.GoodsCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOriginalEpCd {
                get {
                    try {
                        return ((string)(this[this.tableRecGoodsLk.InqOriginalEpCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecGoodsLk\' にある列 \'InqOriginalEpCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecGoodsLk.InqOriginalEpCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOriginalSecCd {
                get {
                    try {
                        return ((string)(this[this.tableRecGoodsLk.InqOriginalSecCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecGoodsLk\' にある列 \'InqOriginalSecCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecGoodsLk.InqOriginalSecCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqOtherEpCd {
                get {
                    try {
                        return ((string)(this[this.tableRecGoodsLk.InqOtherEpCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecGoodsLk\' にある列 \'InqOtherEpCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecGoodsLk.InqOtherEpCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid FilterGuid {
                get {
                    return ((global::System.Guid)(this[this.tableRecGoodsLk.FilterGuidColumn]));
                }
                set {
                    this[this.tableRecGoodsLk.FilterGuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowDeleteFlg {
                get {
                    return ((int)(this[this.tableRecGoodsLk.RowDeleteFlgColumn]));
                }
                set {
                    this[this.tableRecGoodsLk.RowDeleteFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowStatus {
                get {
                    try {
                        return ((int)(this[this.tableRecGoodsLk.RowStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RecGoodsLk\' にある列 \'RowStatus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRecGoodsLk.RowStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInqOtherSecCdNull() {
                return this.IsNull(this.tableRecGoodsLk.InqOtherSecCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInqOtherSecCdNull() {
                this[this.tableRecGoodsLk.InqOtherSecCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInqOtherSecNmNull() {
                return this.IsNull(this.tableRecGoodsLk.InqOtherSecNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInqOtherSecNmNull() {
                this[this.tableRecGoodsLk.InqOtherSecNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerSnmNull() {
                return this.IsNull(this.tableRecGoodsLk.CustomerSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerSnmNull() {
                this[this.tableRecGoodsLk.CustomerSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecSourceBLGoodsNmNull() {
                return this.IsNull(this.tableRecGoodsLk.RecSourceBLGoodsNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecSourceBLGoodsNmNull() {
                this[this.tableRecGoodsLk.RecSourceBLGoodsNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecDestBLGoodsNmNull() {
                return this.IsNull(this.tableRecGoodsLk.RecDestBLGoodsNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecDestBLGoodsNmNull() {
                this[this.tableRecGoodsLk.RecDestBLGoodsNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsCommentNull() {
                return this.IsNull(this.tableRecGoodsLk.GoodsCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsCommentNull() {
                this[this.tableRecGoodsLk.GoodsCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInqOriginalEpCdNull() {
                return this.IsNull(this.tableRecGoodsLk.InqOriginalEpCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInqOriginalEpCdNull() {
                this[this.tableRecGoodsLk.InqOriginalEpCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInqOriginalSecCdNull() {
                return this.IsNull(this.tableRecGoodsLk.InqOriginalSecCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInqOriginalSecCdNull() {
                this[this.tableRecGoodsLk.InqOriginalSecCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInqOtherEpCdNull() {
                return this.IsNull(this.tableRecGoodsLk.InqOtherEpCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInqOtherEpCdNull() {
                this[this.tableRecGoodsLk.InqOtherEpCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowStatusNull() {
                return this.IsNull(this.tableRecGoodsLk.RowStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowStatusNull() {
                this[this.tableRecGoodsLk.RowStatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RecGoodsLkRowChangeEvent : global::System.EventArgs {
            
            private RecGoodsLkRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecGoodsLkRowChangeEvent(RecGoodsLkRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RecGoodsLkRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591