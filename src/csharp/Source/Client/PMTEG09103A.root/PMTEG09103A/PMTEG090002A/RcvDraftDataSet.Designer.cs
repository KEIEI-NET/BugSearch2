//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.5456
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.Controller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RcvDraftDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RcvDraftDataSet : global::System.Data.DataSet {
        
        private RcvDraftDataTable tableRcvDraft;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RcvDraftDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RcvDraftDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["RcvDraft"] != null)) {
                    base.Tables.Add(new RcvDraftDataTable(ds.Tables["RcvDraft"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RcvDraftDataTable RcvDraft {
            get {
                return this.tableRcvDraft;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RcvDraftDataSet cln = ((RcvDraftDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["RcvDraft"] != null)) {
                    base.Tables.Add(new RcvDraftDataTable(ds.Tables["RcvDraft"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableRcvDraft = ((RcvDraftDataTable)(base.Tables["RcvDraft"]));
            if ((initTable == true)) {
                if ((this.tableRcvDraft != null)) {
                    this.tableRcvDraft.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RcvDraftDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RcvDraftDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableRcvDraft = new RcvDraftDataTable();
            base.Tables.Add(this.tableRcvDraft);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRcvDraft() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RcvDraftDataSet ds = new RcvDraftDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void RcvDraftRowChangeEventHandler(object sender, RcvDraftRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RcvDraftDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnUpdateDateTime;
            
            private global::System.Data.DataColumn columnEnterpriseCode;
            
            private global::System.Data.DataColumn columnFileHeaderGuid;
            
            private global::System.Data.DataColumn columnUpdEmployeeCode;
            
            private global::System.Data.DataColumn columnUpdAssemblyId1;
            
            private global::System.Data.DataColumn columnUpdAssemblyId2;
            
            private global::System.Data.DataColumn columnLogicalDeleteCode;
            
            private global::System.Data.DataColumn columnRcvDraftNo;
            
            private global::System.Data.DataColumn columnDraftKindCd;
            
            private global::System.Data.DataColumn columnDraftDivide;
            
            private global::System.Data.DataColumn columnDeposit;
            
            private global::System.Data.DataColumn columnBankAndBranchCd;
            
            private global::System.Data.DataColumn columnBankAndBranchNm;
            
            private global::System.Data.DataColumn columnSectionCode;
            
            private global::System.Data.DataColumn columnAddUpSecCode;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerName2;
            
            private global::System.Data.DataColumn columnCustomerSnm;
            
            private global::System.Data.DataColumn columnProcDate;
            
            private global::System.Data.DataColumn columnDraftDrawingDate;
            
            private global::System.Data.DataColumn columnValidityTerm;
            
            private global::System.Data.DataColumn columnDraftStmntDate;
            
            private global::System.Data.DataColumn columnOutline1;
            
            private global::System.Data.DataColumn columnOutline2;
            
            private global::System.Data.DataColumn columnAcptAnOdrStatus;
            
            private global::System.Data.DataColumn columnDepositSlipNo;
            
            private global::System.Data.DataColumn columnDepositRowNo;
            
            private global::System.Data.DataColumn columnDepositDate;
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnDraftDrawingDateAdFormal;
            
            private global::System.Data.DataColumn columnValidityTermAdFormal;
            
            private static System.DateTime columnCreateDateTime_defaultValue = global::System.DateTime.Parse("01/01/0001 00:00:00");
            
            private static System.DateTime columnUpdateDateTime_defaultValue = global::System.DateTime.Parse("01/01/0001 00:00:00");
            
            private static System.DateTime columnDraftDrawingDate_defaultValue = global::System.DateTime.Parse("01/01/0001 00:00:00");
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RcvDraftDataTable() {
                this.TableName = "RcvDraft";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RcvDraftDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RcvDraftDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateDateTimeColumn {
                get {
                    return this.columnUpdateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterpriseCodeColumn {
                get {
                    return this.columnEnterpriseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileHeaderGuidColumn {
                get {
                    return this.columnFileHeaderGuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdEmployeeCodeColumn {
                get {
                    return this.columnUpdEmployeeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdAssemblyId1Column {
                get {
                    return this.columnUpdAssemblyId1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdAssemblyId2Column {
                get {
                    return this.columnUpdAssemblyId2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogicalDeleteCodeColumn {
                get {
                    return this.columnLogicalDeleteCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RcvDraftNoColumn {
                get {
                    return this.columnRcvDraftNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DraftKindCdColumn {
                get {
                    return this.columnDraftKindCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DraftDivideColumn {
                get {
                    return this.columnDraftDivide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepositColumn {
                get {
                    return this.columnDeposit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankAndBranchCdColumn {
                get {
                    return this.columnBankAndBranchCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankAndBranchNmColumn {
                get {
                    return this.columnBankAndBranchNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionCodeColumn {
                get {
                    return this.columnSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddUpSecCodeColumn {
                get {
                    return this.columnAddUpSecCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerName2Column {
                get {
                    return this.columnCustomerName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerSnmColumn {
                get {
                    return this.columnCustomerSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProcDateColumn {
                get {
                    return this.columnProcDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DraftDrawingDateColumn {
                get {
                    return this.columnDraftDrawingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValidityTermColumn {
                get {
                    return this.columnValidityTerm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DraftStmntDateColumn {
                get {
                    return this.columnDraftStmntDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Outline1Column {
                get {
                    return this.columnOutline1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Outline2Column {
                get {
                    return this.columnOutline2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcptAnOdrStatusColumn {
                get {
                    return this.columnAcptAnOdrStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepositSlipNoColumn {
                get {
                    return this.columnDepositSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepositRowNoColumn {
                get {
                    return this.columnDepositRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepositDateColumn {
                get {
                    return this.columnDepositDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DraftDrawingDateAdFormalColumn {
                get {
                    return this.columnDraftDrawingDateAdFormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValidityTermAdFormalColumn {
                get {
                    return this.columnValidityTermAdFormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RcvDraftRow this[int index] {
                get {
                    return ((RcvDraftRow)(this.Rows[index]));
                }
            }
            
            public event RcvDraftRowChangeEventHandler RcvDraftRowChanging;
            
            public event RcvDraftRowChangeEventHandler RcvDraftRowChanged;
            
            public event RcvDraftRowChangeEventHandler RcvDraftRowDeleting;
            
            public event RcvDraftRowChangeEventHandler RcvDraftRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRcvDraftRow(RcvDraftRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RcvDraftRow AddRcvDraftRow(
                        System.DateTime CreateDateTime, 
                        System.DateTime UpdateDateTime, 
                        string EnterpriseCode, 
                        System.Guid FileHeaderGuid, 
                        string UpdEmployeeCode, 
                        string UpdAssemblyId1, 
                        string UpdAssemblyId2, 
                        int LogicalDeleteCode, 
                        string RcvDraftNo, 
                        int DraftKindCd, 
                        int DraftDivide, 
                        long Deposit, 
                        int BankAndBranchCd, 
                        string BankAndBranchNm, 
                        string SectionCode, 
                        string AddUpSecCode, 
                        int CustomerCode, 
                        string CustomerName, 
                        string CustomerName2, 
                        string CustomerSnm, 
                        int ProcDate, 
                        System.DateTime DraftDrawingDate, 
                        int ValidityTerm, 
                        int DraftStmntDate, 
                        string Outline1, 
                        string Outline2, 
                        int AcptAnOdrStatus, 
                        int DepositSlipNo, 
                        int DepositRowNo, 
                        int DepositDate, 
                        int RowNo, 
                        string DraftDrawingDateAdFormal, 
                        string ValidityTermAdFormal) {
                RcvDraftRow rowRcvDraftRow = ((RcvDraftRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CreateDateTime,
                        UpdateDateTime,
                        EnterpriseCode,
                        FileHeaderGuid,
                        UpdEmployeeCode,
                        UpdAssemblyId1,
                        UpdAssemblyId2,
                        LogicalDeleteCode,
                        RcvDraftNo,
                        DraftKindCd,
                        DraftDivide,
                        Deposit,
                        BankAndBranchCd,
                        BankAndBranchNm,
                        SectionCode,
                        AddUpSecCode,
                        CustomerCode,
                        CustomerName,
                        CustomerName2,
                        CustomerSnm,
                        ProcDate,
                        DraftDrawingDate,
                        ValidityTerm,
                        DraftStmntDate,
                        Outline1,
                        Outline2,
                        AcptAnOdrStatus,
                        DepositSlipNo,
                        DepositRowNo,
                        DepositDate,
                        RowNo,
                        DraftDrawingDateAdFormal,
                        ValidityTermAdFormal};
                rowRcvDraftRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRcvDraftRow);
                return rowRcvDraftRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RcvDraftDataTable cln = ((RcvDraftDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RcvDraftDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnUpdateDateTime = base.Columns["UpdateDateTime"];
                this.columnEnterpriseCode = base.Columns["EnterpriseCode"];
                this.columnFileHeaderGuid = base.Columns["FileHeaderGuid"];
                this.columnUpdEmployeeCode = base.Columns["UpdEmployeeCode"];
                this.columnUpdAssemblyId1 = base.Columns["UpdAssemblyId1"];
                this.columnUpdAssemblyId2 = base.Columns["UpdAssemblyId2"];
                this.columnLogicalDeleteCode = base.Columns["LogicalDeleteCode"];
                this.columnRcvDraftNo = base.Columns["RcvDraftNo"];
                this.columnDraftKindCd = base.Columns["DraftKindCd"];
                this.columnDraftDivide = base.Columns["DraftDivide"];
                this.columnDeposit = base.Columns["Deposit"];
                this.columnBankAndBranchCd = base.Columns["BankAndBranchCd"];
                this.columnBankAndBranchNm = base.Columns["BankAndBranchNm"];
                this.columnSectionCode = base.Columns["SectionCode"];
                this.columnAddUpSecCode = base.Columns["AddUpSecCode"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerName2 = base.Columns["CustomerName2"];
                this.columnCustomerSnm = base.Columns["CustomerSnm"];
                this.columnProcDate = base.Columns["ProcDate"];
                this.columnDraftDrawingDate = base.Columns["DraftDrawingDate"];
                this.columnValidityTerm = base.Columns["ValidityTerm"];
                this.columnDraftStmntDate = base.Columns["DraftStmntDate"];
                this.columnOutline1 = base.Columns["Outline1"];
                this.columnOutline2 = base.Columns["Outline2"];
                this.columnAcptAnOdrStatus = base.Columns["AcptAnOdrStatus"];
                this.columnDepositSlipNo = base.Columns["DepositSlipNo"];
                this.columnDepositRowNo = base.Columns["DepositRowNo"];
                this.columnDepositDate = base.Columns["DepositDate"];
                this.columnRowNo = base.Columns["RowNo"];
                this.columnDraftDrawingDateAdFormal = base.Columns["DraftDrawingDateAdFormal"];
                this.columnValidityTermAdFormal = base.Columns["ValidityTermAdFormal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnUpdateDateTime = new global::System.Data.DataColumn("UpdateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDateTime);
                this.columnEnterpriseCode = new global::System.Data.DataColumn("EnterpriseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterpriseCode);
                this.columnFileHeaderGuid = new global::System.Data.DataColumn("FileHeaderGuid", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileHeaderGuid);
                this.columnUpdEmployeeCode = new global::System.Data.DataColumn("UpdEmployeeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdEmployeeCode);
                this.columnUpdAssemblyId1 = new global::System.Data.DataColumn("UpdAssemblyId1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdAssemblyId1);
                this.columnUpdAssemblyId2 = new global::System.Data.DataColumn("UpdAssemblyId2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdAssemblyId2);
                this.columnLogicalDeleteCode = new global::System.Data.DataColumn("LogicalDeleteCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogicalDeleteCode);
                this.columnRcvDraftNo = new global::System.Data.DataColumn("RcvDraftNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRcvDraftNo);
                this.columnDraftKindCd = new global::System.Data.DataColumn("DraftKindCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDraftKindCd);
                this.columnDraftDivide = new global::System.Data.DataColumn("DraftDivide", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDraftDivide);
                this.columnDeposit = new global::System.Data.DataColumn("Deposit", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeposit);
                this.columnBankAndBranchCd = new global::System.Data.DataColumn("BankAndBranchCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAndBranchCd);
                this.columnBankAndBranchNm = new global::System.Data.DataColumn("BankAndBranchNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAndBranchNm);
                this.columnSectionCode = new global::System.Data.DataColumn("SectionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionCode);
                this.columnAddUpSecCode = new global::System.Data.DataColumn("AddUpSecCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddUpSecCode);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerName2 = new global::System.Data.DataColumn("CustomerName2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName2);
                this.columnCustomerSnm = new global::System.Data.DataColumn("CustomerSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerSnm);
                this.columnProcDate = new global::System.Data.DataColumn("ProcDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcDate);
                this.columnDraftDrawingDate = new global::System.Data.DataColumn("DraftDrawingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDraftDrawingDate);
                this.columnValidityTerm = new global::System.Data.DataColumn("ValidityTerm", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValidityTerm);
                this.columnDraftStmntDate = new global::System.Data.DataColumn("DraftStmntDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDraftStmntDate);
                this.columnOutline1 = new global::System.Data.DataColumn("Outline1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutline1);
                this.columnOutline2 = new global::System.Data.DataColumn("Outline2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutline2);
                this.columnAcptAnOdrStatus = new global::System.Data.DataColumn("AcptAnOdrStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcptAnOdrStatus);
                this.columnDepositSlipNo = new global::System.Data.DataColumn("DepositSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositSlipNo);
                this.columnDepositRowNo = new global::System.Data.DataColumn("DepositRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositRowNo);
                this.columnDepositDate = new global::System.Data.DataColumn("DepositDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositDate);
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnDraftDrawingDateAdFormal = new global::System.Data.DataColumn("DraftDrawingDateAdFormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDraftDrawingDateAdFormal);
                this.columnValidityTermAdFormal = new global::System.Data.DataColumn("ValidityTermAdFormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValidityTermAdFormal);
                this.columnCreateDateTime.AllowDBNull = false;
                this.columnCreateDateTime.Caption = "CREATEDATETIMERF";
                this.columnCreateDateTime.DefaultValue = ((System.DateTime)(RcvDraftDataTable.columnCreateDateTime_defaultValue));
                this.columnUpdateDateTime.AllowDBNull = false;
                this.columnUpdateDateTime.Caption = "UPDATEDATETIMERF";
                this.columnUpdateDateTime.DefaultValue = ((System.DateTime)(RcvDraftDataTable.columnUpdateDateTime_defaultValue));
                this.columnEnterpriseCode.AllowDBNull = false;
                this.columnEnterpriseCode.Caption = "ENTERPRISECODERF";
                this.columnEnterpriseCode.DefaultValue = ((string)(""));
                this.columnFileHeaderGuid.AllowDBNull = false;
                this.columnFileHeaderGuid.Caption = "FILEHEADERGUIDRF";
                this.columnUpdEmployeeCode.AllowDBNull = false;
                this.columnUpdEmployeeCode.Caption = "UPDEMPLOYEECODERF";
                this.columnUpdEmployeeCode.DefaultValue = ((string)(""));
                this.columnUpdAssemblyId1.AllowDBNull = false;
                this.columnUpdAssemblyId1.Caption = "UPDASSEMBLYID1RF";
                this.columnUpdAssemblyId1.DefaultValue = ((string)(""));
                this.columnUpdAssemblyId2.AllowDBNull = false;
                this.columnUpdAssemblyId2.Caption = "UPDASSEMBLYID2RF";
                this.columnUpdAssemblyId2.DefaultValue = ((string)(""));
                this.columnLogicalDeleteCode.AllowDBNull = false;
                this.columnLogicalDeleteCode.Caption = "LOGICALDELETECODERF";
                this.columnLogicalDeleteCode.DefaultValue = ((int)(0));
                this.columnRcvDraftNo.AllowDBNull = false;
                this.columnRcvDraftNo.Caption = "RCVDRAFTNORF";
                this.columnRcvDraftNo.DefaultValue = ((string)(""));
                this.columnDraftKindCd.Caption = "DRAFTKINDCDRF";
                this.columnDraftKindCd.DefaultValue = ((int)(0));
                this.columnDraftDivide.Caption = "DRAFTDIVDERF";
                this.columnDraftDivide.DefaultValue = ((int)(0));
                this.columnDeposit.Caption = "DEPOSITRF";
                this.columnDeposit.DefaultValue = ((long)(0));
                this.columnBankAndBranchCd.Caption = "BANKANDBRANCHCDRF";
                this.columnBankAndBranchCd.DefaultValue = ((int)(0));
                this.columnBankAndBranchNm.Caption = "BANKANDBRANCHNMRF";
                this.columnBankAndBranchNm.DefaultValue = ((string)(""));
                this.columnSectionCode.Caption = "SECTIONCODERF";
                this.columnSectionCode.DefaultValue = ((string)(""));
                this.columnAddUpSecCode.Caption = "ADDUPSECCODERF";
                this.columnAddUpSecCode.DefaultValue = ((string)(""));
                this.columnCustomerCode.Caption = "CUSTOMERCODERF";
                this.columnCustomerCode.DefaultValue = ((int)(0));
                this.columnCustomerName.Caption = "CUSTOMERNAMERF";
                this.columnCustomerName.DefaultValue = ((string)(""));
                this.columnCustomerName2.Caption = "CUSTOMERNAME2RF";
                this.columnCustomerName2.DefaultValue = ((string)(""));
                this.columnCustomerSnm.Caption = "CUSTOMERSNMRF";
                this.columnCustomerSnm.DefaultValue = ((string)(""));
                this.columnProcDate.Caption = "PROCDATERF";
                this.columnProcDate.DefaultValue = ((int)(0));
                this.columnDraftDrawingDate.Caption = "DRAFTDRAWINGDATERF";
                this.columnDraftDrawingDate.DefaultValue = ((System.DateTime)(RcvDraftDataTable.columnDraftDrawingDate_defaultValue));
                this.columnValidityTerm.Caption = "VALIDITYTERMRF";
                this.columnValidityTerm.DefaultValue = ((int)(0));
                this.columnDraftStmntDate.Caption = "DRAFTSTMNTDATERF";
                this.columnDraftStmntDate.DefaultValue = ((int)(0));
                this.columnOutline1.Caption = "OUTLINE1RF";
                this.columnOutline1.DefaultValue = ((string)(""));
                this.columnOutline2.Caption = "OUTLINE2RF";
                this.columnOutline2.DefaultValue = ((string)(""));
                this.columnAcptAnOdrStatus.Caption = "ACPTANODRSTATUSRF";
                this.columnAcptAnOdrStatus.DefaultValue = ((int)(0));
                this.columnDepositSlipNo.Caption = "DEPOSITSLIPNORF";
                this.columnDepositSlipNo.DefaultValue = ((int)(0));
                this.columnDepositRowNo.Caption = "DEPOSITROWNORF";
                this.columnDepositRowNo.DefaultValue = ((int)(0));
                this.columnDepositDate.Caption = "DEPOSITDATERF";
                this.columnDepositDate.DefaultValue = ((int)(0));
                this.columnRowNo.DefaultValue = ((int)(0));
                this.columnDraftDrawingDateAdFormal.DefaultValue = ((string)(""));
                this.columnValidityTermAdFormal.DefaultValue = ((string)(""));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RcvDraftRow NewRcvDraftRow() {
                return ((RcvDraftRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RcvDraftRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RcvDraftRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RcvDraftRowChanged != null)) {
                    this.RcvDraftRowChanged(this, new RcvDraftRowChangeEvent(((RcvDraftRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RcvDraftRowChanging != null)) {
                    this.RcvDraftRowChanging(this, new RcvDraftRowChangeEvent(((RcvDraftRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RcvDraftRowDeleted != null)) {
                    this.RcvDraftRowDeleted(this, new RcvDraftRowChangeEvent(((RcvDraftRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RcvDraftRowDeleting != null)) {
                    this.RcvDraftRowDeleting(this, new RcvDraftRowChangeEvent(((RcvDraftRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRcvDraftRow(RcvDraftRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RcvDraftDataSet ds = new RcvDraftDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RcvDraftDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RcvDraftRow : global::System.Data.DataRow {
            
            private RcvDraftDataTable tableRcvDraft;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RcvDraftRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRcvDraft = ((RcvDraftDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreateDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableRcvDraft.CreateDateTimeColumn]));
                }
                set {
                    this[this.tableRcvDraft.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UpdateDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableRcvDraft.UpdateDateTimeColumn]));
                }
                set {
                    this[this.tableRcvDraft.UpdateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnterpriseCode {
                get {
                    return ((string)(this[this.tableRcvDraft.EnterpriseCodeColumn]));
                }
                set {
                    this[this.tableRcvDraft.EnterpriseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid FileHeaderGuid {
                get {
                    return ((global::System.Guid)(this[this.tableRcvDraft.FileHeaderGuidColumn]));
                }
                set {
                    this[this.tableRcvDraft.FileHeaderGuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdEmployeeCode {
                get {
                    return ((string)(this[this.tableRcvDraft.UpdEmployeeCodeColumn]));
                }
                set {
                    this[this.tableRcvDraft.UpdEmployeeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdAssemblyId1 {
                get {
                    return ((string)(this[this.tableRcvDraft.UpdAssemblyId1Column]));
                }
                set {
                    this[this.tableRcvDraft.UpdAssemblyId1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdAssemblyId2 {
                get {
                    return ((string)(this[this.tableRcvDraft.UpdAssemblyId2Column]));
                }
                set {
                    this[this.tableRcvDraft.UpdAssemblyId2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LogicalDeleteCode {
                get {
                    return ((int)(this[this.tableRcvDraft.LogicalDeleteCodeColumn]));
                }
                set {
                    this[this.tableRcvDraft.LogicalDeleteCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RcvDraftNo {
                get {
                    return ((string)(this[this.tableRcvDraft.RcvDraftNoColumn]));
                }
                set {
                    this[this.tableRcvDraft.RcvDraftNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DraftKindCd {
                get {
                    try {
                        return ((int)(this[this.tableRcvDraft.DraftKindCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'DraftKindCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.DraftKindCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DraftDivide {
                get {
                    try {
                        return ((int)(this[this.tableRcvDraft.DraftDivideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'DraftDivide\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.DraftDivideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Deposit {
                get {
                    try {
                        return ((long)(this[this.tableRcvDraft.DepositColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'Deposit\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.DepositColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BankAndBranchCd {
                get {
                    try {
                        return ((int)(this[this.tableRcvDraft.BankAndBranchCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'BankAndBranchCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.BankAndBranchCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankAndBranchNm {
                get {
                    try {
                        return ((string)(this[this.tableRcvDraft.BankAndBranchNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'BankAndBranchNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.BankAndBranchNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionCode {
                get {
                    try {
                        return ((string)(this[this.tableRcvDraft.SectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'SectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.SectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddUpSecCode {
                get {
                    try {
                        return ((string)(this[this.tableRcvDraft.AddUpSecCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'AddUpSecCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.AddUpSecCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerCode {
                get {
                    try {
                        return ((int)(this[this.tableRcvDraft.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'CustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableRcvDraft.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'CustomerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName2 {
                get {
                    try {
                        return ((string)(this[this.tableRcvDraft.CustomerName2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'CustomerName2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.CustomerName2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerSnm {
                get {
                    try {
                        return ((string)(this[this.tableRcvDraft.CustomerSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'CustomerSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.CustomerSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProcDate {
                get {
                    try {
                        return ((int)(this[this.tableRcvDraft.ProcDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'ProcDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.ProcDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DraftDrawingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRcvDraft.DraftDrawingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'DraftDrawingDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.DraftDrawingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ValidityTerm {
                get {
                    try {
                        return ((int)(this[this.tableRcvDraft.ValidityTermColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'ValidityTerm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.ValidityTermColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DraftStmntDate {
                get {
                    try {
                        return ((int)(this[this.tableRcvDraft.DraftStmntDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'DraftStmntDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.DraftStmntDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Outline1 {
                get {
                    try {
                        return ((string)(this[this.tableRcvDraft.Outline1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'Outline1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.Outline1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Outline2 {
                get {
                    try {
                        return ((string)(this[this.tableRcvDraft.Outline2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'Outline2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.Outline2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AcptAnOdrStatus {
                get {
                    try {
                        return ((int)(this[this.tableRcvDraft.AcptAnOdrStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'AcptAnOdrStatus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.AcptAnOdrStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DepositSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableRcvDraft.DepositSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'DepositSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.DepositSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DepositRowNo {
                get {
                    try {
                        return ((int)(this[this.tableRcvDraft.DepositRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'DepositRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.DepositRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DepositDate {
                get {
                    try {
                        return ((int)(this[this.tableRcvDraft.DepositDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'DepositDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.DepositDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    try {
                        return ((int)(this[this.tableRcvDraft.RowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'RowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DraftDrawingDateAdFormal {
                get {
                    try {
                        return ((string)(this[this.tableRcvDraft.DraftDrawingDateAdFormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'DraftDrawingDateAdFormal\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.DraftDrawingDateAdFormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ValidityTermAdFormal {
                get {
                    try {
                        return ((string)(this[this.tableRcvDraft.ValidityTermAdFormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RcvDraft\' にある列 \'ValidityTermAdFormal\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRcvDraft.ValidityTermAdFormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDraftKindCdNull() {
                return this.IsNull(this.tableRcvDraft.DraftKindCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDraftKindCdNull() {
                this[this.tableRcvDraft.DraftKindCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDraftDivideNull() {
                return this.IsNull(this.tableRcvDraft.DraftDivideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDraftDivideNull() {
                this[this.tableRcvDraft.DraftDivideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepositNull() {
                return this.IsNull(this.tableRcvDraft.DepositColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepositNull() {
                this[this.tableRcvDraft.DepositColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankAndBranchCdNull() {
                return this.IsNull(this.tableRcvDraft.BankAndBranchCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankAndBranchCdNull() {
                this[this.tableRcvDraft.BankAndBranchCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankAndBranchNmNull() {
                return this.IsNull(this.tableRcvDraft.BankAndBranchNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankAndBranchNmNull() {
                this[this.tableRcvDraft.BankAndBranchNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionCodeNull() {
                return this.IsNull(this.tableRcvDraft.SectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionCodeNull() {
                this[this.tableRcvDraft.SectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddUpSecCodeNull() {
                return this.IsNull(this.tableRcvDraft.AddUpSecCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddUpSecCodeNull() {
                this[this.tableRcvDraft.AddUpSecCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableRcvDraft.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableRcvDraft.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableRcvDraft.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableRcvDraft.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerName2Null() {
                return this.IsNull(this.tableRcvDraft.CustomerName2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerName2Null() {
                this[this.tableRcvDraft.CustomerName2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerSnmNull() {
                return this.IsNull(this.tableRcvDraft.CustomerSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerSnmNull() {
                this[this.tableRcvDraft.CustomerSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProcDateNull() {
                return this.IsNull(this.tableRcvDraft.ProcDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProcDateNull() {
                this[this.tableRcvDraft.ProcDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDraftDrawingDateNull() {
                return this.IsNull(this.tableRcvDraft.DraftDrawingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDraftDrawingDateNull() {
                this[this.tableRcvDraft.DraftDrawingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValidityTermNull() {
                return this.IsNull(this.tableRcvDraft.ValidityTermColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValidityTermNull() {
                this[this.tableRcvDraft.ValidityTermColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDraftStmntDateNull() {
                return this.IsNull(this.tableRcvDraft.DraftStmntDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDraftStmntDateNull() {
                this[this.tableRcvDraft.DraftStmntDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutline1Null() {
                return this.IsNull(this.tableRcvDraft.Outline1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutline1Null() {
                this[this.tableRcvDraft.Outline1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutline2Null() {
                return this.IsNull(this.tableRcvDraft.Outline2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutline2Null() {
                this[this.tableRcvDraft.Outline2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcptAnOdrStatusNull() {
                return this.IsNull(this.tableRcvDraft.AcptAnOdrStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcptAnOdrStatusNull() {
                this[this.tableRcvDraft.AcptAnOdrStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepositSlipNoNull() {
                return this.IsNull(this.tableRcvDraft.DepositSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepositSlipNoNull() {
                this[this.tableRcvDraft.DepositSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepositRowNoNull() {
                return this.IsNull(this.tableRcvDraft.DepositRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepositRowNoNull() {
                this[this.tableRcvDraft.DepositRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepositDateNull() {
                return this.IsNull(this.tableRcvDraft.DepositDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepositDateNull() {
                this[this.tableRcvDraft.DepositDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowNoNull() {
                return this.IsNull(this.tableRcvDraft.RowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowNoNull() {
                this[this.tableRcvDraft.RowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDraftDrawingDateAdFormalNull() {
                return this.IsNull(this.tableRcvDraft.DraftDrawingDateAdFormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDraftDrawingDateAdFormalNull() {
                this[this.tableRcvDraft.DraftDrawingDateAdFormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValidityTermAdFormalNull() {
                return this.IsNull(this.tableRcvDraft.ValidityTermAdFormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValidityTermAdFormalNull() {
                this[this.tableRcvDraft.ValidityTermAdFormalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RcvDraftRowChangeEvent : global::System.EventArgs {
            
            private RcvDraftRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RcvDraftRowChangeEvent(RcvDraftRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RcvDraftRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591