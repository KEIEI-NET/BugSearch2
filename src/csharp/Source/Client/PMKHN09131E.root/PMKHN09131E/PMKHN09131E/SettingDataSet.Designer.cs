//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3031
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.UIData {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SettingDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SettingDataSet : global::System.Data.DataSet {
        
        private SettingDataTable tableSetting;
        
        private EmployeeAuthorityDataTable tableEmployeeAuthority;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SettingDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SettingDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Setting"] != null)) {
                    base.Tables.Add(new SettingDataTable(ds.Tables["Setting"]));
                }
                if ((ds.Tables["EmployeeAuthority"] != null)) {
                    base.Tables.Add(new EmployeeAuthorityDataTable(ds.Tables["EmployeeAuthority"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SettingDataTable Setting {
            get {
                return this.tableSetting;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EmployeeAuthorityDataTable EmployeeAuthority {
            get {
                return this.tableEmployeeAuthority;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SettingDataSet cln = ((SettingDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Setting"] != null)) {
                    base.Tables.Add(new SettingDataTable(ds.Tables["Setting"]));
                }
                if ((ds.Tables["EmployeeAuthority"] != null)) {
                    base.Tables.Add(new EmployeeAuthorityDataTable(ds.Tables["EmployeeAuthority"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSetting = ((SettingDataTable)(base.Tables["Setting"]));
            if ((initTable == true)) {
                if ((this.tableSetting != null)) {
                    this.tableSetting.InitVars();
                }
            }
            this.tableEmployeeAuthority = ((EmployeeAuthorityDataTable)(base.Tables["EmployeeAuthority"]));
            if ((initTable == true)) {
                if ((this.tableEmployeeAuthority != null)) {
                    this.tableEmployeeAuthority.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SettingDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SecurityManagementSettingDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSetting = new SettingDataTable();
            base.Tables.Add(this.tableSetting);
            this.tableEmployeeAuthority = new EmployeeAuthorityDataTable();
            base.Tables.Add(this.tableEmployeeAuthority);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSetting() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEmployeeAuthority() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SettingDataSet ds = new SettingDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SettingRowChangeEventHandler(object sender, SettingRowChangeEvent e);
        
        public delegate void EmployeeAuthorityRowChangeEventHandler(object sender, EmployeeAuthorityRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SettingDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnIndex;
            
            private global::System.Data.DataColumn columnOfferDate;
            
            private global::System.Data.DataColumn columnCategoryCode;
            
            private global::System.Data.DataColumn columnCategoryName;
            
            private global::System.Data.DataColumn columnCategoryDspOdr;
            
            private global::System.Data.DataColumn columnPgId;
            
            private global::System.Data.DataColumn columnPgName;
            
            private global::System.Data.DataColumn columnPgDspOdr;
            
            private global::System.Data.DataColumn columnOperationCode;
            
            private global::System.Data.DataColumn columnOperationName;
            
            private global::System.Data.DataColumn columnOperationDspOdr;
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnUpdateDateTime;
            
            private global::System.Data.DataColumn columnEnterpriseCode;
            
            private global::System.Data.DataColumn columnFileHeaderGuid;
            
            private global::System.Data.DataColumn columnUpdEmployeeCode;
            
            private global::System.Data.DataColumn columnUpdAssemblyId1;
            
            private global::System.Data.DataColumn columnUpdAssemblyId2;
            
            private global::System.Data.DataColumn columnLogicalDeleteCode;
            
            private global::System.Data.DataColumn columnOperationStDiv;
            
            private global::System.Data.DataColumn columnAuthorityLevel1;
            
            private global::System.Data.DataColumn columnAuthorityLevel2;
            
            private global::System.Data.DataColumn columnEmployeeCode;
            
            private global::System.Data.DataColumn columnLimitDiv;
            
            private global::System.Data.DataColumn columnApplyStartDate;
            
            private global::System.Data.DataColumn columnApplyEndDate;
            
            private global::System.Data.DataColumn columnAdmission;
            
            private global::System.Data.DataColumn columnSettingApp;
            
            private global::System.Data.DataColumn columnOperationLimit;
            
            private global::System.Data.DataColumn columnLimitation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SettingDataTable() {
                this.TableName = "Setting";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SettingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SettingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndexColumn {
                get {
                    return this.columnIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfferDateColumn {
                get {
                    return this.columnOfferDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryCodeColumn {
                get {
                    return this.columnCategoryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryNameColumn {
                get {
                    return this.columnCategoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryDspOdrColumn {
                get {
                    return this.columnCategoryDspOdr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PgIdColumn {
                get {
                    return this.columnPgId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PgNameColumn {
                get {
                    return this.columnPgName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PgDspOdrColumn {
                get {
                    return this.columnPgDspOdr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationCodeColumn {
                get {
                    return this.columnOperationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationNameColumn {
                get {
                    return this.columnOperationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationDspOdrColumn {
                get {
                    return this.columnOperationDspOdr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateDateTimeColumn {
                get {
                    return this.columnUpdateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterpriseCodeColumn {
                get {
                    return this.columnEnterpriseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileHeaderGuidColumn {
                get {
                    return this.columnFileHeaderGuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdEmployeeCodeColumn {
                get {
                    return this.columnUpdEmployeeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdAssemblyId1Column {
                get {
                    return this.columnUpdAssemblyId1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdAssemblyId2Column {
                get {
                    return this.columnUpdAssemblyId2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogicalDeleteCodeColumn {
                get {
                    return this.columnLogicalDeleteCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationStDivColumn {
                get {
                    return this.columnOperationStDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuthorityLevel1Column {
                get {
                    return this.columnAuthorityLevel1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuthorityLevel2Column {
                get {
                    return this.columnAuthorityLevel2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeCodeColumn {
                get {
                    return this.columnEmployeeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LimitDivColumn {
                get {
                    return this.columnLimitDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyStartDateColumn {
                get {
                    return this.columnApplyStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyEndDateColumn {
                get {
                    return this.columnApplyEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdmissionColumn {
                get {
                    return this.columnAdmission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SettingAppColumn {
                get {
                    return this.columnSettingApp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperationLimitColumn {
                get {
                    return this.columnOperationLimit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LimitationColumn {
                get {
                    return this.columnLimitation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SettingRow this[int index] {
                get {
                    return ((SettingRow)(this.Rows[index]));
                }
            }
            
            public event SettingRowChangeEventHandler SettingRowChanging;
            
            public event SettingRowChangeEventHandler SettingRowChanged;
            
            public event SettingRowChangeEventHandler SettingRowDeleting;
            
            public event SettingRowChangeEventHandler SettingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSettingRow(SettingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SettingRow AddSettingRow(
                        long Index, 
                        System.DateTime OfferDate, 
                        int CategoryCode, 
                        string CategoryName, 
                        int CategoryDspOdr, 
                        string PgId, 
                        string PgName, 
                        int PgDspOdr, 
                        int OperationCode, 
                        string OperationName, 
                        int OperationDspOdr, 
                        System.DateTime CreateDateTime, 
                        System.DateTime UpdateDateTime, 
                        string EnterpriseCode, 
                        System.Guid FileHeaderGuid, 
                        string UpdEmployeeCode, 
                        string UpdAssemblyId1, 
                        string UpdAssemblyId2, 
                        int LogicalDeleteCode, 
                        int OperationStDiv, 
                        int AuthorityLevel1, 
                        int AuthorityLevel2, 
                        string EmployeeCode, 
                        int LimitDiv, 
                        int ApplyStartDate, 
                        int ApplyEndDate, 
                        string Admission, 
                        string SettingApp, 
                        int OperationLimit, 
                        string Limitation) {
                SettingRow rowSettingRow = ((SettingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Index,
                        OfferDate,
                        CategoryCode,
                        CategoryName,
                        CategoryDspOdr,
                        PgId,
                        PgName,
                        PgDspOdr,
                        OperationCode,
                        OperationName,
                        OperationDspOdr,
                        CreateDateTime,
                        UpdateDateTime,
                        EnterpriseCode,
                        FileHeaderGuid,
                        UpdEmployeeCode,
                        UpdAssemblyId1,
                        UpdAssemblyId2,
                        LogicalDeleteCode,
                        OperationStDiv,
                        AuthorityLevel1,
                        AuthorityLevel2,
                        EmployeeCode,
                        LimitDiv,
                        ApplyStartDate,
                        ApplyEndDate,
                        Admission,
                        SettingApp,
                        OperationLimit,
                        Limitation};
                rowSettingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSettingRow);
                return rowSettingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SettingDataTable cln = ((SettingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SettingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIndex = base.Columns["Index"];
                this.columnOfferDate = base.Columns["OfferDate"];
                this.columnCategoryCode = base.Columns["CategoryCode"];
                this.columnCategoryName = base.Columns["CategoryName"];
                this.columnCategoryDspOdr = base.Columns["CategoryDspOdr"];
                this.columnPgId = base.Columns["PgId"];
                this.columnPgName = base.Columns["PgName"];
                this.columnPgDspOdr = base.Columns["PgDspOdr"];
                this.columnOperationCode = base.Columns["OperationCode"];
                this.columnOperationName = base.Columns["OperationName"];
                this.columnOperationDspOdr = base.Columns["OperationDspOdr"];
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnUpdateDateTime = base.Columns["UpdateDateTime"];
                this.columnEnterpriseCode = base.Columns["EnterpriseCode"];
                this.columnFileHeaderGuid = base.Columns["FileHeaderGuid"];
                this.columnUpdEmployeeCode = base.Columns["UpdEmployeeCode"];
                this.columnUpdAssemblyId1 = base.Columns["UpdAssemblyId1"];
                this.columnUpdAssemblyId2 = base.Columns["UpdAssemblyId2"];
                this.columnLogicalDeleteCode = base.Columns["LogicalDeleteCode"];
                this.columnOperationStDiv = base.Columns["OperationStDiv"];
                this.columnAuthorityLevel1 = base.Columns["AuthorityLevel1"];
                this.columnAuthorityLevel2 = base.Columns["AuthorityLevel2"];
                this.columnEmployeeCode = base.Columns["EmployeeCode"];
                this.columnLimitDiv = base.Columns["LimitDiv"];
                this.columnApplyStartDate = base.Columns["ApplyStartDate"];
                this.columnApplyEndDate = base.Columns["ApplyEndDate"];
                this.columnAdmission = base.Columns["Admission"];
                this.columnSettingApp = base.Columns["SettingApp"];
                this.columnOperationLimit = base.Columns["OperationLimit"];
                this.columnLimitation = base.Columns["Limitation"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIndex = new global::System.Data.DataColumn("Index", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndex);
                this.columnOfferDate = new global::System.Data.DataColumn("OfferDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferDate);
                this.columnCategoryCode = new global::System.Data.DataColumn("CategoryCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryCode);
                this.columnCategoryName = new global::System.Data.DataColumn("CategoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryName);
                this.columnCategoryDspOdr = new global::System.Data.DataColumn("CategoryDspOdr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryDspOdr);
                this.columnPgId = new global::System.Data.DataColumn("PgId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPgId);
                this.columnPgName = new global::System.Data.DataColumn("PgName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPgName);
                this.columnPgDspOdr = new global::System.Data.DataColumn("PgDspOdr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPgDspOdr);
                this.columnOperationCode = new global::System.Data.DataColumn("OperationCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationCode);
                this.columnOperationName = new global::System.Data.DataColumn("OperationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationName);
                this.columnOperationDspOdr = new global::System.Data.DataColumn("OperationDspOdr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationDspOdr);
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnUpdateDateTime = new global::System.Data.DataColumn("UpdateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDateTime);
                this.columnEnterpriseCode = new global::System.Data.DataColumn("EnterpriseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterpriseCode);
                this.columnFileHeaderGuid = new global::System.Data.DataColumn("FileHeaderGuid", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileHeaderGuid);
                this.columnUpdEmployeeCode = new global::System.Data.DataColumn("UpdEmployeeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdEmployeeCode);
                this.columnUpdAssemblyId1 = new global::System.Data.DataColumn("UpdAssemblyId1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdAssemblyId1);
                this.columnUpdAssemblyId2 = new global::System.Data.DataColumn("UpdAssemblyId2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdAssemblyId2);
                this.columnLogicalDeleteCode = new global::System.Data.DataColumn("LogicalDeleteCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogicalDeleteCode);
                this.columnOperationStDiv = new global::System.Data.DataColumn("OperationStDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationStDiv);
                this.columnAuthorityLevel1 = new global::System.Data.DataColumn("AuthorityLevel1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorityLevel1);
                this.columnAuthorityLevel2 = new global::System.Data.DataColumn("AuthorityLevel2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorityLevel2);
                this.columnEmployeeCode = new global::System.Data.DataColumn("EmployeeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeCode);
                this.columnLimitDiv = new global::System.Data.DataColumn("LimitDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLimitDiv);
                this.columnApplyStartDate = new global::System.Data.DataColumn("ApplyStartDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyStartDate);
                this.columnApplyEndDate = new global::System.Data.DataColumn("ApplyEndDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyEndDate);
                this.columnAdmission = new global::System.Data.DataColumn("Admission", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission);
                this.columnSettingApp = new global::System.Data.DataColumn("SettingApp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettingApp);
                this.columnOperationLimit = new global::System.Data.DataColumn("OperationLimit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationLimit);
                this.columnLimitation = new global::System.Data.DataColumn("Limitation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLimitation);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIndex}, false));
                this.columnIndex.Unique = true;
                this.columnOfferDate.Caption = "提供日付";
                this.columnCategoryCode.Caption = "カテゴリコード";
                this.columnCategoryName.Caption = "カテゴリ";
                this.columnCategoryDspOdr.Caption = "カテゴリ表示順位";
                this.columnPgId.Caption = "プログラムＩＤ";
                this.columnPgName.Caption = "機能";
                this.columnPgDspOdr.Caption = "プログラム表示順位";
                this.columnOperationCode.Caption = "オペレーションコード";
                this.columnOperationName.Caption = "操作";
                this.columnOperationDspOdr.Caption = "オペレーション表示順位";
                this.columnCreateDateTime.Caption = "作成日時";
                this.columnUpdateDateTime.Caption = "更新日時";
                this.columnEnterpriseCode.Caption = "企業コード";
                this.columnFileHeaderGuid.Caption = "GUID";
                this.columnUpdEmployeeCode.Caption = "更新従業員コード";
                this.columnUpdAssemblyId1.Caption = "更新アセンブリID1";
                this.columnUpdAssemblyId2.Caption = "更新アセンブリID2";
                this.columnLogicalDeleteCode.Caption = "論理削除区分";
                this.columnOperationStDiv.Caption = "オペレーション設定区分";
                this.columnAuthorityLevel1.Caption = "職種";
                this.columnAuthorityLevel2.Caption = "雇用形態";
                this.columnEmployeeCode.Caption = "従業員";
                this.columnLimitDiv.Caption = "制限区分";
                this.columnApplyStartDate.Caption = "適用開始日";
                this.columnApplyEndDate.Caption = "適用終了日";
                this.columnAdmission.Caption = "許可";
                this.columnSettingApp.Caption = "設定適用";
                this.columnOperationLimit.Caption = "操作権限";
                this.columnLimitation.Caption = "制限";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SettingRow NewSettingRow() {
                return ((SettingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SettingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SettingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SettingRowChanged != null)) {
                    this.SettingRowChanged(this, new SettingRowChangeEvent(((SettingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SettingRowChanging != null)) {
                    this.SettingRowChanging(this, new SettingRowChangeEvent(((SettingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SettingRowDeleted != null)) {
                    this.SettingRowDeleted(this, new SettingRowChangeEvent(((SettingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SettingRowDeleting != null)) {
                    this.SettingRowDeleting(this, new SettingRowChangeEvent(((SettingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSettingRow(SettingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SettingDataSet ds = new SettingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SettingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EmployeeAuthorityDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAuthorityLevelDiv;
            
            private global::System.Data.DataColumn columnAuthorityLevelDivName;
            
            private global::System.Data.DataColumn columnAuthorityLevel;
            
            private global::System.Data.DataColumn columnAuthorityLevelName;
            
            private global::System.Data.DataColumn columnEmployeeCode;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            private global::System.Data.DataColumn columnBelongSectionCode;
            
            private global::System.Data.DataColumn columnBelongSectionNm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAuthorityDataTable() {
                this.TableName = "EmployeeAuthority";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EmployeeAuthorityDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EmployeeAuthorityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuthorityLevelDivColumn {
                get {
                    return this.columnAuthorityLevelDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuthorityLevelDivNameColumn {
                get {
                    return this.columnAuthorityLevelDivName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuthorityLevelColumn {
                get {
                    return this.columnAuthorityLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuthorityLevelNameColumn {
                get {
                    return this.columnAuthorityLevelName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeCodeColumn {
                get {
                    return this.columnEmployeeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BelongSectionCodeColumn {
                get {
                    return this.columnBelongSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BelongSectionNmColumn {
                get {
                    return this.columnBelongSectionNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAuthorityRow this[int index] {
                get {
                    return ((EmployeeAuthorityRow)(this.Rows[index]));
                }
            }
            
            public event EmployeeAuthorityRowChangeEventHandler EmployeeAuthorityRowChanging;
            
            public event EmployeeAuthorityRowChangeEventHandler EmployeeAuthorityRowChanged;
            
            public event EmployeeAuthorityRowChangeEventHandler EmployeeAuthorityRowDeleting;
            
            public event EmployeeAuthorityRowChangeEventHandler EmployeeAuthorityRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEmployeeAuthorityRow(EmployeeAuthorityRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAuthorityRow AddEmployeeAuthorityRow(int AuthorityLevelDiv, string AuthorityLevelDivName, int AuthorityLevel, string AuthorityLevelName, string EmployeeCode, string EmployeeName, string BelongSectionCode, string BelongSectionNm) {
                EmployeeAuthorityRow rowEmployeeAuthorityRow = ((EmployeeAuthorityRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AuthorityLevelDiv,
                        AuthorityLevelDivName,
                        AuthorityLevel,
                        AuthorityLevelName,
                        EmployeeCode,
                        EmployeeName,
                        BelongSectionCode,
                        BelongSectionNm};
                rowEmployeeAuthorityRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEmployeeAuthorityRow);
                return rowEmployeeAuthorityRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAuthorityRow FindByAuthorityLevelDivAuthorityLevelEmployeeCode(int AuthorityLevelDiv, int AuthorityLevel, string EmployeeCode) {
                return ((EmployeeAuthorityRow)(this.Rows.Find(new object[] {
                            AuthorityLevelDiv,
                            AuthorityLevel,
                            EmployeeCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EmployeeAuthorityDataTable cln = ((EmployeeAuthorityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EmployeeAuthorityDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAuthorityLevelDiv = base.Columns["AuthorityLevelDiv"];
                this.columnAuthorityLevelDivName = base.Columns["AuthorityLevelDivName"];
                this.columnAuthorityLevel = base.Columns["AuthorityLevel"];
                this.columnAuthorityLevelName = base.Columns["AuthorityLevelName"];
                this.columnEmployeeCode = base.Columns["EmployeeCode"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
                this.columnBelongSectionCode = base.Columns["BelongSectionCode"];
                this.columnBelongSectionNm = base.Columns["BelongSectionNm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAuthorityLevelDiv = new global::System.Data.DataColumn("AuthorityLevelDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorityLevelDiv);
                this.columnAuthorityLevelDivName = new global::System.Data.DataColumn("AuthorityLevelDivName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorityLevelDivName);
                this.columnAuthorityLevel = new global::System.Data.DataColumn("AuthorityLevel", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorityLevel);
                this.columnAuthorityLevelName = new global::System.Data.DataColumn("AuthorityLevelName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorityLevelName);
                this.columnEmployeeCode = new global::System.Data.DataColumn("EmployeeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeCode);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnBelongSectionCode = new global::System.Data.DataColumn("BelongSectionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBelongSectionCode);
                this.columnBelongSectionNm = new global::System.Data.DataColumn("BelongSectionNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBelongSectionNm);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAuthorityLevelDiv,
                                this.columnAuthorityLevel,
                                this.columnEmployeeCode}, true));
                this.columnAuthorityLevelDiv.AllowDBNull = false;
                this.columnAuthorityLevelDiv.DefaultValue = ((int)(0));
                this.columnAuthorityLevelDivName.Caption = "区分";
                this.columnAuthorityLevelDivName.DefaultValue = ((string)(""));
                this.columnAuthorityLevel.AllowDBNull = false;
                this.columnAuthorityLevel.DefaultValue = ((int)(0));
                this.columnAuthorityLevelName.Caption = "ロール";
                this.columnAuthorityLevelName.DefaultValue = ((string)(""));
                this.columnEmployeeCode.AllowDBNull = false;
                this.columnEmployeeCode.Caption = "担当者コード";
                this.columnEmployeeCode.DefaultValue = ((string)(""));
                this.columnEmployeeName.Caption = "担当者名";
                this.columnEmployeeName.DefaultValue = ((string)(""));
                this.columnBelongSectionCode.DefaultValue = ((string)(""));
                this.columnBelongSectionNm.Caption = "所属拠点";
                this.columnBelongSectionNm.DefaultValue = ((string)(""));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAuthorityRow NewEmployeeAuthorityRow() {
                return ((EmployeeAuthorityRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EmployeeAuthorityRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EmployeeAuthorityRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EmployeeAuthorityRowChanged != null)) {
                    this.EmployeeAuthorityRowChanged(this, new EmployeeAuthorityRowChangeEvent(((EmployeeAuthorityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EmployeeAuthorityRowChanging != null)) {
                    this.EmployeeAuthorityRowChanging(this, new EmployeeAuthorityRowChangeEvent(((EmployeeAuthorityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EmployeeAuthorityRowDeleted != null)) {
                    this.EmployeeAuthorityRowDeleted(this, new EmployeeAuthorityRowChangeEvent(((EmployeeAuthorityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EmployeeAuthorityRowDeleting != null)) {
                    this.EmployeeAuthorityRowDeleting(this, new EmployeeAuthorityRowChangeEvent(((EmployeeAuthorityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEmployeeAuthorityRow(EmployeeAuthorityRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SettingDataSet ds = new SettingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EmployeeAuthorityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SettingRow : global::System.Data.DataRow {
            
            private SettingDataTable tableSetting;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SettingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSetting = ((SettingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Index {
                get {
                    try {
                        return ((long)(this[this.tableSetting.IndexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'Index\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.IndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OfferDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSetting.OfferDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'OfferDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.OfferDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CategoryCode {
                get {
                    try {
                        return ((int)(this[this.tableSetting.CategoryCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'CategoryCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.CategoryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CategoryName {
                get {
                    try {
                        return ((string)(this[this.tableSetting.CategoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'CategoryName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.CategoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CategoryDspOdr {
                get {
                    try {
                        return ((int)(this[this.tableSetting.CategoryDspOdrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'CategoryDspOdr\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.CategoryDspOdrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PgId {
                get {
                    try {
                        return ((string)(this[this.tableSetting.PgIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'PgId\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.PgIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PgName {
                get {
                    try {
                        return ((string)(this[this.tableSetting.PgNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'PgName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.PgNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PgDspOdr {
                get {
                    try {
                        return ((int)(this[this.tableSetting.PgDspOdrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'PgDspOdr\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.PgDspOdrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OperationCode {
                get {
                    try {
                        return ((int)(this[this.tableSetting.OperationCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'OperationCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.OperationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OperationName {
                get {
                    try {
                        return ((string)(this[this.tableSetting.OperationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'OperationName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.OperationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OperationDspOdr {
                get {
                    try {
                        return ((int)(this[this.tableSetting.OperationDspOdrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'OperationDspOdr\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.OperationDspOdrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreateDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSetting.CreateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'CreateDateTime\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UpdateDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSetting.UpdateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'UpdateDateTime\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.UpdateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnterpriseCode {
                get {
                    try {
                        return ((string)(this[this.tableSetting.EnterpriseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'EnterpriseCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.EnterpriseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid FileHeaderGuid {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableSetting.FileHeaderGuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'FileHeaderGuid\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.FileHeaderGuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdEmployeeCode {
                get {
                    try {
                        return ((string)(this[this.tableSetting.UpdEmployeeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'UpdEmployeeCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.UpdEmployeeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdAssemblyId1 {
                get {
                    try {
                        return ((string)(this[this.tableSetting.UpdAssemblyId1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'UpdAssemblyId1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.UpdAssemblyId1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdAssemblyId2 {
                get {
                    try {
                        return ((string)(this[this.tableSetting.UpdAssemblyId2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'UpdAssemblyId2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.UpdAssemblyId2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LogicalDeleteCode {
                get {
                    try {
                        return ((int)(this[this.tableSetting.LogicalDeleteCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'LogicalDeleteCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.LogicalDeleteCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OperationStDiv {
                get {
                    try {
                        return ((int)(this[this.tableSetting.OperationStDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'OperationStDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.OperationStDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AuthorityLevel1 {
                get {
                    try {
                        return ((int)(this[this.tableSetting.AuthorityLevel1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'AuthorityLevel1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.AuthorityLevel1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AuthorityLevel2 {
                get {
                    try {
                        return ((int)(this[this.tableSetting.AuthorityLevel2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'AuthorityLevel2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.AuthorityLevel2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeeCode {
                get {
                    try {
                        return ((string)(this[this.tableSetting.EmployeeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'EmployeeCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.EmployeeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LimitDiv {
                get {
                    try {
                        return ((int)(this[this.tableSetting.LimitDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'LimitDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.LimitDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApplyStartDate {
                get {
                    try {
                        return ((int)(this[this.tableSetting.ApplyStartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'ApplyStartDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.ApplyStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApplyEndDate {
                get {
                    try {
                        return ((int)(this[this.tableSetting.ApplyEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'ApplyEndDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.ApplyEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Admission {
                get {
                    try {
                        return ((string)(this[this.tableSetting.AdmissionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'Admission\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.AdmissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SettingApp {
                get {
                    try {
                        return ((string)(this[this.tableSetting.SettingAppColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'SettingApp\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.SettingAppColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OperationLimit {
                get {
                    try {
                        return ((int)(this[this.tableSetting.OperationLimitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'OperationLimit\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.OperationLimitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Limitation {
                get {
                    try {
                        return ((string)(this[this.tableSetting.LimitationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Setting\' にある列 \'Limitation\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSetting.LimitationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIndexNull() {
                return this.IsNull(this.tableSetting.IndexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIndexNull() {
                this[this.tableSetting.IndexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfferDateNull() {
                return this.IsNull(this.tableSetting.OfferDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfferDateNull() {
                this[this.tableSetting.OfferDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryCodeNull() {
                return this.IsNull(this.tableSetting.CategoryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryCodeNull() {
                this[this.tableSetting.CategoryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNameNull() {
                return this.IsNull(this.tableSetting.CategoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNameNull() {
                this[this.tableSetting.CategoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryDspOdrNull() {
                return this.IsNull(this.tableSetting.CategoryDspOdrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryDspOdrNull() {
                this[this.tableSetting.CategoryDspOdrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPgIdNull() {
                return this.IsNull(this.tableSetting.PgIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPgIdNull() {
                this[this.tableSetting.PgIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPgNameNull() {
                return this.IsNull(this.tableSetting.PgNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPgNameNull() {
                this[this.tableSetting.PgNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPgDspOdrNull() {
                return this.IsNull(this.tableSetting.PgDspOdrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPgDspOdrNull() {
                this[this.tableSetting.PgDspOdrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationCodeNull() {
                return this.IsNull(this.tableSetting.OperationCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationCodeNull() {
                this[this.tableSetting.OperationCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationNameNull() {
                return this.IsNull(this.tableSetting.OperationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationNameNull() {
                this[this.tableSetting.OperationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationDspOdrNull() {
                return this.IsNull(this.tableSetting.OperationDspOdrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationDspOdrNull() {
                this[this.tableSetting.OperationDspOdrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreateDateTimeNull() {
                return this.IsNull(this.tableSetting.CreateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreateDateTimeNull() {
                this[this.tableSetting.CreateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateDateTimeNull() {
                return this.IsNull(this.tableSetting.UpdateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateDateTimeNull() {
                this[this.tableSetting.UpdateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnterpriseCodeNull() {
                return this.IsNull(this.tableSetting.EnterpriseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnterpriseCodeNull() {
                this[this.tableSetting.EnterpriseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileHeaderGuidNull() {
                return this.IsNull(this.tableSetting.FileHeaderGuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileHeaderGuidNull() {
                this[this.tableSetting.FileHeaderGuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdEmployeeCodeNull() {
                return this.IsNull(this.tableSetting.UpdEmployeeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdEmployeeCodeNull() {
                this[this.tableSetting.UpdEmployeeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdAssemblyId1Null() {
                return this.IsNull(this.tableSetting.UpdAssemblyId1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdAssemblyId1Null() {
                this[this.tableSetting.UpdAssemblyId1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdAssemblyId2Null() {
                return this.IsNull(this.tableSetting.UpdAssemblyId2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdAssemblyId2Null() {
                this[this.tableSetting.UpdAssemblyId2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogicalDeleteCodeNull() {
                return this.IsNull(this.tableSetting.LogicalDeleteCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogicalDeleteCodeNull() {
                this[this.tableSetting.LogicalDeleteCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationStDivNull() {
                return this.IsNull(this.tableSetting.OperationStDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationStDivNull() {
                this[this.tableSetting.OperationStDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuthorityLevel1Null() {
                return this.IsNull(this.tableSetting.AuthorityLevel1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuthorityLevel1Null() {
                this[this.tableSetting.AuthorityLevel1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuthorityLevel2Null() {
                return this.IsNull(this.tableSetting.AuthorityLevel2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuthorityLevel2Null() {
                this[this.tableSetting.AuthorityLevel2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeCodeNull() {
                return this.IsNull(this.tableSetting.EmployeeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeCodeNull() {
                this[this.tableSetting.EmployeeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLimitDivNull() {
                return this.IsNull(this.tableSetting.LimitDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLimitDivNull() {
                this[this.tableSetting.LimitDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyStartDateNull() {
                return this.IsNull(this.tableSetting.ApplyStartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyStartDateNull() {
                this[this.tableSetting.ApplyStartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyEndDateNull() {
                return this.IsNull(this.tableSetting.ApplyEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyEndDateNull() {
                this[this.tableSetting.ApplyEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmissionNull() {
                return this.IsNull(this.tableSetting.AdmissionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmissionNull() {
                this[this.tableSetting.AdmissionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSettingAppNull() {
                return this.IsNull(this.tableSetting.SettingAppColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSettingAppNull() {
                this[this.tableSetting.SettingAppColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOperationLimitNull() {
                return this.IsNull(this.tableSetting.OperationLimitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOperationLimitNull() {
                this[this.tableSetting.OperationLimitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLimitationNull() {
                return this.IsNull(this.tableSetting.LimitationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLimitationNull() {
                this[this.tableSetting.LimitationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EmployeeAuthorityRow : global::System.Data.DataRow {
            
            private EmployeeAuthorityDataTable tableEmployeeAuthority;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EmployeeAuthorityRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEmployeeAuthority = ((EmployeeAuthorityDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AuthorityLevelDiv {
                get {
                    return ((int)(this[this.tableEmployeeAuthority.AuthorityLevelDivColumn]));
                }
                set {
                    this[this.tableEmployeeAuthority.AuthorityLevelDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AuthorityLevelDivName {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeAuthority.AuthorityLevelDivNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EmployeeAuthority\' にある列 \'AuthorityLevelDivName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEmployeeAuthority.AuthorityLevelDivNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AuthorityLevel {
                get {
                    return ((int)(this[this.tableEmployeeAuthority.AuthorityLevelColumn]));
                }
                set {
                    this[this.tableEmployeeAuthority.AuthorityLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AuthorityLevelName {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeAuthority.AuthorityLevelNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EmployeeAuthority\' にある列 \'AuthorityLevelName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEmployeeAuthority.AuthorityLevelNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeeCode {
                get {
                    return ((string)(this[this.tableEmployeeAuthority.EmployeeCodeColumn]));
                }
                set {
                    this[this.tableEmployeeAuthority.EmployeeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmployeeName {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeAuthority.EmployeeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EmployeeAuthority\' にある列 \'EmployeeName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEmployeeAuthority.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BelongSectionCode {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeAuthority.BelongSectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EmployeeAuthority\' にある列 \'BelongSectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEmployeeAuthority.BelongSectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BelongSectionNm {
                get {
                    try {
                        return ((string)(this[this.tableEmployeeAuthority.BelongSectionNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'EmployeeAuthority\' にある列 \'BelongSectionNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableEmployeeAuthority.BelongSectionNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuthorityLevelDivNameNull() {
                return this.IsNull(this.tableEmployeeAuthority.AuthorityLevelDivNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuthorityLevelDivNameNull() {
                this[this.tableEmployeeAuthority.AuthorityLevelDivNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuthorityLevelNameNull() {
                return this.IsNull(this.tableEmployeeAuthority.AuthorityLevelNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuthorityLevelNameNull() {
                this[this.tableEmployeeAuthority.AuthorityLevelNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmployeeNameNull() {
                return this.IsNull(this.tableEmployeeAuthority.EmployeeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmployeeNameNull() {
                this[this.tableEmployeeAuthority.EmployeeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBelongSectionCodeNull() {
                return this.IsNull(this.tableEmployeeAuthority.BelongSectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBelongSectionCodeNull() {
                this[this.tableEmployeeAuthority.BelongSectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBelongSectionNmNull() {
                return this.IsNull(this.tableEmployeeAuthority.BelongSectionNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBelongSectionNmNull() {
                this[this.tableEmployeeAuthority.BelongSectionNmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SettingRowChangeEvent : global::System.EventArgs {
            
            private SettingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SettingRowChangeEvent(SettingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SettingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EmployeeAuthorityRowChangeEvent : global::System.EventArgs {
            
            private EmployeeAuthorityRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAuthorityRowChangeEvent(EmployeeAuthorityRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EmployeeAuthorityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591