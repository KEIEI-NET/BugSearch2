//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3615
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.Controller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("CustomInqOrderDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class CustomInqOrderDataSet : global::System.Data.DataSet {
        
        private CustomInqResultDataTable tableCustomInqResult;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CustomInqOrderDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected CustomInqOrderDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CustomInqResult"] != null)) {
                    base.Tables.Add(new CustomInqResultDataTable(ds.Tables["CustomInqResult"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomInqResultDataTable CustomInqResult {
            get {
                return this.tableCustomInqResult;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            CustomInqOrderDataSet cln = ((CustomInqOrderDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CustomInqResult"] != null)) {
                    base.Tables.Add(new CustomInqResultDataTable(ds.Tables["CustomInqResult"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCustomInqResult = ((CustomInqResultDataTable)(base.Tables["CustomInqResult"]));
            if ((initTable == true)) {
                if ((this.tableCustomInqResult != null)) {
                    this.tableCustomInqResult.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "CustomInqOrderDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/CustomInqOrderDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCustomInqResult = new CustomInqResultDataTable();
            base.Tables.Add(this.tableCustomInqResult);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomInqResult() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            CustomInqOrderDataSet ds = new CustomInqOrderDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void CustomInqResultRowChangeEventHandler(object sender, CustomInqResultRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomInqResultDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAddUpSecCode;
            
            private global::System.Data.DataColumn columnAddUpSecName;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnFiscalYear;
            
            private global::System.Data.DataColumn columnFiscalYearString;
            
            private global::System.Data.DataColumn columnEnterpriseCode;
            
            private global::System.Data.DataColumn columnSalesMoney;
            
            private global::System.Data.DataColumn columnSalesRetGoodsPrice;
            
            private global::System.Data.DataColumn columnDiscountPrice;
            
            private global::System.Data.DataColumn columnGrossProfit;
            
            private global::System.Data.DataColumn columnNetSales1;
            
            private global::System.Data.DataColumn columnGrossProfit1;
            
            private global::System.Data.DataColumn columnNetSales2;
            
            private global::System.Data.DataColumn columnGrossProfit2;
            
            private global::System.Data.DataColumn columnNetSales3;
            
            private global::System.Data.DataColumn columnGrossProfit3;
            
            private global::System.Data.DataColumn columnNetSales4;
            
            private global::System.Data.DataColumn columnGrossProfit4;
            
            private global::System.Data.DataColumn columnNetSales5;
            
            private global::System.Data.DataColumn columnGrossProfit5;
            
            private global::System.Data.DataColumn columnNetSales6;
            
            private global::System.Data.DataColumn columnGrossProfit6;
            
            private global::System.Data.DataColumn columnNetSales7;
            
            private global::System.Data.DataColumn columnGrossProfit7;
            
            private global::System.Data.DataColumn columnNetSales8;
            
            private global::System.Data.DataColumn columnGrossProfit8;
            
            private global::System.Data.DataColumn columnNetSales;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomInqResultDataTable() {
                this.TableName = "CustomInqResult";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomInqResultDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomInqResultDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddUpSecCodeColumn {
                get {
                    return this.columnAddUpSecCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddUpSecNameColumn {
                get {
                    return this.columnAddUpSecName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiscalYearColumn {
                get {
                    return this.columnFiscalYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiscalYearStringColumn {
                get {
                    return this.columnFiscalYearString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterpriseCodeColumn {
                get {
                    return this.columnEnterpriseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesMoneyColumn {
                get {
                    return this.columnSalesMoney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesRetGoodsPriceColumn {
                get {
                    return this.columnSalesRetGoodsPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountPriceColumn {
                get {
                    return this.columnDiscountPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfitColumn {
                get {
                    return this.columnGrossProfit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetSales1Column {
                get {
                    return this.columnNetSales1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfit1Column {
                get {
                    return this.columnGrossProfit1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetSales2Column {
                get {
                    return this.columnNetSales2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfit2Column {
                get {
                    return this.columnGrossProfit2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetSales3Column {
                get {
                    return this.columnNetSales3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfit3Column {
                get {
                    return this.columnGrossProfit3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetSales4Column {
                get {
                    return this.columnNetSales4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfit4Column {
                get {
                    return this.columnGrossProfit4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetSales5Column {
                get {
                    return this.columnNetSales5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfit5Column {
                get {
                    return this.columnGrossProfit5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetSales6Column {
                get {
                    return this.columnNetSales6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfit6Column {
                get {
                    return this.columnGrossProfit6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetSales7Column {
                get {
                    return this.columnNetSales7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfit7Column {
                get {
                    return this.columnGrossProfit7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetSales8Column {
                get {
                    return this.columnNetSales8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossProfit8Column {
                get {
                    return this.columnGrossProfit8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetSalesColumn {
                get {
                    return this.columnNetSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomInqResultRow this[int index] {
                get {
                    return ((CustomInqResultRow)(this.Rows[index]));
                }
            }
            
            public event CustomInqResultRowChangeEventHandler CustomInqResultRowChanging;
            
            public event CustomInqResultRowChangeEventHandler CustomInqResultRowChanged;
            
            public event CustomInqResultRowChangeEventHandler CustomInqResultRowDeleting;
            
            public event CustomInqResultRowChangeEventHandler CustomInqResultRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomInqResultRow(CustomInqResultRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomInqResultRow AddCustomInqResultRow(
                        string AddUpSecCode, 
                        string AddUpSecName, 
                        string CustomerCode, 
                        string CustomerName, 
                        int FiscalYear, 
                        string FiscalYearString, 
                        string EnterpriseCode, 
                        long SalesMoney, 
                        long SalesRetGoodsPrice, 
                        long DiscountPrice, 
                        long GrossProfit, 
                        long NetSales1, 
                        long GrossProfit1, 
                        long NetSales2, 
                        long GrossProfit2, 
                        long NetSales3, 
                        long GrossProfit3, 
                        long NetSales4, 
                        long GrossProfit4, 
                        long NetSales5, 
                        long GrossProfit5, 
                        long NetSales6, 
                        long GrossProfit6, 
                        long NetSales7, 
                        long GrossProfit7, 
                        long NetSales8, 
                        long GrossProfit8, 
                        long NetSales) {
                CustomInqResultRow rowCustomInqResultRow = ((CustomInqResultRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AddUpSecCode,
                        AddUpSecName,
                        CustomerCode,
                        CustomerName,
                        FiscalYear,
                        FiscalYearString,
                        EnterpriseCode,
                        SalesMoney,
                        SalesRetGoodsPrice,
                        DiscountPrice,
                        GrossProfit,
                        NetSales1,
                        GrossProfit1,
                        NetSales2,
                        GrossProfit2,
                        NetSales3,
                        GrossProfit3,
                        NetSales4,
                        GrossProfit4,
                        NetSales5,
                        GrossProfit5,
                        NetSales6,
                        GrossProfit6,
                        NetSales7,
                        GrossProfit7,
                        NetSales8,
                        GrossProfit8,
                        NetSales};
                rowCustomInqResultRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomInqResultRow);
                return rowCustomInqResultRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomInqResultDataTable cln = ((CustomInqResultDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomInqResultDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAddUpSecCode = base.Columns["AddUpSecCode"];
                this.columnAddUpSecName = base.Columns["AddUpSecName"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnFiscalYear = base.Columns["FiscalYear"];
                this.columnFiscalYearString = base.Columns["FiscalYearString"];
                this.columnEnterpriseCode = base.Columns["EnterpriseCode"];
                this.columnSalesMoney = base.Columns["SalesMoney"];
                this.columnSalesRetGoodsPrice = base.Columns["SalesRetGoodsPrice"];
                this.columnDiscountPrice = base.Columns["DiscountPrice"];
                this.columnGrossProfit = base.Columns["GrossProfit"];
                this.columnNetSales1 = base.Columns["NetSales1"];
                this.columnGrossProfit1 = base.Columns["GrossProfit1"];
                this.columnNetSales2 = base.Columns["NetSales2"];
                this.columnGrossProfit2 = base.Columns["GrossProfit2"];
                this.columnNetSales3 = base.Columns["NetSales3"];
                this.columnGrossProfit3 = base.Columns["GrossProfit3"];
                this.columnNetSales4 = base.Columns["NetSales4"];
                this.columnGrossProfit4 = base.Columns["GrossProfit4"];
                this.columnNetSales5 = base.Columns["NetSales5"];
                this.columnGrossProfit5 = base.Columns["GrossProfit5"];
                this.columnNetSales6 = base.Columns["NetSales6"];
                this.columnGrossProfit6 = base.Columns["GrossProfit6"];
                this.columnNetSales7 = base.Columns["NetSales7"];
                this.columnGrossProfit7 = base.Columns["GrossProfit7"];
                this.columnNetSales8 = base.Columns["NetSales8"];
                this.columnGrossProfit8 = base.Columns["GrossProfit8"];
                this.columnNetSales = base.Columns["NetSales"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAddUpSecCode = new global::System.Data.DataColumn("AddUpSecCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddUpSecCode);
                this.columnAddUpSecName = new global::System.Data.DataColumn("AddUpSecName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddUpSecName);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnFiscalYear = new global::System.Data.DataColumn("FiscalYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiscalYear);
                this.columnFiscalYearString = new global::System.Data.DataColumn("FiscalYearString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiscalYearString);
                this.columnEnterpriseCode = new global::System.Data.DataColumn("EnterpriseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterpriseCode);
                this.columnSalesMoney = new global::System.Data.DataColumn("SalesMoney", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMoney);
                this.columnSalesRetGoodsPrice = new global::System.Data.DataColumn("SalesRetGoodsPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesRetGoodsPrice);
                this.columnDiscountPrice = new global::System.Data.DataColumn("DiscountPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountPrice);
                this.columnGrossProfit = new global::System.Data.DataColumn("GrossProfit", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfit);
                this.columnNetSales1 = new global::System.Data.DataColumn("NetSales1", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetSales1);
                this.columnGrossProfit1 = new global::System.Data.DataColumn("GrossProfit1", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfit1);
                this.columnNetSales2 = new global::System.Data.DataColumn("NetSales2", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetSales2);
                this.columnGrossProfit2 = new global::System.Data.DataColumn("GrossProfit2", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfit2);
                this.columnNetSales3 = new global::System.Data.DataColumn("NetSales3", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetSales3);
                this.columnGrossProfit3 = new global::System.Data.DataColumn("GrossProfit3", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfit3);
                this.columnNetSales4 = new global::System.Data.DataColumn("NetSales4", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetSales4);
                this.columnGrossProfit4 = new global::System.Data.DataColumn("GrossProfit4", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfit4);
                this.columnNetSales5 = new global::System.Data.DataColumn("NetSales5", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetSales5);
                this.columnGrossProfit5 = new global::System.Data.DataColumn("GrossProfit5", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfit5);
                this.columnNetSales6 = new global::System.Data.DataColumn("NetSales6", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetSales6);
                this.columnGrossProfit6 = new global::System.Data.DataColumn("GrossProfit6", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfit6);
                this.columnNetSales7 = new global::System.Data.DataColumn("NetSales7", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetSales7);
                this.columnGrossProfit7 = new global::System.Data.DataColumn("GrossProfit7", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfit7);
                this.columnNetSales8 = new global::System.Data.DataColumn("NetSales8", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetSales8);
                this.columnGrossProfit8 = new global::System.Data.DataColumn("GrossProfit8", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossProfit8);
                this.columnNetSales = new global::System.Data.DataColumn("NetSales", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetSales);
                this.columnAddUpSecCode.Caption = "拠点";
                this.columnAddUpSecName.Caption = "拠点名称";
                this.columnCustomerCode.Caption = "得意先";
                this.columnCustomerName.Caption = "得意先名";
                this.columnFiscalYear.Caption = "会計年度";
                this.columnFiscalYearString.Caption = "会計年度";
                this.columnEnterpriseCode.Caption = "企業コード";
                this.columnSalesMoney.Caption = "売上金額";
                this.columnSalesRetGoodsPrice.Caption = "返品額";
                this.columnDiscountPrice.Caption = "値引金額";
                this.columnGrossProfit.Caption = "粗利金額";
                this.columnNetSales1.Caption = "過年度実績・順売上１";
                this.columnGrossProfit1.Caption = "過年度実績・粗利１";
                this.columnNetSales2.Caption = "過年度実績・順売上２";
                this.columnGrossProfit2.Caption = "過年度実績・粗利２";
                this.columnNetSales3.Caption = "過年度実績・順売上３";
                this.columnGrossProfit3.Caption = "過年度実績・粗利３";
                this.columnNetSales4.Caption = "過年度実績・順売上４";
                this.columnGrossProfit4.Caption = "過年度実績・粗利４";
                this.columnNetSales5.Caption = "過年度実績・順売上５";
                this.columnGrossProfit5.Caption = "過年度実績・粗利５";
                this.columnNetSales6.Caption = "過年度実績・順売上６";
                this.columnGrossProfit6.Caption = "過年度実績・粗利６";
                this.columnNetSales7.Caption = "過年度実績・順売上７";
                this.columnGrossProfit7.Caption = "過年度実績・粗利７";
                this.columnNetSales8.Caption = "過年度実績・順売上８";
                this.columnGrossProfit8.Caption = "過年度実績・粗利８";
                this.columnNetSales.Caption = "純売上";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomInqResultRow NewCustomInqResultRow() {
                return ((CustomInqResultRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomInqResultRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomInqResultRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomInqResultRowChanged != null)) {
                    this.CustomInqResultRowChanged(this, new CustomInqResultRowChangeEvent(((CustomInqResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomInqResultRowChanging != null)) {
                    this.CustomInqResultRowChanging(this, new CustomInqResultRowChangeEvent(((CustomInqResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomInqResultRowDeleted != null)) {
                    this.CustomInqResultRowDeleted(this, new CustomInqResultRowChangeEvent(((CustomInqResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomInqResultRowDeleting != null)) {
                    this.CustomInqResultRowDeleting(this, new CustomInqResultRowChangeEvent(((CustomInqResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomInqResultRow(CustomInqResultRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                CustomInqOrderDataSet ds = new CustomInqOrderDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomInqResultDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomInqResultRow : global::System.Data.DataRow {
            
            private CustomInqResultDataTable tableCustomInqResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomInqResultRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomInqResult = ((CustomInqResultDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddUpSecCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomInqResult.AddUpSecCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'AddUpSecCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.AddUpSecCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddUpSecName {
                get {
                    try {
                        return ((string)(this[this.tableCustomInqResult.AddUpSecNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'AddUpSecName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.AddUpSecNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomInqResult.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'CustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableCustomInqResult.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'CustomerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FiscalYear {
                get {
                    try {
                        return ((int)(this[this.tableCustomInqResult.FiscalYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'FiscalYear\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.FiscalYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FiscalYearString {
                get {
                    try {
                        return ((string)(this[this.tableCustomInqResult.FiscalYearStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'FiscalYearString\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.FiscalYearStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnterpriseCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomInqResult.EnterpriseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'EnterpriseCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.EnterpriseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesMoney {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.SalesMoneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'SalesMoney\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.SalesMoneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesRetGoodsPrice {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.SalesRetGoodsPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'SalesRetGoodsPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.SalesRetGoodsPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long DiscountPrice {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.DiscountPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'DiscountPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.DiscountPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long GrossProfit {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.GrossProfitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'GrossProfit\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.GrossProfitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NetSales1 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.NetSales1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'NetSales1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.NetSales1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long GrossProfit1 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.GrossProfit1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'GrossProfit1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.GrossProfit1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NetSales2 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.NetSales2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'NetSales2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.NetSales2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long GrossProfit2 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.GrossProfit2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'GrossProfit2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.GrossProfit2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NetSales3 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.NetSales3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'NetSales3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.NetSales3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long GrossProfit3 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.GrossProfit3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'GrossProfit3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.GrossProfit3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NetSales4 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.NetSales4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'NetSales4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.NetSales4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long GrossProfit4 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.GrossProfit4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'GrossProfit4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.GrossProfit4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NetSales5 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.NetSales5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'NetSales5\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.NetSales5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long GrossProfit5 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.GrossProfit5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'GrossProfit5\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.GrossProfit5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NetSales6 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.NetSales6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'NetSales6\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.NetSales6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long GrossProfit6 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.GrossProfit6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'GrossProfit6\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.GrossProfit6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NetSales7 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.NetSales7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'NetSales7\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.NetSales7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long GrossProfit7 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.GrossProfit7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'GrossProfit7\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.GrossProfit7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NetSales8 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.NetSales8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'NetSales8\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.NetSales8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long GrossProfit8 {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.GrossProfit8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'GrossProfit8\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.GrossProfit8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NetSales {
                get {
                    try {
                        return ((long)(this[this.tableCustomInqResult.NetSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'CustomInqResult\' にある列 \'NetSales\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableCustomInqResult.NetSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddUpSecCodeNull() {
                return this.IsNull(this.tableCustomInqResult.AddUpSecCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddUpSecCodeNull() {
                this[this.tableCustomInqResult.AddUpSecCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddUpSecNameNull() {
                return this.IsNull(this.tableCustomInqResult.AddUpSecNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddUpSecNameNull() {
                this[this.tableCustomInqResult.AddUpSecNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableCustomInqResult.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableCustomInqResult.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableCustomInqResult.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableCustomInqResult.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiscalYearNull() {
                return this.IsNull(this.tableCustomInqResult.FiscalYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiscalYearNull() {
                this[this.tableCustomInqResult.FiscalYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiscalYearStringNull() {
                return this.IsNull(this.tableCustomInqResult.FiscalYearStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiscalYearStringNull() {
                this[this.tableCustomInqResult.FiscalYearStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnterpriseCodeNull() {
                return this.IsNull(this.tableCustomInqResult.EnterpriseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnterpriseCodeNull() {
                this[this.tableCustomInqResult.EnterpriseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesMoneyNull() {
                return this.IsNull(this.tableCustomInqResult.SalesMoneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesMoneyNull() {
                this[this.tableCustomInqResult.SalesMoneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesRetGoodsPriceNull() {
                return this.IsNull(this.tableCustomInqResult.SalesRetGoodsPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesRetGoodsPriceNull() {
                this[this.tableCustomInqResult.SalesRetGoodsPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountPriceNull() {
                return this.IsNull(this.tableCustomInqResult.DiscountPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountPriceNull() {
                this[this.tableCustomInqResult.DiscountPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfitNull() {
                return this.IsNull(this.tableCustomInqResult.GrossProfitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfitNull() {
                this[this.tableCustomInqResult.GrossProfitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetSales1Null() {
                return this.IsNull(this.tableCustomInqResult.NetSales1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetSales1Null() {
                this[this.tableCustomInqResult.NetSales1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfit1Null() {
                return this.IsNull(this.tableCustomInqResult.GrossProfit1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfit1Null() {
                this[this.tableCustomInqResult.GrossProfit1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetSales2Null() {
                return this.IsNull(this.tableCustomInqResult.NetSales2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetSales2Null() {
                this[this.tableCustomInqResult.NetSales2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfit2Null() {
                return this.IsNull(this.tableCustomInqResult.GrossProfit2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfit2Null() {
                this[this.tableCustomInqResult.GrossProfit2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetSales3Null() {
                return this.IsNull(this.tableCustomInqResult.NetSales3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetSales3Null() {
                this[this.tableCustomInqResult.NetSales3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfit3Null() {
                return this.IsNull(this.tableCustomInqResult.GrossProfit3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfit3Null() {
                this[this.tableCustomInqResult.GrossProfit3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetSales4Null() {
                return this.IsNull(this.tableCustomInqResult.NetSales4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetSales4Null() {
                this[this.tableCustomInqResult.NetSales4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfit4Null() {
                return this.IsNull(this.tableCustomInqResult.GrossProfit4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfit4Null() {
                this[this.tableCustomInqResult.GrossProfit4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetSales5Null() {
                return this.IsNull(this.tableCustomInqResult.NetSales5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetSales5Null() {
                this[this.tableCustomInqResult.NetSales5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfit5Null() {
                return this.IsNull(this.tableCustomInqResult.GrossProfit5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfit5Null() {
                this[this.tableCustomInqResult.GrossProfit5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetSales6Null() {
                return this.IsNull(this.tableCustomInqResult.NetSales6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetSales6Null() {
                this[this.tableCustomInqResult.NetSales6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfit6Null() {
                return this.IsNull(this.tableCustomInqResult.GrossProfit6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfit6Null() {
                this[this.tableCustomInqResult.GrossProfit6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetSales7Null() {
                return this.IsNull(this.tableCustomInqResult.NetSales7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetSales7Null() {
                this[this.tableCustomInqResult.NetSales7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfit7Null() {
                return this.IsNull(this.tableCustomInqResult.GrossProfit7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfit7Null() {
                this[this.tableCustomInqResult.GrossProfit7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetSales8Null() {
                return this.IsNull(this.tableCustomInqResult.NetSales8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetSales8Null() {
                this[this.tableCustomInqResult.NetSales8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossProfit8Null() {
                return this.IsNull(this.tableCustomInqResult.GrossProfit8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossProfit8Null() {
                this[this.tableCustomInqResult.GrossProfit8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetSalesNull() {
                return this.IsNull(this.tableCustomInqResult.NetSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetSalesNull() {
                this[this.tableCustomInqResult.NetSalesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomInqResultRowChangeEvent : global::System.EventArgs {
            
            private CustomInqResultRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomInqResultRowChangeEvent(CustomInqResultRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomInqResultRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591