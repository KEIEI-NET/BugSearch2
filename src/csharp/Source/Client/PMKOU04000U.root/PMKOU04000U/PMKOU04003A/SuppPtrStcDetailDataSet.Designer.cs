//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.8806
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.Controller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SuppPtrStcDetailDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SuppPtrStcDetailDataSet : global::System.Data.DataSet {
        
        private StcDetailDataTable tableStcDetail;
        
        private StcListDataTable tableStcList;
        
        private BalanceListDataTable tableBalanceList;
        
        private BalanceTotalDataTable tableBalanceTotal;
        
        private RedSlipDetailDataTable tableRedSlipDetail;
        
        private RetGdsStcDetailDataTable tableRetGdsStcDetail;
        
        private RetGdsStcListDataTable tableRetGdsStcList;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SuppPtrStcDetailDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SuppPtrStcDetailDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["StcDetail"] != null)) {
                    base.Tables.Add(new StcDetailDataTable(ds.Tables["StcDetail"]));
                }
                if ((ds.Tables["StcList"] != null)) {
                    base.Tables.Add(new StcListDataTable(ds.Tables["StcList"]));
                }
                if ((ds.Tables["BalanceList"] != null)) {
                    base.Tables.Add(new BalanceListDataTable(ds.Tables["BalanceList"]));
                }
                if ((ds.Tables["BalanceTotal"] != null)) {
                    base.Tables.Add(new BalanceTotalDataTable(ds.Tables["BalanceTotal"]));
                }
                if ((ds.Tables["RedSlipDetail"] != null)) {
                    base.Tables.Add(new RedSlipDetailDataTable(ds.Tables["RedSlipDetail"]));
                }
                if ((ds.Tables["RetGdsStcDetail"] != null)) {
                    base.Tables.Add(new RetGdsStcDetailDataTable(ds.Tables["RetGdsStcDetail"]));
                }
                if ((ds.Tables["RetGdsStcList"] != null)) {
                    base.Tables.Add(new RetGdsStcListDataTable(ds.Tables["RetGdsStcList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StcDetailDataTable StcDetail {
            get {
                return this.tableStcDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StcListDataTable StcList {
            get {
                return this.tableStcList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BalanceListDataTable BalanceList {
            get {
                return this.tableBalanceList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BalanceTotalDataTable BalanceTotal {
            get {
                return this.tableBalanceTotal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RedSlipDetailDataTable RedSlipDetail {
            get {
                return this.tableRedSlipDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RetGdsStcDetailDataTable RetGdsStcDetail {
            get {
                return this.tableRetGdsStcDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RetGdsStcListDataTable RetGdsStcList {
            get {
                return this.tableRetGdsStcList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SuppPtrStcDetailDataSet cln = ((SuppPtrStcDetailDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["StcDetail"] != null)) {
                    base.Tables.Add(new StcDetailDataTable(ds.Tables["StcDetail"]));
                }
                if ((ds.Tables["StcList"] != null)) {
                    base.Tables.Add(new StcListDataTable(ds.Tables["StcList"]));
                }
                if ((ds.Tables["BalanceList"] != null)) {
                    base.Tables.Add(new BalanceListDataTable(ds.Tables["BalanceList"]));
                }
                if ((ds.Tables["BalanceTotal"] != null)) {
                    base.Tables.Add(new BalanceTotalDataTable(ds.Tables["BalanceTotal"]));
                }
                if ((ds.Tables["RedSlipDetail"] != null)) {
                    base.Tables.Add(new RedSlipDetailDataTable(ds.Tables["RedSlipDetail"]));
                }
                if ((ds.Tables["RetGdsStcDetail"] != null)) {
                    base.Tables.Add(new RetGdsStcDetailDataTable(ds.Tables["RetGdsStcDetail"]));
                }
                if ((ds.Tables["RetGdsStcList"] != null)) {
                    base.Tables.Add(new RetGdsStcListDataTable(ds.Tables["RetGdsStcList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableStcDetail = ((StcDetailDataTable)(base.Tables["StcDetail"]));
            if ((initTable == true)) {
                if ((this.tableStcDetail != null)) {
                    this.tableStcDetail.InitVars();
                }
            }
            this.tableStcList = ((StcListDataTable)(base.Tables["StcList"]));
            if ((initTable == true)) {
                if ((this.tableStcList != null)) {
                    this.tableStcList.InitVars();
                }
            }
            this.tableBalanceList = ((BalanceListDataTable)(base.Tables["BalanceList"]));
            if ((initTable == true)) {
                if ((this.tableBalanceList != null)) {
                    this.tableBalanceList.InitVars();
                }
            }
            this.tableBalanceTotal = ((BalanceTotalDataTable)(base.Tables["BalanceTotal"]));
            if ((initTable == true)) {
                if ((this.tableBalanceTotal != null)) {
                    this.tableBalanceTotal.InitVars();
                }
            }
            this.tableRedSlipDetail = ((RedSlipDetailDataTable)(base.Tables["RedSlipDetail"]));
            if ((initTable == true)) {
                if ((this.tableRedSlipDetail != null)) {
                    this.tableRedSlipDetail.InitVars();
                }
            }
            this.tableRetGdsStcDetail = ((RetGdsStcDetailDataTable)(base.Tables["RetGdsStcDetail"]));
            if ((initTable == true)) {
                if ((this.tableRetGdsStcDetail != null)) {
                    this.tableRetGdsStcDetail.InitVars();
                }
            }
            this.tableRetGdsStcList = ((RetGdsStcListDataTable)(base.Tables["RetGdsStcList"]));
            if ((initTable == true)) {
                if ((this.tableRetGdsStcList != null)) {
                    this.tableRetGdsStcList.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SuppPtrStcDetailDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SuppPtrStcDetailDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableStcDetail = new StcDetailDataTable();
            base.Tables.Add(this.tableStcDetail);
            this.tableStcList = new StcListDataTable();
            base.Tables.Add(this.tableStcList);
            this.tableBalanceList = new BalanceListDataTable();
            base.Tables.Add(this.tableBalanceList);
            this.tableBalanceTotal = new BalanceTotalDataTable();
            base.Tables.Add(this.tableBalanceTotal);
            this.tableRedSlipDetail = new RedSlipDetailDataTable();
            base.Tables.Add(this.tableRedSlipDetail);
            this.tableRetGdsStcDetail = new RetGdsStcDetailDataTable();
            base.Tables.Add(this.tableRetGdsStcDetail);
            this.tableRetGdsStcList = new RetGdsStcListDataTable();
            base.Tables.Add(this.tableRetGdsStcList);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStcDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStcList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBalanceList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBalanceTotal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRedSlipDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRetGdsStcDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRetGdsStcList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SuppPtrStcDetailDataSet ds = new SuppPtrStcDetailDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void StcDetailRowChangeEventHandler(object sender, StcDetailRowChangeEvent e);
        
        public delegate void StcListRowChangeEventHandler(object sender, StcListRowChangeEvent e);
        
        public delegate void BalanceListRowChangeEventHandler(object sender, BalanceListRowChangeEvent e);
        
        public delegate void BalanceTotalRowChangeEventHandler(object sender, BalanceTotalRowChangeEvent e);
        
        public delegate void RedSlipDetailRowChangeEventHandler(object sender, RedSlipDetailRowChangeEvent e);
        
        public delegate void RetGdsStcDetailRowChangeEventHandler(object sender, RetGdsStcDetailRowChangeEvent e);
        
        public delegate void RetGdsStcListRowChangeEventHandler(object sender, RetGdsStcListRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StcDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSelectionCheck;
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnDataDiv;
            
            private global::System.Data.DataColumn columnStockDate;
            
            private global::System.Data.DataColumn columnPartySaleSlipNum;
            
            private global::System.Data.DataColumn columnStockRowNo;
            
            private global::System.Data.DataColumn columnSupplierFormal;
            
            private global::System.Data.DataColumn columnSupplierSlipCd;
            
            private global::System.Data.DataColumn columnSupplierSlipCdName;
            
            private global::System.Data.DataColumn columnStockSlipCdDtl;
            
            private global::System.Data.DataColumn columnStockAgentName;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnMakerName;
            
            private global::System.Data.DataColumn columnBLGoodsCode;
            
            private global::System.Data.DataColumn columnBLGroupCode;
            
            private global::System.Data.DataColumn columnStockUnitPriceFl;
            
            private global::System.Data.DataColumn columnStockCount;
            
            private global::System.Data.DataColumn columnListPriceTaxExcFl;
            
            private global::System.Data.DataColumn columnOpenPriceDiv;
            
            private global::System.Data.DataColumn columnStockTtlPricTaxExc;
            
            private global::System.Data.DataColumn columnSuppCTaxLayCd;
            
            private global::System.Data.DataColumn columnStockTtlPricTaxInc;
            
            private global::System.Data.DataColumn columnStockPriceConsTax;
            
            private global::System.Data.DataColumn columnSupplierSlipNote1;
            
            private global::System.Data.DataColumn columnSupplierSlipNote2;
            
            private global::System.Data.DataColumn columnSectionCd;
            
            private global::System.Data.DataColumn columnSectionGuideNm;
            
            private global::System.Data.DataColumn columnStockInputName;
            
            private global::System.Data.DataColumn columnSupplierCd;
            
            private global::System.Data.DataColumn columnSupplierSnm;
            
            private global::System.Data.DataColumn columnStockOrderDivCd;
            
            private global::System.Data.DataColumn columnStockOrderDivCdName;
            
            private global::System.Data.DataColumn columnWarehouseCd;
            
            private global::System.Data.DataColumn columnWarehouseName;
            
            private global::System.Data.DataColumn columnWarehouseShelfNo;
            
            private global::System.Data.DataColumn columnUoeRemark1;
            
            private global::System.Data.DataColumn columnUoeRemark2;
            
            private global::System.Data.DataColumn columnSupplierSlipNo;
            
            private global::System.Data.DataColumn columnStockAddUpADate;
            
            private global::System.Data.DataColumn columnAccPayDivCd;
            
            private global::System.Data.DataColumn columnAccPayDivCdName;
            
            private global::System.Data.DataColumn columnDebitNoteDiv;
            
            private global::System.Data.DataColumn columnSalesSlipNum;
            
            private global::System.Data.DataColumn columnSalesDate;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerSnm;
            
            private global::System.Data.DataColumn columnBfStockUnitPriceFl;
            
            private global::System.Data.DataColumn columnBfListPrice;
            
            private global::System.Data.DataColumn columnStockSlipCdDtlInt;
            
            private global::System.Data.DataColumn columnLogicalDeleteCode;
            
            private global::System.Data.DataColumn columnSupplierConsTaxRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StcDetailDataTable() {
                this.TableName = "StcDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StcDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StcDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectionCheckColumn {
                get {
                    return this.columnSelectionCheck;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataDivColumn {
                get {
                    return this.columnDataDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockDateColumn {
                get {
                    return this.columnStockDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartySaleSlipNumColumn {
                get {
                    return this.columnPartySaleSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockRowNoColumn {
                get {
                    return this.columnStockRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierFormalColumn {
                get {
                    return this.columnSupplierFormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipCdColumn {
                get {
                    return this.columnSupplierSlipCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipCdNameColumn {
                get {
                    return this.columnSupplierSlipCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockSlipCdDtlColumn {
                get {
                    return this.columnStockSlipCdDtl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockAgentNameColumn {
                get {
                    return this.columnStockAgentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerNameColumn {
                get {
                    return this.columnMakerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGoodsCodeColumn {
                get {
                    return this.columnBLGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGroupCodeColumn {
                get {
                    return this.columnBLGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockUnitPriceFlColumn {
                get {
                    return this.columnStockUnitPriceFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockCountColumn {
                get {
                    return this.columnStockCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceTaxExcFlColumn {
                get {
                    return this.columnListPriceTaxExcFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OpenPriceDivColumn {
                get {
                    return this.columnOpenPriceDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockTtlPricTaxExcColumn {
                get {
                    return this.columnStockTtlPricTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppCTaxLayCdColumn {
                get {
                    return this.columnSuppCTaxLayCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockTtlPricTaxIncColumn {
                get {
                    return this.columnStockTtlPricTaxInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockPriceConsTaxColumn {
                get {
                    return this.columnStockPriceConsTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNote1Column {
                get {
                    return this.columnSupplierSlipNote1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNote2Column {
                get {
                    return this.columnSupplierSlipNote2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionCdColumn {
                get {
                    return this.columnSectionCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionGuideNmColumn {
                get {
                    return this.columnSectionGuideNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockInputNameColumn {
                get {
                    return this.columnStockInputName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCdColumn {
                get {
                    return this.columnSupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSnmColumn {
                get {
                    return this.columnSupplierSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockOrderDivCdColumn {
                get {
                    return this.columnStockOrderDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockOrderDivCdNameColumn {
                get {
                    return this.columnStockOrderDivCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCdColumn {
                get {
                    return this.columnWarehouseCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseNameColumn {
                get {
                    return this.columnWarehouseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseShelfNoColumn {
                get {
                    return this.columnWarehouseShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UoeRemark1Column {
                get {
                    return this.columnUoeRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UoeRemark2Column {
                get {
                    return this.columnUoeRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNoColumn {
                get {
                    return this.columnSupplierSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockAddUpADateColumn {
                get {
                    return this.columnStockAddUpADate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccPayDivCdColumn {
                get {
                    return this.columnAccPayDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccPayDivCdNameColumn {
                get {
                    return this.columnAccPayDivCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteDivColumn {
                get {
                    return this.columnDebitNoteDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipNumColumn {
                get {
                    return this.columnSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerSnmColumn {
                get {
                    return this.columnCustomerSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfStockUnitPriceFlColumn {
                get {
                    return this.columnBfStockUnitPriceFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfListPriceColumn {
                get {
                    return this.columnBfListPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockSlipCdDtlIntColumn {
                get {
                    return this.columnStockSlipCdDtlInt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogicalDeleteCodeColumn {
                get {
                    return this.columnLogicalDeleteCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierConsTaxRateColumn {
                get {
                    return this.columnSupplierConsTaxRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StcDetailRow this[int index] {
                get {
                    return ((StcDetailRow)(this.Rows[index]));
                }
            }
            
            public event StcDetailRowChangeEventHandler StcDetailRowChanging;
            
            public event StcDetailRowChangeEventHandler StcDetailRowChanged;
            
            public event StcDetailRowChangeEventHandler StcDetailRowDeleting;
            
            public event StcDetailRowChangeEventHandler StcDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStcDetailRow(StcDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StcDetailRow AddStcDetailRow(
                        bool SelectionCheck, 
                        int RowNo, 
                        int DataDiv, 
                        System.DateTime StockDate, 
                        string PartySaleSlipNum, 
                        int StockRowNo, 
                        int SupplierFormal, 
                        int SupplierSlipCd, 
                        string SupplierSlipCdName, 
                        string StockSlipCdDtl, 
                        string StockAgentName, 
                        string GoodsName, 
                        string GoodsNo, 
                        string GoodsMakerCd, 
                        string MakerName, 
                        string BLGoodsCode, 
                        string BLGroupCode, 
                        double StockUnitPriceFl, 
                        double StockCount, 
                        double ListPriceTaxExcFl, 
                        int OpenPriceDiv, 
                        long StockTtlPricTaxExc, 
                        int SuppCTaxLayCd, 
                        long StockTtlPricTaxInc, 
                        long StockPriceConsTax, 
                        string SupplierSlipNote1, 
                        string SupplierSlipNote2, 
                        string SectionCd, 
                        string SectionGuideNm, 
                        string StockInputName, 
                        int SupplierCd, 
                        string SupplierSnm, 
                        int StockOrderDivCd, 
                        string StockOrderDivCdName, 
                        string WarehouseCd, 
                        string WarehouseName, 
                        string WarehouseShelfNo, 
                        string UoeRemark1, 
                        string UoeRemark2, 
                        int SupplierSlipNo, 
                        System.DateTime StockAddUpADate, 
                        int AccPayDivCd, 
                        string AccPayDivCdName, 
                        string DebitNoteDiv, 
                        string SalesSlipNum, 
                        System.DateTime SalesDate, 
                        int CustomerCode, 
                        string CustomerSnm, 
                        double BfStockUnitPriceFl, 
                        double BfListPrice, 
                        int StockSlipCdDtlInt, 
                        int LogicalDeleteCode, 
                        double SupplierConsTaxRate) {
                StcDetailRow rowStcDetailRow = ((StcDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SelectionCheck,
                        RowNo,
                        DataDiv,
                        StockDate,
                        PartySaleSlipNum,
                        StockRowNo,
                        SupplierFormal,
                        SupplierSlipCd,
                        SupplierSlipCdName,
                        StockSlipCdDtl,
                        StockAgentName,
                        GoodsName,
                        GoodsNo,
                        GoodsMakerCd,
                        MakerName,
                        BLGoodsCode,
                        BLGroupCode,
                        StockUnitPriceFl,
                        StockCount,
                        ListPriceTaxExcFl,
                        OpenPriceDiv,
                        StockTtlPricTaxExc,
                        SuppCTaxLayCd,
                        StockTtlPricTaxInc,
                        StockPriceConsTax,
                        SupplierSlipNote1,
                        SupplierSlipNote2,
                        SectionCd,
                        SectionGuideNm,
                        StockInputName,
                        SupplierCd,
                        SupplierSnm,
                        StockOrderDivCd,
                        StockOrderDivCdName,
                        WarehouseCd,
                        WarehouseName,
                        WarehouseShelfNo,
                        UoeRemark1,
                        UoeRemark2,
                        SupplierSlipNo,
                        StockAddUpADate,
                        AccPayDivCd,
                        AccPayDivCdName,
                        DebitNoteDiv,
                        SalesSlipNum,
                        SalesDate,
                        CustomerCode,
                        CustomerSnm,
                        BfStockUnitPriceFl,
                        BfListPrice,
                        StockSlipCdDtlInt,
                        LogicalDeleteCode,
                        SupplierConsTaxRate};
                rowStcDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStcDetailRow);
                return rowStcDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StcDetailRow FindByRowNo(int RowNo) {
                return ((StcDetailRow)(this.Rows.Find(new object[] {
                            RowNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StcDetailDataTable cln = ((StcDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StcDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSelectionCheck = base.Columns["SelectionCheck"];
                this.columnRowNo = base.Columns["RowNo"];
                this.columnDataDiv = base.Columns["DataDiv"];
                this.columnStockDate = base.Columns["StockDate"];
                this.columnPartySaleSlipNum = base.Columns["PartySaleSlipNum"];
                this.columnStockRowNo = base.Columns["StockRowNo"];
                this.columnSupplierFormal = base.Columns["SupplierFormal"];
                this.columnSupplierSlipCd = base.Columns["SupplierSlipCd"];
                this.columnSupplierSlipCdName = base.Columns["SupplierSlipCdName"];
                this.columnStockSlipCdDtl = base.Columns["StockSlipCdDtl"];
                this.columnStockAgentName = base.Columns["StockAgentName"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnMakerName = base.Columns["MakerName"];
                this.columnBLGoodsCode = base.Columns["BLGoodsCode"];
                this.columnBLGroupCode = base.Columns["BLGroupCode"];
                this.columnStockUnitPriceFl = base.Columns["StockUnitPriceFl"];
                this.columnStockCount = base.Columns["StockCount"];
                this.columnListPriceTaxExcFl = base.Columns["ListPriceTaxExcFl"];
                this.columnOpenPriceDiv = base.Columns["OpenPriceDiv"];
                this.columnStockTtlPricTaxExc = base.Columns["StockTtlPricTaxExc"];
                this.columnSuppCTaxLayCd = base.Columns["SuppCTaxLayCd"];
                this.columnStockTtlPricTaxInc = base.Columns["StockTtlPricTaxInc"];
                this.columnStockPriceConsTax = base.Columns["StockPriceConsTax"];
                this.columnSupplierSlipNote1 = base.Columns["SupplierSlipNote1"];
                this.columnSupplierSlipNote2 = base.Columns["SupplierSlipNote2"];
                this.columnSectionCd = base.Columns["SectionCd"];
                this.columnSectionGuideNm = base.Columns["SectionGuideNm"];
                this.columnStockInputName = base.Columns["StockInputName"];
                this.columnSupplierCd = base.Columns["SupplierCd"];
                this.columnSupplierSnm = base.Columns["SupplierSnm"];
                this.columnStockOrderDivCd = base.Columns["StockOrderDivCd"];
                this.columnStockOrderDivCdName = base.Columns["StockOrderDivCdName"];
                this.columnWarehouseCd = base.Columns["WarehouseCd"];
                this.columnWarehouseName = base.Columns["WarehouseName"];
                this.columnWarehouseShelfNo = base.Columns["WarehouseShelfNo"];
                this.columnUoeRemark1 = base.Columns["UoeRemark1"];
                this.columnUoeRemark2 = base.Columns["UoeRemark2"];
                this.columnSupplierSlipNo = base.Columns["SupplierSlipNo"];
                this.columnStockAddUpADate = base.Columns["StockAddUpADate"];
                this.columnAccPayDivCd = base.Columns["AccPayDivCd"];
                this.columnAccPayDivCdName = base.Columns["AccPayDivCdName"];
                this.columnDebitNoteDiv = base.Columns["DebitNoteDiv"];
                this.columnSalesSlipNum = base.Columns["SalesSlipNum"];
                this.columnSalesDate = base.Columns["SalesDate"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerSnm = base.Columns["CustomerSnm"];
                this.columnBfStockUnitPriceFl = base.Columns["BfStockUnitPriceFl"];
                this.columnBfListPrice = base.Columns["BfListPrice"];
                this.columnStockSlipCdDtlInt = base.Columns["StockSlipCdDtlInt"];
                this.columnLogicalDeleteCode = base.Columns["LogicalDeleteCode"];
                this.columnSupplierConsTaxRate = base.Columns["SupplierConsTaxRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSelectionCheck = new global::System.Data.DataColumn("SelectionCheck", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectionCheck);
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnDataDiv = new global::System.Data.DataColumn("DataDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataDiv);
                this.columnStockDate = new global::System.Data.DataColumn("StockDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockDate);
                this.columnPartySaleSlipNum = new global::System.Data.DataColumn("PartySaleSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartySaleSlipNum);
                this.columnStockRowNo = new global::System.Data.DataColumn("StockRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockRowNo);
                this.columnSupplierFormal = new global::System.Data.DataColumn("SupplierFormal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierFormal);
                this.columnSupplierSlipCd = new global::System.Data.DataColumn("SupplierSlipCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipCd);
                this.columnSupplierSlipCdName = new global::System.Data.DataColumn("SupplierSlipCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipCdName);
                this.columnStockSlipCdDtl = new global::System.Data.DataColumn("StockSlipCdDtl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSlipCdDtl);
                this.columnStockAgentName = new global::System.Data.DataColumn("StockAgentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAgentName);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnMakerName = new global::System.Data.DataColumn("MakerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerName);
                this.columnBLGoodsCode = new global::System.Data.DataColumn("BLGoodsCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGoodsCode);
                this.columnBLGroupCode = new global::System.Data.DataColumn("BLGroupCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGroupCode);
                this.columnStockUnitPriceFl = new global::System.Data.DataColumn("StockUnitPriceFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockUnitPriceFl);
                this.columnStockCount = new global::System.Data.DataColumn("StockCount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockCount);
                this.columnListPriceTaxExcFl = new global::System.Data.DataColumn("ListPriceTaxExcFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPriceTaxExcFl);
                this.columnOpenPriceDiv = new global::System.Data.DataColumn("OpenPriceDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpenPriceDiv);
                this.columnStockTtlPricTaxExc = new global::System.Data.DataColumn("StockTtlPricTaxExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockTtlPricTaxExc);
                this.columnSuppCTaxLayCd = new global::System.Data.DataColumn("SuppCTaxLayCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppCTaxLayCd);
                this.columnStockTtlPricTaxInc = new global::System.Data.DataColumn("StockTtlPricTaxInc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockTtlPricTaxInc);
                this.columnStockPriceConsTax = new global::System.Data.DataColumn("StockPriceConsTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockPriceConsTax);
                this.columnSupplierSlipNote1 = new global::System.Data.DataColumn("SupplierSlipNote1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNote1);
                this.columnSupplierSlipNote2 = new global::System.Data.DataColumn("SupplierSlipNote2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNote2);
                this.columnSectionCd = new global::System.Data.DataColumn("SectionCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionCd);
                this.columnSectionGuideNm = new global::System.Data.DataColumn("SectionGuideNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionGuideNm);
                this.columnStockInputName = new global::System.Data.DataColumn("StockInputName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockInputName);
                this.columnSupplierCd = new global::System.Data.DataColumn("SupplierCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCd);
                this.columnSupplierSnm = new global::System.Data.DataColumn("SupplierSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSnm);
                this.columnStockOrderDivCd = new global::System.Data.DataColumn("StockOrderDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockOrderDivCd);
                this.columnStockOrderDivCdName = new global::System.Data.DataColumn("StockOrderDivCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockOrderDivCdName);
                this.columnWarehouseCd = new global::System.Data.DataColumn("WarehouseCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCd);
                this.columnWarehouseName = new global::System.Data.DataColumn("WarehouseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseName);
                this.columnWarehouseShelfNo = new global::System.Data.DataColumn("WarehouseShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseShelfNo);
                this.columnUoeRemark1 = new global::System.Data.DataColumn("UoeRemark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUoeRemark1);
                this.columnUoeRemark2 = new global::System.Data.DataColumn("UoeRemark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUoeRemark2);
                this.columnSupplierSlipNo = new global::System.Data.DataColumn("SupplierSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNo);
                this.columnStockAddUpADate = new global::System.Data.DataColumn("StockAddUpADate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAddUpADate);
                this.columnAccPayDivCd = new global::System.Data.DataColumn("AccPayDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccPayDivCd);
                this.columnAccPayDivCdName = new global::System.Data.DataColumn("AccPayDivCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccPayDivCdName);
                this.columnDebitNoteDiv = new global::System.Data.DataColumn("DebitNoteDiv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteDiv);
                this.columnSalesSlipNum = new global::System.Data.DataColumn("SalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipNum);
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerSnm = new global::System.Data.DataColumn("CustomerSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerSnm);
                this.columnBfStockUnitPriceFl = new global::System.Data.DataColumn("BfStockUnitPriceFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfStockUnitPriceFl);
                this.columnBfListPrice = new global::System.Data.DataColumn("BfListPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfListPrice);
                this.columnStockSlipCdDtlInt = new global::System.Data.DataColumn("StockSlipCdDtlInt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSlipCdDtlInt);
                this.columnLogicalDeleteCode = new global::System.Data.DataColumn("LogicalDeleteCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogicalDeleteCode);
                this.columnSupplierConsTaxRate = new global::System.Data.DataColumn("SupplierConsTaxRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierConsTaxRate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, true));
                this.columnSelectionCheck.Caption = "行選択";
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "行番号";
                this.columnDataDiv.Caption = "データ区分";
                this.columnStockDate.Caption = "伝票日付";
                this.columnPartySaleSlipNum.Caption = "伝票番号";
                this.columnStockRowNo.Caption = "行No";
                this.columnSupplierFormal.Caption = "仕入形式";
                this.columnSupplierSlipCd.Caption = "仕入伝票区分";
                this.columnSupplierSlipCdName.Caption = "仕入伝票区分名";
                this.columnStockSlipCdDtl.Caption = "明細区分";
                this.columnStockAgentName.Caption = "担当者名";
                this.columnGoodsName.Caption = "品名";
                this.columnGoodsNo.Caption = "品番";
                this.columnGoodsMakerCd.Caption = "メーカーコード";
                this.columnMakerName.Caption = "メーカー名称";
                this.columnBLGoodsCode.Caption = "BLコード";
                this.columnBLGroupCode.Caption = "BLグループ";
                this.columnStockUnitPriceFl.Caption = "原単価";
                this.columnStockCount.Caption = "数量";
                this.columnListPriceTaxExcFl.Caption = "標準価格";
                this.columnOpenPriceDiv.Caption = "オープン価格区分";
                this.columnStockTtlPricTaxExc.Caption = "金額";
                this.columnSuppCTaxLayCd.Caption = "仕入先消費税転嫁方式コード";
                this.columnStockTtlPricTaxInc.Caption = "仕入金額計（税込）";
                this.columnStockPriceConsTax.Caption = "仕入金額消費税額";
                this.columnSupplierSlipNote1.Caption = "備考１";
                this.columnSupplierSlipNote2.Caption = "備考２";
                this.columnSectionCd.Caption = "拠点コード";
                this.columnSectionGuideNm.Caption = "拠点";
                this.columnStockInputName.Caption = "発行者";
                this.columnSupplierCd.Caption = "仕入先コード";
                this.columnSupplierSnm.Caption = "仕入先名";
                this.columnStockOrderDivCd.Caption = "在取";
                this.columnStockOrderDivCdName.Caption = "在取区分名";
                this.columnWarehouseCd.Caption = "倉庫コード";
                this.columnWarehouseName.Caption = "倉庫";
                this.columnWarehouseShelfNo.Caption = "棚番";
                this.columnUoeRemark1.Caption = "ＵＯＥリマーク１";
                this.columnUoeRemark2.Caption = "ＵＯＥリマーク２";
                this.columnSupplierSlipNo.Caption = "仕入SEQ/支払No";
                this.columnStockAddUpADate.Caption = "計上日";
                this.columnAccPayDivCd.Caption = "買掛区分";
                this.columnAccPayDivCdName.Caption = "買掛区分名";
                this.columnDebitNoteDiv.Caption = "赤伝区分";
                this.columnSalesSlipNum.Caption = "同時売上伝票番号";
                this.columnSalesDate.Caption = "同時売上日付";
                this.columnCustomerCode.Caption = "得意先コード";
                this.columnCustomerSnm.Caption = "得意先名";
                this.columnBfStockUnitPriceFl.Caption = "変更前仕入単価（浮動）";
                this.columnBfListPrice.Caption = "変更前定価";
                this.columnStockSlipCdDtlInt.Caption = "仕入伝票区分（明細）";
                this.columnLogicalDeleteCode.Caption = "論理削除区分";
                this.columnSupplierConsTaxRate.Caption = "消費税率";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StcDetailRow NewStcDetailRow() {
                return ((StcDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StcDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StcDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StcDetailRowChanged != null)) {
                    this.StcDetailRowChanged(this, new StcDetailRowChangeEvent(((StcDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StcDetailRowChanging != null)) {
                    this.StcDetailRowChanging(this, new StcDetailRowChangeEvent(((StcDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StcDetailRowDeleted != null)) {
                    this.StcDetailRowDeleted(this, new StcDetailRowChangeEvent(((StcDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StcDetailRowDeleting != null)) {
                    this.StcDetailRowDeleting(this, new StcDetailRowChangeEvent(((StcDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStcDetailRow(StcDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuppPtrStcDetailDataSet ds = new SuppPtrStcDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StcDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StcListDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSelection;
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnDataDiv;
            
            private global::System.Data.DataColumn columnStockDate;
            
            private global::System.Data.DataColumn columnPartySaleSlipNum;
            
            private global::System.Data.DataColumn columnSupplierFormal;
            
            private global::System.Data.DataColumn columnSupplierSlipCd;
            
            private global::System.Data.DataColumn columnSupplierSlipCdName;
            
            private global::System.Data.DataColumn columnStockAgentName;
            
            private global::System.Data.DataColumn columnStockTtlPricTaxExc;
            
            private global::System.Data.DataColumn columnConsumeTax;
            
            private global::System.Data.DataColumn columnStockPriceConsTax;
            
            private global::System.Data.DataColumn columnSupplierSlipNote1;
            
            private global::System.Data.DataColumn columnSupplierSlipNote2;
            
            private global::System.Data.DataColumn columnSectionCd;
            
            private global::System.Data.DataColumn columnSectionGuideNm;
            
            private global::System.Data.DataColumn columnStockInputName;
            
            private global::System.Data.DataColumn columnSupplierCd;
            
            private global::System.Data.DataColumn columnSupplierSnm;
            
            private global::System.Data.DataColumn columnUoeRemark1;
            
            private global::System.Data.DataColumn columnUoeRemark2;
            
            private global::System.Data.DataColumn columnSupplierSlipNo;
            
            private global::System.Data.DataColumn columnStockAddUpADate;
            
            private global::System.Data.DataColumn columnAccPayDivCd;
            
            private global::System.Data.DataColumn columnAccPayDivCdName;
            
            private global::System.Data.DataColumn columnDebitNoteDiv;
            
            private global::System.Data.DataColumn columnSalesSlipNum;
            
            private global::System.Data.DataColumn columnSupplierConsTaxRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StcListDataTable() {
                this.TableName = "StcList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StcListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StcListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectionColumn {
                get {
                    return this.columnSelection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataDivColumn {
                get {
                    return this.columnDataDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockDateColumn {
                get {
                    return this.columnStockDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartySaleSlipNumColumn {
                get {
                    return this.columnPartySaleSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierFormalColumn {
                get {
                    return this.columnSupplierFormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipCdColumn {
                get {
                    return this.columnSupplierSlipCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipCdNameColumn {
                get {
                    return this.columnSupplierSlipCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockAgentNameColumn {
                get {
                    return this.columnStockAgentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockTtlPricTaxExcColumn {
                get {
                    return this.columnStockTtlPricTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsumeTaxColumn {
                get {
                    return this.columnConsumeTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockPriceConsTaxColumn {
                get {
                    return this.columnStockPriceConsTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNote1Column {
                get {
                    return this.columnSupplierSlipNote1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNote2Column {
                get {
                    return this.columnSupplierSlipNote2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionCdColumn {
                get {
                    return this.columnSectionCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionGuideNmColumn {
                get {
                    return this.columnSectionGuideNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockInputNameColumn {
                get {
                    return this.columnStockInputName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCdColumn {
                get {
                    return this.columnSupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSnmColumn {
                get {
                    return this.columnSupplierSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UoeRemark1Column {
                get {
                    return this.columnUoeRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UoeRemark2Column {
                get {
                    return this.columnUoeRemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNoColumn {
                get {
                    return this.columnSupplierSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockAddUpADateColumn {
                get {
                    return this.columnStockAddUpADate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccPayDivCdColumn {
                get {
                    return this.columnAccPayDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccPayDivCdNameColumn {
                get {
                    return this.columnAccPayDivCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteDivColumn {
                get {
                    return this.columnDebitNoteDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipNumColumn {
                get {
                    return this.columnSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierConsTaxRateColumn {
                get {
                    return this.columnSupplierConsTaxRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StcListRow this[int index] {
                get {
                    return ((StcListRow)(this.Rows[index]));
                }
            }
            
            public event StcListRowChangeEventHandler StcListRowChanging;
            
            public event StcListRowChangeEventHandler StcListRowChanged;
            
            public event StcListRowChangeEventHandler StcListRowDeleting;
            
            public event StcListRowChangeEventHandler StcListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStcListRow(StcListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StcListRow AddStcListRow(
                        bool Selection, 
                        int RowNo, 
                        int DataDiv, 
                        System.DateTime StockDate, 
                        string PartySaleSlipNum, 
                        int SupplierFormal, 
                        int SupplierSlipCd, 
                        string SupplierSlipCdName, 
                        string StockAgentName, 
                        long StockTtlPricTaxExc, 
                        double ConsumeTax, 
                        long StockPriceConsTax, 
                        string SupplierSlipNote1, 
                        string SupplierSlipNote2, 
                        string SectionCd, 
                        string SectionGuideNm, 
                        string StockInputName, 
                        int SupplierCd, 
                        string SupplierSnm, 
                        string UoeRemark1, 
                        string UoeRemark2, 
                        int SupplierSlipNo, 
                        System.DateTime StockAddUpADate, 
                        int AccPayDivCd, 
                        string AccPayDivCdName, 
                        string DebitNoteDiv, 
                        string SalesSlipNum, 
                        double SupplierConsTaxRate) {
                StcListRow rowStcListRow = ((StcListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Selection,
                        RowNo,
                        DataDiv,
                        StockDate,
                        PartySaleSlipNum,
                        SupplierFormal,
                        SupplierSlipCd,
                        SupplierSlipCdName,
                        StockAgentName,
                        StockTtlPricTaxExc,
                        ConsumeTax,
                        StockPriceConsTax,
                        SupplierSlipNote1,
                        SupplierSlipNote2,
                        SectionCd,
                        SectionGuideNm,
                        StockInputName,
                        SupplierCd,
                        SupplierSnm,
                        UoeRemark1,
                        UoeRemark2,
                        SupplierSlipNo,
                        StockAddUpADate,
                        AccPayDivCd,
                        AccPayDivCdName,
                        DebitNoteDiv,
                        SalesSlipNum,
                        SupplierConsTaxRate};
                rowStcListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStcListRow);
                return rowStcListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StcListRow FindByRowNo(int RowNo) {
                return ((StcListRow)(this.Rows.Find(new object[] {
                            RowNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StcListDataTable cln = ((StcListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StcListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSelection = base.Columns["Selection"];
                this.columnRowNo = base.Columns["RowNo"];
                this.columnDataDiv = base.Columns["DataDiv"];
                this.columnStockDate = base.Columns["StockDate"];
                this.columnPartySaleSlipNum = base.Columns["PartySaleSlipNum"];
                this.columnSupplierFormal = base.Columns["SupplierFormal"];
                this.columnSupplierSlipCd = base.Columns["SupplierSlipCd"];
                this.columnSupplierSlipCdName = base.Columns["SupplierSlipCdName"];
                this.columnStockAgentName = base.Columns["StockAgentName"];
                this.columnStockTtlPricTaxExc = base.Columns["StockTtlPricTaxExc"];
                this.columnConsumeTax = base.Columns["ConsumeTax"];
                this.columnStockPriceConsTax = base.Columns["StockPriceConsTax"];
                this.columnSupplierSlipNote1 = base.Columns["SupplierSlipNote1"];
                this.columnSupplierSlipNote2 = base.Columns["SupplierSlipNote2"];
                this.columnSectionCd = base.Columns["SectionCd"];
                this.columnSectionGuideNm = base.Columns["SectionGuideNm"];
                this.columnStockInputName = base.Columns["StockInputName"];
                this.columnSupplierCd = base.Columns["SupplierCd"];
                this.columnSupplierSnm = base.Columns["SupplierSnm"];
                this.columnUoeRemark1 = base.Columns["UoeRemark1"];
                this.columnUoeRemark2 = base.Columns["UoeRemark2"];
                this.columnSupplierSlipNo = base.Columns["SupplierSlipNo"];
                this.columnStockAddUpADate = base.Columns["StockAddUpADate"];
                this.columnAccPayDivCd = base.Columns["AccPayDivCd"];
                this.columnAccPayDivCdName = base.Columns["AccPayDivCdName"];
                this.columnDebitNoteDiv = base.Columns["DebitNoteDiv"];
                this.columnSalesSlipNum = base.Columns["SalesSlipNum"];
                this.columnSupplierConsTaxRate = base.Columns["SupplierConsTaxRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSelection = new global::System.Data.DataColumn("Selection", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelection);
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnDataDiv = new global::System.Data.DataColumn("DataDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataDiv);
                this.columnStockDate = new global::System.Data.DataColumn("StockDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockDate);
                this.columnPartySaleSlipNum = new global::System.Data.DataColumn("PartySaleSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartySaleSlipNum);
                this.columnSupplierFormal = new global::System.Data.DataColumn("SupplierFormal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierFormal);
                this.columnSupplierSlipCd = new global::System.Data.DataColumn("SupplierSlipCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipCd);
                this.columnSupplierSlipCdName = new global::System.Data.DataColumn("SupplierSlipCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipCdName);
                this.columnStockAgentName = new global::System.Data.DataColumn("StockAgentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAgentName);
                this.columnStockTtlPricTaxExc = new global::System.Data.DataColumn("StockTtlPricTaxExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockTtlPricTaxExc);
                this.columnConsumeTax = new global::System.Data.DataColumn("ConsumeTax", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumeTax);
                this.columnStockPriceConsTax = new global::System.Data.DataColumn("StockPriceConsTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockPriceConsTax);
                this.columnSupplierSlipNote1 = new global::System.Data.DataColumn("SupplierSlipNote1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNote1);
                this.columnSupplierSlipNote2 = new global::System.Data.DataColumn("SupplierSlipNote2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNote2);
                this.columnSectionCd = new global::System.Data.DataColumn("SectionCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionCd);
                this.columnSectionGuideNm = new global::System.Data.DataColumn("SectionGuideNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionGuideNm);
                this.columnStockInputName = new global::System.Data.DataColumn("StockInputName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockInputName);
                this.columnSupplierCd = new global::System.Data.DataColumn("SupplierCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCd);
                this.columnSupplierSnm = new global::System.Data.DataColumn("SupplierSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSnm);
                this.columnUoeRemark1 = new global::System.Data.DataColumn("UoeRemark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUoeRemark1);
                this.columnUoeRemark2 = new global::System.Data.DataColumn("UoeRemark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUoeRemark2);
                this.columnSupplierSlipNo = new global::System.Data.DataColumn("SupplierSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNo);
                this.columnStockAddUpADate = new global::System.Data.DataColumn("StockAddUpADate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAddUpADate);
                this.columnAccPayDivCd = new global::System.Data.DataColumn("AccPayDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccPayDivCd);
                this.columnAccPayDivCdName = new global::System.Data.DataColumn("AccPayDivCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccPayDivCdName);
                this.columnDebitNoteDiv = new global::System.Data.DataColumn("DebitNoteDiv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteDiv);
                this.columnSalesSlipNum = new global::System.Data.DataColumn("SalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipNum);
                this.columnSupplierConsTaxRate = new global::System.Data.DataColumn("SupplierConsTaxRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierConsTaxRate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, true));
                this.columnSelection.Caption = "選択";
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "行番号";
                this.columnDataDiv.Caption = "データ区分";
                this.columnStockDate.Caption = "伝票日付";
                this.columnPartySaleSlipNum.Caption = "伝票番号";
                this.columnSupplierFormal.Caption = "仕入形式";
                this.columnSupplierSlipCd.Caption = "仕入伝票区分";
                this.columnSupplierSlipCdName.Caption = "仕入伝票区分名";
                this.columnStockAgentName.Caption = "担当者名";
                this.columnStockTtlPricTaxExc.Caption = "金額";
                this.columnConsumeTax.Caption = "消費税額";
                this.columnStockPriceConsTax.Caption = "仕入金額消費税額";
                this.columnSupplierSlipNote1.Caption = "備考１";
                this.columnSupplierSlipNote2.Caption = "備考２";
                this.columnSectionCd.Caption = "拠点コード";
                this.columnSectionGuideNm.Caption = "拠点";
                this.columnStockInputName.Caption = "発行者";
                this.columnSupplierCd.Caption = "仕入先コード";
                this.columnSupplierSnm.Caption = "仕入先名";
                this.columnUoeRemark1.Caption = "ＵＯＥリマーク１";
                this.columnUoeRemark2.Caption = "ＵＯＥリマーク２";
                this.columnSupplierSlipNo.Caption = "仕入SEQ/支払No";
                this.columnStockAddUpADate.Caption = "計上日";
                this.columnAccPayDivCd.Caption = "買掛区分";
                this.columnAccPayDivCdName.Caption = "買掛区分名";
                this.columnDebitNoteDiv.Caption = "赤伝区分";
                this.columnSalesSlipNum.Caption = "同時売上番号";
                this.columnSupplierConsTaxRate.Caption = "消費税率";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StcListRow NewStcListRow() {
                return ((StcListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StcListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StcListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StcListRowChanged != null)) {
                    this.StcListRowChanged(this, new StcListRowChangeEvent(((StcListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StcListRowChanging != null)) {
                    this.StcListRowChanging(this, new StcListRowChangeEvent(((StcListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StcListRowDeleted != null)) {
                    this.StcListRowDeleted(this, new StcListRowChangeEvent(((StcListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StcListRowDeleting != null)) {
                    this.StcListRowDeleting(this, new StcListRowChangeEvent(((StcListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStcListRow(StcListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuppPtrStcDetailDataSet ds = new SuppPtrStcDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StcListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BalanceListDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnAddUpDate;
            
            private global::System.Data.DataColumn columnLastTimeBlc;
            
            private global::System.Data.DataColumn columnThisTimePayNrml;
            
            private global::System.Data.DataColumn columnThisTimeTtlBlc;
            
            private global::System.Data.DataColumn columnThisTimeStockPrice;
            
            private global::System.Data.DataColumn columnThisStckPricRgdsDis;
            
            private global::System.Data.DataColumn columnOfsThisTimeStock;
            
            private global::System.Data.DataColumn columnOfsThisStockTax;
            
            private global::System.Data.DataColumn columnThisStckPricTotal;
            
            private global::System.Data.DataColumn columnStckTtlPayBlc;
            
            private global::System.Data.DataColumn columnStockSlipCount;
            
            private global::System.Data.DataColumn columnSectionCode;
            
            private global::System.Data.DataColumn columnSupplierCode;
            
            private global::System.Data.DataColumn columnSupplierName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceListDataTable() {
                this.TableName = "BalanceList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BalanceListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BalanceListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddUpDateColumn {
                get {
                    return this.columnAddUpDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastTimeBlcColumn {
                get {
                    return this.columnLastTimeBlc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisTimePayNrmlColumn {
                get {
                    return this.columnThisTimePayNrml;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisTimeTtlBlcColumn {
                get {
                    return this.columnThisTimeTtlBlc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisTimeStockPriceColumn {
                get {
                    return this.columnThisTimeStockPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisStckPricRgdsDisColumn {
                get {
                    return this.columnThisStckPricRgdsDis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfsThisTimeStockColumn {
                get {
                    return this.columnOfsThisTimeStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfsThisStockTaxColumn {
                get {
                    return this.columnOfsThisStockTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisStckPricTotalColumn {
                get {
                    return this.columnThisStckPricTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StckTtlPayBlcColumn {
                get {
                    return this.columnStckTtlPayBlc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockSlipCountColumn {
                get {
                    return this.columnStockSlipCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionCodeColumn {
                get {
                    return this.columnSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCodeColumn {
                get {
                    return this.columnSupplierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierNameColumn {
                get {
                    return this.columnSupplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceListRow this[int index] {
                get {
                    return ((BalanceListRow)(this.Rows[index]));
                }
            }
            
            public event BalanceListRowChangeEventHandler BalanceListRowChanging;
            
            public event BalanceListRowChangeEventHandler BalanceListRowChanged;
            
            public event BalanceListRowChangeEventHandler BalanceListRowDeleting;
            
            public event BalanceListRowChangeEventHandler BalanceListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBalanceListRow(BalanceListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceListRow AddBalanceListRow(int RowNo, System.DateTime AddUpDate, long LastTimeBlc, long ThisTimePayNrml, long ThisTimeTtlBlc, long ThisTimeStockPrice, long ThisStckPricRgdsDis, long OfsThisTimeStock, long OfsThisStockTax, long ThisStckPricTotal, long StckTtlPayBlc, int StockSlipCount, string SectionCode, long SupplierCode, string SupplierName) {
                BalanceListRow rowBalanceListRow = ((BalanceListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowNo,
                        AddUpDate,
                        LastTimeBlc,
                        ThisTimePayNrml,
                        ThisTimeTtlBlc,
                        ThisTimeStockPrice,
                        ThisStckPricRgdsDis,
                        OfsThisTimeStock,
                        OfsThisStockTax,
                        ThisStckPricTotal,
                        StckTtlPayBlc,
                        StockSlipCount,
                        SectionCode,
                        SupplierCode,
                        SupplierName};
                rowBalanceListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBalanceListRow);
                return rowBalanceListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceListRow FindByRowNo(int RowNo) {
                return ((BalanceListRow)(this.Rows.Find(new object[] {
                            RowNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BalanceListDataTable cln = ((BalanceListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BalanceListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowNo = base.Columns["RowNo"];
                this.columnAddUpDate = base.Columns["AddUpDate"];
                this.columnLastTimeBlc = base.Columns["LastTimeBlc"];
                this.columnThisTimePayNrml = base.Columns["ThisTimePayNrml"];
                this.columnThisTimeTtlBlc = base.Columns["ThisTimeTtlBlc"];
                this.columnThisTimeStockPrice = base.Columns["ThisTimeStockPrice"];
                this.columnThisStckPricRgdsDis = base.Columns["ThisStckPricRgdsDis"];
                this.columnOfsThisTimeStock = base.Columns["OfsThisTimeStock"];
                this.columnOfsThisStockTax = base.Columns["OfsThisStockTax"];
                this.columnThisStckPricTotal = base.Columns["ThisStckPricTotal"];
                this.columnStckTtlPayBlc = base.Columns["StckTtlPayBlc"];
                this.columnStockSlipCount = base.Columns["StockSlipCount"];
                this.columnSectionCode = base.Columns["SectionCode"];
                this.columnSupplierCode = base.Columns["SupplierCode"];
                this.columnSupplierName = base.Columns["SupplierName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnAddUpDate = new global::System.Data.DataColumn("AddUpDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddUpDate);
                this.columnLastTimeBlc = new global::System.Data.DataColumn("LastTimeBlc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTimeBlc);
                this.columnThisTimePayNrml = new global::System.Data.DataColumn("ThisTimePayNrml", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisTimePayNrml);
                this.columnThisTimeTtlBlc = new global::System.Data.DataColumn("ThisTimeTtlBlc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisTimeTtlBlc);
                this.columnThisTimeStockPrice = new global::System.Data.DataColumn("ThisTimeStockPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisTimeStockPrice);
                this.columnThisStckPricRgdsDis = new global::System.Data.DataColumn("ThisStckPricRgdsDis", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisStckPricRgdsDis);
                this.columnOfsThisTimeStock = new global::System.Data.DataColumn("OfsThisTimeStock", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfsThisTimeStock);
                this.columnOfsThisStockTax = new global::System.Data.DataColumn("OfsThisStockTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfsThisStockTax);
                this.columnThisStckPricTotal = new global::System.Data.DataColumn("ThisStckPricTotal", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisStckPricTotal);
                this.columnStckTtlPayBlc = new global::System.Data.DataColumn("StckTtlPayBlc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStckTtlPayBlc);
                this.columnStockSlipCount = new global::System.Data.DataColumn("StockSlipCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSlipCount);
                this.columnSectionCode = new global::System.Data.DataColumn("SectionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionCode);
                this.columnSupplierCode = new global::System.Data.DataColumn("SupplierCode", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCode);
                this.columnSupplierName = new global::System.Data.DataColumn("SupplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, true));
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "行番号";
                this.columnAddUpDate.Caption = "計上日";
                this.columnLastTimeBlc.Caption = "前回残高";
                this.columnThisTimePayNrml.Caption = "今回支払額";
                this.columnThisTimeTtlBlc.Caption = "繰越残高";
                this.columnThisTimeStockPrice.Caption = "今回仕入";
                this.columnThisStckPricRgdsDis.Caption = "返品値引";
                this.columnOfsThisTimeStock.Caption = "純仕入額";
                this.columnOfsThisStockTax.Caption = "消費税";
                this.columnThisStckPricTotal.Caption = "今回合計";
                this.columnStckTtlPayBlc.Caption = "今回残高";
                this.columnStockSlipCount.Caption = "伝票枚数";
                this.columnSectionCode.Caption = "拠点コード";
                this.columnSupplierCode.Caption = "仕入先コード";
                this.columnSupplierName.Caption = "仕入先名";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceListRow NewBalanceListRow() {
                return ((BalanceListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BalanceListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BalanceListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BalanceListRowChanged != null)) {
                    this.BalanceListRowChanged(this, new BalanceListRowChangeEvent(((BalanceListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BalanceListRowChanging != null)) {
                    this.BalanceListRowChanging(this, new BalanceListRowChangeEvent(((BalanceListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BalanceListRowDeleted != null)) {
                    this.BalanceListRowDeleted(this, new BalanceListRowChangeEvent(((BalanceListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BalanceListRowDeleting != null)) {
                    this.BalanceListRowDeleting(this, new BalanceListRowChangeEvent(((BalanceListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBalanceListRow(BalanceListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuppPtrStcDetailDataSet ds = new SuppPtrStcDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BalanceListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BalanceTotalDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnStockTtl2TmBfBlPay;
            
            private global::System.Data.DataColumn columnLastTimePayment;
            
            private global::System.Data.DataColumn columnStockTotalPayBalance;
            
            private global::System.Data.DataColumn columnAddUpYearMonth;
            
            private global::System.Data.DataColumn columnSuppCTaxationCd;
            
            private global::System.Data.DataColumn columnThisStockPriceTotal;
            
            private global::System.Data.DataColumn columnOfsThisStockTax;
            
            private global::System.Data.DataColumn columnThisTimePayNrml;
            
            private global::System.Data.DataColumn columnPaymentRemain;
            
            private global::System.Data.DataColumn columnStandardPrice_Total;
            
            private global::System.Data.DataColumn columnStandardPrice_Avg;
            
            private global::System.Data.DataColumn columnStockAmount_Total;
            
            private global::System.Data.DataColumn columnStockAmount_Avg;
            
            private global::System.Data.DataColumn columnSlipCount;
            
            private global::System.Data.DataColumn columnDetailCount;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnConsumeTaxAmount;
            
            private global::System.Data.DataColumn columnExistsTotal;
            
            private global::System.Data.DataColumn columnTotalDay;
            
            private global::System.Data.DataColumn columnDmdStDay;
            
            private global::System.Data.DataColumn columnIsParent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceTotalDataTable() {
                this.TableName = "BalanceTotal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BalanceTotalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BalanceTotalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockTtl2TmBfBlPayColumn {
                get {
                    return this.columnStockTtl2TmBfBlPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastTimePaymentColumn {
                get {
                    return this.columnLastTimePayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockTotalPayBalanceColumn {
                get {
                    return this.columnStockTotalPayBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddUpYearMonthColumn {
                get {
                    return this.columnAddUpYearMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppCTaxationCdColumn {
                get {
                    return this.columnSuppCTaxationCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisStockPriceTotalColumn {
                get {
                    return this.columnThisStockPriceTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfsThisStockTaxColumn {
                get {
                    return this.columnOfsThisStockTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThisTimePayNrmlColumn {
                get {
                    return this.columnThisTimePayNrml;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentRemainColumn {
                get {
                    return this.columnPaymentRemain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardPrice_TotalColumn {
                get {
                    return this.columnStandardPrice_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardPrice_AvgColumn {
                get {
                    return this.columnStandardPrice_Avg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockAmount_TotalColumn {
                get {
                    return this.columnStockAmount_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockAmount_AvgColumn {
                get {
                    return this.columnStockAmount_Avg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipCountColumn {
                get {
                    return this.columnSlipCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailCountColumn {
                get {
                    return this.columnDetailCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsumeTaxAmountColumn {
                get {
                    return this.columnConsumeTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExistsTotalColumn {
                get {
                    return this.columnExistsTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalDayColumn {
                get {
                    return this.columnTotalDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DmdStDayColumn {
                get {
                    return this.columnDmdStDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsParentColumn {
                get {
                    return this.columnIsParent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceTotalRow this[int index] {
                get {
                    return ((BalanceTotalRow)(this.Rows[index]));
                }
            }
            
            public event BalanceTotalRowChangeEventHandler BalanceTotalRowChanging;
            
            public event BalanceTotalRowChangeEventHandler BalanceTotalRowChanged;
            
            public event BalanceTotalRowChangeEventHandler BalanceTotalRowDeleting;
            
            public event BalanceTotalRowChangeEventHandler BalanceTotalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBalanceTotalRow(BalanceTotalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceTotalRow AddBalanceTotalRow(
                        long StockTtl2TmBfBlPay, 
                        long LastTimePayment, 
                        long StockTotalPayBalance, 
                        System.DateTime AddUpYearMonth, 
                        int SuppCTaxationCd, 
                        long ThisStockPriceTotal, 
                        long OfsThisStockTax, 
                        long ThisTimePayNrml, 
                        long PaymentRemain, 
                        double StandardPrice_Total, 
                        double StandardPrice_Avg, 
                        double StockAmount_Total, 
                        double StockAmount_Avg, 
                        int SlipCount, 
                        double DetailCount, 
                        double Amount, 
                        double ConsumeTaxAmount, 
                        bool ExistsTotal, 
                        System.DateTime TotalDay, 
                        System.DateTime DmdStDay, 
                        bool IsParent) {
                BalanceTotalRow rowBalanceTotalRow = ((BalanceTotalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StockTtl2TmBfBlPay,
                        LastTimePayment,
                        StockTotalPayBalance,
                        AddUpYearMonth,
                        SuppCTaxationCd,
                        ThisStockPriceTotal,
                        OfsThisStockTax,
                        ThisTimePayNrml,
                        PaymentRemain,
                        StandardPrice_Total,
                        StandardPrice_Avg,
                        StockAmount_Total,
                        StockAmount_Avg,
                        SlipCount,
                        DetailCount,
                        Amount,
                        ConsumeTaxAmount,
                        ExistsTotal,
                        TotalDay,
                        DmdStDay,
                        IsParent};
                rowBalanceTotalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBalanceTotalRow);
                return rowBalanceTotalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BalanceTotalDataTable cln = ((BalanceTotalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BalanceTotalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStockTtl2TmBfBlPay = base.Columns["StockTtl2TmBfBlPay"];
                this.columnLastTimePayment = base.Columns["LastTimePayment"];
                this.columnStockTotalPayBalance = base.Columns["StockTotalPayBalance"];
                this.columnAddUpYearMonth = base.Columns["AddUpYearMonth"];
                this.columnSuppCTaxationCd = base.Columns["SuppCTaxationCd"];
                this.columnThisStockPriceTotal = base.Columns["ThisStockPriceTotal"];
                this.columnOfsThisStockTax = base.Columns["OfsThisStockTax"];
                this.columnThisTimePayNrml = base.Columns["ThisTimePayNrml"];
                this.columnPaymentRemain = base.Columns["PaymentRemain"];
                this.columnStandardPrice_Total = base.Columns["StandardPrice_Total"];
                this.columnStandardPrice_Avg = base.Columns["StandardPrice_Avg"];
                this.columnStockAmount_Total = base.Columns["StockAmount_Total"];
                this.columnStockAmount_Avg = base.Columns["StockAmount_Avg"];
                this.columnSlipCount = base.Columns["SlipCount"];
                this.columnDetailCount = base.Columns["DetailCount"];
                this.columnAmount = base.Columns["Amount"];
                this.columnConsumeTaxAmount = base.Columns["ConsumeTaxAmount"];
                this.columnExistsTotal = base.Columns["ExistsTotal"];
                this.columnTotalDay = base.Columns["TotalDay"];
                this.columnDmdStDay = base.Columns["DmdStDay"];
                this.columnIsParent = base.Columns["IsParent"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStockTtl2TmBfBlPay = new global::System.Data.DataColumn("StockTtl2TmBfBlPay", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockTtl2TmBfBlPay);
                this.columnLastTimePayment = new global::System.Data.DataColumn("LastTimePayment", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTimePayment);
                this.columnStockTotalPayBalance = new global::System.Data.DataColumn("StockTotalPayBalance", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockTotalPayBalance);
                this.columnAddUpYearMonth = new global::System.Data.DataColumn("AddUpYearMonth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddUpYearMonth);
                this.columnSuppCTaxationCd = new global::System.Data.DataColumn("SuppCTaxationCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppCTaxationCd);
                this.columnThisStockPriceTotal = new global::System.Data.DataColumn("ThisStockPriceTotal", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisStockPriceTotal);
                this.columnOfsThisStockTax = new global::System.Data.DataColumn("OfsThisStockTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfsThisStockTax);
                this.columnThisTimePayNrml = new global::System.Data.DataColumn("ThisTimePayNrml", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThisTimePayNrml);
                this.columnPaymentRemain = new global::System.Data.DataColumn("PaymentRemain", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentRemain);
                this.columnStandardPrice_Total = new global::System.Data.DataColumn("StandardPrice_Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardPrice_Total);
                this.columnStandardPrice_Avg = new global::System.Data.DataColumn("StandardPrice_Avg", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardPrice_Avg);
                this.columnStockAmount_Total = new global::System.Data.DataColumn("StockAmount_Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAmount_Total);
                this.columnStockAmount_Avg = new global::System.Data.DataColumn("StockAmount_Avg", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAmount_Avg);
                this.columnSlipCount = new global::System.Data.DataColumn("SlipCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipCount);
                this.columnDetailCount = new global::System.Data.DataColumn("DetailCount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailCount);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnConsumeTaxAmount = new global::System.Data.DataColumn("ConsumeTaxAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumeTaxAmount);
                this.columnExistsTotal = new global::System.Data.DataColumn("ExistsTotal", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExistsTotal);
                this.columnTotalDay = new global::System.Data.DataColumn("TotalDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDay);
                this.columnDmdStDay = new global::System.Data.DataColumn("DmdStDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDmdStDay);
                this.columnIsParent = new global::System.Data.DataColumn("IsParent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsParent);
                this.columnStockTtl2TmBfBlPay.Caption = "前々々回残高";
                this.columnLastTimePayment.Caption = "前々回残高";
                this.columnStockTotalPayBalance.Caption = "前回残高";
                this.columnAddUpYearMonth.Caption = "請求範囲";
                this.columnSuppCTaxationCd.Caption = "消費税転嫁方式";
                this.columnThisStockPriceTotal.Caption = "今回仕入";
                this.columnOfsThisStockTax.Caption = "消費税";
                this.columnThisTimePayNrml.Caption = "今回支払";
                this.columnPaymentRemain.Caption = "支払残高";
                this.columnStandardPrice_Total.Caption = "標準価格合計";
                this.columnStandardPrice_Avg.Caption = "標準価格平均";
                this.columnStockAmount_Total.Caption = "仕入金額合計";
                this.columnStockAmount_Avg.Caption = "仕入金額平均";
                this.columnSlipCount.Caption = "伝票枚数";
                this.columnDetailCount.Caption = "明細数";
                this.columnAmount.Caption = "数量";
                this.columnConsumeTaxAmount.Caption = "消費税";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceTotalRow NewBalanceTotalRow() {
                return ((BalanceTotalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BalanceTotalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BalanceTotalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BalanceTotalRowChanged != null)) {
                    this.BalanceTotalRowChanged(this, new BalanceTotalRowChangeEvent(((BalanceTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BalanceTotalRowChanging != null)) {
                    this.BalanceTotalRowChanging(this, new BalanceTotalRowChangeEvent(((BalanceTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BalanceTotalRowDeleted != null)) {
                    this.BalanceTotalRowDeleted(this, new BalanceTotalRowChangeEvent(((BalanceTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BalanceTotalRowDeleting != null)) {
                    this.BalanceTotalRowDeleting(this, new BalanceTotalRowChangeEvent(((BalanceTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBalanceTotalRow(BalanceTotalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuppPtrStcDetailDataSet ds = new SuppPtrStcDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BalanceTotalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RedSlipDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnShipmentCnt;
            
            private global::System.Data.DataColumn columnRetGdsSlipNum;
            
            private global::System.Data.DataColumn columnReturnCnt;
            
            private global::System.Data.DataColumn columnStockUnitPrice;
            
            private global::System.Data.DataColumn columnSalesSlipNum;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            private global::System.Data.DataColumn columnWarehouseName;
            
            private global::System.Data.DataColumn columnShelfNo;
            
            private global::System.Data.DataColumn columnReturnedAfterCnt;
            
            private global::System.Data.DataColumn columnStockRowNo;
            
            private global::System.Data.DataColumn columnSupplierSlipNo;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnStockSlipCdDtlInt;
            
            private global::System.Data.DataColumn columnPartySaleSlipNum;
            
            private global::System.Data.DataColumn columnDetailLogicalDelCd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RedSlipDetailDataTable() {
                this.TableName = "RedSlipDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RedSlipDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RedSlipDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentCntColumn {
                get {
                    return this.columnShipmentCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RetGdsSlipNumColumn {
                get {
                    return this.columnRetGdsSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnCntColumn {
                get {
                    return this.columnReturnCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockUnitPriceColumn {
                get {
                    return this.columnStockUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipNumColumn {
                get {
                    return this.columnSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseNameColumn {
                get {
                    return this.columnWarehouseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShelfNoColumn {
                get {
                    return this.columnShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnedAfterCntColumn {
                get {
                    return this.columnReturnedAfterCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockRowNoColumn {
                get {
                    return this.columnStockRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNoColumn {
                get {
                    return this.columnSupplierSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockSlipCdDtlIntColumn {
                get {
                    return this.columnStockSlipCdDtlInt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartySaleSlipNumColumn {
                get {
                    return this.columnPartySaleSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailLogicalDelCdColumn {
                get {
                    return this.columnDetailLogicalDelCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RedSlipDetailRow this[int index] {
                get {
                    return ((RedSlipDetailRow)(this.Rows[index]));
                }
            }
            
            public event RedSlipDetailRowChangeEventHandler RedSlipDetailRowChanging;
            
            public event RedSlipDetailRowChangeEventHandler RedSlipDetailRowChanged;
            
            public event RedSlipDetailRowChangeEventHandler RedSlipDetailRowDeleting;
            
            public event RedSlipDetailRowChangeEventHandler RedSlipDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRedSlipDetailRow(RedSlipDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RedSlipDetailRow AddRedSlipDetailRow(
                        int RowNo, 
                        string GoodsName, 
                        string GoodsNo, 
                        double ShipmentCnt, 
                        string RetGdsSlipNum, 
                        double ReturnCnt, 
                        double StockUnitPrice, 
                        string SalesSlipNum, 
                        int CustomerCode, 
                        string WarehouseCode, 
                        string WarehouseName, 
                        string ShelfNo, 
                        double ReturnedAfterCnt, 
                        int StockRowNo, 
                        int SupplierSlipNo, 
                        string GoodsMakerCd, 
                        int StockSlipCdDtlInt, 
                        string PartySaleSlipNum, 
                        int DetailLogicalDelCd) {
                RedSlipDetailRow rowRedSlipDetailRow = ((RedSlipDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowNo,
                        GoodsName,
                        GoodsNo,
                        ShipmentCnt,
                        RetGdsSlipNum,
                        ReturnCnt,
                        StockUnitPrice,
                        SalesSlipNum,
                        CustomerCode,
                        WarehouseCode,
                        WarehouseName,
                        ShelfNo,
                        ReturnedAfterCnt,
                        StockRowNo,
                        SupplierSlipNo,
                        GoodsMakerCd,
                        StockSlipCdDtlInt,
                        PartySaleSlipNum,
                        DetailLogicalDelCd};
                rowRedSlipDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRedSlipDetailRow);
                return rowRedSlipDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RedSlipDetailRow FindByRowNo(int RowNo) {
                return ((RedSlipDetailRow)(this.Rows.Find(new object[] {
                            RowNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RedSlipDetailDataTable cln = ((RedSlipDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RedSlipDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowNo = base.Columns["RowNo"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnShipmentCnt = base.Columns["ShipmentCnt"];
                this.columnRetGdsSlipNum = base.Columns["RetGdsSlipNum"];
                this.columnReturnCnt = base.Columns["ReturnCnt"];
                this.columnStockUnitPrice = base.Columns["StockUnitPrice"];
                this.columnSalesSlipNum = base.Columns["SalesSlipNum"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnWarehouseName = base.Columns["WarehouseName"];
                this.columnShelfNo = base.Columns["ShelfNo"];
                this.columnReturnedAfterCnt = base.Columns["ReturnedAfterCnt"];
                this.columnStockRowNo = base.Columns["StockRowNo"];
                this.columnSupplierSlipNo = base.Columns["SupplierSlipNo"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnStockSlipCdDtlInt = base.Columns["StockSlipCdDtlInt"];
                this.columnPartySaleSlipNum = base.Columns["PartySaleSlipNum"];
                this.columnDetailLogicalDelCd = base.Columns["DetailLogicalDelCd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnShipmentCnt = new global::System.Data.DataColumn("ShipmentCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentCnt);
                this.columnRetGdsSlipNum = new global::System.Data.DataColumn("RetGdsSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetGdsSlipNum);
                this.columnReturnCnt = new global::System.Data.DataColumn("ReturnCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnCnt);
                this.columnStockUnitPrice = new global::System.Data.DataColumn("StockUnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockUnitPrice);
                this.columnSalesSlipNum = new global::System.Data.DataColumn("SalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipNum);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnWarehouseName = new global::System.Data.DataColumn("WarehouseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseName);
                this.columnShelfNo = new global::System.Data.DataColumn("ShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShelfNo);
                this.columnReturnedAfterCnt = new global::System.Data.DataColumn("ReturnedAfterCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnedAfterCnt);
                this.columnStockRowNo = new global::System.Data.DataColumn("StockRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockRowNo);
                this.columnSupplierSlipNo = new global::System.Data.DataColumn("SupplierSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNo);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnStockSlipCdDtlInt = new global::System.Data.DataColumn("StockSlipCdDtlInt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSlipCdDtlInt);
                this.columnPartySaleSlipNum = new global::System.Data.DataColumn("PartySaleSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartySaleSlipNum);
                this.columnDetailLogicalDelCd = new global::System.Data.DataColumn("DetailLogicalDelCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailLogicalDelCd);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, true));
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "行番号";
                this.columnGoodsName.Caption = "品名";
                this.columnGoodsNo.Caption = "品番";
                this.columnShipmentCnt.Caption = "可能数";
                this.columnRetGdsSlipNum.Caption = "返品伝票番号";
                this.columnReturnCnt.Caption = "返品数";
                this.columnStockUnitPrice.Caption = "原価";
                this.columnSalesSlipNum.Caption = "売上伝票番号";
                this.columnCustomerCode.Caption = "得意先コード";
                this.columnWarehouseCode.Caption = "倉庫コード";
                this.columnWarehouseName.Caption = "倉庫";
                this.columnShelfNo.Caption = "棚番";
                this.columnReturnedAfterCnt.Caption = "返品後数";
                this.columnStockRowNo.Caption = "行No(明細)";
                this.columnSupplierSlipNo.Caption = "仕入伝票番号(明細)";
                this.columnGoodsMakerCd.Caption = "メーカーコード";
                this.columnStockSlipCdDtlInt.Caption = "仕入伝票区分（明細）";
                this.columnPartySaleSlipNum.Caption = "相手先伝票番号";
                this.columnDetailLogicalDelCd.Caption = "明細論理削除区分";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RedSlipDetailRow NewRedSlipDetailRow() {
                return ((RedSlipDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RedSlipDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RedSlipDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RedSlipDetailRowChanged != null)) {
                    this.RedSlipDetailRowChanged(this, new RedSlipDetailRowChangeEvent(((RedSlipDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RedSlipDetailRowChanging != null)) {
                    this.RedSlipDetailRowChanging(this, new RedSlipDetailRowChangeEvent(((RedSlipDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RedSlipDetailRowDeleted != null)) {
                    this.RedSlipDetailRowDeleted(this, new RedSlipDetailRowChangeEvent(((RedSlipDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RedSlipDetailRowDeleting != null)) {
                    this.RedSlipDetailRowDeleting(this, new RedSlipDetailRowChangeEvent(((RedSlipDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRedSlipDetailRow(RedSlipDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuppPtrStcDetailDataSet ds = new SuppPtrStcDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RedSlipDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RetGdsStcDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnSupplierSlipNo;
            
            private global::System.Data.DataColumn columnStockRowNo;
            
            private global::System.Data.DataColumn columnAcceptAnOrderNo;
            
            private global::System.Data.DataColumn columnCommonSeqNo;
            
            private global::System.Data.DataColumn columnStockSlipDtlNum;
            
            private global::System.Data.DataColumn columnSupplierFormalSrc;
            
            private global::System.Data.DataColumn columnStockSlipDtlNumSrc;
            
            private global::System.Data.DataColumn columnAcptAnOdrStatusSync;
            
            private global::System.Data.DataColumn columnSalesSlipDtlNumSync;
            
            private global::System.Data.DataColumn columnSubSectionCode;
            
            private global::System.Data.DataColumn columnStockInputCode;
            
            private global::System.Data.DataColumn columnStockAgentCode;
            
            private global::System.Data.DataColumn columnGoodsKindCode;
            
            private global::System.Data.DataColumn columnMakerKanaName;
            
            private global::System.Data.DataColumn columnCmpltMakerKanaName;
            
            private global::System.Data.DataColumn columnGoodsNameKana;
            
            private global::System.Data.DataColumn columnGoodsLGroup;
            
            private global::System.Data.DataColumn columnGoodsLGroupName;
            
            private global::System.Data.DataColumn columnGoodsMGroup;
            
            private global::System.Data.DataColumn columnGoodsMGroupName;
            
            private global::System.Data.DataColumn columnBLGroupName;
            
            private global::System.Data.DataColumn columnBLGoodsFullName;
            
            private global::System.Data.DataColumn columnEnterpriseGanreCode;
            
            private global::System.Data.DataColumn columnEnterpriseGanreName;
            
            private global::System.Data.DataColumn columnGoodsRateRank;
            
            private global::System.Data.DataColumn columnCustRateGrpCode;
            
            private global::System.Data.DataColumn columnSuppRateGrpCode;
            
            private global::System.Data.DataColumn columnListPriceTaxIncFl;
            
            private global::System.Data.DataColumn columnStockRate;
            
            private global::System.Data.DataColumn columnRateSectStckUnPrc;
            
            private global::System.Data.DataColumn columnRateDivStckUnPrc;
            
            private global::System.Data.DataColumn columnUnPrcCalcCdStckUnPrc;
            
            private global::System.Data.DataColumn columnPriceCdStckUnPrc;
            
            private global::System.Data.DataColumn columnStdUnPrcStckUnPrc;
            
            private global::System.Data.DataColumn columnFracProcUnitStcUnPrc;
            
            private global::System.Data.DataColumn columnFracProcStckUnPrc;
            
            private global::System.Data.DataColumn columnStockUnitTaxPriceFl;
            
            private global::System.Data.DataColumn columnStockUnitChngDiv;
            
            private global::System.Data.DataColumn columnRateBLGoodsCode;
            
            private global::System.Data.DataColumn columnRateBLGoodsName;
            
            private global::System.Data.DataColumn columnRateGoodsRateGrpCd;
            
            private global::System.Data.DataColumn columnRateGoodsRateGrpNm;
            
            private global::System.Data.DataColumn columnRateBLGroupCode;
            
            private global::System.Data.DataColumn columnRateBLGroupName;
            
            private global::System.Data.DataColumn columnOrderCnt;
            
            private global::System.Data.DataColumn columnOrderAdjustCnt;
            
            private global::System.Data.DataColumn columnOrderRemainCnt;
            
            private global::System.Data.DataColumn columnRemainCntUpdDate;
            
            private global::System.Data.DataColumn columnStockPriceTaxExc;
            
            private global::System.Data.DataColumn columnStockPriceTaxInc;
            
            private global::System.Data.DataColumn columnStockGoodsCd;
            
            private global::System.Data.DataColumn columnTaxationCode;
            
            private global::System.Data.DataColumn columnStockDtiSlipNote1;
            
            private global::System.Data.DataColumn columnSalesCustomerCode;
            
            private global::System.Data.DataColumn columnSalesCustomerSnm;
            
            private global::System.Data.DataColumn columnSlipMemo1;
            
            private global::System.Data.DataColumn columnSlipMemo2;
            
            private global::System.Data.DataColumn columnSlipMemo3;
            
            private global::System.Data.DataColumn columnInsideMemo1;
            
            private global::System.Data.DataColumn columnInsideMemo2;
            
            private global::System.Data.DataColumn columnInsideMemo3;
            
            private global::System.Data.DataColumn columnAddresseeCode;
            
            private global::System.Data.DataColumn columnAddresseeName;
            
            private global::System.Data.DataColumn columnDirectSendingCd;
            
            private global::System.Data.DataColumn columnOrderNumber;
            
            private global::System.Data.DataColumn columnWayToOrder;
            
            private global::System.Data.DataColumn columnDeliGdsCmpltDueDate;
            
            private global::System.Data.DataColumn columnExpectDeliveryDate;
            
            private global::System.Data.DataColumn columnOrderDataCreateDiv;
            
            private global::System.Data.DataColumn columnOrderDataCreateDate;
            
            private global::System.Data.DataColumn columnOrderFormIssuedDiv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetGdsStcDetailDataTable() {
                this.TableName = "RetGdsStcDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RetGdsStcDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RetGdsStcDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNoColumn {
                get {
                    return this.columnSupplierSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockRowNoColumn {
                get {
                    return this.columnStockRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcceptAnOrderNoColumn {
                get {
                    return this.columnAcceptAnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommonSeqNoColumn {
                get {
                    return this.columnCommonSeqNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockSlipDtlNumColumn {
                get {
                    return this.columnStockSlipDtlNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierFormalSrcColumn {
                get {
                    return this.columnSupplierFormalSrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockSlipDtlNumSrcColumn {
                get {
                    return this.columnStockSlipDtlNumSrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcptAnOdrStatusSyncColumn {
                get {
                    return this.columnAcptAnOdrStatusSync;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipDtlNumSyncColumn {
                get {
                    return this.columnSalesSlipDtlNumSync;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubSectionCodeColumn {
                get {
                    return this.columnSubSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockInputCodeColumn {
                get {
                    return this.columnStockInputCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockAgentCodeColumn {
                get {
                    return this.columnStockAgentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsKindCodeColumn {
                get {
                    return this.columnGoodsKindCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerKanaNameColumn {
                get {
                    return this.columnMakerKanaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CmpltMakerKanaNameColumn {
                get {
                    return this.columnCmpltMakerKanaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameKanaColumn {
                get {
                    return this.columnGoodsNameKana;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsLGroupColumn {
                get {
                    return this.columnGoodsLGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsLGroupNameColumn {
                get {
                    return this.columnGoodsLGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMGroupColumn {
                get {
                    return this.columnGoodsMGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMGroupNameColumn {
                get {
                    return this.columnGoodsMGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGroupNameColumn {
                get {
                    return this.columnBLGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGoodsFullNameColumn {
                get {
                    return this.columnBLGoodsFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterpriseGanreCodeColumn {
                get {
                    return this.columnEnterpriseGanreCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterpriseGanreNameColumn {
                get {
                    return this.columnEnterpriseGanreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsRateRankColumn {
                get {
                    return this.columnGoodsRateRank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustRateGrpCodeColumn {
                get {
                    return this.columnCustRateGrpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppRateGrpCodeColumn {
                get {
                    return this.columnSuppRateGrpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceTaxIncFlColumn {
                get {
                    return this.columnListPriceTaxIncFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockRateColumn {
                get {
                    return this.columnStockRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateSectStckUnPrcColumn {
                get {
                    return this.columnRateSectStckUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateDivStckUnPrcColumn {
                get {
                    return this.columnRateDivStckUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnPrcCalcCdStckUnPrcColumn {
                get {
                    return this.columnUnPrcCalcCdStckUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceCdStckUnPrcColumn {
                get {
                    return this.columnPriceCdStckUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StdUnPrcStckUnPrcColumn {
                get {
                    return this.columnStdUnPrcStckUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FracProcUnitStcUnPrcColumn {
                get {
                    return this.columnFracProcUnitStcUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FracProcStckUnPrcColumn {
                get {
                    return this.columnFracProcStckUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockUnitTaxPriceFlColumn {
                get {
                    return this.columnStockUnitTaxPriceFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockUnitChngDivColumn {
                get {
                    return this.columnStockUnitChngDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateBLGoodsCodeColumn {
                get {
                    return this.columnRateBLGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateBLGoodsNameColumn {
                get {
                    return this.columnRateBLGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateGoodsRateGrpCdColumn {
                get {
                    return this.columnRateGoodsRateGrpCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateGoodsRateGrpNmColumn {
                get {
                    return this.columnRateGoodsRateGrpNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateBLGroupCodeColumn {
                get {
                    return this.columnRateBLGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateBLGroupNameColumn {
                get {
                    return this.columnRateBLGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderCntColumn {
                get {
                    return this.columnOrderCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderAdjustCntColumn {
                get {
                    return this.columnOrderAdjustCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderRemainCntColumn {
                get {
                    return this.columnOrderRemainCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemainCntUpdDateColumn {
                get {
                    return this.columnRemainCntUpdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockPriceTaxExcColumn {
                get {
                    return this.columnStockPriceTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockPriceTaxIncColumn {
                get {
                    return this.columnStockPriceTaxInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockGoodsCdColumn {
                get {
                    return this.columnStockGoodsCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxationCodeColumn {
                get {
                    return this.columnTaxationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockDtiSlipNote1Column {
                get {
                    return this.columnStockDtiSlipNote1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCustomerCodeColumn {
                get {
                    return this.columnSalesCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCustomerSnmColumn {
                get {
                    return this.columnSalesCustomerSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipMemo1Column {
                get {
                    return this.columnSlipMemo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipMemo2Column {
                get {
                    return this.columnSlipMemo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipMemo3Column {
                get {
                    return this.columnSlipMemo3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsideMemo1Column {
                get {
                    return this.columnInsideMemo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsideMemo2Column {
                get {
                    return this.columnInsideMemo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsideMemo3Column {
                get {
                    return this.columnInsideMemo3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeCodeColumn {
                get {
                    return this.columnAddresseeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeNameColumn {
                get {
                    return this.columnAddresseeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DirectSendingCdColumn {
                get {
                    return this.columnDirectSendingCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderNumberColumn {
                get {
                    return this.columnOrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WayToOrderColumn {
                get {
                    return this.columnWayToOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliGdsCmpltDueDateColumn {
                get {
                    return this.columnDeliGdsCmpltDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExpectDeliveryDateColumn {
                get {
                    return this.columnExpectDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderDataCreateDivColumn {
                get {
                    return this.columnOrderDataCreateDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderDataCreateDateColumn {
                get {
                    return this.columnOrderDataCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderFormIssuedDivColumn {
                get {
                    return this.columnOrderFormIssuedDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetGdsStcDetailRow this[int index] {
                get {
                    return ((RetGdsStcDetailRow)(this.Rows[index]));
                }
            }
            
            public event RetGdsStcDetailRowChangeEventHandler RetGdsStcDetailRowChanging;
            
            public event RetGdsStcDetailRowChangeEventHandler RetGdsStcDetailRowChanged;
            
            public event RetGdsStcDetailRowChangeEventHandler RetGdsStcDetailRowDeleting;
            
            public event RetGdsStcDetailRowChangeEventHandler RetGdsStcDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRetGdsStcDetailRow(RetGdsStcDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetGdsStcDetailRow AddRetGdsStcDetailRow(
                        int RowNo, 
                        int SupplierSlipNo, 
                        int StockRowNo, 
                        int AcceptAnOrderNo, 
                        long CommonSeqNo, 
                        long StockSlipDtlNum, 
                        int SupplierFormalSrc, 
                        long StockSlipDtlNumSrc, 
                        int AcptAnOdrStatusSync, 
                        long SalesSlipDtlNumSync, 
                        int SubSectionCode, 
                        string StockInputCode, 
                        string StockAgentCode, 
                        int GoodsKindCode, 
                        string MakerKanaName, 
                        string CmpltMakerKanaName, 
                        string GoodsNameKana, 
                        int GoodsLGroup, 
                        string GoodsLGroupName, 
                        int GoodsMGroup, 
                        string GoodsMGroupName, 
                        string BLGroupName, 
                        string BLGoodsFullName, 
                        int EnterpriseGanreCode, 
                        string EnterpriseGanreName, 
                        string GoodsRateRank, 
                        int CustRateGrpCode, 
                        int SuppRateGrpCode, 
                        double ListPriceTaxIncFl, 
                        double StockRate, 
                        string RateSectStckUnPrc, 
                        string RateDivStckUnPrc, 
                        int UnPrcCalcCdStckUnPrc, 
                        int PriceCdStckUnPrc, 
                        double StdUnPrcStckUnPrc, 
                        double FracProcUnitStcUnPrc, 
                        int FracProcStckUnPrc, 
                        double StockUnitTaxPriceFl, 
                        int StockUnitChngDiv, 
                        int RateBLGoodsCode, 
                        string RateBLGoodsName, 
                        int RateGoodsRateGrpCd, 
                        string RateGoodsRateGrpNm, 
                        int RateBLGroupCode, 
                        string RateBLGroupName, 
                        double OrderCnt, 
                        double OrderAdjustCnt, 
                        double OrderRemainCnt, 
                        System.DateTime RemainCntUpdDate, 
                        long StockPriceTaxExc, 
                        long StockPriceTaxInc, 
                        int StockGoodsCd, 
                        int TaxationCode, 
                        string StockDtiSlipNote1, 
                        int SalesCustomerCode, 
                        string SalesCustomerSnm, 
                        string SlipMemo1, 
                        string SlipMemo2, 
                        string SlipMemo3, 
                        string InsideMemo1, 
                        string InsideMemo2, 
                        string InsideMemo3, 
                        int AddresseeCode, 
                        string AddresseeName, 
                        int DirectSendingCd, 
                        string OrderNumber, 
                        int WayToOrder, 
                        System.DateTime DeliGdsCmpltDueDate, 
                        System.DateTime ExpectDeliveryDate, 
                        int OrderDataCreateDiv, 
                        System.DateTime OrderDataCreateDate, 
                        int OrderFormIssuedDiv) {
                RetGdsStcDetailRow rowRetGdsStcDetailRow = ((RetGdsStcDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowNo,
                        SupplierSlipNo,
                        StockRowNo,
                        AcceptAnOrderNo,
                        CommonSeqNo,
                        StockSlipDtlNum,
                        SupplierFormalSrc,
                        StockSlipDtlNumSrc,
                        AcptAnOdrStatusSync,
                        SalesSlipDtlNumSync,
                        SubSectionCode,
                        StockInputCode,
                        StockAgentCode,
                        GoodsKindCode,
                        MakerKanaName,
                        CmpltMakerKanaName,
                        GoodsNameKana,
                        GoodsLGroup,
                        GoodsLGroupName,
                        GoodsMGroup,
                        GoodsMGroupName,
                        BLGroupName,
                        BLGoodsFullName,
                        EnterpriseGanreCode,
                        EnterpriseGanreName,
                        GoodsRateRank,
                        CustRateGrpCode,
                        SuppRateGrpCode,
                        ListPriceTaxIncFl,
                        StockRate,
                        RateSectStckUnPrc,
                        RateDivStckUnPrc,
                        UnPrcCalcCdStckUnPrc,
                        PriceCdStckUnPrc,
                        StdUnPrcStckUnPrc,
                        FracProcUnitStcUnPrc,
                        FracProcStckUnPrc,
                        StockUnitTaxPriceFl,
                        StockUnitChngDiv,
                        RateBLGoodsCode,
                        RateBLGoodsName,
                        RateGoodsRateGrpCd,
                        RateGoodsRateGrpNm,
                        RateBLGroupCode,
                        RateBLGroupName,
                        OrderCnt,
                        OrderAdjustCnt,
                        OrderRemainCnt,
                        RemainCntUpdDate,
                        StockPriceTaxExc,
                        StockPriceTaxInc,
                        StockGoodsCd,
                        TaxationCode,
                        StockDtiSlipNote1,
                        SalesCustomerCode,
                        SalesCustomerSnm,
                        SlipMemo1,
                        SlipMemo2,
                        SlipMemo3,
                        InsideMemo1,
                        InsideMemo2,
                        InsideMemo3,
                        AddresseeCode,
                        AddresseeName,
                        DirectSendingCd,
                        OrderNumber,
                        WayToOrder,
                        DeliGdsCmpltDueDate,
                        ExpectDeliveryDate,
                        OrderDataCreateDiv,
                        OrderDataCreateDate,
                        OrderFormIssuedDiv};
                rowRetGdsStcDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRetGdsStcDetailRow);
                return rowRetGdsStcDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetGdsStcDetailRow FindByRowNo(int RowNo) {
                return ((RetGdsStcDetailRow)(this.Rows.Find(new object[] {
                            RowNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RetGdsStcDetailDataTable cln = ((RetGdsStcDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RetGdsStcDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowNo = base.Columns["RowNo"];
                this.columnSupplierSlipNo = base.Columns["SupplierSlipNo"];
                this.columnStockRowNo = base.Columns["StockRowNo"];
                this.columnAcceptAnOrderNo = base.Columns["AcceptAnOrderNo"];
                this.columnCommonSeqNo = base.Columns["CommonSeqNo"];
                this.columnStockSlipDtlNum = base.Columns["StockSlipDtlNum"];
                this.columnSupplierFormalSrc = base.Columns["SupplierFormalSrc"];
                this.columnStockSlipDtlNumSrc = base.Columns["StockSlipDtlNumSrc"];
                this.columnAcptAnOdrStatusSync = base.Columns["AcptAnOdrStatusSync"];
                this.columnSalesSlipDtlNumSync = base.Columns["SalesSlipDtlNumSync"];
                this.columnSubSectionCode = base.Columns["SubSectionCode"];
                this.columnStockInputCode = base.Columns["StockInputCode"];
                this.columnStockAgentCode = base.Columns["StockAgentCode"];
                this.columnGoodsKindCode = base.Columns["GoodsKindCode"];
                this.columnMakerKanaName = base.Columns["MakerKanaName"];
                this.columnCmpltMakerKanaName = base.Columns["CmpltMakerKanaName"];
                this.columnGoodsNameKana = base.Columns["GoodsNameKana"];
                this.columnGoodsLGroup = base.Columns["GoodsLGroup"];
                this.columnGoodsLGroupName = base.Columns["GoodsLGroupName"];
                this.columnGoodsMGroup = base.Columns["GoodsMGroup"];
                this.columnGoodsMGroupName = base.Columns["GoodsMGroupName"];
                this.columnBLGroupName = base.Columns["BLGroupName"];
                this.columnBLGoodsFullName = base.Columns["BLGoodsFullName"];
                this.columnEnterpriseGanreCode = base.Columns["EnterpriseGanreCode"];
                this.columnEnterpriseGanreName = base.Columns["EnterpriseGanreName"];
                this.columnGoodsRateRank = base.Columns["GoodsRateRank"];
                this.columnCustRateGrpCode = base.Columns["CustRateGrpCode"];
                this.columnSuppRateGrpCode = base.Columns["SuppRateGrpCode"];
                this.columnListPriceTaxIncFl = base.Columns["ListPriceTaxIncFl"];
                this.columnStockRate = base.Columns["StockRate"];
                this.columnRateSectStckUnPrc = base.Columns["RateSectStckUnPrc"];
                this.columnRateDivStckUnPrc = base.Columns["RateDivStckUnPrc"];
                this.columnUnPrcCalcCdStckUnPrc = base.Columns["UnPrcCalcCdStckUnPrc"];
                this.columnPriceCdStckUnPrc = base.Columns["PriceCdStckUnPrc"];
                this.columnStdUnPrcStckUnPrc = base.Columns["StdUnPrcStckUnPrc"];
                this.columnFracProcUnitStcUnPrc = base.Columns["FracProcUnitStcUnPrc"];
                this.columnFracProcStckUnPrc = base.Columns["FracProcStckUnPrc"];
                this.columnStockUnitTaxPriceFl = base.Columns["StockUnitTaxPriceFl"];
                this.columnStockUnitChngDiv = base.Columns["StockUnitChngDiv"];
                this.columnRateBLGoodsCode = base.Columns["RateBLGoodsCode"];
                this.columnRateBLGoodsName = base.Columns["RateBLGoodsName"];
                this.columnRateGoodsRateGrpCd = base.Columns["RateGoodsRateGrpCd"];
                this.columnRateGoodsRateGrpNm = base.Columns["RateGoodsRateGrpNm"];
                this.columnRateBLGroupCode = base.Columns["RateBLGroupCode"];
                this.columnRateBLGroupName = base.Columns["RateBLGroupName"];
                this.columnOrderCnt = base.Columns["OrderCnt"];
                this.columnOrderAdjustCnt = base.Columns["OrderAdjustCnt"];
                this.columnOrderRemainCnt = base.Columns["OrderRemainCnt"];
                this.columnRemainCntUpdDate = base.Columns["RemainCntUpdDate"];
                this.columnStockPriceTaxExc = base.Columns["StockPriceTaxExc"];
                this.columnStockPriceTaxInc = base.Columns["StockPriceTaxInc"];
                this.columnStockGoodsCd = base.Columns["StockGoodsCd"];
                this.columnTaxationCode = base.Columns["TaxationCode"];
                this.columnStockDtiSlipNote1 = base.Columns["StockDtiSlipNote1"];
                this.columnSalesCustomerCode = base.Columns["SalesCustomerCode"];
                this.columnSalesCustomerSnm = base.Columns["SalesCustomerSnm"];
                this.columnSlipMemo1 = base.Columns["SlipMemo1"];
                this.columnSlipMemo2 = base.Columns["SlipMemo2"];
                this.columnSlipMemo3 = base.Columns["SlipMemo3"];
                this.columnInsideMemo1 = base.Columns["InsideMemo1"];
                this.columnInsideMemo2 = base.Columns["InsideMemo2"];
                this.columnInsideMemo3 = base.Columns["InsideMemo3"];
                this.columnAddresseeCode = base.Columns["AddresseeCode"];
                this.columnAddresseeName = base.Columns["AddresseeName"];
                this.columnDirectSendingCd = base.Columns["DirectSendingCd"];
                this.columnOrderNumber = base.Columns["OrderNumber"];
                this.columnWayToOrder = base.Columns["WayToOrder"];
                this.columnDeliGdsCmpltDueDate = base.Columns["DeliGdsCmpltDueDate"];
                this.columnExpectDeliveryDate = base.Columns["ExpectDeliveryDate"];
                this.columnOrderDataCreateDiv = base.Columns["OrderDataCreateDiv"];
                this.columnOrderDataCreateDate = base.Columns["OrderDataCreateDate"];
                this.columnOrderFormIssuedDiv = base.Columns["OrderFormIssuedDiv"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnSupplierSlipNo = new global::System.Data.DataColumn("SupplierSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNo);
                this.columnStockRowNo = new global::System.Data.DataColumn("StockRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockRowNo);
                this.columnAcceptAnOrderNo = new global::System.Data.DataColumn("AcceptAnOrderNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptAnOrderNo);
                this.columnCommonSeqNo = new global::System.Data.DataColumn("CommonSeqNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommonSeqNo);
                this.columnStockSlipDtlNum = new global::System.Data.DataColumn("StockSlipDtlNum", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSlipDtlNum);
                this.columnSupplierFormalSrc = new global::System.Data.DataColumn("SupplierFormalSrc", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierFormalSrc);
                this.columnStockSlipDtlNumSrc = new global::System.Data.DataColumn("StockSlipDtlNumSrc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSlipDtlNumSrc);
                this.columnAcptAnOdrStatusSync = new global::System.Data.DataColumn("AcptAnOdrStatusSync", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcptAnOdrStatusSync);
                this.columnSalesSlipDtlNumSync = new global::System.Data.DataColumn("SalesSlipDtlNumSync", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipDtlNumSync);
                this.columnSubSectionCode = new global::System.Data.DataColumn("SubSectionCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubSectionCode);
                this.columnStockInputCode = new global::System.Data.DataColumn("StockInputCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockInputCode);
                this.columnStockAgentCode = new global::System.Data.DataColumn("StockAgentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAgentCode);
                this.columnGoodsKindCode = new global::System.Data.DataColumn("GoodsKindCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsKindCode);
                this.columnMakerKanaName = new global::System.Data.DataColumn("MakerKanaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerKanaName);
                this.columnCmpltMakerKanaName = new global::System.Data.DataColumn("CmpltMakerKanaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCmpltMakerKanaName);
                this.columnGoodsNameKana = new global::System.Data.DataColumn("GoodsNameKana", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNameKana);
                this.columnGoodsLGroup = new global::System.Data.DataColumn("GoodsLGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsLGroup);
                this.columnGoodsLGroupName = new global::System.Data.DataColumn("GoodsLGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsLGroupName);
                this.columnGoodsMGroup = new global::System.Data.DataColumn("GoodsMGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMGroup);
                this.columnGoodsMGroupName = new global::System.Data.DataColumn("GoodsMGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMGroupName);
                this.columnBLGroupName = new global::System.Data.DataColumn("BLGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGroupName);
                this.columnBLGoodsFullName = new global::System.Data.DataColumn("BLGoodsFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGoodsFullName);
                this.columnEnterpriseGanreCode = new global::System.Data.DataColumn("EnterpriseGanreCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterpriseGanreCode);
                this.columnEnterpriseGanreName = new global::System.Data.DataColumn("EnterpriseGanreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterpriseGanreName);
                this.columnGoodsRateRank = new global::System.Data.DataColumn("GoodsRateRank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsRateRank);
                this.columnCustRateGrpCode = new global::System.Data.DataColumn("CustRateGrpCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustRateGrpCode);
                this.columnSuppRateGrpCode = new global::System.Data.DataColumn("SuppRateGrpCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppRateGrpCode);
                this.columnListPriceTaxIncFl = new global::System.Data.DataColumn("ListPriceTaxIncFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPriceTaxIncFl);
                this.columnStockRate = new global::System.Data.DataColumn("StockRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockRate);
                this.columnRateSectStckUnPrc = new global::System.Data.DataColumn("RateSectStckUnPrc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateSectStckUnPrc);
                this.columnRateDivStckUnPrc = new global::System.Data.DataColumn("RateDivStckUnPrc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateDivStckUnPrc);
                this.columnUnPrcCalcCdStckUnPrc = new global::System.Data.DataColumn("UnPrcCalcCdStckUnPrc", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnPrcCalcCdStckUnPrc);
                this.columnPriceCdStckUnPrc = new global::System.Data.DataColumn("PriceCdStckUnPrc", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceCdStckUnPrc);
                this.columnStdUnPrcStckUnPrc = new global::System.Data.DataColumn("StdUnPrcStckUnPrc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStdUnPrcStckUnPrc);
                this.columnFracProcUnitStcUnPrc = new global::System.Data.DataColumn("FracProcUnitStcUnPrc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFracProcUnitStcUnPrc);
                this.columnFracProcStckUnPrc = new global::System.Data.DataColumn("FracProcStckUnPrc", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFracProcStckUnPrc);
                this.columnStockUnitTaxPriceFl = new global::System.Data.DataColumn("StockUnitTaxPriceFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockUnitTaxPriceFl);
                this.columnStockUnitChngDiv = new global::System.Data.DataColumn("StockUnitChngDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockUnitChngDiv);
                this.columnRateBLGoodsCode = new global::System.Data.DataColumn("RateBLGoodsCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateBLGoodsCode);
                this.columnRateBLGoodsName = new global::System.Data.DataColumn("RateBLGoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateBLGoodsName);
                this.columnRateGoodsRateGrpCd = new global::System.Data.DataColumn("RateGoodsRateGrpCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateGoodsRateGrpCd);
                this.columnRateGoodsRateGrpNm = new global::System.Data.DataColumn("RateGoodsRateGrpNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateGoodsRateGrpNm);
                this.columnRateBLGroupCode = new global::System.Data.DataColumn("RateBLGroupCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateBLGroupCode);
                this.columnRateBLGroupName = new global::System.Data.DataColumn("RateBLGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateBLGroupName);
                this.columnOrderCnt = new global::System.Data.DataColumn("OrderCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderCnt);
                this.columnOrderAdjustCnt = new global::System.Data.DataColumn("OrderAdjustCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderAdjustCnt);
                this.columnOrderRemainCnt = new global::System.Data.DataColumn("OrderRemainCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderRemainCnt);
                this.columnRemainCntUpdDate = new global::System.Data.DataColumn("RemainCntUpdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemainCntUpdDate);
                this.columnStockPriceTaxExc = new global::System.Data.DataColumn("StockPriceTaxExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockPriceTaxExc);
                this.columnStockPriceTaxInc = new global::System.Data.DataColumn("StockPriceTaxInc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockPriceTaxInc);
                this.columnStockGoodsCd = new global::System.Data.DataColumn("StockGoodsCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockGoodsCd);
                this.columnTaxationCode = new global::System.Data.DataColumn("TaxationCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxationCode);
                this.columnStockDtiSlipNote1 = new global::System.Data.DataColumn("StockDtiSlipNote1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockDtiSlipNote1);
                this.columnSalesCustomerCode = new global::System.Data.DataColumn("SalesCustomerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCustomerCode);
                this.columnSalesCustomerSnm = new global::System.Data.DataColumn("SalesCustomerSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCustomerSnm);
                this.columnSlipMemo1 = new global::System.Data.DataColumn("SlipMemo1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipMemo1);
                this.columnSlipMemo2 = new global::System.Data.DataColumn("SlipMemo2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipMemo2);
                this.columnSlipMemo3 = new global::System.Data.DataColumn("SlipMemo3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipMemo3);
                this.columnInsideMemo1 = new global::System.Data.DataColumn("InsideMemo1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsideMemo1);
                this.columnInsideMemo2 = new global::System.Data.DataColumn("InsideMemo2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsideMemo2);
                this.columnInsideMemo3 = new global::System.Data.DataColumn("InsideMemo3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsideMemo3);
                this.columnAddresseeCode = new global::System.Data.DataColumn("AddresseeCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeCode);
                this.columnAddresseeName = new global::System.Data.DataColumn("AddresseeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeName);
                this.columnDirectSendingCd = new global::System.Data.DataColumn("DirectSendingCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectSendingCd);
                this.columnOrderNumber = new global::System.Data.DataColumn("OrderNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNumber);
                this.columnWayToOrder = new global::System.Data.DataColumn("WayToOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWayToOrder);
                this.columnDeliGdsCmpltDueDate = new global::System.Data.DataColumn("DeliGdsCmpltDueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliGdsCmpltDueDate);
                this.columnExpectDeliveryDate = new global::System.Data.DataColumn("ExpectDeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpectDeliveryDate);
                this.columnOrderDataCreateDiv = new global::System.Data.DataColumn("OrderDataCreateDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDataCreateDiv);
                this.columnOrderDataCreateDate = new global::System.Data.DataColumn("OrderDataCreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDataCreateDate);
                this.columnOrderFormIssuedDiv = new global::System.Data.DataColumn("OrderFormIssuedDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderFormIssuedDiv);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, true));
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "行番号";
                this.columnSupplierSlipNo.Caption = "仕入SEQ/支払No";
                this.columnStockRowNo.Caption = "行No";
                this.columnAcceptAnOrderNo.Caption = "受注番号";
                this.columnCommonSeqNo.Caption = "共通通番";
                this.columnStockSlipDtlNum.Caption = "仕入明細通番";
                this.columnSupplierFormalSrc.Caption = "仕入形式（元）";
                this.columnStockSlipDtlNumSrc.Caption = "仕入明細通番（元）";
                this.columnAcptAnOdrStatusSync.Caption = "受注ステータス（同時）";
                this.columnSalesSlipDtlNumSync.Caption = "売上明細通番（同時）";
                this.columnSubSectionCode.Caption = "部門コード";
                this.columnStockInputCode.Caption = "仕入入力者コード";
                this.columnStockAgentCode.Caption = "仕入担当者コード";
                this.columnGoodsKindCode.Caption = "商品属性";
                this.columnMakerKanaName.Caption = "メーカーカナ名称";
                this.columnCmpltMakerKanaName.Caption = "メーカーカナ名称（一式）";
                this.columnGoodsNameKana.Caption = "商品名称カナ";
                this.columnGoodsLGroup.Caption = "商品大分類コード";
                this.columnGoodsLGroupName.Caption = "商品大分類名称";
                this.columnGoodsMGroup.Caption = "商品中分類コード";
                this.columnGoodsMGroupName.Caption = "商品中分類名称";
                this.columnBLGroupName.Caption = "BLグループコード名称";
                this.columnBLGoodsFullName.Caption = "BL商品コード名称（全角）";
                this.columnEnterpriseGanreCode.Caption = "自社分類コード";
                this.columnEnterpriseGanreName.Caption = "自社分類名称";
                this.columnGoodsRateRank.Caption = "商品掛率ランク";
                this.columnCustRateGrpCode.Caption = "得意先掛率グループコード";
                this.columnSuppRateGrpCode.Caption = "仕入先掛率グループコード";
                this.columnListPriceTaxIncFl.Caption = "定価（税込，浮動）";
                this.columnStockRate.Caption = "仕入率";
                this.columnRateSectStckUnPrc.Caption = "掛率設定拠点（仕入単価）";
                this.columnRateDivStckUnPrc.Caption = "掛率設定区分（仕入単価）";
                this.columnUnPrcCalcCdStckUnPrc.Caption = "単価算出区分（仕入単価）";
                this.columnPriceCdStckUnPrc.Caption = "価格区分（仕入単価）";
                this.columnStdUnPrcStckUnPrc.Caption = "基準単価（仕入単価）";
                this.columnFracProcUnitStcUnPrc.Caption = "端数処理単位（仕入単価）";
                this.columnFracProcStckUnPrc.Caption = "端数処理（仕入単価）";
                this.columnStockUnitTaxPriceFl.Caption = "仕入単価（税込，浮動）";
                this.columnStockUnitChngDiv.Caption = "仕入単価変更区分";
                this.columnRateBLGoodsCode.Caption = "BL商品コード（掛率）";
                this.columnRateBLGoodsName.Caption = "BL商品コード名称（掛率）";
                this.columnRateGoodsRateGrpCd.Caption = "商品掛率グループコード（掛率）";
                this.columnRateGoodsRateGrpNm.Caption = "商品掛率グループ名称（掛率）";
                this.columnRateBLGroupCode.Caption = "BLグループコード（掛率）";
                this.columnRateBLGroupName.Caption = "BLグループ名称（掛率）";
                this.columnOrderCnt.Caption = "発注数量";
                this.columnOrderAdjustCnt.Caption = "発注調整数";
                this.columnOrderRemainCnt.Caption = "発注残数";
                this.columnRemainCntUpdDate.Caption = "残数更新日";
                this.columnStockPriceTaxExc.Caption = "仕入金額（税抜き）";
                this.columnStockPriceTaxInc.Caption = "仕入金額（税込み）";
                this.columnStockGoodsCd.Caption = "仕入商品区分";
                this.columnTaxationCode.Caption = "課税区分";
                this.columnStockDtiSlipNote1.Caption = "仕入伝票明細備考1";
                this.columnSalesCustomerCode.Caption = "販売先コード";
                this.columnSalesCustomerSnm.Caption = "販売先略称";
                this.columnSlipMemo1.Caption = "伝票メモ１";
                this.columnSlipMemo2.Caption = "伝票メモ２";
                this.columnSlipMemo3.Caption = "伝票メモ３";
                this.columnInsideMemo1.Caption = "社内メモ１";
                this.columnInsideMemo2.Caption = "社内メモ２";
                this.columnInsideMemo3.Caption = "社内メモ３";
                this.columnAddresseeCode.Caption = "納品先コード";
                this.columnAddresseeName.Caption = "納品先名称";
                this.columnDirectSendingCd.Caption = "直送区分";
                this.columnOrderNumber.Caption = "発注番号";
                this.columnWayToOrder.Caption = "注文方法";
                this.columnDeliGdsCmpltDueDate.Caption = "納品完了予定日";
                this.columnExpectDeliveryDate.Caption = "希望納期";
                this.columnOrderDataCreateDiv.Caption = "発注データ作成区分";
                this.columnOrderDataCreateDate.Caption = "発注データ作成日";
                this.columnOrderFormIssuedDiv.Caption = "発注書発行済区分";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetGdsStcDetailRow NewRetGdsStcDetailRow() {
                return ((RetGdsStcDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RetGdsStcDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RetGdsStcDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RetGdsStcDetailRowChanged != null)) {
                    this.RetGdsStcDetailRowChanged(this, new RetGdsStcDetailRowChangeEvent(((RetGdsStcDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RetGdsStcDetailRowChanging != null)) {
                    this.RetGdsStcDetailRowChanging(this, new RetGdsStcDetailRowChangeEvent(((RetGdsStcDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RetGdsStcDetailRowDeleted != null)) {
                    this.RetGdsStcDetailRowDeleted(this, new RetGdsStcDetailRowChangeEvent(((RetGdsStcDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RetGdsStcDetailRowDeleting != null)) {
                    this.RetGdsStcDetailRowDeleting(this, new RetGdsStcDetailRowChangeEvent(((RetGdsStcDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRetGdsStcDetailRow(RetGdsStcDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuppPtrStcDetailDataSet ds = new SuppPtrStcDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RetGdsStcDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RetGdsStcListDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnSupplierSlipNo;
            
            private global::System.Data.DataColumn columnLogicalDeleteCd;
            
            private global::System.Data.DataColumn columnSubSectionCode;
            
            private global::System.Data.DataColumn columnStockSectionCd;
            
            private global::System.Data.DataColumn columnSupplierConsTaxRate;
            
            private global::System.Data.DataColumn columnInputDay;
            
            private global::System.Data.DataColumn columnArrivalGoodsDay;
            
            private global::System.Data.DataColumn columnDebitNLnkSuppSlipNo;
            
            private global::System.Data.DataColumn columnStockGoodsCd;
            
            private global::System.Data.DataColumn columnStockAddUpSectionCd;
            
            private global::System.Data.DataColumn columnStockSlipUpdateCd;
            
            private global::System.Data.DataColumn columnDelayPaymentDiv;
            
            private global::System.Data.DataColumn columnPayeeCode;
            
            private global::System.Data.DataColumn columnPayeeSnm;
            
            private global::System.Data.DataColumn columnSupplierNm1;
            
            private global::System.Data.DataColumn columnSupplierNm2;
            
            private global::System.Data.DataColumn columnBusinessTypeCode;
            
            private global::System.Data.DataColumn columnBusinessTypeName;
            
            private global::System.Data.DataColumn columnSalesAreaCode;
            
            private global::System.Data.DataColumn columnSalesAreaName;
            
            private global::System.Data.DataColumn columnStockInputCode;
            
            private global::System.Data.DataColumn columnStockAgentCode;
            
            private global::System.Data.DataColumn columnSuppTtlAmntDspWayCd;
            
            private global::System.Data.DataColumn columnTtlAmntDispRateApy;
            
            private global::System.Data.DataColumn columnStockTotalPrice;
            
            private global::System.Data.DataColumn columnStockSubttlPrice;
            
            private global::System.Data.DataColumn columnStockTtlPricTaxInc;
            
            private global::System.Data.DataColumn columnStockNetPrice;
            
            private global::System.Data.DataColumn columnTtlItdedStcOutTax;
            
            private global::System.Data.DataColumn columnTtlItdedStcInTax;
            
            private global::System.Data.DataColumn columnTtlItdedStcTaxFree;
            
            private global::System.Data.DataColumn columnStockOutTax;
            
            private global::System.Data.DataColumn columnStckPrcConsTaxInclu;
            
            private global::System.Data.DataColumn columnStckDisTtlTaxExc;
            
            private global::System.Data.DataColumn columnItdedStockDisOutTax;
            
            private global::System.Data.DataColumn columnItdedStockDisInTax;
            
            private global::System.Data.DataColumn columnItdedStockDisTaxFre;
            
            private global::System.Data.DataColumn columnStockDisOutTax;
            
            private global::System.Data.DataColumn columnStckDisTtlTaxInclu;
            
            private global::System.Data.DataColumn columnTaxAdjust;
            
            private global::System.Data.DataColumn columnBalanceAdjust;
            
            private global::System.Data.DataColumn columnSuppCTaxLayCd;
            
            private global::System.Data.DataColumn columnAccPayConsTax;
            
            private global::System.Data.DataColumn columnStockFractionProcCd;
            
            private global::System.Data.DataColumn columnAutoPayment;
            
            private global::System.Data.DataColumn columnAutoPaySlipNum;
            
            private global::System.Data.DataColumn columnDetailRowCount;
            
            private global::System.Data.DataColumn columnEdiSendDate;
            
            private global::System.Data.DataColumn columnEdiTakeInDate;
            
            private global::System.Data.DataColumn columnSlipPrintDivCd;
            
            private global::System.Data.DataColumn columnSlipPrintFinishCd;
            
            private global::System.Data.DataColumn columnStockSlipPrintDate;
            
            private global::System.Data.DataColumn columnSlipPrtSetPaperId;
            
            private global::System.Data.DataColumn columnSlipAddressDiv;
            
            private global::System.Data.DataColumn columnAddresseeCode;
            
            private global::System.Data.DataColumn columnAddresseeName;
            
            private global::System.Data.DataColumn columnAddresseeName2;
            
            private global::System.Data.DataColumn columnAddresseePostNo;
            
            private global::System.Data.DataColumn columnAddresseeAddr1;
            
            private global::System.Data.DataColumn columnAddresseeAddr3;
            
            private global::System.Data.DataColumn columnAddresseeAddr4;
            
            private global::System.Data.DataColumn columnAddresseeTelNo;
            
            private global::System.Data.DataColumn columnAddresseeFaxNo;
            
            private global::System.Data.DataColumn columnDirectSendingCd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetGdsStcListDataTable() {
                this.TableName = "RetGdsStcList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RetGdsStcListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RetGdsStcListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNoColumn {
                get {
                    return this.columnSupplierSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogicalDeleteCdColumn {
                get {
                    return this.columnLogicalDeleteCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubSectionCodeColumn {
                get {
                    return this.columnSubSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockSectionCdColumn {
                get {
                    return this.columnStockSectionCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierConsTaxRateColumn {
                get {
                    return this.columnSupplierConsTaxRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputDayColumn {
                get {
                    return this.columnInputDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalGoodsDayColumn {
                get {
                    return this.columnArrivalGoodsDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNLnkSuppSlipNoColumn {
                get {
                    return this.columnDebitNLnkSuppSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockGoodsCdColumn {
                get {
                    return this.columnStockGoodsCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockAddUpSectionCdColumn {
                get {
                    return this.columnStockAddUpSectionCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockSlipUpdateCdColumn {
                get {
                    return this.columnStockSlipUpdateCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DelayPaymentDivColumn {
                get {
                    return this.columnDelayPaymentDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayeeCodeColumn {
                get {
                    return this.columnPayeeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayeeSnmColumn {
                get {
                    return this.columnPayeeSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierNm1Column {
                get {
                    return this.columnSupplierNm1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierNm2Column {
                get {
                    return this.columnSupplierNm2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessTypeCodeColumn {
                get {
                    return this.columnBusinessTypeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessTypeNameColumn {
                get {
                    return this.columnBusinessTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesAreaCodeColumn {
                get {
                    return this.columnSalesAreaCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesAreaNameColumn {
                get {
                    return this.columnSalesAreaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockInputCodeColumn {
                get {
                    return this.columnStockInputCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockAgentCodeColumn {
                get {
                    return this.columnStockAgentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppTtlAmntDspWayCdColumn {
                get {
                    return this.columnSuppTtlAmntDspWayCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TtlAmntDispRateApyColumn {
                get {
                    return this.columnTtlAmntDispRateApy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockTotalPriceColumn {
                get {
                    return this.columnStockTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockSubttlPriceColumn {
                get {
                    return this.columnStockSubttlPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockTtlPricTaxIncColumn {
                get {
                    return this.columnStockTtlPricTaxInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockNetPriceColumn {
                get {
                    return this.columnStockNetPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TtlItdedStcOutTaxColumn {
                get {
                    return this.columnTtlItdedStcOutTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TtlItdedStcInTaxColumn {
                get {
                    return this.columnTtlItdedStcInTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TtlItdedStcTaxFreeColumn {
                get {
                    return this.columnTtlItdedStcTaxFree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockOutTaxColumn {
                get {
                    return this.columnStockOutTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StckPrcConsTaxIncluColumn {
                get {
                    return this.columnStckPrcConsTaxInclu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StckDisTtlTaxExcColumn {
                get {
                    return this.columnStckDisTtlTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItdedStockDisOutTaxColumn {
                get {
                    return this.columnItdedStockDisOutTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItdedStockDisInTaxColumn {
                get {
                    return this.columnItdedStockDisInTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItdedStockDisTaxFreColumn {
                get {
                    return this.columnItdedStockDisTaxFre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockDisOutTaxColumn {
                get {
                    return this.columnStockDisOutTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StckDisTtlTaxIncluColumn {
                get {
                    return this.columnStckDisTtlTaxInclu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAdjustColumn {
                get {
                    return this.columnTaxAdjust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceAdjustColumn {
                get {
                    return this.columnBalanceAdjust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppCTaxLayCdColumn {
                get {
                    return this.columnSuppCTaxLayCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccPayConsTaxColumn {
                get {
                    return this.columnAccPayConsTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockFractionProcCdColumn {
                get {
                    return this.columnStockFractionProcCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AutoPaymentColumn {
                get {
                    return this.columnAutoPayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AutoPaySlipNumColumn {
                get {
                    return this.columnAutoPaySlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailRowCountColumn {
                get {
                    return this.columnDetailRowCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EdiSendDateColumn {
                get {
                    return this.columnEdiSendDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EdiTakeInDateColumn {
                get {
                    return this.columnEdiTakeInDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipPrintDivCdColumn {
                get {
                    return this.columnSlipPrintDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipPrintFinishCdColumn {
                get {
                    return this.columnSlipPrintFinishCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockSlipPrintDateColumn {
                get {
                    return this.columnStockSlipPrintDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipPrtSetPaperIdColumn {
                get {
                    return this.columnSlipPrtSetPaperId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipAddressDivColumn {
                get {
                    return this.columnSlipAddressDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeCodeColumn {
                get {
                    return this.columnAddresseeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeNameColumn {
                get {
                    return this.columnAddresseeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeName2Column {
                get {
                    return this.columnAddresseeName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseePostNoColumn {
                get {
                    return this.columnAddresseePostNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeAddr1Column {
                get {
                    return this.columnAddresseeAddr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeAddr3Column {
                get {
                    return this.columnAddresseeAddr3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeAddr4Column {
                get {
                    return this.columnAddresseeAddr4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeTelNoColumn {
                get {
                    return this.columnAddresseeTelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeFaxNoColumn {
                get {
                    return this.columnAddresseeFaxNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DirectSendingCdColumn {
                get {
                    return this.columnDirectSendingCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetGdsStcListRow this[int index] {
                get {
                    return ((RetGdsStcListRow)(this.Rows[index]));
                }
            }
            
            public event RetGdsStcListRowChangeEventHandler RetGdsStcListRowChanging;
            
            public event RetGdsStcListRowChangeEventHandler RetGdsStcListRowChanged;
            
            public event RetGdsStcListRowChangeEventHandler RetGdsStcListRowDeleting;
            
            public event RetGdsStcListRowChangeEventHandler RetGdsStcListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRetGdsStcListRow(RetGdsStcListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetGdsStcListRow AddRetGdsStcListRow(
                        int RowNo, 
                        int SupplierSlipNo, 
                        int LogicalDeleteCd, 
                        int SubSectionCode, 
                        string StockSectionCd, 
                        double SupplierConsTaxRate, 
                        System.DateTime InputDay, 
                        System.DateTime ArrivalGoodsDay, 
                        int DebitNLnkSuppSlipNo, 
                        int StockGoodsCd, 
                        string StockAddUpSectionCd, 
                        int StockSlipUpdateCd, 
                        int DelayPaymentDiv, 
                        int PayeeCode, 
                        string PayeeSnm, 
                        string SupplierNm1, 
                        string SupplierNm2, 
                        int BusinessTypeCode, 
                        string BusinessTypeName, 
                        int SalesAreaCode, 
                        string SalesAreaName, 
                        string StockInputCode, 
                        string StockAgentCode, 
                        int SuppTtlAmntDspWayCd, 
                        int TtlAmntDispRateApy, 
                        long StockTotalPrice, 
                        long StockSubttlPrice, 
                        long StockTtlPricTaxInc, 
                        long StockNetPrice, 
                        long TtlItdedStcOutTax, 
                        long TtlItdedStcInTax, 
                        long TtlItdedStcTaxFree, 
                        long StockOutTax, 
                        long StckPrcConsTaxInclu, 
                        long StckDisTtlTaxExc, 
                        long ItdedStockDisOutTax, 
                        long ItdedStockDisInTax, 
                        long ItdedStockDisTaxFre, 
                        int StockDisOutTax, 
                        long StckDisTtlTaxInclu, 
                        long TaxAdjust, 
                        long BalanceAdjust, 
                        int SuppCTaxLayCd, 
                        long AccPayConsTax, 
                        int StockFractionProcCd, 
                        int AutoPayment, 
                        int AutoPaySlipNum, 
                        int DetailRowCount, 
                        System.DateTime EdiSendDate, 
                        System.DateTime EdiTakeInDate, 
                        int SlipPrintDivCd, 
                        int SlipPrintFinishCd, 
                        System.DateTime StockSlipPrintDate, 
                        string SlipPrtSetPaperId, 
                        int SlipAddressDiv, 
                        int AddresseeCode, 
                        string AddresseeName, 
                        string AddresseeName2, 
                        string AddresseePostNo, 
                        string AddresseeAddr1, 
                        string AddresseeAddr3, 
                        string AddresseeAddr4, 
                        string AddresseeTelNo, 
                        string AddresseeFaxNo, 
                        int DirectSendingCd) {
                RetGdsStcListRow rowRetGdsStcListRow = ((RetGdsStcListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowNo,
                        SupplierSlipNo,
                        LogicalDeleteCd,
                        SubSectionCode,
                        StockSectionCd,
                        SupplierConsTaxRate,
                        InputDay,
                        ArrivalGoodsDay,
                        DebitNLnkSuppSlipNo,
                        StockGoodsCd,
                        StockAddUpSectionCd,
                        StockSlipUpdateCd,
                        DelayPaymentDiv,
                        PayeeCode,
                        PayeeSnm,
                        SupplierNm1,
                        SupplierNm2,
                        BusinessTypeCode,
                        BusinessTypeName,
                        SalesAreaCode,
                        SalesAreaName,
                        StockInputCode,
                        StockAgentCode,
                        SuppTtlAmntDspWayCd,
                        TtlAmntDispRateApy,
                        StockTotalPrice,
                        StockSubttlPrice,
                        StockTtlPricTaxInc,
                        StockNetPrice,
                        TtlItdedStcOutTax,
                        TtlItdedStcInTax,
                        TtlItdedStcTaxFree,
                        StockOutTax,
                        StckPrcConsTaxInclu,
                        StckDisTtlTaxExc,
                        ItdedStockDisOutTax,
                        ItdedStockDisInTax,
                        ItdedStockDisTaxFre,
                        StockDisOutTax,
                        StckDisTtlTaxInclu,
                        TaxAdjust,
                        BalanceAdjust,
                        SuppCTaxLayCd,
                        AccPayConsTax,
                        StockFractionProcCd,
                        AutoPayment,
                        AutoPaySlipNum,
                        DetailRowCount,
                        EdiSendDate,
                        EdiTakeInDate,
                        SlipPrintDivCd,
                        SlipPrintFinishCd,
                        StockSlipPrintDate,
                        SlipPrtSetPaperId,
                        SlipAddressDiv,
                        AddresseeCode,
                        AddresseeName,
                        AddresseeName2,
                        AddresseePostNo,
                        AddresseeAddr1,
                        AddresseeAddr3,
                        AddresseeAddr4,
                        AddresseeTelNo,
                        AddresseeFaxNo,
                        DirectSendingCd};
                rowRetGdsStcListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRetGdsStcListRow);
                return rowRetGdsStcListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetGdsStcListRow FindByRowNo(int RowNo) {
                return ((RetGdsStcListRow)(this.Rows.Find(new object[] {
                            RowNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RetGdsStcListDataTable cln = ((RetGdsStcListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RetGdsStcListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowNo = base.Columns["RowNo"];
                this.columnSupplierSlipNo = base.Columns["SupplierSlipNo"];
                this.columnLogicalDeleteCd = base.Columns["LogicalDeleteCd"];
                this.columnSubSectionCode = base.Columns["SubSectionCode"];
                this.columnStockSectionCd = base.Columns["StockSectionCd"];
                this.columnSupplierConsTaxRate = base.Columns["SupplierConsTaxRate"];
                this.columnInputDay = base.Columns["InputDay"];
                this.columnArrivalGoodsDay = base.Columns["ArrivalGoodsDay"];
                this.columnDebitNLnkSuppSlipNo = base.Columns["DebitNLnkSuppSlipNo"];
                this.columnStockGoodsCd = base.Columns["StockGoodsCd"];
                this.columnStockAddUpSectionCd = base.Columns["StockAddUpSectionCd"];
                this.columnStockSlipUpdateCd = base.Columns["StockSlipUpdateCd"];
                this.columnDelayPaymentDiv = base.Columns["DelayPaymentDiv"];
                this.columnPayeeCode = base.Columns["PayeeCode"];
                this.columnPayeeSnm = base.Columns["PayeeSnm"];
                this.columnSupplierNm1 = base.Columns["SupplierNm1"];
                this.columnSupplierNm2 = base.Columns["SupplierNm2"];
                this.columnBusinessTypeCode = base.Columns["BusinessTypeCode"];
                this.columnBusinessTypeName = base.Columns["BusinessTypeName"];
                this.columnSalesAreaCode = base.Columns["SalesAreaCode"];
                this.columnSalesAreaName = base.Columns["SalesAreaName"];
                this.columnStockInputCode = base.Columns["StockInputCode"];
                this.columnStockAgentCode = base.Columns["StockAgentCode"];
                this.columnSuppTtlAmntDspWayCd = base.Columns["SuppTtlAmntDspWayCd"];
                this.columnTtlAmntDispRateApy = base.Columns["TtlAmntDispRateApy"];
                this.columnStockTotalPrice = base.Columns["StockTotalPrice"];
                this.columnStockSubttlPrice = base.Columns["StockSubttlPrice"];
                this.columnStockTtlPricTaxInc = base.Columns["StockTtlPricTaxInc"];
                this.columnStockNetPrice = base.Columns["StockNetPrice"];
                this.columnTtlItdedStcOutTax = base.Columns["TtlItdedStcOutTax"];
                this.columnTtlItdedStcInTax = base.Columns["TtlItdedStcInTax"];
                this.columnTtlItdedStcTaxFree = base.Columns["TtlItdedStcTaxFree"];
                this.columnStockOutTax = base.Columns["StockOutTax"];
                this.columnStckPrcConsTaxInclu = base.Columns["StckPrcConsTaxInclu"];
                this.columnStckDisTtlTaxExc = base.Columns["StckDisTtlTaxExc"];
                this.columnItdedStockDisOutTax = base.Columns["ItdedStockDisOutTax"];
                this.columnItdedStockDisInTax = base.Columns["ItdedStockDisInTax"];
                this.columnItdedStockDisTaxFre = base.Columns["ItdedStockDisTaxFre"];
                this.columnStockDisOutTax = base.Columns["StockDisOutTax"];
                this.columnStckDisTtlTaxInclu = base.Columns["StckDisTtlTaxInclu"];
                this.columnTaxAdjust = base.Columns["TaxAdjust"];
                this.columnBalanceAdjust = base.Columns["BalanceAdjust"];
                this.columnSuppCTaxLayCd = base.Columns["SuppCTaxLayCd"];
                this.columnAccPayConsTax = base.Columns["AccPayConsTax"];
                this.columnStockFractionProcCd = base.Columns["StockFractionProcCd"];
                this.columnAutoPayment = base.Columns["AutoPayment"];
                this.columnAutoPaySlipNum = base.Columns["AutoPaySlipNum"];
                this.columnDetailRowCount = base.Columns["DetailRowCount"];
                this.columnEdiSendDate = base.Columns["EdiSendDate"];
                this.columnEdiTakeInDate = base.Columns["EdiTakeInDate"];
                this.columnSlipPrintDivCd = base.Columns["SlipPrintDivCd"];
                this.columnSlipPrintFinishCd = base.Columns["SlipPrintFinishCd"];
                this.columnStockSlipPrintDate = base.Columns["StockSlipPrintDate"];
                this.columnSlipPrtSetPaperId = base.Columns["SlipPrtSetPaperId"];
                this.columnSlipAddressDiv = base.Columns["SlipAddressDiv"];
                this.columnAddresseeCode = base.Columns["AddresseeCode"];
                this.columnAddresseeName = base.Columns["AddresseeName"];
                this.columnAddresseeName2 = base.Columns["AddresseeName2"];
                this.columnAddresseePostNo = base.Columns["AddresseePostNo"];
                this.columnAddresseeAddr1 = base.Columns["AddresseeAddr1"];
                this.columnAddresseeAddr3 = base.Columns["AddresseeAddr3"];
                this.columnAddresseeAddr4 = base.Columns["AddresseeAddr4"];
                this.columnAddresseeTelNo = base.Columns["AddresseeTelNo"];
                this.columnAddresseeFaxNo = base.Columns["AddresseeFaxNo"];
                this.columnDirectSendingCd = base.Columns["DirectSendingCd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnSupplierSlipNo = new global::System.Data.DataColumn("SupplierSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNo);
                this.columnLogicalDeleteCd = new global::System.Data.DataColumn("LogicalDeleteCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogicalDeleteCd);
                this.columnSubSectionCode = new global::System.Data.DataColumn("SubSectionCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubSectionCode);
                this.columnStockSectionCd = new global::System.Data.DataColumn("StockSectionCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSectionCd);
                this.columnSupplierConsTaxRate = new global::System.Data.DataColumn("SupplierConsTaxRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierConsTaxRate);
                this.columnInputDay = new global::System.Data.DataColumn("InputDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputDay);
                this.columnArrivalGoodsDay = new global::System.Data.DataColumn("ArrivalGoodsDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalGoodsDay);
                this.columnDebitNLnkSuppSlipNo = new global::System.Data.DataColumn("DebitNLnkSuppSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNLnkSuppSlipNo);
                this.columnStockGoodsCd = new global::System.Data.DataColumn("StockGoodsCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockGoodsCd);
                this.columnStockAddUpSectionCd = new global::System.Data.DataColumn("StockAddUpSectionCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAddUpSectionCd);
                this.columnStockSlipUpdateCd = new global::System.Data.DataColumn("StockSlipUpdateCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSlipUpdateCd);
                this.columnDelayPaymentDiv = new global::System.Data.DataColumn("DelayPaymentDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelayPaymentDiv);
                this.columnPayeeCode = new global::System.Data.DataColumn("PayeeCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayeeCode);
                this.columnPayeeSnm = new global::System.Data.DataColumn("PayeeSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayeeSnm);
                this.columnSupplierNm1 = new global::System.Data.DataColumn("SupplierNm1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierNm1);
                this.columnSupplierNm2 = new global::System.Data.DataColumn("SupplierNm2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierNm2);
                this.columnBusinessTypeCode = new global::System.Data.DataColumn("BusinessTypeCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessTypeCode);
                this.columnBusinessTypeName = new global::System.Data.DataColumn("BusinessTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessTypeName);
                this.columnSalesAreaCode = new global::System.Data.DataColumn("SalesAreaCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesAreaCode);
                this.columnSalesAreaName = new global::System.Data.DataColumn("SalesAreaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesAreaName);
                this.columnStockInputCode = new global::System.Data.DataColumn("StockInputCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockInputCode);
                this.columnStockAgentCode = new global::System.Data.DataColumn("StockAgentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAgentCode);
                this.columnSuppTtlAmntDspWayCd = new global::System.Data.DataColumn("SuppTtlAmntDspWayCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppTtlAmntDspWayCd);
                this.columnTtlAmntDispRateApy = new global::System.Data.DataColumn("TtlAmntDispRateApy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTtlAmntDispRateApy);
                this.columnStockTotalPrice = new global::System.Data.DataColumn("StockTotalPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockTotalPrice);
                this.columnStockSubttlPrice = new global::System.Data.DataColumn("StockSubttlPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSubttlPrice);
                this.columnStockTtlPricTaxInc = new global::System.Data.DataColumn("StockTtlPricTaxInc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockTtlPricTaxInc);
                this.columnStockNetPrice = new global::System.Data.DataColumn("StockNetPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockNetPrice);
                this.columnTtlItdedStcOutTax = new global::System.Data.DataColumn("TtlItdedStcOutTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTtlItdedStcOutTax);
                this.columnTtlItdedStcInTax = new global::System.Data.DataColumn("TtlItdedStcInTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTtlItdedStcInTax);
                this.columnTtlItdedStcTaxFree = new global::System.Data.DataColumn("TtlItdedStcTaxFree", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTtlItdedStcTaxFree);
                this.columnStockOutTax = new global::System.Data.DataColumn("StockOutTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockOutTax);
                this.columnStckPrcConsTaxInclu = new global::System.Data.DataColumn("StckPrcConsTaxInclu", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStckPrcConsTaxInclu);
                this.columnStckDisTtlTaxExc = new global::System.Data.DataColumn("StckDisTtlTaxExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStckDisTtlTaxExc);
                this.columnItdedStockDisOutTax = new global::System.Data.DataColumn("ItdedStockDisOutTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItdedStockDisOutTax);
                this.columnItdedStockDisInTax = new global::System.Data.DataColumn("ItdedStockDisInTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItdedStockDisInTax);
                this.columnItdedStockDisTaxFre = new global::System.Data.DataColumn("ItdedStockDisTaxFre", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItdedStockDisTaxFre);
                this.columnStockDisOutTax = new global::System.Data.DataColumn("StockDisOutTax", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockDisOutTax);
                this.columnStckDisTtlTaxInclu = new global::System.Data.DataColumn("StckDisTtlTaxInclu", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStckDisTtlTaxInclu);
                this.columnTaxAdjust = new global::System.Data.DataColumn("TaxAdjust", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAdjust);
                this.columnBalanceAdjust = new global::System.Data.DataColumn("BalanceAdjust", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalanceAdjust);
                this.columnSuppCTaxLayCd = new global::System.Data.DataColumn("SuppCTaxLayCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppCTaxLayCd);
                this.columnAccPayConsTax = new global::System.Data.DataColumn("AccPayConsTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccPayConsTax);
                this.columnStockFractionProcCd = new global::System.Data.DataColumn("StockFractionProcCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockFractionProcCd);
                this.columnAutoPayment = new global::System.Data.DataColumn("AutoPayment", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoPayment);
                this.columnAutoPaySlipNum = new global::System.Data.DataColumn("AutoPaySlipNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoPaySlipNum);
                this.columnDetailRowCount = new global::System.Data.DataColumn("DetailRowCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailRowCount);
                this.columnEdiSendDate = new global::System.Data.DataColumn("EdiSendDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEdiSendDate);
                this.columnEdiTakeInDate = new global::System.Data.DataColumn("EdiTakeInDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEdiTakeInDate);
                this.columnSlipPrintDivCd = new global::System.Data.DataColumn("SlipPrintDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipPrintDivCd);
                this.columnSlipPrintFinishCd = new global::System.Data.DataColumn("SlipPrintFinishCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipPrintFinishCd);
                this.columnStockSlipPrintDate = new global::System.Data.DataColumn("StockSlipPrintDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSlipPrintDate);
                this.columnSlipPrtSetPaperId = new global::System.Data.DataColumn("SlipPrtSetPaperId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipPrtSetPaperId);
                this.columnSlipAddressDiv = new global::System.Data.DataColumn("SlipAddressDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipAddressDiv);
                this.columnAddresseeCode = new global::System.Data.DataColumn("AddresseeCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeCode);
                this.columnAddresseeName = new global::System.Data.DataColumn("AddresseeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeName);
                this.columnAddresseeName2 = new global::System.Data.DataColumn("AddresseeName2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeName2);
                this.columnAddresseePostNo = new global::System.Data.DataColumn("AddresseePostNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseePostNo);
                this.columnAddresseeAddr1 = new global::System.Data.DataColumn("AddresseeAddr1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeAddr1);
                this.columnAddresseeAddr3 = new global::System.Data.DataColumn("AddresseeAddr3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeAddr3);
                this.columnAddresseeAddr4 = new global::System.Data.DataColumn("AddresseeAddr4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeAddr4);
                this.columnAddresseeTelNo = new global::System.Data.DataColumn("AddresseeTelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeTelNo);
                this.columnAddresseeFaxNo = new global::System.Data.DataColumn("AddresseeFaxNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeFaxNo);
                this.columnDirectSendingCd = new global::System.Data.DataColumn("DirectSendingCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectSendingCd);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, true));
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "行番号";
                this.columnSupplierSlipNo.Caption = "仕入SEQ/支払No";
                this.columnLogicalDeleteCd.Caption = "論理削除区分";
                this.columnSubSectionCode.Caption = "部門コード";
                this.columnStockSectionCd.Caption = "仕入拠点コード";
                this.columnSupplierConsTaxRate.Caption = "仕入先消費税税率";
                this.columnInputDay.Caption = "入力日";
                this.columnArrivalGoodsDay.Caption = "入荷日";
                this.columnDebitNLnkSuppSlipNo.Caption = "赤黒連結仕入伝票番号";
                this.columnStockGoodsCd.Caption = "仕入商品区分";
                this.columnStockAddUpSectionCd.Caption = "仕入計上拠点コード";
                this.columnStockSlipUpdateCd.Caption = "仕入伝票更新区分";
                this.columnDelayPaymentDiv.Caption = "来勘区分";
                this.columnPayeeCode.Caption = "支払先コード";
                this.columnPayeeSnm.Caption = "支払先略称";
                this.columnSupplierNm1.Caption = "仕入先名1";
                this.columnSupplierNm2.Caption = "仕入先名2";
                this.columnBusinessTypeCode.Caption = "業種コード";
                this.columnBusinessTypeName.Caption = "業種名称";
                this.columnSalesAreaCode.Caption = "販売エリアコード";
                this.columnSalesAreaName.Caption = "販売エリア名称";
                this.columnStockInputCode.Caption = "仕入入力者コード";
                this.columnStockAgentCode.Caption = "仕入担当者コード";
                this.columnSuppTtlAmntDspWayCd.Caption = "仕入先総額表示方法区分";
                this.columnTtlAmntDispRateApy.Caption = "総額表示掛率適用区分";
                this.columnStockTotalPrice.Caption = "仕入金額合計";
                this.columnStockSubttlPrice.Caption = "仕入金額小計";
                this.columnStockTtlPricTaxInc.Caption = "仕入金額計（税込み）";
                this.columnStockNetPrice.Caption = "仕入正価金額";
                this.columnTtlItdedStcOutTax.Caption = "仕入外税対象額合計";
                this.columnTtlItdedStcInTax.Caption = "仕入内税対象額合計";
                this.columnTtlItdedStcTaxFree.Caption = "仕入非課税対象額合計";
                this.columnStockOutTax.Caption = "仕入金額消費税額（外税）";
                this.columnStckPrcConsTaxInclu.Caption = "仕入金額消費税額（内税）";
                this.columnStckDisTtlTaxExc.Caption = "仕入値引金額計（税抜き）";
                this.columnItdedStockDisOutTax.Caption = "仕入値引外税対象額合計";
                this.columnItdedStockDisInTax.Caption = "仕入値引内税対象額合計";
                this.columnItdedStockDisTaxFre.Caption = "仕入値引非課税対象額合計";
                this.columnStockDisOutTax.Caption = "仕入値引消費税額（外税）";
                this.columnStckDisTtlTaxInclu.Caption = "仕入値引消費税額（内税）";
                this.columnTaxAdjust.Caption = "消費税調整額";
                this.columnBalanceAdjust.Caption = "残高調整額";
                this.columnSuppCTaxLayCd.Caption = "仕入先消費税転嫁方式コード";
                this.columnAccPayConsTax.Caption = "買掛消費税";
                this.columnStockFractionProcCd.Caption = "仕入端数処理区分";
                this.columnAutoPayment.Caption = "自動支払区分";
                this.columnAutoPaySlipNum.Caption = "自動支払伝票番号";
                this.columnDetailRowCount.Caption = "明細行数";
                this.columnEdiSendDate.Caption = "ＥＤＩ送信日";
                this.columnEdiTakeInDate.Caption = "ＥＤＩ取込日";
                this.columnSlipPrintDivCd.Caption = "伝票発行区分";
                this.columnSlipPrintFinishCd.Caption = "伝票発行済区分";
                this.columnStockSlipPrintDate.Caption = "仕入伝票発行日";
                this.columnSlipPrtSetPaperId.Caption = "伝票印刷設定用帳票ID";
                this.columnSlipAddressDiv.Caption = "伝票住所区分";
                this.columnAddresseeCode.Caption = "納品先コード";
                this.columnAddresseeName.Caption = "納品先名称";
                this.columnAddresseeName2.Caption = "納品先名称2";
                this.columnAddresseePostNo.Caption = "納品先郵便番号";
                this.columnAddresseeAddr1.Caption = "納品先住所1(都道府県市区郡・町村・字)";
                this.columnAddresseeAddr3.Caption = "納品先住所3(番地)";
                this.columnAddresseeAddr4.Caption = "納品先住所4(アパート名称)";
                this.columnAddresseeTelNo.Caption = "納品先電話番号";
                this.columnAddresseeFaxNo.Caption = "納品先FAX番号";
                this.columnDirectSendingCd.Caption = "直送区分";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetGdsStcListRow NewRetGdsStcListRow() {
                return ((RetGdsStcListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RetGdsStcListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RetGdsStcListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RetGdsStcListRowChanged != null)) {
                    this.RetGdsStcListRowChanged(this, new RetGdsStcListRowChangeEvent(((RetGdsStcListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RetGdsStcListRowChanging != null)) {
                    this.RetGdsStcListRowChanging(this, new RetGdsStcListRowChangeEvent(((RetGdsStcListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RetGdsStcListRowDeleted != null)) {
                    this.RetGdsStcListRowDeleted(this, new RetGdsStcListRowChangeEvent(((RetGdsStcListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RetGdsStcListRowDeleting != null)) {
                    this.RetGdsStcListRowDeleting(this, new RetGdsStcListRowChangeEvent(((RetGdsStcListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRetGdsStcListRow(RetGdsStcListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SuppPtrStcDetailDataSet ds = new SuppPtrStcDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RetGdsStcListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StcDetailRow : global::System.Data.DataRow {
            
            private StcDetailDataTable tableStcDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StcDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStcDetail = ((StcDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SelectionCheck {
                get {
                    try {
                        return ((bool)(this[this.tableStcDetail.SelectionCheckColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SelectionCheck\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SelectionCheckColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableStcDetail.RowNoColumn]));
                }
                set {
                    this[this.tableStcDetail.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DataDiv {
                get {
                    try {
                        return ((int)(this[this.tableStcDetail.DataDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'DataDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.DataDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StockDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStcDetail.StockDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'StockDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.StockDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartySaleSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.PartySaleSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'PartySaleSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.PartySaleSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockRowNo {
                get {
                    try {
                        return ((int)(this[this.tableStcDetail.StockRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'StockRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.StockRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierFormal {
                get {
                    try {
                        return ((int)(this[this.tableStcDetail.SupplierFormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SupplierFormal\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SupplierFormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierSlipCd {
                get {
                    try {
                        return ((int)(this[this.tableStcDetail.SupplierSlipCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SupplierSlipCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SupplierSlipCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSlipCdName {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.SupplierSlipCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SupplierSlipCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SupplierSlipCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockSlipCdDtl {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.StockSlipCdDtlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'StockSlipCdDtl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.StockSlipCdDtlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockAgentName {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.StockAgentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'StockAgentName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.StockAgentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.GoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'GoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsMakerCd {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.GoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'GoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerName {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.MakerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'MakerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.MakerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLGoodsCode {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.BLGoodsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'BLGoodsCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.BLGoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLGroupCode {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.BLGroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'BLGroupCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.BLGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockUnitPriceFl {
                get {
                    try {
                        return ((double)(this[this.tableStcDetail.StockUnitPriceFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'StockUnitPriceFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.StockUnitPriceFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockCount {
                get {
                    try {
                        return ((double)(this[this.tableStcDetail.StockCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'StockCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.StockCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ListPriceTaxExcFl {
                get {
                    try {
                        return ((double)(this[this.tableStcDetail.ListPriceTaxExcFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'ListPriceTaxExcFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.ListPriceTaxExcFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OpenPriceDiv {
                get {
                    try {
                        return ((int)(this[this.tableStcDetail.OpenPriceDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'OpenPriceDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.OpenPriceDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockTtlPricTaxExc {
                get {
                    try {
                        return ((long)(this[this.tableStcDetail.StockTtlPricTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'StockTtlPricTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.StockTtlPricTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SuppCTaxLayCd {
                get {
                    try {
                        return ((int)(this[this.tableStcDetail.SuppCTaxLayCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SuppCTaxLayCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SuppCTaxLayCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockTtlPricTaxInc {
                get {
                    try {
                        return ((long)(this[this.tableStcDetail.StockTtlPricTaxIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'StockTtlPricTaxInc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.StockTtlPricTaxIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockPriceConsTax {
                get {
                    try {
                        return ((long)(this[this.tableStcDetail.StockPriceConsTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'StockPriceConsTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.StockPriceConsTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSlipNote1 {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.SupplierSlipNote1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SupplierSlipNote1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SupplierSlipNote1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSlipNote2 {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.SupplierSlipNote2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SupplierSlipNote2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SupplierSlipNote2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionCd {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.SectionCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SectionCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SectionCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionGuideNm {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.SectionGuideNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SectionGuideNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SectionGuideNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockInputName {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.StockInputNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'StockInputName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.StockInputNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierCd {
                get {
                    try {
                        return ((int)(this[this.tableStcDetail.SupplierCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SupplierCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSnm {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.SupplierSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SupplierSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SupplierSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockOrderDivCd {
                get {
                    try {
                        return ((int)(this[this.tableStcDetail.StockOrderDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'StockOrderDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.StockOrderDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockOrderDivCdName {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.StockOrderDivCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'StockOrderDivCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.StockOrderDivCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCd {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.WarehouseCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'WarehouseCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.WarehouseCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseName {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.WarehouseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'WarehouseName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.WarehouseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseShelfNo {
                get {
                    if (this.IsWarehouseShelfNoNull()) {
                        return "(Empty)";
                    }
                    else {
                        return ((string)(this[this.tableStcDetail.WarehouseShelfNoColumn]));
                    }
                }
                set {
                    this[this.tableStcDetail.WarehouseShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UoeRemark1 {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.UoeRemark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'UoeRemark1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.UoeRemark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UoeRemark2 {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.UoeRemark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'UoeRemark2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.UoeRemark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableStcDetail.SupplierSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SupplierSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SupplierSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StockAddUpADate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStcDetail.StockAddUpADateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'StockAddUpADate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.StockAddUpADateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AccPayDivCd {
                get {
                    try {
                        return ((int)(this[this.tableStcDetail.AccPayDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'AccPayDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.AccPayDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccPayDivCdName {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.AccPayDivCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'AccPayDivCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.AccPayDivCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebitNoteDiv {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.DebitNoteDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'DebitNoteDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.DebitNoteDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.SalesSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SalesSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SalesDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStcDetail.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SalesDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerCode {
                get {
                    try {
                        return ((int)(this[this.tableStcDetail.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'CustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerSnm {
                get {
                    try {
                        return ((string)(this[this.tableStcDetail.CustomerSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'CustomerSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.CustomerSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BfStockUnitPriceFl {
                get {
                    try {
                        return ((double)(this[this.tableStcDetail.BfStockUnitPriceFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'BfStockUnitPriceFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.BfStockUnitPriceFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BfListPrice {
                get {
                    try {
                        return ((double)(this[this.tableStcDetail.BfListPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'BfListPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.BfListPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockSlipCdDtlInt {
                get {
                    try {
                        return ((int)(this[this.tableStcDetail.StockSlipCdDtlIntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'StockSlipCdDtlInt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.StockSlipCdDtlIntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LogicalDeleteCode {
                get {
                    try {
                        return ((int)(this[this.tableStcDetail.LogicalDeleteCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'LogicalDeleteCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.LogicalDeleteCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SupplierConsTaxRate {
                get {
                    try {
                        return ((double)(this[this.tableStcDetail.SupplierConsTaxRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcDetail\' にある列 \'SupplierConsTaxRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcDetail.SupplierConsTaxRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectionCheckNull() {
                return this.IsNull(this.tableStcDetail.SelectionCheckColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectionCheckNull() {
                this[this.tableStcDetail.SelectionCheckColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataDivNull() {
                return this.IsNull(this.tableStcDetail.DataDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataDivNull() {
                this[this.tableStcDetail.DataDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockDateNull() {
                return this.IsNull(this.tableStcDetail.StockDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockDateNull() {
                this[this.tableStcDetail.StockDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartySaleSlipNumNull() {
                return this.IsNull(this.tableStcDetail.PartySaleSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartySaleSlipNumNull() {
                this[this.tableStcDetail.PartySaleSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockRowNoNull() {
                return this.IsNull(this.tableStcDetail.StockRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockRowNoNull() {
                this[this.tableStcDetail.StockRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierFormalNull() {
                return this.IsNull(this.tableStcDetail.SupplierFormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierFormalNull() {
                this[this.tableStcDetail.SupplierFormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipCdNull() {
                return this.IsNull(this.tableStcDetail.SupplierSlipCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipCdNull() {
                this[this.tableStcDetail.SupplierSlipCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipCdNameNull() {
                return this.IsNull(this.tableStcDetail.SupplierSlipCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipCdNameNull() {
                this[this.tableStcDetail.SupplierSlipCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockSlipCdDtlNull() {
                return this.IsNull(this.tableStcDetail.StockSlipCdDtlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockSlipCdDtlNull() {
                this[this.tableStcDetail.StockSlipCdDtlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockAgentNameNull() {
                return this.IsNull(this.tableStcDetail.StockAgentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockAgentNameNull() {
                this[this.tableStcDetail.StockAgentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableStcDetail.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableStcDetail.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNull() {
                return this.IsNull(this.tableStcDetail.GoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNull() {
                this[this.tableStcDetail.GoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMakerCdNull() {
                return this.IsNull(this.tableStcDetail.GoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMakerCdNull() {
                this[this.tableStcDetail.GoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerNameNull() {
                return this.IsNull(this.tableStcDetail.MakerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerNameNull() {
                this[this.tableStcDetail.MakerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGoodsCodeNull() {
                return this.IsNull(this.tableStcDetail.BLGoodsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGoodsCodeNull() {
                this[this.tableStcDetail.BLGoodsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGroupCodeNull() {
                return this.IsNull(this.tableStcDetail.BLGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGroupCodeNull() {
                this[this.tableStcDetail.BLGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockUnitPriceFlNull() {
                return this.IsNull(this.tableStcDetail.StockUnitPriceFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockUnitPriceFlNull() {
                this[this.tableStcDetail.StockUnitPriceFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockCountNull() {
                return this.IsNull(this.tableStcDetail.StockCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockCountNull() {
                this[this.tableStcDetail.StockCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceTaxExcFlNull() {
                return this.IsNull(this.tableStcDetail.ListPriceTaxExcFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceTaxExcFlNull() {
                this[this.tableStcDetail.ListPriceTaxExcFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpenPriceDivNull() {
                return this.IsNull(this.tableStcDetail.OpenPriceDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpenPriceDivNull() {
                this[this.tableStcDetail.OpenPriceDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockTtlPricTaxExcNull() {
                return this.IsNull(this.tableStcDetail.StockTtlPricTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockTtlPricTaxExcNull() {
                this[this.tableStcDetail.StockTtlPricTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppCTaxLayCdNull() {
                return this.IsNull(this.tableStcDetail.SuppCTaxLayCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppCTaxLayCdNull() {
                this[this.tableStcDetail.SuppCTaxLayCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockTtlPricTaxIncNull() {
                return this.IsNull(this.tableStcDetail.StockTtlPricTaxIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockTtlPricTaxIncNull() {
                this[this.tableStcDetail.StockTtlPricTaxIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockPriceConsTaxNull() {
                return this.IsNull(this.tableStcDetail.StockPriceConsTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockPriceConsTaxNull() {
                this[this.tableStcDetail.StockPriceConsTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNote1Null() {
                return this.IsNull(this.tableStcDetail.SupplierSlipNote1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNote1Null() {
                this[this.tableStcDetail.SupplierSlipNote1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNote2Null() {
                return this.IsNull(this.tableStcDetail.SupplierSlipNote2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNote2Null() {
                this[this.tableStcDetail.SupplierSlipNote2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionCdNull() {
                return this.IsNull(this.tableStcDetail.SectionCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionCdNull() {
                this[this.tableStcDetail.SectionCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionGuideNmNull() {
                return this.IsNull(this.tableStcDetail.SectionGuideNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionGuideNmNull() {
                this[this.tableStcDetail.SectionGuideNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockInputNameNull() {
                return this.IsNull(this.tableStcDetail.StockInputNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockInputNameNull() {
                this[this.tableStcDetail.StockInputNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCdNull() {
                return this.IsNull(this.tableStcDetail.SupplierCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCdNull() {
                this[this.tableStcDetail.SupplierCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSnmNull() {
                return this.IsNull(this.tableStcDetail.SupplierSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSnmNull() {
                this[this.tableStcDetail.SupplierSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockOrderDivCdNull() {
                return this.IsNull(this.tableStcDetail.StockOrderDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockOrderDivCdNull() {
                this[this.tableStcDetail.StockOrderDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockOrderDivCdNameNull() {
                return this.IsNull(this.tableStcDetail.StockOrderDivCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockOrderDivCdNameNull() {
                this[this.tableStcDetail.StockOrderDivCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCdNull() {
                return this.IsNull(this.tableStcDetail.WarehouseCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCdNull() {
                this[this.tableStcDetail.WarehouseCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNameNull() {
                return this.IsNull(this.tableStcDetail.WarehouseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNameNull() {
                this[this.tableStcDetail.WarehouseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseShelfNoNull() {
                return this.IsNull(this.tableStcDetail.WarehouseShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseShelfNoNull() {
                this[this.tableStcDetail.WarehouseShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUoeRemark1Null() {
                return this.IsNull(this.tableStcDetail.UoeRemark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUoeRemark1Null() {
                this[this.tableStcDetail.UoeRemark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUoeRemark2Null() {
                return this.IsNull(this.tableStcDetail.UoeRemark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUoeRemark2Null() {
                this[this.tableStcDetail.UoeRemark2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNoNull() {
                return this.IsNull(this.tableStcDetail.SupplierSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNoNull() {
                this[this.tableStcDetail.SupplierSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockAddUpADateNull() {
                return this.IsNull(this.tableStcDetail.StockAddUpADateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockAddUpADateNull() {
                this[this.tableStcDetail.StockAddUpADateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccPayDivCdNull() {
                return this.IsNull(this.tableStcDetail.AccPayDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccPayDivCdNull() {
                this[this.tableStcDetail.AccPayDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccPayDivCdNameNull() {
                return this.IsNull(this.tableStcDetail.AccPayDivCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccPayDivCdNameNull() {
                this[this.tableStcDetail.AccPayDivCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteDivNull() {
                return this.IsNull(this.tableStcDetail.DebitNoteDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteDivNull() {
                this[this.tableStcDetail.DebitNoteDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipNumNull() {
                return this.IsNull(this.tableStcDetail.SalesSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipNumNull() {
                this[this.tableStcDetail.SalesSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tableStcDetail.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tableStcDetail.SalesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableStcDetail.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableStcDetail.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerSnmNull() {
                return this.IsNull(this.tableStcDetail.CustomerSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerSnmNull() {
                this[this.tableStcDetail.CustomerSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfStockUnitPriceFlNull() {
                return this.IsNull(this.tableStcDetail.BfStockUnitPriceFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfStockUnitPriceFlNull() {
                this[this.tableStcDetail.BfStockUnitPriceFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfListPriceNull() {
                return this.IsNull(this.tableStcDetail.BfListPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfListPriceNull() {
                this[this.tableStcDetail.BfListPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockSlipCdDtlIntNull() {
                return this.IsNull(this.tableStcDetail.StockSlipCdDtlIntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockSlipCdDtlIntNull() {
                this[this.tableStcDetail.StockSlipCdDtlIntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogicalDeleteCodeNull() {
                return this.IsNull(this.tableStcDetail.LogicalDeleteCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogicalDeleteCodeNull() {
                this[this.tableStcDetail.LogicalDeleteCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierConsTaxRateNull() {
                return this.IsNull(this.tableStcDetail.SupplierConsTaxRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierConsTaxRateNull() {
                this[this.tableStcDetail.SupplierConsTaxRateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StcListRow : global::System.Data.DataRow {
            
            private StcListDataTable tableStcList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StcListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStcList = ((StcListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Selection {
                get {
                    try {
                        return ((bool)(this[this.tableStcList.SelectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'Selection\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.SelectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableStcList.RowNoColumn]));
                }
                set {
                    this[this.tableStcList.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DataDiv {
                get {
                    try {
                        return ((int)(this[this.tableStcList.DataDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'DataDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.DataDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StockDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStcList.StockDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'StockDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.StockDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartySaleSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableStcList.PartySaleSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'PartySaleSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.PartySaleSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierFormal {
                get {
                    try {
                        return ((int)(this[this.tableStcList.SupplierFormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'SupplierFormal\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.SupplierFormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierSlipCd {
                get {
                    try {
                        return ((int)(this[this.tableStcList.SupplierSlipCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'SupplierSlipCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.SupplierSlipCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSlipCdName {
                get {
                    try {
                        return ((string)(this[this.tableStcList.SupplierSlipCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'SupplierSlipCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.SupplierSlipCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockAgentName {
                get {
                    try {
                        return ((string)(this[this.tableStcList.StockAgentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'StockAgentName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.StockAgentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockTtlPricTaxExc {
                get {
                    try {
                        return ((long)(this[this.tableStcList.StockTtlPricTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'StockTtlPricTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.StockTtlPricTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ConsumeTax {
                get {
                    try {
                        return ((double)(this[this.tableStcList.ConsumeTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'ConsumeTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.ConsumeTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockPriceConsTax {
                get {
                    try {
                        return ((long)(this[this.tableStcList.StockPriceConsTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'StockPriceConsTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.StockPriceConsTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSlipNote1 {
                get {
                    try {
                        return ((string)(this[this.tableStcList.SupplierSlipNote1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'SupplierSlipNote1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.SupplierSlipNote1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSlipNote2 {
                get {
                    try {
                        return ((string)(this[this.tableStcList.SupplierSlipNote2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'SupplierSlipNote2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.SupplierSlipNote2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionCd {
                get {
                    try {
                        return ((string)(this[this.tableStcList.SectionCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'SectionCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.SectionCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionGuideNm {
                get {
                    try {
                        return ((string)(this[this.tableStcList.SectionGuideNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'SectionGuideNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.SectionGuideNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockInputName {
                get {
                    try {
                        return ((string)(this[this.tableStcList.StockInputNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'StockInputName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.StockInputNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierCd {
                get {
                    try {
                        return ((int)(this[this.tableStcList.SupplierCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'SupplierCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.SupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSnm {
                get {
                    try {
                        return ((string)(this[this.tableStcList.SupplierSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'SupplierSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.SupplierSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UoeRemark1 {
                get {
                    try {
                        return ((string)(this[this.tableStcList.UoeRemark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'UoeRemark1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.UoeRemark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UoeRemark2 {
                get {
                    try {
                        return ((string)(this[this.tableStcList.UoeRemark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'UoeRemark2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.UoeRemark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableStcList.SupplierSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'SupplierSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.SupplierSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StockAddUpADate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStcList.StockAddUpADateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'StockAddUpADate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.StockAddUpADateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AccPayDivCd {
                get {
                    try {
                        return ((int)(this[this.tableStcList.AccPayDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'AccPayDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.AccPayDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccPayDivCdName {
                get {
                    try {
                        return ((string)(this[this.tableStcList.AccPayDivCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'AccPayDivCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.AccPayDivCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebitNoteDiv {
                get {
                    try {
                        return ((string)(this[this.tableStcList.DebitNoteDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'DebitNoteDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.DebitNoteDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableStcList.SalesSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'SalesSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.SalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SupplierConsTaxRate {
                get {
                    try {
                        return ((double)(this[this.tableStcList.SupplierConsTaxRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StcList\' にある列 \'SupplierConsTaxRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStcList.SupplierConsTaxRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectionNull() {
                return this.IsNull(this.tableStcList.SelectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectionNull() {
                this[this.tableStcList.SelectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataDivNull() {
                return this.IsNull(this.tableStcList.DataDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataDivNull() {
                this[this.tableStcList.DataDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockDateNull() {
                return this.IsNull(this.tableStcList.StockDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockDateNull() {
                this[this.tableStcList.StockDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartySaleSlipNumNull() {
                return this.IsNull(this.tableStcList.PartySaleSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartySaleSlipNumNull() {
                this[this.tableStcList.PartySaleSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierFormalNull() {
                return this.IsNull(this.tableStcList.SupplierFormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierFormalNull() {
                this[this.tableStcList.SupplierFormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipCdNull() {
                return this.IsNull(this.tableStcList.SupplierSlipCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipCdNull() {
                this[this.tableStcList.SupplierSlipCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipCdNameNull() {
                return this.IsNull(this.tableStcList.SupplierSlipCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipCdNameNull() {
                this[this.tableStcList.SupplierSlipCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockAgentNameNull() {
                return this.IsNull(this.tableStcList.StockAgentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockAgentNameNull() {
                this[this.tableStcList.StockAgentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockTtlPricTaxExcNull() {
                return this.IsNull(this.tableStcList.StockTtlPricTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockTtlPricTaxExcNull() {
                this[this.tableStcList.StockTtlPricTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsumeTaxNull() {
                return this.IsNull(this.tableStcList.ConsumeTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsumeTaxNull() {
                this[this.tableStcList.ConsumeTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockPriceConsTaxNull() {
                return this.IsNull(this.tableStcList.StockPriceConsTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockPriceConsTaxNull() {
                this[this.tableStcList.StockPriceConsTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNote1Null() {
                return this.IsNull(this.tableStcList.SupplierSlipNote1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNote1Null() {
                this[this.tableStcList.SupplierSlipNote1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNote2Null() {
                return this.IsNull(this.tableStcList.SupplierSlipNote2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNote2Null() {
                this[this.tableStcList.SupplierSlipNote2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionCdNull() {
                return this.IsNull(this.tableStcList.SectionCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionCdNull() {
                this[this.tableStcList.SectionCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionGuideNmNull() {
                return this.IsNull(this.tableStcList.SectionGuideNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionGuideNmNull() {
                this[this.tableStcList.SectionGuideNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockInputNameNull() {
                return this.IsNull(this.tableStcList.StockInputNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockInputNameNull() {
                this[this.tableStcList.StockInputNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCdNull() {
                return this.IsNull(this.tableStcList.SupplierCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCdNull() {
                this[this.tableStcList.SupplierCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSnmNull() {
                return this.IsNull(this.tableStcList.SupplierSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSnmNull() {
                this[this.tableStcList.SupplierSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUoeRemark1Null() {
                return this.IsNull(this.tableStcList.UoeRemark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUoeRemark1Null() {
                this[this.tableStcList.UoeRemark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUoeRemark2Null() {
                return this.IsNull(this.tableStcList.UoeRemark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUoeRemark2Null() {
                this[this.tableStcList.UoeRemark2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNoNull() {
                return this.IsNull(this.tableStcList.SupplierSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNoNull() {
                this[this.tableStcList.SupplierSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockAddUpADateNull() {
                return this.IsNull(this.tableStcList.StockAddUpADateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockAddUpADateNull() {
                this[this.tableStcList.StockAddUpADateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccPayDivCdNull() {
                return this.IsNull(this.tableStcList.AccPayDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccPayDivCdNull() {
                this[this.tableStcList.AccPayDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccPayDivCdNameNull() {
                return this.IsNull(this.tableStcList.AccPayDivCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccPayDivCdNameNull() {
                this[this.tableStcList.AccPayDivCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteDivNull() {
                return this.IsNull(this.tableStcList.DebitNoteDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteDivNull() {
                this[this.tableStcList.DebitNoteDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipNumNull() {
                return this.IsNull(this.tableStcList.SalesSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipNumNull() {
                this[this.tableStcList.SalesSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierConsTaxRateNull() {
                return this.IsNull(this.tableStcList.SupplierConsTaxRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierConsTaxRateNull() {
                this[this.tableStcList.SupplierConsTaxRateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BalanceListRow : global::System.Data.DataRow {
            
            private BalanceListDataTable tableBalanceList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BalanceListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBalanceList = ((BalanceListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableBalanceList.RowNoColumn]));
                }
                set {
                    this[this.tableBalanceList.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AddUpDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBalanceList.AddUpDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'AddUpDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.AddUpDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LastTimeBlc {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.LastTimeBlcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'LastTimeBlc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.LastTimeBlcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ThisTimePayNrml {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.ThisTimePayNrmlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'ThisTimePayNrml\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.ThisTimePayNrmlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ThisTimeTtlBlc {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.ThisTimeTtlBlcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'ThisTimeTtlBlc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.ThisTimeTtlBlcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ThisTimeStockPrice {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.ThisTimeStockPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'ThisTimeStockPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.ThisTimeStockPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ThisStckPricRgdsDis {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.ThisStckPricRgdsDisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'ThisStckPricRgdsDis\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.ThisStckPricRgdsDisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long OfsThisTimeStock {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.OfsThisTimeStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'OfsThisTimeStock\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.OfsThisTimeStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long OfsThisStockTax {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.OfsThisStockTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'OfsThisStockTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.OfsThisStockTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ThisStckPricTotal {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.ThisStckPricTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'ThisStckPricTotal\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.ThisStckPricTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StckTtlPayBlc {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.StckTtlPayBlcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'StckTtlPayBlc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.StckTtlPayBlcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockSlipCount {
                get {
                    try {
                        return ((int)(this[this.tableBalanceList.StockSlipCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'StockSlipCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.StockSlipCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionCode {
                get {
                    try {
                        return ((string)(this[this.tableBalanceList.SectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'SectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.SectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SupplierCode {
                get {
                    try {
                        return ((long)(this[this.tableBalanceList.SupplierCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'SupplierCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.SupplierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierName {
                get {
                    try {
                        return ((string)(this[this.tableBalanceList.SupplierNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceList\' にある列 \'SupplierName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceList.SupplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddUpDateNull() {
                return this.IsNull(this.tableBalanceList.AddUpDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddUpDateNull() {
                this[this.tableBalanceList.AddUpDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastTimeBlcNull() {
                return this.IsNull(this.tableBalanceList.LastTimeBlcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastTimeBlcNull() {
                this[this.tableBalanceList.LastTimeBlcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisTimePayNrmlNull() {
                return this.IsNull(this.tableBalanceList.ThisTimePayNrmlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisTimePayNrmlNull() {
                this[this.tableBalanceList.ThisTimePayNrmlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisTimeTtlBlcNull() {
                return this.IsNull(this.tableBalanceList.ThisTimeTtlBlcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisTimeTtlBlcNull() {
                this[this.tableBalanceList.ThisTimeTtlBlcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisTimeStockPriceNull() {
                return this.IsNull(this.tableBalanceList.ThisTimeStockPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisTimeStockPriceNull() {
                this[this.tableBalanceList.ThisTimeStockPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisStckPricRgdsDisNull() {
                return this.IsNull(this.tableBalanceList.ThisStckPricRgdsDisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisStckPricRgdsDisNull() {
                this[this.tableBalanceList.ThisStckPricRgdsDisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfsThisTimeStockNull() {
                return this.IsNull(this.tableBalanceList.OfsThisTimeStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfsThisTimeStockNull() {
                this[this.tableBalanceList.OfsThisTimeStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfsThisStockTaxNull() {
                return this.IsNull(this.tableBalanceList.OfsThisStockTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfsThisStockTaxNull() {
                this[this.tableBalanceList.OfsThisStockTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisStckPricTotalNull() {
                return this.IsNull(this.tableBalanceList.ThisStckPricTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisStckPricTotalNull() {
                this[this.tableBalanceList.ThisStckPricTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStckTtlPayBlcNull() {
                return this.IsNull(this.tableBalanceList.StckTtlPayBlcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStckTtlPayBlcNull() {
                this[this.tableBalanceList.StckTtlPayBlcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockSlipCountNull() {
                return this.IsNull(this.tableBalanceList.StockSlipCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockSlipCountNull() {
                this[this.tableBalanceList.StockSlipCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionCodeNull() {
                return this.IsNull(this.tableBalanceList.SectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionCodeNull() {
                this[this.tableBalanceList.SectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCodeNull() {
                return this.IsNull(this.tableBalanceList.SupplierCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCodeNull() {
                this[this.tableBalanceList.SupplierCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierNameNull() {
                return this.IsNull(this.tableBalanceList.SupplierNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierNameNull() {
                this[this.tableBalanceList.SupplierNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BalanceTotalRow : global::System.Data.DataRow {
            
            private BalanceTotalDataTable tableBalanceTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BalanceTotalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBalanceTotal = ((BalanceTotalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockTtl2TmBfBlPay {
                get {
                    try {
                        return ((long)(this[this.tableBalanceTotal.StockTtl2TmBfBlPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'StockTtl2TmBfBlPay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.StockTtl2TmBfBlPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LastTimePayment {
                get {
                    try {
                        return ((long)(this[this.tableBalanceTotal.LastTimePaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'LastTimePayment\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.LastTimePaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockTotalPayBalance {
                get {
                    try {
                        return ((long)(this[this.tableBalanceTotal.StockTotalPayBalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'StockTotalPayBalance\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.StockTotalPayBalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AddUpYearMonth {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBalanceTotal.AddUpYearMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'AddUpYearMonth\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.AddUpYearMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SuppCTaxationCd {
                get {
                    try {
                        return ((int)(this[this.tableBalanceTotal.SuppCTaxationCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'SuppCTaxationCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.SuppCTaxationCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ThisStockPriceTotal {
                get {
                    try {
                        return ((long)(this[this.tableBalanceTotal.ThisStockPriceTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'ThisStockPriceTotal\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.ThisStockPriceTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long OfsThisStockTax {
                get {
                    try {
                        return ((long)(this[this.tableBalanceTotal.OfsThisStockTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'OfsThisStockTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.OfsThisStockTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ThisTimePayNrml {
                get {
                    try {
                        return ((long)(this[this.tableBalanceTotal.ThisTimePayNrmlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'ThisTimePayNrml\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.ThisTimePayNrmlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PaymentRemain {
                get {
                    try {
                        return ((long)(this[this.tableBalanceTotal.PaymentRemainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'PaymentRemain\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.PaymentRemainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StandardPrice_Total {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.StandardPrice_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'StandardPrice_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.StandardPrice_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StandardPrice_Avg {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.StandardPrice_AvgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'StandardPrice_Avg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.StandardPrice_AvgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockAmount_Total {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.StockAmount_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'StockAmount_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.StockAmount_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockAmount_Avg {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.StockAmount_AvgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'StockAmount_Avg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.StockAmount_AvgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SlipCount {
                get {
                    try {
                        return ((int)(this[this.tableBalanceTotal.SlipCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'SlipCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.SlipCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DetailCount {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.DetailCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'DetailCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.DetailCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Amount {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'Amount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ConsumeTaxAmount {
                get {
                    try {
                        return ((double)(this[this.tableBalanceTotal.ConsumeTaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'ConsumeTaxAmount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.ConsumeTaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ExistsTotal {
                get {
                    try {
                        return ((bool)(this[this.tableBalanceTotal.ExistsTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'ExistsTotal\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.ExistsTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TotalDay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBalanceTotal.TotalDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'TotalDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.TotalDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DmdStDay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBalanceTotal.DmdStDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'DmdStDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.DmdStDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsParent {
                get {
                    try {
                        return ((bool)(this[this.tableBalanceTotal.IsParentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'BalanceTotal\' にある列 \'IsParent\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableBalanceTotal.IsParentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockTtl2TmBfBlPayNull() {
                return this.IsNull(this.tableBalanceTotal.StockTtl2TmBfBlPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockTtl2TmBfBlPayNull() {
                this[this.tableBalanceTotal.StockTtl2TmBfBlPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastTimePaymentNull() {
                return this.IsNull(this.tableBalanceTotal.LastTimePaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastTimePaymentNull() {
                this[this.tableBalanceTotal.LastTimePaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockTotalPayBalanceNull() {
                return this.IsNull(this.tableBalanceTotal.StockTotalPayBalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockTotalPayBalanceNull() {
                this[this.tableBalanceTotal.StockTotalPayBalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddUpYearMonthNull() {
                return this.IsNull(this.tableBalanceTotal.AddUpYearMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddUpYearMonthNull() {
                this[this.tableBalanceTotal.AddUpYearMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppCTaxationCdNull() {
                return this.IsNull(this.tableBalanceTotal.SuppCTaxationCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppCTaxationCdNull() {
                this[this.tableBalanceTotal.SuppCTaxationCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisStockPriceTotalNull() {
                return this.IsNull(this.tableBalanceTotal.ThisStockPriceTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisStockPriceTotalNull() {
                this[this.tableBalanceTotal.ThisStockPriceTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfsThisStockTaxNull() {
                return this.IsNull(this.tableBalanceTotal.OfsThisStockTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfsThisStockTaxNull() {
                this[this.tableBalanceTotal.OfsThisStockTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThisTimePayNrmlNull() {
                return this.IsNull(this.tableBalanceTotal.ThisTimePayNrmlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThisTimePayNrmlNull() {
                this[this.tableBalanceTotal.ThisTimePayNrmlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentRemainNull() {
                return this.IsNull(this.tableBalanceTotal.PaymentRemainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentRemainNull() {
                this[this.tableBalanceTotal.PaymentRemainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardPrice_TotalNull() {
                return this.IsNull(this.tableBalanceTotal.StandardPrice_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardPrice_TotalNull() {
                this[this.tableBalanceTotal.StandardPrice_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardPrice_AvgNull() {
                return this.IsNull(this.tableBalanceTotal.StandardPrice_AvgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardPrice_AvgNull() {
                this[this.tableBalanceTotal.StandardPrice_AvgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockAmount_TotalNull() {
                return this.IsNull(this.tableBalanceTotal.StockAmount_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockAmount_TotalNull() {
                this[this.tableBalanceTotal.StockAmount_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockAmount_AvgNull() {
                return this.IsNull(this.tableBalanceTotal.StockAmount_AvgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockAmount_AvgNull() {
                this[this.tableBalanceTotal.StockAmount_AvgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipCountNull() {
                return this.IsNull(this.tableBalanceTotal.SlipCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipCountNull() {
                this[this.tableBalanceTotal.SlipCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailCountNull() {
                return this.IsNull(this.tableBalanceTotal.DetailCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailCountNull() {
                this[this.tableBalanceTotal.DetailCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableBalanceTotal.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableBalanceTotal.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsumeTaxAmountNull() {
                return this.IsNull(this.tableBalanceTotal.ConsumeTaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsumeTaxAmountNull() {
                this[this.tableBalanceTotal.ConsumeTaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExistsTotalNull() {
                return this.IsNull(this.tableBalanceTotal.ExistsTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExistsTotalNull() {
                this[this.tableBalanceTotal.ExistsTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalDayNull() {
                return this.IsNull(this.tableBalanceTotal.TotalDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalDayNull() {
                this[this.tableBalanceTotal.TotalDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDmdStDayNull() {
                return this.IsNull(this.tableBalanceTotal.DmdStDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDmdStDayNull() {
                this[this.tableBalanceTotal.DmdStDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsParentNull() {
                return this.IsNull(this.tableBalanceTotal.IsParentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsParentNull() {
                this[this.tableBalanceTotal.IsParentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RedSlipDetailRow : global::System.Data.DataRow {
            
            private RedSlipDetailDataTable tableRedSlipDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RedSlipDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRedSlipDetail = ((RedSlipDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableRedSlipDetail.RowNoColumn]));
                }
                set {
                    this[this.tableRedSlipDetail.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.GoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'GoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ShipmentCnt {
                get {
                    try {
                        return ((double)(this[this.tableRedSlipDetail.ShipmentCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'ShipmentCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.ShipmentCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RetGdsSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.RetGdsSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'RetGdsSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.RetGdsSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ReturnCnt {
                get {
                    try {
                        return ((double)(this[this.tableRedSlipDetail.ReturnCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'ReturnCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.ReturnCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockUnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableRedSlipDetail.StockUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'StockUnitPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.StockUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.SalesSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SalesSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerCode {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'CustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.WarehouseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'WarehouseCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseName {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.WarehouseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'WarehouseName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.WarehouseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.ShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'ShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.ShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ReturnedAfterCnt {
                get {
                    try {
                        return ((double)(this[this.tableRedSlipDetail.ReturnedAfterCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'ReturnedAfterCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.ReturnedAfterCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockRowNo {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.StockRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'StockRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.StockRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.SupplierSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'SupplierSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.SupplierSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsMakerCd {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.GoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'GoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockSlipCdDtlInt {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.StockSlipCdDtlIntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'StockSlipCdDtlInt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.StockSlipCdDtlIntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartySaleSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableRedSlipDetail.PartySaleSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'PartySaleSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.PartySaleSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DetailLogicalDelCd {
                get {
                    try {
                        return ((int)(this[this.tableRedSlipDetail.DetailLogicalDelCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RedSlipDetail\' にある列 \'DetailLogicalDelCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRedSlipDetail.DetailLogicalDelCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableRedSlipDetail.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableRedSlipDetail.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNull() {
                return this.IsNull(this.tableRedSlipDetail.GoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNull() {
                this[this.tableRedSlipDetail.GoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentCntNull() {
                return this.IsNull(this.tableRedSlipDetail.ShipmentCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentCntNull() {
                this[this.tableRedSlipDetail.ShipmentCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRetGdsSlipNumNull() {
                return this.IsNull(this.tableRedSlipDetail.RetGdsSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRetGdsSlipNumNull() {
                this[this.tableRedSlipDetail.RetGdsSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnCntNull() {
                return this.IsNull(this.tableRedSlipDetail.ReturnCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnCntNull() {
                this[this.tableRedSlipDetail.ReturnCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockUnitPriceNull() {
                return this.IsNull(this.tableRedSlipDetail.StockUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockUnitPriceNull() {
                this[this.tableRedSlipDetail.StockUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipNumNull() {
                return this.IsNull(this.tableRedSlipDetail.SalesSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipNumNull() {
                this[this.tableRedSlipDetail.SalesSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableRedSlipDetail.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableRedSlipDetail.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCodeNull() {
                return this.IsNull(this.tableRedSlipDetail.WarehouseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCodeNull() {
                this[this.tableRedSlipDetail.WarehouseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNameNull() {
                return this.IsNull(this.tableRedSlipDetail.WarehouseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNameNull() {
                this[this.tableRedSlipDetail.WarehouseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShelfNoNull() {
                return this.IsNull(this.tableRedSlipDetail.ShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShelfNoNull() {
                this[this.tableRedSlipDetail.ShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnedAfterCntNull() {
                return this.IsNull(this.tableRedSlipDetail.ReturnedAfterCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnedAfterCntNull() {
                this[this.tableRedSlipDetail.ReturnedAfterCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockRowNoNull() {
                return this.IsNull(this.tableRedSlipDetail.StockRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockRowNoNull() {
                this[this.tableRedSlipDetail.StockRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNoNull() {
                return this.IsNull(this.tableRedSlipDetail.SupplierSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNoNull() {
                this[this.tableRedSlipDetail.SupplierSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMakerCdNull() {
                return this.IsNull(this.tableRedSlipDetail.GoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMakerCdNull() {
                this[this.tableRedSlipDetail.GoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockSlipCdDtlIntNull() {
                return this.IsNull(this.tableRedSlipDetail.StockSlipCdDtlIntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockSlipCdDtlIntNull() {
                this[this.tableRedSlipDetail.StockSlipCdDtlIntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartySaleSlipNumNull() {
                return this.IsNull(this.tableRedSlipDetail.PartySaleSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartySaleSlipNumNull() {
                this[this.tableRedSlipDetail.PartySaleSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailLogicalDelCdNull() {
                return this.IsNull(this.tableRedSlipDetail.DetailLogicalDelCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailLogicalDelCdNull() {
                this[this.tableRedSlipDetail.DetailLogicalDelCdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RetGdsStcDetailRow : global::System.Data.DataRow {
            
            private RetGdsStcDetailDataTable tableRetGdsStcDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RetGdsStcDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRetGdsStcDetail = ((RetGdsStcDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableRetGdsStcDetail.RowNoColumn]));
                }
                set {
                    this[this.tableRetGdsStcDetail.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.SupplierSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'SupplierSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.SupplierSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockRowNo {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.StockRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'StockRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.StockRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AcceptAnOrderNo {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.AcceptAnOrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'AcceptAnOrderNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.AcceptAnOrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CommonSeqNo {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcDetail.CommonSeqNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'CommonSeqNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.CommonSeqNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockSlipDtlNum {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcDetail.StockSlipDtlNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'StockSlipDtlNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.StockSlipDtlNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierFormalSrc {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.SupplierFormalSrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'SupplierFormalSrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.SupplierFormalSrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockSlipDtlNumSrc {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcDetail.StockSlipDtlNumSrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'StockSlipDtlNumSrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.StockSlipDtlNumSrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AcptAnOdrStatusSync {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.AcptAnOdrStatusSyncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'AcptAnOdrStatusSync\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.AcptAnOdrStatusSyncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesSlipDtlNumSync {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcDetail.SalesSlipDtlNumSyncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'SalesSlipDtlNumSync\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.SalesSlipDtlNumSyncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubSectionCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.SubSectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'SubSectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.SubSectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockInputCode {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.StockInputCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'StockInputCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.StockInputCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockAgentCode {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.StockAgentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'StockAgentCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.StockAgentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsKindCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.GoodsKindCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'GoodsKindCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.GoodsKindCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerKanaName {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.MakerKanaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'MakerKanaName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.MakerKanaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CmpltMakerKanaName {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.CmpltMakerKanaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'CmpltMakerKanaName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.CmpltMakerKanaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNameKana {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.GoodsNameKanaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'GoodsNameKana\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.GoodsNameKanaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsLGroup {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.GoodsLGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'GoodsLGroup\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.GoodsLGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsLGroupName {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.GoodsLGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'GoodsLGroupName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.GoodsLGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMGroup {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.GoodsMGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'GoodsMGroup\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.GoodsMGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsMGroupName {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.GoodsMGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'GoodsMGroupName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.GoodsMGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLGroupName {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.BLGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'BLGroupName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.BLGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLGoodsFullName {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.BLGoodsFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'BLGoodsFullName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.BLGoodsFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EnterpriseGanreCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.EnterpriseGanreCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'EnterpriseGanreCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.EnterpriseGanreCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnterpriseGanreName {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.EnterpriseGanreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'EnterpriseGanreName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.EnterpriseGanreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsRateRank {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.GoodsRateRankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'GoodsRateRank\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.GoodsRateRankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustRateGrpCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.CustRateGrpCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'CustRateGrpCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.CustRateGrpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SuppRateGrpCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.SuppRateGrpCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'SuppRateGrpCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.SuppRateGrpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ListPriceTaxIncFl {
                get {
                    try {
                        return ((double)(this[this.tableRetGdsStcDetail.ListPriceTaxIncFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'ListPriceTaxIncFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.ListPriceTaxIncFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockRate {
                get {
                    try {
                        return ((double)(this[this.tableRetGdsStcDetail.StockRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'StockRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.StockRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RateSectStckUnPrc {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.RateSectStckUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'RateSectStckUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.RateSectStckUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RateDivStckUnPrc {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.RateDivStckUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'RateDivStckUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.RateDivStckUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnPrcCalcCdStckUnPrc {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.UnPrcCalcCdStckUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'UnPrcCalcCdStckUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.UnPrcCalcCdStckUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PriceCdStckUnPrc {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.PriceCdStckUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'PriceCdStckUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.PriceCdStckUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StdUnPrcStckUnPrc {
                get {
                    try {
                        return ((double)(this[this.tableRetGdsStcDetail.StdUnPrcStckUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'StdUnPrcStckUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.StdUnPrcStckUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FracProcUnitStcUnPrc {
                get {
                    try {
                        return ((double)(this[this.tableRetGdsStcDetail.FracProcUnitStcUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'FracProcUnitStcUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.FracProcUnitStcUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FracProcStckUnPrc {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.FracProcStckUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'FracProcStckUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.FracProcStckUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockUnitTaxPriceFl {
                get {
                    try {
                        return ((double)(this[this.tableRetGdsStcDetail.StockUnitTaxPriceFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'StockUnitTaxPriceFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.StockUnitTaxPriceFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockUnitChngDiv {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.StockUnitChngDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'StockUnitChngDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.StockUnitChngDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RateBLGoodsCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.RateBLGoodsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'RateBLGoodsCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.RateBLGoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RateBLGoodsName {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.RateBLGoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'RateBLGoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.RateBLGoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RateGoodsRateGrpCd {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.RateGoodsRateGrpCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'RateGoodsRateGrpCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.RateGoodsRateGrpCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RateGoodsRateGrpNm {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.RateGoodsRateGrpNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'RateGoodsRateGrpNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.RateGoodsRateGrpNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RateBLGroupCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.RateBLGroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'RateBLGroupCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.RateBLGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RateBLGroupName {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.RateBLGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'RateBLGroupName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.RateBLGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OrderCnt {
                get {
                    try {
                        return ((double)(this[this.tableRetGdsStcDetail.OrderCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'OrderCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.OrderCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OrderAdjustCnt {
                get {
                    try {
                        return ((double)(this[this.tableRetGdsStcDetail.OrderAdjustCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'OrderAdjustCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.OrderAdjustCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double OrderRemainCnt {
                get {
                    try {
                        return ((double)(this[this.tableRetGdsStcDetail.OrderRemainCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'OrderRemainCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.OrderRemainCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RemainCntUpdDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRetGdsStcDetail.RemainCntUpdDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'RemainCntUpdDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.RemainCntUpdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockPriceTaxExc {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcDetail.StockPriceTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'StockPriceTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.StockPriceTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockPriceTaxInc {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcDetail.StockPriceTaxIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'StockPriceTaxInc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.StockPriceTaxIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockGoodsCd {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.StockGoodsCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'StockGoodsCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.StockGoodsCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TaxationCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.TaxationCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'TaxationCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.TaxationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockDtiSlipNote1 {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.StockDtiSlipNote1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'StockDtiSlipNote1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.StockDtiSlipNote1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesCustomerCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.SalesCustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'SalesCustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.SalesCustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCustomerSnm {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.SalesCustomerSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'SalesCustomerSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.SalesCustomerSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipMemo1 {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.SlipMemo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'SlipMemo1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.SlipMemo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipMemo2 {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.SlipMemo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'SlipMemo2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.SlipMemo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipMemo3 {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.SlipMemo3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'SlipMemo3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.SlipMemo3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsideMemo1 {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.InsideMemo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'InsideMemo1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.InsideMemo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsideMemo2 {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.InsideMemo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'InsideMemo2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.InsideMemo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsideMemo3 {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.InsideMemo3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'InsideMemo3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.InsideMemo3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AddresseeCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.AddresseeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'AddresseeCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.AddresseeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseeName {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.AddresseeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'AddresseeName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.AddresseeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DirectSendingCd {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.DirectSendingCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'DirectSendingCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.DirectSendingCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderNumber {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcDetail.OrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'OrderNumber\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.OrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WayToOrder {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.WayToOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'WayToOrder\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.WayToOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeliGdsCmpltDueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRetGdsStcDetail.DeliGdsCmpltDueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'DeliGdsCmpltDueDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.DeliGdsCmpltDueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ExpectDeliveryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRetGdsStcDetail.ExpectDeliveryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'ExpectDeliveryDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.ExpectDeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OrderDataCreateDiv {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.OrderDataCreateDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'OrderDataCreateDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.OrderDataCreateDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OrderDataCreateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRetGdsStcDetail.OrderDataCreateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'OrderDataCreateDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.OrderDataCreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OrderFormIssuedDiv {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcDetail.OrderFormIssuedDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcDetail\' にある列 \'OrderFormIssuedDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcDetail.OrderFormIssuedDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNoNull() {
                return this.IsNull(this.tableRetGdsStcDetail.SupplierSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNoNull() {
                this[this.tableRetGdsStcDetail.SupplierSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockRowNoNull() {
                return this.IsNull(this.tableRetGdsStcDetail.StockRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockRowNoNull() {
                this[this.tableRetGdsStcDetail.StockRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcceptAnOrderNoNull() {
                return this.IsNull(this.tableRetGdsStcDetail.AcceptAnOrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcceptAnOrderNoNull() {
                this[this.tableRetGdsStcDetail.AcceptAnOrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommonSeqNoNull() {
                return this.IsNull(this.tableRetGdsStcDetail.CommonSeqNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommonSeqNoNull() {
                this[this.tableRetGdsStcDetail.CommonSeqNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockSlipDtlNumNull() {
                return this.IsNull(this.tableRetGdsStcDetail.StockSlipDtlNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockSlipDtlNumNull() {
                this[this.tableRetGdsStcDetail.StockSlipDtlNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierFormalSrcNull() {
                return this.IsNull(this.tableRetGdsStcDetail.SupplierFormalSrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierFormalSrcNull() {
                this[this.tableRetGdsStcDetail.SupplierFormalSrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockSlipDtlNumSrcNull() {
                return this.IsNull(this.tableRetGdsStcDetail.StockSlipDtlNumSrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockSlipDtlNumSrcNull() {
                this[this.tableRetGdsStcDetail.StockSlipDtlNumSrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcptAnOdrStatusSyncNull() {
                return this.IsNull(this.tableRetGdsStcDetail.AcptAnOdrStatusSyncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcptAnOdrStatusSyncNull() {
                this[this.tableRetGdsStcDetail.AcptAnOdrStatusSyncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipDtlNumSyncNull() {
                return this.IsNull(this.tableRetGdsStcDetail.SalesSlipDtlNumSyncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipDtlNumSyncNull() {
                this[this.tableRetGdsStcDetail.SalesSlipDtlNumSyncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubSectionCodeNull() {
                return this.IsNull(this.tableRetGdsStcDetail.SubSectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubSectionCodeNull() {
                this[this.tableRetGdsStcDetail.SubSectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockInputCodeNull() {
                return this.IsNull(this.tableRetGdsStcDetail.StockInputCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockInputCodeNull() {
                this[this.tableRetGdsStcDetail.StockInputCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockAgentCodeNull() {
                return this.IsNull(this.tableRetGdsStcDetail.StockAgentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockAgentCodeNull() {
                this[this.tableRetGdsStcDetail.StockAgentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsKindCodeNull() {
                return this.IsNull(this.tableRetGdsStcDetail.GoodsKindCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsKindCodeNull() {
                this[this.tableRetGdsStcDetail.GoodsKindCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerKanaNameNull() {
                return this.IsNull(this.tableRetGdsStcDetail.MakerKanaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerKanaNameNull() {
                this[this.tableRetGdsStcDetail.MakerKanaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCmpltMakerKanaNameNull() {
                return this.IsNull(this.tableRetGdsStcDetail.CmpltMakerKanaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCmpltMakerKanaNameNull() {
                this[this.tableRetGdsStcDetail.CmpltMakerKanaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameKanaNull() {
                return this.IsNull(this.tableRetGdsStcDetail.GoodsNameKanaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameKanaNull() {
                this[this.tableRetGdsStcDetail.GoodsNameKanaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsLGroupNull() {
                return this.IsNull(this.tableRetGdsStcDetail.GoodsLGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsLGroupNull() {
                this[this.tableRetGdsStcDetail.GoodsLGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsLGroupNameNull() {
                return this.IsNull(this.tableRetGdsStcDetail.GoodsLGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsLGroupNameNull() {
                this[this.tableRetGdsStcDetail.GoodsLGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMGroupNull() {
                return this.IsNull(this.tableRetGdsStcDetail.GoodsMGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMGroupNull() {
                this[this.tableRetGdsStcDetail.GoodsMGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMGroupNameNull() {
                return this.IsNull(this.tableRetGdsStcDetail.GoodsMGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMGroupNameNull() {
                this[this.tableRetGdsStcDetail.GoodsMGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGroupNameNull() {
                return this.IsNull(this.tableRetGdsStcDetail.BLGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGroupNameNull() {
                this[this.tableRetGdsStcDetail.BLGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGoodsFullNameNull() {
                return this.IsNull(this.tableRetGdsStcDetail.BLGoodsFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGoodsFullNameNull() {
                this[this.tableRetGdsStcDetail.BLGoodsFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnterpriseGanreCodeNull() {
                return this.IsNull(this.tableRetGdsStcDetail.EnterpriseGanreCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnterpriseGanreCodeNull() {
                this[this.tableRetGdsStcDetail.EnterpriseGanreCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnterpriseGanreNameNull() {
                return this.IsNull(this.tableRetGdsStcDetail.EnterpriseGanreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnterpriseGanreNameNull() {
                this[this.tableRetGdsStcDetail.EnterpriseGanreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsRateRankNull() {
                return this.IsNull(this.tableRetGdsStcDetail.GoodsRateRankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsRateRankNull() {
                this[this.tableRetGdsStcDetail.GoodsRateRankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustRateGrpCodeNull() {
                return this.IsNull(this.tableRetGdsStcDetail.CustRateGrpCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustRateGrpCodeNull() {
                this[this.tableRetGdsStcDetail.CustRateGrpCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppRateGrpCodeNull() {
                return this.IsNull(this.tableRetGdsStcDetail.SuppRateGrpCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppRateGrpCodeNull() {
                this[this.tableRetGdsStcDetail.SuppRateGrpCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceTaxIncFlNull() {
                return this.IsNull(this.tableRetGdsStcDetail.ListPriceTaxIncFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceTaxIncFlNull() {
                this[this.tableRetGdsStcDetail.ListPriceTaxIncFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockRateNull() {
                return this.IsNull(this.tableRetGdsStcDetail.StockRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockRateNull() {
                this[this.tableRetGdsStcDetail.StockRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateSectStckUnPrcNull() {
                return this.IsNull(this.tableRetGdsStcDetail.RateSectStckUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateSectStckUnPrcNull() {
                this[this.tableRetGdsStcDetail.RateSectStckUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateDivStckUnPrcNull() {
                return this.IsNull(this.tableRetGdsStcDetail.RateDivStckUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateDivStckUnPrcNull() {
                this[this.tableRetGdsStcDetail.RateDivStckUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnPrcCalcCdStckUnPrcNull() {
                return this.IsNull(this.tableRetGdsStcDetail.UnPrcCalcCdStckUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnPrcCalcCdStckUnPrcNull() {
                this[this.tableRetGdsStcDetail.UnPrcCalcCdStckUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceCdStckUnPrcNull() {
                return this.IsNull(this.tableRetGdsStcDetail.PriceCdStckUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceCdStckUnPrcNull() {
                this[this.tableRetGdsStcDetail.PriceCdStckUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStdUnPrcStckUnPrcNull() {
                return this.IsNull(this.tableRetGdsStcDetail.StdUnPrcStckUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStdUnPrcStckUnPrcNull() {
                this[this.tableRetGdsStcDetail.StdUnPrcStckUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFracProcUnitStcUnPrcNull() {
                return this.IsNull(this.tableRetGdsStcDetail.FracProcUnitStcUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFracProcUnitStcUnPrcNull() {
                this[this.tableRetGdsStcDetail.FracProcUnitStcUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFracProcStckUnPrcNull() {
                return this.IsNull(this.tableRetGdsStcDetail.FracProcStckUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFracProcStckUnPrcNull() {
                this[this.tableRetGdsStcDetail.FracProcStckUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockUnitTaxPriceFlNull() {
                return this.IsNull(this.tableRetGdsStcDetail.StockUnitTaxPriceFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockUnitTaxPriceFlNull() {
                this[this.tableRetGdsStcDetail.StockUnitTaxPriceFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockUnitChngDivNull() {
                return this.IsNull(this.tableRetGdsStcDetail.StockUnitChngDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockUnitChngDivNull() {
                this[this.tableRetGdsStcDetail.StockUnitChngDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateBLGoodsCodeNull() {
                return this.IsNull(this.tableRetGdsStcDetail.RateBLGoodsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateBLGoodsCodeNull() {
                this[this.tableRetGdsStcDetail.RateBLGoodsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateBLGoodsNameNull() {
                return this.IsNull(this.tableRetGdsStcDetail.RateBLGoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateBLGoodsNameNull() {
                this[this.tableRetGdsStcDetail.RateBLGoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateGoodsRateGrpCdNull() {
                return this.IsNull(this.tableRetGdsStcDetail.RateGoodsRateGrpCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateGoodsRateGrpCdNull() {
                this[this.tableRetGdsStcDetail.RateGoodsRateGrpCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateGoodsRateGrpNmNull() {
                return this.IsNull(this.tableRetGdsStcDetail.RateGoodsRateGrpNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateGoodsRateGrpNmNull() {
                this[this.tableRetGdsStcDetail.RateGoodsRateGrpNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateBLGroupCodeNull() {
                return this.IsNull(this.tableRetGdsStcDetail.RateBLGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateBLGroupCodeNull() {
                this[this.tableRetGdsStcDetail.RateBLGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateBLGroupNameNull() {
                return this.IsNull(this.tableRetGdsStcDetail.RateBLGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateBLGroupNameNull() {
                this[this.tableRetGdsStcDetail.RateBLGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderCntNull() {
                return this.IsNull(this.tableRetGdsStcDetail.OrderCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderCntNull() {
                this[this.tableRetGdsStcDetail.OrderCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderAdjustCntNull() {
                return this.IsNull(this.tableRetGdsStcDetail.OrderAdjustCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderAdjustCntNull() {
                this[this.tableRetGdsStcDetail.OrderAdjustCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderRemainCntNull() {
                return this.IsNull(this.tableRetGdsStcDetail.OrderRemainCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderRemainCntNull() {
                this[this.tableRetGdsStcDetail.OrderRemainCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemainCntUpdDateNull() {
                return this.IsNull(this.tableRetGdsStcDetail.RemainCntUpdDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemainCntUpdDateNull() {
                this[this.tableRetGdsStcDetail.RemainCntUpdDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockPriceTaxExcNull() {
                return this.IsNull(this.tableRetGdsStcDetail.StockPriceTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockPriceTaxExcNull() {
                this[this.tableRetGdsStcDetail.StockPriceTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockPriceTaxIncNull() {
                return this.IsNull(this.tableRetGdsStcDetail.StockPriceTaxIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockPriceTaxIncNull() {
                this[this.tableRetGdsStcDetail.StockPriceTaxIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockGoodsCdNull() {
                return this.IsNull(this.tableRetGdsStcDetail.StockGoodsCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockGoodsCdNull() {
                this[this.tableRetGdsStcDetail.StockGoodsCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxationCodeNull() {
                return this.IsNull(this.tableRetGdsStcDetail.TaxationCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxationCodeNull() {
                this[this.tableRetGdsStcDetail.TaxationCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockDtiSlipNote1Null() {
                return this.IsNull(this.tableRetGdsStcDetail.StockDtiSlipNote1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockDtiSlipNote1Null() {
                this[this.tableRetGdsStcDetail.StockDtiSlipNote1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCustomerCodeNull() {
                return this.IsNull(this.tableRetGdsStcDetail.SalesCustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCustomerCodeNull() {
                this[this.tableRetGdsStcDetail.SalesCustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCustomerSnmNull() {
                return this.IsNull(this.tableRetGdsStcDetail.SalesCustomerSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCustomerSnmNull() {
                this[this.tableRetGdsStcDetail.SalesCustomerSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipMemo1Null() {
                return this.IsNull(this.tableRetGdsStcDetail.SlipMemo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipMemo1Null() {
                this[this.tableRetGdsStcDetail.SlipMemo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipMemo2Null() {
                return this.IsNull(this.tableRetGdsStcDetail.SlipMemo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipMemo2Null() {
                this[this.tableRetGdsStcDetail.SlipMemo2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipMemo3Null() {
                return this.IsNull(this.tableRetGdsStcDetail.SlipMemo3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipMemo3Null() {
                this[this.tableRetGdsStcDetail.SlipMemo3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsideMemo1Null() {
                return this.IsNull(this.tableRetGdsStcDetail.InsideMemo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsideMemo1Null() {
                this[this.tableRetGdsStcDetail.InsideMemo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsideMemo2Null() {
                return this.IsNull(this.tableRetGdsStcDetail.InsideMemo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsideMemo2Null() {
                this[this.tableRetGdsStcDetail.InsideMemo2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsideMemo3Null() {
                return this.IsNull(this.tableRetGdsStcDetail.InsideMemo3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsideMemo3Null() {
                this[this.tableRetGdsStcDetail.InsideMemo3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeCodeNull() {
                return this.IsNull(this.tableRetGdsStcDetail.AddresseeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeCodeNull() {
                this[this.tableRetGdsStcDetail.AddresseeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeNameNull() {
                return this.IsNull(this.tableRetGdsStcDetail.AddresseeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeNameNull() {
                this[this.tableRetGdsStcDetail.AddresseeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDirectSendingCdNull() {
                return this.IsNull(this.tableRetGdsStcDetail.DirectSendingCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDirectSendingCdNull() {
                this[this.tableRetGdsStcDetail.DirectSendingCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderNumberNull() {
                return this.IsNull(this.tableRetGdsStcDetail.OrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderNumberNull() {
                this[this.tableRetGdsStcDetail.OrderNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWayToOrderNull() {
                return this.IsNull(this.tableRetGdsStcDetail.WayToOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWayToOrderNull() {
                this[this.tableRetGdsStcDetail.WayToOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliGdsCmpltDueDateNull() {
                return this.IsNull(this.tableRetGdsStcDetail.DeliGdsCmpltDueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliGdsCmpltDueDateNull() {
                this[this.tableRetGdsStcDetail.DeliGdsCmpltDueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpectDeliveryDateNull() {
                return this.IsNull(this.tableRetGdsStcDetail.ExpectDeliveryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpectDeliveryDateNull() {
                this[this.tableRetGdsStcDetail.ExpectDeliveryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderDataCreateDivNull() {
                return this.IsNull(this.tableRetGdsStcDetail.OrderDataCreateDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderDataCreateDivNull() {
                this[this.tableRetGdsStcDetail.OrderDataCreateDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderDataCreateDateNull() {
                return this.IsNull(this.tableRetGdsStcDetail.OrderDataCreateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderDataCreateDateNull() {
                this[this.tableRetGdsStcDetail.OrderDataCreateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderFormIssuedDivNull() {
                return this.IsNull(this.tableRetGdsStcDetail.OrderFormIssuedDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderFormIssuedDivNull() {
                this[this.tableRetGdsStcDetail.OrderFormIssuedDivColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RetGdsStcListRow : global::System.Data.DataRow {
            
            private RetGdsStcListDataTable tableRetGdsStcList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RetGdsStcListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRetGdsStcList = ((RetGdsStcListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableRetGdsStcList.RowNoColumn]));
                }
                set {
                    this[this.tableRetGdsStcList.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.SupplierSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'SupplierSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.SupplierSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LogicalDeleteCd {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.LogicalDeleteCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'LogicalDeleteCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.LogicalDeleteCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubSectionCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.SubSectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'SubSectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.SubSectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockSectionCd {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.StockSectionCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StockSectionCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StockSectionCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SupplierConsTaxRate {
                get {
                    try {
                        return ((double)(this[this.tableRetGdsStcList.SupplierConsTaxRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'SupplierConsTaxRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.SupplierConsTaxRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InputDay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRetGdsStcList.InputDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'InputDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.InputDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ArrivalGoodsDay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRetGdsStcList.ArrivalGoodsDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'ArrivalGoodsDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.ArrivalGoodsDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DebitNLnkSuppSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.DebitNLnkSuppSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'DebitNLnkSuppSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.DebitNLnkSuppSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockGoodsCd {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.StockGoodsCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StockGoodsCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StockGoodsCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockAddUpSectionCd {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.StockAddUpSectionCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StockAddUpSectionCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StockAddUpSectionCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockSlipUpdateCd {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.StockSlipUpdateCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StockSlipUpdateCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StockSlipUpdateCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DelayPaymentDiv {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.DelayPaymentDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'DelayPaymentDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.DelayPaymentDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PayeeCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.PayeeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'PayeeCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.PayeeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayeeSnm {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.PayeeSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'PayeeSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.PayeeSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierNm1 {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.SupplierNm1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'SupplierNm1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.SupplierNm1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierNm2 {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.SupplierNm2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'SupplierNm2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.SupplierNm2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BusinessTypeCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.BusinessTypeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'BusinessTypeCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.BusinessTypeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessTypeName {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.BusinessTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'BusinessTypeName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.BusinessTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesAreaCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.SalesAreaCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'SalesAreaCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.SalesAreaCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesAreaName {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.SalesAreaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'SalesAreaName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.SalesAreaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockInputCode {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.StockInputCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StockInputCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StockInputCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockAgentCode {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.StockAgentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StockAgentCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StockAgentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SuppTtlAmntDspWayCd {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.SuppTtlAmntDspWayCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'SuppTtlAmntDspWayCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.SuppTtlAmntDspWayCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TtlAmntDispRateApy {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.TtlAmntDispRateApyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'TtlAmntDispRateApy\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.TtlAmntDispRateApyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockTotalPrice {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.StockTotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StockTotalPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StockTotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockSubttlPrice {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.StockSubttlPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StockSubttlPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StockSubttlPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockTtlPricTaxInc {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.StockTtlPricTaxIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StockTtlPricTaxInc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StockTtlPricTaxIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockNetPrice {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.StockNetPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StockNetPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StockNetPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TtlItdedStcOutTax {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.TtlItdedStcOutTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'TtlItdedStcOutTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.TtlItdedStcOutTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TtlItdedStcInTax {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.TtlItdedStcInTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'TtlItdedStcInTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.TtlItdedStcInTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TtlItdedStcTaxFree {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.TtlItdedStcTaxFreeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'TtlItdedStcTaxFree\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.TtlItdedStcTaxFreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockOutTax {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.StockOutTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StockOutTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StockOutTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StckPrcConsTaxInclu {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.StckPrcConsTaxIncluColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StckPrcConsTaxInclu\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StckPrcConsTaxIncluColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StckDisTtlTaxExc {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.StckDisTtlTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StckDisTtlTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StckDisTtlTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItdedStockDisOutTax {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.ItdedStockDisOutTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'ItdedStockDisOutTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.ItdedStockDisOutTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItdedStockDisInTax {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.ItdedStockDisInTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'ItdedStockDisInTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.ItdedStockDisInTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItdedStockDisTaxFre {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.ItdedStockDisTaxFreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'ItdedStockDisTaxFre\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.ItdedStockDisTaxFreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockDisOutTax {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.StockDisOutTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StockDisOutTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StockDisOutTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StckDisTtlTaxInclu {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.StckDisTtlTaxIncluColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StckDisTtlTaxInclu\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StckDisTtlTaxIncluColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TaxAdjust {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.TaxAdjustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'TaxAdjust\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.TaxAdjustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long BalanceAdjust {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.BalanceAdjustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'BalanceAdjust\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.BalanceAdjustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SuppCTaxLayCd {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.SuppCTaxLayCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'SuppCTaxLayCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.SuppCTaxLayCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long AccPayConsTax {
                get {
                    try {
                        return ((long)(this[this.tableRetGdsStcList.AccPayConsTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'AccPayConsTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.AccPayConsTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockFractionProcCd {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.StockFractionProcCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StockFractionProcCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StockFractionProcCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AutoPayment {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.AutoPaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'AutoPayment\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.AutoPaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AutoPaySlipNum {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.AutoPaySlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'AutoPaySlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.AutoPaySlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DetailRowCount {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.DetailRowCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'DetailRowCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.DetailRowCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EdiSendDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRetGdsStcList.EdiSendDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'EdiSendDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.EdiSendDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EdiTakeInDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRetGdsStcList.EdiTakeInDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'EdiTakeInDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.EdiTakeInDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SlipPrintDivCd {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.SlipPrintDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'SlipPrintDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.SlipPrintDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SlipPrintFinishCd {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.SlipPrintFinishCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'SlipPrintFinishCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.SlipPrintFinishCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StockSlipPrintDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRetGdsStcList.StockSlipPrintDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'StockSlipPrintDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.StockSlipPrintDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipPrtSetPaperId {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.SlipPrtSetPaperIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'SlipPrtSetPaperId\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.SlipPrtSetPaperIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SlipAddressDiv {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.SlipAddressDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'SlipAddressDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.SlipAddressDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AddresseeCode {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.AddresseeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'AddresseeCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.AddresseeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseeName {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.AddresseeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'AddresseeName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.AddresseeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseeName2 {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.AddresseeName2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'AddresseeName2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.AddresseeName2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseePostNo {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.AddresseePostNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'AddresseePostNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.AddresseePostNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseeAddr1 {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.AddresseeAddr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'AddresseeAddr1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.AddresseeAddr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseeAddr3 {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.AddresseeAddr3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'AddresseeAddr3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.AddresseeAddr3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseeAddr4 {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.AddresseeAddr4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'AddresseeAddr4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.AddresseeAddr4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseeTelNo {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.AddresseeTelNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'AddresseeTelNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.AddresseeTelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseeFaxNo {
                get {
                    try {
                        return ((string)(this[this.tableRetGdsStcList.AddresseeFaxNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'AddresseeFaxNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.AddresseeFaxNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DirectSendingCd {
                get {
                    try {
                        return ((int)(this[this.tableRetGdsStcList.DirectSendingCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'RetGdsStcList\' にある列 \'DirectSendingCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableRetGdsStcList.DirectSendingCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNoNull() {
                return this.IsNull(this.tableRetGdsStcList.SupplierSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNoNull() {
                this[this.tableRetGdsStcList.SupplierSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogicalDeleteCdNull() {
                return this.IsNull(this.tableRetGdsStcList.LogicalDeleteCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogicalDeleteCdNull() {
                this[this.tableRetGdsStcList.LogicalDeleteCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubSectionCodeNull() {
                return this.IsNull(this.tableRetGdsStcList.SubSectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubSectionCodeNull() {
                this[this.tableRetGdsStcList.SubSectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockSectionCdNull() {
                return this.IsNull(this.tableRetGdsStcList.StockSectionCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockSectionCdNull() {
                this[this.tableRetGdsStcList.StockSectionCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierConsTaxRateNull() {
                return this.IsNull(this.tableRetGdsStcList.SupplierConsTaxRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierConsTaxRateNull() {
                this[this.tableRetGdsStcList.SupplierConsTaxRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputDayNull() {
                return this.IsNull(this.tableRetGdsStcList.InputDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputDayNull() {
                this[this.tableRetGdsStcList.InputDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalGoodsDayNull() {
                return this.IsNull(this.tableRetGdsStcList.ArrivalGoodsDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalGoodsDayNull() {
                this[this.tableRetGdsStcList.ArrivalGoodsDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNLnkSuppSlipNoNull() {
                return this.IsNull(this.tableRetGdsStcList.DebitNLnkSuppSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNLnkSuppSlipNoNull() {
                this[this.tableRetGdsStcList.DebitNLnkSuppSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockGoodsCdNull() {
                return this.IsNull(this.tableRetGdsStcList.StockGoodsCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockGoodsCdNull() {
                this[this.tableRetGdsStcList.StockGoodsCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockAddUpSectionCdNull() {
                return this.IsNull(this.tableRetGdsStcList.StockAddUpSectionCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockAddUpSectionCdNull() {
                this[this.tableRetGdsStcList.StockAddUpSectionCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockSlipUpdateCdNull() {
                return this.IsNull(this.tableRetGdsStcList.StockSlipUpdateCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockSlipUpdateCdNull() {
                this[this.tableRetGdsStcList.StockSlipUpdateCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDelayPaymentDivNull() {
                return this.IsNull(this.tableRetGdsStcList.DelayPaymentDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDelayPaymentDivNull() {
                this[this.tableRetGdsStcList.DelayPaymentDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayeeCodeNull() {
                return this.IsNull(this.tableRetGdsStcList.PayeeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayeeCodeNull() {
                this[this.tableRetGdsStcList.PayeeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayeeSnmNull() {
                return this.IsNull(this.tableRetGdsStcList.PayeeSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayeeSnmNull() {
                this[this.tableRetGdsStcList.PayeeSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierNm1Null() {
                return this.IsNull(this.tableRetGdsStcList.SupplierNm1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierNm1Null() {
                this[this.tableRetGdsStcList.SupplierNm1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierNm2Null() {
                return this.IsNull(this.tableRetGdsStcList.SupplierNm2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierNm2Null() {
                this[this.tableRetGdsStcList.SupplierNm2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessTypeCodeNull() {
                return this.IsNull(this.tableRetGdsStcList.BusinessTypeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessTypeCodeNull() {
                this[this.tableRetGdsStcList.BusinessTypeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessTypeNameNull() {
                return this.IsNull(this.tableRetGdsStcList.BusinessTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessTypeNameNull() {
                this[this.tableRetGdsStcList.BusinessTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesAreaCodeNull() {
                return this.IsNull(this.tableRetGdsStcList.SalesAreaCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesAreaCodeNull() {
                this[this.tableRetGdsStcList.SalesAreaCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesAreaNameNull() {
                return this.IsNull(this.tableRetGdsStcList.SalesAreaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesAreaNameNull() {
                this[this.tableRetGdsStcList.SalesAreaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockInputCodeNull() {
                return this.IsNull(this.tableRetGdsStcList.StockInputCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockInputCodeNull() {
                this[this.tableRetGdsStcList.StockInputCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockAgentCodeNull() {
                return this.IsNull(this.tableRetGdsStcList.StockAgentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockAgentCodeNull() {
                this[this.tableRetGdsStcList.StockAgentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppTtlAmntDspWayCdNull() {
                return this.IsNull(this.tableRetGdsStcList.SuppTtlAmntDspWayCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppTtlAmntDspWayCdNull() {
                this[this.tableRetGdsStcList.SuppTtlAmntDspWayCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTtlAmntDispRateApyNull() {
                return this.IsNull(this.tableRetGdsStcList.TtlAmntDispRateApyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTtlAmntDispRateApyNull() {
                this[this.tableRetGdsStcList.TtlAmntDispRateApyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockTotalPriceNull() {
                return this.IsNull(this.tableRetGdsStcList.StockTotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockTotalPriceNull() {
                this[this.tableRetGdsStcList.StockTotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockSubttlPriceNull() {
                return this.IsNull(this.tableRetGdsStcList.StockSubttlPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockSubttlPriceNull() {
                this[this.tableRetGdsStcList.StockSubttlPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockTtlPricTaxIncNull() {
                return this.IsNull(this.tableRetGdsStcList.StockTtlPricTaxIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockTtlPricTaxIncNull() {
                this[this.tableRetGdsStcList.StockTtlPricTaxIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockNetPriceNull() {
                return this.IsNull(this.tableRetGdsStcList.StockNetPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockNetPriceNull() {
                this[this.tableRetGdsStcList.StockNetPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTtlItdedStcOutTaxNull() {
                return this.IsNull(this.tableRetGdsStcList.TtlItdedStcOutTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTtlItdedStcOutTaxNull() {
                this[this.tableRetGdsStcList.TtlItdedStcOutTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTtlItdedStcInTaxNull() {
                return this.IsNull(this.tableRetGdsStcList.TtlItdedStcInTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTtlItdedStcInTaxNull() {
                this[this.tableRetGdsStcList.TtlItdedStcInTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTtlItdedStcTaxFreeNull() {
                return this.IsNull(this.tableRetGdsStcList.TtlItdedStcTaxFreeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTtlItdedStcTaxFreeNull() {
                this[this.tableRetGdsStcList.TtlItdedStcTaxFreeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockOutTaxNull() {
                return this.IsNull(this.tableRetGdsStcList.StockOutTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockOutTaxNull() {
                this[this.tableRetGdsStcList.StockOutTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStckPrcConsTaxIncluNull() {
                return this.IsNull(this.tableRetGdsStcList.StckPrcConsTaxIncluColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStckPrcConsTaxIncluNull() {
                this[this.tableRetGdsStcList.StckPrcConsTaxIncluColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStckDisTtlTaxExcNull() {
                return this.IsNull(this.tableRetGdsStcList.StckDisTtlTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStckDisTtlTaxExcNull() {
                this[this.tableRetGdsStcList.StckDisTtlTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItdedStockDisOutTaxNull() {
                return this.IsNull(this.tableRetGdsStcList.ItdedStockDisOutTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItdedStockDisOutTaxNull() {
                this[this.tableRetGdsStcList.ItdedStockDisOutTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItdedStockDisInTaxNull() {
                return this.IsNull(this.tableRetGdsStcList.ItdedStockDisInTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItdedStockDisInTaxNull() {
                this[this.tableRetGdsStcList.ItdedStockDisInTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItdedStockDisTaxFreNull() {
                return this.IsNull(this.tableRetGdsStcList.ItdedStockDisTaxFreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItdedStockDisTaxFreNull() {
                this[this.tableRetGdsStcList.ItdedStockDisTaxFreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockDisOutTaxNull() {
                return this.IsNull(this.tableRetGdsStcList.StockDisOutTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockDisOutTaxNull() {
                this[this.tableRetGdsStcList.StockDisOutTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStckDisTtlTaxIncluNull() {
                return this.IsNull(this.tableRetGdsStcList.StckDisTtlTaxIncluColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStckDisTtlTaxIncluNull() {
                this[this.tableRetGdsStcList.StckDisTtlTaxIncluColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAdjustNull() {
                return this.IsNull(this.tableRetGdsStcList.TaxAdjustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAdjustNull() {
                this[this.tableRetGdsStcList.TaxAdjustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceAdjustNull() {
                return this.IsNull(this.tableRetGdsStcList.BalanceAdjustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceAdjustNull() {
                this[this.tableRetGdsStcList.BalanceAdjustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppCTaxLayCdNull() {
                return this.IsNull(this.tableRetGdsStcList.SuppCTaxLayCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppCTaxLayCdNull() {
                this[this.tableRetGdsStcList.SuppCTaxLayCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccPayConsTaxNull() {
                return this.IsNull(this.tableRetGdsStcList.AccPayConsTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccPayConsTaxNull() {
                this[this.tableRetGdsStcList.AccPayConsTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockFractionProcCdNull() {
                return this.IsNull(this.tableRetGdsStcList.StockFractionProcCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockFractionProcCdNull() {
                this[this.tableRetGdsStcList.StockFractionProcCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAutoPaymentNull() {
                return this.IsNull(this.tableRetGdsStcList.AutoPaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAutoPaymentNull() {
                this[this.tableRetGdsStcList.AutoPaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAutoPaySlipNumNull() {
                return this.IsNull(this.tableRetGdsStcList.AutoPaySlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAutoPaySlipNumNull() {
                this[this.tableRetGdsStcList.AutoPaySlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailRowCountNull() {
                return this.IsNull(this.tableRetGdsStcList.DetailRowCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailRowCountNull() {
                this[this.tableRetGdsStcList.DetailRowCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEdiSendDateNull() {
                return this.IsNull(this.tableRetGdsStcList.EdiSendDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEdiSendDateNull() {
                this[this.tableRetGdsStcList.EdiSendDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEdiTakeInDateNull() {
                return this.IsNull(this.tableRetGdsStcList.EdiTakeInDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEdiTakeInDateNull() {
                this[this.tableRetGdsStcList.EdiTakeInDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipPrintDivCdNull() {
                return this.IsNull(this.tableRetGdsStcList.SlipPrintDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipPrintDivCdNull() {
                this[this.tableRetGdsStcList.SlipPrintDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipPrintFinishCdNull() {
                return this.IsNull(this.tableRetGdsStcList.SlipPrintFinishCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipPrintFinishCdNull() {
                this[this.tableRetGdsStcList.SlipPrintFinishCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockSlipPrintDateNull() {
                return this.IsNull(this.tableRetGdsStcList.StockSlipPrintDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockSlipPrintDateNull() {
                this[this.tableRetGdsStcList.StockSlipPrintDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipPrtSetPaperIdNull() {
                return this.IsNull(this.tableRetGdsStcList.SlipPrtSetPaperIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipPrtSetPaperIdNull() {
                this[this.tableRetGdsStcList.SlipPrtSetPaperIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipAddressDivNull() {
                return this.IsNull(this.tableRetGdsStcList.SlipAddressDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipAddressDivNull() {
                this[this.tableRetGdsStcList.SlipAddressDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeCodeNull() {
                return this.IsNull(this.tableRetGdsStcList.AddresseeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeCodeNull() {
                this[this.tableRetGdsStcList.AddresseeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeNameNull() {
                return this.IsNull(this.tableRetGdsStcList.AddresseeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeNameNull() {
                this[this.tableRetGdsStcList.AddresseeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeName2Null() {
                return this.IsNull(this.tableRetGdsStcList.AddresseeName2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeName2Null() {
                this[this.tableRetGdsStcList.AddresseeName2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseePostNoNull() {
                return this.IsNull(this.tableRetGdsStcList.AddresseePostNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseePostNoNull() {
                this[this.tableRetGdsStcList.AddresseePostNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeAddr1Null() {
                return this.IsNull(this.tableRetGdsStcList.AddresseeAddr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeAddr1Null() {
                this[this.tableRetGdsStcList.AddresseeAddr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeAddr3Null() {
                return this.IsNull(this.tableRetGdsStcList.AddresseeAddr3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeAddr3Null() {
                this[this.tableRetGdsStcList.AddresseeAddr3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeAddr4Null() {
                return this.IsNull(this.tableRetGdsStcList.AddresseeAddr4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeAddr4Null() {
                this[this.tableRetGdsStcList.AddresseeAddr4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeTelNoNull() {
                return this.IsNull(this.tableRetGdsStcList.AddresseeTelNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeTelNoNull() {
                this[this.tableRetGdsStcList.AddresseeTelNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeFaxNoNull() {
                return this.IsNull(this.tableRetGdsStcList.AddresseeFaxNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeFaxNoNull() {
                this[this.tableRetGdsStcList.AddresseeFaxNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDirectSendingCdNull() {
                return this.IsNull(this.tableRetGdsStcList.DirectSendingCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDirectSendingCdNull() {
                this[this.tableRetGdsStcList.DirectSendingCdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StcDetailRowChangeEvent : global::System.EventArgs {
            
            private StcDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StcDetailRowChangeEvent(StcDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StcDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StcListRowChangeEvent : global::System.EventArgs {
            
            private StcListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StcListRowChangeEvent(StcListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StcListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BalanceListRowChangeEvent : global::System.EventArgs {
            
            private BalanceListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceListRowChangeEvent(BalanceListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BalanceTotalRowChangeEvent : global::System.EventArgs {
            
            private BalanceTotalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceTotalRowChangeEvent(BalanceTotalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BalanceTotalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RedSlipDetailRowChangeEvent : global::System.EventArgs {
            
            private RedSlipDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RedSlipDetailRowChangeEvent(RedSlipDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RedSlipDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RetGdsStcDetailRowChangeEvent : global::System.EventArgs {
            
            private RetGdsStcDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetGdsStcDetailRowChangeEvent(RetGdsStcDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetGdsStcDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RetGdsStcListRowChangeEvent : global::System.EventArgs {
            
            private RetGdsStcListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetGdsStcListRowChangeEvent(RetGdsStcListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RetGdsStcListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591