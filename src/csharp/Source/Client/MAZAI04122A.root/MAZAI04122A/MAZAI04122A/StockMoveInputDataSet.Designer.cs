//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3620
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.Controller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("StockMoveInputDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class StockMoveInputDataSet : global::System.Data.DataSet {
        
        private StockMoveDataTable tableStockMove;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockMoveInputDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected StockMoveInputDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["StockMove"] != null)) {
                    base.Tables.Add(new StockMoveDataTable(ds.Tables["StockMove"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockMoveDataTable StockMove {
            get {
                return this.tableStockMove;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            StockMoveInputDataSet cln = ((StockMoveInputDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["StockMove"] != null)) {
                    base.Tables.Add(new StockMoveDataTable(ds.Tables["StockMove"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableStockMove = ((StockMoveDataTable)(base.Tables["StockMove"]));
            if ((initTable == true)) {
                if ((this.tableStockMove != null)) {
                    this.tableStockMove.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "StockMoveInputDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/StockMoveInputDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableStockMove = new StockMoveDataTable();
            base.Tables.Add(this.tableStockMove);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockMove() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            StockMoveInputDataSet ds = new StockMoveInputDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void StockMoveRowChangeEventHandler(object sender, StockMoveRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockMoveDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCreateDateTime;
            
            private global::System.Data.DataColumn columnUpdateDateTime;
            
            private global::System.Data.DataColumn columnEnterpriseCode;
            
            private global::System.Data.DataColumn columnFileHeaderGuid;
            
            private global::System.Data.DataColumn columnUpdEmployeeCode;
            
            private global::System.Data.DataColumn columnUpdAssemblyId1;
            
            private global::System.Data.DataColumn columnUpdAssemblyId2;
            
            private global::System.Data.DataColumn columnLogicalDeleteCode;
            
            private global::System.Data.DataColumn columnStockMoveFormal;
            
            private global::System.Data.DataColumn columnStockMoveSlipNo;
            
            private global::System.Data.DataColumn columnStockMoveRowNo;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnUpdateSecCd;
            
            private global::System.Data.DataColumn columnBfSectionCode;
            
            private global::System.Data.DataColumn columnBfSectionGuideNm;
            
            private global::System.Data.DataColumn columnBfEnterWarehCode;
            
            private global::System.Data.DataColumn columnBfEnterWarehName;
            
            private global::System.Data.DataColumn columnAfSectionCode;
            
            private global::System.Data.DataColumn columnAfSectionGuideNm;
            
            private global::System.Data.DataColumn columnAfEnterWarehCode;
            
            private global::System.Data.DataColumn columnAfEnterWarehName;
            
            private global::System.Data.DataColumn columnShipmentScdlDay;
            
            private global::System.Data.DataColumn columnShipmentFixDay;
            
            private global::System.Data.DataColumn columnArrivalGoodsDay;
            
            private global::System.Data.DataColumn columnArrivalGoodsDayDate;
            
            private global::System.Data.DataColumn columnShipmentFixTime;
            
            private global::System.Data.DataColumn columnMoveStatus;
            
            private global::System.Data.DataColumn columnMoveStatusView;
            
            private global::System.Data.DataColumn columnStockMvEmpCode;
            
            private global::System.Data.DataColumn columnStockMvEmpName;
            
            private global::System.Data.DataColumn columnShipAgentCd;
            
            private global::System.Data.DataColumn columnShipAgentNm;
            
            private global::System.Data.DataColumn columnMovingSupliStock;
            
            private global::System.Data.DataColumn columnMovingTrustStock;
            
            private global::System.Data.DataColumn columnReceiveAgentCd;
            
            private global::System.Data.DataColumn columnReceiveAgentNm;
            
            private global::System.Data.DataColumn columnOutline;
            
            private global::System.Data.DataColumn columnWarehouseNote1;
            
            private global::System.Data.DataColumn columnRowStatus;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerName2;
            
            private global::System.Data.DataColumn columnStockDiv;
            
            private global::System.Data.DataColumn columnStockUnitPriceFl;
            
            private global::System.Data.DataColumn columnTaxationDivCd;
            
            private global::System.Data.DataColumn columnFixFlag;
            
            private global::System.Data.DataColumn columnArrivalFlag;
            
            private global::System.Data.DataColumn columnSearchIndexNumber;
            
            private global::System.Data.DataColumn columnGrossFlag;
            
            private global::System.Data.DataColumn columnBfShelfNo;
            
            private global::System.Data.DataColumn columnAfShelfNo;
            
            private global::System.Data.DataColumn columnBLGoodsCdDerivedNo;
            
            private global::System.Data.DataColumn columnBLGoodsFullName;
            
            private global::System.Data.DataColumn columnListPriceFl;
            
            private global::System.Data.DataColumn columnListPriceFlView;
            
            private global::System.Data.DataColumn columnTrustRemainCount;
            
            private global::System.Data.DataColumn columnMakerGuideButton;
            
            private global::System.Data.DataColumn columnOfferKubun;
            
            private global::System.Data.DataColumn columnBLCodeGuideButton;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnBLGoodsCode;
            
            private global::System.Data.DataColumn columnBfAfterMoveCount;
            
            private global::System.Data.DataColumn columnBfBeforeMoveCount;
            
            private global::System.Data.DataColumn columnAfAfterMoveCount;
            
            private global::System.Data.DataColumn columnAfBeforeMoveCount;
            
            private global::System.Data.DataColumn columnBfStockUnitPriceFl;
            
            private global::System.Data.DataColumn columnBfMovingSupliStock;
            
            private global::System.Data.DataColumn columnMovingPrice;
            
            private global::System.Data.DataColumn columnGoodsNameKana;
            
            private global::System.Data.DataColumn columnSupplierSnm;
            
            private global::System.Data.DataColumn columnSupplierCd;
            
            private global::System.Data.DataColumn columnSupplierCdGuideButton;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveDataTable() {
                this.TableName = "StockMove";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockMoveDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockMoveDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreateDateTimeColumn {
                get {
                    return this.columnCreateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateDateTimeColumn {
                get {
                    return this.columnUpdateDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterpriseCodeColumn {
                get {
                    return this.columnEnterpriseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FileHeaderGuidColumn {
                get {
                    return this.columnFileHeaderGuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdEmployeeCodeColumn {
                get {
                    return this.columnUpdEmployeeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdAssemblyId1Column {
                get {
                    return this.columnUpdAssemblyId1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdAssemblyId2Column {
                get {
                    return this.columnUpdAssemblyId2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogicalDeleteCodeColumn {
                get {
                    return this.columnLogicalDeleteCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockMoveFormalColumn {
                get {
                    return this.columnStockMoveFormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockMoveSlipNoColumn {
                get {
                    return this.columnStockMoveSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockMoveRowNoColumn {
                get {
                    return this.columnStockMoveRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateSecCdColumn {
                get {
                    return this.columnUpdateSecCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfSectionCodeColumn {
                get {
                    return this.columnBfSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfSectionGuideNmColumn {
                get {
                    return this.columnBfSectionGuideNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfEnterWarehCodeColumn {
                get {
                    return this.columnBfEnterWarehCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfEnterWarehNameColumn {
                get {
                    return this.columnBfEnterWarehName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfSectionCodeColumn {
                get {
                    return this.columnAfSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfSectionGuideNmColumn {
                get {
                    return this.columnAfSectionGuideNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfEnterWarehCodeColumn {
                get {
                    return this.columnAfEnterWarehCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfEnterWarehNameColumn {
                get {
                    return this.columnAfEnterWarehName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentScdlDayColumn {
                get {
                    return this.columnShipmentScdlDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentFixDayColumn {
                get {
                    return this.columnShipmentFixDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalGoodsDayColumn {
                get {
                    return this.columnArrivalGoodsDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalGoodsDayDateColumn {
                get {
                    return this.columnArrivalGoodsDayDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentFixTimeColumn {
                get {
                    return this.columnShipmentFixTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoveStatusColumn {
                get {
                    return this.columnMoveStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoveStatusViewColumn {
                get {
                    return this.columnMoveStatusView;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockMvEmpCodeColumn {
                get {
                    return this.columnStockMvEmpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockMvEmpNameColumn {
                get {
                    return this.columnStockMvEmpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipAgentCdColumn {
                get {
                    return this.columnShipAgentCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipAgentNmColumn {
                get {
                    return this.columnShipAgentNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovingSupliStockColumn {
                get {
                    return this.columnMovingSupliStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovingTrustStockColumn {
                get {
                    return this.columnMovingTrustStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiveAgentCdColumn {
                get {
                    return this.columnReceiveAgentCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiveAgentNmColumn {
                get {
                    return this.columnReceiveAgentNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutlineColumn {
                get {
                    return this.columnOutline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseNote1Column {
                get {
                    return this.columnWarehouseNote1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowStatusColumn {
                get {
                    return this.columnRowStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerName2Column {
                get {
                    return this.columnCustomerName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockDivColumn {
                get {
                    return this.columnStockDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockUnitPriceFlColumn {
                get {
                    return this.columnStockUnitPriceFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxationDivCdColumn {
                get {
                    return this.columnTaxationDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FixFlagColumn {
                get {
                    return this.columnFixFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalFlagColumn {
                get {
                    return this.columnArrivalFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SearchIndexNumberColumn {
                get {
                    return this.columnSearchIndexNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrossFlagColumn {
                get {
                    return this.columnGrossFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfShelfNoColumn {
                get {
                    return this.columnBfShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfShelfNoColumn {
                get {
                    return this.columnAfShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGoodsCdDerivedNoColumn {
                get {
                    return this.columnBLGoodsCdDerivedNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGoodsFullNameColumn {
                get {
                    return this.columnBLGoodsFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceFlColumn {
                get {
                    return this.columnListPriceFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceFlViewColumn {
                get {
                    return this.columnListPriceFlView;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrustRemainCountColumn {
                get {
                    return this.columnTrustRemainCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerGuideButtonColumn {
                get {
                    return this.columnMakerGuideButton;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfferKubunColumn {
                get {
                    return this.columnOfferKubun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLCodeGuideButtonColumn {
                get {
                    return this.columnBLCodeGuideButton;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGoodsCodeColumn {
                get {
                    return this.columnBLGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfAfterMoveCountColumn {
                get {
                    return this.columnBfAfterMoveCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfBeforeMoveCountColumn {
                get {
                    return this.columnBfBeforeMoveCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfAfterMoveCountColumn {
                get {
                    return this.columnAfAfterMoveCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfBeforeMoveCountColumn {
                get {
                    return this.columnAfBeforeMoveCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfStockUnitPriceFlColumn {
                get {
                    return this.columnBfStockUnitPriceFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfMovingSupliStockColumn {
                get {
                    return this.columnBfMovingSupliStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovingPriceColumn {
                get {
                    return this.columnMovingPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameKanaColumn {
                get {
                    return this.columnGoodsNameKana;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSnmColumn {
                get {
                    return this.columnSupplierSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCdColumn {
                get {
                    return this.columnSupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCdGuideButtonColumn {
                get {
                    return this.columnSupplierCdGuideButton;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveRow this[int index] {
                get {
                    return ((StockMoveRow)(this.Rows[index]));
                }
            }
            
            public event StockMoveRowChangeEventHandler StockMoveRowChanging;
            
            public event StockMoveRowChangeEventHandler StockMoveRowChanged;
            
            public event StockMoveRowChangeEventHandler StockMoveRowDeleting;
            
            public event StockMoveRowChangeEventHandler StockMoveRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockMoveRow(StockMoveRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveRow AddStockMoveRow(
                        System.DateTime CreateDateTime, 
                        System.DateTime UpdateDateTime, 
                        string EnterpriseCode, 
                        System.Guid FileHeaderGuid, 
                        string UpdEmployeeCode, 
                        string UpdAssemblyId1, 
                        string UpdAssemblyId2, 
                        int LogicalDeleteCode, 
                        int StockMoveFormal, 
                        int StockMoveSlipNo, 
                        int StockMoveRowNo, 
                        string GoodsNo, 
                        string GoodsName, 
                        string UpdateSecCd, 
                        string BfSectionCode, 
                        string BfSectionGuideNm, 
                        string BfEnterWarehCode, 
                        string BfEnterWarehName, 
                        string AfSectionCode, 
                        string AfSectionGuideNm, 
                        string AfEnterWarehCode, 
                        string AfEnterWarehName, 
                        string ShipmentScdlDay, 
                        string ShipmentFixDay, 
                        string ArrivalGoodsDay, 
                        string ArrivalGoodsDayDate, 
                        string ShipmentFixTime, 
                        int MoveStatus, 
                        int MoveStatusView, 
                        string StockMvEmpCode, 
                        string StockMvEmpName, 
                        string ShipAgentCd, 
                        string ShipAgentNm, 
                        double MovingSupliStock, 
                        double MovingTrustStock, 
                        string ReceiveAgentCd, 
                        string ReceiveAgentNm, 
                        string Outline, 
                        string WarehouseNote1, 
                        int RowStatus, 
                        int CustomerCode, 
                        string CustomerName, 
                        string CustomerName2, 
                        int StockDiv, 
                        double StockUnitPriceFl, 
                        int TaxationDivCd, 
                        bool FixFlag, 
                        bool ArrivalFlag, 
                        int SearchIndexNumber, 
                        bool GrossFlag, 
                        string BfShelfNo, 
                        string AfShelfNo, 
                        int BLGoodsCdDerivedNo, 
                        string BLGoodsFullName, 
                        double ListPriceFl, 
                        string ListPriceFlView, 
                        double TrustRemainCount, 
                        string MakerGuideButton, 
                        int OfferKubun, 
                        string BLCodeGuideButton, 
                        string GoodsMakerCd, 
                        string BLGoodsCode, 
                        string BfAfterMoveCount, 
                        string BfBeforeMoveCount, 
                        string AfAfterMoveCount, 
                        string AfBeforeMoveCount, 
                        double BfStockUnitPriceFl, 
                        double BfMovingSupliStock, 
                        long MovingPrice, 
                        string GoodsNameKana, 
                        string SupplierSnm, 
                        string SupplierCd, 
                        string SupplierCdGuideButton) {
                StockMoveRow rowStockMoveRow = ((StockMoveRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CreateDateTime,
                        UpdateDateTime,
                        EnterpriseCode,
                        FileHeaderGuid,
                        UpdEmployeeCode,
                        UpdAssemblyId1,
                        UpdAssemblyId2,
                        LogicalDeleteCode,
                        StockMoveFormal,
                        StockMoveSlipNo,
                        StockMoveRowNo,
                        GoodsNo,
                        GoodsName,
                        UpdateSecCd,
                        BfSectionCode,
                        BfSectionGuideNm,
                        BfEnterWarehCode,
                        BfEnterWarehName,
                        AfSectionCode,
                        AfSectionGuideNm,
                        AfEnterWarehCode,
                        AfEnterWarehName,
                        ShipmentScdlDay,
                        ShipmentFixDay,
                        ArrivalGoodsDay,
                        ArrivalGoodsDayDate,
                        ShipmentFixTime,
                        MoveStatus,
                        MoveStatusView,
                        StockMvEmpCode,
                        StockMvEmpName,
                        ShipAgentCd,
                        ShipAgentNm,
                        MovingSupliStock,
                        MovingTrustStock,
                        ReceiveAgentCd,
                        ReceiveAgentNm,
                        Outline,
                        WarehouseNote1,
                        RowStatus,
                        CustomerCode,
                        CustomerName,
                        CustomerName2,
                        StockDiv,
                        StockUnitPriceFl,
                        TaxationDivCd,
                        FixFlag,
                        ArrivalFlag,
                        SearchIndexNumber,
                        GrossFlag,
                        BfShelfNo,
                        AfShelfNo,
                        BLGoodsCdDerivedNo,
                        BLGoodsFullName,
                        ListPriceFl,
                        ListPriceFlView,
                        TrustRemainCount,
                        MakerGuideButton,
                        OfferKubun,
                        BLCodeGuideButton,
                        GoodsMakerCd,
                        BLGoodsCode,
                        BfAfterMoveCount,
                        BfBeforeMoveCount,
                        AfAfterMoveCount,
                        AfBeforeMoveCount,
                        BfStockUnitPriceFl,
                        BfMovingSupliStock,
                        MovingPrice,
                        GoodsNameKana,
                        SupplierSnm,
                        SupplierCd,
                        SupplierCdGuideButton};
                rowStockMoveRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockMoveRow);
                return rowStockMoveRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveRow FindByStockMoveFormalStockMoveSlipNoStockMoveRowNo(int StockMoveFormal, int StockMoveSlipNo, int StockMoveRowNo) {
                return ((StockMoveRow)(this.Rows.Find(new object[] {
                            StockMoveFormal,
                            StockMoveSlipNo,
                            StockMoveRowNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockMoveDataTable cln = ((StockMoveDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockMoveDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCreateDateTime = base.Columns["CreateDateTime"];
                this.columnUpdateDateTime = base.Columns["UpdateDateTime"];
                this.columnEnterpriseCode = base.Columns["EnterpriseCode"];
                this.columnFileHeaderGuid = base.Columns["FileHeaderGuid"];
                this.columnUpdEmployeeCode = base.Columns["UpdEmployeeCode"];
                this.columnUpdAssemblyId1 = base.Columns["UpdAssemblyId1"];
                this.columnUpdAssemblyId2 = base.Columns["UpdAssemblyId2"];
                this.columnLogicalDeleteCode = base.Columns["LogicalDeleteCode"];
                this.columnStockMoveFormal = base.Columns["StockMoveFormal"];
                this.columnStockMoveSlipNo = base.Columns["StockMoveSlipNo"];
                this.columnStockMoveRowNo = base.Columns["StockMoveRowNo"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnUpdateSecCd = base.Columns["UpdateSecCd"];
                this.columnBfSectionCode = base.Columns["BfSectionCode"];
                this.columnBfSectionGuideNm = base.Columns["BfSectionGuideNm"];
                this.columnBfEnterWarehCode = base.Columns["BfEnterWarehCode"];
                this.columnBfEnterWarehName = base.Columns["BfEnterWarehName"];
                this.columnAfSectionCode = base.Columns["AfSectionCode"];
                this.columnAfSectionGuideNm = base.Columns["AfSectionGuideNm"];
                this.columnAfEnterWarehCode = base.Columns["AfEnterWarehCode"];
                this.columnAfEnterWarehName = base.Columns["AfEnterWarehName"];
                this.columnShipmentScdlDay = base.Columns["ShipmentScdlDay"];
                this.columnShipmentFixDay = base.Columns["ShipmentFixDay"];
                this.columnArrivalGoodsDay = base.Columns["ArrivalGoodsDay"];
                this.columnArrivalGoodsDayDate = base.Columns["ArrivalGoodsDayDate"];
                this.columnShipmentFixTime = base.Columns["ShipmentFixTime"];
                this.columnMoveStatus = base.Columns["MoveStatus"];
                this.columnMoveStatusView = base.Columns["MoveStatusView"];
                this.columnStockMvEmpCode = base.Columns["StockMvEmpCode"];
                this.columnStockMvEmpName = base.Columns["StockMvEmpName"];
                this.columnShipAgentCd = base.Columns["ShipAgentCd"];
                this.columnShipAgentNm = base.Columns["ShipAgentNm"];
                this.columnMovingSupliStock = base.Columns["MovingSupliStock"];
                this.columnMovingTrustStock = base.Columns["MovingTrustStock"];
                this.columnReceiveAgentCd = base.Columns["ReceiveAgentCd"];
                this.columnReceiveAgentNm = base.Columns["ReceiveAgentNm"];
                this.columnOutline = base.Columns["Outline"];
                this.columnWarehouseNote1 = base.Columns["WarehouseNote1"];
                this.columnRowStatus = base.Columns["RowStatus"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerName2 = base.Columns["CustomerName2"];
                this.columnStockDiv = base.Columns["StockDiv"];
                this.columnStockUnitPriceFl = base.Columns["StockUnitPriceFl"];
                this.columnTaxationDivCd = base.Columns["TaxationDivCd"];
                this.columnFixFlag = base.Columns["FixFlag"];
                this.columnArrivalFlag = base.Columns["ArrivalFlag"];
                this.columnSearchIndexNumber = base.Columns["SearchIndexNumber"];
                this.columnGrossFlag = base.Columns["GrossFlag"];
                this.columnBfShelfNo = base.Columns["BfShelfNo"];
                this.columnAfShelfNo = base.Columns["AfShelfNo"];
                this.columnBLGoodsCdDerivedNo = base.Columns["BLGoodsCdDerivedNo"];
                this.columnBLGoodsFullName = base.Columns["BLGoodsFullName"];
                this.columnListPriceFl = base.Columns["ListPriceFl"];
                this.columnListPriceFlView = base.Columns["ListPriceFlView"];
                this.columnTrustRemainCount = base.Columns["TrustRemainCount"];
                this.columnMakerGuideButton = base.Columns["MakerGuideButton"];
                this.columnOfferKubun = base.Columns["OfferKubun"];
                this.columnBLCodeGuideButton = base.Columns["BLCodeGuideButton"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnBLGoodsCode = base.Columns["BLGoodsCode"];
                this.columnBfAfterMoveCount = base.Columns["BfAfterMoveCount"];
                this.columnBfBeforeMoveCount = base.Columns["BfBeforeMoveCount"];
                this.columnAfAfterMoveCount = base.Columns["AfAfterMoveCount"];
                this.columnAfBeforeMoveCount = base.Columns["AfBeforeMoveCount"];
                this.columnBfStockUnitPriceFl = base.Columns["BfStockUnitPriceFl"];
                this.columnBfMovingSupliStock = base.Columns["BfMovingSupliStock"];
                this.columnMovingPrice = base.Columns["MovingPrice"];
                this.columnGoodsNameKana = base.Columns["GoodsNameKana"];
                this.columnSupplierSnm = base.Columns["SupplierSnm"];
                this.columnSupplierCd = base.Columns["SupplierCd"];
                this.columnSupplierCdGuideButton = base.Columns["SupplierCdGuideButton"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCreateDateTime = new global::System.Data.DataColumn("CreateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDateTime);
                this.columnUpdateDateTime = new global::System.Data.DataColumn("UpdateDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDateTime);
                this.columnEnterpriseCode = new global::System.Data.DataColumn("EnterpriseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterpriseCode);
                this.columnFileHeaderGuid = new global::System.Data.DataColumn("FileHeaderGuid", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileHeaderGuid);
                this.columnUpdEmployeeCode = new global::System.Data.DataColumn("UpdEmployeeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdEmployeeCode);
                this.columnUpdAssemblyId1 = new global::System.Data.DataColumn("UpdAssemblyId1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdAssemblyId1);
                this.columnUpdAssemblyId2 = new global::System.Data.DataColumn("UpdAssemblyId2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdAssemblyId2);
                this.columnLogicalDeleteCode = new global::System.Data.DataColumn("LogicalDeleteCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogicalDeleteCode);
                this.columnStockMoveFormal = new global::System.Data.DataColumn("StockMoveFormal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockMoveFormal);
                this.columnStockMoveSlipNo = new global::System.Data.DataColumn("StockMoveSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockMoveSlipNo);
                this.columnStockMoveRowNo = new global::System.Data.DataColumn("StockMoveRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockMoveRowNo);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnUpdateSecCd = new global::System.Data.DataColumn("UpdateSecCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateSecCd);
                this.columnBfSectionCode = new global::System.Data.DataColumn("BfSectionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfSectionCode);
                this.columnBfSectionGuideNm = new global::System.Data.DataColumn("BfSectionGuideNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfSectionGuideNm);
                this.columnBfEnterWarehCode = new global::System.Data.DataColumn("BfEnterWarehCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfEnterWarehCode);
                this.columnBfEnterWarehName = new global::System.Data.DataColumn("BfEnterWarehName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfEnterWarehName);
                this.columnAfSectionCode = new global::System.Data.DataColumn("AfSectionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfSectionCode);
                this.columnAfSectionGuideNm = new global::System.Data.DataColumn("AfSectionGuideNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfSectionGuideNm);
                this.columnAfEnterWarehCode = new global::System.Data.DataColumn("AfEnterWarehCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfEnterWarehCode);
                this.columnAfEnterWarehName = new global::System.Data.DataColumn("AfEnterWarehName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfEnterWarehName);
                this.columnShipmentScdlDay = new global::System.Data.DataColumn("ShipmentScdlDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentScdlDay);
                this.columnShipmentFixDay = new global::System.Data.DataColumn("ShipmentFixDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentFixDay);
                this.columnArrivalGoodsDay = new global::System.Data.DataColumn("ArrivalGoodsDay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalGoodsDay);
                this.columnArrivalGoodsDayDate = new global::System.Data.DataColumn("ArrivalGoodsDayDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalGoodsDayDate);
                this.columnShipmentFixTime = new global::System.Data.DataColumn("ShipmentFixTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentFixTime);
                this.columnMoveStatus = new global::System.Data.DataColumn("MoveStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveStatus);
                this.columnMoveStatusView = new global::System.Data.DataColumn("MoveStatusView", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveStatusView);
                this.columnStockMvEmpCode = new global::System.Data.DataColumn("StockMvEmpCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockMvEmpCode);
                this.columnStockMvEmpName = new global::System.Data.DataColumn("StockMvEmpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockMvEmpName);
                this.columnShipAgentCd = new global::System.Data.DataColumn("ShipAgentCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipAgentCd);
                this.columnShipAgentNm = new global::System.Data.DataColumn("ShipAgentNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipAgentNm);
                this.columnMovingSupliStock = new global::System.Data.DataColumn("MovingSupliStock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovingSupliStock);
                this.columnMovingTrustStock = new global::System.Data.DataColumn("MovingTrustStock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovingTrustStock);
                this.columnReceiveAgentCd = new global::System.Data.DataColumn("ReceiveAgentCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveAgentCd);
                this.columnReceiveAgentNm = new global::System.Data.DataColumn("ReceiveAgentNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiveAgentNm);
                this.columnOutline = new global::System.Data.DataColumn("Outline", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutline);
                this.columnWarehouseNote1 = new global::System.Data.DataColumn("WarehouseNote1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseNote1);
                this.columnRowStatus = new global::System.Data.DataColumn("RowStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowStatus);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerName2 = new global::System.Data.DataColumn("CustomerName2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName2);
                this.columnStockDiv = new global::System.Data.DataColumn("StockDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockDiv);
                this.columnStockUnitPriceFl = new global::System.Data.DataColumn("StockUnitPriceFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockUnitPriceFl);
                this.columnTaxationDivCd = new global::System.Data.DataColumn("TaxationDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxationDivCd);
                this.columnFixFlag = new global::System.Data.DataColumn("FixFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixFlag);
                this.columnArrivalFlag = new global::System.Data.DataColumn("ArrivalFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalFlag);
                this.columnSearchIndexNumber = new global::System.Data.DataColumn("SearchIndexNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSearchIndexNumber);
                this.columnGrossFlag = new global::System.Data.DataColumn("GrossFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossFlag);
                this.columnBfShelfNo = new global::System.Data.DataColumn("BfShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfShelfNo);
                this.columnAfShelfNo = new global::System.Data.DataColumn("AfShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfShelfNo);
                this.columnBLGoodsCdDerivedNo = new global::System.Data.DataColumn("BLGoodsCdDerivedNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGoodsCdDerivedNo);
                this.columnBLGoodsFullName = new global::System.Data.DataColumn("BLGoodsFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGoodsFullName);
                this.columnListPriceFl = new global::System.Data.DataColumn("ListPriceFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPriceFl);
                this.columnListPriceFlView = new global::System.Data.DataColumn("ListPriceFlView", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPriceFlView);
                this.columnTrustRemainCount = new global::System.Data.DataColumn("TrustRemainCount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrustRemainCount);
                this.columnMakerGuideButton = new global::System.Data.DataColumn("MakerGuideButton", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerGuideButton);
                this.columnOfferKubun = new global::System.Data.DataColumn("OfferKubun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferKubun);
                this.columnBLCodeGuideButton = new global::System.Data.DataColumn("BLCodeGuideButton", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLCodeGuideButton);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnBLGoodsCode = new global::System.Data.DataColumn("BLGoodsCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGoodsCode);
                this.columnBfAfterMoveCount = new global::System.Data.DataColumn("BfAfterMoveCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfAfterMoveCount);
                this.columnBfBeforeMoveCount = new global::System.Data.DataColumn("BfBeforeMoveCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfBeforeMoveCount);
                this.columnAfAfterMoveCount = new global::System.Data.DataColumn("AfAfterMoveCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfAfterMoveCount);
                this.columnAfBeforeMoveCount = new global::System.Data.DataColumn("AfBeforeMoveCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfBeforeMoveCount);
                this.columnBfStockUnitPriceFl = new global::System.Data.DataColumn("BfStockUnitPriceFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfStockUnitPriceFl);
                this.columnBfMovingSupliStock = new global::System.Data.DataColumn("BfMovingSupliStock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfMovingSupliStock);
                this.columnMovingPrice = new global::System.Data.DataColumn("MovingPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMovingPrice);
                this.columnGoodsNameKana = new global::System.Data.DataColumn("GoodsNameKana", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNameKana);
                this.columnSupplierSnm = new global::System.Data.DataColumn("SupplierSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSnm);
                this.columnSupplierCd = new global::System.Data.DataColumn("SupplierCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCd);
                this.columnSupplierCdGuideButton = new global::System.Data.DataColumn("SupplierCdGuideButton", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCdGuideButton);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStockMoveFormal,
                                this.columnStockMoveSlipNo,
                                this.columnStockMoveRowNo}, true));
                this.columnCreateDateTime.Caption = "作成日";
                this.columnUpdateDateTime.Caption = "更新日";
                this.columnEnterpriseCode.Caption = "企業コード";
                this.columnEnterpriseCode.DefaultValue = ((string)(""));
                this.columnFileHeaderGuid.Caption = "GUID";
                this.columnUpdEmployeeCode.Caption = "更新従業員コード";
                this.columnUpdEmployeeCode.DefaultValue = ((string)(""));
                this.columnUpdAssemblyId1.Caption = "更新アセンブリID1";
                this.columnUpdAssemblyId1.DefaultValue = ((string)(""));
                this.columnUpdAssemblyId2.Caption = "更新アセンブリID2";
                this.columnUpdAssemblyId2.DefaultValue = ((string)(""));
                this.columnLogicalDeleteCode.Caption = "論理削除区分";
                this.columnLogicalDeleteCode.DefaultValue = ((int)(0));
                this.columnStockMoveFormal.AllowDBNull = false;
                this.columnStockMoveFormal.Caption = "在庫移動形式";
                this.columnStockMoveFormal.DefaultValue = ((int)(0));
                this.columnStockMoveSlipNo.AllowDBNull = false;
                this.columnStockMoveSlipNo.Caption = "伝票番号";
                this.columnStockMoveSlipNo.DefaultValue = ((int)(0));
                this.columnStockMoveRowNo.AllowDBNull = false;
                this.columnStockMoveRowNo.Caption = "行番号";
                this.columnStockMoveRowNo.DefaultValue = ((int)(1));
                this.columnGoodsNo.Caption = "品番";
                this.columnGoodsNo.DefaultValue = ((string)(""));
                this.columnGoodsName.Caption = "品名";
                this.columnGoodsName.DefaultValue = ((string)(""));
                this.columnUpdateSecCd.Caption = "更新拠点コード";
                this.columnUpdateSecCd.DefaultValue = ((string)(""));
                this.columnBfSectionCode.Caption = "出庫拠点コード";
                this.columnBfSectionCode.DefaultValue = ((string)(""));
                this.columnBfSectionGuideNm.Caption = "出庫拠点名";
                this.columnBfSectionGuideNm.DefaultValue = ((string)(""));
                this.columnBfEnterWarehCode.Caption = "出庫倉庫コード";
                this.columnBfEnterWarehCode.DefaultValue = ((string)(""));
                this.columnBfEnterWarehName.Caption = "出庫倉庫名";
                this.columnBfEnterWarehName.DefaultValue = ((string)(""));
                this.columnAfSectionCode.Caption = "入庫拠点コード";
                this.columnAfSectionCode.DefaultValue = ((string)(""));
                this.columnAfSectionGuideNm.Caption = "入庫拠点名";
                this.columnAfSectionGuideNm.DefaultValue = ((string)(""));
                this.columnAfEnterWarehCode.Caption = "入庫倉庫コード";
                this.columnAfEnterWarehCode.DefaultValue = ((string)(""));
                this.columnAfEnterWarehName.Caption = "入庫倉庫名";
                this.columnAfEnterWarehName.DefaultValue = ((string)(""));
                this.columnShipmentScdlDay.Caption = "出荷予定日";
                this.columnShipmentScdlDay.DefaultValue = ((string)(""));
                this.columnShipmentFixDay.Caption = "出荷確定日";
                this.columnShipmentFixDay.DefaultValue = ((string)(""));
                this.columnArrivalGoodsDay.Caption = "入荷日";
                this.columnArrivalGoodsDay.DefaultValue = ((string)(""));
                this.columnArrivalGoodsDayDate.DefaultValue = ((string)(""));
                this.columnShipmentFixTime.Caption = "出荷時間";
                this.columnShipmentFixTime.DefaultValue = ((string)(""));
                this.columnMoveStatus.Caption = "移動状態";
                this.columnMoveStatus.DefaultValue = ((int)(0));
                this.columnMoveStatusView.Caption = "移動状態View用";
                this.columnMoveStatusView.DefaultValue = ((int)(0));
                this.columnStockMvEmpCode.Caption = "移動指示担当者コード";
                this.columnStockMvEmpCode.DefaultValue = ((string)(""));
                this.columnStockMvEmpName.Caption = "移動指示担当者名";
                this.columnStockMvEmpName.DefaultValue = ((string)(""));
                this.columnShipAgentCd.Caption = "出荷確定担当者コード";
                this.columnShipAgentCd.DefaultValue = ((string)(""));
                this.columnShipAgentNm.Caption = "出荷確定担当者名";
                this.columnShipAgentNm.DefaultValue = ((string)(""));
                this.columnMovingSupliStock.Caption = "出庫数";
                this.columnMovingSupliStock.DefaultValue = ((double)(0));
                this.columnMovingTrustStock.Caption = "出庫数(受)";
                this.columnMovingTrustStock.DefaultValue = ((double)(0));
                this.columnReceiveAgentCd.Caption = "入荷担当者コード";
                this.columnReceiveAgentCd.DefaultValue = ((string)(""));
                this.columnReceiveAgentNm.Caption = "入荷担当者名";
                this.columnReceiveAgentNm.DefaultValue = ((string)(""));
                this.columnOutline.Caption = "備考";
                this.columnOutline.DefaultValue = ((string)(""));
                this.columnWarehouseNote1.Caption = "倉庫備考1";
                this.columnWarehouseNote1.DefaultValue = ((string)(""));
                this.columnRowStatus.DefaultValue = ((int)(0));
                this.columnCustomerCode.Caption = "得意先コード";
                this.columnCustomerCode.DefaultValue = ((int)(0));
                this.columnCustomerName.Caption = "得意先名";
                this.columnCustomerName.DefaultValue = ((string)(""));
                this.columnCustomerName2.Caption = "得意先名2";
                this.columnCustomerName2.DefaultValue = ((string)(""));
                this.columnStockDiv.Caption = "在庫区分";
                this.columnStockDiv.DefaultValue = ((int)(0));
                this.columnStockUnitPriceFl.Caption = "原単価";
                this.columnStockUnitPriceFl.DefaultValue = ((double)(0));
                this.columnTaxationDivCd.Caption = "課税区分";
                this.columnTaxationDivCd.DefaultValue = ((int)(0));
                this.columnFixFlag.Caption = "確定";
                this.columnFixFlag.DefaultValue = ((bool)(false));
                this.columnArrivalFlag.Caption = "入荷";
                this.columnArrivalFlag.DefaultValue = ((bool)(false));
                this.columnSearchIndexNumber.Caption = "No.";
                this.columnSearchIndexNumber.DefaultValue = ((int)(1));
                this.columnGrossFlag.DefaultValue = ((bool)(false));
                this.columnBfShelfNo.Caption = "出庫棚番";
                this.columnBfShelfNo.DefaultValue = ((string)(""));
                this.columnAfShelfNo.Caption = "入庫棚番";
                this.columnAfShelfNo.DefaultValue = ((string)(""));
                this.columnBLGoodsCdDerivedNo.Caption = "BLｺｰﾄﾞ枝番";
                this.columnBLGoodsFullName.Caption = "BLｺｰﾄﾞ名";
                this.columnListPriceFl.Caption = "標準価格";
                this.columnListPriceFlView.Caption = "標準価格";
                this.columnListPriceFlView.DefaultValue = ((string)(""));
                this.columnTrustRemainCount.Caption = "在庫残(受)";
                this.columnTrustRemainCount.DefaultValue = ((double)(0));
                this.columnMakerGuideButton.Caption = "";
                this.columnMakerGuideButton.DefaultValue = ((string)(""));
                this.columnOfferKubun.DefaultValue = ((int)(0));
                this.columnBLCodeGuideButton.Caption = "";
                this.columnBLCodeGuideButton.DefaultValue = ((string)(""));
                this.columnGoodsMakerCd.Caption = "メーカー";
                this.columnGoodsMakerCd.DefaultValue = ((string)(""));
                this.columnBLGoodsCode.Caption = "BLｺｰﾄﾞ";
                this.columnBLGoodsCode.DefaultValue = ((string)(""));
                this.columnBfAfterMoveCount.Caption = "出庫後数";
                this.columnBfAfterMoveCount.DefaultValue = ((string)(""));
                this.columnBfBeforeMoveCount.Caption = "出庫前数";
                this.columnBfBeforeMoveCount.DefaultValue = ((string)(""));
                this.columnAfAfterMoveCount.Caption = "入庫後数";
                this.columnAfAfterMoveCount.DefaultValue = ((string)(""));
                this.columnAfBeforeMoveCount.Caption = "入庫前数";
                this.columnAfBeforeMoveCount.DefaultValue = ((string)(""));
                this.columnMovingPrice.Caption = "移動金額";
                this.columnSupplierSnm.Caption = "仕入先略称";
                this.columnSupplierCd.AllowDBNull = false;
                this.columnSupplierCd.Caption = "仕入先";
                this.columnSupplierCd.DefaultValue = ((string)(""));
                this.columnSupplierCdGuideButton.Caption = "";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveRow NewStockMoveRow() {
                return ((StockMoveRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockMoveRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockMoveRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockMoveRowChanged != null)) {
                    this.StockMoveRowChanged(this, new StockMoveRowChangeEvent(((StockMoveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockMoveRowChanging != null)) {
                    this.StockMoveRowChanging(this, new StockMoveRowChangeEvent(((StockMoveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockMoveRowDeleted != null)) {
                    this.StockMoveRowDeleted(this, new StockMoveRowChangeEvent(((StockMoveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockMoveRowDeleting != null)) {
                    this.StockMoveRowDeleting(this, new StockMoveRowChangeEvent(((StockMoveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockMoveRow(StockMoveRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StockMoveInputDataSet ds = new StockMoveInputDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockMoveDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockMoveRow : global::System.Data.DataRow {
            
            private StockMoveDataTable tableStockMove;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockMoveRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockMove = ((StockMoveDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreateDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockMove.CreateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'CreateDateTime\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.CreateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UpdateDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockMove.UpdateDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'UpdateDateTime\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.UpdateDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnterpriseCode {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.EnterpriseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'EnterpriseCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.EnterpriseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid FileHeaderGuid {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStockMove.FileHeaderGuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'FileHeaderGuid\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.FileHeaderGuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdEmployeeCode {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.UpdEmployeeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'UpdEmployeeCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.UpdEmployeeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdAssemblyId1 {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.UpdAssemblyId1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'UpdAssemblyId1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.UpdAssemblyId1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdAssemblyId2 {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.UpdAssemblyId2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'UpdAssemblyId2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.UpdAssemblyId2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int LogicalDeleteCode {
                get {
                    try {
                        return ((int)(this[this.tableStockMove.LogicalDeleteCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'LogicalDeleteCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.LogicalDeleteCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockMoveFormal {
                get {
                    return ((int)(this[this.tableStockMove.StockMoveFormalColumn]));
                }
                set {
                    this[this.tableStockMove.StockMoveFormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockMoveSlipNo {
                get {
                    return ((int)(this[this.tableStockMove.StockMoveSlipNoColumn]));
                }
                set {
                    this[this.tableStockMove.StockMoveSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockMoveRowNo {
                get {
                    return ((int)(this[this.tableStockMove.StockMoveRowNoColumn]));
                }
                set {
                    this[this.tableStockMove.StockMoveRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.GoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'GoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdateSecCd {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.UpdateSecCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'UpdateSecCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.UpdateSecCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BfSectionCode {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.BfSectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'BfSectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.BfSectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BfSectionGuideNm {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.BfSectionGuideNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'BfSectionGuideNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.BfSectionGuideNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BfEnterWarehCode {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.BfEnterWarehCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'BfEnterWarehCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.BfEnterWarehCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BfEnterWarehName {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.BfEnterWarehNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'BfEnterWarehName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.BfEnterWarehNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AfSectionCode {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.AfSectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'AfSectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.AfSectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AfSectionGuideNm {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.AfSectionGuideNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'AfSectionGuideNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.AfSectionGuideNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AfEnterWarehCode {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.AfEnterWarehCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'AfEnterWarehCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.AfEnterWarehCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AfEnterWarehName {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.AfEnterWarehNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'AfEnterWarehName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.AfEnterWarehNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipmentScdlDay {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.ShipmentScdlDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'ShipmentScdlDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.ShipmentScdlDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipmentFixDay {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.ShipmentFixDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'ShipmentFixDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.ShipmentFixDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ArrivalGoodsDay {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.ArrivalGoodsDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'ArrivalGoodsDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.ArrivalGoodsDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ArrivalGoodsDayDate {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.ArrivalGoodsDayDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'ArrivalGoodsDayDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.ArrivalGoodsDayDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipmentFixTime {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.ShipmentFixTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'ShipmentFixTime\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.ShipmentFixTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MoveStatus {
                get {
                    try {
                        return ((int)(this[this.tableStockMove.MoveStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'MoveStatus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.MoveStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MoveStatusView {
                get {
                    try {
                        return ((int)(this[this.tableStockMove.MoveStatusViewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'MoveStatusView\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.MoveStatusViewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockMvEmpCode {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.StockMvEmpCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'StockMvEmpCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.StockMvEmpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockMvEmpName {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.StockMvEmpNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'StockMvEmpName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.StockMvEmpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipAgentCd {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.ShipAgentCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'ShipAgentCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.ShipAgentCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipAgentNm {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.ShipAgentNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'ShipAgentNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.ShipAgentNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MovingSupliStock {
                get {
                    try {
                        return ((double)(this[this.tableStockMove.MovingSupliStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'MovingSupliStock\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.MovingSupliStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MovingTrustStock {
                get {
                    try {
                        return ((double)(this[this.tableStockMove.MovingTrustStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'MovingTrustStock\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.MovingTrustStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiveAgentCd {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.ReceiveAgentCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'ReceiveAgentCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.ReceiveAgentCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiveAgentNm {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.ReceiveAgentNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'ReceiveAgentNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.ReceiveAgentNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Outline {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.OutlineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'Outline\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.OutlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseNote1 {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.WarehouseNote1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'WarehouseNote1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.WarehouseNote1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowStatus {
                get {
                    try {
                        return ((int)(this[this.tableStockMove.RowStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'RowStatus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.RowStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerCode {
                get {
                    try {
                        return ((int)(this[this.tableStockMove.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'CustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'CustomerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName2 {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.CustomerName2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'CustomerName2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.CustomerName2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockDiv {
                get {
                    try {
                        return ((int)(this[this.tableStockMove.StockDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'StockDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.StockDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockUnitPriceFl {
                get {
                    try {
                        return ((double)(this[this.tableStockMove.StockUnitPriceFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'StockUnitPriceFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.StockUnitPriceFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TaxationDivCd {
                get {
                    try {
                        return ((int)(this[this.tableStockMove.TaxationDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'TaxationDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.TaxationDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FixFlag {
                get {
                    try {
                        return ((bool)(this[this.tableStockMove.FixFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'FixFlag\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.FixFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ArrivalFlag {
                get {
                    try {
                        return ((bool)(this[this.tableStockMove.ArrivalFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'ArrivalFlag\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.ArrivalFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SearchIndexNumber {
                get {
                    try {
                        return ((int)(this[this.tableStockMove.SearchIndexNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'SearchIndexNumber\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.SearchIndexNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool GrossFlag {
                get {
                    try {
                        return ((bool)(this[this.tableStockMove.GrossFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'GrossFlag\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.GrossFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BfShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.BfShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'BfShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.BfShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AfShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.AfShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'AfShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.AfShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BLGoodsCdDerivedNo {
                get {
                    try {
                        return ((int)(this[this.tableStockMove.BLGoodsCdDerivedNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'BLGoodsCdDerivedNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.BLGoodsCdDerivedNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLGoodsFullName {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.BLGoodsFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'BLGoodsFullName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.BLGoodsFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ListPriceFl {
                get {
                    try {
                        return ((double)(this[this.tableStockMove.ListPriceFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'ListPriceFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.ListPriceFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ListPriceFlView {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.ListPriceFlViewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'ListPriceFlView\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.ListPriceFlViewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TrustRemainCount {
                get {
                    try {
                        return ((double)(this[this.tableStockMove.TrustRemainCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'TrustRemainCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.TrustRemainCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerGuideButton {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.MakerGuideButtonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'MakerGuideButton\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.MakerGuideButtonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OfferKubun {
                get {
                    try {
                        return ((int)(this[this.tableStockMove.OfferKubunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'OfferKubun\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.OfferKubunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLCodeGuideButton {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.BLCodeGuideButtonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'BLCodeGuideButton\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.BLCodeGuideButtonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsMakerCd {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.GoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'GoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLGoodsCode {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.BLGoodsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'BLGoodsCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.BLGoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BfAfterMoveCount {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.BfAfterMoveCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'BfAfterMoveCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.BfAfterMoveCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BfBeforeMoveCount {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.BfBeforeMoveCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'BfBeforeMoveCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.BfBeforeMoveCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AfAfterMoveCount {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.AfAfterMoveCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'AfAfterMoveCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.AfAfterMoveCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AfBeforeMoveCount {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.AfBeforeMoveCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'AfBeforeMoveCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.AfBeforeMoveCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BfStockUnitPriceFl {
                get {
                    try {
                        return ((double)(this[this.tableStockMove.BfStockUnitPriceFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'BfStockUnitPriceFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.BfStockUnitPriceFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BfMovingSupliStock {
                get {
                    try {
                        return ((double)(this[this.tableStockMove.BfMovingSupliStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'BfMovingSupliStock\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.BfMovingSupliStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long MovingPrice {
                get {
                    try {
                        return ((long)(this[this.tableStockMove.MovingPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'MovingPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.MovingPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNameKana {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.GoodsNameKanaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'GoodsNameKana\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.GoodsNameKanaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSnm {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.SupplierSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'SupplierSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.SupplierSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierCd {
                get {
                    return ((string)(this[this.tableStockMove.SupplierCdColumn]));
                }
                set {
                    this[this.tableStockMove.SupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierCdGuideButton {
                get {
                    try {
                        return ((string)(this[this.tableStockMove.SupplierCdGuideButtonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMove\' にある列 \'SupplierCdGuideButton\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMove.SupplierCdGuideButtonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreateDateTimeNull() {
                return this.IsNull(this.tableStockMove.CreateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreateDateTimeNull() {
                this[this.tableStockMove.CreateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateDateTimeNull() {
                return this.IsNull(this.tableStockMove.UpdateDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateDateTimeNull() {
                this[this.tableStockMove.UpdateDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnterpriseCodeNull() {
                return this.IsNull(this.tableStockMove.EnterpriseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnterpriseCodeNull() {
                this[this.tableStockMove.EnterpriseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFileHeaderGuidNull() {
                return this.IsNull(this.tableStockMove.FileHeaderGuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFileHeaderGuidNull() {
                this[this.tableStockMove.FileHeaderGuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdEmployeeCodeNull() {
                return this.IsNull(this.tableStockMove.UpdEmployeeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdEmployeeCodeNull() {
                this[this.tableStockMove.UpdEmployeeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdAssemblyId1Null() {
                return this.IsNull(this.tableStockMove.UpdAssemblyId1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdAssemblyId1Null() {
                this[this.tableStockMove.UpdAssemblyId1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdAssemblyId2Null() {
                return this.IsNull(this.tableStockMove.UpdAssemblyId2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdAssemblyId2Null() {
                this[this.tableStockMove.UpdAssemblyId2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogicalDeleteCodeNull() {
                return this.IsNull(this.tableStockMove.LogicalDeleteCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogicalDeleteCodeNull() {
                this[this.tableStockMove.LogicalDeleteCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNull() {
                return this.IsNull(this.tableStockMove.GoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNull() {
                this[this.tableStockMove.GoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableStockMove.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableStockMove.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateSecCdNull() {
                return this.IsNull(this.tableStockMove.UpdateSecCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateSecCdNull() {
                this[this.tableStockMove.UpdateSecCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfSectionCodeNull() {
                return this.IsNull(this.tableStockMove.BfSectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfSectionCodeNull() {
                this[this.tableStockMove.BfSectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfSectionGuideNmNull() {
                return this.IsNull(this.tableStockMove.BfSectionGuideNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfSectionGuideNmNull() {
                this[this.tableStockMove.BfSectionGuideNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfEnterWarehCodeNull() {
                return this.IsNull(this.tableStockMove.BfEnterWarehCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfEnterWarehCodeNull() {
                this[this.tableStockMove.BfEnterWarehCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfEnterWarehNameNull() {
                return this.IsNull(this.tableStockMove.BfEnterWarehNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfEnterWarehNameNull() {
                this[this.tableStockMove.BfEnterWarehNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfSectionCodeNull() {
                return this.IsNull(this.tableStockMove.AfSectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfSectionCodeNull() {
                this[this.tableStockMove.AfSectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfSectionGuideNmNull() {
                return this.IsNull(this.tableStockMove.AfSectionGuideNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfSectionGuideNmNull() {
                this[this.tableStockMove.AfSectionGuideNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfEnterWarehCodeNull() {
                return this.IsNull(this.tableStockMove.AfEnterWarehCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfEnterWarehCodeNull() {
                this[this.tableStockMove.AfEnterWarehCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfEnterWarehNameNull() {
                return this.IsNull(this.tableStockMove.AfEnterWarehNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfEnterWarehNameNull() {
                this[this.tableStockMove.AfEnterWarehNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentScdlDayNull() {
                return this.IsNull(this.tableStockMove.ShipmentScdlDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentScdlDayNull() {
                this[this.tableStockMove.ShipmentScdlDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentFixDayNull() {
                return this.IsNull(this.tableStockMove.ShipmentFixDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentFixDayNull() {
                this[this.tableStockMove.ShipmentFixDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalGoodsDayNull() {
                return this.IsNull(this.tableStockMove.ArrivalGoodsDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalGoodsDayNull() {
                this[this.tableStockMove.ArrivalGoodsDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalGoodsDayDateNull() {
                return this.IsNull(this.tableStockMove.ArrivalGoodsDayDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalGoodsDayDateNull() {
                this[this.tableStockMove.ArrivalGoodsDayDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentFixTimeNull() {
                return this.IsNull(this.tableStockMove.ShipmentFixTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentFixTimeNull() {
                this[this.tableStockMove.ShipmentFixTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoveStatusNull() {
                return this.IsNull(this.tableStockMove.MoveStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoveStatusNull() {
                this[this.tableStockMove.MoveStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoveStatusViewNull() {
                return this.IsNull(this.tableStockMove.MoveStatusViewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoveStatusViewNull() {
                this[this.tableStockMove.MoveStatusViewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockMvEmpCodeNull() {
                return this.IsNull(this.tableStockMove.StockMvEmpCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockMvEmpCodeNull() {
                this[this.tableStockMove.StockMvEmpCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockMvEmpNameNull() {
                return this.IsNull(this.tableStockMove.StockMvEmpNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockMvEmpNameNull() {
                this[this.tableStockMove.StockMvEmpNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipAgentCdNull() {
                return this.IsNull(this.tableStockMove.ShipAgentCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipAgentCdNull() {
                this[this.tableStockMove.ShipAgentCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipAgentNmNull() {
                return this.IsNull(this.tableStockMove.ShipAgentNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipAgentNmNull() {
                this[this.tableStockMove.ShipAgentNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovingSupliStockNull() {
                return this.IsNull(this.tableStockMove.MovingSupliStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovingSupliStockNull() {
                this[this.tableStockMove.MovingSupliStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovingTrustStockNull() {
                return this.IsNull(this.tableStockMove.MovingTrustStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovingTrustStockNull() {
                this[this.tableStockMove.MovingTrustStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiveAgentCdNull() {
                return this.IsNull(this.tableStockMove.ReceiveAgentCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiveAgentCdNull() {
                this[this.tableStockMove.ReceiveAgentCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiveAgentNmNull() {
                return this.IsNull(this.tableStockMove.ReceiveAgentNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiveAgentNmNull() {
                this[this.tableStockMove.ReceiveAgentNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutlineNull() {
                return this.IsNull(this.tableStockMove.OutlineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutlineNull() {
                this[this.tableStockMove.OutlineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNote1Null() {
                return this.IsNull(this.tableStockMove.WarehouseNote1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNote1Null() {
                this[this.tableStockMove.WarehouseNote1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowStatusNull() {
                return this.IsNull(this.tableStockMove.RowStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowStatusNull() {
                this[this.tableStockMove.RowStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableStockMove.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableStockMove.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableStockMove.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableStockMove.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerName2Null() {
                return this.IsNull(this.tableStockMove.CustomerName2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerName2Null() {
                this[this.tableStockMove.CustomerName2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockDivNull() {
                return this.IsNull(this.tableStockMove.StockDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockDivNull() {
                this[this.tableStockMove.StockDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockUnitPriceFlNull() {
                return this.IsNull(this.tableStockMove.StockUnitPriceFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockUnitPriceFlNull() {
                this[this.tableStockMove.StockUnitPriceFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxationDivCdNull() {
                return this.IsNull(this.tableStockMove.TaxationDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxationDivCdNull() {
                this[this.tableStockMove.TaxationDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFixFlagNull() {
                return this.IsNull(this.tableStockMove.FixFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFixFlagNull() {
                this[this.tableStockMove.FixFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalFlagNull() {
                return this.IsNull(this.tableStockMove.ArrivalFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalFlagNull() {
                this[this.tableStockMove.ArrivalFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSearchIndexNumberNull() {
                return this.IsNull(this.tableStockMove.SearchIndexNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSearchIndexNumberNull() {
                this[this.tableStockMove.SearchIndexNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrossFlagNull() {
                return this.IsNull(this.tableStockMove.GrossFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrossFlagNull() {
                this[this.tableStockMove.GrossFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfShelfNoNull() {
                return this.IsNull(this.tableStockMove.BfShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfShelfNoNull() {
                this[this.tableStockMove.BfShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfShelfNoNull() {
                return this.IsNull(this.tableStockMove.AfShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfShelfNoNull() {
                this[this.tableStockMove.AfShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGoodsCdDerivedNoNull() {
                return this.IsNull(this.tableStockMove.BLGoodsCdDerivedNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGoodsCdDerivedNoNull() {
                this[this.tableStockMove.BLGoodsCdDerivedNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGoodsFullNameNull() {
                return this.IsNull(this.tableStockMove.BLGoodsFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGoodsFullNameNull() {
                this[this.tableStockMove.BLGoodsFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceFlNull() {
                return this.IsNull(this.tableStockMove.ListPriceFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceFlNull() {
                this[this.tableStockMove.ListPriceFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceFlViewNull() {
                return this.IsNull(this.tableStockMove.ListPriceFlViewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceFlViewNull() {
                this[this.tableStockMove.ListPriceFlViewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrustRemainCountNull() {
                return this.IsNull(this.tableStockMove.TrustRemainCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrustRemainCountNull() {
                this[this.tableStockMove.TrustRemainCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerGuideButtonNull() {
                return this.IsNull(this.tableStockMove.MakerGuideButtonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerGuideButtonNull() {
                this[this.tableStockMove.MakerGuideButtonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfferKubunNull() {
                return this.IsNull(this.tableStockMove.OfferKubunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfferKubunNull() {
                this[this.tableStockMove.OfferKubunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLCodeGuideButtonNull() {
                return this.IsNull(this.tableStockMove.BLCodeGuideButtonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLCodeGuideButtonNull() {
                this[this.tableStockMove.BLCodeGuideButtonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMakerCdNull() {
                return this.IsNull(this.tableStockMove.GoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMakerCdNull() {
                this[this.tableStockMove.GoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGoodsCodeNull() {
                return this.IsNull(this.tableStockMove.BLGoodsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGoodsCodeNull() {
                this[this.tableStockMove.BLGoodsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfAfterMoveCountNull() {
                return this.IsNull(this.tableStockMove.BfAfterMoveCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfAfterMoveCountNull() {
                this[this.tableStockMove.BfAfterMoveCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfBeforeMoveCountNull() {
                return this.IsNull(this.tableStockMove.BfBeforeMoveCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfBeforeMoveCountNull() {
                this[this.tableStockMove.BfBeforeMoveCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfAfterMoveCountNull() {
                return this.IsNull(this.tableStockMove.AfAfterMoveCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfAfterMoveCountNull() {
                this[this.tableStockMove.AfAfterMoveCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfBeforeMoveCountNull() {
                return this.IsNull(this.tableStockMove.AfBeforeMoveCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfBeforeMoveCountNull() {
                this[this.tableStockMove.AfBeforeMoveCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfStockUnitPriceFlNull() {
                return this.IsNull(this.tableStockMove.BfStockUnitPriceFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfStockUnitPriceFlNull() {
                this[this.tableStockMove.BfStockUnitPriceFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfMovingSupliStockNull() {
                return this.IsNull(this.tableStockMove.BfMovingSupliStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfMovingSupliStockNull() {
                this[this.tableStockMove.BfMovingSupliStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovingPriceNull() {
                return this.IsNull(this.tableStockMove.MovingPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovingPriceNull() {
                this[this.tableStockMove.MovingPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameKanaNull() {
                return this.IsNull(this.tableStockMove.GoodsNameKanaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameKanaNull() {
                this[this.tableStockMove.GoodsNameKanaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSnmNull() {
                return this.IsNull(this.tableStockMove.SupplierSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSnmNull() {
                this[this.tableStockMove.SupplierSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCdGuideButtonNull() {
                return this.IsNull(this.tableStockMove.SupplierCdGuideButtonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCdGuideButtonNull() {
                this[this.tableStockMove.SupplierCdGuideButtonColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockMoveRowChangeEvent : global::System.EventArgs {
            
            private StockMoveRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveRowChangeEvent(StockMoveRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591