//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3082
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.Controller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("StockDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class StockDataSet : global::System.Data.DataSet {
        
        private StockSlipDataTable tableStockSlip;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected StockDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["StockSlip"] != null)) {
                    base.Tables.Add(new StockSlipDataTable(ds.Tables["StockSlip"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockSlipDataTable StockSlip {
            get {
                return this.tableStockSlip;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            StockDataSet cln = ((StockDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["StockSlip"] != null)) {
                    base.Tables.Add(new StockSlipDataTable(ds.Tables["StockSlip"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableStockSlip = ((StockSlipDataTable)(base.Tables["StockSlip"]));
            if ((initTable == true)) {
                if ((this.tableStockSlip != null)) {
                    this.tableStockSlip.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "StockDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/StockDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableStockSlip = new StockSlipDataTable();
            base.Tables.Add(this.tableStockSlip);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockSlip() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            StockDataSet ds = new StockDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void StockSlipRowChangeEventHandler(object sender, StockSlipRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockSlipDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnNo;
            
            private global::System.Data.DataColumn columnPrintFlag;
            
            private global::System.Data.DataColumn columnEnterpriseCode;
            
            private global::System.Data.DataColumn columnSupplierFormal;
            
            private global::System.Data.DataColumn columnSupplierFormalName;
            
            private global::System.Data.DataColumn columnSupplierSlipNo;
            
            private global::System.Data.DataColumn columnSectionCode;
            
            private global::System.Data.DataColumn columnSectionGuideNm;
            
            private global::System.Data.DataColumn columnSupplierSlipCd;
            
            private global::System.Data.DataColumn columnSupplierSlipCdName;
            
            private global::System.Data.DataColumn columnAccPayDivCd;
            
            private global::System.Data.DataColumn columnAccPayDivCdName;
            
            private global::System.Data.DataColumn columnArrivalGoodsDay;
            
            private global::System.Data.DataColumn columnArrivalGoodsDayString;
            
            private global::System.Data.DataColumn columnStockDate;
            
            private global::System.Data.DataColumn columnStockDateString;
            
            private global::System.Data.DataColumn columnStockInputCode;
            
            private global::System.Data.DataColumn columnStockInputName;
            
            private global::System.Data.DataColumn columnStockAgentCode;
            
            private global::System.Data.DataColumn columnStockAgentName;
            
            private global::System.Data.DataColumn columnPartySaleSlipNum;
            
            private global::System.Data.DataColumn columnStockRowNo;
            
            private global::System.Data.DataColumn columnCommonSeqNo;
            
            private global::System.Data.DataColumn columnStockSlipDtlNum;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnMakerName;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnStockUnitPriceFl;
            
            private global::System.Data.DataColumn columnStockCount;
            
            private global::System.Data.DataColumn columnStockPriceTaxExc;
            
            private global::System.Data.DataColumn columnStockPriceConsTax;
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            private global::System.Data.DataColumn columnWarehouseName;
            
            private global::System.Data.DataColumn columnWarehouseShelfNo;
            
            private global::System.Data.DataColumn columnSupplierCd;
            
            private global::System.Data.DataColumn columnSupplierSnm;
            
            private global::System.Data.DataColumn columnOrderNumber;
            
            private global::System.Data.DataColumn columnStockDtiSlipNote1;
            
            private global::System.Data.DataColumn columnSalesCustomerCode;
            
            private global::System.Data.DataColumn columnSalesCustomerSnm;
            
            private global::System.Data.DataColumn columnMemoExist;
            
            private global::System.Data.DataColumn columnMemoExistName;
            
            private global::System.Data.DataColumn columnSlipMemo1;
            
            private global::System.Data.DataColumn columnSlipMemo2;
            
            private global::System.Data.DataColumn columnSlipMemo3;
            
            private global::System.Data.DataColumn columnInsideMemo1;
            
            private global::System.Data.DataColumn columnInsideMemo2;
            
            private global::System.Data.DataColumn columnInsideMemo3;
            
            private global::System.Data.DataColumn columnBLGoodsCode;
            
            private global::System.Data.DataColumn columnListPriceTaxExcFl;
            
            private global::System.Data.DataColumn columnDebitNoteDiv;
            
            private global::System.Data.DataColumn columnDebitNoteDivName;
            
            private global::System.Data.DataColumn columnInputDay;
            
            private global::System.Data.DataColumn columnStockAddUpADate;
            
            private global::System.Data.DataColumn columnPayeeCode;
            
            private global::System.Data.DataColumn columnPayeeSnm;
            
            private global::System.Data.DataColumn columnStockGoodsCdName;
            
            private global::System.Data.DataColumn columnSubSectionName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockSlipDataTable() {
                this.TableName = "StockSlip";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockSlipDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockSlipDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoColumn {
                get {
                    return this.columnNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintFlagColumn {
                get {
                    return this.columnPrintFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterpriseCodeColumn {
                get {
                    return this.columnEnterpriseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierFormalColumn {
                get {
                    return this.columnSupplierFormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierFormalNameColumn {
                get {
                    return this.columnSupplierFormalName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNoColumn {
                get {
                    return this.columnSupplierSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionCodeColumn {
                get {
                    return this.columnSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionGuideNmColumn {
                get {
                    return this.columnSectionGuideNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipCdColumn {
                get {
                    return this.columnSupplierSlipCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipCdNameColumn {
                get {
                    return this.columnSupplierSlipCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccPayDivCdColumn {
                get {
                    return this.columnAccPayDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccPayDivCdNameColumn {
                get {
                    return this.columnAccPayDivCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalGoodsDayColumn {
                get {
                    return this.columnArrivalGoodsDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalGoodsDayStringColumn {
                get {
                    return this.columnArrivalGoodsDayString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockDateColumn {
                get {
                    return this.columnStockDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockDateStringColumn {
                get {
                    return this.columnStockDateString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockInputCodeColumn {
                get {
                    return this.columnStockInputCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockInputNameColumn {
                get {
                    return this.columnStockInputName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockAgentCodeColumn {
                get {
                    return this.columnStockAgentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockAgentNameColumn {
                get {
                    return this.columnStockAgentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartySaleSlipNumColumn {
                get {
                    return this.columnPartySaleSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockRowNoColumn {
                get {
                    return this.columnStockRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommonSeqNoColumn {
                get {
                    return this.columnCommonSeqNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockSlipDtlNumColumn {
                get {
                    return this.columnStockSlipDtlNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerNameColumn {
                get {
                    return this.columnMakerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockUnitPriceFlColumn {
                get {
                    return this.columnStockUnitPriceFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockCountColumn {
                get {
                    return this.columnStockCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockPriceTaxExcColumn {
                get {
                    return this.columnStockPriceTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockPriceConsTaxColumn {
                get {
                    return this.columnStockPriceConsTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseNameColumn {
                get {
                    return this.columnWarehouseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseShelfNoColumn {
                get {
                    return this.columnWarehouseShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCdColumn {
                get {
                    return this.columnSupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSnmColumn {
                get {
                    return this.columnSupplierSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderNumberColumn {
                get {
                    return this.columnOrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockDtiSlipNote1Column {
                get {
                    return this.columnStockDtiSlipNote1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCustomerCodeColumn {
                get {
                    return this.columnSalesCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCustomerSnmColumn {
                get {
                    return this.columnSalesCustomerSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemoExistColumn {
                get {
                    return this.columnMemoExist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemoExistNameColumn {
                get {
                    return this.columnMemoExistName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipMemo1Column {
                get {
                    return this.columnSlipMemo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipMemo2Column {
                get {
                    return this.columnSlipMemo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipMemo3Column {
                get {
                    return this.columnSlipMemo3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsideMemo1Column {
                get {
                    return this.columnInsideMemo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsideMemo2Column {
                get {
                    return this.columnInsideMemo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsideMemo3Column {
                get {
                    return this.columnInsideMemo3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGoodsCodeColumn {
                get {
                    return this.columnBLGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceTaxExcFlColumn {
                get {
                    return this.columnListPriceTaxExcFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteDivColumn {
                get {
                    return this.columnDebitNoteDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteDivNameColumn {
                get {
                    return this.columnDebitNoteDivName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputDayColumn {
                get {
                    return this.columnInputDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockAddUpADateColumn {
                get {
                    return this.columnStockAddUpADate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayeeCodeColumn {
                get {
                    return this.columnPayeeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PayeeSnmColumn {
                get {
                    return this.columnPayeeSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockGoodsCdNameColumn {
                get {
                    return this.columnStockGoodsCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubSectionNameColumn {
                get {
                    return this.columnSubSectionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockSlipRow this[int index] {
                get {
                    return ((StockSlipRow)(this.Rows[index]));
                }
            }
            
            public event StockSlipRowChangeEventHandler StockSlipRowChanging;
            
            public event StockSlipRowChangeEventHandler StockSlipRowChanged;
            
            public event StockSlipRowChangeEventHandler StockSlipRowDeleting;
            
            public event StockSlipRowChangeEventHandler StockSlipRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockSlipRow(StockSlipRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockSlipRow AddStockSlipRow(
                        int No, 
                        bool PrintFlag, 
                        string EnterpriseCode, 
                        int SupplierFormal, 
                        string SupplierFormalName, 
                        int SupplierSlipNo, 
                        string SectionCode, 
                        string SectionGuideNm, 
                        int SupplierSlipCd, 
                        string SupplierSlipCdName, 
                        int AccPayDivCd, 
                        string AccPayDivCdName, 
                        System.DateTime ArrivalGoodsDay, 
                        string ArrivalGoodsDayString, 
                        System.DateTime StockDate, 
                        string StockDateString, 
                        string StockInputCode, 
                        string StockInputName, 
                        string StockAgentCode, 
                        string StockAgentName, 
                        string PartySaleSlipNum, 
                        int StockRowNo, 
                        long CommonSeqNo, 
                        long StockSlipDtlNum, 
                        int GoodsMakerCd, 
                        string MakerName, 
                        string GoodsNo, 
                        string GoodsName, 
                        double StockUnitPriceFl, 
                        double StockCount, 
                        long StockPriceTaxExc, 
                        long StockPriceConsTax, 
                        string WarehouseCode, 
                        string WarehouseName, 
                        string WarehouseShelfNo, 
                        int SupplierCd, 
                        string SupplierSnm, 
                        string OrderNumber, 
                        string StockDtiSlipNote1, 
                        int SalesCustomerCode, 
                        string SalesCustomerSnm, 
                        int MemoExist, 
                        string MemoExistName, 
                        string SlipMemo1, 
                        string SlipMemo2, 
                        string SlipMemo3, 
                        string InsideMemo1, 
                        string InsideMemo2, 
                        string InsideMemo3, 
                        int BLGoodsCode, 
                        double ListPriceTaxExcFl, 
                        int DebitNoteDiv, 
                        string DebitNoteDivName, 
                        System.DateTime InputDay, 
                        System.DateTime StockAddUpADate, 
                        int PayeeCode, 
                        string PayeeSnm, 
                        string StockGoodsCdName, 
                        string SubSectionName) {
                StockSlipRow rowStockSlipRow = ((StockSlipRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        No,
                        PrintFlag,
                        EnterpriseCode,
                        SupplierFormal,
                        SupplierFormalName,
                        SupplierSlipNo,
                        SectionCode,
                        SectionGuideNm,
                        SupplierSlipCd,
                        SupplierSlipCdName,
                        AccPayDivCd,
                        AccPayDivCdName,
                        ArrivalGoodsDay,
                        ArrivalGoodsDayString,
                        StockDate,
                        StockDateString,
                        StockInputCode,
                        StockInputName,
                        StockAgentCode,
                        StockAgentName,
                        PartySaleSlipNum,
                        StockRowNo,
                        CommonSeqNo,
                        StockSlipDtlNum,
                        GoodsMakerCd,
                        MakerName,
                        GoodsNo,
                        GoodsName,
                        StockUnitPriceFl,
                        StockCount,
                        StockPriceTaxExc,
                        StockPriceConsTax,
                        WarehouseCode,
                        WarehouseName,
                        WarehouseShelfNo,
                        SupplierCd,
                        SupplierSnm,
                        OrderNumber,
                        StockDtiSlipNote1,
                        SalesCustomerCode,
                        SalesCustomerSnm,
                        MemoExist,
                        MemoExistName,
                        SlipMemo1,
                        SlipMemo2,
                        SlipMemo3,
                        InsideMemo1,
                        InsideMemo2,
                        InsideMemo3,
                        BLGoodsCode,
                        ListPriceTaxExcFl,
                        DebitNoteDiv,
                        DebitNoteDivName,
                        InputDay,
                        StockAddUpADate,
                        PayeeCode,
                        PayeeSnm,
                        StockGoodsCdName,
                        SubSectionName};
                rowStockSlipRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockSlipRow);
                return rowStockSlipRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockSlipRow FindByNo(int No) {
                return ((StockSlipRow)(this.Rows.Find(new object[] {
                            No})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockSlipDataTable cln = ((StockSlipDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockSlipDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNo = base.Columns["No"];
                this.columnPrintFlag = base.Columns["PrintFlag"];
                this.columnEnterpriseCode = base.Columns["EnterpriseCode"];
                this.columnSupplierFormal = base.Columns["SupplierFormal"];
                this.columnSupplierFormalName = base.Columns["SupplierFormalName"];
                this.columnSupplierSlipNo = base.Columns["SupplierSlipNo"];
                this.columnSectionCode = base.Columns["SectionCode"];
                this.columnSectionGuideNm = base.Columns["SectionGuideNm"];
                this.columnSupplierSlipCd = base.Columns["SupplierSlipCd"];
                this.columnSupplierSlipCdName = base.Columns["SupplierSlipCdName"];
                this.columnAccPayDivCd = base.Columns["AccPayDivCd"];
                this.columnAccPayDivCdName = base.Columns["AccPayDivCdName"];
                this.columnArrivalGoodsDay = base.Columns["ArrivalGoodsDay"];
                this.columnArrivalGoodsDayString = base.Columns["ArrivalGoodsDayString"];
                this.columnStockDate = base.Columns["StockDate"];
                this.columnStockDateString = base.Columns["StockDateString"];
                this.columnStockInputCode = base.Columns["StockInputCode"];
                this.columnStockInputName = base.Columns["StockInputName"];
                this.columnStockAgentCode = base.Columns["StockAgentCode"];
                this.columnStockAgentName = base.Columns["StockAgentName"];
                this.columnPartySaleSlipNum = base.Columns["PartySaleSlipNum"];
                this.columnStockRowNo = base.Columns["StockRowNo"];
                this.columnCommonSeqNo = base.Columns["CommonSeqNo"];
                this.columnStockSlipDtlNum = base.Columns["StockSlipDtlNum"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnMakerName = base.Columns["MakerName"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnStockUnitPriceFl = base.Columns["StockUnitPriceFl"];
                this.columnStockCount = base.Columns["StockCount"];
                this.columnStockPriceTaxExc = base.Columns["StockPriceTaxExc"];
                this.columnStockPriceConsTax = base.Columns["StockPriceConsTax"];
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnWarehouseName = base.Columns["WarehouseName"];
                this.columnWarehouseShelfNo = base.Columns["WarehouseShelfNo"];
                this.columnSupplierCd = base.Columns["SupplierCd"];
                this.columnSupplierSnm = base.Columns["SupplierSnm"];
                this.columnOrderNumber = base.Columns["OrderNumber"];
                this.columnStockDtiSlipNote1 = base.Columns["StockDtiSlipNote1"];
                this.columnSalesCustomerCode = base.Columns["SalesCustomerCode"];
                this.columnSalesCustomerSnm = base.Columns["SalesCustomerSnm"];
                this.columnMemoExist = base.Columns["MemoExist"];
                this.columnMemoExistName = base.Columns["MemoExistName"];
                this.columnSlipMemo1 = base.Columns["SlipMemo1"];
                this.columnSlipMemo2 = base.Columns["SlipMemo2"];
                this.columnSlipMemo3 = base.Columns["SlipMemo3"];
                this.columnInsideMemo1 = base.Columns["InsideMemo1"];
                this.columnInsideMemo2 = base.Columns["InsideMemo2"];
                this.columnInsideMemo3 = base.Columns["InsideMemo3"];
                this.columnBLGoodsCode = base.Columns["BLGoodsCode"];
                this.columnListPriceTaxExcFl = base.Columns["ListPriceTaxExcFl"];
                this.columnDebitNoteDiv = base.Columns["DebitNoteDiv"];
                this.columnDebitNoteDivName = base.Columns["DebitNoteDivName"];
                this.columnInputDay = base.Columns["InputDay"];
                this.columnStockAddUpADate = base.Columns["StockAddUpADate"];
                this.columnPayeeCode = base.Columns["PayeeCode"];
                this.columnPayeeSnm = base.Columns["PayeeSnm"];
                this.columnStockGoodsCdName = base.Columns["StockGoodsCdName"];
                this.columnSubSectionName = base.Columns["SubSectionName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNo = new global::System.Data.DataColumn("No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo);
                this.columnPrintFlag = new global::System.Data.DataColumn("PrintFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintFlag);
                this.columnEnterpriseCode = new global::System.Data.DataColumn("EnterpriseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterpriseCode);
                this.columnSupplierFormal = new global::System.Data.DataColumn("SupplierFormal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierFormal);
                this.columnSupplierFormalName = new global::System.Data.DataColumn("SupplierFormalName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierFormalName);
                this.columnSupplierSlipNo = new global::System.Data.DataColumn("SupplierSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNo);
                this.columnSectionCode = new global::System.Data.DataColumn("SectionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionCode);
                this.columnSectionGuideNm = new global::System.Data.DataColumn("SectionGuideNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionGuideNm);
                this.columnSupplierSlipCd = new global::System.Data.DataColumn("SupplierSlipCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipCd);
                this.columnSupplierSlipCdName = new global::System.Data.DataColumn("SupplierSlipCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipCdName);
                this.columnAccPayDivCd = new global::System.Data.DataColumn("AccPayDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccPayDivCd);
                this.columnAccPayDivCdName = new global::System.Data.DataColumn("AccPayDivCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccPayDivCdName);
                this.columnArrivalGoodsDay = new global::System.Data.DataColumn("ArrivalGoodsDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalGoodsDay);
                this.columnArrivalGoodsDayString = new global::System.Data.DataColumn("ArrivalGoodsDayString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalGoodsDayString);
                this.columnStockDate = new global::System.Data.DataColumn("StockDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockDate);
                this.columnStockDateString = new global::System.Data.DataColumn("StockDateString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockDateString);
                this.columnStockInputCode = new global::System.Data.DataColumn("StockInputCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockInputCode);
                this.columnStockInputName = new global::System.Data.DataColumn("StockInputName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockInputName);
                this.columnStockAgentCode = new global::System.Data.DataColumn("StockAgentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAgentCode);
                this.columnStockAgentName = new global::System.Data.DataColumn("StockAgentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAgentName);
                this.columnPartySaleSlipNum = new global::System.Data.DataColumn("PartySaleSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartySaleSlipNum);
                this.columnStockRowNo = new global::System.Data.DataColumn("StockRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockRowNo);
                this.columnCommonSeqNo = new global::System.Data.DataColumn("CommonSeqNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommonSeqNo);
                this.columnStockSlipDtlNum = new global::System.Data.DataColumn("StockSlipDtlNum", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSlipDtlNum);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnMakerName = new global::System.Data.DataColumn("MakerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerName);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnStockUnitPriceFl = new global::System.Data.DataColumn("StockUnitPriceFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockUnitPriceFl);
                this.columnStockCount = new global::System.Data.DataColumn("StockCount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockCount);
                this.columnStockPriceTaxExc = new global::System.Data.DataColumn("StockPriceTaxExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockPriceTaxExc);
                this.columnStockPriceConsTax = new global::System.Data.DataColumn("StockPriceConsTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockPriceConsTax);
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnWarehouseName = new global::System.Data.DataColumn("WarehouseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseName);
                this.columnWarehouseShelfNo = new global::System.Data.DataColumn("WarehouseShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseShelfNo);
                this.columnSupplierCd = new global::System.Data.DataColumn("SupplierCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCd);
                this.columnSupplierSnm = new global::System.Data.DataColumn("SupplierSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSnm);
                this.columnOrderNumber = new global::System.Data.DataColumn("OrderNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNumber);
                this.columnStockDtiSlipNote1 = new global::System.Data.DataColumn("StockDtiSlipNote1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockDtiSlipNote1);
                this.columnSalesCustomerCode = new global::System.Data.DataColumn("SalesCustomerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCustomerCode);
                this.columnSalesCustomerSnm = new global::System.Data.DataColumn("SalesCustomerSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCustomerSnm);
                this.columnMemoExist = new global::System.Data.DataColumn("MemoExist", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemoExist);
                this.columnMemoExistName = new global::System.Data.DataColumn("MemoExistName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemoExistName);
                this.columnSlipMemo1 = new global::System.Data.DataColumn("SlipMemo1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipMemo1);
                this.columnSlipMemo2 = new global::System.Data.DataColumn("SlipMemo2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipMemo2);
                this.columnSlipMemo3 = new global::System.Data.DataColumn("SlipMemo3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipMemo3);
                this.columnInsideMemo1 = new global::System.Data.DataColumn("InsideMemo1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsideMemo1);
                this.columnInsideMemo2 = new global::System.Data.DataColumn("InsideMemo2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsideMemo2);
                this.columnInsideMemo3 = new global::System.Data.DataColumn("InsideMemo3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsideMemo3);
                this.columnBLGoodsCode = new global::System.Data.DataColumn("BLGoodsCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGoodsCode);
                this.columnListPriceTaxExcFl = new global::System.Data.DataColumn("ListPriceTaxExcFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPriceTaxExcFl);
                this.columnDebitNoteDiv = new global::System.Data.DataColumn("DebitNoteDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteDiv);
                this.columnDebitNoteDivName = new global::System.Data.DataColumn("DebitNoteDivName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteDivName);
                this.columnInputDay = new global::System.Data.DataColumn("InputDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputDay);
                this.columnStockAddUpADate = new global::System.Data.DataColumn("StockAddUpADate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAddUpADate);
                this.columnPayeeCode = new global::System.Data.DataColumn("PayeeCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayeeCode);
                this.columnPayeeSnm = new global::System.Data.DataColumn("PayeeSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayeeSnm);
                this.columnStockGoodsCdName = new global::System.Data.DataColumn("StockGoodsCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockGoodsCdName);
                this.columnSubSectionName = new global::System.Data.DataColumn("SubSectionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubSectionName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNo}, true));
                this.columnNo.AllowDBNull = false;
                this.columnNo.Unique = true;
                this.columnNo.Caption = "No.";
                this.columnPrintFlag.Caption = "印刷";
                this.columnEnterpriseCode.Caption = "企業コード";
                this.columnSupplierFormal.Caption = "仕入形式";
                this.columnSupplierFormal.DefaultValue = ((int)(0));
                this.columnSupplierFormalName.Caption = "仕入形式";
                this.columnSupplierSlipNo.Caption = "伝票番号";
                this.columnSectionCode.Caption = "拠点コード";
                this.columnSectionGuideNm.Caption = "拠点名";
                this.columnSupplierSlipCd.Caption = "伝票区分";
                this.columnSupplierSlipCd.DefaultValue = ((int)(0));
                this.columnSupplierSlipCdName.Caption = "伝票区分";
                this.columnAccPayDivCd.Caption = "買掛区分";
                this.columnAccPayDivCd.DefaultValue = ((int)(0));
                this.columnAccPayDivCdName.Caption = "買掛区分";
                this.columnArrivalGoodsDay.Caption = "入荷日";
                this.columnArrivalGoodsDayString.Caption = "入荷日";
                this.columnArrivalGoodsDayString.DefaultValue = ((string)(""));
                this.columnStockDate.Caption = "仕入日";
                this.columnStockDateString.Caption = "仕入日";
                this.columnStockInputCode.Caption = "入力者コード";
                this.columnStockInputName.Caption = "入力者";
                this.columnStockAgentCode.Caption = "担当者コード";
                this.columnStockAgentName.Caption = "担当者名";
                this.columnPartySaleSlipNum.Caption = "相手先伝票番号";
                this.columnStockRowNo.Caption = "行番号";
                this.columnStockRowNo.DefaultValue = ((int)(0));
                this.columnCommonSeqNo.Caption = "共通通番";
                this.columnStockSlipDtlNum.Caption = "仕入明細通番";
                this.columnGoodsMakerCd.Caption = "商品メーカーコード";
                this.columnGoodsMakerCd.DefaultValue = ((int)(0));
                this.columnMakerName.Caption = "メーカー名";
                this.columnGoodsNo.Caption = "商品番号";
                this.columnGoodsName.Caption = "商品名";
                this.columnStockUnitPriceFl.Caption = "仕入単価（税抜，浮動）";
                this.columnStockCount.Caption = "仕入数";
                this.columnStockPriceTaxExc.Caption = "仕入金額（税抜き）";
                this.columnStockPriceConsTax.Caption = "消費税";
                this.columnWarehouseCode.Caption = "倉庫コード";
                this.columnWarehouseName.Caption = "倉庫名";
                this.columnWarehouseShelfNo.Caption = "倉庫棚番";
                this.columnSupplierCd.Caption = "仕入先コード";
                this.columnSupplierSnm.Caption = "仕入先名称";
                this.columnOrderNumber.Caption = "発注番号";
                this.columnStockDtiSlipNote1.Caption = "明細摘要";
                this.columnSalesCustomerCode.Caption = "販売先コード";
                this.columnSalesCustomerCode.DefaultValue = ((int)(0));
                this.columnSalesCustomerSnm.Caption = "販売先略称";
                this.columnSalesCustomerSnm.DefaultValue = ((string)(""));
                this.columnMemoExist.Caption = "メモ存在フラグ";
                this.columnMemoExistName.Caption = "メモ存在";
                this.columnSlipMemo1.Caption = "伝票メモ１";
                this.columnSlipMemo2.Caption = "伝票メモ２";
                this.columnSlipMemo3.Caption = "伝票メモ３";
                this.columnInsideMemo1.Caption = "社内メモ１";
                this.columnInsideMemo2.Caption = "社内メモ２";
                this.columnInsideMemo3.Caption = "社内メモ３";
                this.columnBLGoodsCode.Caption = "BLコード";
                this.columnListPriceTaxExcFl.Caption = "定価(税抜、浮動)";
                this.columnDebitNoteDiv.Caption = "赤伝区分";
                this.columnInputDay.Caption = "入力日";
                this.columnStockAddUpADate.Caption = "仕入計上日付";
                this.columnPayeeCode.Caption = "支払先コード";
                this.columnPayeeSnm.Caption = "支払先略称";
                this.columnSubSectionName.Caption = "部門名";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockSlipRow NewStockSlipRow() {
                return ((StockSlipRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockSlipRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockSlipRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockSlipRowChanged != null)) {
                    this.StockSlipRowChanged(this, new StockSlipRowChangeEvent(((StockSlipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockSlipRowChanging != null)) {
                    this.StockSlipRowChanging(this, new StockSlipRowChangeEvent(((StockSlipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockSlipRowDeleted != null)) {
                    this.StockSlipRowDeleted(this, new StockSlipRowChangeEvent(((StockSlipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockSlipRowDeleting != null)) {
                    this.StockSlipRowDeleting(this, new StockSlipRowChangeEvent(((StockSlipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockSlipRow(StockSlipRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StockDataSet ds = new StockDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockSlipDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockSlipRow : global::System.Data.DataRow {
            
            private StockSlipDataTable tableStockSlip;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockSlipRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockSlip = ((StockSlipDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int No {
                get {
                    return ((int)(this[this.tableStockSlip.NoColumn]));
                }
                set {
                    this[this.tableStockSlip.NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PrintFlag {
                get {
                    try {
                        return ((bool)(this[this.tableStockSlip.PrintFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'PrintFlag\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.PrintFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnterpriseCode {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.EnterpriseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'EnterpriseCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.EnterpriseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierFormal {
                get {
                    try {
                        return ((int)(this[this.tableStockSlip.SupplierFormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SupplierFormal\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SupplierFormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierFormalName {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.SupplierFormalNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SupplierFormalName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SupplierFormalNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableStockSlip.SupplierSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SupplierSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SupplierSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionCode {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.SectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionGuideNm {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.SectionGuideNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SectionGuideNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SectionGuideNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierSlipCd {
                get {
                    try {
                        return ((int)(this[this.tableStockSlip.SupplierSlipCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SupplierSlipCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SupplierSlipCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSlipCdName {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.SupplierSlipCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SupplierSlipCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SupplierSlipCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AccPayDivCd {
                get {
                    try {
                        return ((int)(this[this.tableStockSlip.AccPayDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'AccPayDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.AccPayDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccPayDivCdName {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.AccPayDivCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'AccPayDivCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.AccPayDivCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ArrivalGoodsDay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockSlip.ArrivalGoodsDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'ArrivalGoodsDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.ArrivalGoodsDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ArrivalGoodsDayString {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.ArrivalGoodsDayStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'ArrivalGoodsDayString\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.ArrivalGoodsDayStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StockDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockSlip.StockDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockDateString {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.StockDateStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockDateString\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockDateStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockInputCode {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.StockInputCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockInputCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockInputCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockInputName {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.StockInputNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockInputName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockInputNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockAgentCode {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.StockAgentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockAgentCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockAgentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockAgentName {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.StockAgentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockAgentName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockAgentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartySaleSlipNum {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.PartySaleSlipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'PartySaleSlipNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.PartySaleSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockRowNo {
                get {
                    try {
                        return ((int)(this[this.tableStockSlip.StockRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CommonSeqNo {
                get {
                    try {
                        return ((long)(this[this.tableStockSlip.CommonSeqNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'CommonSeqNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.CommonSeqNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockSlipDtlNum {
                get {
                    try {
                        return ((long)(this[this.tableStockSlip.StockSlipDtlNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockSlipDtlNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockSlipDtlNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCd {
                get {
                    try {
                        return ((int)(this[this.tableStockSlip.GoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'GoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerName {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.MakerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'MakerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.MakerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.GoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'GoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockUnitPriceFl {
                get {
                    try {
                        return ((double)(this[this.tableStockSlip.StockUnitPriceFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockUnitPriceFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockUnitPriceFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockCount {
                get {
                    try {
                        return ((double)(this[this.tableStockSlip.StockCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockPriceTaxExc {
                get {
                    try {
                        return ((long)(this[this.tableStockSlip.StockPriceTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockPriceTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockPriceTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockPriceConsTax {
                get {
                    try {
                        return ((long)(this[this.tableStockSlip.StockPriceConsTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockPriceConsTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockPriceConsTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.WarehouseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'WarehouseCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseName {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.WarehouseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'WarehouseName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.WarehouseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.WarehouseShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'WarehouseShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.WarehouseShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierCd {
                get {
                    try {
                        return ((int)(this[this.tableStockSlip.SupplierCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SupplierCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSnm {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.SupplierSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SupplierSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SupplierSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderNumber {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.OrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'OrderNumber\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.OrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockDtiSlipNote1 {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.StockDtiSlipNote1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockDtiSlipNote1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockDtiSlipNote1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesCustomerCode {
                get {
                    try {
                        return ((int)(this[this.tableStockSlip.SalesCustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SalesCustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SalesCustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCustomerSnm {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.SalesCustomerSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SalesCustomerSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SalesCustomerSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MemoExist {
                get {
                    try {
                        return ((int)(this[this.tableStockSlip.MemoExistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'MemoExist\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.MemoExistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MemoExistName {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.MemoExistNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'MemoExistName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.MemoExistNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipMemo1 {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.SlipMemo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SlipMemo1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SlipMemo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipMemo2 {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.SlipMemo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SlipMemo2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SlipMemo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipMemo3 {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.SlipMemo3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SlipMemo3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SlipMemo3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsideMemo1 {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.InsideMemo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'InsideMemo1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.InsideMemo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsideMemo2 {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.InsideMemo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'InsideMemo2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.InsideMemo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsideMemo3 {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.InsideMemo3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'InsideMemo3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.InsideMemo3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BLGoodsCode {
                get {
                    try {
                        return ((int)(this[this.tableStockSlip.BLGoodsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'BLGoodsCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.BLGoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ListPriceTaxExcFl {
                get {
                    try {
                        return ((double)(this[this.tableStockSlip.ListPriceTaxExcFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'ListPriceTaxExcFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.ListPriceTaxExcFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DebitNoteDiv {
                get {
                    try {
                        return ((int)(this[this.tableStockSlip.DebitNoteDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'DebitNoteDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.DebitNoteDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebitNoteDivName {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.DebitNoteDivNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'DebitNoteDivName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.DebitNoteDivNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InputDay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockSlip.InputDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'InputDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.InputDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StockAddUpADate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockSlip.StockAddUpADateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockAddUpADate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockAddUpADateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PayeeCode {
                get {
                    try {
                        return ((int)(this[this.tableStockSlip.PayeeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'PayeeCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.PayeeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PayeeSnm {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.PayeeSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'PayeeSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.PayeeSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockGoodsCdName {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.StockGoodsCdNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'StockGoodsCdName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.StockGoodsCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubSectionName {
                get {
                    try {
                        return ((string)(this[this.tableStockSlip.SubSectionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockSlip\' にある列 \'SubSectionName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockSlip.SubSectionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrintFlagNull() {
                return this.IsNull(this.tableStockSlip.PrintFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrintFlagNull() {
                this[this.tableStockSlip.PrintFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnterpriseCodeNull() {
                return this.IsNull(this.tableStockSlip.EnterpriseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnterpriseCodeNull() {
                this[this.tableStockSlip.EnterpriseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierFormalNull() {
                return this.IsNull(this.tableStockSlip.SupplierFormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierFormalNull() {
                this[this.tableStockSlip.SupplierFormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierFormalNameNull() {
                return this.IsNull(this.tableStockSlip.SupplierFormalNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierFormalNameNull() {
                this[this.tableStockSlip.SupplierFormalNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNoNull() {
                return this.IsNull(this.tableStockSlip.SupplierSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNoNull() {
                this[this.tableStockSlip.SupplierSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionCodeNull() {
                return this.IsNull(this.tableStockSlip.SectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionCodeNull() {
                this[this.tableStockSlip.SectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionGuideNmNull() {
                return this.IsNull(this.tableStockSlip.SectionGuideNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionGuideNmNull() {
                this[this.tableStockSlip.SectionGuideNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipCdNull() {
                return this.IsNull(this.tableStockSlip.SupplierSlipCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipCdNull() {
                this[this.tableStockSlip.SupplierSlipCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipCdNameNull() {
                return this.IsNull(this.tableStockSlip.SupplierSlipCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipCdNameNull() {
                this[this.tableStockSlip.SupplierSlipCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccPayDivCdNull() {
                return this.IsNull(this.tableStockSlip.AccPayDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccPayDivCdNull() {
                this[this.tableStockSlip.AccPayDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccPayDivCdNameNull() {
                return this.IsNull(this.tableStockSlip.AccPayDivCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccPayDivCdNameNull() {
                this[this.tableStockSlip.AccPayDivCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalGoodsDayNull() {
                return this.IsNull(this.tableStockSlip.ArrivalGoodsDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalGoodsDayNull() {
                this[this.tableStockSlip.ArrivalGoodsDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalGoodsDayStringNull() {
                return this.IsNull(this.tableStockSlip.ArrivalGoodsDayStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalGoodsDayStringNull() {
                this[this.tableStockSlip.ArrivalGoodsDayStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockDateNull() {
                return this.IsNull(this.tableStockSlip.StockDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockDateNull() {
                this[this.tableStockSlip.StockDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockDateStringNull() {
                return this.IsNull(this.tableStockSlip.StockDateStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockDateStringNull() {
                this[this.tableStockSlip.StockDateStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockInputCodeNull() {
                return this.IsNull(this.tableStockSlip.StockInputCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockInputCodeNull() {
                this[this.tableStockSlip.StockInputCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockInputNameNull() {
                return this.IsNull(this.tableStockSlip.StockInputNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockInputNameNull() {
                this[this.tableStockSlip.StockInputNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockAgentCodeNull() {
                return this.IsNull(this.tableStockSlip.StockAgentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockAgentCodeNull() {
                this[this.tableStockSlip.StockAgentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockAgentNameNull() {
                return this.IsNull(this.tableStockSlip.StockAgentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockAgentNameNull() {
                this[this.tableStockSlip.StockAgentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartySaleSlipNumNull() {
                return this.IsNull(this.tableStockSlip.PartySaleSlipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartySaleSlipNumNull() {
                this[this.tableStockSlip.PartySaleSlipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockRowNoNull() {
                return this.IsNull(this.tableStockSlip.StockRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockRowNoNull() {
                this[this.tableStockSlip.StockRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommonSeqNoNull() {
                return this.IsNull(this.tableStockSlip.CommonSeqNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommonSeqNoNull() {
                this[this.tableStockSlip.CommonSeqNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockSlipDtlNumNull() {
                return this.IsNull(this.tableStockSlip.StockSlipDtlNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockSlipDtlNumNull() {
                this[this.tableStockSlip.StockSlipDtlNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMakerCdNull() {
                return this.IsNull(this.tableStockSlip.GoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMakerCdNull() {
                this[this.tableStockSlip.GoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerNameNull() {
                return this.IsNull(this.tableStockSlip.MakerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerNameNull() {
                this[this.tableStockSlip.MakerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNull() {
                return this.IsNull(this.tableStockSlip.GoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNull() {
                this[this.tableStockSlip.GoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableStockSlip.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableStockSlip.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockUnitPriceFlNull() {
                return this.IsNull(this.tableStockSlip.StockUnitPriceFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockUnitPriceFlNull() {
                this[this.tableStockSlip.StockUnitPriceFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockCountNull() {
                return this.IsNull(this.tableStockSlip.StockCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockCountNull() {
                this[this.tableStockSlip.StockCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockPriceTaxExcNull() {
                return this.IsNull(this.tableStockSlip.StockPriceTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockPriceTaxExcNull() {
                this[this.tableStockSlip.StockPriceTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockPriceConsTaxNull() {
                return this.IsNull(this.tableStockSlip.StockPriceConsTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockPriceConsTaxNull() {
                this[this.tableStockSlip.StockPriceConsTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCodeNull() {
                return this.IsNull(this.tableStockSlip.WarehouseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCodeNull() {
                this[this.tableStockSlip.WarehouseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNameNull() {
                return this.IsNull(this.tableStockSlip.WarehouseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNameNull() {
                this[this.tableStockSlip.WarehouseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseShelfNoNull() {
                return this.IsNull(this.tableStockSlip.WarehouseShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseShelfNoNull() {
                this[this.tableStockSlip.WarehouseShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCdNull() {
                return this.IsNull(this.tableStockSlip.SupplierCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCdNull() {
                this[this.tableStockSlip.SupplierCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSnmNull() {
                return this.IsNull(this.tableStockSlip.SupplierSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSnmNull() {
                this[this.tableStockSlip.SupplierSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderNumberNull() {
                return this.IsNull(this.tableStockSlip.OrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderNumberNull() {
                this[this.tableStockSlip.OrderNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockDtiSlipNote1Null() {
                return this.IsNull(this.tableStockSlip.StockDtiSlipNote1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockDtiSlipNote1Null() {
                this[this.tableStockSlip.StockDtiSlipNote1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCustomerCodeNull() {
                return this.IsNull(this.tableStockSlip.SalesCustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCustomerCodeNull() {
                this[this.tableStockSlip.SalesCustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCustomerSnmNull() {
                return this.IsNull(this.tableStockSlip.SalesCustomerSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCustomerSnmNull() {
                this[this.tableStockSlip.SalesCustomerSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemoExistNull() {
                return this.IsNull(this.tableStockSlip.MemoExistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemoExistNull() {
                this[this.tableStockSlip.MemoExistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemoExistNameNull() {
                return this.IsNull(this.tableStockSlip.MemoExistNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemoExistNameNull() {
                this[this.tableStockSlip.MemoExistNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipMemo1Null() {
                return this.IsNull(this.tableStockSlip.SlipMemo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipMemo1Null() {
                this[this.tableStockSlip.SlipMemo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipMemo2Null() {
                return this.IsNull(this.tableStockSlip.SlipMemo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipMemo2Null() {
                this[this.tableStockSlip.SlipMemo2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipMemo3Null() {
                return this.IsNull(this.tableStockSlip.SlipMemo3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipMemo3Null() {
                this[this.tableStockSlip.SlipMemo3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsideMemo1Null() {
                return this.IsNull(this.tableStockSlip.InsideMemo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsideMemo1Null() {
                this[this.tableStockSlip.InsideMemo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsideMemo2Null() {
                return this.IsNull(this.tableStockSlip.InsideMemo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsideMemo2Null() {
                this[this.tableStockSlip.InsideMemo2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsideMemo3Null() {
                return this.IsNull(this.tableStockSlip.InsideMemo3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsideMemo3Null() {
                this[this.tableStockSlip.InsideMemo3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGoodsCodeNull() {
                return this.IsNull(this.tableStockSlip.BLGoodsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGoodsCodeNull() {
                this[this.tableStockSlip.BLGoodsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceTaxExcFlNull() {
                return this.IsNull(this.tableStockSlip.ListPriceTaxExcFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceTaxExcFlNull() {
                this[this.tableStockSlip.ListPriceTaxExcFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteDivNull() {
                return this.IsNull(this.tableStockSlip.DebitNoteDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteDivNull() {
                this[this.tableStockSlip.DebitNoteDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteDivNameNull() {
                return this.IsNull(this.tableStockSlip.DebitNoteDivNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteDivNameNull() {
                this[this.tableStockSlip.DebitNoteDivNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputDayNull() {
                return this.IsNull(this.tableStockSlip.InputDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputDayNull() {
                this[this.tableStockSlip.InputDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockAddUpADateNull() {
                return this.IsNull(this.tableStockSlip.StockAddUpADateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockAddUpADateNull() {
                this[this.tableStockSlip.StockAddUpADateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayeeCodeNull() {
                return this.IsNull(this.tableStockSlip.PayeeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayeeCodeNull() {
                this[this.tableStockSlip.PayeeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayeeSnmNull() {
                return this.IsNull(this.tableStockSlip.PayeeSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayeeSnmNull() {
                this[this.tableStockSlip.PayeeSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockGoodsCdNameNull() {
                return this.IsNull(this.tableStockSlip.StockGoodsCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockGoodsCdNameNull() {
                this[this.tableStockSlip.StockGoodsCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubSectionNameNull() {
                return this.IsNull(this.tableStockSlip.SubSectionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubSectionNameNull() {
                this[this.tableStockSlip.SubSectionNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockSlipRowChangeEvent : global::System.EventArgs {
            
            private StockSlipRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockSlipRowChangeEvent(StockSlipRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockSlipRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591