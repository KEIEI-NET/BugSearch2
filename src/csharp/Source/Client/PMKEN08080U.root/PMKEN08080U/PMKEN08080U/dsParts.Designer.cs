//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3603
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Library.Windows.Forms {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsParts")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    internal partial class dsParts : global::System.Data.DataSet {
        
        private PartsInfoDataTable tablePartsInfo;
        
        private JoinPartsDataTable tableJoinParts;
        
        private StockDataTable tableStock;
        
        private global::System.Data.DataRelation relationPartsInfo_JoinParts;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsParts() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsParts(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PartsInfo"] != null)) {
                    base.Tables.Add(new PartsInfoDataTable(ds.Tables["PartsInfo"]));
                }
                if ((ds.Tables["JoinParts"] != null)) {
                    base.Tables.Add(new JoinPartsDataTable(ds.Tables["JoinParts"]));
                }
                if ((ds.Tables["Stock"] != null)) {
                    base.Tables.Add(new StockDataTable(ds.Tables["Stock"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PartsInfoDataTable PartsInfo {
            get {
                return this.tablePartsInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public JoinPartsDataTable JoinParts {
            get {
                return this.tableJoinParts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockDataTable Stock {
            get {
                return this.tableStock;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsParts cln = ((dsParts)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PartsInfo"] != null)) {
                    base.Tables.Add(new PartsInfoDataTable(ds.Tables["PartsInfo"]));
                }
                if ((ds.Tables["JoinParts"] != null)) {
                    base.Tables.Add(new JoinPartsDataTable(ds.Tables["JoinParts"]));
                }
                if ((ds.Tables["Stock"] != null)) {
                    base.Tables.Add(new StockDataTable(ds.Tables["Stock"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePartsInfo = ((PartsInfoDataTable)(base.Tables["PartsInfo"]));
            if ((initTable == true)) {
                if ((this.tablePartsInfo != null)) {
                    this.tablePartsInfo.InitVars();
                }
            }
            this.tableJoinParts = ((JoinPartsDataTable)(base.Tables["JoinParts"]));
            if ((initTable == true)) {
                if ((this.tableJoinParts != null)) {
                    this.tableJoinParts.InitVars();
                }
            }
            this.tableStock = ((StockDataTable)(base.Tables["Stock"]));
            if ((initTable == true)) {
                if ((this.tableStock != null)) {
                    this.tableStock.InitVars();
                }
            }
            this.relationPartsInfo_JoinParts = this.Relations["PartsInfo_JoinParts"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsParts";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsParts.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePartsInfo = new PartsInfoDataTable();
            base.Tables.Add(this.tablePartsInfo);
            this.tableJoinParts = new JoinPartsDataTable();
            base.Tables.Add(this.tableJoinParts);
            this.tableStock = new StockDataTable();
            base.Tables.Add(this.tableStock);
            this.relationPartsInfo_JoinParts = new global::System.Data.DataRelation("PartsInfo_JoinParts", new global::System.Data.DataColumn[] {
                        this.tablePartsInfo.MakerCdColumn}, new global::System.Data.DataColumn[] {
                        this.tableJoinParts.JoinSourMakerColumn}, false);
            this.Relations.Add(this.relationPartsInfo_JoinParts);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePartsInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeJoinParts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStock() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsParts ds = new dsParts();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PartsInfoRowChangeEventHandler(object sender, PartsInfoRowChangeEvent e);
        
        public delegate void JoinPartsRowChangeEventHandler(object sender, JoinPartsRowChangeEvent e);
        
        public delegate void StockRowChangeEventHandler(object sender, StockRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PartsInfoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPartsName;
            
            private global::System.Data.DataColumn columnPartsQty;
            
            private global::System.Data.DataColumn columnStandardName;
            
            private global::System.Data.DataColumn columnMakerName;
            
            private global::System.Data.DataColumn columnClgPrtsNo;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnPartsOpNm;
            
            private global::System.Data.DataColumn columnWarehouse;
            
            private global::System.Data.DataColumn columnShelf;
            
            private global::System.Data.DataColumn columnStockCnt;
            
            private global::System.Data.DataColumn columnSelImage;
            
            private global::System.Data.DataColumn columnSet;
            
            private global::System.Data.DataColumn columnSubst;
            
            private global::System.Data.DataColumn columnSelectionState;
            
            private global::System.Data.DataColumn columnNewPrtsNo;
            
            private global::System.Data.DataColumn columnPrmSetDtlNo2;
            
            private global::System.Data.DataColumn columnMakerCd;
            
            private global::System.Data.DataColumn columnGenTanka;
            
            private global::System.Data.DataColumn columnUriTanka;
            
            private global::System.Data.DataColumn columnArariritu;
            
            private global::System.Data.DataColumn columnArarigaku;
            
            private global::System.Data.DataColumn columnOldPartsNo;
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartsInfoDataTable() {
                this.TableName = "PartsInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PartsInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PartsInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartsNameColumn {
                get {
                    return this.columnPartsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartsQtyColumn {
                get {
                    return this.columnPartsQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StandardNameColumn {
                get {
                    return this.columnStandardName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerNameColumn {
                get {
                    return this.columnMakerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClgPrtsNoColumn {
                get {
                    return this.columnClgPrtsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartsOpNmColumn {
                get {
                    return this.columnPartsOpNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseColumn {
                get {
                    return this.columnWarehouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShelfColumn {
                get {
                    return this.columnShelf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockCntColumn {
                get {
                    return this.columnStockCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelImageColumn {
                get {
                    return this.columnSelImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetColumn {
                get {
                    return this.columnSet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubstColumn {
                get {
                    return this.columnSubst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectionStateColumn {
                get {
                    return this.columnSelectionState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewPrtsNoColumn {
                get {
                    return this.columnNewPrtsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrmSetDtlNo2Column {
                get {
                    return this.columnPrmSetDtlNo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerCdColumn {
                get {
                    return this.columnMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenTankaColumn {
                get {
                    return this.columnGenTanka;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UriTankaColumn {
                get {
                    return this.columnUriTanka;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArarirituColumn {
                get {
                    return this.columnArariritu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArarigakuColumn {
                get {
                    return this.columnArarigaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldPartsNoColumn {
                get {
                    return this.columnOldPartsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartsInfoRow this[int index] {
                get {
                    return ((PartsInfoRow)(this.Rows[index]));
                }
            }
            
            public event PartsInfoRowChangeEventHandler PartsInfoRowChanging;
            
            public event PartsInfoRowChangeEventHandler PartsInfoRowChanged;
            
            public event PartsInfoRowChangeEventHandler PartsInfoRowDeleting;
            
            public event PartsInfoRowChangeEventHandler PartsInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPartsInfoRow(PartsInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartsInfoRow AddPartsInfoRow(
                        string PartsName, 
                        double PartsQty, 
                        string StandardName, 
                        string MakerName, 
                        string ClgPrtsNo, 
                        double Price, 
                        string PartsOpNm, 
                        string Warehouse, 
                        string Shelf, 
                        double StockCnt, 
                        System.Drawing.Image SelImage, 
                        System.Drawing.Image Set, 
                        System.Drawing.Image Subst, 
                        bool SelectionState, 
                        string NewPrtsNo, 
                        string PrmSetDtlNo2, 
                        int MakerCd, 
                        double GenTanka, 
                        double UriTanka, 
                        double Arariritu, 
                        double Ararigaku, 
                        string OldPartsNo, 
                        string WarehouseCode) {
                PartsInfoRow rowPartsInfoRow = ((PartsInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PartsName,
                        PartsQty,
                        StandardName,
                        MakerName,
                        ClgPrtsNo,
                        Price,
                        PartsOpNm,
                        Warehouse,
                        Shelf,
                        StockCnt,
                        SelImage,
                        Set,
                        Subst,
                        SelectionState,
                        NewPrtsNo,
                        PrmSetDtlNo2,
                        MakerCd,
                        GenTanka,
                        UriTanka,
                        Arariritu,
                        Ararigaku,
                        OldPartsNo,
                        WarehouseCode};
                rowPartsInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPartsInfoRow);
                return rowPartsInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PartsInfoDataTable cln = ((PartsInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PartsInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPartsName = base.Columns["PartsName"];
                this.columnPartsQty = base.Columns["PartsQty"];
                this.columnStandardName = base.Columns["StandardName"];
                this.columnMakerName = base.Columns["MakerName"];
                this.columnClgPrtsNo = base.Columns["ClgPrtsNo"];
                this.columnPrice = base.Columns["Price"];
                this.columnPartsOpNm = base.Columns["PartsOpNm"];
                this.columnWarehouse = base.Columns["Warehouse"];
                this.columnShelf = base.Columns["Shelf"];
                this.columnStockCnt = base.Columns["StockCnt"];
                this.columnSelImage = base.Columns["SelImage"];
                this.columnSet = base.Columns["Set"];
                this.columnSubst = base.Columns["Subst"];
                this.columnSelectionState = base.Columns["SelectionState"];
                this.columnNewPrtsNo = base.Columns["NewPrtsNo"];
                this.columnPrmSetDtlNo2 = base.Columns["PrmSetDtlNo2"];
                this.columnMakerCd = base.Columns["MakerCd"];
                this.columnGenTanka = base.Columns["GenTanka"];
                this.columnUriTanka = base.Columns["UriTanka"];
                this.columnArariritu = base.Columns["Arariritu"];
                this.columnArarigaku = base.Columns["Ararigaku"];
                this.columnOldPartsNo = base.Columns["OldPartsNo"];
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPartsName = new global::System.Data.DataColumn("PartsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartsName);
                this.columnPartsQty = new global::System.Data.DataColumn("PartsQty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartsQty);
                this.columnStandardName = new global::System.Data.DataColumn("StandardName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStandardName);
                this.columnMakerName = new global::System.Data.DataColumn("MakerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerName);
                this.columnClgPrtsNo = new global::System.Data.DataColumn("ClgPrtsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClgPrtsNo);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnPartsOpNm = new global::System.Data.DataColumn("PartsOpNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartsOpNm);
                this.columnWarehouse = new global::System.Data.DataColumn("Warehouse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouse);
                this.columnShelf = new global::System.Data.DataColumn("Shelf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShelf);
                this.columnStockCnt = new global::System.Data.DataColumn("StockCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockCnt);
                this.columnSelImage = new global::System.Data.DataColumn("SelImage", typeof(global::System.Drawing.Image), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelImage);
                this.columnSet = new global::System.Data.DataColumn("Set", typeof(global::System.Drawing.Image), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSet);
                this.columnSubst = new global::System.Data.DataColumn("Subst", typeof(global::System.Drawing.Image), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubst);
                this.columnSelectionState = new global::System.Data.DataColumn("SelectionState", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectionState);
                this.columnNewPrtsNo = new global::System.Data.DataColumn("NewPrtsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewPrtsNo);
                this.columnPrmSetDtlNo2 = new global::System.Data.DataColumn("PrmSetDtlNo2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrmSetDtlNo2);
                this.columnMakerCd = new global::System.Data.DataColumn("MakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerCd);
                this.columnGenTanka = new global::System.Data.DataColumn("GenTanka", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenTanka);
                this.columnUriTanka = new global::System.Data.DataColumn("UriTanka", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUriTanka);
                this.columnArariritu = new global::System.Data.DataColumn("Arariritu", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArariritu);
                this.columnArarigaku = new global::System.Data.DataColumn("Ararigaku", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArarigaku);
                this.columnOldPartsNo = new global::System.Data.DataColumn("OldPartsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldPartsNo);
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnPartsName.Caption = "品名";
                this.columnPartsName.DefaultValue = ((string)(""));
                this.columnPartsQty.Caption = "QTY";
                this.columnPartsQty.DefaultValue = ((double)(0));
                this.columnStandardName.Caption = "規格";
                this.columnStandardName.DefaultValue = ((string)(""));
                this.columnMakerName.Caption = "メーカー名";
                this.columnMakerName.DefaultValue = ((string)(""));
                this.columnClgPrtsNo.Caption = "純正品番";
                this.columnClgPrtsNo.DefaultValue = ((string)(""));
                this.columnPrice.Caption = "標準価格";
                this.columnPrice.DefaultValue = ((double)(0));
                this.columnPartsOpNm.Caption = "特記事項";
                this.columnPartsOpNm.DefaultValue = ((string)(""));
                this.columnWarehouse.Caption = "倉庫";
                this.columnWarehouse.DefaultValue = ((string)(""));
                this.columnShelf.Caption = "棚番";
                this.columnShelf.DefaultValue = ((string)(""));
                this.columnStockCnt.Caption = "現在庫数";
                this.columnStockCnt.DefaultValue = ((double)(0));
                this.columnSelImage.Caption = "選択";
                this.columnSet.Caption = "セット";
                this.columnSubst.Caption = "代替";
                this.columnSelectionState.DefaultValue = ((bool)(false));
                this.columnNewPrtsNo.Caption = "最新品番";
                this.columnNewPrtsNo.DefaultValue = ((string)(""));
                this.columnPrmSetDtlNo2.Caption = "種別";
                this.columnPrmSetDtlNo2.DefaultValue = ((string)(""));
                this.columnMakerCd.DefaultValue = ((int)(0));
                this.columnGenTanka.Caption = "原単価";
                this.columnGenTanka.DefaultValue = ((double)(0));
                this.columnUriTanka.Caption = "売単価";
                this.columnUriTanka.DefaultValue = ((double)(0));
                this.columnArariritu.Caption = "粗利率";
                this.columnArariritu.DefaultValue = ((double)(0));
                this.columnArarigaku.Caption = "粗利額";
                this.columnArarigaku.DefaultValue = ((double)(0));
                this.columnOldPartsNo.Caption = "旧品番";
                this.columnOldPartsNo.DefaultValue = ((string)(""));
                this.columnWarehouseCode.DefaultValue = ((string)(""));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartsInfoRow NewPartsInfoRow() {
                return ((PartsInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PartsInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PartsInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PartsInfoRowChanged != null)) {
                    this.PartsInfoRowChanged(this, new PartsInfoRowChangeEvent(((PartsInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PartsInfoRowChanging != null)) {
                    this.PartsInfoRowChanging(this, new PartsInfoRowChangeEvent(((PartsInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PartsInfoRowDeleted != null)) {
                    this.PartsInfoRowDeleted(this, new PartsInfoRowChangeEvent(((PartsInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PartsInfoRowDeleting != null)) {
                    this.PartsInfoRowDeleting(this, new PartsInfoRowChangeEvent(((PartsInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePartsInfoRow(PartsInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsParts ds = new dsParts();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PartsInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class JoinPartsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPrmSetDtlNo2;
            
            private global::System.Data.DataColumn columnJoinDispOrder;
            
            private global::System.Data.DataColumn columnJoinSourPartsNo;
            
            private global::System.Data.DataColumn columnJoinDestPartsNo;
            
            private global::System.Data.DataColumn columnJoinQty;
            
            private global::System.Data.DataColumn columnJoinSpecialNote;
            
            private global::System.Data.DataColumn columnSelectionState;
            
            private global::System.Data.DataColumn columnPrimePartsName;
            
            private global::System.Data.DataColumn columnJoinDestMakerNm;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnShelf;
            
            private global::System.Data.DataColumn columnSelImage;
            
            private global::System.Data.DataColumn columnSet;
            
            private global::System.Data.DataColumn columnSubst;
            
            private global::System.Data.DataColumn columnWarehouse;
            
            private global::System.Data.DataColumn columnStockCnt;
            
            private global::System.Data.DataColumn columnJoinSourMaker;
            
            private global::System.Data.DataColumn columnGenTanka;
            
            private global::System.Data.DataColumn columnUriTanka;
            
            private global::System.Data.DataColumn columnArariritu;
            
            private global::System.Data.DataColumn columnArarigaku;
            
            private global::System.Data.DataColumn columnJoinDestMakerCd;
            
            private global::System.Data.DataColumn columnSetPartsFlg;
            
            private global::System.Data.DataColumn columnOldPartsNo;
            
            private global::System.Data.DataColumn columnJoinDestOrgPrtNo;
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            private global::System.Data.DataColumn columnPrimeDispOrder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JoinPartsDataTable() {
                this.TableName = "JoinParts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal JoinPartsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected JoinPartsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrmSetDtlNo2Column {
                get {
                    return this.columnPrmSetDtlNo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinDispOrderColumn {
                get {
                    return this.columnJoinDispOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinSourPartsNoColumn {
                get {
                    return this.columnJoinSourPartsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinDestPartsNoColumn {
                get {
                    return this.columnJoinDestPartsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinQtyColumn {
                get {
                    return this.columnJoinQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinSpecialNoteColumn {
                get {
                    return this.columnJoinSpecialNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectionStateColumn {
                get {
                    return this.columnSelectionState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrimePartsNameColumn {
                get {
                    return this.columnPrimePartsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinDestMakerNmColumn {
                get {
                    return this.columnJoinDestMakerNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShelfColumn {
                get {
                    return this.columnShelf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelImageColumn {
                get {
                    return this.columnSelImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetColumn {
                get {
                    return this.columnSet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubstColumn {
                get {
                    return this.columnSubst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseColumn {
                get {
                    return this.columnWarehouse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockCntColumn {
                get {
                    return this.columnStockCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinSourMakerColumn {
                get {
                    return this.columnJoinSourMaker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenTankaColumn {
                get {
                    return this.columnGenTanka;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UriTankaColumn {
                get {
                    return this.columnUriTanka;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArarirituColumn {
                get {
                    return this.columnArariritu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArarigakuColumn {
                get {
                    return this.columnArarigaku;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinDestMakerCdColumn {
                get {
                    return this.columnJoinDestMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetPartsFlgColumn {
                get {
                    return this.columnSetPartsFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OldPartsNoColumn {
                get {
                    return this.columnOldPartsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JoinDestOrgPrtNoColumn {
                get {
                    return this.columnJoinDestOrgPrtNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrimeDispOrderColumn {
                get {
                    return this.columnPrimeDispOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JoinPartsRow this[int index] {
                get {
                    return ((JoinPartsRow)(this.Rows[index]));
                }
            }
            
            public event JoinPartsRowChangeEventHandler JoinPartsRowChanging;
            
            public event JoinPartsRowChangeEventHandler JoinPartsRowChanged;
            
            public event JoinPartsRowChangeEventHandler JoinPartsRowDeleting;
            
            public event JoinPartsRowChangeEventHandler JoinPartsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddJoinPartsRow(JoinPartsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JoinPartsRow AddJoinPartsRow(
                        string PrmSetDtlNo2, 
                        long JoinDispOrder, 
                        string JoinSourPartsNo, 
                        string JoinDestPartsNo, 
                        double JoinQty, 
                        string JoinSpecialNote, 
                        bool SelectionState, 
                        string PrimePartsName, 
                        string JoinDestMakerNm, 
                        double Price, 
                        string Shelf, 
                        System.Drawing.Image SelImage, 
                        System.Drawing.Image Set, 
                        System.Drawing.Image Subst, 
                        string Warehouse, 
                        double StockCnt, 
                        PartsInfoRow parentPartsInfoRowByPartsInfo_JoinParts, 
                        double GenTanka, 
                        double UriTanka, 
                        double Arariritu, 
                        double Ararigaku, 
                        int JoinDestMakerCd, 
                        int SetPartsFlg, 
                        string OldPartsNo, 
                        string JoinDestOrgPrtNo, 
                        string WarehouseCode, 
                        int PrimeDispOrder) {
                JoinPartsRow rowJoinPartsRow = ((JoinPartsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PrmSetDtlNo2,
                        JoinDispOrder,
                        JoinSourPartsNo,
                        JoinDestPartsNo,
                        JoinQty,
                        JoinSpecialNote,
                        SelectionState,
                        PrimePartsName,
                        JoinDestMakerNm,
                        Price,
                        Shelf,
                        SelImage,
                        Set,
                        Subst,
                        Warehouse,
                        StockCnt,
                        null,
                        GenTanka,
                        UriTanka,
                        Arariritu,
                        Ararigaku,
                        JoinDestMakerCd,
                        SetPartsFlg,
                        OldPartsNo,
                        JoinDestOrgPrtNo,
                        WarehouseCode,
                        PrimeDispOrder};
                if ((parentPartsInfoRowByPartsInfo_JoinParts != null)) {
                    columnValuesArray[16] = parentPartsInfoRowByPartsInfo_JoinParts[16];
                }
                rowJoinPartsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowJoinPartsRow);
                return rowJoinPartsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JoinPartsRow FindByJoinDestPartsNoJoinDestMakerCd(string JoinDestPartsNo, int JoinDestMakerCd) {
                return ((JoinPartsRow)(this.Rows.Find(new object[] {
                            JoinDestPartsNo,
                            JoinDestMakerCd})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                JoinPartsDataTable cln = ((JoinPartsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new JoinPartsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPrmSetDtlNo2 = base.Columns["PrmSetDtlNo2"];
                this.columnJoinDispOrder = base.Columns["JoinDispOrder"];
                this.columnJoinSourPartsNo = base.Columns["JoinSourPartsNo"];
                this.columnJoinDestPartsNo = base.Columns["JoinDestPartsNo"];
                this.columnJoinQty = base.Columns["JoinQty"];
                this.columnJoinSpecialNote = base.Columns["JoinSpecialNote"];
                this.columnSelectionState = base.Columns["SelectionState"];
                this.columnPrimePartsName = base.Columns["PrimePartsName"];
                this.columnJoinDestMakerNm = base.Columns["JoinDestMakerNm"];
                this.columnPrice = base.Columns["Price"];
                this.columnShelf = base.Columns["Shelf"];
                this.columnSelImage = base.Columns["SelImage"];
                this.columnSet = base.Columns["Set"];
                this.columnSubst = base.Columns["Subst"];
                this.columnWarehouse = base.Columns["Warehouse"];
                this.columnStockCnt = base.Columns["StockCnt"];
                this.columnJoinSourMaker = base.Columns["JoinSourMaker"];
                this.columnGenTanka = base.Columns["GenTanka"];
                this.columnUriTanka = base.Columns["UriTanka"];
                this.columnArariritu = base.Columns["Arariritu"];
                this.columnArarigaku = base.Columns["Ararigaku"];
                this.columnJoinDestMakerCd = base.Columns["JoinDestMakerCd"];
                this.columnSetPartsFlg = base.Columns["SetPartsFlg"];
                this.columnOldPartsNo = base.Columns["OldPartsNo"];
                this.columnJoinDestOrgPrtNo = base.Columns["JoinDestOrgPrtNo"];
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnPrimeDispOrder = base.Columns["PrimeDispOrder"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPrmSetDtlNo2 = new global::System.Data.DataColumn("PrmSetDtlNo2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrmSetDtlNo2);
                this.columnJoinDispOrder = new global::System.Data.DataColumn("JoinDispOrder", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoinDispOrder);
                this.columnJoinSourPartsNo = new global::System.Data.DataColumn("JoinSourPartsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoinSourPartsNo);
                this.columnJoinDestPartsNo = new global::System.Data.DataColumn("JoinDestPartsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoinDestPartsNo);
                this.columnJoinQty = new global::System.Data.DataColumn("JoinQty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoinQty);
                this.columnJoinSpecialNote = new global::System.Data.DataColumn("JoinSpecialNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoinSpecialNote);
                this.columnSelectionState = new global::System.Data.DataColumn("SelectionState", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectionState);
                this.columnPrimePartsName = new global::System.Data.DataColumn("PrimePartsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimePartsName);
                this.columnJoinDestMakerNm = new global::System.Data.DataColumn("JoinDestMakerNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoinDestMakerNm);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnShelf = new global::System.Data.DataColumn("Shelf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShelf);
                this.columnSelImage = new global::System.Data.DataColumn("SelImage", typeof(global::System.Drawing.Image), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelImage);
                this.columnSet = new global::System.Data.DataColumn("Set", typeof(global::System.Drawing.Image), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSet);
                this.columnSubst = new global::System.Data.DataColumn("Subst", typeof(global::System.Drawing.Image), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubst);
                this.columnWarehouse = new global::System.Data.DataColumn("Warehouse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouse);
                this.columnStockCnt = new global::System.Data.DataColumn("StockCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockCnt);
                this.columnJoinSourMaker = new global::System.Data.DataColumn("JoinSourMaker", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoinSourMaker);
                this.columnGenTanka = new global::System.Data.DataColumn("GenTanka", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenTanka);
                this.columnUriTanka = new global::System.Data.DataColumn("UriTanka", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUriTanka);
                this.columnArariritu = new global::System.Data.DataColumn("Arariritu", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArariritu);
                this.columnArarigaku = new global::System.Data.DataColumn("Ararigaku", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArarigaku);
                this.columnJoinDestMakerCd = new global::System.Data.DataColumn("JoinDestMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoinDestMakerCd);
                this.columnSetPartsFlg = new global::System.Data.DataColumn("SetPartsFlg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetPartsFlg);
                this.columnOldPartsNo = new global::System.Data.DataColumn("OldPartsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldPartsNo);
                this.columnJoinDestOrgPrtNo = new global::System.Data.DataColumn("JoinDestOrgPrtNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJoinDestOrgPrtNo);
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnPrimeDispOrder = new global::System.Data.DataColumn("PrimeDispOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimeDispOrder);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnJoinDestPartsNo,
                                this.columnJoinDestMakerCd}, true));
                this.columnPrmSetDtlNo2.Caption = "種別";
                this.columnPrmSetDtlNo2.DefaultValue = ((string)(""));
                this.columnJoinDispOrder.AllowDBNull = false;
                this.columnJoinDispOrder.Caption = "結合表示順位";
                this.columnJoinDispOrder.DefaultValue = ((long)(0));
                this.columnJoinSourPartsNo.AllowDBNull = false;
                this.columnJoinSourPartsNo.Caption = "結合品番";
                this.columnJoinSourPartsNo.DefaultValue = ((string)(""));
                this.columnJoinSourPartsNo.MaxLength = 24;
                this.columnJoinDestPartsNo.AllowDBNull = false;
                this.columnJoinDestPartsNo.Caption = "品番";
                this.columnJoinDestPartsNo.DefaultValue = ((string)(""));
                this.columnJoinDestPartsNo.MaxLength = 24;
                this.columnJoinQty.AllowDBNull = false;
                this.columnJoinQty.Caption = "QTY";
                this.columnJoinQty.DefaultValue = ((double)(0));
                this.columnJoinSpecialNote.Caption = "特記事項";
                this.columnJoinSpecialNote.DefaultValue = ((string)(""));
                this.columnJoinSpecialNote.MaxLength = 200;
                this.columnSelectionState.Caption = "選択状態";
                this.columnSelectionState.DefaultValue = ((bool)(false));
                this.columnPrimePartsName.Caption = "品名";
                this.columnPrimePartsName.DefaultValue = ((string)(""));
                this.columnJoinDestMakerNm.Caption = "メーカー";
                this.columnJoinDestMakerNm.DefaultValue = ((string)(""));
                this.columnPrice.Caption = "標準価格";
                this.columnPrice.DefaultValue = ((double)(0));
                this.columnShelf.Caption = "棚番";
                this.columnShelf.DefaultValue = ((string)(""));
                this.columnSelImage.Caption = "選択";
                this.columnSet.Caption = "セット";
                this.columnSubst.Caption = "代替";
                this.columnWarehouse.Caption = "倉庫";
                this.columnWarehouse.DefaultValue = ((string)(""));
                this.columnStockCnt.Caption = "現在庫数";
                this.columnStockCnt.DefaultValue = ((double)(0));
                this.columnJoinSourMaker.DefaultValue = ((int)(0));
                this.columnGenTanka.Caption = "原単価";
                this.columnGenTanka.DefaultValue = ((double)(0));
                this.columnUriTanka.Caption = "売単価";
                this.columnUriTanka.DefaultValue = ((double)(0));
                this.columnArariritu.Caption = "粗利率";
                this.columnArariritu.DefaultValue = ((double)(0));
                this.columnArarigaku.Caption = "粗利額";
                this.columnArarigaku.DefaultValue = ((double)(0));
                this.columnJoinDestMakerCd.AllowDBNull = false;
                this.columnJoinDestMakerCd.Caption = "";
                this.columnJoinDestMakerCd.DefaultValue = ((int)(0));
                this.columnSetPartsFlg.DefaultValue = ((int)(0));
                this.columnOldPartsNo.Caption = "旧品番";
                this.columnOldPartsNo.DefaultValue = ((string)(""));
                this.columnJoinDestOrgPrtNo.DefaultValue = ((string)(""));
                this.columnWarehouseCode.DefaultValue = ((string)(""));
                this.columnPrimeDispOrder.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JoinPartsRow NewJoinPartsRow() {
                return ((JoinPartsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new JoinPartsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(JoinPartsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.JoinPartsRowChanged != null)) {
                    this.JoinPartsRowChanged(this, new JoinPartsRowChangeEvent(((JoinPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.JoinPartsRowChanging != null)) {
                    this.JoinPartsRowChanging(this, new JoinPartsRowChangeEvent(((JoinPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.JoinPartsRowDeleted != null)) {
                    this.JoinPartsRowDeleted(this, new JoinPartsRowChangeEvent(((JoinPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.JoinPartsRowDeleting != null)) {
                    this.JoinPartsRowDeleting(this, new JoinPartsRowChangeEvent(((JoinPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveJoinPartsRow(JoinPartsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsParts ds = new dsParts();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "JoinPartsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnShipmentPosCnt;
            
            private global::System.Data.DataColumn columnMinimumStockCnt;
            
            private global::System.Data.DataColumn columnMaximumStockCnt;
            
            private global::System.Data.DataColumn columnWarehouseShelfNo;
            
            private global::System.Data.DataColumn columnWarehouseName;
            
            private global::System.Data.DataColumn columnSelectionState;
            
            private global::System.Data.DataColumn columnSelImage;
            
            private global::System.Data.DataColumn columnSortDiv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDataTable() {
                this.TableName = "Stock";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentPosCntColumn {
                get {
                    return this.columnShipmentPosCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinimumStockCntColumn {
                get {
                    return this.columnMinimumStockCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaximumStockCntColumn {
                get {
                    return this.columnMaximumStockCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseShelfNoColumn {
                get {
                    return this.columnWarehouseShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseNameColumn {
                get {
                    return this.columnWarehouseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectionStateColumn {
                get {
                    return this.columnSelectionState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelImageColumn {
                get {
                    return this.columnSelImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortDivColumn {
                get {
                    return this.columnSortDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow this[int index] {
                get {
                    return ((StockRow)(this.Rows[index]));
                }
            }
            
            public event StockRowChangeEventHandler StockRowChanging;
            
            public event StockRowChangeEventHandler StockRowChanged;
            
            public event StockRowChangeEventHandler StockRowDeleting;
            
            public event StockRowChangeEventHandler StockRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockRow(StockRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow AddStockRow(string WarehouseCode, int GoodsMakerCd, string GoodsNo, double ShipmentPosCnt, double MinimumStockCnt, double MaximumStockCnt, string WarehouseShelfNo, string WarehouseName, bool SelectionState, System.Drawing.Image SelImage, int SortDiv) {
                StockRow rowStockRow = ((StockRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WarehouseCode,
                        GoodsMakerCd,
                        GoodsNo,
                        ShipmentPosCnt,
                        MinimumStockCnt,
                        MaximumStockCnt,
                        WarehouseShelfNo,
                        WarehouseName,
                        SelectionState,
                        SelImage,
                        SortDiv};
                rowStockRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockRow);
                return rowStockRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow FindByWarehouseCodeGoodsMakerCdGoodsNo(string WarehouseCode, int GoodsMakerCd, string GoodsNo) {
                return ((StockRow)(this.Rows.Find(new object[] {
                            WarehouseCode,
                            GoodsMakerCd,
                            GoodsNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockDataTable cln = ((StockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnShipmentPosCnt = base.Columns["ShipmentPosCnt"];
                this.columnMinimumStockCnt = base.Columns["MinimumStockCnt"];
                this.columnMaximumStockCnt = base.Columns["MaximumStockCnt"];
                this.columnWarehouseShelfNo = base.Columns["WarehouseShelfNo"];
                this.columnWarehouseName = base.Columns["WarehouseName"];
                this.columnSelectionState = base.Columns["SelectionState"];
                this.columnSelImage = base.Columns["SelImage"];
                this.columnSortDiv = base.Columns["SortDiv"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnShipmentPosCnt = new global::System.Data.DataColumn("ShipmentPosCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentPosCnt);
                this.columnMinimumStockCnt = new global::System.Data.DataColumn("MinimumStockCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimumStockCnt);
                this.columnMaximumStockCnt = new global::System.Data.DataColumn("MaximumStockCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaximumStockCnt);
                this.columnWarehouseShelfNo = new global::System.Data.DataColumn("WarehouseShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseShelfNo);
                this.columnWarehouseName = new global::System.Data.DataColumn("WarehouseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseName);
                this.columnSelectionState = new global::System.Data.DataColumn("SelectionState", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectionState);
                this.columnSelImage = new global::System.Data.DataColumn("SelImage", typeof(global::System.Drawing.Image), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelImage);
                this.columnSortDiv = new global::System.Data.DataColumn("SortDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortDiv);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWarehouseCode,
                                this.columnGoodsMakerCd,
                                this.columnGoodsNo}, true));
                this.columnWarehouseCode.AllowDBNull = false;
                this.columnWarehouseCode.Caption = "倉庫コード";
                this.columnWarehouseCode.DefaultValue = ((string)(""));
                this.columnWarehouseCode.MaxLength = 6;
                this.columnGoodsMakerCd.AllowDBNull = false;
                this.columnGoodsMakerCd.Caption = "商品メーカー";
                this.columnGoodsMakerCd.DefaultValue = ((int)(0));
                this.columnGoodsNo.AllowDBNull = false;
                this.columnGoodsNo.Caption = "品番";
                this.columnGoodsNo.DefaultValue = ((string)(""));
                this.columnGoodsNo.MaxLength = 40;
                this.columnShipmentPosCnt.Caption = "現在庫数";
                this.columnShipmentPosCnt.DefaultValue = ((double)(0));
                this.columnMinimumStockCnt.Caption = "最低在庫数";
                this.columnMinimumStockCnt.DefaultValue = ((double)(0));
                this.columnMaximumStockCnt.Caption = "最高在庫数";
                this.columnMaximumStockCnt.DefaultValue = ((double)(0));
                this.columnWarehouseShelfNo.Caption = "棚番";
                this.columnWarehouseShelfNo.DefaultValue = ((string)(""));
                this.columnWarehouseShelfNo.MaxLength = 8;
                this.columnWarehouseName.Caption = "倉庫";
                this.columnWarehouseName.DefaultValue = ((string)(""));
                this.columnSelectionState.DefaultValue = ((bool)(false));
                this.columnSelImage.Caption = "選択";
                this.columnSortDiv.Caption = "ソート区分";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow NewStockRow() {
                return ((StockRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockRowChanged != null)) {
                    this.StockRowChanged(this, new StockRowChangeEvent(((StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockRowChanging != null)) {
                    this.StockRowChanging(this, new StockRowChangeEvent(((StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockRowDeleted != null)) {
                    this.StockRowDeleted(this, new StockRowChangeEvent(((StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockRowDeleting != null)) {
                    this.StockRowDeleting(this, new StockRowChangeEvent(((StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockRow(StockRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsParts ds = new dsParts();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PartsInfoRow : global::System.Data.DataRow {
            
            private PartsInfoDataTable tablePartsInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PartsInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePartsInfo = ((PartsInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartsName {
                get {
                    try {
                        return ((string)(this[this.tablePartsInfo.PartsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'PartsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.PartsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PartsQty {
                get {
                    try {
                        return ((double)(this[this.tablePartsInfo.PartsQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'PartsQty\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.PartsQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StandardName {
                get {
                    try {
                        return ((string)(this[this.tablePartsInfo.StandardNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'StandardName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.StandardNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerName {
                get {
                    try {
                        return ((string)(this[this.tablePartsInfo.MakerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'MakerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.MakerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClgPrtsNo {
                get {
                    try {
                        return ((string)(this[this.tablePartsInfo.ClgPrtsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'ClgPrtsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.ClgPrtsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Price {
                get {
                    try {
                        return ((double)(this[this.tablePartsInfo.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'Price\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartsOpNm {
                get {
                    try {
                        return ((string)(this[this.tablePartsInfo.PartsOpNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'PartsOpNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.PartsOpNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Warehouse {
                get {
                    try {
                        return ((string)(this[this.tablePartsInfo.WarehouseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'Warehouse\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.WarehouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Shelf {
                get {
                    try {
                        return ((string)(this[this.tablePartsInfo.ShelfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'Shelf\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.ShelfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockCnt {
                get {
                    try {
                        return ((double)(this[this.tablePartsInfo.StockCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'StockCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.StockCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image SelImage {
                get {
                    try {
                        return ((global::System.Drawing.Image)(this[this.tablePartsInfo.SelImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'SelImage\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.SelImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image Set {
                get {
                    try {
                        return ((global::System.Drawing.Image)(this[this.tablePartsInfo.SetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'Set\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.SetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image Subst {
                get {
                    try {
                        return ((global::System.Drawing.Image)(this[this.tablePartsInfo.SubstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'Subst\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.SubstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SelectionState {
                get {
                    try {
                        return ((bool)(this[this.tablePartsInfo.SelectionStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'SelectionState\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.SelectionStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NewPrtsNo {
                get {
                    try {
                        return ((string)(this[this.tablePartsInfo.NewPrtsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'NewPrtsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.NewPrtsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrmSetDtlNo2 {
                get {
                    try {
                        return ((string)(this[this.tablePartsInfo.PrmSetDtlNo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'PrmSetDtlNo2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.PrmSetDtlNo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MakerCd {
                get {
                    try {
                        return ((int)(this[this.tablePartsInfo.MakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'MakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.MakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GenTanka {
                get {
                    try {
                        return ((double)(this[this.tablePartsInfo.GenTankaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'GenTanka\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.GenTankaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UriTanka {
                get {
                    try {
                        return ((double)(this[this.tablePartsInfo.UriTankaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'UriTanka\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.UriTankaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Arariritu {
                get {
                    try {
                        return ((double)(this[this.tablePartsInfo.ArarirituColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'Arariritu\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.ArarirituColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Ararigaku {
                get {
                    try {
                        return ((double)(this[this.tablePartsInfo.ArarigakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'Ararigaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.ArarigakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldPartsNo {
                get {
                    try {
                        return ((string)(this[this.tablePartsInfo.OldPartsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsInfo\' にある列 \'OldPartsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsInfo.OldPartsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    if (this.IsWarehouseCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tablePartsInfo.WarehouseCodeColumn]));
                    }
                }
                set {
                    this[this.tablePartsInfo.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartsNameNull() {
                return this.IsNull(this.tablePartsInfo.PartsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartsNameNull() {
                this[this.tablePartsInfo.PartsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartsQtyNull() {
                return this.IsNull(this.tablePartsInfo.PartsQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartsQtyNull() {
                this[this.tablePartsInfo.PartsQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStandardNameNull() {
                return this.IsNull(this.tablePartsInfo.StandardNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStandardNameNull() {
                this[this.tablePartsInfo.StandardNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerNameNull() {
                return this.IsNull(this.tablePartsInfo.MakerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerNameNull() {
                this[this.tablePartsInfo.MakerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClgPrtsNoNull() {
                return this.IsNull(this.tablePartsInfo.ClgPrtsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClgPrtsNoNull() {
                this[this.tablePartsInfo.ClgPrtsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tablePartsInfo.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tablePartsInfo.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartsOpNmNull() {
                return this.IsNull(this.tablePartsInfo.PartsOpNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartsOpNmNull() {
                this[this.tablePartsInfo.PartsOpNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNull() {
                return this.IsNull(this.tablePartsInfo.WarehouseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNull() {
                this[this.tablePartsInfo.WarehouseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShelfNull() {
                return this.IsNull(this.tablePartsInfo.ShelfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShelfNull() {
                this[this.tablePartsInfo.ShelfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockCntNull() {
                return this.IsNull(this.tablePartsInfo.StockCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockCntNull() {
                this[this.tablePartsInfo.StockCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelImageNull() {
                return this.IsNull(this.tablePartsInfo.SelImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelImageNull() {
                this[this.tablePartsInfo.SelImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetNull() {
                return this.IsNull(this.tablePartsInfo.SetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetNull() {
                this[this.tablePartsInfo.SetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubstNull() {
                return this.IsNull(this.tablePartsInfo.SubstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubstNull() {
                this[this.tablePartsInfo.SubstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectionStateNull() {
                return this.IsNull(this.tablePartsInfo.SelectionStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectionStateNull() {
                this[this.tablePartsInfo.SelectionStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewPrtsNoNull() {
                return this.IsNull(this.tablePartsInfo.NewPrtsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNewPrtsNoNull() {
                this[this.tablePartsInfo.NewPrtsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrmSetDtlNo2Null() {
                return this.IsNull(this.tablePartsInfo.PrmSetDtlNo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrmSetDtlNo2Null() {
                this[this.tablePartsInfo.PrmSetDtlNo2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerCdNull() {
                return this.IsNull(this.tablePartsInfo.MakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerCdNull() {
                this[this.tablePartsInfo.MakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenTankaNull() {
                return this.IsNull(this.tablePartsInfo.GenTankaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenTankaNull() {
                this[this.tablePartsInfo.GenTankaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUriTankaNull() {
                return this.IsNull(this.tablePartsInfo.UriTankaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUriTankaNull() {
                this[this.tablePartsInfo.UriTankaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArarirituNull() {
                return this.IsNull(this.tablePartsInfo.ArarirituColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArarirituNull() {
                this[this.tablePartsInfo.ArarirituColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArarigakuNull() {
                return this.IsNull(this.tablePartsInfo.ArarigakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArarigakuNull() {
                this[this.tablePartsInfo.ArarigakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldPartsNoNull() {
                return this.IsNull(this.tablePartsInfo.OldPartsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldPartsNoNull() {
                this[this.tablePartsInfo.OldPartsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCodeNull() {
                return this.IsNull(this.tablePartsInfo.WarehouseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCodeNull() {
                this[this.tablePartsInfo.WarehouseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JoinPartsRow[] GetJoinPartsRows() {
                if ((this.Table.ChildRelations["PartsInfo_JoinParts"] == null)) {
                    return new JoinPartsRow[0];
                }
                else {
                    return ((JoinPartsRow[])(base.GetChildRows(this.Table.ChildRelations["PartsInfo_JoinParts"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class JoinPartsRow : global::System.Data.DataRow {
            
            private JoinPartsDataTable tableJoinParts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal JoinPartsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJoinParts = ((JoinPartsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrmSetDtlNo2 {
                get {
                    try {
                        return ((string)(this[this.tableJoinParts.PrmSetDtlNo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'PrmSetDtlNo2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.PrmSetDtlNo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long JoinDispOrder {
                get {
                    return ((long)(this[this.tableJoinParts.JoinDispOrderColumn]));
                }
                set {
                    this[this.tableJoinParts.JoinDispOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JoinSourPartsNo {
                get {
                    return ((string)(this[this.tableJoinParts.JoinSourPartsNoColumn]));
                }
                set {
                    this[this.tableJoinParts.JoinSourPartsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JoinDestPartsNo {
                get {
                    return ((string)(this[this.tableJoinParts.JoinDestPartsNoColumn]));
                }
                set {
                    this[this.tableJoinParts.JoinDestPartsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double JoinQty {
                get {
                    return ((double)(this[this.tableJoinParts.JoinQtyColumn]));
                }
                set {
                    this[this.tableJoinParts.JoinQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JoinSpecialNote {
                get {
                    try {
                        return ((string)(this[this.tableJoinParts.JoinSpecialNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'JoinSpecialNote\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.JoinSpecialNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SelectionState {
                get {
                    try {
                        return ((bool)(this[this.tableJoinParts.SelectionStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'SelectionState\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.SelectionStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrimePartsName {
                get {
                    try {
                        return ((string)(this[this.tableJoinParts.PrimePartsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'PrimePartsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.PrimePartsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JoinDestMakerNm {
                get {
                    try {
                        return ((string)(this[this.tableJoinParts.JoinDestMakerNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'JoinDestMakerNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.JoinDestMakerNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Price {
                get {
                    try {
                        return ((double)(this[this.tableJoinParts.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'Price\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Shelf {
                get {
                    try {
                        return ((string)(this[this.tableJoinParts.ShelfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'Shelf\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.ShelfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image SelImage {
                get {
                    try {
                        return ((global::System.Drawing.Image)(this[this.tableJoinParts.SelImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'SelImage\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.SelImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image Set {
                get {
                    try {
                        return ((global::System.Drawing.Image)(this[this.tableJoinParts.SetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'Set\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.SetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image Subst {
                get {
                    try {
                        return ((global::System.Drawing.Image)(this[this.tableJoinParts.SubstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'Subst\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.SubstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Warehouse {
                get {
                    try {
                        return ((string)(this[this.tableJoinParts.WarehouseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'Warehouse\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.WarehouseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockCnt {
                get {
                    try {
                        return ((double)(this[this.tableJoinParts.StockCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'StockCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.StockCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JoinSourMaker {
                get {
                    try {
                        return ((int)(this[this.tableJoinParts.JoinSourMakerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'JoinSourMaker\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.JoinSourMakerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GenTanka {
                get {
                    try {
                        return ((double)(this[this.tableJoinParts.GenTankaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'GenTanka\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.GenTankaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double UriTanka {
                get {
                    try {
                        return ((double)(this[this.tableJoinParts.UriTankaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'UriTanka\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.UriTankaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Arariritu {
                get {
                    try {
                        return ((double)(this[this.tableJoinParts.ArarirituColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'Arariritu\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.ArarirituColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Ararigaku {
                get {
                    try {
                        return ((double)(this[this.tableJoinParts.ArarigakuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'Ararigaku\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.ArarigakuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JoinDestMakerCd {
                get {
                    return ((int)(this[this.tableJoinParts.JoinDestMakerCdColumn]));
                }
                set {
                    this[this.tableJoinParts.JoinDestMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SetPartsFlg {
                get {
                    try {
                        return ((int)(this[this.tableJoinParts.SetPartsFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'SetPartsFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.SetPartsFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldPartsNo {
                get {
                    try {
                        return ((string)(this[this.tableJoinParts.OldPartsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'OldPartsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.OldPartsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JoinDestOrgPrtNo {
                get {
                    try {
                        return ((string)(this[this.tableJoinParts.JoinDestOrgPrtNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'JoinDestOrgPrtNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.JoinDestOrgPrtNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    try {
                        return ((string)(this[this.tableJoinParts.WarehouseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'WarehouseCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PrimeDispOrder {
                get {
                    try {
                        return ((int)(this[this.tableJoinParts.PrimeDispOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'JoinParts\' にある列 \'PrimeDispOrder\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableJoinParts.PrimeDispOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartsInfoRow PartsInfoRow {
                get {
                    return ((PartsInfoRow)(this.GetParentRow(this.Table.ParentRelations["PartsInfo_JoinParts"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["PartsInfo_JoinParts"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrmSetDtlNo2Null() {
                return this.IsNull(this.tableJoinParts.PrmSetDtlNo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrmSetDtlNo2Null() {
                this[this.tableJoinParts.PrmSetDtlNo2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoinSpecialNoteNull() {
                return this.IsNull(this.tableJoinParts.JoinSpecialNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoinSpecialNoteNull() {
                this[this.tableJoinParts.JoinSpecialNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectionStateNull() {
                return this.IsNull(this.tableJoinParts.SelectionStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectionStateNull() {
                this[this.tableJoinParts.SelectionStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimePartsNameNull() {
                return this.IsNull(this.tableJoinParts.PrimePartsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrimePartsNameNull() {
                this[this.tableJoinParts.PrimePartsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoinDestMakerNmNull() {
                return this.IsNull(this.tableJoinParts.JoinDestMakerNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoinDestMakerNmNull() {
                this[this.tableJoinParts.JoinDestMakerNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tableJoinParts.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tableJoinParts.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShelfNull() {
                return this.IsNull(this.tableJoinParts.ShelfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShelfNull() {
                this[this.tableJoinParts.ShelfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelImageNull() {
                return this.IsNull(this.tableJoinParts.SelImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelImageNull() {
                this[this.tableJoinParts.SelImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetNull() {
                return this.IsNull(this.tableJoinParts.SetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetNull() {
                this[this.tableJoinParts.SetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubstNull() {
                return this.IsNull(this.tableJoinParts.SubstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubstNull() {
                this[this.tableJoinParts.SubstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNull() {
                return this.IsNull(this.tableJoinParts.WarehouseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNull() {
                this[this.tableJoinParts.WarehouseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockCntNull() {
                return this.IsNull(this.tableJoinParts.StockCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockCntNull() {
                this[this.tableJoinParts.StockCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoinSourMakerNull() {
                return this.IsNull(this.tableJoinParts.JoinSourMakerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoinSourMakerNull() {
                this[this.tableJoinParts.JoinSourMakerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenTankaNull() {
                return this.IsNull(this.tableJoinParts.GenTankaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenTankaNull() {
                this[this.tableJoinParts.GenTankaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUriTankaNull() {
                return this.IsNull(this.tableJoinParts.UriTankaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUriTankaNull() {
                this[this.tableJoinParts.UriTankaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArarirituNull() {
                return this.IsNull(this.tableJoinParts.ArarirituColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArarirituNull() {
                this[this.tableJoinParts.ArarirituColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArarigakuNull() {
                return this.IsNull(this.tableJoinParts.ArarigakuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArarigakuNull() {
                this[this.tableJoinParts.ArarigakuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetPartsFlgNull() {
                return this.IsNull(this.tableJoinParts.SetPartsFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetPartsFlgNull() {
                this[this.tableJoinParts.SetPartsFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOldPartsNoNull() {
                return this.IsNull(this.tableJoinParts.OldPartsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOldPartsNoNull() {
                this[this.tableJoinParts.OldPartsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJoinDestOrgPrtNoNull() {
                return this.IsNull(this.tableJoinParts.JoinDestOrgPrtNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJoinDestOrgPrtNoNull() {
                this[this.tableJoinParts.JoinDestOrgPrtNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCodeNull() {
                return this.IsNull(this.tableJoinParts.WarehouseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCodeNull() {
                this[this.tableJoinParts.WarehouseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrimeDispOrderNull() {
                return this.IsNull(this.tableJoinParts.PrimeDispOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrimeDispOrderNull() {
                this[this.tableJoinParts.PrimeDispOrderColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockRow : global::System.Data.DataRow {
            
            private StockDataTable tableStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStock = ((StockDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    return ((string)(this[this.tableStock.WarehouseCodeColumn]));
                }
                set {
                    this[this.tableStock.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCd {
                get {
                    return ((int)(this[this.tableStock.GoodsMakerCdColumn]));
                }
                set {
                    this[this.tableStock.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    return ((string)(this[this.tableStock.GoodsNoColumn]));
                }
                set {
                    this[this.tableStock.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ShipmentPosCnt {
                get {
                    try {
                        return ((double)(this[this.tableStock.ShipmentPosCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'ShipmentPosCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.ShipmentPosCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MinimumStockCnt {
                get {
                    try {
                        return ((double)(this[this.tableStock.MinimumStockCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'MinimumStockCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.MinimumStockCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MaximumStockCnt {
                get {
                    try {
                        return ((double)(this[this.tableStock.MaximumStockCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'MaximumStockCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.MaximumStockCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableStock.WarehouseShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'WarehouseShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.WarehouseShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseName {
                get {
                    try {
                        return ((string)(this[this.tableStock.WarehouseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'WarehouseName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.WarehouseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SelectionState {
                get {
                    try {
                        return ((bool)(this[this.tableStock.SelectionStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'SelectionState\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.SelectionStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image SelImage {
                get {
                    try {
                        return ((global::System.Drawing.Image)(this[this.tableStock.SelImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'SelImage\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.SelImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SortDiv {
                get {
                    try {
                        return ((int)(this[this.tableStock.SortDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'SortDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.SortDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentPosCntNull() {
                return this.IsNull(this.tableStock.ShipmentPosCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentPosCntNull() {
                this[this.tableStock.ShipmentPosCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinimumStockCntNull() {
                return this.IsNull(this.tableStock.MinimumStockCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinimumStockCntNull() {
                this[this.tableStock.MinimumStockCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaximumStockCntNull() {
                return this.IsNull(this.tableStock.MaximumStockCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaximumStockCntNull() {
                this[this.tableStock.MaximumStockCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseShelfNoNull() {
                return this.IsNull(this.tableStock.WarehouseShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseShelfNoNull() {
                this[this.tableStock.WarehouseShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNameNull() {
                return this.IsNull(this.tableStock.WarehouseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNameNull() {
                this[this.tableStock.WarehouseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectionStateNull() {
                return this.IsNull(this.tableStock.SelectionStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectionStateNull() {
                this[this.tableStock.SelectionStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelImageNull() {
                return this.IsNull(this.tableStock.SelImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelImageNull() {
                this[this.tableStock.SelImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortDivNull() {
                return this.IsNull(this.tableStock.SortDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortDivNull() {
                this[this.tableStock.SortDivColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PartsInfoRowChangeEvent : global::System.EventArgs {
            
            private PartsInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartsInfoRowChangeEvent(PartsInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartsInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class JoinPartsRowChangeEvent : global::System.EventArgs {
            
            private JoinPartsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JoinPartsRowChangeEvent(JoinPartsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public JoinPartsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockRowChangeEvent : global::System.EventArgs {
            
            private StockRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRowChangeEvent(StockRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591