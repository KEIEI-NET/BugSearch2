//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3603
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Windows.Forms {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("GoodsSetGoodsDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class GoodsSetGoodsDataSet : global::System.Data.DataSet {
        
        private GoodsSetDetailDataTable tableGoodsSetDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GoodsSetGoodsDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected GoodsSetGoodsDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GoodsSetDetail"] != null)) {
                    base.Tables.Add(new GoodsSetDetailDataTable(ds.Tables["GoodsSetDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GoodsSetDetailDataTable GoodsSetDetail {
            get {
                return this.tableGoodsSetDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            GoodsSetGoodsDataSet cln = ((GoodsSetGoodsDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GoodsSetDetail"] != null)) {
                    base.Tables.Add(new GoodsSetDetailDataTable(ds.Tables["GoodsSetDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGoodsSetDetail = ((GoodsSetDetailDataTable)(base.Tables["GoodsSetDetail"]));
            if ((initTable == true)) {
                if ((this.tableGoodsSetDetail != null)) {
                    this.tableGoodsSetDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "GoodsSetGoodsDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGoodsSetDetail = new GoodsSetDetailDataTable();
            base.Tables.Add(this.tableGoodsSetDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGoodsSetDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            GoodsSetGoodsDataSet ds = new GoodsSetGoodsDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GoodsSetDetailRowChangeEventHandler(object sender, GoodsSetDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GoodsSetDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnNo;
            
            private global::System.Data.DataColumn columnDisply;
            
            private global::System.Data.DataColumn columnGoodsCode;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnMakerCode;
            
            private global::System.Data.DataColumn columnMakerName;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnSetNote;
            
            private global::System.Data.DataColumn columnOfferDate;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnCost;
            
            private global::System.Data.DataColumn columnStore;
            
            private global::System.Data.DataColumn columnShelfNo;
            
            private global::System.Data.DataColumn columnStock;
            
            private global::System.Data.DataColumn columnOfferKubun;
            
            private global::System.Data.DataColumn columnEditFlg;
            
            private global::System.Data.DataColumn columnStoreCode;
            
            private global::System.Data.DataColumn columnAddFlag;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodsSetDetailDataTable() {
                this.TableName = "GoodsSetDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GoodsSetDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GoodsSetDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoColumn {
                get {
                    return this.columnNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisplyColumn {
                get {
                    return this.columnDisply;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsCodeColumn {
                get {
                    return this.columnGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerCodeColumn {
                get {
                    return this.columnMakerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerNameColumn {
                get {
                    return this.columnMakerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetNoteColumn {
                get {
                    return this.columnSetNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfferDateColumn {
                get {
                    return this.columnOfferDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreColumn {
                get {
                    return this.columnStore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShelfNoColumn {
                get {
                    return this.columnShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockColumn {
                get {
                    return this.columnStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OfferKubunColumn {
                get {
                    return this.columnOfferKubun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EditFlgColumn {
                get {
                    return this.columnEditFlg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StoreCodeColumn {
                get {
                    return this.columnStoreCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddFlagColumn {
                get {
                    return this.columnAddFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodsSetDetailRow this[int index] {
                get {
                    return ((GoodsSetDetailRow)(this.Rows[index]));
                }
            }
            
            public event GoodsSetDetailRowChangeEventHandler GoodsSetDetailRowChanging;
            
            public event GoodsSetDetailRowChangeEventHandler GoodsSetDetailRowChanged;
            
            public event GoodsSetDetailRowChangeEventHandler GoodsSetDetailRowDeleting;
            
            public event GoodsSetDetailRowChangeEventHandler GoodsSetDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGoodsSetDetailRow(GoodsSetDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodsSetDetailRow AddGoodsSetDetailRow(
                        short No, 
                        int Disply, 
                        string GoodsCode, 
                        string GoodsName, 
                        string MakerCode, 
                        string MakerName, 
                        string Qty, 
                        string SetNote, 
                        string OfferDate, 
                        double Price, 
                        double Cost, 
                        string Store, 
                        string ShelfNo, 
                        double Stock, 
                        string OfferKubun, 
                        bool EditFlg, 
                        string StoreCode, 
                        bool AddFlag) {
                GoodsSetDetailRow rowGoodsSetDetailRow = ((GoodsSetDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        No,
                        Disply,
                        GoodsCode,
                        GoodsName,
                        MakerCode,
                        MakerName,
                        Qty,
                        SetNote,
                        OfferDate,
                        Price,
                        Cost,
                        Store,
                        ShelfNo,
                        Stock,
                        OfferKubun,
                        EditFlg,
                        StoreCode,
                        AddFlag};
                rowGoodsSetDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGoodsSetDetailRow);
                return rowGoodsSetDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodsSetDetailRow FindByNo(short No) {
                return ((GoodsSetDetailRow)(this.Rows.Find(new object[] {
                            No})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GoodsSetDetailDataTable cln = ((GoodsSetDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GoodsSetDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNo = base.Columns["No"];
                this.columnDisply = base.Columns["Disply"];
                this.columnGoodsCode = base.Columns["GoodsCode"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnMakerCode = base.Columns["MakerCode"];
                this.columnMakerName = base.Columns["MakerName"];
                this.columnQty = base.Columns["Qty"];
                this.columnSetNote = base.Columns["SetNote"];
                this.columnOfferDate = base.Columns["OfferDate"];
                this.columnPrice = base.Columns["Price"];
                this.columnCost = base.Columns["Cost"];
                this.columnStore = base.Columns["Store"];
                this.columnShelfNo = base.Columns["ShelfNo"];
                this.columnStock = base.Columns["Stock"];
                this.columnOfferKubun = base.Columns["OfferKubun"];
                this.columnEditFlg = base.Columns["EditFlg"];
                this.columnStoreCode = base.Columns["StoreCode"];
                this.columnAddFlag = base.Columns["AddFlag"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNo = new global::System.Data.DataColumn("No", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo);
                this.columnDisply = new global::System.Data.DataColumn("Disply", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisply);
                this.columnGoodsCode = new global::System.Data.DataColumn("GoodsCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsCode);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnMakerCode = new global::System.Data.DataColumn("MakerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerCode);
                this.columnMakerName = new global::System.Data.DataColumn("MakerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerName);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnSetNote = new global::System.Data.DataColumn("SetNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetNote);
                this.columnOfferDate = new global::System.Data.DataColumn("OfferDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferDate);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnCost = new global::System.Data.DataColumn("Cost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnStore = new global::System.Data.DataColumn("Store", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStore);
                this.columnShelfNo = new global::System.Data.DataColumn("ShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShelfNo);
                this.columnStock = new global::System.Data.DataColumn("Stock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStock);
                this.columnOfferKubun = new global::System.Data.DataColumn("OfferKubun", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferKubun);
                this.columnEditFlg = new global::System.Data.DataColumn("EditFlg", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEditFlg);
                this.columnStoreCode = new global::System.Data.DataColumn("StoreCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreCode);
                this.columnAddFlag = new global::System.Data.DataColumn("AddFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddFlag);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNo}, true));
                this.columnNo.AllowDBNull = false;
                this.columnNo.Unique = true;
                this.columnNo.DefaultValue = ((short)(0));
                this.columnDisply.AllowDBNull = false;
                this.columnDisply.Caption = "表示順位";
                this.columnDisply.DefaultValue = ((int)(0));
                this.columnGoodsCode.Caption = "品番";
                this.columnGoodsCode.DefaultValue = ((string)(""));
                this.columnGoodsCode.MaxLength = 24;
                this.columnGoodsName.Caption = "品名";
                this.columnGoodsName.DefaultValue = ((string)(""));
                this.columnGoodsName.MaxLength = 40;
                this.columnMakerCode.Caption = "メーカー";
                this.columnMakerCode.DefaultValue = ((string)(""));
                this.columnMakerCode.MaxLength = 4;
                this.columnMakerName.Caption = "メーカー名";
                this.columnMakerName.DefaultValue = ((string)(""));
                this.columnMakerName.MaxLength = 30;
                this.columnQty.Caption = "QTY";
                this.columnQty.DefaultValue = ((string)(""));
                this.columnQty.MaxLength = 7;
                this.columnSetNote.Caption = "結合規格・特記事項";
                this.columnSetNote.DefaultValue = ((string)(""));
                this.columnSetNote.MaxLength = 80;
                this.columnOfferDate.Caption = "提供日付";
                this.columnPrice.Caption = "標準価格";
                this.columnCost.Caption = "原単価";
                this.columnStore.Caption = "倉庫";
                this.columnShelfNo.Caption = "棚番";
                this.columnStock.Caption = "現在庫";
                this.columnOfferKubun.Caption = "提供区分";
                this.columnOfferKubun.DefaultValue = ((string)("0"));
                this.columnEditFlg.Caption = "編集可否";
                this.columnEditFlg.DefaultValue = ((bool)(true));
                this.columnStoreCode.Caption = "倉庫コード";
                this.columnAddFlag.Caption = "追加フラグ";
                this.columnAddFlag.DefaultValue = ((bool)(true));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodsSetDetailRow NewGoodsSetDetailRow() {
                return ((GoodsSetDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GoodsSetDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GoodsSetDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GoodsSetDetailRowChanged != null)) {
                    this.GoodsSetDetailRowChanged(this, new GoodsSetDetailRowChangeEvent(((GoodsSetDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GoodsSetDetailRowChanging != null)) {
                    this.GoodsSetDetailRowChanging(this, new GoodsSetDetailRowChangeEvent(((GoodsSetDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GoodsSetDetailRowDeleted != null)) {
                    this.GoodsSetDetailRowDeleted(this, new GoodsSetDetailRowChangeEvent(((GoodsSetDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GoodsSetDetailRowDeleting != null)) {
                    this.GoodsSetDetailRowDeleting(this, new GoodsSetDetailRowChangeEvent(((GoodsSetDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGoodsSetDetailRow(GoodsSetDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GoodsSetGoodsDataSet ds = new GoodsSetGoodsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GoodsSetDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GoodsSetDetailRow : global::System.Data.DataRow {
            
            private GoodsSetDetailDataTable tableGoodsSetDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GoodsSetDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGoodsSetDetail = ((GoodsSetDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short No {
                get {
                    return ((short)(this[this.tableGoodsSetDetail.NoColumn]));
                }
                set {
                    this[this.tableGoodsSetDetail.NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Disply {
                get {
                    return ((int)(this[this.tableGoodsSetDetail.DisplyColumn]));
                }
                set {
                    this[this.tableGoodsSetDetail.DisplyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsCode {
                get {
                    try {
                        return ((string)(this[this.tableGoodsSetDetail.GoodsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GoodsSetDetail\' にある列 \'GoodsCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.GoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableGoodsSetDetail.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GoodsSetDetail\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerCode {
                get {
                    try {
                        return ((string)(this[this.tableGoodsSetDetail.MakerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GoodsSetDetail\' にある列 \'MakerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.MakerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerName {
                get {
                    if (this.IsMakerNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableGoodsSetDetail.MakerNameColumn]));
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.MakerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableGoodsSetDetail.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GoodsSetDetail\' にある列 \'Qty\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetNote {
                get {
                    if (this.IsSetNoteNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableGoodsSetDetail.SetNoteColumn]));
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.SetNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OfferDate {
                get {
                    try {
                        return ((string)(this[this.tableGoodsSetDetail.OfferDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GoodsSetDetail\' にある列 \'OfferDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.OfferDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Price {
                get {
                    try {
                        return ((double)(this[this.tableGoodsSetDetail.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GoodsSetDetail\' にある列 \'Price\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Cost {
                get {
                    try {
                        return ((double)(this[this.tableGoodsSetDetail.CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GoodsSetDetail\' にある列 \'Cost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Store {
                get {
                    try {
                        return ((string)(this[this.tableGoodsSetDetail.StoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GoodsSetDetail\' にある列 \'Store\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.StoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableGoodsSetDetail.ShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GoodsSetDetail\' にある列 \'ShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.ShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Stock {
                get {
                    try {
                        return ((double)(this[this.tableGoodsSetDetail.StockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GoodsSetDetail\' にある列 \'Stock\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.StockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OfferKubun {
                get {
                    try {
                        return ((string)(this[this.tableGoodsSetDetail.OfferKubunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GoodsSetDetail\' にある列 \'OfferKubun\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.OfferKubunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EditFlg {
                get {
                    try {
                        return ((bool)(this[this.tableGoodsSetDetail.EditFlgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GoodsSetDetail\' にある列 \'EditFlg\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.EditFlgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StoreCode {
                get {
                    try {
                        return ((string)(this[this.tableGoodsSetDetail.StoreCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GoodsSetDetail\' にある列 \'StoreCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.StoreCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AddFlag {
                get {
                    try {
                        return ((bool)(this[this.tableGoodsSetDetail.AddFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GoodsSetDetail\' にある列 \'AddFlag\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGoodsSetDetail.AddFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsCodeNull() {
                return this.IsNull(this.tableGoodsSetDetail.GoodsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsCodeNull() {
                this[this.tableGoodsSetDetail.GoodsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableGoodsSetDetail.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableGoodsSetDetail.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerCodeNull() {
                return this.IsNull(this.tableGoodsSetDetail.MakerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerCodeNull() {
                this[this.tableGoodsSetDetail.MakerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerNameNull() {
                return this.IsNull(this.tableGoodsSetDetail.MakerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerNameNull() {
                this[this.tableGoodsSetDetail.MakerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableGoodsSetDetail.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableGoodsSetDetail.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetNoteNull() {
                return this.IsNull(this.tableGoodsSetDetail.SetNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetNoteNull() {
                this[this.tableGoodsSetDetail.SetNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfferDateNull() {
                return this.IsNull(this.tableGoodsSetDetail.OfferDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfferDateNull() {
                this[this.tableGoodsSetDetail.OfferDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tableGoodsSetDetail.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tableGoodsSetDetail.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostNull() {
                return this.IsNull(this.tableGoodsSetDetail.CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostNull() {
                this[this.tableGoodsSetDetail.CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreNull() {
                return this.IsNull(this.tableGoodsSetDetail.StoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreNull() {
                this[this.tableGoodsSetDetail.StoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShelfNoNull() {
                return this.IsNull(this.tableGoodsSetDetail.ShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShelfNoNull() {
                this[this.tableGoodsSetDetail.ShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockNull() {
                return this.IsNull(this.tableGoodsSetDetail.StockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockNull() {
                this[this.tableGoodsSetDetail.StockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOfferKubunNull() {
                return this.IsNull(this.tableGoodsSetDetail.OfferKubunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOfferKubunNull() {
                this[this.tableGoodsSetDetail.OfferKubunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEditFlgNull() {
                return this.IsNull(this.tableGoodsSetDetail.EditFlgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEditFlgNull() {
                this[this.tableGoodsSetDetail.EditFlgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStoreCodeNull() {
                return this.IsNull(this.tableGoodsSetDetail.StoreCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStoreCodeNull() {
                this[this.tableGoodsSetDetail.StoreCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddFlagNull() {
                return this.IsNull(this.tableGoodsSetDetail.AddFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddFlagNull() {
                this[this.tableGoodsSetDetail.AddFlagColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GoodsSetDetailRowChangeEvent : global::System.EventArgs {
            
            private GoodsSetDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodsSetDetailRowChangeEvent(GoodsSetDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GoodsSetDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591