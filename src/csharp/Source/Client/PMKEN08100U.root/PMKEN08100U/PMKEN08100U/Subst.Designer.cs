//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3053
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Library.Windows.Forms {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Subst")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    internal partial class Subst : global::System.Data.DataSet {
        
        private UsrSubstPartsDataTable tableUsrSubstParts;
        
        private DUsrSubstPartsDataTable tableDUsrSubstParts;
        
        private OriginPartsDataTable tableOriginParts;
        
        private StockDataTable tableStock;
        
        private global::System.Data.DataRelation relationUsrSubstParts_DUsrSubstParts;
        
        private global::System.Data.DataRelation relationOriginParts_UsrSubstParts;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Subst() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Subst(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["UsrSubstParts"] != null)) {
                    base.Tables.Add(new UsrSubstPartsDataTable(ds.Tables["UsrSubstParts"]));
                }
                if ((ds.Tables["DUsrSubstParts"] != null)) {
                    base.Tables.Add(new DUsrSubstPartsDataTable(ds.Tables["DUsrSubstParts"]));
                }
                if ((ds.Tables["OriginParts"] != null)) {
                    base.Tables.Add(new OriginPartsDataTable(ds.Tables["OriginParts"]));
                }
                if ((ds.Tables["Stock"] != null)) {
                    base.Tables.Add(new StockDataTable(ds.Tables["Stock"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UsrSubstPartsDataTable UsrSubstParts {
            get {
                return this.tableUsrSubstParts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DUsrSubstPartsDataTable DUsrSubstParts {
            get {
                return this.tableDUsrSubstParts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OriginPartsDataTable OriginParts {
            get {
                return this.tableOriginParts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockDataTable Stock {
            get {
                return this.tableStock;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Subst cln = ((Subst)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["UsrSubstParts"] != null)) {
                    base.Tables.Add(new UsrSubstPartsDataTable(ds.Tables["UsrSubstParts"]));
                }
                if ((ds.Tables["DUsrSubstParts"] != null)) {
                    base.Tables.Add(new DUsrSubstPartsDataTable(ds.Tables["DUsrSubstParts"]));
                }
                if ((ds.Tables["OriginParts"] != null)) {
                    base.Tables.Add(new OriginPartsDataTable(ds.Tables["OriginParts"]));
                }
                if ((ds.Tables["Stock"] != null)) {
                    base.Tables.Add(new StockDataTable(ds.Tables["Stock"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableUsrSubstParts = ((UsrSubstPartsDataTable)(base.Tables["UsrSubstParts"]));
            if ((initTable == true)) {
                if ((this.tableUsrSubstParts != null)) {
                    this.tableUsrSubstParts.InitVars();
                }
            }
            this.tableDUsrSubstParts = ((DUsrSubstPartsDataTable)(base.Tables["DUsrSubstParts"]));
            if ((initTable == true)) {
                if ((this.tableDUsrSubstParts != null)) {
                    this.tableDUsrSubstParts.InitVars();
                }
            }
            this.tableOriginParts = ((OriginPartsDataTable)(base.Tables["OriginParts"]));
            if ((initTable == true)) {
                if ((this.tableOriginParts != null)) {
                    this.tableOriginParts.InitVars();
                }
            }
            this.tableStock = ((StockDataTable)(base.Tables["Stock"]));
            if ((initTable == true)) {
                if ((this.tableStock != null)) {
                    this.tableStock.InitVars();
                }
            }
            this.relationUsrSubstParts_DUsrSubstParts = this.Relations["UsrSubstParts_DUsrSubstParts"];
            this.relationOriginParts_UsrSubstParts = this.Relations["OriginParts_UsrSubstParts"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Subst";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Subst.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableUsrSubstParts = new UsrSubstPartsDataTable();
            base.Tables.Add(this.tableUsrSubstParts);
            this.tableDUsrSubstParts = new DUsrSubstPartsDataTable();
            base.Tables.Add(this.tableDUsrSubstParts);
            this.tableOriginParts = new OriginPartsDataTable();
            base.Tables.Add(this.tableOriginParts);
            this.tableStock = new StockDataTable();
            base.Tables.Add(this.tableStock);
            this.relationUsrSubstParts_DUsrSubstParts = new global::System.Data.DataRelation("UsrSubstParts_DUsrSubstParts", new global::System.Data.DataColumn[] {
                        this.tableUsrSubstParts.ChgDestGoodsNoColumn,
                        this.tableUsrSubstParts.ChgDestMakerCdColumn}, new global::System.Data.DataColumn[] {
                        this.tableDUsrSubstParts.ChgSrcGoodsNoColumn,
                        this.tableDUsrSubstParts.ChgSrcMakerCdColumn}, false);
            this.Relations.Add(this.relationUsrSubstParts_DUsrSubstParts);
            this.relationOriginParts_UsrSubstParts = new global::System.Data.DataRelation("OriginParts_UsrSubstParts", new global::System.Data.DataColumn[] {
                        this.tableOriginParts.ChgDestMakerCdColumn,
                        this.tableOriginParts.ChgDestGoodsNoColumn}, new global::System.Data.DataColumn[] {
                        this.tableUsrSubstParts.ChgSrcMakerCdColumn,
                        this.tableUsrSubstParts.ChgSrcGoodsNoColumn}, false);
            this.Relations.Add(this.relationOriginParts_UsrSubstParts);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUsrSubstParts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDUsrSubstParts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOriginParts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStock() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Subst ds = new Subst();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void UsrSubstPartsRowChangeEventHandler(object sender, UsrSubstPartsRowChangeEvent e);
        
        public delegate void DUsrSubstPartsRowChangeEventHandler(object sender, DUsrSubstPartsRowChangeEvent e);
        
        public delegate void OriginPartsRowChangeEventHandler(object sender, OriginPartsRowChangeEvent e);
        
        public delegate void StockRowChangeEventHandler(object sender, StockRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UsrSubstPartsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnChgSrcMakerCd;
            
            private global::System.Data.DataColumn columnChgSrcGoodsNo;
            
            private global::System.Data.DataColumn columnChgDestMakerCd;
            
            private global::System.Data.DataColumn columnChgDestGoodsNo;
            
            private global::System.Data.DataColumn columnApplyStDate;
            
            private global::System.Data.DataColumn columnApplyEdDate;
            
            private global::System.Data.DataColumn columnMakerNm;
            
            private global::System.Data.DataColumn columnGoodsNm;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnGenka;
            
            private global::System.Data.DataColumn columnUrika;
            
            private global::System.Data.DataColumn columnGokan;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnQTY;
            
            private global::System.Data.DataColumn columnSelImage;
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            private global::System.Data.DataColumn columnStockCnt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsrSubstPartsDataTable() {
                this.TableName = "UsrSubstParts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UsrSubstPartsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UsrSubstPartsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChgSrcMakerCdColumn {
                get {
                    return this.columnChgSrcMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChgSrcGoodsNoColumn {
                get {
                    return this.columnChgSrcGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChgDestMakerCdColumn {
                get {
                    return this.columnChgDestMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChgDestGoodsNoColumn {
                get {
                    return this.columnChgDestGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyStDateColumn {
                get {
                    return this.columnApplyStDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyEdDateColumn {
                get {
                    return this.columnApplyEdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerNmColumn {
                get {
                    return this.columnMakerNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNmColumn {
                get {
                    return this.columnGoodsNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenkaColumn {
                get {
                    return this.columnGenka;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UrikaColumn {
                get {
                    return this.columnUrika;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GokanColumn {
                get {
                    return this.columnGokan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTYColumn {
                get {
                    return this.columnQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelImageColumn {
                get {
                    return this.columnSelImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockCntColumn {
                get {
                    return this.columnStockCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsrSubstPartsRow this[int index] {
                get {
                    return ((UsrSubstPartsRow)(this.Rows[index]));
                }
            }
            
            public event UsrSubstPartsRowChangeEventHandler UsrSubstPartsRowChanging;
            
            public event UsrSubstPartsRowChangeEventHandler UsrSubstPartsRowChanged;
            
            public event UsrSubstPartsRowChangeEventHandler UsrSubstPartsRowDeleting;
            
            public event UsrSubstPartsRowChangeEventHandler UsrSubstPartsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUsrSubstPartsRow(UsrSubstPartsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsrSubstPartsRow AddUsrSubstPartsRow(
                        int ChgSrcMakerCd, 
                        string ChgSrcGoodsNo, 
                        int ChgDestMakerCd, 
                        string ChgDestGoodsNo, 
                        int ApplyStDate, 
                        int ApplyEdDate, 
                        string MakerNm, 
                        string GoodsNm, 
                        double Price, 
                        double Genka, 
                        double Urika, 
                        System.Drawing.Image Gokan, 
                        string Comment, 
                        double QTY, 
                        System.Drawing.Image SelImage, 
                        string WarehouseCode, 
                        double StockCnt) {
                UsrSubstPartsRow rowUsrSubstPartsRow = ((UsrSubstPartsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ChgSrcMakerCd,
                        ChgSrcGoodsNo,
                        ChgDestMakerCd,
                        ChgDestGoodsNo,
                        ApplyStDate,
                        ApplyEdDate,
                        MakerNm,
                        GoodsNm,
                        Price,
                        Genka,
                        Urika,
                        Gokan,
                        Comment,
                        QTY,
                        SelImage,
                        WarehouseCode,
                        StockCnt};
                rowUsrSubstPartsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUsrSubstPartsRow);
                return rowUsrSubstPartsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UsrSubstPartsDataTable cln = ((UsrSubstPartsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UsrSubstPartsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnChgSrcMakerCd = base.Columns["ChgSrcMakerCd"];
                this.columnChgSrcGoodsNo = base.Columns["ChgSrcGoodsNo"];
                this.columnChgDestMakerCd = base.Columns["ChgDestMakerCd"];
                this.columnChgDestGoodsNo = base.Columns["ChgDestGoodsNo"];
                this.columnApplyStDate = base.Columns["ApplyStDate"];
                this.columnApplyEdDate = base.Columns["ApplyEdDate"];
                this.columnMakerNm = base.Columns["MakerNm"];
                this.columnGoodsNm = base.Columns["GoodsNm"];
                this.columnPrice = base.Columns["Price"];
                this.columnGenka = base.Columns["Genka"];
                this.columnUrika = base.Columns["Urika"];
                this.columnGokan = base.Columns["Gokan"];
                this.columnComment = base.Columns["Comment"];
                this.columnQTY = base.Columns["QTY"];
                this.columnSelImage = base.Columns["SelImage"];
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnStockCnt = base.Columns["StockCnt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnChgSrcMakerCd = new global::System.Data.DataColumn("ChgSrcMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChgSrcMakerCd);
                this.columnChgSrcGoodsNo = new global::System.Data.DataColumn("ChgSrcGoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChgSrcGoodsNo);
                this.columnChgDestMakerCd = new global::System.Data.DataColumn("ChgDestMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChgDestMakerCd);
                this.columnChgDestGoodsNo = new global::System.Data.DataColumn("ChgDestGoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChgDestGoodsNo);
                this.columnApplyStDate = new global::System.Data.DataColumn("ApplyStDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyStDate);
                this.columnApplyEdDate = new global::System.Data.DataColumn("ApplyEdDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyEdDate);
                this.columnMakerNm = new global::System.Data.DataColumn("MakerNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerNm);
                this.columnGoodsNm = new global::System.Data.DataColumn("GoodsNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNm);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnGenka = new global::System.Data.DataColumn("Genka", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenka);
                this.columnUrika = new global::System.Data.DataColumn("Urika", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUrika);
                this.columnGokan = new global::System.Data.DataColumn("Gokan", typeof(global::System.Drawing.Image), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGokan);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnQTY = new global::System.Data.DataColumn("QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY);
                this.columnSelImage = new global::System.Data.DataColumn("SelImage", typeof(global::System.Drawing.Image), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelImage);
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnStockCnt = new global::System.Data.DataColumn("StockCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockCnt);
                this.columnChgSrcMakerCd.AllowDBNull = false;
                this.columnChgSrcMakerCd.Caption = "代替元メーカーコード";
                this.columnChgSrcMakerCd.DefaultValue = ((int)(0));
                this.columnChgSrcGoodsNo.AllowDBNull = false;
                this.columnChgSrcGoodsNo.Caption = "代替元品番(-付品番)";
                this.columnChgSrcGoodsNo.DefaultValue = ((string)(""));
                this.columnChgSrcGoodsNo.MaxLength = 40;
                this.columnChgDestMakerCd.AllowDBNull = false;
                this.columnChgDestMakerCd.Caption = "代替先メーカーコード";
                this.columnChgDestMakerCd.DefaultValue = ((int)(0));
                this.columnChgDestGoodsNo.AllowDBNull = false;
                this.columnChgDestGoodsNo.Caption = "品番";
                this.columnChgDestGoodsNo.DefaultValue = ((string)(""));
                this.columnChgDestGoodsNo.MaxLength = 40;
                this.columnApplyStDate.Caption = "適用開始年月日";
                this.columnApplyStDate.DefaultValue = ((int)(0));
                this.columnApplyEdDate.Caption = "適用終了年月日";
                this.columnApplyEdDate.DefaultValue = ((int)(0));
                this.columnMakerNm.Caption = "メーカー";
                this.columnMakerNm.DefaultValue = ((string)(""));
                this.columnGoodsNm.Caption = "品名";
                this.columnGoodsNm.DefaultValue = ((string)(""));
                this.columnPrice.Caption = "標準価格";
                this.columnPrice.DefaultValue = ((double)(0));
                this.columnGenka.Caption = "原単価";
                this.columnGenka.DefaultValue = ((double)(0));
                this.columnUrika.Caption = "売単価";
                this.columnUrika.DefaultValue = ((double)(0));
                this.columnGokan.Caption = "互換";
                this.columnComment.Caption = "摘要";
                this.columnComment.DefaultValue = ((string)(""));
                this.columnQTY.DefaultValue = ((double)(0));
                this.columnSelImage.Caption = "選択";
                this.columnWarehouseCode.DefaultValue = ((string)(""));
                this.columnStockCnt.Caption = "現在庫数";
                this.columnStockCnt.DefaultValue = ((double)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsrSubstPartsRow NewUsrSubstPartsRow() {
                return ((UsrSubstPartsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UsrSubstPartsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UsrSubstPartsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UsrSubstPartsRowChanged != null)) {
                    this.UsrSubstPartsRowChanged(this, new UsrSubstPartsRowChangeEvent(((UsrSubstPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UsrSubstPartsRowChanging != null)) {
                    this.UsrSubstPartsRowChanging(this, new UsrSubstPartsRowChangeEvent(((UsrSubstPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UsrSubstPartsRowDeleted != null)) {
                    this.UsrSubstPartsRowDeleted(this, new UsrSubstPartsRowChangeEvent(((UsrSubstPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UsrSubstPartsRowDeleting != null)) {
                    this.UsrSubstPartsRowDeleting(this, new UsrSubstPartsRowChangeEvent(((UsrSubstPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUsrSubstPartsRow(UsrSubstPartsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Subst ds = new Subst();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UsrSubstPartsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DUsrSubstPartsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnChgSrcMakerCd;
            
            private global::System.Data.DataColumn columnChgSrcGoodsNo;
            
            private global::System.Data.DataColumn columnChgDestMakerCd;
            
            private global::System.Data.DataColumn columnChgDestGoodsNo;
            
            private global::System.Data.DataColumn columnApplyStDate;
            
            private global::System.Data.DataColumn columnApplyEdDate;
            
            private global::System.Data.DataColumn columnMakerNm;
            
            private global::System.Data.DataColumn columnGoodsNm;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnGenka;
            
            private global::System.Data.DataColumn columnUrika;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnSelImage;
            
            private global::System.Data.DataColumn columnQTY;
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            private global::System.Data.DataColumn columnStockCnt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DUsrSubstPartsDataTable() {
                this.TableName = "DUsrSubstParts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DUsrSubstPartsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DUsrSubstPartsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChgSrcMakerCdColumn {
                get {
                    return this.columnChgSrcMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChgSrcGoodsNoColumn {
                get {
                    return this.columnChgSrcGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChgDestMakerCdColumn {
                get {
                    return this.columnChgDestMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChgDestGoodsNoColumn {
                get {
                    return this.columnChgDestGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyStDateColumn {
                get {
                    return this.columnApplyStDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyEdDateColumn {
                get {
                    return this.columnApplyEdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerNmColumn {
                get {
                    return this.columnMakerNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNmColumn {
                get {
                    return this.columnGoodsNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenkaColumn {
                get {
                    return this.columnGenka;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UrikaColumn {
                get {
                    return this.columnUrika;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelImageColumn {
                get {
                    return this.columnSelImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTYColumn {
                get {
                    return this.columnQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockCntColumn {
                get {
                    return this.columnStockCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DUsrSubstPartsRow this[int index] {
                get {
                    return ((DUsrSubstPartsRow)(this.Rows[index]));
                }
            }
            
            public event DUsrSubstPartsRowChangeEventHandler DUsrSubstPartsRowChanging;
            
            public event DUsrSubstPartsRowChangeEventHandler DUsrSubstPartsRowChanged;
            
            public event DUsrSubstPartsRowChangeEventHandler DUsrSubstPartsRowDeleting;
            
            public event DUsrSubstPartsRowChangeEventHandler DUsrSubstPartsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDUsrSubstPartsRow(DUsrSubstPartsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DUsrSubstPartsRow AddDUsrSubstPartsRow(
                        int ChgSrcMakerCd, 
                        string ChgSrcGoodsNo, 
                        int ChgDestMakerCd, 
                        string ChgDestGoodsNo, 
                        int ApplyStDate, 
                        int ApplyEdDate, 
                        string MakerNm, 
                        string GoodsNm, 
                        double Price, 
                        double Genka, 
                        double Urika, 
                        string Comment, 
                        System.Drawing.Image SelImage, 
                        double QTY, 
                        string WarehouseCode, 
                        double StockCnt) {
                DUsrSubstPartsRow rowDUsrSubstPartsRow = ((DUsrSubstPartsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ChgSrcMakerCd,
                        ChgSrcGoodsNo,
                        ChgDestMakerCd,
                        ChgDestGoodsNo,
                        ApplyStDate,
                        ApplyEdDate,
                        MakerNm,
                        GoodsNm,
                        Price,
                        Genka,
                        Urika,
                        Comment,
                        SelImage,
                        QTY,
                        WarehouseCode,
                        StockCnt};
                rowDUsrSubstPartsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDUsrSubstPartsRow);
                return rowDUsrSubstPartsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DUsrSubstPartsDataTable cln = ((DUsrSubstPartsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DUsrSubstPartsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnChgSrcMakerCd = base.Columns["ChgSrcMakerCd"];
                this.columnChgSrcGoodsNo = base.Columns["ChgSrcGoodsNo"];
                this.columnChgDestMakerCd = base.Columns["ChgDestMakerCd"];
                this.columnChgDestGoodsNo = base.Columns["ChgDestGoodsNo"];
                this.columnApplyStDate = base.Columns["ApplyStDate"];
                this.columnApplyEdDate = base.Columns["ApplyEdDate"];
                this.columnMakerNm = base.Columns["MakerNm"];
                this.columnGoodsNm = base.Columns["GoodsNm"];
                this.columnPrice = base.Columns["Price"];
                this.columnGenka = base.Columns["Genka"];
                this.columnUrika = base.Columns["Urika"];
                this.columnComment = base.Columns["Comment"];
                this.columnSelImage = base.Columns["SelImage"];
                this.columnQTY = base.Columns["QTY"];
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnStockCnt = base.Columns["StockCnt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnChgSrcMakerCd = new global::System.Data.DataColumn("ChgSrcMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChgSrcMakerCd);
                this.columnChgSrcGoodsNo = new global::System.Data.DataColumn("ChgSrcGoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChgSrcGoodsNo);
                this.columnChgDestMakerCd = new global::System.Data.DataColumn("ChgDestMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChgDestMakerCd);
                this.columnChgDestGoodsNo = new global::System.Data.DataColumn("ChgDestGoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChgDestGoodsNo);
                this.columnApplyStDate = new global::System.Data.DataColumn("ApplyStDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyStDate);
                this.columnApplyEdDate = new global::System.Data.DataColumn("ApplyEdDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyEdDate);
                this.columnMakerNm = new global::System.Data.DataColumn("MakerNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerNm);
                this.columnGoodsNm = new global::System.Data.DataColumn("GoodsNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNm);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnGenka = new global::System.Data.DataColumn("Genka", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenka);
                this.columnUrika = new global::System.Data.DataColumn("Urika", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUrika);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnSelImage = new global::System.Data.DataColumn("SelImage", typeof(global::System.Drawing.Image), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelImage);
                this.columnQTY = new global::System.Data.DataColumn("QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY);
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnStockCnt = new global::System.Data.DataColumn("StockCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockCnt);
                this.columnChgSrcMakerCd.AllowDBNull = false;
                this.columnChgSrcMakerCd.Caption = "代替元メーカーコード";
                this.columnChgSrcMakerCd.DefaultValue = ((int)(0));
                this.columnChgSrcGoodsNo.AllowDBNull = false;
                this.columnChgSrcGoodsNo.Caption = "代替元品番(-付品番)";
                this.columnChgSrcGoodsNo.DefaultValue = ((string)(""));
                this.columnChgSrcGoodsNo.MaxLength = 40;
                this.columnChgDestMakerCd.AllowDBNull = false;
                this.columnChgDestMakerCd.Caption = "代替先メーカーコード";
                this.columnChgDestMakerCd.DefaultValue = ((int)(0));
                this.columnChgDestGoodsNo.AllowDBNull = false;
                this.columnChgDestGoodsNo.Caption = "品番";
                this.columnChgDestGoodsNo.DefaultValue = ((string)(""));
                this.columnChgDestGoodsNo.MaxLength = 40;
                this.columnApplyStDate.Caption = "適用開始年月日";
                this.columnApplyStDate.DefaultValue = ((int)(0));
                this.columnApplyEdDate.Caption = "適用終了年月日";
                this.columnApplyEdDate.DefaultValue = ((int)(0));
                this.columnMakerNm.Caption = "メーカー";
                this.columnMakerNm.DefaultValue = ((string)(""));
                this.columnGoodsNm.Caption = "品名";
                this.columnGoodsNm.DefaultValue = ((string)(""));
                this.columnPrice.Caption = "標準価格";
                this.columnPrice.DefaultValue = ((double)(0));
                this.columnGenka.Caption = "原単価";
                this.columnGenka.DefaultValue = ((double)(0));
                this.columnUrika.Caption = "売単価";
                this.columnUrika.DefaultValue = ((double)(0));
                this.columnComment.Caption = "摘要";
                this.columnComment.DefaultValue = ((string)(""));
                this.columnSelImage.Caption = "選択";
                this.columnQTY.DefaultValue = ((double)(0));
                this.columnWarehouseCode.DefaultValue = ((string)(""));
                this.columnStockCnt.Caption = "現在庫数";
                this.columnStockCnt.DefaultValue = ((double)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DUsrSubstPartsRow NewDUsrSubstPartsRow() {
                return ((DUsrSubstPartsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DUsrSubstPartsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DUsrSubstPartsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DUsrSubstPartsRowChanged != null)) {
                    this.DUsrSubstPartsRowChanged(this, new DUsrSubstPartsRowChangeEvent(((DUsrSubstPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DUsrSubstPartsRowChanging != null)) {
                    this.DUsrSubstPartsRowChanging(this, new DUsrSubstPartsRowChangeEvent(((DUsrSubstPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DUsrSubstPartsRowDeleted != null)) {
                    this.DUsrSubstPartsRowDeleted(this, new DUsrSubstPartsRowChangeEvent(((DUsrSubstPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DUsrSubstPartsRowDeleting != null)) {
                    this.DUsrSubstPartsRowDeleting(this, new DUsrSubstPartsRowChangeEvent(((DUsrSubstPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDUsrSubstPartsRow(DUsrSubstPartsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Subst ds = new Subst();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DUsrSubstPartsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OriginPartsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnChgSrcMakerCd;
            
            private global::System.Data.DataColumn columnChgSrcGoodsNo;
            
            private global::System.Data.DataColumn columnChgDestMakerCd;
            
            private global::System.Data.DataColumn columnChgDestGoodsNo;
            
            private global::System.Data.DataColumn columnApplyStDate;
            
            private global::System.Data.DataColumn columnApplyEdDate;
            
            private global::System.Data.DataColumn columnMakerNm;
            
            private global::System.Data.DataColumn columnGoodsNm;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnGenka;
            
            private global::System.Data.DataColumn columnUrika;
            
            private global::System.Data.DataColumn columnGokan;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnQTY;
            
            private global::System.Data.DataColumn columnSelImage;
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            private global::System.Data.DataColumn columnStockCnt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OriginPartsDataTable() {
                this.TableName = "OriginParts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OriginPartsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OriginPartsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChgSrcMakerCdColumn {
                get {
                    return this.columnChgSrcMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChgSrcGoodsNoColumn {
                get {
                    return this.columnChgSrcGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChgDestMakerCdColumn {
                get {
                    return this.columnChgDestMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChgDestGoodsNoColumn {
                get {
                    return this.columnChgDestGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyStDateColumn {
                get {
                    return this.columnApplyStDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApplyEdDateColumn {
                get {
                    return this.columnApplyEdDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerNmColumn {
                get {
                    return this.columnMakerNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNmColumn {
                get {
                    return this.columnGoodsNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GenkaColumn {
                get {
                    return this.columnGenka;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UrikaColumn {
                get {
                    return this.columnUrika;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GokanColumn {
                get {
                    return this.columnGokan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTYColumn {
                get {
                    return this.columnQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelImageColumn {
                get {
                    return this.columnSelImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockCntColumn {
                get {
                    return this.columnStockCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OriginPartsRow this[int index] {
                get {
                    return ((OriginPartsRow)(this.Rows[index]));
                }
            }
            
            public event OriginPartsRowChangeEventHandler OriginPartsRowChanging;
            
            public event OriginPartsRowChangeEventHandler OriginPartsRowChanged;
            
            public event OriginPartsRowChangeEventHandler OriginPartsRowDeleting;
            
            public event OriginPartsRowChangeEventHandler OriginPartsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOriginPartsRow(OriginPartsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OriginPartsRow AddOriginPartsRow(
                        int ChgSrcMakerCd, 
                        string ChgSrcGoodsNo, 
                        int ChgDestMakerCd, 
                        string ChgDestGoodsNo, 
                        int ApplyStDate, 
                        int ApplyEdDate, 
                        string MakerNm, 
                        string GoodsNm, 
                        double Price, 
                        double Genka, 
                        double Urika, 
                        System.Drawing.Image Gokan, 
                        string Comment, 
                        double QTY, 
                        System.Drawing.Image SelImage, 
                        string WarehouseCode, 
                        double StockCnt) {
                OriginPartsRow rowOriginPartsRow = ((OriginPartsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ChgSrcMakerCd,
                        ChgSrcGoodsNo,
                        ChgDestMakerCd,
                        ChgDestGoodsNo,
                        ApplyStDate,
                        ApplyEdDate,
                        MakerNm,
                        GoodsNm,
                        Price,
                        Genka,
                        Urika,
                        Gokan,
                        Comment,
                        QTY,
                        SelImage,
                        WarehouseCode,
                        StockCnt};
                rowOriginPartsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOriginPartsRow);
                return rowOriginPartsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OriginPartsDataTable cln = ((OriginPartsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OriginPartsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnChgSrcMakerCd = base.Columns["ChgSrcMakerCd"];
                this.columnChgSrcGoodsNo = base.Columns["ChgSrcGoodsNo"];
                this.columnChgDestMakerCd = base.Columns["ChgDestMakerCd"];
                this.columnChgDestGoodsNo = base.Columns["ChgDestGoodsNo"];
                this.columnApplyStDate = base.Columns["ApplyStDate"];
                this.columnApplyEdDate = base.Columns["ApplyEdDate"];
                this.columnMakerNm = base.Columns["MakerNm"];
                this.columnGoodsNm = base.Columns["GoodsNm"];
                this.columnPrice = base.Columns["Price"];
                this.columnGenka = base.Columns["Genka"];
                this.columnUrika = base.Columns["Urika"];
                this.columnGokan = base.Columns["Gokan"];
                this.columnComment = base.Columns["Comment"];
                this.columnQTY = base.Columns["QTY"];
                this.columnSelImage = base.Columns["SelImage"];
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnStockCnt = base.Columns["StockCnt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnChgSrcMakerCd = new global::System.Data.DataColumn("ChgSrcMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChgSrcMakerCd);
                this.columnChgSrcGoodsNo = new global::System.Data.DataColumn("ChgSrcGoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChgSrcGoodsNo);
                this.columnChgDestMakerCd = new global::System.Data.DataColumn("ChgDestMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChgDestMakerCd);
                this.columnChgDestGoodsNo = new global::System.Data.DataColumn("ChgDestGoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChgDestGoodsNo);
                this.columnApplyStDate = new global::System.Data.DataColumn("ApplyStDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyStDate);
                this.columnApplyEdDate = new global::System.Data.DataColumn("ApplyEdDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyEdDate);
                this.columnMakerNm = new global::System.Data.DataColumn("MakerNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerNm);
                this.columnGoodsNm = new global::System.Data.DataColumn("GoodsNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNm);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnGenka = new global::System.Data.DataColumn("Genka", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenka);
                this.columnUrika = new global::System.Data.DataColumn("Urika", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUrika);
                this.columnGokan = new global::System.Data.DataColumn("Gokan", typeof(global::System.Drawing.Image), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGokan);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnQTY = new global::System.Data.DataColumn("QTY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY);
                this.columnSelImage = new global::System.Data.DataColumn("SelImage", typeof(global::System.Drawing.Image), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelImage);
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnStockCnt = new global::System.Data.DataColumn("StockCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockCnt);
                this.columnChgSrcMakerCd.AllowDBNull = false;
                this.columnChgSrcMakerCd.Caption = "代替元メーカーコード";
                this.columnChgSrcMakerCd.DefaultValue = ((int)(0));
                this.columnChgSrcGoodsNo.AllowDBNull = false;
                this.columnChgSrcGoodsNo.Caption = "代替元品番(-付品番)";
                this.columnChgSrcGoodsNo.DefaultValue = ((string)(""));
                this.columnChgSrcGoodsNo.MaxLength = 40;
                this.columnChgDestMakerCd.AllowDBNull = false;
                this.columnChgDestMakerCd.Caption = "代替先メーカーコード";
                this.columnChgDestMakerCd.DefaultValue = ((int)(0));
                this.columnChgDestGoodsNo.AllowDBNull = false;
                this.columnChgDestGoodsNo.Caption = "品番";
                this.columnChgDestGoodsNo.DefaultValue = ((string)(""));
                this.columnChgDestGoodsNo.MaxLength = 40;
                this.columnApplyStDate.Caption = "適用開始年月日";
                this.columnApplyStDate.DefaultValue = ((int)(0));
                this.columnApplyEdDate.Caption = "適用終了年月日";
                this.columnApplyEdDate.DefaultValue = ((int)(0));
                this.columnMakerNm.Caption = "メーカー";
                this.columnMakerNm.DefaultValue = ((string)(""));
                this.columnGoodsNm.Caption = "品名";
                this.columnGoodsNm.DefaultValue = ((string)(""));
                this.columnPrice.Caption = "標準価格";
                this.columnPrice.DefaultValue = ((double)(0));
                this.columnGenka.Caption = "原単価";
                this.columnGenka.DefaultValue = ((double)(0));
                this.columnUrika.Caption = "売単価";
                this.columnUrika.DefaultValue = ((double)(0));
                this.columnGokan.Caption = "互換";
                this.columnComment.Caption = "摘要";
                this.columnComment.DefaultValue = ((string)(""));
                this.columnQTY.DefaultValue = ((double)(0));
                this.columnSelImage.Caption = "選択";
                this.columnWarehouseCode.DefaultValue = ((string)(""));
                this.columnStockCnt.Caption = "現在庫数";
                this.columnStockCnt.DefaultValue = ((double)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OriginPartsRow NewOriginPartsRow() {
                return ((OriginPartsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OriginPartsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OriginPartsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OriginPartsRowChanged != null)) {
                    this.OriginPartsRowChanged(this, new OriginPartsRowChangeEvent(((OriginPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OriginPartsRowChanging != null)) {
                    this.OriginPartsRowChanging(this, new OriginPartsRowChangeEvent(((OriginPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OriginPartsRowDeleted != null)) {
                    this.OriginPartsRowDeleted(this, new OriginPartsRowChangeEvent(((OriginPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OriginPartsRowDeleting != null)) {
                    this.OriginPartsRowDeleting(this, new OriginPartsRowChangeEvent(((OriginPartsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOriginPartsRow(OriginPartsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Subst ds = new Subst();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OriginPartsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnShipmentPosCnt;
            
            private global::System.Data.DataColumn columnMinimumStockCnt;
            
            private global::System.Data.DataColumn columnMaximumStockCnt;
            
            private global::System.Data.DataColumn columnWarehouseShelfNo;
            
            private global::System.Data.DataColumn columnWarehouseName;
            
            private global::System.Data.DataColumn columnSelectionState;
            
            private global::System.Data.DataColumn columnSelImage;
            
            private global::System.Data.DataColumn columnSortDiv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDataTable() {
                this.TableName = "Stock";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentPosCntColumn {
                get {
                    return this.columnShipmentPosCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinimumStockCntColumn {
                get {
                    return this.columnMinimumStockCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaximumStockCntColumn {
                get {
                    return this.columnMaximumStockCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseShelfNoColumn {
                get {
                    return this.columnWarehouseShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseNameColumn {
                get {
                    return this.columnWarehouseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectionStateColumn {
                get {
                    return this.columnSelectionState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelImageColumn {
                get {
                    return this.columnSelImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SortDivColumn {
                get {
                    return this.columnSortDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow this[int index] {
                get {
                    return ((StockRow)(this.Rows[index]));
                }
            }
            
            public event StockRowChangeEventHandler StockRowChanging;
            
            public event StockRowChangeEventHandler StockRowChanged;
            
            public event StockRowChangeEventHandler StockRowDeleting;
            
            public event StockRowChangeEventHandler StockRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockRow(StockRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow AddStockRow(string WarehouseCode, int GoodsMakerCd, string GoodsNo, double ShipmentPosCnt, double MinimumStockCnt, double MaximumStockCnt, string WarehouseShelfNo, string WarehouseName, bool SelectionState, System.Drawing.Image SelImage, int SortDiv) {
                StockRow rowStockRow = ((StockRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WarehouseCode,
                        GoodsMakerCd,
                        GoodsNo,
                        ShipmentPosCnt,
                        MinimumStockCnt,
                        MaximumStockCnt,
                        WarehouseShelfNo,
                        WarehouseName,
                        SelectionState,
                        SelImage,
                        SortDiv};
                rowStockRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockRow);
                return rowStockRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow FindByWarehouseCodeGoodsMakerCdGoodsNo(string WarehouseCode, int GoodsMakerCd, string GoodsNo) {
                return ((StockRow)(this.Rows.Find(new object[] {
                            WarehouseCode,
                            GoodsMakerCd,
                            GoodsNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockDataTable cln = ((StockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnShipmentPosCnt = base.Columns["ShipmentPosCnt"];
                this.columnMinimumStockCnt = base.Columns["MinimumStockCnt"];
                this.columnMaximumStockCnt = base.Columns["MaximumStockCnt"];
                this.columnWarehouseShelfNo = base.Columns["WarehouseShelfNo"];
                this.columnWarehouseName = base.Columns["WarehouseName"];
                this.columnSelectionState = base.Columns["SelectionState"];
                this.columnSelImage = base.Columns["SelImage"];
                this.columnSortDiv = base.Columns["SortDiv"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnShipmentPosCnt = new global::System.Data.DataColumn("ShipmentPosCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentPosCnt);
                this.columnMinimumStockCnt = new global::System.Data.DataColumn("MinimumStockCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinimumStockCnt);
                this.columnMaximumStockCnt = new global::System.Data.DataColumn("MaximumStockCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaximumStockCnt);
                this.columnWarehouseShelfNo = new global::System.Data.DataColumn("WarehouseShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseShelfNo);
                this.columnWarehouseName = new global::System.Data.DataColumn("WarehouseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseName);
                this.columnSelectionState = new global::System.Data.DataColumn("SelectionState", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectionState);
                this.columnSelImage = new global::System.Data.DataColumn("SelImage", typeof(global::System.Drawing.Image), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelImage);
                this.columnSortDiv = new global::System.Data.DataColumn("SortDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortDiv);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWarehouseCode,
                                this.columnGoodsMakerCd,
                                this.columnGoodsNo}, true));
                this.columnWarehouseCode.AllowDBNull = false;
                this.columnWarehouseCode.Caption = "倉庫コード";
                this.columnWarehouseCode.DefaultValue = ((string)(""));
                this.columnWarehouseCode.MaxLength = 6;
                this.columnGoodsMakerCd.AllowDBNull = false;
                this.columnGoodsMakerCd.Caption = "商品メーカー";
                this.columnGoodsMakerCd.DefaultValue = ((int)(0));
                this.columnGoodsNo.AllowDBNull = false;
                this.columnGoodsNo.Caption = "品番";
                this.columnGoodsNo.DefaultValue = ((string)(""));
                this.columnGoodsNo.MaxLength = 40;
                this.columnShipmentPosCnt.Caption = "現在庫数";
                this.columnShipmentPosCnt.DefaultValue = ((double)(0));
                this.columnMinimumStockCnt.Caption = "最低在庫数";
                this.columnMinimumStockCnt.DefaultValue = ((double)(0));
                this.columnMaximumStockCnt.Caption = "最高在庫数";
                this.columnMaximumStockCnt.DefaultValue = ((double)(0));
                this.columnWarehouseShelfNo.Caption = "棚番";
                this.columnWarehouseShelfNo.DefaultValue = ((string)(""));
                this.columnWarehouseShelfNo.MaxLength = 8;
                this.columnWarehouseName.Caption = "倉庫";
                this.columnWarehouseName.DefaultValue = ((string)(""));
                this.columnSelectionState.DefaultValue = ((bool)(false));
                this.columnSelImage.Caption = "選択";
                this.columnSortDiv.Caption = "ソート区分";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow NewStockRow() {
                return ((StockRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockRowChanged != null)) {
                    this.StockRowChanged(this, new StockRowChangeEvent(((StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockRowChanging != null)) {
                    this.StockRowChanging(this, new StockRowChangeEvent(((StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockRowDeleted != null)) {
                    this.StockRowDeleted(this, new StockRowChangeEvent(((StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockRowDeleting != null)) {
                    this.StockRowDeleting(this, new StockRowChangeEvent(((StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockRow(StockRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Subst ds = new Subst();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UsrSubstPartsRow : global::System.Data.DataRow {
            
            private UsrSubstPartsDataTable tableUsrSubstParts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UsrSubstPartsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUsrSubstParts = ((UsrSubstPartsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChgSrcMakerCd {
                get {
                    return ((int)(this[this.tableUsrSubstParts.ChgSrcMakerCdColumn]));
                }
                set {
                    this[this.tableUsrSubstParts.ChgSrcMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChgSrcGoodsNo {
                get {
                    return ((string)(this[this.tableUsrSubstParts.ChgSrcGoodsNoColumn]));
                }
                set {
                    this[this.tableUsrSubstParts.ChgSrcGoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChgDestMakerCd {
                get {
                    return ((int)(this[this.tableUsrSubstParts.ChgDestMakerCdColumn]));
                }
                set {
                    this[this.tableUsrSubstParts.ChgDestMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChgDestGoodsNo {
                get {
                    return ((string)(this[this.tableUsrSubstParts.ChgDestGoodsNoColumn]));
                }
                set {
                    this[this.tableUsrSubstParts.ChgDestGoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApplyStDate {
                get {
                    try {
                        return ((int)(this[this.tableUsrSubstParts.ApplyStDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'UsrSubstParts\' にある列 \'ApplyStDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableUsrSubstParts.ApplyStDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApplyEdDate {
                get {
                    try {
                        return ((int)(this[this.tableUsrSubstParts.ApplyEdDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'UsrSubstParts\' にある列 \'ApplyEdDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableUsrSubstParts.ApplyEdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerNm {
                get {
                    try {
                        return ((string)(this[this.tableUsrSubstParts.MakerNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'UsrSubstParts\' にある列 \'MakerNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableUsrSubstParts.MakerNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNm {
                get {
                    try {
                        return ((string)(this[this.tableUsrSubstParts.GoodsNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'UsrSubstParts\' にある列 \'GoodsNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableUsrSubstParts.GoodsNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Price {
                get {
                    try {
                        return ((double)(this[this.tableUsrSubstParts.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'UsrSubstParts\' にある列 \'Price\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableUsrSubstParts.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Genka {
                get {
                    try {
                        return ((double)(this[this.tableUsrSubstParts.GenkaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'UsrSubstParts\' にある列 \'Genka\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableUsrSubstParts.GenkaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Urika {
                get {
                    try {
                        return ((double)(this[this.tableUsrSubstParts.UrikaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'UsrSubstParts\' にある列 \'Urika\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableUsrSubstParts.UrikaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image Gokan {
                get {
                    try {
                        return ((global::System.Drawing.Image)(this[this.tableUsrSubstParts.GokanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'UsrSubstParts\' にある列 \'Gokan\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableUsrSubstParts.GokanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableUsrSubstParts.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'UsrSubstParts\' にある列 \'Comment\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableUsrSubstParts.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double QTY {
                get {
                    try {
                        return ((double)(this[this.tableUsrSubstParts.QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'UsrSubstParts\' にある列 \'QTY\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableUsrSubstParts.QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image SelImage {
                get {
                    try {
                        return ((global::System.Drawing.Image)(this[this.tableUsrSubstParts.SelImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'UsrSubstParts\' にある列 \'SelImage\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableUsrSubstParts.SelImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    if (this.IsWarehouseCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUsrSubstParts.WarehouseCodeColumn]));
                    }
                }
                set {
                    this[this.tableUsrSubstParts.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockCnt {
                get {
                    try {
                        return ((double)(this[this.tableUsrSubstParts.StockCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'UsrSubstParts\' にある列 \'StockCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableUsrSubstParts.StockCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OriginPartsRow OriginPartsRowParent {
                get {
                    return ((OriginPartsRow)(this.GetParentRow(this.Table.ParentRelations["OriginParts_UsrSubstParts"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["OriginParts_UsrSubstParts"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyStDateNull() {
                return this.IsNull(this.tableUsrSubstParts.ApplyStDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyStDateNull() {
                this[this.tableUsrSubstParts.ApplyStDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyEdDateNull() {
                return this.IsNull(this.tableUsrSubstParts.ApplyEdDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyEdDateNull() {
                this[this.tableUsrSubstParts.ApplyEdDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerNmNull() {
                return this.IsNull(this.tableUsrSubstParts.MakerNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerNmNull() {
                this[this.tableUsrSubstParts.MakerNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNmNull() {
                return this.IsNull(this.tableUsrSubstParts.GoodsNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNmNull() {
                this[this.tableUsrSubstParts.GoodsNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tableUsrSubstParts.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tableUsrSubstParts.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenkaNull() {
                return this.IsNull(this.tableUsrSubstParts.GenkaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenkaNull() {
                this[this.tableUsrSubstParts.GenkaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUrikaNull() {
                return this.IsNull(this.tableUsrSubstParts.UrikaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUrikaNull() {
                this[this.tableUsrSubstParts.UrikaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGokanNull() {
                return this.IsNull(this.tableUsrSubstParts.GokanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGokanNull() {
                this[this.tableUsrSubstParts.GokanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableUsrSubstParts.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableUsrSubstParts.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTYNull() {
                return this.IsNull(this.tableUsrSubstParts.QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTYNull() {
                this[this.tableUsrSubstParts.QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelImageNull() {
                return this.IsNull(this.tableUsrSubstParts.SelImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelImageNull() {
                this[this.tableUsrSubstParts.SelImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCodeNull() {
                return this.IsNull(this.tableUsrSubstParts.WarehouseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCodeNull() {
                this[this.tableUsrSubstParts.WarehouseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockCntNull() {
                return this.IsNull(this.tableUsrSubstParts.StockCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockCntNull() {
                this[this.tableUsrSubstParts.StockCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DUsrSubstPartsRow[] GetDUsrSubstPartsRows() {
                if ((this.Table.ChildRelations["UsrSubstParts_DUsrSubstParts"] == null)) {
                    return new DUsrSubstPartsRow[0];
                }
                else {
                    return ((DUsrSubstPartsRow[])(base.GetChildRows(this.Table.ChildRelations["UsrSubstParts_DUsrSubstParts"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DUsrSubstPartsRow : global::System.Data.DataRow {
            
            private DUsrSubstPartsDataTable tableDUsrSubstParts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DUsrSubstPartsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDUsrSubstParts = ((DUsrSubstPartsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChgSrcMakerCd {
                get {
                    return ((int)(this[this.tableDUsrSubstParts.ChgSrcMakerCdColumn]));
                }
                set {
                    this[this.tableDUsrSubstParts.ChgSrcMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChgSrcGoodsNo {
                get {
                    return ((string)(this[this.tableDUsrSubstParts.ChgSrcGoodsNoColumn]));
                }
                set {
                    this[this.tableDUsrSubstParts.ChgSrcGoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChgDestMakerCd {
                get {
                    return ((int)(this[this.tableDUsrSubstParts.ChgDestMakerCdColumn]));
                }
                set {
                    this[this.tableDUsrSubstParts.ChgDestMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChgDestGoodsNo {
                get {
                    return ((string)(this[this.tableDUsrSubstParts.ChgDestGoodsNoColumn]));
                }
                set {
                    this[this.tableDUsrSubstParts.ChgDestGoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApplyStDate {
                get {
                    try {
                        return ((int)(this[this.tableDUsrSubstParts.ApplyStDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DUsrSubstParts\' にある列 \'ApplyStDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDUsrSubstParts.ApplyStDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApplyEdDate {
                get {
                    try {
                        return ((int)(this[this.tableDUsrSubstParts.ApplyEdDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DUsrSubstParts\' にある列 \'ApplyEdDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDUsrSubstParts.ApplyEdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerNm {
                get {
                    try {
                        return ((string)(this[this.tableDUsrSubstParts.MakerNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DUsrSubstParts\' にある列 \'MakerNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDUsrSubstParts.MakerNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNm {
                get {
                    try {
                        return ((string)(this[this.tableDUsrSubstParts.GoodsNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DUsrSubstParts\' にある列 \'GoodsNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDUsrSubstParts.GoodsNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Price {
                get {
                    try {
                        return ((double)(this[this.tableDUsrSubstParts.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DUsrSubstParts\' にある列 \'Price\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDUsrSubstParts.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Genka {
                get {
                    try {
                        return ((double)(this[this.tableDUsrSubstParts.GenkaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DUsrSubstParts\' にある列 \'Genka\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDUsrSubstParts.GenkaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Urika {
                get {
                    try {
                        return ((double)(this[this.tableDUsrSubstParts.UrikaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DUsrSubstParts\' にある列 \'Urika\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDUsrSubstParts.UrikaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableDUsrSubstParts.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DUsrSubstParts\' にある列 \'Comment\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDUsrSubstParts.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image SelImage {
                get {
                    try {
                        return ((global::System.Drawing.Image)(this[this.tableDUsrSubstParts.SelImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DUsrSubstParts\' にある列 \'SelImage\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDUsrSubstParts.SelImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double QTY {
                get {
                    try {
                        return ((double)(this[this.tableDUsrSubstParts.QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DUsrSubstParts\' にある列 \'QTY\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDUsrSubstParts.QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    if (this.IsWarehouseCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDUsrSubstParts.WarehouseCodeColumn]));
                    }
                }
                set {
                    this[this.tableDUsrSubstParts.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockCnt {
                get {
                    try {
                        return ((double)(this[this.tableDUsrSubstParts.StockCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DUsrSubstParts\' にある列 \'StockCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDUsrSubstParts.StockCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsrSubstPartsRow UsrSubstPartsRowParent {
                get {
                    return ((UsrSubstPartsRow)(this.GetParentRow(this.Table.ParentRelations["UsrSubstParts_DUsrSubstParts"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["UsrSubstParts_DUsrSubstParts"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyStDateNull() {
                return this.IsNull(this.tableDUsrSubstParts.ApplyStDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyStDateNull() {
                this[this.tableDUsrSubstParts.ApplyStDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyEdDateNull() {
                return this.IsNull(this.tableDUsrSubstParts.ApplyEdDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyEdDateNull() {
                this[this.tableDUsrSubstParts.ApplyEdDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerNmNull() {
                return this.IsNull(this.tableDUsrSubstParts.MakerNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerNmNull() {
                this[this.tableDUsrSubstParts.MakerNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNmNull() {
                return this.IsNull(this.tableDUsrSubstParts.GoodsNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNmNull() {
                this[this.tableDUsrSubstParts.GoodsNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tableDUsrSubstParts.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tableDUsrSubstParts.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenkaNull() {
                return this.IsNull(this.tableDUsrSubstParts.GenkaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenkaNull() {
                this[this.tableDUsrSubstParts.GenkaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUrikaNull() {
                return this.IsNull(this.tableDUsrSubstParts.UrikaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUrikaNull() {
                this[this.tableDUsrSubstParts.UrikaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableDUsrSubstParts.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableDUsrSubstParts.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelImageNull() {
                return this.IsNull(this.tableDUsrSubstParts.SelImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelImageNull() {
                this[this.tableDUsrSubstParts.SelImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTYNull() {
                return this.IsNull(this.tableDUsrSubstParts.QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTYNull() {
                this[this.tableDUsrSubstParts.QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCodeNull() {
                return this.IsNull(this.tableDUsrSubstParts.WarehouseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCodeNull() {
                this[this.tableDUsrSubstParts.WarehouseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockCntNull() {
                return this.IsNull(this.tableDUsrSubstParts.StockCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockCntNull() {
                this[this.tableDUsrSubstParts.StockCntColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OriginPartsRow : global::System.Data.DataRow {
            
            private OriginPartsDataTable tableOriginParts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OriginPartsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOriginParts = ((OriginPartsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChgSrcMakerCd {
                get {
                    return ((int)(this[this.tableOriginParts.ChgSrcMakerCdColumn]));
                }
                set {
                    this[this.tableOriginParts.ChgSrcMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChgSrcGoodsNo {
                get {
                    return ((string)(this[this.tableOriginParts.ChgSrcGoodsNoColumn]));
                }
                set {
                    this[this.tableOriginParts.ChgSrcGoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ChgDestMakerCd {
                get {
                    return ((int)(this[this.tableOriginParts.ChgDestMakerCdColumn]));
                }
                set {
                    this[this.tableOriginParts.ChgDestMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChgDestGoodsNo {
                get {
                    return ((string)(this[this.tableOriginParts.ChgDestGoodsNoColumn]));
                }
                set {
                    this[this.tableOriginParts.ChgDestGoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApplyStDate {
                get {
                    try {
                        return ((int)(this[this.tableOriginParts.ApplyStDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OriginParts\' にある列 \'ApplyStDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOriginParts.ApplyStDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ApplyEdDate {
                get {
                    try {
                        return ((int)(this[this.tableOriginParts.ApplyEdDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OriginParts\' にある列 \'ApplyEdDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOriginParts.ApplyEdDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerNm {
                get {
                    try {
                        return ((string)(this[this.tableOriginParts.MakerNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OriginParts\' にある列 \'MakerNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOriginParts.MakerNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNm {
                get {
                    try {
                        return ((string)(this[this.tableOriginParts.GoodsNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OriginParts\' にある列 \'GoodsNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOriginParts.GoodsNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Price {
                get {
                    try {
                        return ((double)(this[this.tableOriginParts.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OriginParts\' にある列 \'Price\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOriginParts.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Genka {
                get {
                    try {
                        return ((double)(this[this.tableOriginParts.GenkaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OriginParts\' にある列 \'Genka\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOriginParts.GenkaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Urika {
                get {
                    try {
                        return ((double)(this[this.tableOriginParts.UrikaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OriginParts\' にある列 \'Urika\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOriginParts.UrikaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image Gokan {
                get {
                    try {
                        return ((global::System.Drawing.Image)(this[this.tableOriginParts.GokanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OriginParts\' にある列 \'Gokan\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOriginParts.GokanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableOriginParts.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OriginParts\' にある列 \'Comment\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOriginParts.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double QTY {
                get {
                    try {
                        return ((double)(this[this.tableOriginParts.QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OriginParts\' にある列 \'QTY\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOriginParts.QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image SelImage {
                get {
                    try {
                        return ((global::System.Drawing.Image)(this[this.tableOriginParts.SelImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OriginParts\' にある列 \'SelImage\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOriginParts.SelImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    if (this.IsWarehouseCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableOriginParts.WarehouseCodeColumn]));
                    }
                }
                set {
                    this[this.tableOriginParts.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockCnt {
                get {
                    try {
                        return ((double)(this[this.tableOriginParts.StockCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'OriginParts\' にある列 \'StockCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableOriginParts.StockCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyStDateNull() {
                return this.IsNull(this.tableOriginParts.ApplyStDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyStDateNull() {
                this[this.tableOriginParts.ApplyStDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplyEdDateNull() {
                return this.IsNull(this.tableOriginParts.ApplyEdDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplyEdDateNull() {
                this[this.tableOriginParts.ApplyEdDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerNmNull() {
                return this.IsNull(this.tableOriginParts.MakerNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerNmNull() {
                this[this.tableOriginParts.MakerNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNmNull() {
                return this.IsNull(this.tableOriginParts.GoodsNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNmNull() {
                this[this.tableOriginParts.GoodsNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tableOriginParts.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tableOriginParts.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGenkaNull() {
                return this.IsNull(this.tableOriginParts.GenkaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGenkaNull() {
                this[this.tableOriginParts.GenkaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUrikaNull() {
                return this.IsNull(this.tableOriginParts.UrikaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUrikaNull() {
                this[this.tableOriginParts.UrikaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGokanNull() {
                return this.IsNull(this.tableOriginParts.GokanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGokanNull() {
                this[this.tableOriginParts.GokanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableOriginParts.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableOriginParts.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTYNull() {
                return this.IsNull(this.tableOriginParts.QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTYNull() {
                this[this.tableOriginParts.QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelImageNull() {
                return this.IsNull(this.tableOriginParts.SelImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelImageNull() {
                this[this.tableOriginParts.SelImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCodeNull() {
                return this.IsNull(this.tableOriginParts.WarehouseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCodeNull() {
                this[this.tableOriginParts.WarehouseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockCntNull() {
                return this.IsNull(this.tableOriginParts.StockCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockCntNull() {
                this[this.tableOriginParts.StockCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsrSubstPartsRow[] GetUsrSubstPartsRows() {
                if ((this.Table.ChildRelations["OriginParts_UsrSubstParts"] == null)) {
                    return new UsrSubstPartsRow[0];
                }
                else {
                    return ((UsrSubstPartsRow[])(base.GetChildRows(this.Table.ChildRelations["OriginParts_UsrSubstParts"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockRow : global::System.Data.DataRow {
            
            private StockDataTable tableStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStock = ((StockDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    return ((string)(this[this.tableStock.WarehouseCodeColumn]));
                }
                set {
                    this[this.tableStock.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCd {
                get {
                    return ((int)(this[this.tableStock.GoodsMakerCdColumn]));
                }
                set {
                    this[this.tableStock.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    return ((string)(this[this.tableStock.GoodsNoColumn]));
                }
                set {
                    this[this.tableStock.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ShipmentPosCnt {
                get {
                    try {
                        return ((double)(this[this.tableStock.ShipmentPosCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'ShipmentPosCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.ShipmentPosCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MinimumStockCnt {
                get {
                    try {
                        return ((double)(this[this.tableStock.MinimumStockCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'MinimumStockCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.MinimumStockCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MaximumStockCnt {
                get {
                    try {
                        return ((double)(this[this.tableStock.MaximumStockCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'MaximumStockCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.MaximumStockCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableStock.WarehouseShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'WarehouseShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.WarehouseShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseName {
                get {
                    try {
                        return ((string)(this[this.tableStock.WarehouseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'WarehouseName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.WarehouseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SelectionState {
                get {
                    try {
                        return ((bool)(this[this.tableStock.SelectionStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'SelectionState\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.SelectionStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Drawing.Image SelImage {
                get {
                    try {
                        return ((global::System.Drawing.Image)(this[this.tableStock.SelImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'SelImage\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.SelImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SortDiv {
                get {
                    try {
                        return ((int)(this[this.tableStock.SortDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'Stock\' にある列 \'SortDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStock.SortDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentPosCntNull() {
                return this.IsNull(this.tableStock.ShipmentPosCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentPosCntNull() {
                this[this.tableStock.ShipmentPosCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinimumStockCntNull() {
                return this.IsNull(this.tableStock.MinimumStockCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinimumStockCntNull() {
                this[this.tableStock.MinimumStockCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaximumStockCntNull() {
                return this.IsNull(this.tableStock.MaximumStockCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaximumStockCntNull() {
                this[this.tableStock.MaximumStockCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseShelfNoNull() {
                return this.IsNull(this.tableStock.WarehouseShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseShelfNoNull() {
                this[this.tableStock.WarehouseShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNameNull() {
                return this.IsNull(this.tableStock.WarehouseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNameNull() {
                this[this.tableStock.WarehouseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectionStateNull() {
                return this.IsNull(this.tableStock.SelectionStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectionStateNull() {
                this[this.tableStock.SelectionStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelImageNull() {
                return this.IsNull(this.tableStock.SelImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelImageNull() {
                this[this.tableStock.SelImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSortDivNull() {
                return this.IsNull(this.tableStock.SortDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSortDivNull() {
                this[this.tableStock.SortDivColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UsrSubstPartsRowChangeEvent : global::System.EventArgs {
            
            private UsrSubstPartsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsrSubstPartsRowChangeEvent(UsrSubstPartsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UsrSubstPartsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DUsrSubstPartsRowChangeEvent : global::System.EventArgs {
            
            private DUsrSubstPartsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DUsrSubstPartsRowChangeEvent(DUsrSubstPartsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DUsrSubstPartsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OriginPartsRowChangeEvent : global::System.EventArgs {
            
            private OriginPartsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OriginPartsRowChangeEvent(OriginPartsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OriginPartsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockRowChangeEvent : global::System.EventArgs {
            
            private StockRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRowChangeEvent(StockRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591