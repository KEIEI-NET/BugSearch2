//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3607
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.Controller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NewDataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NewDataSet1 : global::System.Data.DataSet {
        
        private InfomationReqTableDataTable tableInfomationReqTable;
        
        private PartsmanRequestTblDataTable tablePartsmanRequestTbl;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NewDataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected NewDataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["InfomationReqTable"] != null)) {
                    base.Tables.Add(new InfomationReqTableDataTable(ds.Tables["InfomationReqTable"]));
                }
                if ((ds.Tables["PartsmanRequestTbl"] != null)) {
                    base.Tables.Add(new PartsmanRequestTblDataTable(ds.Tables["PartsmanRequestTbl"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InfomationReqTableDataTable InfomationReqTable {
            get {
                return this.tableInfomationReqTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PartsmanRequestTblDataTable PartsmanRequestTbl {
            get {
                return this.tablePartsmanRequestTbl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            NewDataSet1 cln = ((NewDataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["InfomationReqTable"] != null)) {
                    base.Tables.Add(new InfomationReqTableDataTable(ds.Tables["InfomationReqTable"]));
                }
                if ((ds.Tables["PartsmanRequestTbl"] != null)) {
                    base.Tables.Add(new PartsmanRequestTblDataTable(ds.Tables["PartsmanRequestTbl"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableInfomationReqTable = ((InfomationReqTableDataTable)(base.Tables["InfomationReqTable"]));
            if ((initTable == true)) {
                if ((this.tableInfomationReqTable != null)) {
                    this.tableInfomationReqTable.InitVars();
                }
            }
            this.tablePartsmanRequestTbl = ((PartsmanRequestTblDataTable)(base.Tables["PartsmanRequestTbl"]));
            if ((initTable == true)) {
                if ((this.tablePartsmanRequestTbl != null)) {
                    this.tablePartsmanRequestTbl.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "NewDataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/NewDataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableInfomationReqTable = new InfomationReqTableDataTable();
            base.Tables.Add(this.tableInfomationReqTable);
            this.tablePartsmanRequestTbl = new PartsmanRequestTblDataTable();
            base.Tables.Add(this.tablePartsmanRequestTbl);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInfomationReqTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePartsmanRequestTbl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NewDataSet1 ds = new NewDataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void InfomationReqTableRowChangeEventHandler(object sender, InfomationReqTableRowChangeEvent e);
        
        public delegate void PartsmanRequestTblRowChangeEventHandler(object sender, PartsmanRequestTblRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InfomationReqTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRequestID;
            
            private global::System.Data.DataColumn columnEigyousyoFlag;
            
            private global::System.Data.DataColumn columnJigyousyoCode;
            
            private global::System.Data.DataColumn columnCoCode;
            
            private global::System.Data.DataColumn columnTerminalID;
            
            private global::System.Data.DataColumn columnPassword;
            
            private global::System.Data.DataColumn columnEigyousyoCode;
            
            private global::System.Data.DataColumn columnESystemUseType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InfomationReqTableDataTable() {
                this.TableName = "InfomationReqTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InfomationReqTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected InfomationReqTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestIDColumn {
                get {
                    return this.columnRequestID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EigyousyoFlagColumn {
                get {
                    return this.columnEigyousyoFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JigyousyoCodeColumn {
                get {
                    return this.columnJigyousyoCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CoCodeColumn {
                get {
                    return this.columnCoCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TerminalIDColumn {
                get {
                    return this.columnTerminalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PasswordColumn {
                get {
                    return this.columnPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EigyousyoCodeColumn {
                get {
                    return this.columnEigyousyoCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ESystemUseTypeColumn {
                get {
                    return this.columnESystemUseType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InfomationReqTableRow this[int index] {
                get {
                    return ((InfomationReqTableRow)(this.Rows[index]));
                }
            }
            
            public event InfomationReqTableRowChangeEventHandler InfomationReqTableRowChanging;
            
            public event InfomationReqTableRowChangeEventHandler InfomationReqTableRowChanged;
            
            public event InfomationReqTableRowChangeEventHandler InfomationReqTableRowDeleting;
            
            public event InfomationReqTableRowChangeEventHandler InfomationReqTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInfomationReqTableRow(InfomationReqTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InfomationReqTableRow AddInfomationReqTableRow(string RequestID, string EigyousyoFlag, string JigyousyoCode, string CoCode, string TerminalID, string Password, string EigyousyoCode, string ESystemUseType) {
                InfomationReqTableRow rowInfomationReqTableRow = ((InfomationReqTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RequestID,
                        EigyousyoFlag,
                        JigyousyoCode,
                        CoCode,
                        TerminalID,
                        Password,
                        EigyousyoCode,
                        ESystemUseType};
                rowInfomationReqTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInfomationReqTableRow);
                return rowInfomationReqTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                InfomationReqTableDataTable cln = ((InfomationReqTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InfomationReqTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRequestID = base.Columns["RequestID"];
                this.columnEigyousyoFlag = base.Columns["EigyousyoFlag"];
                this.columnJigyousyoCode = base.Columns["JigyousyoCode"];
                this.columnCoCode = base.Columns["CoCode"];
                this.columnTerminalID = base.Columns["TerminalID"];
                this.columnPassword = base.Columns["Password"];
                this.columnEigyousyoCode = base.Columns["EigyousyoCode"];
                this.columnESystemUseType = base.Columns["ESystemUseType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRequestID = new global::System.Data.DataColumn("RequestID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestID);
                this.columnEigyousyoFlag = new global::System.Data.DataColumn("EigyousyoFlag", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEigyousyoFlag);
                this.columnJigyousyoCode = new global::System.Data.DataColumn("JigyousyoCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJigyousyoCode);
                this.columnCoCode = new global::System.Data.DataColumn("CoCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoCode);
                this.columnTerminalID = new global::System.Data.DataColumn("TerminalID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerminalID);
                this.columnPassword = new global::System.Data.DataColumn("Password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassword);
                this.columnEigyousyoCode = new global::System.Data.DataColumn("EigyousyoCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEigyousyoCode);
                this.columnESystemUseType = new global::System.Data.DataColumn("ESystemUseType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESystemUseType);
                this.columnRequestID.Caption = "リクエストID";
                this.columnRequestID.MaxLength = 6;
                this.columnEigyousyoFlag.Caption = "営業所フラグ";
                this.columnEigyousyoFlag.MaxLength = 1;
                this.columnJigyousyoCode.Caption = "事業所コード";
                this.columnJigyousyoCode.MaxLength = 10;
                this.columnCoCode.Caption = "会社コード";
                this.columnCoCode.MaxLength = 6;
                this.columnTerminalID.Caption = "端末ID";
                this.columnTerminalID.MaxLength = 5;
                this.columnPassword.Caption = "パスワード";
                this.columnPassword.MaxLength = 10;
                this.columnEigyousyoCode.Caption = "営業所コード";
                this.columnEigyousyoCode.MaxLength = 5;
                this.columnESystemUseType.Caption = "システム利用形態";
                this.columnESystemUseType.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InfomationReqTableRow NewInfomationReqTableRow() {
                return ((InfomationReqTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InfomationReqTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(InfomationReqTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InfomationReqTableRowChanged != null)) {
                    this.InfomationReqTableRowChanged(this, new InfomationReqTableRowChangeEvent(((InfomationReqTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InfomationReqTableRowChanging != null)) {
                    this.InfomationReqTableRowChanging(this, new InfomationReqTableRowChangeEvent(((InfomationReqTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InfomationReqTableRowDeleted != null)) {
                    this.InfomationReqTableRowDeleted(this, new InfomationReqTableRowChangeEvent(((InfomationReqTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InfomationReqTableRowDeleting != null)) {
                    this.InfomationReqTableRowDeleting(this, new InfomationReqTableRowChangeEvent(((InfomationReqTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInfomationReqTableRow(InfomationReqTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet1 ds = new NewDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InfomationReqTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PartsmanRequestTblDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDENBKB;
            
            private global::System.Data.DataColumn columnKUBUN;
            
            private global::System.Data.DataColumn columnGYONO;
            
            private global::System.Data.DataColumn columnREQNO;
            
            private global::System.Data.DataColumn columnREQGYO;
            
            private global::System.Data.DataColumn columnREMARK;
            
            private global::System.Data.DataColumn columnNHNKB;
            
            private global::System.Data.DataColumn columnHNSBT;
            
            private global::System.Data.DataColumn columnJYUHNNO;
            
            private global::System.Data.DataColumn columnMKCD;
            
            private global::System.Data.DataColumn columnJYUSU;
            
            private global::System.Data.DataColumn columnBOKB;
            
            private global::System.Data.DataColumn columnCHKCD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartsmanRequestTblDataTable() {
                this.TableName = "PartsmanRequestTbl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PartsmanRequestTblDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PartsmanRequestTblDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DENBKBColumn {
                get {
                    return this.columnDENBKB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KUBUNColumn {
                get {
                    return this.columnKUBUN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GYONOColumn {
                get {
                    return this.columnGYONO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REQNOColumn {
                get {
                    return this.columnREQNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REQGYOColumn {
                get {
                    return this.columnREQGYO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NHNKBColumn {
                get {
                    return this.columnNHNKB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HNSBTColumn {
                get {
                    return this.columnHNSBT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYUHNNOColumn {
                get {
                    return this.columnJYUHNNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MKCDColumn {
                get {
                    return this.columnMKCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JYUSUColumn {
                get {
                    return this.columnJYUSU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOKBColumn {
                get {
                    return this.columnBOKB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHKCDColumn {
                get {
                    return this.columnCHKCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartsmanRequestTblRow this[int index] {
                get {
                    return ((PartsmanRequestTblRow)(this.Rows[index]));
                }
            }
            
            public event PartsmanRequestTblRowChangeEventHandler PartsmanRequestTblRowChanging;
            
            public event PartsmanRequestTblRowChangeEventHandler PartsmanRequestTblRowChanged;
            
            public event PartsmanRequestTblRowChangeEventHandler PartsmanRequestTblRowDeleting;
            
            public event PartsmanRequestTblRowChangeEventHandler PartsmanRequestTblRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPartsmanRequestTblRow(PartsmanRequestTblRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartsmanRequestTblRow AddPartsmanRequestTblRow(int DENBKB, string KUBUN, int GYONO, int REQNO, int REQGYO, string REMARK, string NHNKB, int HNSBT, string JYUHNNO, string MKCD, int JYUSU, string BOKB, string CHKCD) {
                PartsmanRequestTblRow rowPartsmanRequestTblRow = ((PartsmanRequestTblRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DENBKB,
                        KUBUN,
                        GYONO,
                        REQNO,
                        REQGYO,
                        REMARK,
                        NHNKB,
                        HNSBT,
                        JYUHNNO,
                        MKCD,
                        JYUSU,
                        BOKB,
                        CHKCD};
                rowPartsmanRequestTblRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPartsmanRequestTblRow);
                return rowPartsmanRequestTblRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PartsmanRequestTblDataTable cln = ((PartsmanRequestTblDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PartsmanRequestTblDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDENBKB = base.Columns["DENBKB"];
                this.columnKUBUN = base.Columns["KUBUN"];
                this.columnGYONO = base.Columns["GYONO"];
                this.columnREQNO = base.Columns["REQNO"];
                this.columnREQGYO = base.Columns["REQGYO"];
                this.columnREMARK = base.Columns["REMARK"];
                this.columnNHNKB = base.Columns["NHNKB"];
                this.columnHNSBT = base.Columns["HNSBT"];
                this.columnJYUHNNO = base.Columns["JYUHNNO"];
                this.columnMKCD = base.Columns["MKCD"];
                this.columnJYUSU = base.Columns["JYUSU"];
                this.columnBOKB = base.Columns["BOKB"];
                this.columnCHKCD = base.Columns["CHKCD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDENBKB = new global::System.Data.DataColumn("DENBKB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDENBKB);
                this.columnKUBUN = new global::System.Data.DataColumn("KUBUN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKUBUN);
                this.columnGYONO = new global::System.Data.DataColumn("GYONO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGYONO);
                this.columnREQNO = new global::System.Data.DataColumn("REQNO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREQNO);
                this.columnREQGYO = new global::System.Data.DataColumn("REQGYO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREQGYO);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnNHNKB = new global::System.Data.DataColumn("NHNKB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNHNKB);
                this.columnHNSBT = new global::System.Data.DataColumn("HNSBT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHNSBT);
                this.columnJYUHNNO = new global::System.Data.DataColumn("JYUHNNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYUHNNO);
                this.columnMKCD = new global::System.Data.DataColumn("MKCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMKCD);
                this.columnJYUSU = new global::System.Data.DataColumn("JYUSU", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJYUSU);
                this.columnBOKB = new global::System.Data.DataColumn("BOKB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOKB);
                this.columnCHKCD = new global::System.Data.DataColumn("CHKCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHKCD);
                this.columnDENBKB.Caption = "電文区分";
                this.columnKUBUN.Caption = "処理区分";
                this.columnKUBUN.MaxLength = 1;
                this.columnREQNO.Caption = "電文問合せ番号";
                this.columnREQGYO.Caption = "伝票用行番号";
                this.columnREMARK.Caption = "リマーク（備考）";
                this.columnREMARK.MaxLength = 10;
                this.columnNHNKB.MaxLength = 1;
                this.columnHNSBT.Caption = "部品種別";
                this.columnJYUHNNO.Caption = "部品番号";
                this.columnJYUHNNO.MaxLength = 20;
                this.columnMKCD.Caption = "メーカーコード";
                this.columnMKCD.MaxLength = 6;
                this.columnJYUSU.Caption = "数量";
                this.columnBOKB.Caption = "Ｂ／Ｏ区分";
                this.columnBOKB.MaxLength = 1;
                this.columnCHKCD.Caption = "ラインリマーク（備考）";
                this.columnCHKCD.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartsmanRequestTblRow NewPartsmanRequestTblRow() {
                return ((PartsmanRequestTblRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PartsmanRequestTblRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PartsmanRequestTblRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PartsmanRequestTblRowChanged != null)) {
                    this.PartsmanRequestTblRowChanged(this, new PartsmanRequestTblRowChangeEvent(((PartsmanRequestTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PartsmanRequestTblRowChanging != null)) {
                    this.PartsmanRequestTblRowChanging(this, new PartsmanRequestTblRowChangeEvent(((PartsmanRequestTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PartsmanRequestTblRowDeleted != null)) {
                    this.PartsmanRequestTblRowDeleted(this, new PartsmanRequestTblRowChangeEvent(((PartsmanRequestTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PartsmanRequestTblRowDeleting != null)) {
                    this.PartsmanRequestTblRowDeleting(this, new PartsmanRequestTblRowChangeEvent(((PartsmanRequestTblRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePartsmanRequestTblRow(PartsmanRequestTblRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NewDataSet1 ds = new NewDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PartsmanRequestTblDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class InfomationReqTableRow : global::System.Data.DataRow {
            
            private InfomationReqTableDataTable tableInfomationReqTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InfomationReqTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInfomationReqTable = ((InfomationReqTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RequestID {
                get {
                    try {
                        return ((string)(this[this.tableInfomationReqTable.RequestIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'InfomationReqTable\' にある列 \'RequestID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableInfomationReqTable.RequestIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EigyousyoFlag {
                get {
                    try {
                        return ((string)(this[this.tableInfomationReqTable.EigyousyoFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'InfomationReqTable\' にある列 \'EigyousyoFlag\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableInfomationReqTable.EigyousyoFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JigyousyoCode {
                get {
                    try {
                        return ((string)(this[this.tableInfomationReqTable.JigyousyoCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'InfomationReqTable\' にある列 \'JigyousyoCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableInfomationReqTable.JigyousyoCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CoCode {
                get {
                    try {
                        return ((string)(this[this.tableInfomationReqTable.CoCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'InfomationReqTable\' にある列 \'CoCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableInfomationReqTable.CoCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TerminalID {
                get {
                    try {
                        return ((string)(this[this.tableInfomationReqTable.TerminalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'InfomationReqTable\' にある列 \'TerminalID\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableInfomationReqTable.TerminalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Password {
                get {
                    try {
                        return ((string)(this[this.tableInfomationReqTable.PasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'InfomationReqTable\' にある列 \'Password\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableInfomationReqTable.PasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EigyousyoCode {
                get {
                    try {
                        return ((string)(this[this.tableInfomationReqTable.EigyousyoCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'InfomationReqTable\' にある列 \'EigyousyoCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableInfomationReqTable.EigyousyoCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ESystemUseType {
                get {
                    try {
                        return ((string)(this[this.tableInfomationReqTable.ESystemUseTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'InfomationReqTable\' にある列 \'ESystemUseType\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableInfomationReqTable.ESystemUseTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestIDNull() {
                return this.IsNull(this.tableInfomationReqTable.RequestIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestIDNull() {
                this[this.tableInfomationReqTable.RequestIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEigyousyoFlagNull() {
                return this.IsNull(this.tableInfomationReqTable.EigyousyoFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEigyousyoFlagNull() {
                this[this.tableInfomationReqTable.EigyousyoFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJigyousyoCodeNull() {
                return this.IsNull(this.tableInfomationReqTable.JigyousyoCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJigyousyoCodeNull() {
                this[this.tableInfomationReqTable.JigyousyoCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCoCodeNull() {
                return this.IsNull(this.tableInfomationReqTable.CoCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCoCodeNull() {
                this[this.tableInfomationReqTable.CoCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTerminalIDNull() {
                return this.IsNull(this.tableInfomationReqTable.TerminalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTerminalIDNull() {
                this[this.tableInfomationReqTable.TerminalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPasswordNull() {
                return this.IsNull(this.tableInfomationReqTable.PasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPasswordNull() {
                this[this.tableInfomationReqTable.PasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEigyousyoCodeNull() {
                return this.IsNull(this.tableInfomationReqTable.EigyousyoCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEigyousyoCodeNull() {
                this[this.tableInfomationReqTable.EigyousyoCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsESystemUseTypeNull() {
                return this.IsNull(this.tableInfomationReqTable.ESystemUseTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetESystemUseTypeNull() {
                this[this.tableInfomationReqTable.ESystemUseTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PartsmanRequestTblRow : global::System.Data.DataRow {
            
            private PartsmanRequestTblDataTable tablePartsmanRequestTbl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PartsmanRequestTblRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePartsmanRequestTbl = ((PartsmanRequestTblDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DENBKB {
                get {
                    try {
                        return ((int)(this[this.tablePartsmanRequestTbl.DENBKBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsmanRequestTbl\' にある列 \'DENBKB\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsmanRequestTbl.DENBKBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KUBUN {
                get {
                    try {
                        return ((string)(this[this.tablePartsmanRequestTbl.KUBUNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsmanRequestTbl\' にある列 \'KUBUN\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsmanRequestTbl.KUBUNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GYONO {
                get {
                    try {
                        return ((int)(this[this.tablePartsmanRequestTbl.GYONOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsmanRequestTbl\' にある列 \'GYONO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsmanRequestTbl.GYONOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int REQNO {
                get {
                    try {
                        return ((int)(this[this.tablePartsmanRequestTbl.REQNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsmanRequestTbl\' にある列 \'REQNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsmanRequestTbl.REQNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int REQGYO {
                get {
                    try {
                        return ((int)(this[this.tablePartsmanRequestTbl.REQGYOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsmanRequestTbl\' にある列 \'REQGYO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsmanRequestTbl.REQGYOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REMARK {
                get {
                    try {
                        return ((string)(this[this.tablePartsmanRequestTbl.REMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsmanRequestTbl\' にある列 \'REMARK\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsmanRequestTbl.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NHNKB {
                get {
                    try {
                        return ((string)(this[this.tablePartsmanRequestTbl.NHNKBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsmanRequestTbl\' にある列 \'NHNKB\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsmanRequestTbl.NHNKBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HNSBT {
                get {
                    try {
                        return ((int)(this[this.tablePartsmanRequestTbl.HNSBTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsmanRequestTbl\' にある列 \'HNSBT\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsmanRequestTbl.HNSBTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JYUHNNO {
                get {
                    try {
                        return ((string)(this[this.tablePartsmanRequestTbl.JYUHNNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsmanRequestTbl\' にある列 \'JYUHNNO\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsmanRequestTbl.JYUHNNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MKCD {
                get {
                    try {
                        return ((string)(this[this.tablePartsmanRequestTbl.MKCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsmanRequestTbl\' にある列 \'MKCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsmanRequestTbl.MKCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int JYUSU {
                get {
                    try {
                        return ((int)(this[this.tablePartsmanRequestTbl.JYUSUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsmanRequestTbl\' にある列 \'JYUSU\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsmanRequestTbl.JYUSUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BOKB {
                get {
                    try {
                        return ((string)(this[this.tablePartsmanRequestTbl.BOKBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsmanRequestTbl\' にある列 \'BOKB\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsmanRequestTbl.BOKBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHKCD {
                get {
                    try {
                        return ((string)(this[this.tablePartsmanRequestTbl.CHKCDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'PartsmanRequestTbl\' にある列 \'CHKCD\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tablePartsmanRequestTbl.CHKCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDENBKBNull() {
                return this.IsNull(this.tablePartsmanRequestTbl.DENBKBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDENBKBNull() {
                this[this.tablePartsmanRequestTbl.DENBKBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKUBUNNull() {
                return this.IsNull(this.tablePartsmanRequestTbl.KUBUNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKUBUNNull() {
                this[this.tablePartsmanRequestTbl.KUBUNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGYONONull() {
                return this.IsNull(this.tablePartsmanRequestTbl.GYONOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGYONONull() {
                this[this.tablePartsmanRequestTbl.GYONOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREQNONull() {
                return this.IsNull(this.tablePartsmanRequestTbl.REQNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREQNONull() {
                this[this.tablePartsmanRequestTbl.REQNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREQGYONull() {
                return this.IsNull(this.tablePartsmanRequestTbl.REQGYOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREQGYONull() {
                this[this.tablePartsmanRequestTbl.REQGYOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREMARKNull() {
                return this.IsNull(this.tablePartsmanRequestTbl.REMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREMARKNull() {
                this[this.tablePartsmanRequestTbl.REMARKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNHNKBNull() {
                return this.IsNull(this.tablePartsmanRequestTbl.NHNKBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNHNKBNull() {
                this[this.tablePartsmanRequestTbl.NHNKBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHNSBTNull() {
                return this.IsNull(this.tablePartsmanRequestTbl.HNSBTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHNSBTNull() {
                this[this.tablePartsmanRequestTbl.HNSBTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYUHNNONull() {
                return this.IsNull(this.tablePartsmanRequestTbl.JYUHNNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYUHNNONull() {
                this[this.tablePartsmanRequestTbl.JYUHNNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMKCDNull() {
                return this.IsNull(this.tablePartsmanRequestTbl.MKCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMKCDNull() {
                this[this.tablePartsmanRequestTbl.MKCDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJYUSUNull() {
                return this.IsNull(this.tablePartsmanRequestTbl.JYUSUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJYUSUNull() {
                this[this.tablePartsmanRequestTbl.JYUSUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOKBNull() {
                return this.IsNull(this.tablePartsmanRequestTbl.BOKBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOKBNull() {
                this[this.tablePartsmanRequestTbl.BOKBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCHKCDNull() {
                return this.IsNull(this.tablePartsmanRequestTbl.CHKCDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCHKCDNull() {
                this[this.tablePartsmanRequestTbl.CHKCDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class InfomationReqTableRowChangeEvent : global::System.EventArgs {
            
            private InfomationReqTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InfomationReqTableRowChangeEvent(InfomationReqTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InfomationReqTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PartsmanRequestTblRowChangeEvent : global::System.EventArgs {
            
            private PartsmanRequestTblRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartsmanRequestTblRowChangeEvent(PartsmanRequestTblRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PartsmanRequestTblRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591