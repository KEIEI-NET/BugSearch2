//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3623
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.Controller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SalesSlipDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SalesSlipDataSet : global::System.Data.DataSet {
        
        private SalesSlipDataTable tableSalesSlip;
        
        private SecInfoSetDataTable tableSecInfoSet;
        
        private SalesDetailDataTable tableSalesDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SalesSlipDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SalesSlipDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SalesSlip"] != null)) {
                    base.Tables.Add(new SalesSlipDataTable(ds.Tables["SalesSlip"]));
                }
                if ((ds.Tables["SecInfoSet"] != null)) {
                    base.Tables.Add(new SecInfoSetDataTable(ds.Tables["SecInfoSet"]));
                }
                if ((ds.Tables["SalesDetail"] != null)) {
                    base.Tables.Add(new SalesDetailDataTable(ds.Tables["SalesDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesSlipDataTable SalesSlip {
            get {
                return this.tableSalesSlip;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SecInfoSetDataTable SecInfoSet {
            get {
                return this.tableSecInfoSet;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesDetailDataTable SalesDetail {
            get {
                return this.tableSalesDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SalesSlipDataSet cln = ((SalesSlipDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SalesSlip"] != null)) {
                    base.Tables.Add(new SalesSlipDataTable(ds.Tables["SalesSlip"]));
                }
                if ((ds.Tables["SecInfoSet"] != null)) {
                    base.Tables.Add(new SecInfoSetDataTable(ds.Tables["SecInfoSet"]));
                }
                if ((ds.Tables["SalesDetail"] != null)) {
                    base.Tables.Add(new SalesDetailDataTable(ds.Tables["SalesDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSalesSlip = ((SalesSlipDataTable)(base.Tables["SalesSlip"]));
            if ((initTable == true)) {
                if ((this.tableSalesSlip != null)) {
                    this.tableSalesSlip.InitVars();
                }
            }
            this.tableSecInfoSet = ((SecInfoSetDataTable)(base.Tables["SecInfoSet"]));
            if ((initTable == true)) {
                if ((this.tableSecInfoSet != null)) {
                    this.tableSecInfoSet.InitVars();
                }
            }
            this.tableSalesDetail = ((SalesDetailDataTable)(base.Tables["SalesDetail"]));
            if ((initTable == true)) {
                if ((this.tableSalesDetail != null)) {
                    this.tableSalesDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SalesSlipDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SalesSlipDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSalesSlip = new SalesSlipDataTable();
            base.Tables.Add(this.tableSalesSlip);
            this.tableSecInfoSet = new SecInfoSetDataTable();
            base.Tables.Add(this.tableSecInfoSet);
            this.tableSalesDetail = new SalesDetailDataTable();
            base.Tables.Add(this.tableSalesDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesSlip() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSecInfoSet() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SalesSlipDataSet ds = new SalesSlipDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SalesSlipRowChangeEventHandler(object sender, SalesSlipRowChangeEvent e);
        
        public delegate void SecInfoSetRowChangeEventHandler(object sender, SecInfoSetRowChangeEvent e);
        
        public delegate void SalesDetailRowChangeEventHandler(object sender, SalesDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesSlipDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnEnterpriseCode;
            
            private global::System.Data.DataColumn columnAcceptAnOrderNo;
            
            private global::System.Data.DataColumn columnAcptAnOdrStatus;
            
            private global::System.Data.DataColumn columnAcptAnOdrStatusName;
            
            private global::System.Data.DataColumn columnSearchSlipNum;
            
            private global::System.Data.DataColumn columnDetailRowCount;
            
            private global::System.Data.DataColumn columnSalesSlipKind;
            
            private global::System.Data.DataColumn columnSalesSlipKindName;
            
            private global::System.Data.DataColumn columnDebitNoteDiv;
            
            private global::System.Data.DataColumn columnDebitNoteDivName;
            
            private global::System.Data.DataColumn columnSalesSlipCd;
            
            private global::System.Data.DataColumn columnSalesSlipCdName;
            
            private global::System.Data.DataColumn columnSalesFormal;
            
            private global::System.Data.DataColumn columnSalesFormalCode;
            
            private global::System.Data.DataColumn columnSalesFormalName;
            
            private global::System.Data.DataColumn columnSalesInpSecCd;
            
            private global::System.Data.DataColumn columnSalesInpSecName;
            
            private global::System.Data.DataColumn columnDemandAddUpSecCd;
            
            private global::System.Data.DataColumn columnDemandAddUpSecName;
            
            private global::System.Data.DataColumn columnResultsAddUpSecCd;
            
            private global::System.Data.DataColumn columnResultsAddUpSecName;
            
            private global::System.Data.DataColumn columnEstimateDateString;
            
            private global::System.Data.DataColumn columnAcceptAnOrderDateString;
            
            private global::System.Data.DataColumn columnDeliGdsCmpltDueDateString;
            
            private global::System.Data.DataColumn columnSlipDateString;
            
            private global::System.Data.DataColumn columnShipmentDayString;
            
            private global::System.Data.DataColumn columnSalesDateString;
            
            private global::System.Data.DataColumn columnAddUpADateString;
            
            private global::System.Data.DataColumn columnFrontEmployeeNm;
            
            private global::System.Data.DataColumn columnSalesEmployeeNm;
            
            private global::System.Data.DataColumn columnWayToOrder;
            
            private global::System.Data.DataColumn columnWayToOrderName;
            
            private global::System.Data.DataColumn columnAccRecDivCd;
            
            private global::System.Data.DataColumn columnAccRecDivName;
            
            private global::System.Data.DataColumn columnTotalAmountDispWayCd;
            
            private global::System.Data.DataColumn columnTotalAmountDispWayName;
            
            private global::System.Data.DataColumn columnSalesTotalTaxInc;
            
            private global::System.Data.DataColumn columnSalesTotalTaxExc;
            
            private global::System.Data.DataColumn columnSalesSubtotalTaxInc;
            
            private global::System.Data.DataColumn columnSalesSubtotalTaxExc;
            
            private global::System.Data.DataColumn columnSalSubttlSubToTaxFre;
            
            private global::System.Data.DataColumn columnSalesSubtotalTax;
            
            private global::System.Data.DataColumn columnTotalCost;
            
            private global::System.Data.DataColumn columnServiceDeposits;
            
            private global::System.Data.DataColumn columnSalesGoodsCd;
            
            private global::System.Data.DataColumn columnSalesGoodsCdName;
            
            private global::System.Data.DataColumn columnTaxAdjust;
            
            private global::System.Data.DataColumn columnBalanceAdjust;
            
            private global::System.Data.DataColumn columnDemandableTtl;
            
            private global::System.Data.DataColumn columnClaimCode;
            
            private global::System.Data.DataColumn columnClaimName;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCorporateDivCode;
            
            private global::System.Data.DataColumn columnCorporateDivCodeName;
            
            private global::System.Data.DataColumn columnSlipNote;
            
            private global::System.Data.DataColumn columnSlipNote2;
            
            private global::System.Data.DataColumn columnRegiProcDateString;
            
            private global::System.Data.DataColumn columnCashRegisterNo;
            
            private global::System.Data.DataColumn columnPosReceiptNo;
            
            private global::System.Data.DataColumn columnSalesSlipSearchResultWork;
            
            private global::System.Data.DataColumn columnSalesSlipUpdatableName;
            
            private global::System.Data.DataColumn columnSectionName;
            
            private global::System.Data.DataColumn columnSubSectionName;
            
            private global::System.Data.DataColumn columnMinSectionName;
            
            private global::System.Data.DataColumn columnSearchSlipDate;
            
            private global::System.Data.DataColumn columnEstimateDivide;
            
            private global::System.Data.DataColumn columnInputAgenCd;
            
            private global::System.Data.DataColumn columnInputAgenNm;
            
            private global::System.Data.DataColumn columnSalesPrtTotalTaxInc;
            
            private global::System.Data.DataColumn columnSalesPrtTotalTaxExc;
            
            private global::System.Data.DataColumn columnSalesWorkTotalTaxInc;
            
            private global::System.Data.DataColumn columnSalesWorkTotalTaxExc;
            
            private global::System.Data.DataColumn columnSalesPrtSubttlInc;
            
            private global::System.Data.DataColumn columnSalesPrtSubttlExc;
            
            private global::System.Data.DataColumn columnSalesWorkSubttlInc;
            
            private global::System.Data.DataColumn columnSalesWorkSubttlExc;
            
            private global::System.Data.DataColumn columnSalesNetPrice;
            
            private global::System.Data.DataColumn columnSalesOutTax;
            
            private global::System.Data.DataColumn columnItdedPartsDisOutTax;
            
            private global::System.Data.DataColumn columnItdedPartsDisInTax;
            
            private global::System.Data.DataColumn columnItdedWorkDisOutTax;
            
            private global::System.Data.DataColumn columnItdedWorkDisInTax;
            
            private global::System.Data.DataColumn columnItdedSalesDisTaxFre;
            
            private global::System.Data.DataColumn columnPartsDiscountRate;
            
            private global::System.Data.DataColumn columnRavorDiscountRate;
            
            private global::System.Data.DataColumn columnOutputName;
            
            private global::System.Data.DataColumn columnCustSlipNo;
            
            private global::System.Data.DataColumn columnSlipNote3;
            
            private global::System.Data.DataColumn columnEstimateValidityDateString;
            
            private global::System.Data.DataColumn columnPartsNoPrtCd;
            
            private global::System.Data.DataColumn columnOptionPringDivCd;
            
            private global::System.Data.DataColumn columnRateUseCode;
            
            private global::System.Data.DataColumn columnCategoryModel;
            
            private global::System.Data.DataColumn columnUoeRemark1;
            
            private global::System.Data.DataColumn columnSalesInputCode;
            
            private global::System.Data.DataColumn columnSalesInputName;
            
            private global::System.Data.DataColumn columnFullModel;
            
            private global::System.Data.DataColumn columnModelFullName;
            
            private global::System.Data.DataColumn columnCarMngCode;
            
            private global::System.Data.DataColumn columnSlipDivName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSlipDataTable() {
                this.TableName = "SalesSlip";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesSlipDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesSlipDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterpriseCodeColumn {
                get {
                    return this.columnEnterpriseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcceptAnOrderNoColumn {
                get {
                    return this.columnAcceptAnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcptAnOdrStatusColumn {
                get {
                    return this.columnAcptAnOdrStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcptAnOdrStatusNameColumn {
                get {
                    return this.columnAcptAnOdrStatusName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SearchSlipNumColumn {
                get {
                    return this.columnSearchSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailRowCountColumn {
                get {
                    return this.columnDetailRowCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipKindColumn {
                get {
                    return this.columnSalesSlipKind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipKindNameColumn {
                get {
                    return this.columnSalesSlipKindName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteDivColumn {
                get {
                    return this.columnDebitNoteDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteDivNameColumn {
                get {
                    return this.columnDebitNoteDivName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipCdColumn {
                get {
                    return this.columnSalesSlipCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipCdNameColumn {
                get {
                    return this.columnSalesSlipCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesFormalColumn {
                get {
                    return this.columnSalesFormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesFormalCodeColumn {
                get {
                    return this.columnSalesFormalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesFormalNameColumn {
                get {
                    return this.columnSalesFormalName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesInpSecCdColumn {
                get {
                    return this.columnSalesInpSecCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesInpSecNameColumn {
                get {
                    return this.columnSalesInpSecName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DemandAddUpSecCdColumn {
                get {
                    return this.columnDemandAddUpSecCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DemandAddUpSecNameColumn {
                get {
                    return this.columnDemandAddUpSecName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResultsAddUpSecCdColumn {
                get {
                    return this.columnResultsAddUpSecCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResultsAddUpSecNameColumn {
                get {
                    return this.columnResultsAddUpSecName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimateDateStringColumn {
                get {
                    return this.columnEstimateDateString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcceptAnOrderDateStringColumn {
                get {
                    return this.columnAcceptAnOrderDateString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliGdsCmpltDueDateStringColumn {
                get {
                    return this.columnDeliGdsCmpltDueDateString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipDateStringColumn {
                get {
                    return this.columnSlipDateString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentDayStringColumn {
                get {
                    return this.columnShipmentDayString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateStringColumn {
                get {
                    return this.columnSalesDateString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddUpADateStringColumn {
                get {
                    return this.columnAddUpADateString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrontEmployeeNmColumn {
                get {
                    return this.columnFrontEmployeeNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesEmployeeNmColumn {
                get {
                    return this.columnSalesEmployeeNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WayToOrderColumn {
                get {
                    return this.columnWayToOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WayToOrderNameColumn {
                get {
                    return this.columnWayToOrderName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccRecDivCdColumn {
                get {
                    return this.columnAccRecDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccRecDivNameColumn {
                get {
                    return this.columnAccRecDivName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountDispWayCdColumn {
                get {
                    return this.columnTotalAmountDispWayCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountDispWayNameColumn {
                get {
                    return this.columnTotalAmountDispWayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesTotalTaxIncColumn {
                get {
                    return this.columnSalesTotalTaxInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesTotalTaxExcColumn {
                get {
                    return this.columnSalesTotalTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSubtotalTaxIncColumn {
                get {
                    return this.columnSalesSubtotalTaxInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSubtotalTaxExcColumn {
                get {
                    return this.columnSalesSubtotalTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalSubttlSubToTaxFreColumn {
                get {
                    return this.columnSalSubttlSubToTaxFre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSubtotalTaxColumn {
                get {
                    return this.columnSalesSubtotalTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalCostColumn {
                get {
                    return this.columnTotalCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceDepositsColumn {
                get {
                    return this.columnServiceDeposits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesGoodsCdColumn {
                get {
                    return this.columnSalesGoodsCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesGoodsCdNameColumn {
                get {
                    return this.columnSalesGoodsCdName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAdjustColumn {
                get {
                    return this.columnTaxAdjust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceAdjustColumn {
                get {
                    return this.columnBalanceAdjust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DemandableTtlColumn {
                get {
                    return this.columnDemandableTtl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClaimCodeColumn {
                get {
                    return this.columnClaimCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClaimNameColumn {
                get {
                    return this.columnClaimName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CorporateDivCodeColumn {
                get {
                    return this.columnCorporateDivCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CorporateDivCodeNameColumn {
                get {
                    return this.columnCorporateDivCodeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNoteColumn {
                get {
                    return this.columnSlipNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNote2Column {
                get {
                    return this.columnSlipNote2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegiProcDateStringColumn {
                get {
                    return this.columnRegiProcDateString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CashRegisterNoColumn {
                get {
                    return this.columnCashRegisterNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosReceiptNoColumn {
                get {
                    return this.columnPosReceiptNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipSearchResultWorkColumn {
                get {
                    return this.columnSalesSlipSearchResultWork;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipUpdatableNameColumn {
                get {
                    return this.columnSalesSlipUpdatableName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionNameColumn {
                get {
                    return this.columnSectionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubSectionNameColumn {
                get {
                    return this.columnSubSectionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinSectionNameColumn {
                get {
                    return this.columnMinSectionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SearchSlipDateColumn {
                get {
                    return this.columnSearchSlipDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimateDivideColumn {
                get {
                    return this.columnEstimateDivide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputAgenCdColumn {
                get {
                    return this.columnInputAgenCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputAgenNmColumn {
                get {
                    return this.columnInputAgenNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesPrtTotalTaxIncColumn {
                get {
                    return this.columnSalesPrtTotalTaxInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesPrtTotalTaxExcColumn {
                get {
                    return this.columnSalesPrtTotalTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesWorkTotalTaxIncColumn {
                get {
                    return this.columnSalesWorkTotalTaxInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesWorkTotalTaxExcColumn {
                get {
                    return this.columnSalesWorkTotalTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesPrtSubttlIncColumn {
                get {
                    return this.columnSalesPrtSubttlInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesPrtSubttlExcColumn {
                get {
                    return this.columnSalesPrtSubttlExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesWorkSubttlIncColumn {
                get {
                    return this.columnSalesWorkSubttlInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesWorkSubttlExcColumn {
                get {
                    return this.columnSalesWorkSubttlExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesNetPriceColumn {
                get {
                    return this.columnSalesNetPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesOutTaxColumn {
                get {
                    return this.columnSalesOutTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItdedPartsDisOutTaxColumn {
                get {
                    return this.columnItdedPartsDisOutTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItdedPartsDisInTaxColumn {
                get {
                    return this.columnItdedPartsDisInTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItdedWorkDisOutTaxColumn {
                get {
                    return this.columnItdedWorkDisOutTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItdedWorkDisInTaxColumn {
                get {
                    return this.columnItdedWorkDisInTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItdedSalesDisTaxFreColumn {
                get {
                    return this.columnItdedSalesDisTaxFre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartsDiscountRateColumn {
                get {
                    return this.columnPartsDiscountRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RavorDiscountRateColumn {
                get {
                    return this.columnRavorDiscountRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OutputNameColumn {
                get {
                    return this.columnOutputName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustSlipNoColumn {
                get {
                    return this.columnCustSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNote3Column {
                get {
                    return this.columnSlipNote3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimateValidityDateStringColumn {
                get {
                    return this.columnEstimateValidityDateString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartsNoPrtCdColumn {
                get {
                    return this.columnPartsNoPrtCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OptionPringDivCdColumn {
                get {
                    return this.columnOptionPringDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateUseCodeColumn {
                get {
                    return this.columnRateUseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryModelColumn {
                get {
                    return this.columnCategoryModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UoeRemark1Column {
                get {
                    return this.columnUoeRemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesInputCodeColumn {
                get {
                    return this.columnSalesInputCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesInputNameColumn {
                get {
                    return this.columnSalesInputName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FullModelColumn {
                get {
                    return this.columnFullModel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelFullNameColumn {
                get {
                    return this.columnModelFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarMngCodeColumn {
                get {
                    return this.columnCarMngCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipDivNameColumn {
                get {
                    return this.columnSlipDivName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSlipRow this[int index] {
                get {
                    return ((SalesSlipRow)(this.Rows[index]));
                }
            }
            
            public event SalesSlipRowChangeEventHandler SalesSlipRowChanging;
            
            public event SalesSlipRowChangeEventHandler SalesSlipRowChanged;
            
            public event SalesSlipRowChangeEventHandler SalesSlipRowDeleting;
            
            public event SalesSlipRowChangeEventHandler SalesSlipRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesSlipRow(SalesSlipRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSlipRow AddSalesSlipRow(
                        string EnterpriseCode, 
                        int AcceptAnOrderNo, 
                        int AcptAnOdrStatus, 
                        string AcptAnOdrStatusName, 
                        string SearchSlipNum, 
                        int DetailRowCount, 
                        int SalesSlipKind, 
                        string SalesSlipKindName, 
                        int DebitNoteDiv, 
                        string DebitNoteDivName, 
                        int SalesSlipCd, 
                        string SalesSlipCdName, 
                        int SalesFormal, 
                        int SalesFormalCode, 
                        string SalesFormalName, 
                        string SalesInpSecCd, 
                        string SalesInpSecName, 
                        string DemandAddUpSecCd, 
                        string DemandAddUpSecName, 
                        string ResultsAddUpSecCd, 
                        string ResultsAddUpSecName, 
                        string EstimateDateString, 
                        string AcceptAnOrderDateString, 
                        string DeliGdsCmpltDueDateString, 
                        string SlipDateString, 
                        string ShipmentDayString, 
                        string SalesDateString, 
                        string AddUpADateString, 
                        string FrontEmployeeNm, 
                        string SalesEmployeeNm, 
                        int WayToOrder, 
                        string WayToOrderName, 
                        int AccRecDivCd, 
                        string AccRecDivName, 
                        int TotalAmountDispWayCd, 
                        string TotalAmountDispWayName, 
                        long SalesTotalTaxInc, 
                        long SalesTotalTaxExc, 
                        long SalesSubtotalTaxInc, 
                        long SalesSubtotalTaxExc, 
                        long SalSubttlSubToTaxFre, 
                        long SalesSubtotalTax, 
                        long TotalCost, 
                        long ServiceDeposits, 
                        int SalesGoodsCd, 
                        string SalesGoodsCdName, 
                        long TaxAdjust, 
                        long BalanceAdjust, 
                        long DemandableTtl, 
                        int ClaimCode, 
                        string ClaimName, 
                        int CustomerCode, 
                        string CustomerName, 
                        int CorporateDivCode, 
                        string CorporateDivCodeName, 
                        string SlipNote, 
                        string SlipNote2, 
                        string RegiProcDateString, 
                        int CashRegisterNo, 
                        int PosReceiptNo, 
                        Broadleaf.Application.Remoting.ParamData.SalesSlipSearchResultWork SalesSlipSearchResultWork, 
                        string SalesSlipUpdatableName, 
                        string SectionName, 
                        string SubSectionName, 
                        string MinSectionName, 
                        System.DateTime SearchSlipDate, 
                        int EstimateDivide, 
                        string InputAgenCd, 
                        string InputAgenNm, 
                        long SalesPrtTotalTaxInc, 
                        long SalesPrtTotalTaxExc, 
                        long SalesWorkTotalTaxInc, 
                        long SalesWorkTotalTaxExc, 
                        long SalesPrtSubttlInc, 
                        long SalesPrtSubttlExc, 
                        long SalesWorkSubttlInc, 
                        long SalesWorkSubttlExc, 
                        long SalesNetPrice, 
                        long SalesOutTax, 
                        long ItdedPartsDisOutTax, 
                        long ItdedPartsDisInTax, 
                        long ItdedWorkDisOutTax, 
                        long ItdedWorkDisInTax, 
                        long ItdedSalesDisTaxFre, 
                        double PartsDiscountRate, 
                        double RavorDiscountRate, 
                        string OutputName, 
                        int CustSlipNo, 
                        string SlipNote3, 
                        string EstimateValidityDateString, 
                        int PartsNoPrtCd, 
                        int OptionPringDivCd, 
                        int RateUseCode, 
                        string CategoryModel, 
                        string UoeRemark1, 
                        string SalesInputCode, 
                        string SalesInputName, 
                        string FullModel, 
                        string ModelFullName, 
                        string CarMngCode, 
                        string SlipDivName) {
                SalesSlipRow rowSalesSlipRow = ((SalesSlipRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        EnterpriseCode,
                        AcceptAnOrderNo,
                        AcptAnOdrStatus,
                        AcptAnOdrStatusName,
                        SearchSlipNum,
                        DetailRowCount,
                        SalesSlipKind,
                        SalesSlipKindName,
                        DebitNoteDiv,
                        DebitNoteDivName,
                        SalesSlipCd,
                        SalesSlipCdName,
                        SalesFormal,
                        SalesFormalCode,
                        SalesFormalName,
                        SalesInpSecCd,
                        SalesInpSecName,
                        DemandAddUpSecCd,
                        DemandAddUpSecName,
                        ResultsAddUpSecCd,
                        ResultsAddUpSecName,
                        EstimateDateString,
                        AcceptAnOrderDateString,
                        DeliGdsCmpltDueDateString,
                        SlipDateString,
                        ShipmentDayString,
                        SalesDateString,
                        AddUpADateString,
                        FrontEmployeeNm,
                        SalesEmployeeNm,
                        WayToOrder,
                        WayToOrderName,
                        AccRecDivCd,
                        AccRecDivName,
                        TotalAmountDispWayCd,
                        TotalAmountDispWayName,
                        SalesTotalTaxInc,
                        SalesTotalTaxExc,
                        SalesSubtotalTaxInc,
                        SalesSubtotalTaxExc,
                        SalSubttlSubToTaxFre,
                        SalesSubtotalTax,
                        TotalCost,
                        ServiceDeposits,
                        SalesGoodsCd,
                        SalesGoodsCdName,
                        TaxAdjust,
                        BalanceAdjust,
                        DemandableTtl,
                        ClaimCode,
                        ClaimName,
                        CustomerCode,
                        CustomerName,
                        CorporateDivCode,
                        CorporateDivCodeName,
                        SlipNote,
                        SlipNote2,
                        RegiProcDateString,
                        CashRegisterNo,
                        PosReceiptNo,
                        SalesSlipSearchResultWork,
                        SalesSlipUpdatableName,
                        SectionName,
                        SubSectionName,
                        MinSectionName,
                        SearchSlipDate,
                        EstimateDivide,
                        InputAgenCd,
                        InputAgenNm,
                        SalesPrtTotalTaxInc,
                        SalesPrtTotalTaxExc,
                        SalesWorkTotalTaxInc,
                        SalesWorkTotalTaxExc,
                        SalesPrtSubttlInc,
                        SalesPrtSubttlExc,
                        SalesWorkSubttlInc,
                        SalesWorkSubttlExc,
                        SalesNetPrice,
                        SalesOutTax,
                        ItdedPartsDisOutTax,
                        ItdedPartsDisInTax,
                        ItdedWorkDisOutTax,
                        ItdedWorkDisInTax,
                        ItdedSalesDisTaxFre,
                        PartsDiscountRate,
                        RavorDiscountRate,
                        OutputName,
                        CustSlipNo,
                        SlipNote3,
                        EstimateValidityDateString,
                        PartsNoPrtCd,
                        OptionPringDivCd,
                        RateUseCode,
                        CategoryModel,
                        UoeRemark1,
                        SalesInputCode,
                        SalesInputName,
                        FullModel,
                        ModelFullName,
                        CarMngCode,
                        SlipDivName};
                rowSalesSlipRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesSlipRow);
                return rowSalesSlipRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSlipRow FindByEnterpriseCodeSearchSlipNumAcptAnOdrStatus(string EnterpriseCode, string SearchSlipNum, int AcptAnOdrStatus) {
                return ((SalesSlipRow)(this.Rows.Find(new object[] {
                            EnterpriseCode,
                            SearchSlipNum,
                            AcptAnOdrStatus})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesSlipDataTable cln = ((SalesSlipDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesSlipDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowNo = base.Columns["RowNo"];
                this.columnEnterpriseCode = base.Columns["EnterpriseCode"];
                this.columnAcceptAnOrderNo = base.Columns["AcceptAnOrderNo"];
                this.columnAcptAnOdrStatus = base.Columns["AcptAnOdrStatus"];
                this.columnAcptAnOdrStatusName = base.Columns["AcptAnOdrStatusName"];
                this.columnSearchSlipNum = base.Columns["SearchSlipNum"];
                this.columnDetailRowCount = base.Columns["DetailRowCount"];
                this.columnSalesSlipKind = base.Columns["SalesSlipKind"];
                this.columnSalesSlipKindName = base.Columns["SalesSlipKindName"];
                this.columnDebitNoteDiv = base.Columns["DebitNoteDiv"];
                this.columnDebitNoteDivName = base.Columns["DebitNoteDivName"];
                this.columnSalesSlipCd = base.Columns["SalesSlipCd"];
                this.columnSalesSlipCdName = base.Columns["SalesSlipCdName"];
                this.columnSalesFormal = base.Columns["SalesFormal"];
                this.columnSalesFormalCode = base.Columns["SalesFormalCode"];
                this.columnSalesFormalName = base.Columns["SalesFormalName"];
                this.columnSalesInpSecCd = base.Columns["SalesInpSecCd"];
                this.columnSalesInpSecName = base.Columns["SalesInpSecName"];
                this.columnDemandAddUpSecCd = base.Columns["DemandAddUpSecCd"];
                this.columnDemandAddUpSecName = base.Columns["DemandAddUpSecName"];
                this.columnResultsAddUpSecCd = base.Columns["ResultsAddUpSecCd"];
                this.columnResultsAddUpSecName = base.Columns["ResultsAddUpSecName"];
                this.columnEstimateDateString = base.Columns["EstimateDateString"];
                this.columnAcceptAnOrderDateString = base.Columns["AcceptAnOrderDateString"];
                this.columnDeliGdsCmpltDueDateString = base.Columns["DeliGdsCmpltDueDateString"];
                this.columnSlipDateString = base.Columns["SlipDateString"];
                this.columnShipmentDayString = base.Columns["ShipmentDayString"];
                this.columnSalesDateString = base.Columns["SalesDateString"];
                this.columnAddUpADateString = base.Columns["AddUpADateString"];
                this.columnFrontEmployeeNm = base.Columns["FrontEmployeeNm"];
                this.columnSalesEmployeeNm = base.Columns["SalesEmployeeNm"];
                this.columnWayToOrder = base.Columns["WayToOrder"];
                this.columnWayToOrderName = base.Columns["WayToOrderName"];
                this.columnAccRecDivCd = base.Columns["AccRecDivCd"];
                this.columnAccRecDivName = base.Columns["AccRecDivName"];
                this.columnTotalAmountDispWayCd = base.Columns["TotalAmountDispWayCd"];
                this.columnTotalAmountDispWayName = base.Columns["TotalAmountDispWayName"];
                this.columnSalesTotalTaxInc = base.Columns["SalesTotalTaxInc"];
                this.columnSalesTotalTaxExc = base.Columns["SalesTotalTaxExc"];
                this.columnSalesSubtotalTaxInc = base.Columns["SalesSubtotalTaxInc"];
                this.columnSalesSubtotalTaxExc = base.Columns["SalesSubtotalTaxExc"];
                this.columnSalSubttlSubToTaxFre = base.Columns["SalSubttlSubToTaxFre"];
                this.columnSalesSubtotalTax = base.Columns["SalesSubtotalTax"];
                this.columnTotalCost = base.Columns["TotalCost"];
                this.columnServiceDeposits = base.Columns["ServiceDeposits"];
                this.columnSalesGoodsCd = base.Columns["SalesGoodsCd"];
                this.columnSalesGoodsCdName = base.Columns["SalesGoodsCdName"];
                this.columnTaxAdjust = base.Columns["TaxAdjust"];
                this.columnBalanceAdjust = base.Columns["BalanceAdjust"];
                this.columnDemandableTtl = base.Columns["DemandableTtl"];
                this.columnClaimCode = base.Columns["ClaimCode"];
                this.columnClaimName = base.Columns["ClaimName"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCorporateDivCode = base.Columns["CorporateDivCode"];
                this.columnCorporateDivCodeName = base.Columns["CorporateDivCodeName"];
                this.columnSlipNote = base.Columns["SlipNote"];
                this.columnSlipNote2 = base.Columns["SlipNote2"];
                this.columnRegiProcDateString = base.Columns["RegiProcDateString"];
                this.columnCashRegisterNo = base.Columns["CashRegisterNo"];
                this.columnPosReceiptNo = base.Columns["PosReceiptNo"];
                this.columnSalesSlipSearchResultWork = base.Columns["SalesSlipSearchResultWork"];
                this.columnSalesSlipUpdatableName = base.Columns["SalesSlipUpdatableName"];
                this.columnSectionName = base.Columns["SectionName"];
                this.columnSubSectionName = base.Columns["SubSectionName"];
                this.columnMinSectionName = base.Columns["MinSectionName"];
                this.columnSearchSlipDate = base.Columns["SearchSlipDate"];
                this.columnEstimateDivide = base.Columns["EstimateDivide"];
                this.columnInputAgenCd = base.Columns["InputAgenCd"];
                this.columnInputAgenNm = base.Columns["InputAgenNm"];
                this.columnSalesPrtTotalTaxInc = base.Columns["SalesPrtTotalTaxInc"];
                this.columnSalesPrtTotalTaxExc = base.Columns["SalesPrtTotalTaxExc"];
                this.columnSalesWorkTotalTaxInc = base.Columns["SalesWorkTotalTaxInc"];
                this.columnSalesWorkTotalTaxExc = base.Columns["SalesWorkTotalTaxExc"];
                this.columnSalesPrtSubttlInc = base.Columns["SalesPrtSubttlInc"];
                this.columnSalesPrtSubttlExc = base.Columns["SalesPrtSubttlExc"];
                this.columnSalesWorkSubttlInc = base.Columns["SalesWorkSubttlInc"];
                this.columnSalesWorkSubttlExc = base.Columns["SalesWorkSubttlExc"];
                this.columnSalesNetPrice = base.Columns["SalesNetPrice"];
                this.columnSalesOutTax = base.Columns["SalesOutTax"];
                this.columnItdedPartsDisOutTax = base.Columns["ItdedPartsDisOutTax"];
                this.columnItdedPartsDisInTax = base.Columns["ItdedPartsDisInTax"];
                this.columnItdedWorkDisOutTax = base.Columns["ItdedWorkDisOutTax"];
                this.columnItdedWorkDisInTax = base.Columns["ItdedWorkDisInTax"];
                this.columnItdedSalesDisTaxFre = base.Columns["ItdedSalesDisTaxFre"];
                this.columnPartsDiscountRate = base.Columns["PartsDiscountRate"];
                this.columnRavorDiscountRate = base.Columns["RavorDiscountRate"];
                this.columnOutputName = base.Columns["OutputName"];
                this.columnCustSlipNo = base.Columns["CustSlipNo"];
                this.columnSlipNote3 = base.Columns["SlipNote3"];
                this.columnEstimateValidityDateString = base.Columns["EstimateValidityDateString"];
                this.columnPartsNoPrtCd = base.Columns["PartsNoPrtCd"];
                this.columnOptionPringDivCd = base.Columns["OptionPringDivCd"];
                this.columnRateUseCode = base.Columns["RateUseCode"];
                this.columnCategoryModel = base.Columns["CategoryModel"];
                this.columnUoeRemark1 = base.Columns["UoeRemark1"];
                this.columnSalesInputCode = base.Columns["SalesInputCode"];
                this.columnSalesInputName = base.Columns["SalesInputName"];
                this.columnFullModel = base.Columns["FullModel"];
                this.columnModelFullName = base.Columns["ModelFullName"];
                this.columnCarMngCode = base.Columns["CarMngCode"];
                this.columnSlipDivName = base.Columns["SlipDivName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnEnterpriseCode = new global::System.Data.DataColumn("EnterpriseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterpriseCode);
                this.columnAcceptAnOrderNo = new global::System.Data.DataColumn("AcceptAnOrderNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptAnOrderNo);
                this.columnAcptAnOdrStatus = new global::System.Data.DataColumn("AcptAnOdrStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcptAnOdrStatus);
                this.columnAcptAnOdrStatusName = new global::System.Data.DataColumn("AcptAnOdrStatusName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcptAnOdrStatusName);
                this.columnSearchSlipNum = new global::System.Data.DataColumn("SearchSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSearchSlipNum);
                this.columnDetailRowCount = new global::System.Data.DataColumn("DetailRowCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailRowCount);
                this.columnSalesSlipKind = new global::System.Data.DataColumn("SalesSlipKind", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipKind);
                this.columnSalesSlipKindName = new global::System.Data.DataColumn("SalesSlipKindName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipKindName);
                this.columnDebitNoteDiv = new global::System.Data.DataColumn("DebitNoteDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteDiv);
                this.columnDebitNoteDivName = new global::System.Data.DataColumn("DebitNoteDivName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteDivName);
                this.columnSalesSlipCd = new global::System.Data.DataColumn("SalesSlipCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipCd);
                this.columnSalesSlipCdName = new global::System.Data.DataColumn("SalesSlipCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipCdName);
                this.columnSalesFormal = new global::System.Data.DataColumn("SalesFormal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesFormal);
                this.columnSalesFormalCode = new global::System.Data.DataColumn("SalesFormalCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesFormalCode);
                this.columnSalesFormalName = new global::System.Data.DataColumn("SalesFormalName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesFormalName);
                this.columnSalesInpSecCd = new global::System.Data.DataColumn("SalesInpSecCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesInpSecCd);
                this.columnSalesInpSecName = new global::System.Data.DataColumn("SalesInpSecName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesInpSecName);
                this.columnDemandAddUpSecCd = new global::System.Data.DataColumn("DemandAddUpSecCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDemandAddUpSecCd);
                this.columnDemandAddUpSecName = new global::System.Data.DataColumn("DemandAddUpSecName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDemandAddUpSecName);
                this.columnResultsAddUpSecCd = new global::System.Data.DataColumn("ResultsAddUpSecCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultsAddUpSecCd);
                this.columnResultsAddUpSecName = new global::System.Data.DataColumn("ResultsAddUpSecName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultsAddUpSecName);
                this.columnEstimateDateString = new global::System.Data.DataColumn("EstimateDateString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateDateString);
                this.columnAcceptAnOrderDateString = new global::System.Data.DataColumn("AcceptAnOrderDateString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptAnOrderDateString);
                this.columnDeliGdsCmpltDueDateString = new global::System.Data.DataColumn("DeliGdsCmpltDueDateString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliGdsCmpltDueDateString);
                this.columnSlipDateString = new global::System.Data.DataColumn("SlipDateString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipDateString);
                this.columnShipmentDayString = new global::System.Data.DataColumn("ShipmentDayString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentDayString);
                this.columnSalesDateString = new global::System.Data.DataColumn("SalesDateString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDateString);
                this.columnAddUpADateString = new global::System.Data.DataColumn("AddUpADateString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddUpADateString);
                this.columnFrontEmployeeNm = new global::System.Data.DataColumn("FrontEmployeeNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrontEmployeeNm);
                this.columnSalesEmployeeNm = new global::System.Data.DataColumn("SalesEmployeeNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesEmployeeNm);
                this.columnWayToOrder = new global::System.Data.DataColumn("WayToOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWayToOrder);
                this.columnWayToOrderName = new global::System.Data.DataColumn("WayToOrderName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWayToOrderName);
                this.columnAccRecDivCd = new global::System.Data.DataColumn("AccRecDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccRecDivCd);
                this.columnAccRecDivName = new global::System.Data.DataColumn("AccRecDivName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccRecDivName);
                this.columnTotalAmountDispWayCd = new global::System.Data.DataColumn("TotalAmountDispWayCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmountDispWayCd);
                this.columnTotalAmountDispWayName = new global::System.Data.DataColumn("TotalAmountDispWayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmountDispWayName);
                this.columnSalesTotalTaxInc = new global::System.Data.DataColumn("SalesTotalTaxInc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTotalTaxInc);
                this.columnSalesTotalTaxExc = new global::System.Data.DataColumn("SalesTotalTaxExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTotalTaxExc);
                this.columnSalesSubtotalTaxInc = new global::System.Data.DataColumn("SalesSubtotalTaxInc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSubtotalTaxInc);
                this.columnSalesSubtotalTaxExc = new global::System.Data.DataColumn("SalesSubtotalTaxExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSubtotalTaxExc);
                this.columnSalSubttlSubToTaxFre = new global::System.Data.DataColumn("SalSubttlSubToTaxFre", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalSubttlSubToTaxFre);
                this.columnSalesSubtotalTax = new global::System.Data.DataColumn("SalesSubtotalTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSubtotalTax);
                this.columnTotalCost = new global::System.Data.DataColumn("TotalCost", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCost);
                this.columnServiceDeposits = new global::System.Data.DataColumn("ServiceDeposits", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceDeposits);
                this.columnSalesGoodsCd = new global::System.Data.DataColumn("SalesGoodsCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesGoodsCd);
                this.columnSalesGoodsCdName = new global::System.Data.DataColumn("SalesGoodsCdName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesGoodsCdName);
                this.columnTaxAdjust = new global::System.Data.DataColumn("TaxAdjust", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAdjust);
                this.columnBalanceAdjust = new global::System.Data.DataColumn("BalanceAdjust", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalanceAdjust);
                this.columnDemandableTtl = new global::System.Data.DataColumn("DemandableTtl", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDemandableTtl);
                this.columnClaimCode = new global::System.Data.DataColumn("ClaimCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClaimCode);
                this.columnClaimName = new global::System.Data.DataColumn("ClaimName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClaimName);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCorporateDivCode = new global::System.Data.DataColumn("CorporateDivCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCorporateDivCode);
                this.columnCorporateDivCodeName = new global::System.Data.DataColumn("CorporateDivCodeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCorporateDivCodeName);
                this.columnSlipNote = new global::System.Data.DataColumn("SlipNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote);
                this.columnSlipNote2 = new global::System.Data.DataColumn("SlipNote2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote2);
                this.columnRegiProcDateString = new global::System.Data.DataColumn("RegiProcDateString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegiProcDateString);
                this.columnCashRegisterNo = new global::System.Data.DataColumn("CashRegisterNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashRegisterNo);
                this.columnPosReceiptNo = new global::System.Data.DataColumn("PosReceiptNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosReceiptNo);
                this.columnSalesSlipSearchResultWork = new global::System.Data.DataColumn("SalesSlipSearchResultWork", typeof(global::Broadleaf.Application.Remoting.ParamData.SalesSlipSearchResultWork), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipSearchResultWork);
                this.columnSalesSlipUpdatableName = new global::System.Data.DataColumn("SalesSlipUpdatableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipUpdatableName);
                this.columnSectionName = new global::System.Data.DataColumn("SectionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionName);
                this.columnSubSectionName = new global::System.Data.DataColumn("SubSectionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubSectionName);
                this.columnMinSectionName = new global::System.Data.DataColumn("MinSectionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinSectionName);
                this.columnSearchSlipDate = new global::System.Data.DataColumn("SearchSlipDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSearchSlipDate);
                this.columnEstimateDivide = new global::System.Data.DataColumn("EstimateDivide", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateDivide);
                this.columnInputAgenCd = new global::System.Data.DataColumn("InputAgenCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputAgenCd);
                this.columnInputAgenNm = new global::System.Data.DataColumn("InputAgenNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputAgenNm);
                this.columnSalesPrtTotalTaxInc = new global::System.Data.DataColumn("SalesPrtTotalTaxInc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPrtTotalTaxInc);
                this.columnSalesPrtTotalTaxExc = new global::System.Data.DataColumn("SalesPrtTotalTaxExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPrtTotalTaxExc);
                this.columnSalesWorkTotalTaxInc = new global::System.Data.DataColumn("SalesWorkTotalTaxInc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesWorkTotalTaxInc);
                this.columnSalesWorkTotalTaxExc = new global::System.Data.DataColumn("SalesWorkTotalTaxExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesWorkTotalTaxExc);
                this.columnSalesPrtSubttlInc = new global::System.Data.DataColumn("SalesPrtSubttlInc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPrtSubttlInc);
                this.columnSalesPrtSubttlExc = new global::System.Data.DataColumn("SalesPrtSubttlExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesPrtSubttlExc);
                this.columnSalesWorkSubttlInc = new global::System.Data.DataColumn("SalesWorkSubttlInc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesWorkSubttlInc);
                this.columnSalesWorkSubttlExc = new global::System.Data.DataColumn("SalesWorkSubttlExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesWorkSubttlExc);
                this.columnSalesNetPrice = new global::System.Data.DataColumn("SalesNetPrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesNetPrice);
                this.columnSalesOutTax = new global::System.Data.DataColumn("SalesOutTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesOutTax);
                this.columnItdedPartsDisOutTax = new global::System.Data.DataColumn("ItdedPartsDisOutTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItdedPartsDisOutTax);
                this.columnItdedPartsDisInTax = new global::System.Data.DataColumn("ItdedPartsDisInTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItdedPartsDisInTax);
                this.columnItdedWorkDisOutTax = new global::System.Data.DataColumn("ItdedWorkDisOutTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItdedWorkDisOutTax);
                this.columnItdedWorkDisInTax = new global::System.Data.DataColumn("ItdedWorkDisInTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItdedWorkDisInTax);
                this.columnItdedSalesDisTaxFre = new global::System.Data.DataColumn("ItdedSalesDisTaxFre", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItdedSalesDisTaxFre);
                this.columnPartsDiscountRate = new global::System.Data.DataColumn("PartsDiscountRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartsDiscountRate);
                this.columnRavorDiscountRate = new global::System.Data.DataColumn("RavorDiscountRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRavorDiscountRate);
                this.columnOutputName = new global::System.Data.DataColumn("OutputName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputName);
                this.columnCustSlipNo = new global::System.Data.DataColumn("CustSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustSlipNo);
                this.columnSlipNote3 = new global::System.Data.DataColumn("SlipNote3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNote3);
                this.columnEstimateValidityDateString = new global::System.Data.DataColumn("EstimateValidityDateString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateValidityDateString);
                this.columnPartsNoPrtCd = new global::System.Data.DataColumn("PartsNoPrtCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartsNoPrtCd);
                this.columnOptionPringDivCd = new global::System.Data.DataColumn("OptionPringDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOptionPringDivCd);
                this.columnRateUseCode = new global::System.Data.DataColumn("RateUseCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateUseCode);
                this.columnCategoryModel = new global::System.Data.DataColumn("CategoryModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryModel);
                this.columnUoeRemark1 = new global::System.Data.DataColumn("UoeRemark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUoeRemark1);
                this.columnSalesInputCode = new global::System.Data.DataColumn("SalesInputCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesInputCode);
                this.columnSalesInputName = new global::System.Data.DataColumn("SalesInputName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesInputName);
                this.columnFullModel = new global::System.Data.DataColumn("FullModel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullModel);
                this.columnModelFullName = new global::System.Data.DataColumn("ModelFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelFullName);
                this.columnCarMngCode = new global::System.Data.DataColumn("CarMngCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarMngCode);
                this.columnSlipDivName = new global::System.Data.DataColumn("SlipDivName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipDivName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEnterpriseCode,
                                this.columnSearchSlipNum,
                                this.columnAcptAnOdrStatus}, true));
                this.columnRowNo.AutoIncrement = true;
                this.columnRowNo.AutoIncrementSeed = -1;
                this.columnRowNo.AutoIncrementStep = -1;
                this.columnEnterpriseCode.AllowDBNull = false;
                this.columnEnterpriseCode.DefaultValue = ((string)(""));
                this.columnAcceptAnOrderNo.AllowDBNull = false;
                this.columnAcceptAnOrderNo.Caption = "受注番号";
                this.columnAcceptAnOrderNo.DefaultValue = ((int)(0));
                this.columnAcptAnOdrStatus.AllowDBNull = false;
                this.columnAcptAnOdrStatus.DefaultValue = ((int)(0));
                this.columnAcptAnOdrStatusName.Caption = "状態";
                this.columnAcptAnOdrStatusName.DefaultValue = ((string)(""));
                this.columnSearchSlipNum.AllowDBNull = false;
                this.columnSearchSlipNum.Caption = "伝票番号";
                this.columnSearchSlipNum.DefaultValue = ((string)(""));
                this.columnDetailRowCount.Caption = "明細行数";
                this.columnSalesSlipKind.DefaultValue = ((int)(0));
                this.columnSalesSlipKindName.Caption = "種別";
                this.columnSalesSlipKindName.DefaultValue = ((string)(""));
                this.columnDebitNoteDiv.DefaultValue = ((int)(0));
                this.columnDebitNoteDivName.Caption = "赤黒";
                this.columnDebitNoteDivName.DefaultValue = ((string)(""));
                this.columnSalesSlipCd.DefaultValue = ((int)(0));
                this.columnSalesSlipCdName.Caption = "伝票区分";
                this.columnSalesSlipCdName.DefaultValue = ((string)(""));
                this.columnSalesFormal.DefaultValue = ((int)(0));
                this.columnSalesFormalCode.DefaultValue = ((int)(0));
                this.columnSalesFormalName.Caption = "売上形式";
                this.columnSalesFormalName.DefaultValue = ((string)(""));
                this.columnSalesInpSecName.Caption = "売上入力拠点";
                this.columnSalesInpSecName.DefaultValue = ((string)(""));
                this.columnDemandAddUpSecName.Caption = "請求計上拠点";
                this.columnDemandAddUpSecName.DefaultValue = ((string)(""));
                this.columnResultsAddUpSecName.Caption = "実績計上拠点";
                this.columnResultsAddUpSecName.DefaultValue = ((string)(""));
                this.columnEstimateDateString.Caption = "見積日";
                this.columnEstimateDateString.DefaultValue = ((string)(""));
                this.columnAcceptAnOrderDateString.Caption = "受注日";
                this.columnAcceptAnOrderDateString.DefaultValue = ((string)(""));
                this.columnDeliGdsCmpltDueDateString.Caption = "納品完了予定日";
                this.columnDeliGdsCmpltDueDateString.DefaultValue = ((string)(""));
                this.columnSlipDateString.Caption = "伝票日付";
                this.columnSlipDateString.DefaultValue = ((string)(""));
                this.columnShipmentDayString.Caption = "出荷日";
                this.columnShipmentDayString.DefaultValue = ((string)(""));
                this.columnSalesDateString.Caption = "売上日";
                this.columnSalesDateString.DefaultValue = ((string)(""));
                this.columnAddUpADateString.Caption = "請求締日";
                this.columnAddUpADateString.DefaultValue = ((string)(""));
                this.columnFrontEmployeeNm.Caption = "受付担当";
                this.columnFrontEmployeeNm.DefaultValue = ((string)(""));
                this.columnSalesEmployeeNm.Caption = "販売担当";
                this.columnSalesEmployeeNm.DefaultValue = ((string)(""));
                this.columnWayToOrder.DefaultValue = ((int)(0));
                this.columnWayToOrderName.Caption = "注文方法";
                this.columnWayToOrderName.DefaultValue = ((string)(""));
                this.columnAccRecDivCd.DefaultValue = ((int)(0));
                this.columnAccRecDivName.Caption = "売掛管理";
                this.columnAccRecDivName.DefaultValue = ((string)(""));
                this.columnTotalAmountDispWayCd.DefaultValue = ((int)(0));
                this.columnTotalAmountDispWayName.Caption = "総額表示";
                this.columnTotalAmountDispWayName.DefaultValue = ((string)(""));
                this.columnSalesTotalTaxInc.Caption = "売上合計(税込み)";
                this.columnSalesTotalTaxInc.DefaultValue = ((long)(0));
                this.columnSalesTotalTaxExc.Caption = "売上合計(税抜き)";
                this.columnSalesTotalTaxExc.DefaultValue = ((long)(0));
                this.columnSalesSubtotalTaxInc.Caption = "売上小計（税込み）";
                this.columnSalesSubtotalTaxInc.DefaultValue = ((long)(0));
                this.columnSalesSubtotalTaxExc.Caption = "売上小計（税抜き）";
                this.columnSalesSubtotalTaxExc.DefaultValue = ((long)(0));
                this.columnSalSubttlSubToTaxFre.Caption = "売上小計非課税対象額";
                this.columnSalSubttlSubToTaxFre.DefaultValue = ((long)(0));
                this.columnSalesSubtotalTax.Caption = "売上小計（税）";
                this.columnSalesSubtotalTax.DefaultValue = ((long)(0));
                this.columnTotalCost.Caption = "原価金額計";
                this.columnTotalCost.DefaultValue = ((long)(0));
                this.columnServiceDeposits.Caption = "サービス預り金";
                this.columnServiceDeposits.DefaultValue = ((long)(0));
                this.columnSalesGoodsCd.DefaultValue = ((int)(0));
                this.columnSalesGoodsCdName.Caption = "売上商品区分";
                this.columnSalesGoodsCdName.DefaultValue = ((string)(""));
                this.columnTaxAdjust.Caption = "消費税調整額";
                this.columnTaxAdjust.DefaultValue = ((long)(0));
                this.columnBalanceAdjust.Caption = "残高調整額";
                this.columnBalanceAdjust.DefaultValue = ((long)(0));
                this.columnDemandableTtl.Caption = "請求合計額";
                this.columnDemandableTtl.DefaultValue = ((long)(0));
                this.columnClaimCode.Caption = "請求先コード";
                this.columnClaimCode.DefaultValue = ((int)(0));
                this.columnClaimName.Caption = "請求先名称";
                this.columnClaimName.DefaultValue = ((string)(""));
                this.columnCustomerCode.Caption = "得意先コード";
                this.columnCustomerCode.DefaultValue = ((int)(0));
                this.columnCustomerName.Caption = "得意先名称";
                this.columnCustomerName.DefaultValue = ((string)(""));
                this.columnCorporateDivCode.DefaultValue = ((int)(0));
                this.columnCorporateDivCodeName.Caption = "個人・法人";
                this.columnCorporateDivCodeName.DefaultValue = ((string)(""));
                this.columnSlipNote.Caption = "備考";
                this.columnSlipNote.DefaultValue = ((string)(""));
                this.columnSlipNote2.Caption = "備考2";
                this.columnSlipNote2.DefaultValue = ((string)(""));
                this.columnRegiProcDateString.Caption = "レジ処理日";
                this.columnRegiProcDateString.DefaultValue = ((string)(""));
                this.columnCashRegisterNo.Caption = "レジ番号";
                this.columnCashRegisterNo.DefaultValue = ((int)(0));
                this.columnPosReceiptNo.Caption = "POSﾚｼｰﾄ番号";
                this.columnPosReceiptNo.DefaultValue = ((int)(0));
                this.columnSalesSlipSearchResultWork.AllowDBNull = false;
                this.columnSalesSlipUpdatableName.Caption = "売上データ更新可不可区分名";
                this.columnSalesSlipUpdatableName.DefaultValue = ((string)(""));
                this.columnSectionName.DefaultValue = ((string)(""));
                this.columnSubSectionName.DefaultValue = ((string)(""));
                this.columnMinSectionName.DefaultValue = ((string)(""));
                this.columnSearchSlipDate.Caption = "伝票検索日付";
                this.columnEstimateDivide.Caption = "見積区分";
                this.columnEstimateDivide.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSlipRow NewSalesSlipRow() {
                return ((SalesSlipRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesSlipRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesSlipRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesSlipRowChanged != null)) {
                    this.SalesSlipRowChanged(this, new SalesSlipRowChangeEvent(((SalesSlipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesSlipRowChanging != null)) {
                    this.SalesSlipRowChanging(this, new SalesSlipRowChangeEvent(((SalesSlipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesSlipRowDeleted != null)) {
                    this.SalesSlipRowDeleted(this, new SalesSlipRowChangeEvent(((SalesSlipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesSlipRowDeleting != null)) {
                    this.SalesSlipRowDeleting(this, new SalesSlipRowChangeEvent(((SalesSlipRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesSlipRow(SalesSlipRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalesSlipDataSet ds = new SalesSlipDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesSlipDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SecInfoSetDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSectionCode;
            
            private global::System.Data.DataColumn columnSectionGuideNm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SecInfoSetDataTable() {
                this.TableName = "SecInfoSet";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SecInfoSetDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SecInfoSetDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionCodeColumn {
                get {
                    return this.columnSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionGuideNmColumn {
                get {
                    return this.columnSectionGuideNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SecInfoSetRow this[int index] {
                get {
                    return ((SecInfoSetRow)(this.Rows[index]));
                }
            }
            
            public event SecInfoSetRowChangeEventHandler SecInfoSetRowChanging;
            
            public event SecInfoSetRowChangeEventHandler SecInfoSetRowChanged;
            
            public event SecInfoSetRowChangeEventHandler SecInfoSetRowDeleting;
            
            public event SecInfoSetRowChangeEventHandler SecInfoSetRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSecInfoSetRow(SecInfoSetRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SecInfoSetRow AddSecInfoSetRow(string SectionCode, string SectionGuideNm) {
                SecInfoSetRow rowSecInfoSetRow = ((SecInfoSetRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SectionCode,
                        SectionGuideNm};
                rowSecInfoSetRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSecInfoSetRow);
                return rowSecInfoSetRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SecInfoSetRow FindBySectionCode(string SectionCode) {
                return ((SecInfoSetRow)(this.Rows.Find(new object[] {
                            SectionCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SecInfoSetDataTable cln = ((SecInfoSetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SecInfoSetDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSectionCode = base.Columns["SectionCode"];
                this.columnSectionGuideNm = base.Columns["SectionGuideNm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSectionCode = new global::System.Data.DataColumn("SectionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionCode);
                this.columnSectionGuideNm = new global::System.Data.DataColumn("SectionGuideNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionGuideNm);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSectionCode}, true));
                this.columnSectionCode.AllowDBNull = false;
                this.columnSectionCode.Unique = true;
                this.columnSectionCode.DefaultValue = ((string)(""));
                this.columnSectionGuideNm.DefaultValue = ((string)(""));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SecInfoSetRow NewSecInfoSetRow() {
                return ((SecInfoSetRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SecInfoSetRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SecInfoSetRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SecInfoSetRowChanged != null)) {
                    this.SecInfoSetRowChanged(this, new SecInfoSetRowChangeEvent(((SecInfoSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SecInfoSetRowChanging != null)) {
                    this.SecInfoSetRowChanging(this, new SecInfoSetRowChangeEvent(((SecInfoSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SecInfoSetRowDeleted != null)) {
                    this.SecInfoSetRowDeleted(this, new SecInfoSetRowChangeEvent(((SecInfoSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SecInfoSetRowDeleting != null)) {
                    this.SecInfoSetRowDeleting(this, new SecInfoSetRowChangeEvent(((SecInfoSetRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSecInfoSetRow(SecInfoSetRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalesSlipDataSet ds = new SalesSlipDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SecInfoSetDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMemoExist;
            
            private global::System.Data.DataColumn columnMemoExistName;
            
            private global::System.Data.DataColumn columnAcceptAnOrderNo;
            
            private global::System.Data.DataColumn columnAcptAnOdrStatus;
            
            private global::System.Data.DataColumn columnSalesSlipNum;
            
            private global::System.Data.DataColumn columnSalesRowNo;
            
            private global::System.Data.DataColumn columnSalesRowDerivNo;
            
            private global::System.Data.DataColumn columnSectionCode;
            
            private global::System.Data.DataColumn columnSubSectionCode;
            
            private global::System.Data.DataColumn columnMinSectionCode;
            
            private global::System.Data.DataColumn columnSalesDate;
            
            private global::System.Data.DataColumn columnSalesDateString;
            
            private global::System.Data.DataColumn columnCommonSeqNo;
            
            private global::System.Data.DataColumn columnSalesSlipDtlNum;
            
            private global::System.Data.DataColumn columnAcptAnOdrStatusSrc;
            
            private global::System.Data.DataColumn columnSalesSlipDtlNumSrc;
            
            private global::System.Data.DataColumn columnSalesSlipCdDtl;
            
            private global::System.Data.DataColumn columnServiceSlipCd;
            
            private global::System.Data.DataColumn columnEstimateDtlDivide;
            
            private global::System.Data.DataColumn columnSalesDepositsDiv;
            
            private global::System.Data.DataColumn columnStockMngExistCd;
            
            private global::System.Data.DataColumn columnDeliGdsCmpltDueDate;
            
            private global::System.Data.DataColumn columnDeliGdsCmpltDueDateString;
            
            private global::System.Data.DataColumn columnGoodsKindCode;
            
            private global::System.Data.DataColumn columnGoodsSearchDivCd;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnMakerName;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnGoodsSetDivCd;
            
            private global::System.Data.DataColumn columnLargeGoodsGanreCode;
            
            private global::System.Data.DataColumn columnLargeGoodsGanreName;
            
            private global::System.Data.DataColumn columnMediumGoodsGanreCode;
            
            private global::System.Data.DataColumn columnMediumGoodsGanreName;
            
            private global::System.Data.DataColumn columnDetailGoodsGanreCode;
            
            private global::System.Data.DataColumn columnDetailGoodsGanreName;
            
            private global::System.Data.DataColumn columnGoodsLGroup;
            
            private global::System.Data.DataColumn columnGoodsLGroupName;
            
            private global::System.Data.DataColumn columnGoodsMGroup;
            
            private global::System.Data.DataColumn columnGoodsMGroupName;
            
            private global::System.Data.DataColumn columnBLGroupCode;
            
            private global::System.Data.DataColumn columnBLGroupName;
            
            private global::System.Data.DataColumn columnBLGoodsCode;
            
            private global::System.Data.DataColumn columnBLGoodsFullName;
            
            private global::System.Data.DataColumn columnEnterpriseGanreCode;
            
            private global::System.Data.DataColumn columnEnterpriseGanreName;
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            private global::System.Data.DataColumn columnWarehouseName;
            
            private global::System.Data.DataColumn columnWarehouseShelfNo;
            
            private global::System.Data.DataColumn columnSalesOrderDivCd;
            
            private global::System.Data.DataColumn columnUnitCode;
            
            private global::System.Data.DataColumn columnUnitName;
            
            private global::System.Data.DataColumn columnGoodsRateRank;
            
            private global::System.Data.DataColumn columnCustRateGrpCode;
            
            private global::System.Data.DataColumn columnSuppRateGrpCode;
            
            private global::System.Data.DataColumn columnListPriceRate;
            
            private global::System.Data.DataColumn columnRateDivLPrice;
            
            private global::System.Data.DataColumn columnUnPrcCalcCdLPrice;
            
            private global::System.Data.DataColumn columnPriceCdLPrice;
            
            private global::System.Data.DataColumn columnStdUnPrcLPrice;
            
            private global::System.Data.DataColumn columnFracProcUnitLPrice;
            
            private global::System.Data.DataColumn columnFracProcLPrice;
            
            private global::System.Data.DataColumn columnListPriceTaxIncFl;
            
            private global::System.Data.DataColumn columnListPriceTaxExcFl;
            
            private global::System.Data.DataColumn columnListPriceChngCd;
            
            private global::System.Data.DataColumn columnSalesRate;
            
            private global::System.Data.DataColumn columnRateDivSalUnPrc;
            
            private global::System.Data.DataColumn columnUnPrcCalcCdSalUnPrc;
            
            private global::System.Data.DataColumn columnPriceCdSalUnPrc;
            
            private global::System.Data.DataColumn columnStdUnPrcSalUnPrc;
            
            private global::System.Data.DataColumn columnFracProcUnitSalUnPrc;
            
            private global::System.Data.DataColumn columnFracProcSalUnPrc;
            
            private global::System.Data.DataColumn columnSalesUnPrcTaxIncFl;
            
            private global::System.Data.DataColumn columnSalesUnPrcTaxExcFl;
            
            private global::System.Data.DataColumn columnSalesUnPrcChngCd;
            
            private global::System.Data.DataColumn columnCostRate;
            
            private global::System.Data.DataColumn columnRateDivUnCst;
            
            private global::System.Data.DataColumn columnUnPrcCalcCdUnCst;
            
            private global::System.Data.DataColumn columnPriceCdUnCst;
            
            private global::System.Data.DataColumn columnStdUnPrcUnCst;
            
            private global::System.Data.DataColumn columnFracProcUnitUnCst;
            
            private global::System.Data.DataColumn columnFracProcUnCst;
            
            private global::System.Data.DataColumn columnSalesUnitCost;
            
            private global::System.Data.DataColumn columnSalesUnitCostChngDiv;
            
            private global::System.Data.DataColumn columnBargainCd;
            
            private global::System.Data.DataColumn columnBargainNm;
            
            private global::System.Data.DataColumn columnShipmentCnt;
            
            private global::System.Data.DataColumn columnSalesMoneyTaxInc;
            
            private global::System.Data.DataColumn columnSalesMoneyTaxExc;
            
            private global::System.Data.DataColumn columnSalsePriceConsTax;
            
            private global::System.Data.DataColumn columnCost;
            
            private global::System.Data.DataColumn columnGrsProfitChkDiv;
            
            private global::System.Data.DataColumn columnSalesGoodsCd;
            
            private global::System.Data.DataColumn columnTaxAdjust;
            
            private global::System.Data.DataColumn columnBalanceAdjust;
            
            private global::System.Data.DataColumn columnTaxationDivCd;
            
            private global::System.Data.DataColumn columnPartySlipNumDtl;
            
            private global::System.Data.DataColumn columnDtlNote;
            
            private global::System.Data.DataColumn columnSupplierCd;
            
            private global::System.Data.DataColumn columnSupplierSnm;
            
            private global::System.Data.DataColumn columnResultsAddUpSecCd;
            
            private global::System.Data.DataColumn columnOrderNumber;
            
            private global::System.Data.DataColumn columnAcceptAnOrderCnt;
            
            private global::System.Data.DataColumn columnAcptAnOdrAdjustCnt;
            
            private global::System.Data.DataColumn columnAcptAnOdrRemainCnt;
            
            private global::System.Data.DataColumn columnSlipMemo1;
            
            private global::System.Data.DataColumn columnSlipMemo2;
            
            private global::System.Data.DataColumn columnSlipMemo3;
            
            private global::System.Data.DataColumn columnSlipMemo4;
            
            private global::System.Data.DataColumn columnSlipMemo5;
            
            private global::System.Data.DataColumn columnSlipMemo6;
            
            private global::System.Data.DataColumn columnInsideMemo1;
            
            private global::System.Data.DataColumn columnInsideMemo2;
            
            private global::System.Data.DataColumn columnInsideMemo3;
            
            private global::System.Data.DataColumn columnInsideMemo4;
            
            private global::System.Data.DataColumn columnInsideMemo5;
            
            private global::System.Data.DataColumn columnInsideMemo6;
            
            private global::System.Data.DataColumn columnBfListPrice;
            
            private global::System.Data.DataColumn columnBfSalesUnitPrice;
            
            private global::System.Data.DataColumn columnBfUnitCost;
            
            private global::System.Data.DataColumn columnPrtGoodsNo;
            
            private global::System.Data.DataColumn columnPrtGoodsName;
            
            private global::System.Data.DataColumn columnPrtGoodsMakerCd;
            
            private global::System.Data.DataColumn columnPrtGoodsMakerNm;
            
            private global::System.Data.DataColumn columnContractDivCdDtl;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerName2;
            
            private global::System.Data.DataColumn columnCustomerSnm;
            
            private global::System.Data.DataColumn columnAddresseeCode;
            
            private global::System.Data.DataColumn columnAddresseeName;
            
            private global::System.Data.DataColumn columnAddresseeName2;
            
            private global::System.Data.DataColumn columnSalesInputCode;
            
            private global::System.Data.DataColumn columnSalesInputName;
            
            private global::System.Data.DataColumn columnFrontEmployeeCd;
            
            private global::System.Data.DataColumn columnFrontEmployeeNm;
            
            private global::System.Data.DataColumn columnSalesEmployeeCd;
            
            private global::System.Data.DataColumn columnSalesEmployeeNm;
            
            private global::System.Data.DataColumn columnPrtBLGoodsCode;
            
            private global::System.Data.DataColumn columnPrtBLGoodsName;
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnSalesCdNm;
            
            private global::System.Data.DataColumn columnWorkManHour;
            
            private global::System.Data.DataColumn columnWayToOrder;
            
            private global::System.Data.DataColumn columnSalesUnitTotal;
            
            private global::System.Data.DataColumn columnCooprtKind;
            
            private global::System.Data.DataColumn columnAutoAnswerDivSCM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailDataTable() {
                this.TableName = "SalesDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemoExistColumn {
                get {
                    return this.columnMemoExist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemoExistNameColumn {
                get {
                    return this.columnMemoExistName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcceptAnOrderNoColumn {
                get {
                    return this.columnAcceptAnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcptAnOdrStatusColumn {
                get {
                    return this.columnAcptAnOdrStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipNumColumn {
                get {
                    return this.columnSalesSlipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesRowNoColumn {
                get {
                    return this.columnSalesRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesRowDerivNoColumn {
                get {
                    return this.columnSalesRowDerivNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionCodeColumn {
                get {
                    return this.columnSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubSectionCodeColumn {
                get {
                    return this.columnSubSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinSectionCodeColumn {
                get {
                    return this.columnMinSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateStringColumn {
                get {
                    return this.columnSalesDateString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommonSeqNoColumn {
                get {
                    return this.columnCommonSeqNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipDtlNumColumn {
                get {
                    return this.columnSalesSlipDtlNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcptAnOdrStatusSrcColumn {
                get {
                    return this.columnAcptAnOdrStatusSrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipDtlNumSrcColumn {
                get {
                    return this.columnSalesSlipDtlNumSrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesSlipCdDtlColumn {
                get {
                    return this.columnSalesSlipCdDtl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceSlipCdColumn {
                get {
                    return this.columnServiceSlipCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstimateDtlDivideColumn {
                get {
                    return this.columnEstimateDtlDivide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDepositsDivColumn {
                get {
                    return this.columnSalesDepositsDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockMngExistCdColumn {
                get {
                    return this.columnStockMngExistCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliGdsCmpltDueDateColumn {
                get {
                    return this.columnDeliGdsCmpltDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliGdsCmpltDueDateStringColumn {
                get {
                    return this.columnDeliGdsCmpltDueDateString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsKindCodeColumn {
                get {
                    return this.columnGoodsKindCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsSearchDivCdColumn {
                get {
                    return this.columnGoodsSearchDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerNameColumn {
                get {
                    return this.columnMakerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsSetDivCdColumn {
                get {
                    return this.columnGoodsSetDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LargeGoodsGanreCodeColumn {
                get {
                    return this.columnLargeGoodsGanreCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LargeGoodsGanreNameColumn {
                get {
                    return this.columnLargeGoodsGanreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MediumGoodsGanreCodeColumn {
                get {
                    return this.columnMediumGoodsGanreCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MediumGoodsGanreNameColumn {
                get {
                    return this.columnMediumGoodsGanreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailGoodsGanreCodeColumn {
                get {
                    return this.columnDetailGoodsGanreCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailGoodsGanreNameColumn {
                get {
                    return this.columnDetailGoodsGanreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsLGroupColumn {
                get {
                    return this.columnGoodsLGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsLGroupNameColumn {
                get {
                    return this.columnGoodsLGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMGroupColumn {
                get {
                    return this.columnGoodsMGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMGroupNameColumn {
                get {
                    return this.columnGoodsMGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGroupCodeColumn {
                get {
                    return this.columnBLGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGroupNameColumn {
                get {
                    return this.columnBLGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGoodsCodeColumn {
                get {
                    return this.columnBLGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGoodsFullNameColumn {
                get {
                    return this.columnBLGoodsFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterpriseGanreCodeColumn {
                get {
                    return this.columnEnterpriseGanreCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterpriseGanreNameColumn {
                get {
                    return this.columnEnterpriseGanreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseNameColumn {
                get {
                    return this.columnWarehouseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseShelfNoColumn {
                get {
                    return this.columnWarehouseShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesOrderDivCdColumn {
                get {
                    return this.columnSalesOrderDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitCodeColumn {
                get {
                    return this.columnUnitCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsRateRankColumn {
                get {
                    return this.columnGoodsRateRank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustRateGrpCodeColumn {
                get {
                    return this.columnCustRateGrpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuppRateGrpCodeColumn {
                get {
                    return this.columnSuppRateGrpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceRateColumn {
                get {
                    return this.columnListPriceRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateDivLPriceColumn {
                get {
                    return this.columnRateDivLPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnPrcCalcCdLPriceColumn {
                get {
                    return this.columnUnPrcCalcCdLPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceCdLPriceColumn {
                get {
                    return this.columnPriceCdLPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StdUnPrcLPriceColumn {
                get {
                    return this.columnStdUnPrcLPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FracProcUnitLPriceColumn {
                get {
                    return this.columnFracProcUnitLPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FracProcLPriceColumn {
                get {
                    return this.columnFracProcLPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceTaxIncFlColumn {
                get {
                    return this.columnListPriceTaxIncFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceTaxExcFlColumn {
                get {
                    return this.columnListPriceTaxExcFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceChngCdColumn {
                get {
                    return this.columnListPriceChngCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesRateColumn {
                get {
                    return this.columnSalesRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateDivSalUnPrcColumn {
                get {
                    return this.columnRateDivSalUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnPrcCalcCdSalUnPrcColumn {
                get {
                    return this.columnUnPrcCalcCdSalUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceCdSalUnPrcColumn {
                get {
                    return this.columnPriceCdSalUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StdUnPrcSalUnPrcColumn {
                get {
                    return this.columnStdUnPrcSalUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FracProcUnitSalUnPrcColumn {
                get {
                    return this.columnFracProcUnitSalUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FracProcSalUnPrcColumn {
                get {
                    return this.columnFracProcSalUnPrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnPrcTaxIncFlColumn {
                get {
                    return this.columnSalesUnPrcTaxIncFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnPrcTaxExcFlColumn {
                get {
                    return this.columnSalesUnPrcTaxExcFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnPrcChngCdColumn {
                get {
                    return this.columnSalesUnPrcChngCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostRateColumn {
                get {
                    return this.columnCostRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateDivUnCstColumn {
                get {
                    return this.columnRateDivUnCst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnPrcCalcCdUnCstColumn {
                get {
                    return this.columnUnPrcCalcCdUnCst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceCdUnCstColumn {
                get {
                    return this.columnPriceCdUnCst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StdUnPrcUnCstColumn {
                get {
                    return this.columnStdUnPrcUnCst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FracProcUnitUnCstColumn {
                get {
                    return this.columnFracProcUnitUnCst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FracProcUnCstColumn {
                get {
                    return this.columnFracProcUnCst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnitCostColumn {
                get {
                    return this.columnSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnitCostChngDivColumn {
                get {
                    return this.columnSalesUnitCostChngDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BargainCdColumn {
                get {
                    return this.columnBargainCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BargainNmColumn {
                get {
                    return this.columnBargainNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentCntColumn {
                get {
                    return this.columnShipmentCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesMoneyTaxIncColumn {
                get {
                    return this.columnSalesMoneyTaxInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesMoneyTaxExcColumn {
                get {
                    return this.columnSalesMoneyTaxExc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalsePriceConsTaxColumn {
                get {
                    return this.columnSalsePriceConsTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostColumn {
                get {
                    return this.columnCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GrsProfitChkDivColumn {
                get {
                    return this.columnGrsProfitChkDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesGoodsCdColumn {
                get {
                    return this.columnSalesGoodsCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAdjustColumn {
                get {
                    return this.columnTaxAdjust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceAdjustColumn {
                get {
                    return this.columnBalanceAdjust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxationDivCdColumn {
                get {
                    return this.columnTaxationDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartySlipNumDtlColumn {
                get {
                    return this.columnPartySlipNumDtl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DtlNoteColumn {
                get {
                    return this.columnDtlNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCdColumn {
                get {
                    return this.columnSupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSnmColumn {
                get {
                    return this.columnSupplierSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResultsAddUpSecCdColumn {
                get {
                    return this.columnResultsAddUpSecCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderNumberColumn {
                get {
                    return this.columnOrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcceptAnOrderCntColumn {
                get {
                    return this.columnAcceptAnOrderCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcptAnOdrAdjustCntColumn {
                get {
                    return this.columnAcptAnOdrAdjustCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcptAnOdrRemainCntColumn {
                get {
                    return this.columnAcptAnOdrRemainCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipMemo1Column {
                get {
                    return this.columnSlipMemo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipMemo2Column {
                get {
                    return this.columnSlipMemo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipMemo3Column {
                get {
                    return this.columnSlipMemo3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipMemo4Column {
                get {
                    return this.columnSlipMemo4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipMemo5Column {
                get {
                    return this.columnSlipMemo5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipMemo6Column {
                get {
                    return this.columnSlipMemo6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsideMemo1Column {
                get {
                    return this.columnInsideMemo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsideMemo2Column {
                get {
                    return this.columnInsideMemo2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsideMemo3Column {
                get {
                    return this.columnInsideMemo3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsideMemo4Column {
                get {
                    return this.columnInsideMemo4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsideMemo5Column {
                get {
                    return this.columnInsideMemo5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InsideMemo6Column {
                get {
                    return this.columnInsideMemo6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfListPriceColumn {
                get {
                    return this.columnBfListPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfSalesUnitPriceColumn {
                get {
                    return this.columnBfSalesUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfUnitCostColumn {
                get {
                    return this.columnBfUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrtGoodsNoColumn {
                get {
                    return this.columnPrtGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrtGoodsNameColumn {
                get {
                    return this.columnPrtGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrtGoodsMakerCdColumn {
                get {
                    return this.columnPrtGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrtGoodsMakerNmColumn {
                get {
                    return this.columnPrtGoodsMakerNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContractDivCdDtlColumn {
                get {
                    return this.columnContractDivCdDtl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerName2Column {
                get {
                    return this.columnCustomerName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerSnmColumn {
                get {
                    return this.columnCustomerSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeCodeColumn {
                get {
                    return this.columnAddresseeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeNameColumn {
                get {
                    return this.columnAddresseeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddresseeName2Column {
                get {
                    return this.columnAddresseeName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesInputCodeColumn {
                get {
                    return this.columnSalesInputCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesInputNameColumn {
                get {
                    return this.columnSalesInputName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrontEmployeeCdColumn {
                get {
                    return this.columnFrontEmployeeCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FrontEmployeeNmColumn {
                get {
                    return this.columnFrontEmployeeNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesEmployeeCdColumn {
                get {
                    return this.columnSalesEmployeeCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesEmployeeNmColumn {
                get {
                    return this.columnSalesEmployeeNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrtBLGoodsCodeColumn {
                get {
                    return this.columnPrtBLGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrtBLGoodsNameColumn {
                get {
                    return this.columnPrtBLGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCdNmColumn {
                get {
                    return this.columnSalesCdNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WorkManHourColumn {
                get {
                    return this.columnWorkManHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WayToOrderColumn {
                get {
                    return this.columnWayToOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnitTotalColumn {
                get {
                    return this.columnSalesUnitTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CooprtKindColumn {
                get {
                    return this.columnCooprtKind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AutoAnswerDivSCMColumn {
                get {
                    return this.columnAutoAnswerDivSCM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRow this[int index] {
                get {
                    return ((SalesDetailRow)(this.Rows[index]));
                }
            }
            
            public event SalesDetailRowChangeEventHandler SalesDetailRowChanging;
            
            public event SalesDetailRowChangeEventHandler SalesDetailRowChanged;
            
            public event SalesDetailRowChangeEventHandler SalesDetailRowDeleting;
            
            public event SalesDetailRowChangeEventHandler SalesDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesDetailRow(SalesDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRow AddSalesDetailRow(
                        int MemoExist, 
                        string MemoExistName, 
                        int AcceptAnOrderNo, 
                        int AcptAnOdrStatus, 
                        string SalesSlipNum, 
                        int SalesRowNo, 
                        int SalesRowDerivNo, 
                        string SectionCode, 
                        int SubSectionCode, 
                        int MinSectionCode, 
                        int SalesDate, 
                        string SalesDateString, 
                        long CommonSeqNo, 
                        long SalesSlipDtlNum, 
                        int AcptAnOdrStatusSrc, 
                        long SalesSlipDtlNumSrc, 
                        int SalesSlipCdDtl, 
                        int ServiceSlipCd, 
                        int EstimateDtlDivide, 
                        int SalesDepositsDiv, 
                        int StockMngExistCd, 
                        int DeliGdsCmpltDueDate, 
                        string DeliGdsCmpltDueDateString, 
                        int GoodsKindCode, 
                        int GoodsSearchDivCd, 
                        int GoodsMakerCd, 
                        string MakerName, 
                        string GoodsNo, 
                        string GoodsName, 
                        int GoodsSetDivCd, 
                        string LargeGoodsGanreCode, 
                        string LargeGoodsGanreName, 
                        string MediumGoodsGanreCode, 
                        string MediumGoodsGanreName, 
                        string DetailGoodsGanreCode, 
                        string DetailGoodsGanreName, 
                        int GoodsLGroup, 
                        string GoodsLGroupName, 
                        int GoodsMGroup, 
                        string GoodsMGroupName, 
                        int BLGroupCode, 
                        string BLGroupName, 
                        int BLGoodsCode, 
                        string BLGoodsFullName, 
                        int EnterpriseGanreCode, 
                        string EnterpriseGanreName, 
                        string WarehouseCode, 
                        string WarehouseName, 
                        string WarehouseShelfNo, 
                        int SalesOrderDivCd, 
                        int UnitCode, 
                        string UnitName, 
                        string GoodsRateRank, 
                        int CustRateGrpCode, 
                        int SuppRateGrpCode, 
                        double ListPriceRate, 
                        string RateDivLPrice, 
                        int UnPrcCalcCdLPrice, 
                        int PriceCdLPrice, 
                        double StdUnPrcLPrice, 
                        double FracProcUnitLPrice, 
                        int FracProcLPrice, 
                        double ListPriceTaxIncFl, 
                        double ListPriceTaxExcFl, 
                        int ListPriceChngCd, 
                        double SalesRate, 
                        string RateDivSalUnPrc, 
                        int UnPrcCalcCdSalUnPrc, 
                        int PriceCdSalUnPrc, 
                        double StdUnPrcSalUnPrc, 
                        double FracProcUnitSalUnPrc, 
                        int FracProcSalUnPrc, 
                        double SalesUnPrcTaxIncFl, 
                        double SalesUnPrcTaxExcFl, 
                        int SalesUnPrcChngCd, 
                        double CostRate, 
                        string RateDivUnCst, 
                        int UnPrcCalcCdUnCst, 
                        int PriceCdUnCst, 
                        double StdUnPrcUnCst, 
                        double FracProcUnitUnCst, 
                        int FracProcUnCst, 
                        double SalesUnitCost, 
                        int SalesUnitCostChngDiv, 
                        int BargainCd, 
                        string BargainNm, 
                        double ShipmentCnt, 
                        long SalesMoneyTaxInc, 
                        long SalesMoneyTaxExc, 
                        long SalsePriceConsTax, 
                        long Cost, 
                        int GrsProfitChkDiv, 
                        int SalesGoodsCd, 
                        long TaxAdjust, 
                        long BalanceAdjust, 
                        int TaxationDivCd, 
                        string PartySlipNumDtl, 
                        string DtlNote, 
                        int SupplierCd, 
                        string SupplierSnm, 
                        string ResultsAddUpSecCd, 
                        string OrderNumber, 
                        double AcceptAnOrderCnt, 
                        double AcptAnOdrAdjustCnt, 
                        double AcptAnOdrRemainCnt, 
                        string SlipMemo1, 
                        string SlipMemo2, 
                        string SlipMemo3, 
                        string SlipMemo4, 
                        string SlipMemo5, 
                        string SlipMemo6, 
                        string InsideMemo1, 
                        string InsideMemo2, 
                        string InsideMemo3, 
                        string InsideMemo4, 
                        string InsideMemo5, 
                        string InsideMemo6, 
                        double BfListPrice, 
                        double BfSalesUnitPrice, 
                        double BfUnitCost, 
                        string PrtGoodsNo, 
                        string PrtGoodsName, 
                        int PrtGoodsMakerCd, 
                        string PrtGoodsMakerNm, 
                        int ContractDivCdDtl, 
                        int CustomerCode, 
                        string CustomerName, 
                        string CustomerName2, 
                        string CustomerSnm, 
                        int AddresseeCode, 
                        string AddresseeName, 
                        string AddresseeName2, 
                        string SalesInputCode, 
                        string SalesInputName, 
                        string FrontEmployeeCd, 
                        string FrontEmployeeNm, 
                        string SalesEmployeeCd, 
                        string SalesEmployeeNm, 
                        int PrtBLGoodsCode, 
                        string PrtBLGoodsName, 
                        int SalesCode, 
                        string SalesCdNm, 
                        double WorkManHour, 
                        int WayToOrder, 
                        double SalesUnitTotal, 
                        string CooprtKind, 
                        string AutoAnswerDivSCM) {
                SalesDetailRow rowSalesDetailRow = ((SalesDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MemoExist,
                        MemoExistName,
                        AcceptAnOrderNo,
                        AcptAnOdrStatus,
                        SalesSlipNum,
                        SalesRowNo,
                        SalesRowDerivNo,
                        SectionCode,
                        SubSectionCode,
                        MinSectionCode,
                        SalesDate,
                        SalesDateString,
                        CommonSeqNo,
                        SalesSlipDtlNum,
                        AcptAnOdrStatusSrc,
                        SalesSlipDtlNumSrc,
                        SalesSlipCdDtl,
                        ServiceSlipCd,
                        EstimateDtlDivide,
                        SalesDepositsDiv,
                        StockMngExistCd,
                        DeliGdsCmpltDueDate,
                        DeliGdsCmpltDueDateString,
                        GoodsKindCode,
                        GoodsSearchDivCd,
                        GoodsMakerCd,
                        MakerName,
                        GoodsNo,
                        GoodsName,
                        GoodsSetDivCd,
                        LargeGoodsGanreCode,
                        LargeGoodsGanreName,
                        MediumGoodsGanreCode,
                        MediumGoodsGanreName,
                        DetailGoodsGanreCode,
                        DetailGoodsGanreName,
                        GoodsLGroup,
                        GoodsLGroupName,
                        GoodsMGroup,
                        GoodsMGroupName,
                        BLGroupCode,
                        BLGroupName,
                        BLGoodsCode,
                        BLGoodsFullName,
                        EnterpriseGanreCode,
                        EnterpriseGanreName,
                        WarehouseCode,
                        WarehouseName,
                        WarehouseShelfNo,
                        SalesOrderDivCd,
                        UnitCode,
                        UnitName,
                        GoodsRateRank,
                        CustRateGrpCode,
                        SuppRateGrpCode,
                        ListPriceRate,
                        RateDivLPrice,
                        UnPrcCalcCdLPrice,
                        PriceCdLPrice,
                        StdUnPrcLPrice,
                        FracProcUnitLPrice,
                        FracProcLPrice,
                        ListPriceTaxIncFl,
                        ListPriceTaxExcFl,
                        ListPriceChngCd,
                        SalesRate,
                        RateDivSalUnPrc,
                        UnPrcCalcCdSalUnPrc,
                        PriceCdSalUnPrc,
                        StdUnPrcSalUnPrc,
                        FracProcUnitSalUnPrc,
                        FracProcSalUnPrc,
                        SalesUnPrcTaxIncFl,
                        SalesUnPrcTaxExcFl,
                        SalesUnPrcChngCd,
                        CostRate,
                        RateDivUnCst,
                        UnPrcCalcCdUnCst,
                        PriceCdUnCst,
                        StdUnPrcUnCst,
                        FracProcUnitUnCst,
                        FracProcUnCst,
                        SalesUnitCost,
                        SalesUnitCostChngDiv,
                        BargainCd,
                        BargainNm,
                        ShipmentCnt,
                        SalesMoneyTaxInc,
                        SalesMoneyTaxExc,
                        SalsePriceConsTax,
                        Cost,
                        GrsProfitChkDiv,
                        SalesGoodsCd,
                        TaxAdjust,
                        BalanceAdjust,
                        TaxationDivCd,
                        PartySlipNumDtl,
                        DtlNote,
                        SupplierCd,
                        SupplierSnm,
                        ResultsAddUpSecCd,
                        OrderNumber,
                        AcceptAnOrderCnt,
                        AcptAnOdrAdjustCnt,
                        AcptAnOdrRemainCnt,
                        SlipMemo1,
                        SlipMemo2,
                        SlipMemo3,
                        SlipMemo4,
                        SlipMemo5,
                        SlipMemo6,
                        InsideMemo1,
                        InsideMemo2,
                        InsideMemo3,
                        InsideMemo4,
                        InsideMemo5,
                        InsideMemo6,
                        BfListPrice,
                        BfSalesUnitPrice,
                        BfUnitCost,
                        PrtGoodsNo,
                        PrtGoodsName,
                        PrtGoodsMakerCd,
                        PrtGoodsMakerNm,
                        ContractDivCdDtl,
                        CustomerCode,
                        CustomerName,
                        CustomerName2,
                        CustomerSnm,
                        AddresseeCode,
                        AddresseeName,
                        AddresseeName2,
                        SalesInputCode,
                        SalesInputName,
                        FrontEmployeeCd,
                        FrontEmployeeNm,
                        SalesEmployeeCd,
                        SalesEmployeeNm,
                        PrtBLGoodsCode,
                        PrtBLGoodsName,
                        SalesCode,
                        SalesCdNm,
                        WorkManHour,
                        WayToOrder,
                        SalesUnitTotal,
                        CooprtKind,
                        AutoAnswerDivSCM};
                rowSalesDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesDetailRow);
                return rowSalesDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRow FindByAcptAnOdrStatusSalesSlipNumSalesRowNoSalesRowDerivNo(int AcptAnOdrStatus, string SalesSlipNum, int SalesRowNo, int SalesRowDerivNo) {
                return ((SalesDetailRow)(this.Rows.Find(new object[] {
                            AcptAnOdrStatus,
                            SalesSlipNum,
                            SalesRowNo,
                            SalesRowDerivNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesDetailDataTable cln = ((SalesDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMemoExist = base.Columns["MemoExist"];
                this.columnMemoExistName = base.Columns["MemoExistName"];
                this.columnAcceptAnOrderNo = base.Columns["AcceptAnOrderNo"];
                this.columnAcptAnOdrStatus = base.Columns["AcptAnOdrStatus"];
                this.columnSalesSlipNum = base.Columns["SalesSlipNum"];
                this.columnSalesRowNo = base.Columns["SalesRowNo"];
                this.columnSalesRowDerivNo = base.Columns["SalesRowDerivNo"];
                this.columnSectionCode = base.Columns["SectionCode"];
                this.columnSubSectionCode = base.Columns["SubSectionCode"];
                this.columnMinSectionCode = base.Columns["MinSectionCode"];
                this.columnSalesDate = base.Columns["SalesDate"];
                this.columnSalesDateString = base.Columns["SalesDateString"];
                this.columnCommonSeqNo = base.Columns["CommonSeqNo"];
                this.columnSalesSlipDtlNum = base.Columns["SalesSlipDtlNum"];
                this.columnAcptAnOdrStatusSrc = base.Columns["AcptAnOdrStatusSrc"];
                this.columnSalesSlipDtlNumSrc = base.Columns["SalesSlipDtlNumSrc"];
                this.columnSalesSlipCdDtl = base.Columns["SalesSlipCdDtl"];
                this.columnServiceSlipCd = base.Columns["ServiceSlipCd"];
                this.columnEstimateDtlDivide = base.Columns["EstimateDtlDivide"];
                this.columnSalesDepositsDiv = base.Columns["SalesDepositsDiv"];
                this.columnStockMngExistCd = base.Columns["StockMngExistCd"];
                this.columnDeliGdsCmpltDueDate = base.Columns["DeliGdsCmpltDueDate"];
                this.columnDeliGdsCmpltDueDateString = base.Columns["DeliGdsCmpltDueDateString"];
                this.columnGoodsKindCode = base.Columns["GoodsKindCode"];
                this.columnGoodsSearchDivCd = base.Columns["GoodsSearchDivCd"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnMakerName = base.Columns["MakerName"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnGoodsSetDivCd = base.Columns["GoodsSetDivCd"];
                this.columnLargeGoodsGanreCode = base.Columns["LargeGoodsGanreCode"];
                this.columnLargeGoodsGanreName = base.Columns["LargeGoodsGanreName"];
                this.columnMediumGoodsGanreCode = base.Columns["MediumGoodsGanreCode"];
                this.columnMediumGoodsGanreName = base.Columns["MediumGoodsGanreName"];
                this.columnDetailGoodsGanreCode = base.Columns["DetailGoodsGanreCode"];
                this.columnDetailGoodsGanreName = base.Columns["DetailGoodsGanreName"];
                this.columnGoodsLGroup = base.Columns["GoodsLGroup"];
                this.columnGoodsLGroupName = base.Columns["GoodsLGroupName"];
                this.columnGoodsMGroup = base.Columns["GoodsMGroup"];
                this.columnGoodsMGroupName = base.Columns["GoodsMGroupName"];
                this.columnBLGroupCode = base.Columns["BLGroupCode"];
                this.columnBLGroupName = base.Columns["BLGroupName"];
                this.columnBLGoodsCode = base.Columns["BLGoodsCode"];
                this.columnBLGoodsFullName = base.Columns["BLGoodsFullName"];
                this.columnEnterpriseGanreCode = base.Columns["EnterpriseGanreCode"];
                this.columnEnterpriseGanreName = base.Columns["EnterpriseGanreName"];
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnWarehouseName = base.Columns["WarehouseName"];
                this.columnWarehouseShelfNo = base.Columns["WarehouseShelfNo"];
                this.columnSalesOrderDivCd = base.Columns["SalesOrderDivCd"];
                this.columnUnitCode = base.Columns["UnitCode"];
                this.columnUnitName = base.Columns["UnitName"];
                this.columnGoodsRateRank = base.Columns["GoodsRateRank"];
                this.columnCustRateGrpCode = base.Columns["CustRateGrpCode"];
                this.columnSuppRateGrpCode = base.Columns["SuppRateGrpCode"];
                this.columnListPriceRate = base.Columns["ListPriceRate"];
                this.columnRateDivLPrice = base.Columns["RateDivLPrice"];
                this.columnUnPrcCalcCdLPrice = base.Columns["UnPrcCalcCdLPrice"];
                this.columnPriceCdLPrice = base.Columns["PriceCdLPrice"];
                this.columnStdUnPrcLPrice = base.Columns["StdUnPrcLPrice"];
                this.columnFracProcUnitLPrice = base.Columns["FracProcUnitLPrice"];
                this.columnFracProcLPrice = base.Columns["FracProcLPrice"];
                this.columnListPriceTaxIncFl = base.Columns["ListPriceTaxIncFl"];
                this.columnListPriceTaxExcFl = base.Columns["ListPriceTaxExcFl"];
                this.columnListPriceChngCd = base.Columns["ListPriceChngCd"];
                this.columnSalesRate = base.Columns["SalesRate"];
                this.columnRateDivSalUnPrc = base.Columns["RateDivSalUnPrc"];
                this.columnUnPrcCalcCdSalUnPrc = base.Columns["UnPrcCalcCdSalUnPrc"];
                this.columnPriceCdSalUnPrc = base.Columns["PriceCdSalUnPrc"];
                this.columnStdUnPrcSalUnPrc = base.Columns["StdUnPrcSalUnPrc"];
                this.columnFracProcUnitSalUnPrc = base.Columns["FracProcUnitSalUnPrc"];
                this.columnFracProcSalUnPrc = base.Columns["FracProcSalUnPrc"];
                this.columnSalesUnPrcTaxIncFl = base.Columns["SalesUnPrcTaxIncFl"];
                this.columnSalesUnPrcTaxExcFl = base.Columns["SalesUnPrcTaxExcFl"];
                this.columnSalesUnPrcChngCd = base.Columns["SalesUnPrcChngCd"];
                this.columnCostRate = base.Columns["CostRate"];
                this.columnRateDivUnCst = base.Columns["RateDivUnCst"];
                this.columnUnPrcCalcCdUnCst = base.Columns["UnPrcCalcCdUnCst"];
                this.columnPriceCdUnCst = base.Columns["PriceCdUnCst"];
                this.columnStdUnPrcUnCst = base.Columns["StdUnPrcUnCst"];
                this.columnFracProcUnitUnCst = base.Columns["FracProcUnitUnCst"];
                this.columnFracProcUnCst = base.Columns["FracProcUnCst"];
                this.columnSalesUnitCost = base.Columns["SalesUnitCost"];
                this.columnSalesUnitCostChngDiv = base.Columns["SalesUnitCostChngDiv"];
                this.columnBargainCd = base.Columns["BargainCd"];
                this.columnBargainNm = base.Columns["BargainNm"];
                this.columnShipmentCnt = base.Columns["ShipmentCnt"];
                this.columnSalesMoneyTaxInc = base.Columns["SalesMoneyTaxInc"];
                this.columnSalesMoneyTaxExc = base.Columns["SalesMoneyTaxExc"];
                this.columnSalsePriceConsTax = base.Columns["SalsePriceConsTax"];
                this.columnCost = base.Columns["Cost"];
                this.columnGrsProfitChkDiv = base.Columns["GrsProfitChkDiv"];
                this.columnSalesGoodsCd = base.Columns["SalesGoodsCd"];
                this.columnTaxAdjust = base.Columns["TaxAdjust"];
                this.columnBalanceAdjust = base.Columns["BalanceAdjust"];
                this.columnTaxationDivCd = base.Columns["TaxationDivCd"];
                this.columnPartySlipNumDtl = base.Columns["PartySlipNumDtl"];
                this.columnDtlNote = base.Columns["DtlNote"];
                this.columnSupplierCd = base.Columns["SupplierCd"];
                this.columnSupplierSnm = base.Columns["SupplierSnm"];
                this.columnResultsAddUpSecCd = base.Columns["ResultsAddUpSecCd"];
                this.columnOrderNumber = base.Columns["OrderNumber"];
                this.columnAcceptAnOrderCnt = base.Columns["AcceptAnOrderCnt"];
                this.columnAcptAnOdrAdjustCnt = base.Columns["AcptAnOdrAdjustCnt"];
                this.columnAcptAnOdrRemainCnt = base.Columns["AcptAnOdrRemainCnt"];
                this.columnSlipMemo1 = base.Columns["SlipMemo1"];
                this.columnSlipMemo2 = base.Columns["SlipMemo2"];
                this.columnSlipMemo3 = base.Columns["SlipMemo3"];
                this.columnSlipMemo4 = base.Columns["SlipMemo4"];
                this.columnSlipMemo5 = base.Columns["SlipMemo5"];
                this.columnSlipMemo6 = base.Columns["SlipMemo6"];
                this.columnInsideMemo1 = base.Columns["InsideMemo1"];
                this.columnInsideMemo2 = base.Columns["InsideMemo2"];
                this.columnInsideMemo3 = base.Columns["InsideMemo3"];
                this.columnInsideMemo4 = base.Columns["InsideMemo4"];
                this.columnInsideMemo5 = base.Columns["InsideMemo5"];
                this.columnInsideMemo6 = base.Columns["InsideMemo6"];
                this.columnBfListPrice = base.Columns["BfListPrice"];
                this.columnBfSalesUnitPrice = base.Columns["BfSalesUnitPrice"];
                this.columnBfUnitCost = base.Columns["BfUnitCost"];
                this.columnPrtGoodsNo = base.Columns["PrtGoodsNo"];
                this.columnPrtGoodsName = base.Columns["PrtGoodsName"];
                this.columnPrtGoodsMakerCd = base.Columns["PrtGoodsMakerCd"];
                this.columnPrtGoodsMakerNm = base.Columns["PrtGoodsMakerNm"];
                this.columnContractDivCdDtl = base.Columns["ContractDivCdDtl"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerName2 = base.Columns["CustomerName2"];
                this.columnCustomerSnm = base.Columns["CustomerSnm"];
                this.columnAddresseeCode = base.Columns["AddresseeCode"];
                this.columnAddresseeName = base.Columns["AddresseeName"];
                this.columnAddresseeName2 = base.Columns["AddresseeName2"];
                this.columnSalesInputCode = base.Columns["SalesInputCode"];
                this.columnSalesInputName = base.Columns["SalesInputName"];
                this.columnFrontEmployeeCd = base.Columns["FrontEmployeeCd"];
                this.columnFrontEmployeeNm = base.Columns["FrontEmployeeNm"];
                this.columnSalesEmployeeCd = base.Columns["SalesEmployeeCd"];
                this.columnSalesEmployeeNm = base.Columns["SalesEmployeeNm"];
                this.columnPrtBLGoodsCode = base.Columns["PrtBLGoodsCode"];
                this.columnPrtBLGoodsName = base.Columns["PrtBLGoodsName"];
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnSalesCdNm = base.Columns["SalesCdNm"];
                this.columnWorkManHour = base.Columns["WorkManHour"];
                this.columnWayToOrder = base.Columns["WayToOrder"];
                this.columnSalesUnitTotal = base.Columns["SalesUnitTotal"];
                this.columnCooprtKind = base.Columns["CooprtKind"];
                this.columnAutoAnswerDivSCM = base.Columns["AutoAnswerDivSCM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMemoExist = new global::System.Data.DataColumn("MemoExist", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemoExist);
                this.columnMemoExistName = new global::System.Data.DataColumn("MemoExistName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemoExistName);
                this.columnAcceptAnOrderNo = new global::System.Data.DataColumn("AcceptAnOrderNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptAnOrderNo);
                this.columnAcptAnOdrStatus = new global::System.Data.DataColumn("AcptAnOdrStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcptAnOdrStatus);
                this.columnSalesSlipNum = new global::System.Data.DataColumn("SalesSlipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipNum);
                this.columnSalesRowNo = new global::System.Data.DataColumn("SalesRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesRowNo);
                this.columnSalesRowDerivNo = new global::System.Data.DataColumn("SalesRowDerivNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesRowDerivNo);
                this.columnSectionCode = new global::System.Data.DataColumn("SectionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionCode);
                this.columnSubSectionCode = new global::System.Data.DataColumn("SubSectionCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubSectionCode);
                this.columnMinSectionCode = new global::System.Data.DataColumn("MinSectionCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinSectionCode);
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
                this.columnSalesDateString = new global::System.Data.DataColumn("SalesDateString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDateString);
                this.columnCommonSeqNo = new global::System.Data.DataColumn("CommonSeqNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommonSeqNo);
                this.columnSalesSlipDtlNum = new global::System.Data.DataColumn("SalesSlipDtlNum", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipDtlNum);
                this.columnAcptAnOdrStatusSrc = new global::System.Data.DataColumn("AcptAnOdrStatusSrc", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcptAnOdrStatusSrc);
                this.columnSalesSlipDtlNumSrc = new global::System.Data.DataColumn("SalesSlipDtlNumSrc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipDtlNumSrc);
                this.columnSalesSlipCdDtl = new global::System.Data.DataColumn("SalesSlipCdDtl", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesSlipCdDtl);
                this.columnServiceSlipCd = new global::System.Data.DataColumn("ServiceSlipCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceSlipCd);
                this.columnEstimateDtlDivide = new global::System.Data.DataColumn("EstimateDtlDivide", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstimateDtlDivide);
                this.columnSalesDepositsDiv = new global::System.Data.DataColumn("SalesDepositsDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDepositsDiv);
                this.columnStockMngExistCd = new global::System.Data.DataColumn("StockMngExistCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockMngExistCd);
                this.columnDeliGdsCmpltDueDate = new global::System.Data.DataColumn("DeliGdsCmpltDueDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliGdsCmpltDueDate);
                this.columnDeliGdsCmpltDueDateString = new global::System.Data.DataColumn("DeliGdsCmpltDueDateString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliGdsCmpltDueDateString);
                this.columnGoodsKindCode = new global::System.Data.DataColumn("GoodsKindCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsKindCode);
                this.columnGoodsSearchDivCd = new global::System.Data.DataColumn("GoodsSearchDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsSearchDivCd);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnMakerName = new global::System.Data.DataColumn("MakerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerName);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnGoodsSetDivCd = new global::System.Data.DataColumn("GoodsSetDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsSetDivCd);
                this.columnLargeGoodsGanreCode = new global::System.Data.DataColumn("LargeGoodsGanreCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLargeGoodsGanreCode);
                this.columnLargeGoodsGanreName = new global::System.Data.DataColumn("LargeGoodsGanreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLargeGoodsGanreName);
                this.columnMediumGoodsGanreCode = new global::System.Data.DataColumn("MediumGoodsGanreCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMediumGoodsGanreCode);
                this.columnMediumGoodsGanreName = new global::System.Data.DataColumn("MediumGoodsGanreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMediumGoodsGanreName);
                this.columnDetailGoodsGanreCode = new global::System.Data.DataColumn("DetailGoodsGanreCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailGoodsGanreCode);
                this.columnDetailGoodsGanreName = new global::System.Data.DataColumn("DetailGoodsGanreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailGoodsGanreName);
                this.columnGoodsLGroup = new global::System.Data.DataColumn("GoodsLGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsLGroup);
                this.columnGoodsLGroupName = new global::System.Data.DataColumn("GoodsLGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsLGroupName);
                this.columnGoodsMGroup = new global::System.Data.DataColumn("GoodsMGroup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMGroup);
                this.columnGoodsMGroupName = new global::System.Data.DataColumn("GoodsMGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMGroupName);
                this.columnBLGroupCode = new global::System.Data.DataColumn("BLGroupCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGroupCode);
                this.columnBLGroupName = new global::System.Data.DataColumn("BLGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGroupName);
                this.columnBLGoodsCode = new global::System.Data.DataColumn("BLGoodsCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGoodsCode);
                this.columnBLGoodsFullName = new global::System.Data.DataColumn("BLGoodsFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGoodsFullName);
                this.columnEnterpriseGanreCode = new global::System.Data.DataColumn("EnterpriseGanreCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterpriseGanreCode);
                this.columnEnterpriseGanreName = new global::System.Data.DataColumn("EnterpriseGanreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterpriseGanreName);
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnWarehouseName = new global::System.Data.DataColumn("WarehouseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseName);
                this.columnWarehouseShelfNo = new global::System.Data.DataColumn("WarehouseShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseShelfNo);
                this.columnSalesOrderDivCd = new global::System.Data.DataColumn("SalesOrderDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesOrderDivCd);
                this.columnUnitCode = new global::System.Data.DataColumn("UnitCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCode);
                this.columnUnitName = new global::System.Data.DataColumn("UnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
                this.columnGoodsRateRank = new global::System.Data.DataColumn("GoodsRateRank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsRateRank);
                this.columnCustRateGrpCode = new global::System.Data.DataColumn("CustRateGrpCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustRateGrpCode);
                this.columnSuppRateGrpCode = new global::System.Data.DataColumn("SuppRateGrpCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuppRateGrpCode);
                this.columnListPriceRate = new global::System.Data.DataColumn("ListPriceRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPriceRate);
                this.columnRateDivLPrice = new global::System.Data.DataColumn("RateDivLPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateDivLPrice);
                this.columnUnPrcCalcCdLPrice = new global::System.Data.DataColumn("UnPrcCalcCdLPrice", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnPrcCalcCdLPrice);
                this.columnPriceCdLPrice = new global::System.Data.DataColumn("PriceCdLPrice", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceCdLPrice);
                this.columnStdUnPrcLPrice = new global::System.Data.DataColumn("StdUnPrcLPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStdUnPrcLPrice);
                this.columnFracProcUnitLPrice = new global::System.Data.DataColumn("FracProcUnitLPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFracProcUnitLPrice);
                this.columnFracProcLPrice = new global::System.Data.DataColumn("FracProcLPrice", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFracProcLPrice);
                this.columnListPriceTaxIncFl = new global::System.Data.DataColumn("ListPriceTaxIncFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPriceTaxIncFl);
                this.columnListPriceTaxExcFl = new global::System.Data.DataColumn("ListPriceTaxExcFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPriceTaxExcFl);
                this.columnListPriceChngCd = new global::System.Data.DataColumn("ListPriceChngCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPriceChngCd);
                this.columnSalesRate = new global::System.Data.DataColumn("SalesRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesRate);
                this.columnRateDivSalUnPrc = new global::System.Data.DataColumn("RateDivSalUnPrc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateDivSalUnPrc);
                this.columnUnPrcCalcCdSalUnPrc = new global::System.Data.DataColumn("UnPrcCalcCdSalUnPrc", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnPrcCalcCdSalUnPrc);
                this.columnPriceCdSalUnPrc = new global::System.Data.DataColumn("PriceCdSalUnPrc", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceCdSalUnPrc);
                this.columnStdUnPrcSalUnPrc = new global::System.Data.DataColumn("StdUnPrcSalUnPrc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStdUnPrcSalUnPrc);
                this.columnFracProcUnitSalUnPrc = new global::System.Data.DataColumn("FracProcUnitSalUnPrc", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFracProcUnitSalUnPrc);
                this.columnFracProcSalUnPrc = new global::System.Data.DataColumn("FracProcSalUnPrc", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFracProcSalUnPrc);
                this.columnSalesUnPrcTaxIncFl = new global::System.Data.DataColumn("SalesUnPrcTaxIncFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnPrcTaxIncFl);
                this.columnSalesUnPrcTaxExcFl = new global::System.Data.DataColumn("SalesUnPrcTaxExcFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnPrcTaxExcFl);
                this.columnSalesUnPrcChngCd = new global::System.Data.DataColumn("SalesUnPrcChngCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnPrcChngCd);
                this.columnCostRate = new global::System.Data.DataColumn("CostRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostRate);
                this.columnRateDivUnCst = new global::System.Data.DataColumn("RateDivUnCst", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateDivUnCst);
                this.columnUnPrcCalcCdUnCst = new global::System.Data.DataColumn("UnPrcCalcCdUnCst", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnPrcCalcCdUnCst);
                this.columnPriceCdUnCst = new global::System.Data.DataColumn("PriceCdUnCst", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceCdUnCst);
                this.columnStdUnPrcUnCst = new global::System.Data.DataColumn("StdUnPrcUnCst", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStdUnPrcUnCst);
                this.columnFracProcUnitUnCst = new global::System.Data.DataColumn("FracProcUnitUnCst", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFracProcUnitUnCst);
                this.columnFracProcUnCst = new global::System.Data.DataColumn("FracProcUnCst", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFracProcUnCst);
                this.columnSalesUnitCost = new global::System.Data.DataColumn("SalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnitCost);
                this.columnSalesUnitCostChngDiv = new global::System.Data.DataColumn("SalesUnitCostChngDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnitCostChngDiv);
                this.columnBargainCd = new global::System.Data.DataColumn("BargainCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBargainCd);
                this.columnBargainNm = new global::System.Data.DataColumn("BargainNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBargainNm);
                this.columnShipmentCnt = new global::System.Data.DataColumn("ShipmentCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentCnt);
                this.columnSalesMoneyTaxInc = new global::System.Data.DataColumn("SalesMoneyTaxInc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMoneyTaxInc);
                this.columnSalesMoneyTaxExc = new global::System.Data.DataColumn("SalesMoneyTaxExc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesMoneyTaxExc);
                this.columnSalsePriceConsTax = new global::System.Data.DataColumn("SalsePriceConsTax", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalsePriceConsTax);
                this.columnCost = new global::System.Data.DataColumn("Cost", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCost);
                this.columnGrsProfitChkDiv = new global::System.Data.DataColumn("GrsProfitChkDiv", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrsProfitChkDiv);
                this.columnSalesGoodsCd = new global::System.Data.DataColumn("SalesGoodsCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesGoodsCd);
                this.columnTaxAdjust = new global::System.Data.DataColumn("TaxAdjust", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAdjust);
                this.columnBalanceAdjust = new global::System.Data.DataColumn("BalanceAdjust", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalanceAdjust);
                this.columnTaxationDivCd = new global::System.Data.DataColumn("TaxationDivCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxationDivCd);
                this.columnPartySlipNumDtl = new global::System.Data.DataColumn("PartySlipNumDtl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartySlipNumDtl);
                this.columnDtlNote = new global::System.Data.DataColumn("DtlNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDtlNote);
                this.columnSupplierCd = new global::System.Data.DataColumn("SupplierCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCd);
                this.columnSupplierSnm = new global::System.Data.DataColumn("SupplierSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSnm);
                this.columnResultsAddUpSecCd = new global::System.Data.DataColumn("ResultsAddUpSecCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultsAddUpSecCd);
                this.columnOrderNumber = new global::System.Data.DataColumn("OrderNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNumber);
                this.columnAcceptAnOrderCnt = new global::System.Data.DataColumn("AcceptAnOrderCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcceptAnOrderCnt);
                this.columnAcptAnOdrAdjustCnt = new global::System.Data.DataColumn("AcptAnOdrAdjustCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcptAnOdrAdjustCnt);
                this.columnAcptAnOdrRemainCnt = new global::System.Data.DataColumn("AcptAnOdrRemainCnt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcptAnOdrRemainCnt);
                this.columnSlipMemo1 = new global::System.Data.DataColumn("SlipMemo1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipMemo1);
                this.columnSlipMemo2 = new global::System.Data.DataColumn("SlipMemo2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipMemo2);
                this.columnSlipMemo3 = new global::System.Data.DataColumn("SlipMemo3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipMemo3);
                this.columnSlipMemo4 = new global::System.Data.DataColumn("SlipMemo4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipMemo4);
                this.columnSlipMemo5 = new global::System.Data.DataColumn("SlipMemo5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipMemo5);
                this.columnSlipMemo6 = new global::System.Data.DataColumn("SlipMemo6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipMemo6);
                this.columnInsideMemo1 = new global::System.Data.DataColumn("InsideMemo1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsideMemo1);
                this.columnInsideMemo2 = new global::System.Data.DataColumn("InsideMemo2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsideMemo2);
                this.columnInsideMemo3 = new global::System.Data.DataColumn("InsideMemo3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsideMemo3);
                this.columnInsideMemo4 = new global::System.Data.DataColumn("InsideMemo4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsideMemo4);
                this.columnInsideMemo5 = new global::System.Data.DataColumn("InsideMemo5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsideMemo5);
                this.columnInsideMemo6 = new global::System.Data.DataColumn("InsideMemo6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsideMemo6);
                this.columnBfListPrice = new global::System.Data.DataColumn("BfListPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfListPrice);
                this.columnBfSalesUnitPrice = new global::System.Data.DataColumn("BfSalesUnitPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfSalesUnitPrice);
                this.columnBfUnitCost = new global::System.Data.DataColumn("BfUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfUnitCost);
                this.columnPrtGoodsNo = new global::System.Data.DataColumn("PrtGoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrtGoodsNo);
                this.columnPrtGoodsName = new global::System.Data.DataColumn("PrtGoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrtGoodsName);
                this.columnPrtGoodsMakerCd = new global::System.Data.DataColumn("PrtGoodsMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrtGoodsMakerCd);
                this.columnPrtGoodsMakerNm = new global::System.Data.DataColumn("PrtGoodsMakerNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrtGoodsMakerNm);
                this.columnContractDivCdDtl = new global::System.Data.DataColumn("ContractDivCdDtl", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractDivCdDtl);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerName2 = new global::System.Data.DataColumn("CustomerName2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName2);
                this.columnCustomerSnm = new global::System.Data.DataColumn("CustomerSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerSnm);
                this.columnAddresseeCode = new global::System.Data.DataColumn("AddresseeCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeCode);
                this.columnAddresseeName = new global::System.Data.DataColumn("AddresseeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeName);
                this.columnAddresseeName2 = new global::System.Data.DataColumn("AddresseeName2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddresseeName2);
                this.columnSalesInputCode = new global::System.Data.DataColumn("SalesInputCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesInputCode);
                this.columnSalesInputName = new global::System.Data.DataColumn("SalesInputName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesInputName);
                this.columnFrontEmployeeCd = new global::System.Data.DataColumn("FrontEmployeeCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrontEmployeeCd);
                this.columnFrontEmployeeNm = new global::System.Data.DataColumn("FrontEmployeeNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrontEmployeeNm);
                this.columnSalesEmployeeCd = new global::System.Data.DataColumn("SalesEmployeeCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesEmployeeCd);
                this.columnSalesEmployeeNm = new global::System.Data.DataColumn("SalesEmployeeNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesEmployeeNm);
                this.columnPrtBLGoodsCode = new global::System.Data.DataColumn("PrtBLGoodsCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrtBLGoodsCode);
                this.columnPrtBLGoodsName = new global::System.Data.DataColumn("PrtBLGoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrtBLGoodsName);
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnSalesCdNm = new global::System.Data.DataColumn("SalesCdNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCdNm);
                this.columnWorkManHour = new global::System.Data.DataColumn("WorkManHour", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkManHour);
                this.columnWayToOrder = new global::System.Data.DataColumn("WayToOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWayToOrder);
                this.columnSalesUnitTotal = new global::System.Data.DataColumn("SalesUnitTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnitTotal);
                this.columnCooprtKind = new global::System.Data.DataColumn("CooprtKind", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCooprtKind);
                this.columnAutoAnswerDivSCM = new global::System.Data.DataColumn("AutoAnswerDivSCM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoAnswerDivSCM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("SalesDetailKey1", new global::System.Data.DataColumn[] {
                                this.columnAcptAnOdrStatus,
                                this.columnSalesSlipNum,
                                this.columnSalesRowNo,
                                this.columnSalesRowDerivNo}, true));
                this.columnMemoExist.Caption = "メモ存在フラグ";
                this.columnMemoExistName.Caption = "メモ存在";
                this.columnAcceptAnOrderNo.Caption = "受注番号";
                this.columnAcptAnOdrStatus.AllowDBNull = false;
                this.columnAcptAnOdrStatus.Caption = "受注ステータス";
                this.columnSalesSlipNum.AllowDBNull = false;
                this.columnSalesSlipNum.Caption = "売上伝票番号";
                this.columnSalesRowNo.AllowDBNull = false;
                this.columnSalesRowNo.Caption = "売上行番号";
                this.columnSalesRowDerivNo.AllowDBNull = false;
                this.columnSectionCode.Caption = "拠点コード";
                this.columnSubSectionCode.Caption = "部門コード";
                this.columnMinSectionCode.Caption = "課コード";
                this.columnSalesDate.Caption = "売上日付";
                this.columnSalesDateString.Caption = "売上日付";
                this.columnCommonSeqNo.Caption = "共通通番";
                this.columnSalesSlipDtlNum.Caption = "売上明細通番";
                this.columnAcptAnOdrStatusSrc.Caption = "受注ステータス（元）";
                this.columnSalesSlipDtlNumSrc.Caption = "売上明細通番（元）";
                this.columnSalesSlipCdDtl.Caption = "売上伝票区分（明細）";
                this.columnServiceSlipCd.Caption = "サービス伝票区分";
                this.columnEstimateDtlDivide.Caption = "見積明細区分";
                this.columnSalesDepositsDiv.Caption = "売上預り金区分";
                this.columnStockMngExistCd.Caption = "在庫管理有無区分";
                this.columnDeliGdsCmpltDueDate.Caption = "納品完了予定日";
                this.columnDeliGdsCmpltDueDateString.Caption = "納品完了予定日";
                this.columnGoodsKindCode.Caption = "商品属性";
                this.columnGoodsMakerCd.Caption = "商品メーカーコード";
                this.columnMakerName.Caption = "メーカー名称";
                this.columnGoodsNo.Caption = "商品番号";
                this.columnGoodsName.Caption = "商品名称";
                this.columnGoodsSetDivCd.Caption = "セット商品区分";
                this.columnLargeGoodsGanreCode.Caption = "商品区分グループコード";
                this.columnLargeGoodsGanreName.Caption = "商品区分グループ名称";
                this.columnMediumGoodsGanreCode.Caption = "商品区分コード";
                this.columnMediumGoodsGanreName.Caption = "商品区分名称";
                this.columnDetailGoodsGanreCode.Caption = "商品区分詳細コード";
                this.columnDetailGoodsGanreName.Caption = "商品区分詳細名称";
                this.columnBLGoodsCode.Caption = "BL商品コード";
                this.columnBLGoodsFullName.Caption = "BL商品コード名称（全角）";
                this.columnEnterpriseGanreCode.Caption = "自社分類コード";
                this.columnEnterpriseGanreName.Caption = "自社分類名称";
                this.columnWarehouseCode.Caption = "倉庫コード";
                this.columnWarehouseName.Caption = "倉庫名称";
                this.columnWarehouseShelfNo.Caption = "倉庫棚番";
                this.columnSalesOrderDivCd.Caption = "売上在庫取寄せ区分";
                this.columnUnitCode.Caption = "単位コード";
                this.columnUnitName.Caption = "単位名称";
                this.columnGoodsRateRank.Caption = "商品掛率ランク";
                this.columnCustRateGrpCode.Caption = "得意先掛率グループコード";
                this.columnSuppRateGrpCode.Caption = "仕入先掛率グループコード";
                this.columnListPriceRate.Caption = "定価率";
                this.columnRateDivLPrice.Caption = "掛率設定区分（定価）";
                this.columnUnPrcCalcCdLPrice.Caption = "単価算出区分（定価）";
                this.columnPriceCdLPrice.Caption = "価格区分（定価）";
                this.columnStdUnPrcLPrice.Caption = "基準単価（定価）";
                this.columnFracProcUnitLPrice.Caption = "端数処理単位（定価）";
                this.columnFracProcLPrice.Caption = "端数処理（定価）";
                this.columnListPriceTaxIncFl.Caption = "定価（税抜，浮動）";
                this.columnListPriceTaxExcFl.Caption = "定価（税込，浮動）";
                this.columnListPriceChngCd.Caption = "定価変更区分";
                this.columnSalesRate.Caption = "売価率";
                this.columnRateDivSalUnPrc.Caption = "掛率設定区分（売上単価）";
                this.columnUnPrcCalcCdSalUnPrc.Caption = "単価算出区分（売上単価）";
                this.columnPriceCdSalUnPrc.Caption = "価格区分（売上単価）";
                this.columnStdUnPrcSalUnPrc.Caption = "基準単価（売上単価）";
                this.columnFracProcUnitSalUnPrc.Caption = "端数処理単位（売上単価）";
                this.columnFracProcSalUnPrc.Caption = "端数処理（売上単価）";
                this.columnSalesUnPrcTaxIncFl.Caption = "売上単価（税込，浮動）";
                this.columnSalesUnPrcTaxExcFl.Caption = "売上単価（税抜，浮動）";
                this.columnSalesUnPrcChngCd.Caption = "売上単価変更区分";
                this.columnCostRate.Caption = "原価率";
                this.columnRateDivUnCst.Caption = "掛率設定区分（原価単価）";
                this.columnUnPrcCalcCdUnCst.Caption = "単価算出区分（原価単価）";
                this.columnPriceCdUnCst.Caption = "価格区分（原価単価）";
                this.columnStdUnPrcUnCst.Caption = "基準単価（原価単価）";
                this.columnFracProcUnitUnCst.Caption = "端数処理単位（原価単価）";
                this.columnFracProcUnCst.Caption = "端数処理（原価単価）";
                this.columnSalesUnitCost.Caption = "原価単価";
                this.columnSalesUnitCostChngDiv.Caption = "原価単価変更区分";
                this.columnBargainCd.Caption = "特売区分コード";
                this.columnBargainNm.Caption = "特売区分名称";
                this.columnShipmentCnt.Caption = "出荷数";
                this.columnSalesMoneyTaxInc.Caption = "売上金額（税込み）";
                this.columnSalesMoneyTaxExc.Caption = "売上金額（税抜き）";
                this.columnSalsePriceConsTax.Caption = "売上金額（税抜き）";
                this.columnCost.Caption = "原価";
                this.columnGrsProfitChkDiv.Caption = "粗利チェック区分";
                this.columnSalesGoodsCd.Caption = "売上商品区分";
                this.columnTaxAdjust.Caption = "消費税調整額";
                this.columnBalanceAdjust.Caption = "残高調整額";
                this.columnTaxationDivCd.Caption = "課税区分";
                this.columnPartySlipNumDtl.Caption = "相手先伝票番号（明細）";
                this.columnDtlNote.Caption = "明細備考";
                this.columnSupplierCd.Caption = "仕入先コード";
                this.columnSupplierSnm.Caption = "仕入先略称";
                this.columnResultsAddUpSecCd.Caption = "実績計上拠点コード";
                this.columnOrderNumber.Caption = "発注番号";
                this.columnAcceptAnOrderCnt.Caption = "受注数量";
                this.columnAcptAnOdrAdjustCnt.Caption = "受注調整数";
                this.columnAcptAnOdrRemainCnt.Caption = "受注残数";
                this.columnSlipMemo1.Caption = "伝票メモ１";
                this.columnSlipMemo2.Caption = "伝票メモ2";
                this.columnSlipMemo3.Caption = "伝票メモ3";
                this.columnSlipMemo4.Caption = "伝票メモ4";
                this.columnSlipMemo5.Caption = "伝票メモ5";
                this.columnSlipMemo6.Caption = "伝票メモ6";
                this.columnInsideMemo1.Caption = "社内メモ１";
                this.columnInsideMemo2.Caption = "社内メモ2";
                this.columnInsideMemo3.Caption = "社内メモ3";
                this.columnInsideMemo4.Caption = "社内メモ4";
                this.columnInsideMemo5.Caption = "社内メモ5";
                this.columnInsideMemo6.Caption = "社内メモ6";
                this.columnBfListPrice.Caption = "変更前定価";
                this.columnBfSalesUnitPrice.Caption = "変更前売価";
                this.columnBfUnitCost.Caption = "変更前原価";
                this.columnPrtGoodsNo.Caption = "印刷用商品番号";
                this.columnPrtGoodsName.Caption = "印刷用商品名称";
                this.columnPrtGoodsMakerCd.Caption = "印刷用商品メーカーコード";
                this.columnPrtGoodsMakerNm.Caption = "印刷用商品メーカー名称";
                this.columnContractDivCdDtl.Caption = "契約区分（明細）";
                this.columnCustomerCode.Caption = "得意先コード";
                this.columnCustomerName.Caption = "得意先名称";
                this.columnCustomerName2.Caption = "得意先名称2";
                this.columnCustomerSnm.Caption = "得意先略称";
                this.columnAddresseeCode.Caption = "納品先コード";
                this.columnAddresseeName.Caption = "納品先名称";
                this.columnAddresseeName2.Caption = "納品先名称2";
                this.columnSalesInputCode.Caption = "売上入力者コード";
                this.columnSalesInputName.Caption = "売上入力者名称";
                this.columnFrontEmployeeCd.Caption = "受付従業員コード";
                this.columnFrontEmployeeNm.Caption = "受付従業員名称";
                this.columnSalesEmployeeCd.Caption = "販売従業員コード";
                this.columnSalesEmployeeNm.Caption = "販売従業員名称";
                this.columnCooprtKind.Caption = "連携種別";
                this.columnAutoAnswerDivSCM.Caption = "自動回答";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRow NewSalesDetailRow() {
                return ((SalesDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesDetailRowChanged != null)) {
                    this.SalesDetailRowChanged(this, new SalesDetailRowChangeEvent(((SalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesDetailRowChanging != null)) {
                    this.SalesDetailRowChanging(this, new SalesDetailRowChangeEvent(((SalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesDetailRowDeleted != null)) {
                    this.SalesDetailRowDeleted(this, new SalesDetailRowChangeEvent(((SalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesDetailRowDeleting != null)) {
                    this.SalesDetailRowDeleting(this, new SalesDetailRowChangeEvent(((SalesDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesDetailRow(SalesDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalesSlipDataSet ds = new SalesSlipDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesSlipRow : global::System.Data.DataRow {
            
            private SalesSlipDataTable tableSalesSlip;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesSlipRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesSlip = ((SalesSlipDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.RowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'RowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnterpriseCode {
                get {
                    return ((string)(this[this.tableSalesSlip.EnterpriseCodeColumn]));
                }
                set {
                    this[this.tableSalesSlip.EnterpriseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AcceptAnOrderNo {
                get {
                    return ((int)(this[this.tableSalesSlip.AcceptAnOrderNoColumn]));
                }
                set {
                    this[this.tableSalesSlip.AcceptAnOrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AcptAnOdrStatus {
                get {
                    return ((int)(this[this.tableSalesSlip.AcptAnOdrStatusColumn]));
                }
                set {
                    this[this.tableSalesSlip.AcptAnOdrStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcptAnOdrStatusName {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.AcptAnOdrStatusNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'AcptAnOdrStatusName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.AcptAnOdrStatusNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SearchSlipNum {
                get {
                    return ((string)(this[this.tableSalesSlip.SearchSlipNumColumn]));
                }
                set {
                    this[this.tableSalesSlip.SearchSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DetailRowCount {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.DetailRowCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'DetailRowCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.DetailRowCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesSlipKind {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.SalesSlipKindColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesSlipKind\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesSlipKindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipKindName {
                get {
                    if (this.IsSalesSlipKindNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.SalesSlipKindNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesSlipKindNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DebitNoteDiv {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.DebitNoteDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'DebitNoteDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.DebitNoteDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebitNoteDivName {
                get {
                    if (this.IsDebitNoteDivNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.DebitNoteDivNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.DebitNoteDivNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesSlipCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.SalesSlipCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesSlipCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesSlipCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipCdName {
                get {
                    if (this.IsSalesSlipCdNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.SalesSlipCdNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesSlipCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesFormal {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.SalesFormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesFormal\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesFormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesFormalCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.SalesFormalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesFormalCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesFormalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesFormalName {
                get {
                    if (this.IsSalesFormalNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.SalesFormalNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesFormalNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesInpSecCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.SalesInpSecCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesInpSecCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesInpSecCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesInpSecName {
                get {
                    if (this.IsSalesInpSecNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.SalesInpSecNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesInpSecNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DemandAddUpSecCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.DemandAddUpSecCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'DemandAddUpSecCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.DemandAddUpSecCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DemandAddUpSecName {
                get {
                    if (this.IsDemandAddUpSecNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.DemandAddUpSecNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.DemandAddUpSecNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResultsAddUpSecCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.ResultsAddUpSecCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'ResultsAddUpSecCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.ResultsAddUpSecCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResultsAddUpSecName {
                get {
                    if (this.IsResultsAddUpSecNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.ResultsAddUpSecNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.ResultsAddUpSecNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EstimateDateString {
                get {
                    if (this.IsEstimateDateStringNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.EstimateDateStringColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.EstimateDateStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcceptAnOrderDateString {
                get {
                    if (this.IsAcceptAnOrderDateStringNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.AcceptAnOrderDateStringColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.AcceptAnOrderDateStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliGdsCmpltDueDateString {
                get {
                    if (this.IsDeliGdsCmpltDueDateStringNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.DeliGdsCmpltDueDateStringColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.DeliGdsCmpltDueDateStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipDateString {
                get {
                    if (this.IsSlipDateStringNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.SlipDateStringColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.SlipDateStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipmentDayString {
                get {
                    if (this.IsShipmentDayStringNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.ShipmentDayStringColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.ShipmentDayStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesDateString {
                get {
                    if (this.IsSalesDateStringNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.SalesDateStringColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesDateStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddUpADateString {
                get {
                    if (this.IsAddUpADateStringNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.AddUpADateStringColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.AddUpADateStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FrontEmployeeNm {
                get {
                    if (this.IsFrontEmployeeNmNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.FrontEmployeeNmColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.FrontEmployeeNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesEmployeeNm {
                get {
                    if (this.IsSalesEmployeeNmNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.SalesEmployeeNmColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesEmployeeNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WayToOrder {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.WayToOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'WayToOrder\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.WayToOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WayToOrderName {
                get {
                    if (this.IsWayToOrderNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.WayToOrderNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.WayToOrderNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AccRecDivCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.AccRecDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'AccRecDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.AccRecDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccRecDivName {
                get {
                    if (this.IsAccRecDivNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.AccRecDivNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.AccRecDivNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TotalAmountDispWayCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.TotalAmountDispWayCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'TotalAmountDispWayCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.TotalAmountDispWayCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalAmountDispWayName {
                get {
                    if (this.IsTotalAmountDispWayNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.TotalAmountDispWayNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.TotalAmountDispWayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesTotalTaxInc {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesTotalTaxIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesTotalTaxInc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesTotalTaxIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesTotalTaxExc {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesTotalTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesTotalTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesTotalTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesSubtotalTaxInc {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesSubtotalTaxIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesSubtotalTaxInc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesSubtotalTaxIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesSubtotalTaxExc {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesSubtotalTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesSubtotalTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesSubtotalTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalSubttlSubToTaxFre {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalSubttlSubToTaxFreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalSubttlSubToTaxFre\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalSubttlSubToTaxFreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesSubtotalTax {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesSubtotalTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesSubtotalTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesSubtotalTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TotalCost {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.TotalCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'TotalCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.TotalCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ServiceDeposits {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.ServiceDepositsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'ServiceDeposits\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.ServiceDepositsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesGoodsCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.SalesGoodsCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesGoodsCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesGoodsCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesGoodsCdName {
                get {
                    if (this.IsSalesGoodsCdNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.SalesGoodsCdNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesGoodsCdNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TaxAdjust {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.TaxAdjustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'TaxAdjust\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.TaxAdjustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long BalanceAdjust {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.BalanceAdjustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'BalanceAdjust\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.BalanceAdjustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long DemandableTtl {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.DemandableTtlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'DemandableTtl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.DemandableTtlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClaimCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.ClaimCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'ClaimCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.ClaimCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClaimName {
                get {
                    if (this.IsClaimNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.ClaimNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.ClaimNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'CustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    if (this.IsCustomerNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.CustomerNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CorporateDivCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.CorporateDivCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'CorporateDivCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.CorporateDivCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CorporateDivCodeName {
                get {
                    if (this.IsCorporateDivCodeNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.CorporateDivCodeNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.CorporateDivCodeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote {
                get {
                    if (this.IsSlipNoteNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.SlipNoteColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.SlipNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote2 {
                get {
                    if (this.IsSlipNote2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.SlipNote2Column]));
                    }
                }
                set {
                    this[this.tableSalesSlip.SlipNote2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegiProcDateString {
                get {
                    if (this.IsRegiProcDateStringNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.RegiProcDateStringColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.RegiProcDateStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CashRegisterNo {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.CashRegisterNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'CashRegisterNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.CashRegisterNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PosReceiptNo {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.PosReceiptNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'PosReceiptNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.PosReceiptNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Broadleaf.Application.Remoting.ParamData.SalesSlipSearchResultWork SalesSlipSearchResultWork {
                get {
                    return ((global::Broadleaf.Application.Remoting.ParamData.SalesSlipSearchResultWork)(this[this.tableSalesSlip.SalesSlipSearchResultWorkColumn]));
                }
                set {
                    this[this.tableSalesSlip.SalesSlipSearchResultWorkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipUpdatableName {
                get {
                    if (this.IsSalesSlipUpdatableNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.SalesSlipUpdatableNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesSlipUpdatableNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionName {
                get {
                    if (this.IsSectionNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.SectionNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.SectionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubSectionName {
                get {
                    if (this.IsSubSectionNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.SubSectionNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.SubSectionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MinSectionName {
                get {
                    if (this.IsMinSectionNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableSalesSlip.MinSectionNameColumn]));
                    }
                }
                set {
                    this[this.tableSalesSlip.MinSectionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SearchSlipDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesSlip.SearchSlipDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SearchSlipDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SearchSlipDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EstimateDivide {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.EstimateDivideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'EstimateDivide\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.EstimateDivideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InputAgenCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.InputAgenCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'InputAgenCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.InputAgenCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InputAgenNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.InputAgenNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'InputAgenNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.InputAgenNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesPrtTotalTaxInc {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesPrtTotalTaxIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesPrtTotalTaxInc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesPrtTotalTaxIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesPrtTotalTaxExc {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesPrtTotalTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesPrtTotalTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesPrtTotalTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesWorkTotalTaxInc {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesWorkTotalTaxIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesWorkTotalTaxInc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesWorkTotalTaxIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesWorkTotalTaxExc {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesWorkTotalTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesWorkTotalTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesWorkTotalTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesPrtSubttlInc {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesPrtSubttlIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesPrtSubttlInc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesPrtSubttlIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesPrtSubttlExc {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesPrtSubttlExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesPrtSubttlExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesPrtSubttlExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesWorkSubttlInc {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesWorkSubttlIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesWorkSubttlInc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesWorkSubttlIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesWorkSubttlExc {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesWorkSubttlExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesWorkSubttlExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesWorkSubttlExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesNetPrice {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesNetPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesNetPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesNetPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesOutTax {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.SalesOutTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesOutTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesOutTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItdedPartsDisOutTax {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.ItdedPartsDisOutTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'ItdedPartsDisOutTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.ItdedPartsDisOutTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItdedPartsDisInTax {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.ItdedPartsDisInTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'ItdedPartsDisInTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.ItdedPartsDisInTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItdedWorkDisOutTax {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.ItdedWorkDisOutTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'ItdedWorkDisOutTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.ItdedWorkDisOutTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItdedWorkDisInTax {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.ItdedWorkDisInTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'ItdedWorkDisInTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.ItdedWorkDisInTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItdedSalesDisTaxFre {
                get {
                    try {
                        return ((long)(this[this.tableSalesSlip.ItdedSalesDisTaxFreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'ItdedSalesDisTaxFre\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.ItdedSalesDisTaxFreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PartsDiscountRate {
                get {
                    try {
                        return ((double)(this[this.tableSalesSlip.PartsDiscountRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'PartsDiscountRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.PartsDiscountRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double RavorDiscountRate {
                get {
                    try {
                        return ((double)(this[this.tableSalesSlip.RavorDiscountRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'RavorDiscountRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.RavorDiscountRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OutputName {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.OutputNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'OutputName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.OutputNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.CustSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'CustSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.CustSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNote3 {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.SlipNote3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SlipNote3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SlipNote3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EstimateValidityDateString {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.EstimateValidityDateStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'EstimateValidityDateString\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.EstimateValidityDateStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PartsNoPrtCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.PartsNoPrtCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'PartsNoPrtCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.PartsNoPrtCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OptionPringDivCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.OptionPringDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'OptionPringDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.OptionPringDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RateUseCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesSlip.RateUseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'RateUseCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.RateUseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CategoryModel {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.CategoryModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'CategoryModel\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.CategoryModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UoeRemark1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.UoeRemark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'UoeRemark1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.UoeRemark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesInputCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.SalesInputCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesInputCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesInputCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesInputName {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.SalesInputNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SalesInputName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SalesInputNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FullModel {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.FullModelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'FullModel\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.FullModelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelFullName {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.ModelFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'ModelFullName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.ModelFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarMngCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.CarMngCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'CarMngCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.CarMngCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipDivName {
                get {
                    try {
                        return ((string)(this[this.tableSalesSlip.SlipDivNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesSlip\' にある列 \'SlipDivName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesSlip.SlipDivNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowNoNull() {
                return this.IsNull(this.tableSalesSlip.RowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowNoNull() {
                this[this.tableSalesSlip.RowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcptAnOdrStatusNameNull() {
                return this.IsNull(this.tableSalesSlip.AcptAnOdrStatusNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcptAnOdrStatusNameNull() {
                this[this.tableSalesSlip.AcptAnOdrStatusNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailRowCountNull() {
                return this.IsNull(this.tableSalesSlip.DetailRowCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailRowCountNull() {
                this[this.tableSalesSlip.DetailRowCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipKindNull() {
                return this.IsNull(this.tableSalesSlip.SalesSlipKindColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipKindNull() {
                this[this.tableSalesSlip.SalesSlipKindColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipKindNameNull() {
                return this.IsNull(this.tableSalesSlip.SalesSlipKindNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipKindNameNull() {
                this[this.tableSalesSlip.SalesSlipKindNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteDivNull() {
                return this.IsNull(this.tableSalesSlip.DebitNoteDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteDivNull() {
                this[this.tableSalesSlip.DebitNoteDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteDivNameNull() {
                return this.IsNull(this.tableSalesSlip.DebitNoteDivNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteDivNameNull() {
                this[this.tableSalesSlip.DebitNoteDivNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipCdNull() {
                return this.IsNull(this.tableSalesSlip.SalesSlipCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipCdNull() {
                this[this.tableSalesSlip.SalesSlipCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipCdNameNull() {
                return this.IsNull(this.tableSalesSlip.SalesSlipCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipCdNameNull() {
                this[this.tableSalesSlip.SalesSlipCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesFormalNull() {
                return this.IsNull(this.tableSalesSlip.SalesFormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesFormalNull() {
                this[this.tableSalesSlip.SalesFormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesFormalCodeNull() {
                return this.IsNull(this.tableSalesSlip.SalesFormalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesFormalCodeNull() {
                this[this.tableSalesSlip.SalesFormalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesFormalNameNull() {
                return this.IsNull(this.tableSalesSlip.SalesFormalNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesFormalNameNull() {
                this[this.tableSalesSlip.SalesFormalNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesInpSecCdNull() {
                return this.IsNull(this.tableSalesSlip.SalesInpSecCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesInpSecCdNull() {
                this[this.tableSalesSlip.SalesInpSecCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesInpSecNameNull() {
                return this.IsNull(this.tableSalesSlip.SalesInpSecNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesInpSecNameNull() {
                this[this.tableSalesSlip.SalesInpSecNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDemandAddUpSecCdNull() {
                return this.IsNull(this.tableSalesSlip.DemandAddUpSecCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDemandAddUpSecCdNull() {
                this[this.tableSalesSlip.DemandAddUpSecCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDemandAddUpSecNameNull() {
                return this.IsNull(this.tableSalesSlip.DemandAddUpSecNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDemandAddUpSecNameNull() {
                this[this.tableSalesSlip.DemandAddUpSecNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResultsAddUpSecCdNull() {
                return this.IsNull(this.tableSalesSlip.ResultsAddUpSecCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResultsAddUpSecCdNull() {
                this[this.tableSalesSlip.ResultsAddUpSecCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResultsAddUpSecNameNull() {
                return this.IsNull(this.tableSalesSlip.ResultsAddUpSecNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResultsAddUpSecNameNull() {
                this[this.tableSalesSlip.ResultsAddUpSecNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimateDateStringNull() {
                return this.IsNull(this.tableSalesSlip.EstimateDateStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimateDateStringNull() {
                this[this.tableSalesSlip.EstimateDateStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcceptAnOrderDateStringNull() {
                return this.IsNull(this.tableSalesSlip.AcceptAnOrderDateStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcceptAnOrderDateStringNull() {
                this[this.tableSalesSlip.AcceptAnOrderDateStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliGdsCmpltDueDateStringNull() {
                return this.IsNull(this.tableSalesSlip.DeliGdsCmpltDueDateStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliGdsCmpltDueDateStringNull() {
                this[this.tableSalesSlip.DeliGdsCmpltDueDateStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipDateStringNull() {
                return this.IsNull(this.tableSalesSlip.SlipDateStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipDateStringNull() {
                this[this.tableSalesSlip.SlipDateStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentDayStringNull() {
                return this.IsNull(this.tableSalesSlip.ShipmentDayStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentDayStringNull() {
                this[this.tableSalesSlip.ShipmentDayStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateStringNull() {
                return this.IsNull(this.tableSalesSlip.SalesDateStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateStringNull() {
                this[this.tableSalesSlip.SalesDateStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddUpADateStringNull() {
                return this.IsNull(this.tableSalesSlip.AddUpADateStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddUpADateStringNull() {
                this[this.tableSalesSlip.AddUpADateStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrontEmployeeNmNull() {
                return this.IsNull(this.tableSalesSlip.FrontEmployeeNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrontEmployeeNmNull() {
                this[this.tableSalesSlip.FrontEmployeeNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesEmployeeNmNull() {
                return this.IsNull(this.tableSalesSlip.SalesEmployeeNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesEmployeeNmNull() {
                this[this.tableSalesSlip.SalesEmployeeNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWayToOrderNull() {
                return this.IsNull(this.tableSalesSlip.WayToOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWayToOrderNull() {
                this[this.tableSalesSlip.WayToOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWayToOrderNameNull() {
                return this.IsNull(this.tableSalesSlip.WayToOrderNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWayToOrderNameNull() {
                this[this.tableSalesSlip.WayToOrderNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccRecDivCdNull() {
                return this.IsNull(this.tableSalesSlip.AccRecDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccRecDivCdNull() {
                this[this.tableSalesSlip.AccRecDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccRecDivNameNull() {
                return this.IsNull(this.tableSalesSlip.AccRecDivNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccRecDivNameNull() {
                this[this.tableSalesSlip.AccRecDivNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountDispWayCdNull() {
                return this.IsNull(this.tableSalesSlip.TotalAmountDispWayCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountDispWayCdNull() {
                this[this.tableSalesSlip.TotalAmountDispWayCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountDispWayNameNull() {
                return this.IsNull(this.tableSalesSlip.TotalAmountDispWayNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountDispWayNameNull() {
                this[this.tableSalesSlip.TotalAmountDispWayNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesTotalTaxIncNull() {
                return this.IsNull(this.tableSalesSlip.SalesTotalTaxIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesTotalTaxIncNull() {
                this[this.tableSalesSlip.SalesTotalTaxIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesTotalTaxExcNull() {
                return this.IsNull(this.tableSalesSlip.SalesTotalTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesTotalTaxExcNull() {
                this[this.tableSalesSlip.SalesTotalTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSubtotalTaxIncNull() {
                return this.IsNull(this.tableSalesSlip.SalesSubtotalTaxIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSubtotalTaxIncNull() {
                this[this.tableSalesSlip.SalesSubtotalTaxIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSubtotalTaxExcNull() {
                return this.IsNull(this.tableSalesSlip.SalesSubtotalTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSubtotalTaxExcNull() {
                this[this.tableSalesSlip.SalesSubtotalTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalSubttlSubToTaxFreNull() {
                return this.IsNull(this.tableSalesSlip.SalSubttlSubToTaxFreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalSubttlSubToTaxFreNull() {
                this[this.tableSalesSlip.SalSubttlSubToTaxFreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSubtotalTaxNull() {
                return this.IsNull(this.tableSalesSlip.SalesSubtotalTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSubtotalTaxNull() {
                this[this.tableSalesSlip.SalesSubtotalTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalCostNull() {
                return this.IsNull(this.tableSalesSlip.TotalCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalCostNull() {
                this[this.tableSalesSlip.TotalCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceDepositsNull() {
                return this.IsNull(this.tableSalesSlip.ServiceDepositsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceDepositsNull() {
                this[this.tableSalesSlip.ServiceDepositsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesGoodsCdNull() {
                return this.IsNull(this.tableSalesSlip.SalesGoodsCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesGoodsCdNull() {
                this[this.tableSalesSlip.SalesGoodsCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesGoodsCdNameNull() {
                return this.IsNull(this.tableSalesSlip.SalesGoodsCdNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesGoodsCdNameNull() {
                this[this.tableSalesSlip.SalesGoodsCdNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAdjustNull() {
                return this.IsNull(this.tableSalesSlip.TaxAdjustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAdjustNull() {
                this[this.tableSalesSlip.TaxAdjustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceAdjustNull() {
                return this.IsNull(this.tableSalesSlip.BalanceAdjustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceAdjustNull() {
                this[this.tableSalesSlip.BalanceAdjustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDemandableTtlNull() {
                return this.IsNull(this.tableSalesSlip.DemandableTtlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDemandableTtlNull() {
                this[this.tableSalesSlip.DemandableTtlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClaimCodeNull() {
                return this.IsNull(this.tableSalesSlip.ClaimCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClaimCodeNull() {
                this[this.tableSalesSlip.ClaimCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClaimNameNull() {
                return this.IsNull(this.tableSalesSlip.ClaimNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClaimNameNull() {
                this[this.tableSalesSlip.ClaimNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableSalesSlip.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableSalesSlip.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableSalesSlip.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableSalesSlip.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCorporateDivCodeNull() {
                return this.IsNull(this.tableSalesSlip.CorporateDivCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCorporateDivCodeNull() {
                this[this.tableSalesSlip.CorporateDivCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCorporateDivCodeNameNull() {
                return this.IsNull(this.tableSalesSlip.CorporateDivCodeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCorporateDivCodeNameNull() {
                this[this.tableSalesSlip.CorporateDivCodeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNoteNull() {
                return this.IsNull(this.tableSalesSlip.SlipNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNoteNull() {
                this[this.tableSalesSlip.SlipNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNote2Null() {
                return this.IsNull(this.tableSalesSlip.SlipNote2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNote2Null() {
                this[this.tableSalesSlip.SlipNote2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegiProcDateStringNull() {
                return this.IsNull(this.tableSalesSlip.RegiProcDateStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegiProcDateStringNull() {
                this[this.tableSalesSlip.RegiProcDateStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCashRegisterNoNull() {
                return this.IsNull(this.tableSalesSlip.CashRegisterNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCashRegisterNoNull() {
                this[this.tableSalesSlip.CashRegisterNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPosReceiptNoNull() {
                return this.IsNull(this.tableSalesSlip.PosReceiptNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPosReceiptNoNull() {
                this[this.tableSalesSlip.PosReceiptNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipUpdatableNameNull() {
                return this.IsNull(this.tableSalesSlip.SalesSlipUpdatableNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipUpdatableNameNull() {
                this[this.tableSalesSlip.SalesSlipUpdatableNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNameNull() {
                return this.IsNull(this.tableSalesSlip.SectionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNameNull() {
                this[this.tableSalesSlip.SectionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubSectionNameNull() {
                return this.IsNull(this.tableSalesSlip.SubSectionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubSectionNameNull() {
                this[this.tableSalesSlip.SubSectionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinSectionNameNull() {
                return this.IsNull(this.tableSalesSlip.MinSectionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinSectionNameNull() {
                this[this.tableSalesSlip.MinSectionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSearchSlipDateNull() {
                return this.IsNull(this.tableSalesSlip.SearchSlipDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSearchSlipDateNull() {
                this[this.tableSalesSlip.SearchSlipDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimateDivideNull() {
                return this.IsNull(this.tableSalesSlip.EstimateDivideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimateDivideNull() {
                this[this.tableSalesSlip.EstimateDivideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputAgenCdNull() {
                return this.IsNull(this.tableSalesSlip.InputAgenCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputAgenCdNull() {
                this[this.tableSalesSlip.InputAgenCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputAgenNmNull() {
                return this.IsNull(this.tableSalesSlip.InputAgenNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputAgenNmNull() {
                this[this.tableSalesSlip.InputAgenNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesPrtTotalTaxIncNull() {
                return this.IsNull(this.tableSalesSlip.SalesPrtTotalTaxIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesPrtTotalTaxIncNull() {
                this[this.tableSalesSlip.SalesPrtTotalTaxIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesPrtTotalTaxExcNull() {
                return this.IsNull(this.tableSalesSlip.SalesPrtTotalTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesPrtTotalTaxExcNull() {
                this[this.tableSalesSlip.SalesPrtTotalTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesWorkTotalTaxIncNull() {
                return this.IsNull(this.tableSalesSlip.SalesWorkTotalTaxIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesWorkTotalTaxIncNull() {
                this[this.tableSalesSlip.SalesWorkTotalTaxIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesWorkTotalTaxExcNull() {
                return this.IsNull(this.tableSalesSlip.SalesWorkTotalTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesWorkTotalTaxExcNull() {
                this[this.tableSalesSlip.SalesWorkTotalTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesPrtSubttlIncNull() {
                return this.IsNull(this.tableSalesSlip.SalesPrtSubttlIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesPrtSubttlIncNull() {
                this[this.tableSalesSlip.SalesPrtSubttlIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesPrtSubttlExcNull() {
                return this.IsNull(this.tableSalesSlip.SalesPrtSubttlExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesPrtSubttlExcNull() {
                this[this.tableSalesSlip.SalesPrtSubttlExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesWorkSubttlIncNull() {
                return this.IsNull(this.tableSalesSlip.SalesWorkSubttlIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesWorkSubttlIncNull() {
                this[this.tableSalesSlip.SalesWorkSubttlIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesWorkSubttlExcNull() {
                return this.IsNull(this.tableSalesSlip.SalesWorkSubttlExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesWorkSubttlExcNull() {
                this[this.tableSalesSlip.SalesWorkSubttlExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesNetPriceNull() {
                return this.IsNull(this.tableSalesSlip.SalesNetPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesNetPriceNull() {
                this[this.tableSalesSlip.SalesNetPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesOutTaxNull() {
                return this.IsNull(this.tableSalesSlip.SalesOutTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesOutTaxNull() {
                this[this.tableSalesSlip.SalesOutTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItdedPartsDisOutTaxNull() {
                return this.IsNull(this.tableSalesSlip.ItdedPartsDisOutTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItdedPartsDisOutTaxNull() {
                this[this.tableSalesSlip.ItdedPartsDisOutTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItdedPartsDisInTaxNull() {
                return this.IsNull(this.tableSalesSlip.ItdedPartsDisInTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItdedPartsDisInTaxNull() {
                this[this.tableSalesSlip.ItdedPartsDisInTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItdedWorkDisOutTaxNull() {
                return this.IsNull(this.tableSalesSlip.ItdedWorkDisOutTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItdedWorkDisOutTaxNull() {
                this[this.tableSalesSlip.ItdedWorkDisOutTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItdedWorkDisInTaxNull() {
                return this.IsNull(this.tableSalesSlip.ItdedWorkDisInTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItdedWorkDisInTaxNull() {
                this[this.tableSalesSlip.ItdedWorkDisInTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItdedSalesDisTaxFreNull() {
                return this.IsNull(this.tableSalesSlip.ItdedSalesDisTaxFreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItdedSalesDisTaxFreNull() {
                this[this.tableSalesSlip.ItdedSalesDisTaxFreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartsDiscountRateNull() {
                return this.IsNull(this.tableSalesSlip.PartsDiscountRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartsDiscountRateNull() {
                this[this.tableSalesSlip.PartsDiscountRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRavorDiscountRateNull() {
                return this.IsNull(this.tableSalesSlip.RavorDiscountRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRavorDiscountRateNull() {
                this[this.tableSalesSlip.RavorDiscountRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOutputNameNull() {
                return this.IsNull(this.tableSalesSlip.OutputNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOutputNameNull() {
                this[this.tableSalesSlip.OutputNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustSlipNoNull() {
                return this.IsNull(this.tableSalesSlip.CustSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustSlipNoNull() {
                this[this.tableSalesSlip.CustSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNote3Null() {
                return this.IsNull(this.tableSalesSlip.SlipNote3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNote3Null() {
                this[this.tableSalesSlip.SlipNote3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimateValidityDateStringNull() {
                return this.IsNull(this.tableSalesSlip.EstimateValidityDateStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimateValidityDateStringNull() {
                this[this.tableSalesSlip.EstimateValidityDateStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartsNoPrtCdNull() {
                return this.IsNull(this.tableSalesSlip.PartsNoPrtCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartsNoPrtCdNull() {
                this[this.tableSalesSlip.PartsNoPrtCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOptionPringDivCdNull() {
                return this.IsNull(this.tableSalesSlip.OptionPringDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOptionPringDivCdNull() {
                this[this.tableSalesSlip.OptionPringDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateUseCodeNull() {
                return this.IsNull(this.tableSalesSlip.RateUseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateUseCodeNull() {
                this[this.tableSalesSlip.RateUseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryModelNull() {
                return this.IsNull(this.tableSalesSlip.CategoryModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryModelNull() {
                this[this.tableSalesSlip.CategoryModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUoeRemark1Null() {
                return this.IsNull(this.tableSalesSlip.UoeRemark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUoeRemark1Null() {
                this[this.tableSalesSlip.UoeRemark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesInputCodeNull() {
                return this.IsNull(this.tableSalesSlip.SalesInputCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesInputCodeNull() {
                this[this.tableSalesSlip.SalesInputCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesInputNameNull() {
                return this.IsNull(this.tableSalesSlip.SalesInputNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesInputNameNull() {
                this[this.tableSalesSlip.SalesInputNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFullModelNull() {
                return this.IsNull(this.tableSalesSlip.FullModelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFullModelNull() {
                this[this.tableSalesSlip.FullModelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelFullNameNull() {
                return this.IsNull(this.tableSalesSlip.ModelFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelFullNameNull() {
                this[this.tableSalesSlip.ModelFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarMngCodeNull() {
                return this.IsNull(this.tableSalesSlip.CarMngCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarMngCodeNull() {
                this[this.tableSalesSlip.CarMngCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipDivNameNull() {
                return this.IsNull(this.tableSalesSlip.SlipDivNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipDivNameNull() {
                this[this.tableSalesSlip.SlipDivNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SecInfoSetRow : global::System.Data.DataRow {
            
            private SecInfoSetDataTable tableSecInfoSet;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SecInfoSetRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSecInfoSet = ((SecInfoSetDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionCode {
                get {
                    return ((string)(this[this.tableSecInfoSet.SectionCodeColumn]));
                }
                set {
                    this[this.tableSecInfoSet.SectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionGuideNm {
                get {
                    try {
                        return ((string)(this[this.tableSecInfoSet.SectionGuideNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SecInfoSet\' にある列 \'SectionGuideNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSecInfoSet.SectionGuideNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionGuideNmNull() {
                return this.IsNull(this.tableSecInfoSet.SectionGuideNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionGuideNmNull() {
                this[this.tableSecInfoSet.SectionGuideNmColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesDetailRow : global::System.Data.DataRow {
            
            private SalesDetailDataTable tableSalesDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesDetail = ((SalesDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MemoExist {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.MemoExistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'MemoExist\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.MemoExistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MemoExistName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.MemoExistNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'MemoExistName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.MemoExistNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AcceptAnOrderNo {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.AcceptAnOrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AcceptAnOrderNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AcceptAnOrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AcptAnOdrStatus {
                get {
                    return ((int)(this[this.tableSalesDetail.AcptAnOdrStatusColumn]));
                }
                set {
                    this[this.tableSalesDetail.AcptAnOdrStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesSlipNum {
                get {
                    return ((string)(this[this.tableSalesDetail.SalesSlipNumColumn]));
                }
                set {
                    this[this.tableSalesDetail.SalesSlipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesRowNo {
                get {
                    return ((int)(this[this.tableSalesDetail.SalesRowNoColumn]));
                }
                set {
                    this[this.tableSalesDetail.SalesRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesRowDerivNo {
                get {
                    return ((int)(this[this.tableSalesDetail.SalesRowDerivNoColumn]));
                }
                set {
                    this[this.tableSalesDetail.SalesRowDerivNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SectionCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubSectionCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SubSectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SubSectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SubSectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MinSectionCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.MinSectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'MinSectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.MinSectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesDate {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesDateString {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesDateStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesDateString\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesDateStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CommonSeqNo {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.CommonSeqNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CommonSeqNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CommonSeqNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesSlipDtlNum {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.SalesSlipDtlNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesSlipDtlNum\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesSlipDtlNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AcptAnOdrStatusSrc {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.AcptAnOdrStatusSrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AcptAnOdrStatusSrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AcptAnOdrStatusSrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesSlipDtlNumSrc {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.SalesSlipDtlNumSrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesSlipDtlNumSrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesSlipDtlNumSrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesSlipCdDtl {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SalesSlipCdDtlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesSlipCdDtl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesSlipCdDtlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ServiceSlipCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.ServiceSlipCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ServiceSlipCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ServiceSlipCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EstimateDtlDivide {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.EstimateDtlDivideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'EstimateDtlDivide\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.EstimateDtlDivideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesDepositsDiv {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SalesDepositsDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesDepositsDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesDepositsDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockMngExistCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.StockMngExistCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'StockMngExistCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.StockMngExistCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeliGdsCmpltDueDate {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.DeliGdsCmpltDueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'DeliGdsCmpltDueDate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.DeliGdsCmpltDueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliGdsCmpltDueDateString {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.DeliGdsCmpltDueDateStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'DeliGdsCmpltDueDateString\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.DeliGdsCmpltDueDateStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsKindCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.GoodsKindCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsKindCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsKindCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsSearchDivCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.GoodsSearchDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsSearchDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsSearchDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.GoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.MakerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'MakerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.MakerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsSetDivCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.GoodsSetDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsSetDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsSetDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LargeGoodsGanreCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.LargeGoodsGanreCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'LargeGoodsGanreCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.LargeGoodsGanreCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LargeGoodsGanreName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.LargeGoodsGanreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'LargeGoodsGanreName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.LargeGoodsGanreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MediumGoodsGanreCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.MediumGoodsGanreCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'MediumGoodsGanreCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.MediumGoodsGanreCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MediumGoodsGanreName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.MediumGoodsGanreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'MediumGoodsGanreName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.MediumGoodsGanreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DetailGoodsGanreCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.DetailGoodsGanreCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'DetailGoodsGanreCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.DetailGoodsGanreCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DetailGoodsGanreName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.DetailGoodsGanreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'DetailGoodsGanreName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.DetailGoodsGanreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsLGroup {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.GoodsLGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsLGroup\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsLGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsLGroupName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GoodsLGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsLGroupName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsLGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMGroup {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.GoodsMGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsMGroup\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsMGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsMGroupName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GoodsMGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsMGroupName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsMGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BLGroupCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.BLGroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BLGroupCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BLGroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLGroupName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.BLGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BLGroupName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BLGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BLGoodsCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.BLGoodsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BLGoodsCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BLGoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLGoodsFullName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.BLGoodsFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BLGoodsFullName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BLGoodsFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EnterpriseGanreCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.EnterpriseGanreCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'EnterpriseGanreCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.EnterpriseGanreCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnterpriseGanreName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.EnterpriseGanreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'EnterpriseGanreName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.EnterpriseGanreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.WarehouseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'WarehouseCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.WarehouseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'WarehouseName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.WarehouseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.WarehouseShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'WarehouseShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.WarehouseShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesOrderDivCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SalesOrderDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesOrderDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesOrderDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnitCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.UnitCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UnitCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UnitCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.UnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UnitName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsRateRank {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.GoodsRateRankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GoodsRateRank\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GoodsRateRankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustRateGrpCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.CustRateGrpCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustRateGrpCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustRateGrpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SuppRateGrpCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SuppRateGrpCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SuppRateGrpCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SuppRateGrpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ListPriceRate {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.ListPriceRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ListPriceRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ListPriceRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RateDivLPrice {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.RateDivLPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'RateDivLPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.RateDivLPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnPrcCalcCdLPrice {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.UnPrcCalcCdLPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UnPrcCalcCdLPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UnPrcCalcCdLPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PriceCdLPrice {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.PriceCdLPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'PriceCdLPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.PriceCdLPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StdUnPrcLPrice {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.StdUnPrcLPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'StdUnPrcLPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.StdUnPrcLPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FracProcUnitLPrice {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.FracProcUnitLPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FracProcUnitLPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FracProcUnitLPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FracProcLPrice {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.FracProcLPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FracProcLPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FracProcLPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ListPriceTaxIncFl {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.ListPriceTaxIncFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ListPriceTaxIncFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ListPriceTaxIncFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ListPriceTaxExcFl {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.ListPriceTaxExcFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ListPriceTaxExcFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ListPriceTaxExcFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ListPriceChngCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.ListPriceChngCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ListPriceChngCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ListPriceChngCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesRate {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.SalesRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RateDivSalUnPrc {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.RateDivSalUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'RateDivSalUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.RateDivSalUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnPrcCalcCdSalUnPrc {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.UnPrcCalcCdSalUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UnPrcCalcCdSalUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UnPrcCalcCdSalUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PriceCdSalUnPrc {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.PriceCdSalUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'PriceCdSalUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.PriceCdSalUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StdUnPrcSalUnPrc {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.StdUnPrcSalUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'StdUnPrcSalUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.StdUnPrcSalUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FracProcUnitSalUnPrc {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.FracProcUnitSalUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FracProcUnitSalUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FracProcUnitSalUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FracProcSalUnPrc {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.FracProcSalUnPrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FracProcSalUnPrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FracProcSalUnPrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesUnPrcTaxIncFl {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.SalesUnPrcTaxIncFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesUnPrcTaxIncFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesUnPrcTaxIncFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesUnPrcTaxExcFl {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.SalesUnPrcTaxExcFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesUnPrcTaxExcFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesUnPrcTaxExcFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesUnPrcChngCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SalesUnPrcChngCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesUnPrcChngCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesUnPrcChngCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CostRate {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.CostRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CostRate\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CostRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RateDivUnCst {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.RateDivUnCstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'RateDivUnCst\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.RateDivUnCstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnPrcCalcCdUnCst {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.UnPrcCalcCdUnCstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'UnPrcCalcCdUnCst\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.UnPrcCalcCdUnCstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PriceCdUnCst {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.PriceCdUnCstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'PriceCdUnCst\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.PriceCdUnCstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StdUnPrcUnCst {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.StdUnPrcUnCstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'StdUnPrcUnCst\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.StdUnPrcUnCstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double FracProcUnitUnCst {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.FracProcUnitUnCstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FracProcUnitUnCst\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FracProcUnitUnCstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FracProcUnCst {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.FracProcUnCstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FracProcUnCst\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FracProcUnCstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.SalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesUnitCostChngDiv {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SalesUnitCostChngDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesUnitCostChngDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesUnitCostChngDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BargainCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.BargainCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BargainCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BargainCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BargainNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.BargainNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BargainNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BargainNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ShipmentCnt {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.ShipmentCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ShipmentCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ShipmentCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesMoneyTaxInc {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.SalesMoneyTaxIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesMoneyTaxInc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesMoneyTaxIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalesMoneyTaxExc {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.SalesMoneyTaxExcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesMoneyTaxExc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesMoneyTaxExcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SalsePriceConsTax {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.SalsePriceConsTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalsePriceConsTax\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalsePriceConsTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Cost {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.CostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'Cost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GrsProfitChkDiv {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.GrsProfitChkDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'GrsProfitChkDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.GrsProfitChkDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesGoodsCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SalesGoodsCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesGoodsCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesGoodsCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TaxAdjust {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.TaxAdjustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'TaxAdjust\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.TaxAdjustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long BalanceAdjust {
                get {
                    try {
                        return ((long)(this[this.tableSalesDetail.BalanceAdjustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BalanceAdjust\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BalanceAdjustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TaxationDivCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.TaxationDivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'TaxationDivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.TaxationDivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartySlipNumDtl {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.PartySlipNumDtlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'PartySlipNumDtl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.PartySlipNumDtlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DtlNote {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.DtlNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'DtlNote\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.DtlNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SupplierCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SupplierCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSnm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SupplierSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SupplierSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SupplierSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResultsAddUpSecCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.ResultsAddUpSecCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ResultsAddUpSecCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ResultsAddUpSecCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderNumber {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.OrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'OrderNumber\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.OrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AcceptAnOrderCnt {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.AcceptAnOrderCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AcceptAnOrderCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AcceptAnOrderCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AcptAnOdrAdjustCnt {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.AcptAnOdrAdjustCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AcptAnOdrAdjustCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AcptAnOdrAdjustCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AcptAnOdrRemainCnt {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.AcptAnOdrRemainCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AcptAnOdrRemainCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AcptAnOdrRemainCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipMemo1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SlipMemo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SlipMemo1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SlipMemo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipMemo2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SlipMemo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SlipMemo2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SlipMemo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipMemo3 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SlipMemo3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SlipMemo3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SlipMemo3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipMemo4 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SlipMemo4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SlipMemo4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SlipMemo4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipMemo5 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SlipMemo5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SlipMemo5\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SlipMemo5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipMemo6 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SlipMemo6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SlipMemo6\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SlipMemo6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsideMemo1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.InsideMemo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'InsideMemo1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.InsideMemo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsideMemo2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.InsideMemo2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'InsideMemo2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.InsideMemo2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsideMemo3 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.InsideMemo3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'InsideMemo3\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.InsideMemo3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsideMemo4 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.InsideMemo4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'InsideMemo4\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.InsideMemo4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsideMemo5 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.InsideMemo5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'InsideMemo5\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.InsideMemo5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InsideMemo6 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.InsideMemo6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'InsideMemo6\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.InsideMemo6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BfListPrice {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.BfListPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BfListPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BfListPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BfSalesUnitPrice {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.BfSalesUnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BfSalesUnitPrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BfSalesUnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BfUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.BfUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'BfUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.BfUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrtGoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.PrtGoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'PrtGoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.PrtGoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrtGoodsName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.PrtGoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'PrtGoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.PrtGoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PrtGoodsMakerCd {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.PrtGoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'PrtGoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.PrtGoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrtGoodsMakerNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.PrtGoodsMakerNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'PrtGoodsMakerNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.PrtGoodsMakerNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ContractDivCdDtl {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.ContractDivCdDtlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'ContractDivCdDtl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.ContractDivCdDtlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CustomerCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustomerCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustomerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.CustomerName2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustomerName2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustomerName2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerSnm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.CustomerSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CustomerSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CustomerSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AddresseeCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.AddresseeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AddresseeCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AddresseeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseeName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.AddresseeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AddresseeName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AddresseeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddresseeName2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.AddresseeName2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AddresseeName2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AddresseeName2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesInputCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesInputCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesInputCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesInputCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesInputName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesInputNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesInputName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesInputNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FrontEmployeeCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.FrontEmployeeCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FrontEmployeeCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FrontEmployeeCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FrontEmployeeNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.FrontEmployeeNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'FrontEmployeeNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.FrontEmployeeNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesEmployeeCd {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesEmployeeCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesEmployeeCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesEmployeeCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesEmployeeNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesEmployeeNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesEmployeeNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesEmployeeNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PrtBLGoodsCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.PrtBLGoodsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'PrtBLGoodsCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.PrtBLGoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrtBLGoodsName {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.PrtBLGoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'PrtBLGoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.PrtBLGoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SalesCode {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCdNm {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.SalesCdNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesCdNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesCdNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double WorkManHour {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.WorkManHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'WorkManHour\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.WorkManHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int WayToOrder {
                get {
                    try {
                        return ((int)(this[this.tableSalesDetail.WayToOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'WayToOrder\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.WayToOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesUnitTotal {
                get {
                    try {
                        return ((double)(this[this.tableSalesDetail.SalesUnitTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'SalesUnitTotal\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.SalesUnitTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CooprtKind {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.CooprtKindColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'CooprtKind\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.CooprtKindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AutoAnswerDivSCM {
                get {
                    try {
                        return ((string)(this[this.tableSalesDetail.AutoAnswerDivSCMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SalesDetail\' にある列 \'AutoAnswerDivSCM\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSalesDetail.AutoAnswerDivSCMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemoExistNull() {
                return this.IsNull(this.tableSalesDetail.MemoExistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemoExistNull() {
                this[this.tableSalesDetail.MemoExistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemoExistNameNull() {
                return this.IsNull(this.tableSalesDetail.MemoExistNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemoExistNameNull() {
                this[this.tableSalesDetail.MemoExistNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcceptAnOrderNoNull() {
                return this.IsNull(this.tableSalesDetail.AcceptAnOrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcceptAnOrderNoNull() {
                this[this.tableSalesDetail.AcceptAnOrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionCodeNull() {
                return this.IsNull(this.tableSalesDetail.SectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionCodeNull() {
                this[this.tableSalesDetail.SectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubSectionCodeNull() {
                return this.IsNull(this.tableSalesDetail.SubSectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubSectionCodeNull() {
                this[this.tableSalesDetail.SubSectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinSectionCodeNull() {
                return this.IsNull(this.tableSalesDetail.MinSectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinSectionCodeNull() {
                this[this.tableSalesDetail.MinSectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tableSalesDetail.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tableSalesDetail.SalesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateStringNull() {
                return this.IsNull(this.tableSalesDetail.SalesDateStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateStringNull() {
                this[this.tableSalesDetail.SalesDateStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommonSeqNoNull() {
                return this.IsNull(this.tableSalesDetail.CommonSeqNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommonSeqNoNull() {
                this[this.tableSalesDetail.CommonSeqNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipDtlNumNull() {
                return this.IsNull(this.tableSalesDetail.SalesSlipDtlNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipDtlNumNull() {
                this[this.tableSalesDetail.SalesSlipDtlNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcptAnOdrStatusSrcNull() {
                return this.IsNull(this.tableSalesDetail.AcptAnOdrStatusSrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcptAnOdrStatusSrcNull() {
                this[this.tableSalesDetail.AcptAnOdrStatusSrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipDtlNumSrcNull() {
                return this.IsNull(this.tableSalesDetail.SalesSlipDtlNumSrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipDtlNumSrcNull() {
                this[this.tableSalesDetail.SalesSlipDtlNumSrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesSlipCdDtlNull() {
                return this.IsNull(this.tableSalesDetail.SalesSlipCdDtlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesSlipCdDtlNull() {
                this[this.tableSalesDetail.SalesSlipCdDtlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceSlipCdNull() {
                return this.IsNull(this.tableSalesDetail.ServiceSlipCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceSlipCdNull() {
                this[this.tableSalesDetail.ServiceSlipCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEstimateDtlDivideNull() {
                return this.IsNull(this.tableSalesDetail.EstimateDtlDivideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEstimateDtlDivideNull() {
                this[this.tableSalesDetail.EstimateDtlDivideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDepositsDivNull() {
                return this.IsNull(this.tableSalesDetail.SalesDepositsDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDepositsDivNull() {
                this[this.tableSalesDetail.SalesDepositsDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockMngExistCdNull() {
                return this.IsNull(this.tableSalesDetail.StockMngExistCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockMngExistCdNull() {
                this[this.tableSalesDetail.StockMngExistCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliGdsCmpltDueDateNull() {
                return this.IsNull(this.tableSalesDetail.DeliGdsCmpltDueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliGdsCmpltDueDateNull() {
                this[this.tableSalesDetail.DeliGdsCmpltDueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliGdsCmpltDueDateStringNull() {
                return this.IsNull(this.tableSalesDetail.DeliGdsCmpltDueDateStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliGdsCmpltDueDateStringNull() {
                this[this.tableSalesDetail.DeliGdsCmpltDueDateStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsKindCodeNull() {
                return this.IsNull(this.tableSalesDetail.GoodsKindCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsKindCodeNull() {
                this[this.tableSalesDetail.GoodsKindCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsSearchDivCdNull() {
                return this.IsNull(this.tableSalesDetail.GoodsSearchDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsSearchDivCdNull() {
                this[this.tableSalesDetail.GoodsSearchDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMakerCdNull() {
                return this.IsNull(this.tableSalesDetail.GoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMakerCdNull() {
                this[this.tableSalesDetail.GoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerNameNull() {
                return this.IsNull(this.tableSalesDetail.MakerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerNameNull() {
                this[this.tableSalesDetail.MakerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNull() {
                return this.IsNull(this.tableSalesDetail.GoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNull() {
                this[this.tableSalesDetail.GoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableSalesDetail.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableSalesDetail.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsSetDivCdNull() {
                return this.IsNull(this.tableSalesDetail.GoodsSetDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsSetDivCdNull() {
                this[this.tableSalesDetail.GoodsSetDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLargeGoodsGanreCodeNull() {
                return this.IsNull(this.tableSalesDetail.LargeGoodsGanreCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLargeGoodsGanreCodeNull() {
                this[this.tableSalesDetail.LargeGoodsGanreCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLargeGoodsGanreNameNull() {
                return this.IsNull(this.tableSalesDetail.LargeGoodsGanreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLargeGoodsGanreNameNull() {
                this[this.tableSalesDetail.LargeGoodsGanreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMediumGoodsGanreCodeNull() {
                return this.IsNull(this.tableSalesDetail.MediumGoodsGanreCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMediumGoodsGanreCodeNull() {
                this[this.tableSalesDetail.MediumGoodsGanreCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMediumGoodsGanreNameNull() {
                return this.IsNull(this.tableSalesDetail.MediumGoodsGanreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMediumGoodsGanreNameNull() {
                this[this.tableSalesDetail.MediumGoodsGanreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailGoodsGanreCodeNull() {
                return this.IsNull(this.tableSalesDetail.DetailGoodsGanreCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailGoodsGanreCodeNull() {
                this[this.tableSalesDetail.DetailGoodsGanreCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailGoodsGanreNameNull() {
                return this.IsNull(this.tableSalesDetail.DetailGoodsGanreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailGoodsGanreNameNull() {
                this[this.tableSalesDetail.DetailGoodsGanreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsLGroupNull() {
                return this.IsNull(this.tableSalesDetail.GoodsLGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsLGroupNull() {
                this[this.tableSalesDetail.GoodsLGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsLGroupNameNull() {
                return this.IsNull(this.tableSalesDetail.GoodsLGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsLGroupNameNull() {
                this[this.tableSalesDetail.GoodsLGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMGroupNull() {
                return this.IsNull(this.tableSalesDetail.GoodsMGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMGroupNull() {
                this[this.tableSalesDetail.GoodsMGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMGroupNameNull() {
                return this.IsNull(this.tableSalesDetail.GoodsMGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMGroupNameNull() {
                this[this.tableSalesDetail.GoodsMGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGroupCodeNull() {
                return this.IsNull(this.tableSalesDetail.BLGroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGroupCodeNull() {
                this[this.tableSalesDetail.BLGroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGroupNameNull() {
                return this.IsNull(this.tableSalesDetail.BLGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGroupNameNull() {
                this[this.tableSalesDetail.BLGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGoodsCodeNull() {
                return this.IsNull(this.tableSalesDetail.BLGoodsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGoodsCodeNull() {
                this[this.tableSalesDetail.BLGoodsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGoodsFullNameNull() {
                return this.IsNull(this.tableSalesDetail.BLGoodsFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGoodsFullNameNull() {
                this[this.tableSalesDetail.BLGoodsFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnterpriseGanreCodeNull() {
                return this.IsNull(this.tableSalesDetail.EnterpriseGanreCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnterpriseGanreCodeNull() {
                this[this.tableSalesDetail.EnterpriseGanreCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnterpriseGanreNameNull() {
                return this.IsNull(this.tableSalesDetail.EnterpriseGanreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnterpriseGanreNameNull() {
                this[this.tableSalesDetail.EnterpriseGanreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCodeNull() {
                return this.IsNull(this.tableSalesDetail.WarehouseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCodeNull() {
                this[this.tableSalesDetail.WarehouseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNameNull() {
                return this.IsNull(this.tableSalesDetail.WarehouseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNameNull() {
                this[this.tableSalesDetail.WarehouseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseShelfNoNull() {
                return this.IsNull(this.tableSalesDetail.WarehouseShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseShelfNoNull() {
                this[this.tableSalesDetail.WarehouseShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesOrderDivCdNull() {
                return this.IsNull(this.tableSalesDetail.SalesOrderDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesOrderDivCdNull() {
                this[this.tableSalesDetail.SalesOrderDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitCodeNull() {
                return this.IsNull(this.tableSalesDetail.UnitCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitCodeNull() {
                this[this.tableSalesDetail.UnitCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNameNull() {
                return this.IsNull(this.tableSalesDetail.UnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNameNull() {
                this[this.tableSalesDetail.UnitNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsRateRankNull() {
                return this.IsNull(this.tableSalesDetail.GoodsRateRankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsRateRankNull() {
                this[this.tableSalesDetail.GoodsRateRankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustRateGrpCodeNull() {
                return this.IsNull(this.tableSalesDetail.CustRateGrpCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustRateGrpCodeNull() {
                this[this.tableSalesDetail.CustRateGrpCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuppRateGrpCodeNull() {
                return this.IsNull(this.tableSalesDetail.SuppRateGrpCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuppRateGrpCodeNull() {
                this[this.tableSalesDetail.SuppRateGrpCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceRateNull() {
                return this.IsNull(this.tableSalesDetail.ListPriceRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceRateNull() {
                this[this.tableSalesDetail.ListPriceRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateDivLPriceNull() {
                return this.IsNull(this.tableSalesDetail.RateDivLPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateDivLPriceNull() {
                this[this.tableSalesDetail.RateDivLPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnPrcCalcCdLPriceNull() {
                return this.IsNull(this.tableSalesDetail.UnPrcCalcCdLPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnPrcCalcCdLPriceNull() {
                this[this.tableSalesDetail.UnPrcCalcCdLPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceCdLPriceNull() {
                return this.IsNull(this.tableSalesDetail.PriceCdLPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceCdLPriceNull() {
                this[this.tableSalesDetail.PriceCdLPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStdUnPrcLPriceNull() {
                return this.IsNull(this.tableSalesDetail.StdUnPrcLPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStdUnPrcLPriceNull() {
                this[this.tableSalesDetail.StdUnPrcLPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFracProcUnitLPriceNull() {
                return this.IsNull(this.tableSalesDetail.FracProcUnitLPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFracProcUnitLPriceNull() {
                this[this.tableSalesDetail.FracProcUnitLPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFracProcLPriceNull() {
                return this.IsNull(this.tableSalesDetail.FracProcLPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFracProcLPriceNull() {
                this[this.tableSalesDetail.FracProcLPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceTaxIncFlNull() {
                return this.IsNull(this.tableSalesDetail.ListPriceTaxIncFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceTaxIncFlNull() {
                this[this.tableSalesDetail.ListPriceTaxIncFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceTaxExcFlNull() {
                return this.IsNull(this.tableSalesDetail.ListPriceTaxExcFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceTaxExcFlNull() {
                this[this.tableSalesDetail.ListPriceTaxExcFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceChngCdNull() {
                return this.IsNull(this.tableSalesDetail.ListPriceChngCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceChngCdNull() {
                this[this.tableSalesDetail.ListPriceChngCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesRateNull() {
                return this.IsNull(this.tableSalesDetail.SalesRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesRateNull() {
                this[this.tableSalesDetail.SalesRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateDivSalUnPrcNull() {
                return this.IsNull(this.tableSalesDetail.RateDivSalUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateDivSalUnPrcNull() {
                this[this.tableSalesDetail.RateDivSalUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnPrcCalcCdSalUnPrcNull() {
                return this.IsNull(this.tableSalesDetail.UnPrcCalcCdSalUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnPrcCalcCdSalUnPrcNull() {
                this[this.tableSalesDetail.UnPrcCalcCdSalUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceCdSalUnPrcNull() {
                return this.IsNull(this.tableSalesDetail.PriceCdSalUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceCdSalUnPrcNull() {
                this[this.tableSalesDetail.PriceCdSalUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStdUnPrcSalUnPrcNull() {
                return this.IsNull(this.tableSalesDetail.StdUnPrcSalUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStdUnPrcSalUnPrcNull() {
                this[this.tableSalesDetail.StdUnPrcSalUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFracProcUnitSalUnPrcNull() {
                return this.IsNull(this.tableSalesDetail.FracProcUnitSalUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFracProcUnitSalUnPrcNull() {
                this[this.tableSalesDetail.FracProcUnitSalUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFracProcSalUnPrcNull() {
                return this.IsNull(this.tableSalesDetail.FracProcSalUnPrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFracProcSalUnPrcNull() {
                this[this.tableSalesDetail.FracProcSalUnPrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnPrcTaxIncFlNull() {
                return this.IsNull(this.tableSalesDetail.SalesUnPrcTaxIncFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnPrcTaxIncFlNull() {
                this[this.tableSalesDetail.SalesUnPrcTaxIncFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnPrcTaxExcFlNull() {
                return this.IsNull(this.tableSalesDetail.SalesUnPrcTaxExcFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnPrcTaxExcFlNull() {
                this[this.tableSalesDetail.SalesUnPrcTaxExcFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnPrcChngCdNull() {
                return this.IsNull(this.tableSalesDetail.SalesUnPrcChngCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnPrcChngCdNull() {
                this[this.tableSalesDetail.SalesUnPrcChngCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostRateNull() {
                return this.IsNull(this.tableSalesDetail.CostRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostRateNull() {
                this[this.tableSalesDetail.CostRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateDivUnCstNull() {
                return this.IsNull(this.tableSalesDetail.RateDivUnCstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateDivUnCstNull() {
                this[this.tableSalesDetail.RateDivUnCstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnPrcCalcCdUnCstNull() {
                return this.IsNull(this.tableSalesDetail.UnPrcCalcCdUnCstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnPrcCalcCdUnCstNull() {
                this[this.tableSalesDetail.UnPrcCalcCdUnCstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceCdUnCstNull() {
                return this.IsNull(this.tableSalesDetail.PriceCdUnCstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceCdUnCstNull() {
                this[this.tableSalesDetail.PriceCdUnCstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStdUnPrcUnCstNull() {
                return this.IsNull(this.tableSalesDetail.StdUnPrcUnCstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStdUnPrcUnCstNull() {
                this[this.tableSalesDetail.StdUnPrcUnCstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFracProcUnitUnCstNull() {
                return this.IsNull(this.tableSalesDetail.FracProcUnitUnCstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFracProcUnitUnCstNull() {
                this[this.tableSalesDetail.FracProcUnitUnCstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFracProcUnCstNull() {
                return this.IsNull(this.tableSalesDetail.FracProcUnCstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFracProcUnCstNull() {
                this[this.tableSalesDetail.FracProcUnCstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnitCostNull() {
                return this.IsNull(this.tableSalesDetail.SalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnitCostNull() {
                this[this.tableSalesDetail.SalesUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnitCostChngDivNull() {
                return this.IsNull(this.tableSalesDetail.SalesUnitCostChngDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnitCostChngDivNull() {
                this[this.tableSalesDetail.SalesUnitCostChngDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBargainCdNull() {
                return this.IsNull(this.tableSalesDetail.BargainCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBargainCdNull() {
                this[this.tableSalesDetail.BargainCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBargainNmNull() {
                return this.IsNull(this.tableSalesDetail.BargainNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBargainNmNull() {
                this[this.tableSalesDetail.BargainNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentCntNull() {
                return this.IsNull(this.tableSalesDetail.ShipmentCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentCntNull() {
                this[this.tableSalesDetail.ShipmentCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesMoneyTaxIncNull() {
                return this.IsNull(this.tableSalesDetail.SalesMoneyTaxIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesMoneyTaxIncNull() {
                this[this.tableSalesDetail.SalesMoneyTaxIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesMoneyTaxExcNull() {
                return this.IsNull(this.tableSalesDetail.SalesMoneyTaxExcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesMoneyTaxExcNull() {
                this[this.tableSalesDetail.SalesMoneyTaxExcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalsePriceConsTaxNull() {
                return this.IsNull(this.tableSalesDetail.SalsePriceConsTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalsePriceConsTaxNull() {
                this[this.tableSalesDetail.SalsePriceConsTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostNull() {
                return this.IsNull(this.tableSalesDetail.CostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostNull() {
                this[this.tableSalesDetail.CostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGrsProfitChkDivNull() {
                return this.IsNull(this.tableSalesDetail.GrsProfitChkDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGrsProfitChkDivNull() {
                this[this.tableSalesDetail.GrsProfitChkDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesGoodsCdNull() {
                return this.IsNull(this.tableSalesDetail.SalesGoodsCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesGoodsCdNull() {
                this[this.tableSalesDetail.SalesGoodsCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAdjustNull() {
                return this.IsNull(this.tableSalesDetail.TaxAdjustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAdjustNull() {
                this[this.tableSalesDetail.TaxAdjustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceAdjustNull() {
                return this.IsNull(this.tableSalesDetail.BalanceAdjustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceAdjustNull() {
                this[this.tableSalesDetail.BalanceAdjustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxationDivCdNull() {
                return this.IsNull(this.tableSalesDetail.TaxationDivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxationDivCdNull() {
                this[this.tableSalesDetail.TaxationDivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartySlipNumDtlNull() {
                return this.IsNull(this.tableSalesDetail.PartySlipNumDtlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartySlipNumDtlNull() {
                this[this.tableSalesDetail.PartySlipNumDtlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDtlNoteNull() {
                return this.IsNull(this.tableSalesDetail.DtlNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDtlNoteNull() {
                this[this.tableSalesDetail.DtlNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCdNull() {
                return this.IsNull(this.tableSalesDetail.SupplierCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCdNull() {
                this[this.tableSalesDetail.SupplierCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSnmNull() {
                return this.IsNull(this.tableSalesDetail.SupplierSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSnmNull() {
                this[this.tableSalesDetail.SupplierSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResultsAddUpSecCdNull() {
                return this.IsNull(this.tableSalesDetail.ResultsAddUpSecCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResultsAddUpSecCdNull() {
                this[this.tableSalesDetail.ResultsAddUpSecCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderNumberNull() {
                return this.IsNull(this.tableSalesDetail.OrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderNumberNull() {
                this[this.tableSalesDetail.OrderNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcceptAnOrderCntNull() {
                return this.IsNull(this.tableSalesDetail.AcceptAnOrderCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcceptAnOrderCntNull() {
                this[this.tableSalesDetail.AcceptAnOrderCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcptAnOdrAdjustCntNull() {
                return this.IsNull(this.tableSalesDetail.AcptAnOdrAdjustCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcptAnOdrAdjustCntNull() {
                this[this.tableSalesDetail.AcptAnOdrAdjustCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcptAnOdrRemainCntNull() {
                return this.IsNull(this.tableSalesDetail.AcptAnOdrRemainCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcptAnOdrRemainCntNull() {
                this[this.tableSalesDetail.AcptAnOdrRemainCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipMemo1Null() {
                return this.IsNull(this.tableSalesDetail.SlipMemo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipMemo1Null() {
                this[this.tableSalesDetail.SlipMemo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipMemo2Null() {
                return this.IsNull(this.tableSalesDetail.SlipMemo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipMemo2Null() {
                this[this.tableSalesDetail.SlipMemo2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipMemo3Null() {
                return this.IsNull(this.tableSalesDetail.SlipMemo3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipMemo3Null() {
                this[this.tableSalesDetail.SlipMemo3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipMemo4Null() {
                return this.IsNull(this.tableSalesDetail.SlipMemo4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipMemo4Null() {
                this[this.tableSalesDetail.SlipMemo4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipMemo5Null() {
                return this.IsNull(this.tableSalesDetail.SlipMemo5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipMemo5Null() {
                this[this.tableSalesDetail.SlipMemo5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipMemo6Null() {
                return this.IsNull(this.tableSalesDetail.SlipMemo6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipMemo6Null() {
                this[this.tableSalesDetail.SlipMemo6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsideMemo1Null() {
                return this.IsNull(this.tableSalesDetail.InsideMemo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsideMemo1Null() {
                this[this.tableSalesDetail.InsideMemo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsideMemo2Null() {
                return this.IsNull(this.tableSalesDetail.InsideMemo2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsideMemo2Null() {
                this[this.tableSalesDetail.InsideMemo2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsideMemo3Null() {
                return this.IsNull(this.tableSalesDetail.InsideMemo3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsideMemo3Null() {
                this[this.tableSalesDetail.InsideMemo3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsideMemo4Null() {
                return this.IsNull(this.tableSalesDetail.InsideMemo4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsideMemo4Null() {
                this[this.tableSalesDetail.InsideMemo4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsideMemo5Null() {
                return this.IsNull(this.tableSalesDetail.InsideMemo5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsideMemo5Null() {
                this[this.tableSalesDetail.InsideMemo5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInsideMemo6Null() {
                return this.IsNull(this.tableSalesDetail.InsideMemo6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInsideMemo6Null() {
                this[this.tableSalesDetail.InsideMemo6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfListPriceNull() {
                return this.IsNull(this.tableSalesDetail.BfListPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfListPriceNull() {
                this[this.tableSalesDetail.BfListPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfSalesUnitPriceNull() {
                return this.IsNull(this.tableSalesDetail.BfSalesUnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfSalesUnitPriceNull() {
                this[this.tableSalesDetail.BfSalesUnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfUnitCostNull() {
                return this.IsNull(this.tableSalesDetail.BfUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfUnitCostNull() {
                this[this.tableSalesDetail.BfUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrtGoodsNoNull() {
                return this.IsNull(this.tableSalesDetail.PrtGoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrtGoodsNoNull() {
                this[this.tableSalesDetail.PrtGoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrtGoodsNameNull() {
                return this.IsNull(this.tableSalesDetail.PrtGoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrtGoodsNameNull() {
                this[this.tableSalesDetail.PrtGoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrtGoodsMakerCdNull() {
                return this.IsNull(this.tableSalesDetail.PrtGoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrtGoodsMakerCdNull() {
                this[this.tableSalesDetail.PrtGoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrtGoodsMakerNmNull() {
                return this.IsNull(this.tableSalesDetail.PrtGoodsMakerNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrtGoodsMakerNmNull() {
                this[this.tableSalesDetail.PrtGoodsMakerNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContractDivCdDtlNull() {
                return this.IsNull(this.tableSalesDetail.ContractDivCdDtlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContractDivCdDtlNull() {
                this[this.tableSalesDetail.ContractDivCdDtlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableSalesDetail.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableSalesDetail.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableSalesDetail.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableSalesDetail.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerName2Null() {
                return this.IsNull(this.tableSalesDetail.CustomerName2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerName2Null() {
                this[this.tableSalesDetail.CustomerName2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerSnmNull() {
                return this.IsNull(this.tableSalesDetail.CustomerSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerSnmNull() {
                this[this.tableSalesDetail.CustomerSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeCodeNull() {
                return this.IsNull(this.tableSalesDetail.AddresseeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeCodeNull() {
                this[this.tableSalesDetail.AddresseeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeNameNull() {
                return this.IsNull(this.tableSalesDetail.AddresseeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeNameNull() {
                this[this.tableSalesDetail.AddresseeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddresseeName2Null() {
                return this.IsNull(this.tableSalesDetail.AddresseeName2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddresseeName2Null() {
                this[this.tableSalesDetail.AddresseeName2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesInputCodeNull() {
                return this.IsNull(this.tableSalesDetail.SalesInputCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesInputCodeNull() {
                this[this.tableSalesDetail.SalesInputCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesInputNameNull() {
                return this.IsNull(this.tableSalesDetail.SalesInputNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesInputNameNull() {
                this[this.tableSalesDetail.SalesInputNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrontEmployeeCdNull() {
                return this.IsNull(this.tableSalesDetail.FrontEmployeeCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrontEmployeeCdNull() {
                this[this.tableSalesDetail.FrontEmployeeCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFrontEmployeeNmNull() {
                return this.IsNull(this.tableSalesDetail.FrontEmployeeNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFrontEmployeeNmNull() {
                this[this.tableSalesDetail.FrontEmployeeNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesEmployeeCdNull() {
                return this.IsNull(this.tableSalesDetail.SalesEmployeeCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesEmployeeCdNull() {
                this[this.tableSalesDetail.SalesEmployeeCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesEmployeeNmNull() {
                return this.IsNull(this.tableSalesDetail.SalesEmployeeNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesEmployeeNmNull() {
                this[this.tableSalesDetail.SalesEmployeeNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrtBLGoodsCodeNull() {
                return this.IsNull(this.tableSalesDetail.PrtBLGoodsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrtBLGoodsCodeNull() {
                this[this.tableSalesDetail.PrtBLGoodsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrtBLGoodsNameNull() {
                return this.IsNull(this.tableSalesDetail.PrtBLGoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrtBLGoodsNameNull() {
                this[this.tableSalesDetail.PrtBLGoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tableSalesDetail.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tableSalesDetail.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCdNmNull() {
                return this.IsNull(this.tableSalesDetail.SalesCdNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCdNmNull() {
                this[this.tableSalesDetail.SalesCdNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWorkManHourNull() {
                return this.IsNull(this.tableSalesDetail.WorkManHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWorkManHourNull() {
                this[this.tableSalesDetail.WorkManHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWayToOrderNull() {
                return this.IsNull(this.tableSalesDetail.WayToOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWayToOrderNull() {
                this[this.tableSalesDetail.WayToOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnitTotalNull() {
                return this.IsNull(this.tableSalesDetail.SalesUnitTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnitTotalNull() {
                this[this.tableSalesDetail.SalesUnitTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCooprtKindNull() {
                return this.IsNull(this.tableSalesDetail.CooprtKindColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCooprtKindNull() {
                this[this.tableSalesDetail.CooprtKindColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAutoAnswerDivSCMNull() {
                return this.IsNull(this.tableSalesDetail.AutoAnswerDivSCMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAutoAnswerDivSCMNull() {
                this[this.tableSalesDetail.AutoAnswerDivSCMColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesSlipRowChangeEvent : global::System.EventArgs {
            
            private SalesSlipRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSlipRowChangeEvent(SalesSlipRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesSlipRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SecInfoSetRowChangeEvent : global::System.EventArgs {
            
            private SecInfoSetRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SecInfoSetRowChangeEvent(SecInfoSetRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SecInfoSetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesDetailRowChangeEvent : global::System.EventArgs {
            
            private SalesDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRowChangeEvent(SalesDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591