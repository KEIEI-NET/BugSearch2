//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3620
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.Controller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("StockMoveDetailDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class StockMoveDetailDataSet : global::System.Data.DataSet {
        
        private StockMoveDetailDataTable tableStockMoveDetail;
        
        private StockMoveTotalDataTable tableStockMoveTotal;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockMoveDetailDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected StockMoveDetailDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["StockMoveDetail"] != null)) {
                    base.Tables.Add(new StockMoveDetailDataTable(ds.Tables["StockMoveDetail"]));
                }
                if ((ds.Tables["StockMoveTotal"] != null)) {
                    base.Tables.Add(new StockMoveTotalDataTable(ds.Tables["StockMoveTotal"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockMoveDetailDataTable StockMoveDetail {
            get {
                return this.tableStockMoveDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockMoveTotalDataTable StockMoveTotal {
            get {
                return this.tableStockMoveTotal;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            StockMoveDetailDataSet cln = ((StockMoveDetailDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["StockMoveDetail"] != null)) {
                    base.Tables.Add(new StockMoveDetailDataTable(ds.Tables["StockMoveDetail"]));
                }
                if ((ds.Tables["StockMoveTotal"] != null)) {
                    base.Tables.Add(new StockMoveTotalDataTable(ds.Tables["StockMoveTotal"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableStockMoveDetail = ((StockMoveDetailDataTable)(base.Tables["StockMoveDetail"]));
            if ((initTable == true)) {
                if ((this.tableStockMoveDetail != null)) {
                    this.tableStockMoveDetail.InitVars();
                }
            }
            this.tableStockMoveTotal = ((StockMoveTotalDataTable)(base.Tables["StockMoveTotal"]));
            if ((initTable == true)) {
                if ((this.tableStockMoveTotal != null)) {
                    this.tableStockMoveTotal.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "StockMoveDetailDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/StockMoveDetailDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableStockMoveDetail = new StockMoveDetailDataTable();
            base.Tables.Add(this.tableStockMoveDetail);
            this.tableStockMoveTotal = new StockMoveTotalDataTable();
            base.Tables.Add(this.tableStockMoveTotal);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockMoveDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockMoveTotal() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            StockMoveDetailDataSet ds = new StockMoveDetailDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void StockMoveDetailRowChangeEventHandler(object sender, StockMoveDetailRowChangeEvent e);
        
        public delegate void StockMoveTotalRowChangeEventHandler(object sender, StockMoveTotalRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockMoveDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSelectionCheck;
            
            private global::System.Data.DataColumn columnRowNo;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnStockMoveSlipNo;
            
            private global::System.Data.DataColumn columnStockMoveRowNo;
            
            private global::System.Data.DataColumn columnStockMoveFormalCd;
            
            private global::System.Data.DataColumn columnStockMoveFormalDisplay;
            
            private global::System.Data.DataColumn columnAgentNm;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnMakerName;
            
            private global::System.Data.DataColumn columnSupplierCd;
            
            private global::System.Data.DataColumn columnSupplierSnm;
            
            private global::System.Data.DataColumn columnBLGoodsCode;
            
            private global::System.Data.DataColumn columnStockUnitPriceFl;
            
            private global::System.Data.DataColumn columnMoveCoun;
            
            private global::System.Data.DataColumn columnListPriceFl;
            
            private global::System.Data.DataColumn columnStockMovePrice;
            
            private global::System.Data.DataColumn columnUpdateSecCd;
            
            private global::System.Data.DataColumn columnUpdateSecGuideSnm;
            
            private global::System.Data.DataColumn columnBfSectionCode;
            
            private global::System.Data.DataColumn columnBfSectionGuideSnm;
            
            private global::System.Data.DataColumn columnBfEnterWarehCode;
            
            private global::System.Data.DataColumn columnBfEnterWarehName;
            
            private global::System.Data.DataColumn columnBfShelfNo;
            
            private global::System.Data.DataColumn columnAfSectionCod;
            
            private global::System.Data.DataColumn columnAfSectionGuideSnm;
            
            private global::System.Data.DataColumn columnAfEnterWarehCode;
            
            private global::System.Data.DataColumn columnAfEnterWarehName;
            
            private global::System.Data.DataColumn columnAfShelfNo;
            
            private global::System.Data.DataColumn columnMoveStatus;
            
            private global::System.Data.DataColumn columnShipmentFixDay;
            
            private global::System.Data.DataColumn columnArrivalGoodsDay;
            
            private global::System.Data.DataColumn columnInputDay;
            
            private global::System.Data.DataColumn columnWarehouseNote1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveDetailDataTable() {
                this.TableName = "StockMoveDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockMoveDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockMoveDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelectionCheckColumn {
                get {
                    return this.columnSelectionCheck;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNoColumn {
                get {
                    return this.columnRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockMoveSlipNoColumn {
                get {
                    return this.columnStockMoveSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockMoveRowNoColumn {
                get {
                    return this.columnStockMoveRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockMoveFormalCdColumn {
                get {
                    return this.columnStockMoveFormalCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockMoveFormalDisplayColumn {
                get {
                    return this.columnStockMoveFormalDisplay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgentNmColumn {
                get {
                    return this.columnAgentNm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MakerNameColumn {
                get {
                    return this.columnMakerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCdColumn {
                get {
                    return this.columnSupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSnmColumn {
                get {
                    return this.columnSupplierSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLGoodsCodeColumn {
                get {
                    return this.columnBLGoodsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockUnitPriceFlColumn {
                get {
                    return this.columnStockUnitPriceFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoveCounColumn {
                get {
                    return this.columnMoveCoun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ListPriceFlColumn {
                get {
                    return this.columnListPriceFl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockMovePriceColumn {
                get {
                    return this.columnStockMovePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateSecCdColumn {
                get {
                    return this.columnUpdateSecCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateSecGuideSnmColumn {
                get {
                    return this.columnUpdateSecGuideSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfSectionCodeColumn {
                get {
                    return this.columnBfSectionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfSectionGuideSnmColumn {
                get {
                    return this.columnBfSectionGuideSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfEnterWarehCodeColumn {
                get {
                    return this.columnBfEnterWarehCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfEnterWarehNameColumn {
                get {
                    return this.columnBfEnterWarehName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BfShelfNoColumn {
                get {
                    return this.columnBfShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfSectionCodColumn {
                get {
                    return this.columnAfSectionCod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfSectionGuideSnmColumn {
                get {
                    return this.columnAfSectionGuideSnm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfEnterWarehCodeColumn {
                get {
                    return this.columnAfEnterWarehCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfEnterWarehNameColumn {
                get {
                    return this.columnAfEnterWarehName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AfShelfNoColumn {
                get {
                    return this.columnAfShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoveStatusColumn {
                get {
                    return this.columnMoveStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentFixDayColumn {
                get {
                    return this.columnShipmentFixDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalGoodsDayColumn {
                get {
                    return this.columnArrivalGoodsDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputDayColumn {
                get {
                    return this.columnInputDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseNote1Column {
                get {
                    return this.columnWarehouseNote1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveDetailRow this[int index] {
                get {
                    return ((StockMoveDetailRow)(this.Rows[index]));
                }
            }
            
            public event StockMoveDetailRowChangeEventHandler StockMoveDetailRowChanging;
            
            public event StockMoveDetailRowChangeEventHandler StockMoveDetailRowChanged;
            
            public event StockMoveDetailRowChangeEventHandler StockMoveDetailRowDeleting;
            
            public event StockMoveDetailRowChangeEventHandler StockMoveDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockMoveDetailRow(StockMoveDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveDetailRow AddStockMoveDetailRow(
                        bool SelectionCheck, 
                        int RowNo, 
                        System.DateTime Date, 
                        int StockMoveSlipNo, 
                        int StockMoveRowNo, 
                        int StockMoveFormalCd, 
                        string StockMoveFormalDisplay, 
                        string AgentNm, 
                        string GoodsName, 
                        string GoodsNo, 
                        int GoodsMakerCd, 
                        string MakerName, 
                        int SupplierCd, 
                        string SupplierSnm, 
                        int BLGoodsCode, 
                        double StockUnitPriceFl, 
                        double MoveCoun, 
                        double ListPriceFl, 
                        long StockMovePrice, 
                        int UpdateSecCd, 
                        string UpdateSecGuideSnm, 
                        int BfSectionCode, 
                        string BfSectionGuideSnm, 
                        int BfEnterWarehCode, 
                        string BfEnterWarehName, 
                        string BfShelfNo, 
                        int AfSectionCod, 
                        string AfSectionGuideSnm, 
                        int AfEnterWarehCode, 
                        string AfEnterWarehName, 
                        string AfShelfNo, 
                        string MoveStatus, 
                        System.DateTime ShipmentFixDay, 
                        System.DateTime ArrivalGoodsDay, 
                        System.DateTime InputDay, 
                        string WarehouseNote1) {
                StockMoveDetailRow rowStockMoveDetailRow = ((StockMoveDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SelectionCheck,
                        RowNo,
                        Date,
                        StockMoveSlipNo,
                        StockMoveRowNo,
                        StockMoveFormalCd,
                        StockMoveFormalDisplay,
                        AgentNm,
                        GoodsName,
                        GoodsNo,
                        GoodsMakerCd,
                        MakerName,
                        SupplierCd,
                        SupplierSnm,
                        BLGoodsCode,
                        StockUnitPriceFl,
                        MoveCoun,
                        ListPriceFl,
                        StockMovePrice,
                        UpdateSecCd,
                        UpdateSecGuideSnm,
                        BfSectionCode,
                        BfSectionGuideSnm,
                        BfEnterWarehCode,
                        BfEnterWarehName,
                        BfShelfNo,
                        AfSectionCod,
                        AfSectionGuideSnm,
                        AfEnterWarehCode,
                        AfEnterWarehName,
                        AfShelfNo,
                        MoveStatus,
                        ShipmentFixDay,
                        ArrivalGoodsDay,
                        InputDay,
                        WarehouseNote1};
                rowStockMoveDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockMoveDetailRow);
                return rowStockMoveDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveDetailRow FindByRowNo(int RowNo) {
                return ((StockMoveDetailRow)(this.Rows.Find(new object[] {
                            RowNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockMoveDetailDataTable cln = ((StockMoveDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockMoveDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSelectionCheck = base.Columns["SelectionCheck"];
                this.columnRowNo = base.Columns["RowNo"];
                this.columnDate = base.Columns["Date"];
                this.columnStockMoveSlipNo = base.Columns["StockMoveSlipNo"];
                this.columnStockMoveRowNo = base.Columns["StockMoveRowNo"];
                this.columnStockMoveFormalCd = base.Columns["StockMoveFormalCd"];
                this.columnStockMoveFormalDisplay = base.Columns["StockMoveFormalDisplay"];
                this.columnAgentNm = base.Columns["AgentNm"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnMakerName = base.Columns["MakerName"];
                this.columnSupplierCd = base.Columns["SupplierCd"];
                this.columnSupplierSnm = base.Columns["SupplierSnm"];
                this.columnBLGoodsCode = base.Columns["BLGoodsCode"];
                this.columnStockUnitPriceFl = base.Columns["StockUnitPriceFl"];
                this.columnMoveCoun = base.Columns["MoveCoun"];
                this.columnListPriceFl = base.Columns["ListPriceFl"];
                this.columnStockMovePrice = base.Columns["StockMovePrice"];
                this.columnUpdateSecCd = base.Columns["UpdateSecCd"];
                this.columnUpdateSecGuideSnm = base.Columns["UpdateSecGuideSnm"];
                this.columnBfSectionCode = base.Columns["BfSectionCode"];
                this.columnBfSectionGuideSnm = base.Columns["BfSectionGuideSnm"];
                this.columnBfEnterWarehCode = base.Columns["BfEnterWarehCode"];
                this.columnBfEnterWarehName = base.Columns["BfEnterWarehName"];
                this.columnBfShelfNo = base.Columns["BfShelfNo"];
                this.columnAfSectionCod = base.Columns["AfSectionCod"];
                this.columnAfSectionGuideSnm = base.Columns["AfSectionGuideSnm"];
                this.columnAfEnterWarehCode = base.Columns["AfEnterWarehCode"];
                this.columnAfEnterWarehName = base.Columns["AfEnterWarehName"];
                this.columnAfShelfNo = base.Columns["AfShelfNo"];
                this.columnMoveStatus = base.Columns["MoveStatus"];
                this.columnShipmentFixDay = base.Columns["ShipmentFixDay"];
                this.columnArrivalGoodsDay = base.Columns["ArrivalGoodsDay"];
                this.columnInputDay = base.Columns["InputDay"];
                this.columnWarehouseNote1 = base.Columns["WarehouseNote1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSelectionCheck = new global::System.Data.DataColumn("SelectionCheck", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelectionCheck);
                this.columnRowNo = new global::System.Data.DataColumn("RowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNo);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnStockMoveSlipNo = new global::System.Data.DataColumn("StockMoveSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockMoveSlipNo);
                this.columnStockMoveRowNo = new global::System.Data.DataColumn("StockMoveRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockMoveRowNo);
                this.columnStockMoveFormalCd = new global::System.Data.DataColumn("StockMoveFormalCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockMoveFormalCd);
                this.columnStockMoveFormalDisplay = new global::System.Data.DataColumn("StockMoveFormalDisplay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockMoveFormalDisplay);
                this.columnAgentNm = new global::System.Data.DataColumn("AgentNm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgentNm);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnMakerName = new global::System.Data.DataColumn("MakerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakerName);
                this.columnSupplierCd = new global::System.Data.DataColumn("SupplierCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCd);
                this.columnSupplierSnm = new global::System.Data.DataColumn("SupplierSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSnm);
                this.columnBLGoodsCode = new global::System.Data.DataColumn("BLGoodsCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLGoodsCode);
                this.columnStockUnitPriceFl = new global::System.Data.DataColumn("StockUnitPriceFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockUnitPriceFl);
                this.columnMoveCoun = new global::System.Data.DataColumn("MoveCoun", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveCoun);
                this.columnListPriceFl = new global::System.Data.DataColumn("ListPriceFl", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnListPriceFl);
                this.columnStockMovePrice = new global::System.Data.DataColumn("StockMovePrice", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockMovePrice);
                this.columnUpdateSecCd = new global::System.Data.DataColumn("UpdateSecCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateSecCd);
                this.columnUpdateSecGuideSnm = new global::System.Data.DataColumn("UpdateSecGuideSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateSecGuideSnm);
                this.columnBfSectionCode = new global::System.Data.DataColumn("BfSectionCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfSectionCode);
                this.columnBfSectionGuideSnm = new global::System.Data.DataColumn("BfSectionGuideSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfSectionGuideSnm);
                this.columnBfEnterWarehCode = new global::System.Data.DataColumn("BfEnterWarehCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfEnterWarehCode);
                this.columnBfEnterWarehName = new global::System.Data.DataColumn("BfEnterWarehName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfEnterWarehName);
                this.columnBfShelfNo = new global::System.Data.DataColumn("BfShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBfShelfNo);
                this.columnAfSectionCod = new global::System.Data.DataColumn("AfSectionCod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfSectionCod);
                this.columnAfSectionGuideSnm = new global::System.Data.DataColumn("AfSectionGuideSnm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfSectionGuideSnm);
                this.columnAfEnterWarehCode = new global::System.Data.DataColumn("AfEnterWarehCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfEnterWarehCode);
                this.columnAfEnterWarehName = new global::System.Data.DataColumn("AfEnterWarehName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfEnterWarehName);
                this.columnAfShelfNo = new global::System.Data.DataColumn("AfShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAfShelfNo);
                this.columnMoveStatus = new global::System.Data.DataColumn("MoveStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveStatus);
                this.columnShipmentFixDay = new global::System.Data.DataColumn("ShipmentFixDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentFixDay);
                this.columnArrivalGoodsDay = new global::System.Data.DataColumn("ArrivalGoodsDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalGoodsDay);
                this.columnInputDay = new global::System.Data.DataColumn("InputDay", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputDay);
                this.columnWarehouseNote1 = new global::System.Data.DataColumn("WarehouseNote1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseNote1);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnRowNo}, true));
                this.columnSelectionCheck.Caption = "選択";
                this.columnRowNo.AllowDBNull = false;
                this.columnRowNo.Unique = true;
                this.columnRowNo.Caption = "行数";
                this.columnDate.Caption = "入出荷日/伝票日付";
                this.columnStockMoveSlipNo.Caption = "伝票番号";
                this.columnStockMoveRowNo.Caption = "行No";
                this.columnStockMoveFormalCd.Caption = "区分コード";
                this.columnStockMoveFormalDisplay.Caption = "区分";
                this.columnAgentNm.Caption = "担当者名";
                this.columnGoodsName.Caption = "品名";
                this.columnGoodsNo.Caption = "品番";
                this.columnGoodsMakerCd.Caption = "メーカーコード";
                this.columnMakerName.Caption = "メーカー名";
                this.columnSupplierCd.Caption = "仕入先コード";
                this.columnSupplierSnm.Caption = "仕入先名";
                this.columnBLGoodsCode.Caption = "BLｺｰﾄﾞ";
                this.columnStockUnitPriceFl.Caption = "移動単価";
                this.columnMoveCoun.Caption = "数量";
                this.columnListPriceFl.Caption = "標準価格";
                this.columnStockMovePrice.Caption = "移動金額";
                this.columnUpdateSecCd.Caption = "入力拠点コード";
                this.columnUpdateSecGuideSnm.Caption = "入力拠点名";
                this.columnBfSectionCode.Caption = "出庫拠点コード";
                this.columnBfSectionGuideSnm.Caption = "出庫拠点名";
                this.columnBfEnterWarehCode.Caption = "出庫倉庫";
                this.columnBfEnterWarehName.Caption = "出庫倉庫名";
                this.columnBfShelfNo.Caption = "出庫棚番";
                this.columnAfSectionCod.Caption = "入庫拠点コード";
                this.columnAfSectionGuideSnm.Caption = "入庫拠点名";
                this.columnAfEnterWarehCode.Caption = "入庫倉庫";
                this.columnAfEnterWarehName.Caption = "入庫倉庫名";
                this.columnAfShelfNo.Caption = "入庫棚番";
                this.columnMoveStatus.Caption = "入荷区分";
                this.columnShipmentFixDay.Caption = "出荷日";
                this.columnArrivalGoodsDay.Caption = "入荷日";
                this.columnInputDay.Caption = "入力日";
                this.columnWarehouseNote1.Caption = "備考";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveDetailRow NewStockMoveDetailRow() {
                return ((StockMoveDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockMoveDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockMoveDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockMoveDetailRowChanged != null)) {
                    this.StockMoveDetailRowChanged(this, new StockMoveDetailRowChangeEvent(((StockMoveDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockMoveDetailRowChanging != null)) {
                    this.StockMoveDetailRowChanging(this, new StockMoveDetailRowChangeEvent(((StockMoveDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockMoveDetailRowDeleted != null)) {
                    this.StockMoveDetailRowDeleted(this, new StockMoveDetailRowChangeEvent(((StockMoveDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockMoveDetailRowDeleting != null)) {
                    this.StockMoveDetailRowDeleting(this, new StockMoveDetailRowChangeEvent(((StockMoveDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockMoveDetailRow(StockMoveDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StockMoveDetailDataSet ds = new StockMoveDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockMoveDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockMoveTotalDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnShipmentCount_Total;
            
            private global::System.Data.DataColumn columnArrivalCount_Total;
            
            private global::System.Data.DataColumn columnNotArrivalCount_Total;
            
            private global::System.Data.DataColumn columnShipmentPrice_Total;
            
            private global::System.Data.DataColumn columnArrivalPrice_Total;
            
            private global::System.Data.DataColumn columnNotArrivalPrice_Total;
            
            private global::System.Data.DataColumn columnShipmentListPriceFl_Total;
            
            private global::System.Data.DataColumn columnArrivalListPriceFl_Total;
            
            private global::System.Data.DataColumn columnNotArrivalListPriceFl_Total;
            
            private global::System.Data.DataColumn columnSlipCount;
            
            private global::System.Data.DataColumn columnDetailCount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveTotalDataTable() {
                this.TableName = "StockMoveTotal";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockMoveTotalDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockMoveTotalDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentCount_TotalColumn {
                get {
                    return this.columnShipmentCount_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalCount_TotalColumn {
                get {
                    return this.columnArrivalCount_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotArrivalCount_TotalColumn {
                get {
                    return this.columnNotArrivalCount_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentPrice_TotalColumn {
                get {
                    return this.columnShipmentPrice_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalPrice_TotalColumn {
                get {
                    return this.columnArrivalPrice_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotArrivalPrice_TotalColumn {
                get {
                    return this.columnNotArrivalPrice_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipmentListPriceFl_TotalColumn {
                get {
                    return this.columnShipmentListPriceFl_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalListPriceFl_TotalColumn {
                get {
                    return this.columnArrivalListPriceFl_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NotArrivalListPriceFl_TotalColumn {
                get {
                    return this.columnNotArrivalListPriceFl_Total;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipCountColumn {
                get {
                    return this.columnSlipCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailCountColumn {
                get {
                    return this.columnDetailCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveTotalRow this[int index] {
                get {
                    return ((StockMoveTotalRow)(this.Rows[index]));
                }
            }
            
            public event StockMoveTotalRowChangeEventHandler StockMoveTotalRowChanging;
            
            public event StockMoveTotalRowChangeEventHandler StockMoveTotalRowChanged;
            
            public event StockMoveTotalRowChangeEventHandler StockMoveTotalRowDeleting;
            
            public event StockMoveTotalRowChangeEventHandler StockMoveTotalRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockMoveTotalRow(StockMoveTotalRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveTotalRow AddStockMoveTotalRow(double ShipmentCount_Total, double ArrivalCount_Total, double NotArrivalCount_Total, long ShipmentPrice_Total, long ArrivalPrice_Total, long NotArrivalPrice_Total, double ShipmentListPriceFl_Total, double ArrivalListPriceFl_Total, double NotArrivalListPriceFl_Total, int SlipCount, int DetailCount) {
                StockMoveTotalRow rowStockMoveTotalRow = ((StockMoveTotalRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ShipmentCount_Total,
                        ArrivalCount_Total,
                        NotArrivalCount_Total,
                        ShipmentPrice_Total,
                        ArrivalPrice_Total,
                        NotArrivalPrice_Total,
                        ShipmentListPriceFl_Total,
                        ArrivalListPriceFl_Total,
                        NotArrivalListPriceFl_Total,
                        SlipCount,
                        DetailCount};
                rowStockMoveTotalRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockMoveTotalRow);
                return rowStockMoveTotalRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockMoveTotalDataTable cln = ((StockMoveTotalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockMoveTotalDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnShipmentCount_Total = base.Columns["ShipmentCount_Total"];
                this.columnArrivalCount_Total = base.Columns["ArrivalCount_Total"];
                this.columnNotArrivalCount_Total = base.Columns["NotArrivalCount_Total"];
                this.columnShipmentPrice_Total = base.Columns["ShipmentPrice_Total"];
                this.columnArrivalPrice_Total = base.Columns["ArrivalPrice_Total"];
                this.columnNotArrivalPrice_Total = base.Columns["NotArrivalPrice_Total"];
                this.columnShipmentListPriceFl_Total = base.Columns["ShipmentListPriceFl_Total"];
                this.columnArrivalListPriceFl_Total = base.Columns["ArrivalListPriceFl_Total"];
                this.columnNotArrivalListPriceFl_Total = base.Columns["NotArrivalListPriceFl_Total"];
                this.columnSlipCount = base.Columns["SlipCount"];
                this.columnDetailCount = base.Columns["DetailCount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnShipmentCount_Total = new global::System.Data.DataColumn("ShipmentCount_Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentCount_Total);
                this.columnArrivalCount_Total = new global::System.Data.DataColumn("ArrivalCount_Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalCount_Total);
                this.columnNotArrivalCount_Total = new global::System.Data.DataColumn("NotArrivalCount_Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotArrivalCount_Total);
                this.columnShipmentPrice_Total = new global::System.Data.DataColumn("ShipmentPrice_Total", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentPrice_Total);
                this.columnArrivalPrice_Total = new global::System.Data.DataColumn("ArrivalPrice_Total", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalPrice_Total);
                this.columnNotArrivalPrice_Total = new global::System.Data.DataColumn("NotArrivalPrice_Total", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotArrivalPrice_Total);
                this.columnShipmentListPriceFl_Total = new global::System.Data.DataColumn("ShipmentListPriceFl_Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentListPriceFl_Total);
                this.columnArrivalListPriceFl_Total = new global::System.Data.DataColumn("ArrivalListPriceFl_Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalListPriceFl_Total);
                this.columnNotArrivalListPriceFl_Total = new global::System.Data.DataColumn("NotArrivalListPriceFl_Total", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotArrivalListPriceFl_Total);
                this.columnSlipCount = new global::System.Data.DataColumn("SlipCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipCount);
                this.columnDetailCount = new global::System.Data.DataColumn("DetailCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailCount);
                this.columnShipmentCount_Total.Caption = "出荷/出庫合計数量";
                this.columnArrivalCount_Total.Caption = "入荷済/入庫合計数量";
                this.columnNotArrivalCount_Total.Caption = "未入荷合計数量";
                this.columnShipmentPrice_Total.Caption = "出荷/出庫合計金額";
                this.columnArrivalPrice_Total.Caption = "入荷済/入庫合計金額";
                this.columnNotArrivalPrice_Total.Caption = "未入荷合計金額";
                this.columnShipmentListPriceFl_Total.Caption = "出荷/出庫合計標準価格";
                this.columnArrivalListPriceFl_Total.Caption = "入荷済/入庫合計標準価格";
                this.columnNotArrivalListPriceFl_Total.Caption = "未入荷合計標準価格";
                this.columnSlipCount.Caption = "伝票枚数";
                this.columnDetailCount.Caption = "明細数";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveTotalRow NewStockMoveTotalRow() {
                return ((StockMoveTotalRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockMoveTotalRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockMoveTotalRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockMoveTotalRowChanged != null)) {
                    this.StockMoveTotalRowChanged(this, new StockMoveTotalRowChangeEvent(((StockMoveTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockMoveTotalRowChanging != null)) {
                    this.StockMoveTotalRowChanging(this, new StockMoveTotalRowChangeEvent(((StockMoveTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockMoveTotalRowDeleted != null)) {
                    this.StockMoveTotalRowDeleted(this, new StockMoveTotalRowChangeEvent(((StockMoveTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockMoveTotalRowDeleting != null)) {
                    this.StockMoveTotalRowDeleting(this, new StockMoveTotalRowChangeEvent(((StockMoveTotalRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockMoveTotalRow(StockMoveTotalRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StockMoveDetailDataSet ds = new StockMoveDetailDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockMoveTotalDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockMoveDetailRow : global::System.Data.DataRow {
            
            private StockMoveDetailDataTable tableStockMoveDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockMoveDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockMoveDetail = ((StockMoveDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SelectionCheck {
                get {
                    try {
                        return ((bool)(this[this.tableStockMoveDetail.SelectionCheckColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'SelectionCheck\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.SelectionCheckColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RowNo {
                get {
                    return ((int)(this[this.tableStockMoveDetail.RowNoColumn]));
                }
                set {
                    this[this.tableStockMoveDetail.RowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockMoveDetail.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'Date\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockMoveSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableStockMoveDetail.StockMoveSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'StockMoveSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.StockMoveSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockMoveRowNo {
                get {
                    try {
                        return ((int)(this[this.tableStockMoveDetail.StockMoveRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'StockMoveRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.StockMoveRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StockMoveFormalCd {
                get {
                    try {
                        return ((int)(this[this.tableStockMoveDetail.StockMoveFormalCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'StockMoveFormalCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.StockMoveFormalCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StockMoveFormalDisplay {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.StockMoveFormalDisplayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'StockMoveFormalDisplay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.StockMoveFormalDisplayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgentNm {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.AgentNmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'AgentNm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.AgentNmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.GoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'GoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCd {
                get {
                    try {
                        return ((int)(this[this.tableStockMoveDetail.GoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'GoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MakerName {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.MakerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'MakerName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.MakerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierCd {
                get {
                    try {
                        return ((int)(this[this.tableStockMoveDetail.SupplierCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'SupplierCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.SupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SupplierSnm {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.SupplierSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'SupplierSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.SupplierSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BLGoodsCode {
                get {
                    try {
                        return ((int)(this[this.tableStockMoveDetail.BLGoodsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'BLGoodsCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.BLGoodsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockUnitPriceFl {
                get {
                    try {
                        return ((double)(this[this.tableStockMoveDetail.StockUnitPriceFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'StockUnitPriceFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.StockUnitPriceFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double MoveCoun {
                get {
                    try {
                        return ((double)(this[this.tableStockMoveDetail.MoveCounColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'MoveCoun\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.MoveCounColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ListPriceFl {
                get {
                    try {
                        return ((double)(this[this.tableStockMoveDetail.ListPriceFlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'ListPriceFl\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.ListPriceFlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockMovePrice {
                get {
                    try {
                        return ((long)(this[this.tableStockMoveDetail.StockMovePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'StockMovePrice\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.StockMovePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UpdateSecCd {
                get {
                    try {
                        return ((int)(this[this.tableStockMoveDetail.UpdateSecCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'UpdateSecCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.UpdateSecCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdateSecGuideSnm {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.UpdateSecGuideSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'UpdateSecGuideSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.UpdateSecGuideSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BfSectionCode {
                get {
                    try {
                        return ((int)(this[this.tableStockMoveDetail.BfSectionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'BfSectionCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.BfSectionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BfSectionGuideSnm {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.BfSectionGuideSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'BfSectionGuideSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.BfSectionGuideSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BfEnterWarehCode {
                get {
                    try {
                        return ((int)(this[this.tableStockMoveDetail.BfEnterWarehCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'BfEnterWarehCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.BfEnterWarehCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BfEnterWarehName {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.BfEnterWarehNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'BfEnterWarehName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.BfEnterWarehNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BfShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.BfShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'BfShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.BfShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AfSectionCod {
                get {
                    try {
                        return ((int)(this[this.tableStockMoveDetail.AfSectionCodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'AfSectionCod\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.AfSectionCodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AfSectionGuideSnm {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.AfSectionGuideSnmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'AfSectionGuideSnm\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.AfSectionGuideSnmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AfEnterWarehCode {
                get {
                    try {
                        return ((int)(this[this.tableStockMoveDetail.AfEnterWarehCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'AfEnterWarehCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.AfEnterWarehCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AfEnterWarehName {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.AfEnterWarehNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'AfEnterWarehName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.AfEnterWarehNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AfShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.AfShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'AfShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.AfShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoveStatus {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.MoveStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'MoveStatus\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.MoveStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ShipmentFixDay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockMoveDetail.ShipmentFixDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'ShipmentFixDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.ShipmentFixDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ArrivalGoodsDay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockMoveDetail.ArrivalGoodsDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'ArrivalGoodsDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.ArrivalGoodsDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InputDay {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockMoveDetail.InputDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'InputDay\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.InputDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseNote1 {
                get {
                    try {
                        return ((string)(this[this.tableStockMoveDetail.WarehouseNote1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveDetail\' にある列 \'WarehouseNote1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveDetail.WarehouseNote1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelectionCheckNull() {
                return this.IsNull(this.tableStockMoveDetail.SelectionCheckColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelectionCheckNull() {
                this[this.tableStockMoveDetail.SelectionCheckColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableStockMoveDetail.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableStockMoveDetail.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockMoveSlipNoNull() {
                return this.IsNull(this.tableStockMoveDetail.StockMoveSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockMoveSlipNoNull() {
                this[this.tableStockMoveDetail.StockMoveSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockMoveRowNoNull() {
                return this.IsNull(this.tableStockMoveDetail.StockMoveRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockMoveRowNoNull() {
                this[this.tableStockMoveDetail.StockMoveRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockMoveFormalCdNull() {
                return this.IsNull(this.tableStockMoveDetail.StockMoveFormalCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockMoveFormalCdNull() {
                this[this.tableStockMoveDetail.StockMoveFormalCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockMoveFormalDisplayNull() {
                return this.IsNull(this.tableStockMoveDetail.StockMoveFormalDisplayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockMoveFormalDisplayNull() {
                this[this.tableStockMoveDetail.StockMoveFormalDisplayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgentNmNull() {
                return this.IsNull(this.tableStockMoveDetail.AgentNmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgentNmNull() {
                this[this.tableStockMoveDetail.AgentNmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableStockMoveDetail.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableStockMoveDetail.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNull() {
                return this.IsNull(this.tableStockMoveDetail.GoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNull() {
                this[this.tableStockMoveDetail.GoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMakerCdNull() {
                return this.IsNull(this.tableStockMoveDetail.GoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMakerCdNull() {
                this[this.tableStockMoveDetail.GoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMakerNameNull() {
                return this.IsNull(this.tableStockMoveDetail.MakerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMakerNameNull() {
                this[this.tableStockMoveDetail.MakerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCdNull() {
                return this.IsNull(this.tableStockMoveDetail.SupplierCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCdNull() {
                this[this.tableStockMoveDetail.SupplierCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSnmNull() {
                return this.IsNull(this.tableStockMoveDetail.SupplierSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSnmNull() {
                this[this.tableStockMoveDetail.SupplierSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLGoodsCodeNull() {
                return this.IsNull(this.tableStockMoveDetail.BLGoodsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLGoodsCodeNull() {
                this[this.tableStockMoveDetail.BLGoodsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockUnitPriceFlNull() {
                return this.IsNull(this.tableStockMoveDetail.StockUnitPriceFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockUnitPriceFlNull() {
                this[this.tableStockMoveDetail.StockUnitPriceFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoveCounNull() {
                return this.IsNull(this.tableStockMoveDetail.MoveCounColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoveCounNull() {
                this[this.tableStockMoveDetail.MoveCounColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsListPriceFlNull() {
                return this.IsNull(this.tableStockMoveDetail.ListPriceFlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetListPriceFlNull() {
                this[this.tableStockMoveDetail.ListPriceFlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockMovePriceNull() {
                return this.IsNull(this.tableStockMoveDetail.StockMovePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockMovePriceNull() {
                this[this.tableStockMoveDetail.StockMovePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateSecCdNull() {
                return this.IsNull(this.tableStockMoveDetail.UpdateSecCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateSecCdNull() {
                this[this.tableStockMoveDetail.UpdateSecCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateSecGuideSnmNull() {
                return this.IsNull(this.tableStockMoveDetail.UpdateSecGuideSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateSecGuideSnmNull() {
                this[this.tableStockMoveDetail.UpdateSecGuideSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfSectionCodeNull() {
                return this.IsNull(this.tableStockMoveDetail.BfSectionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfSectionCodeNull() {
                this[this.tableStockMoveDetail.BfSectionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfSectionGuideSnmNull() {
                return this.IsNull(this.tableStockMoveDetail.BfSectionGuideSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfSectionGuideSnmNull() {
                this[this.tableStockMoveDetail.BfSectionGuideSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfEnterWarehCodeNull() {
                return this.IsNull(this.tableStockMoveDetail.BfEnterWarehCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfEnterWarehCodeNull() {
                this[this.tableStockMoveDetail.BfEnterWarehCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfEnterWarehNameNull() {
                return this.IsNull(this.tableStockMoveDetail.BfEnterWarehNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfEnterWarehNameNull() {
                this[this.tableStockMoveDetail.BfEnterWarehNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBfShelfNoNull() {
                return this.IsNull(this.tableStockMoveDetail.BfShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBfShelfNoNull() {
                this[this.tableStockMoveDetail.BfShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfSectionCodNull() {
                return this.IsNull(this.tableStockMoveDetail.AfSectionCodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfSectionCodNull() {
                this[this.tableStockMoveDetail.AfSectionCodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfSectionGuideSnmNull() {
                return this.IsNull(this.tableStockMoveDetail.AfSectionGuideSnmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfSectionGuideSnmNull() {
                this[this.tableStockMoveDetail.AfSectionGuideSnmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfEnterWarehCodeNull() {
                return this.IsNull(this.tableStockMoveDetail.AfEnterWarehCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfEnterWarehCodeNull() {
                this[this.tableStockMoveDetail.AfEnterWarehCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfEnterWarehNameNull() {
                return this.IsNull(this.tableStockMoveDetail.AfEnterWarehNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfEnterWarehNameNull() {
                this[this.tableStockMoveDetail.AfEnterWarehNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAfShelfNoNull() {
                return this.IsNull(this.tableStockMoveDetail.AfShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAfShelfNoNull() {
                this[this.tableStockMoveDetail.AfShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoveStatusNull() {
                return this.IsNull(this.tableStockMoveDetail.MoveStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoveStatusNull() {
                this[this.tableStockMoveDetail.MoveStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentFixDayNull() {
                return this.IsNull(this.tableStockMoveDetail.ShipmentFixDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentFixDayNull() {
                this[this.tableStockMoveDetail.ShipmentFixDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalGoodsDayNull() {
                return this.IsNull(this.tableStockMoveDetail.ArrivalGoodsDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalGoodsDayNull() {
                this[this.tableStockMoveDetail.ArrivalGoodsDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputDayNull() {
                return this.IsNull(this.tableStockMoveDetail.InputDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputDayNull() {
                this[this.tableStockMoveDetail.InputDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseNote1Null() {
                return this.IsNull(this.tableStockMoveDetail.WarehouseNote1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseNote1Null() {
                this[this.tableStockMoveDetail.WarehouseNote1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockMoveTotalRow : global::System.Data.DataRow {
            
            private StockMoveTotalDataTable tableStockMoveTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockMoveTotalRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockMoveTotal = ((StockMoveTotalDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ShipmentCount_Total {
                get {
                    try {
                        return ((double)(this[this.tableStockMoveTotal.ShipmentCount_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveTotal\' にある列 \'ShipmentCount_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveTotal.ShipmentCount_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ArrivalCount_Total {
                get {
                    try {
                        return ((double)(this[this.tableStockMoveTotal.ArrivalCount_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveTotal\' にある列 \'ArrivalCount_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveTotal.ArrivalCount_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NotArrivalCount_Total {
                get {
                    try {
                        return ((double)(this[this.tableStockMoveTotal.NotArrivalCount_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveTotal\' にある列 \'NotArrivalCount_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveTotal.NotArrivalCount_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ShipmentPrice_Total {
                get {
                    try {
                        return ((long)(this[this.tableStockMoveTotal.ShipmentPrice_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveTotal\' にある列 \'ShipmentPrice_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveTotal.ShipmentPrice_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ArrivalPrice_Total {
                get {
                    try {
                        return ((long)(this[this.tableStockMoveTotal.ArrivalPrice_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveTotal\' にある列 \'ArrivalPrice_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveTotal.ArrivalPrice_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NotArrivalPrice_Total {
                get {
                    try {
                        return ((long)(this[this.tableStockMoveTotal.NotArrivalPrice_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveTotal\' にある列 \'NotArrivalPrice_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveTotal.NotArrivalPrice_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ShipmentListPriceFl_Total {
                get {
                    try {
                        return ((double)(this[this.tableStockMoveTotal.ShipmentListPriceFl_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveTotal\' にある列 \'ShipmentListPriceFl_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveTotal.ShipmentListPriceFl_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ArrivalListPriceFl_Total {
                get {
                    try {
                        return ((double)(this[this.tableStockMoveTotal.ArrivalListPriceFl_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveTotal\' にある列 \'ArrivalListPriceFl_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveTotal.ArrivalListPriceFl_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NotArrivalListPriceFl_Total {
                get {
                    try {
                        return ((double)(this[this.tableStockMoveTotal.NotArrivalListPriceFl_TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveTotal\' にある列 \'NotArrivalListPriceFl_Total\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveTotal.NotArrivalListPriceFl_TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SlipCount {
                get {
                    try {
                        return ((int)(this[this.tableStockMoveTotal.SlipCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveTotal\' にある列 \'SlipCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveTotal.SlipCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DetailCount {
                get {
                    try {
                        return ((int)(this[this.tableStockMoveTotal.DetailCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'StockMoveTotal\' にある列 \'DetailCount\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableStockMoveTotal.DetailCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentCount_TotalNull() {
                return this.IsNull(this.tableStockMoveTotal.ShipmentCount_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentCount_TotalNull() {
                this[this.tableStockMoveTotal.ShipmentCount_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalCount_TotalNull() {
                return this.IsNull(this.tableStockMoveTotal.ArrivalCount_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalCount_TotalNull() {
                this[this.tableStockMoveTotal.ArrivalCount_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotArrivalCount_TotalNull() {
                return this.IsNull(this.tableStockMoveTotal.NotArrivalCount_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotArrivalCount_TotalNull() {
                this[this.tableStockMoveTotal.NotArrivalCount_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentPrice_TotalNull() {
                return this.IsNull(this.tableStockMoveTotal.ShipmentPrice_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentPrice_TotalNull() {
                this[this.tableStockMoveTotal.ShipmentPrice_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalPrice_TotalNull() {
                return this.IsNull(this.tableStockMoveTotal.ArrivalPrice_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalPrice_TotalNull() {
                this[this.tableStockMoveTotal.ArrivalPrice_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotArrivalPrice_TotalNull() {
                return this.IsNull(this.tableStockMoveTotal.NotArrivalPrice_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotArrivalPrice_TotalNull() {
                this[this.tableStockMoveTotal.NotArrivalPrice_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipmentListPriceFl_TotalNull() {
                return this.IsNull(this.tableStockMoveTotal.ShipmentListPriceFl_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipmentListPriceFl_TotalNull() {
                this[this.tableStockMoveTotal.ShipmentListPriceFl_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalListPriceFl_TotalNull() {
                return this.IsNull(this.tableStockMoveTotal.ArrivalListPriceFl_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalListPriceFl_TotalNull() {
                this[this.tableStockMoveTotal.ArrivalListPriceFl_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNotArrivalListPriceFl_TotalNull() {
                return this.IsNull(this.tableStockMoveTotal.NotArrivalListPriceFl_TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNotArrivalListPriceFl_TotalNull() {
                this[this.tableStockMoveTotal.NotArrivalListPriceFl_TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipCountNull() {
                return this.IsNull(this.tableStockMoveTotal.SlipCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipCountNull() {
                this[this.tableStockMoveTotal.SlipCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailCountNull() {
                return this.IsNull(this.tableStockMoveTotal.DetailCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailCountNull() {
                this[this.tableStockMoveTotal.DetailCountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockMoveDetailRowChangeEvent : global::System.EventArgs {
            
            private StockMoveDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveDetailRowChangeEvent(StockMoveDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockMoveTotalRowChangeEvent : global::System.EventArgs {
            
            private StockMoveTotalRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveTotalRowChangeEvent(StockMoveTotalRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockMoveTotalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591