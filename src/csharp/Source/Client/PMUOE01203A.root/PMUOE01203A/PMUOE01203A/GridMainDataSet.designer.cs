//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.1433
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.Controller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("GridMainDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class GridMainDataSet : global::System.Data.DataSet {
        
        private GridMainTableDataTable tableGridMainTable;
        
        private GridMainWorkTableDataTable tableGridMainWorkTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GridMainDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected GridMainDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GridMainTable"] != null)) {
                    base.Tables.Add(new GridMainTableDataTable(ds.Tables["GridMainTable"]));
                }
                if ((ds.Tables["GridMainWorkTable"] != null)) {
                    base.Tables.Add(new GridMainWorkTableDataTable(ds.Tables["GridMainWorkTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GridMainTableDataTable GridMainTable {
            get {
                return this.tableGridMainTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GridMainWorkTableDataTable GridMainWorkTable {
            get {
                return this.tableGridMainWorkTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            GridMainDataSet cln = ((GridMainDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GridMainTable"] != null)) {
                    base.Tables.Add(new GridMainTableDataTable(ds.Tables["GridMainTable"]));
                }
                if ((ds.Tables["GridMainWorkTable"] != null)) {
                    base.Tables.Add(new GridMainWorkTableDataTable(ds.Tables["GridMainWorkTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableGridMainTable = ((GridMainTableDataTable)(base.Tables["GridMainTable"]));
            if ((initTable == true)) {
                if ((this.tableGridMainTable != null)) {
                    this.tableGridMainTable.InitVars();
                }
            }
            this.tableGridMainWorkTable = ((GridMainWorkTableDataTable)(base.Tables["GridMainWorkTable"]));
            if ((initTable == true)) {
                if ((this.tableGridMainWorkTable != null)) {
                    this.tableGridMainWorkTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "GridMainDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/GridMainDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGridMainTable = new GridMainTableDataTable();
            base.Tables.Add(this.tableGridMainTable);
            this.tableGridMainWorkTable = new GridMainWorkTableDataTable();
            base.Tables.Add(this.tableGridMainWorkTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGridMainTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGridMainWorkTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            GridMainDataSet ds = new GridMainDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void GridMainTableRowChangeEventHandler(object sender, GridMainTableRowChangeEvent e);
        
        public delegate void GridMainWorkTableRowChangeEventHandler(object sender, GridMainWorkTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GridMainTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDivCd;
            
            private global::System.Data.DataColumn columnSupplierCd;
            
            private global::System.Data.DataColumn columnUOESupplierCd;
            
            private global::System.Data.DataColumn columnSlipNo;
            
            private global::System.Data.DataColumn columnOnlineNo;
            
            private global::System.Data.DataColumn columnOnlineRowNo;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnUOESalesOrderNo;
            
            private global::System.Data.DataColumn columnUOESalesOrderRowNo;
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            private global::System.Data.DataColumn columnWarehouseShelfNo;
            
            private global::System.Data.DataColumn columnEnterCnt;
            
            private global::System.Data.DataColumn columnUOESectOutGoodsCnt;
            
            private global::System.Data.DataColumn columnBOShipmentCnt;
            
            private global::System.Data.DataColumn columnSalesUnitCost;
            
            private global::System.Data.DataColumn columnAnswerSalesUnitCost;
            
            private global::System.Data.DataColumn columnSubstPartsNo1;
            
            private global::System.Data.DataColumn columnUOERemark1;
            
            private global::System.Data.DataColumn columnUOERemark2;
            
            private global::System.Data.DataColumn columnHeaderGridRowNo;
            
            private global::System.Data.DataColumn columnDetailGridRowNo;
            
            private global::System.Data.DataColumn columnColumnDiv;
            
            private global::System.Data.DataColumn columnSubstPartsNo;
            
            private global::System.Data.DataColumn columnAnswerPartsNo;
            
            private global::System.Data.DataColumn columnSupplierSlipNo;
            
            private global::System.Data.DataColumn columnStockSlipDtlNumSrc;
            
            private global::System.Data.DataColumn columnInputSlipNo;
            
            private global::System.Data.DataColumn columnInputEnterCnt;
            
            private global::System.Data.DataColumn columnInputAnswerSalesUnitCost;
            
            private global::System.Data.DataColumn columnAnswerMakerCd;
            
            private global::System.Data.DataColumn columnGoodspriceuSalesUnitCost;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GridMainTableDataTable() {
                this.TableName = "GridMainTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GridMainTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GridMainTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DivCdColumn {
                get {
                    return this.columnDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCdColumn {
                get {
                    return this.columnSupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOESupplierCdColumn {
                get {
                    return this.columnUOESupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNoColumn {
                get {
                    return this.columnSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnlineNoColumn {
                get {
                    return this.columnOnlineNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnlineRowNoColumn {
                get {
                    return this.columnOnlineRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOESalesOrderNoColumn {
                get {
                    return this.columnUOESalesOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOESalesOrderRowNoColumn {
                get {
                    return this.columnUOESalesOrderRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseShelfNoColumn {
                get {
                    return this.columnWarehouseShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterCntColumn {
                get {
                    return this.columnEnterCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOESectOutGoodsCntColumn {
                get {
                    return this.columnUOESectOutGoodsCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOShipmentCntColumn {
                get {
                    return this.columnBOShipmentCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnitCostColumn {
                get {
                    return this.columnSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnswerSalesUnitCostColumn {
                get {
                    return this.columnAnswerSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubstPartsNo1Column {
                get {
                    return this.columnSubstPartsNo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOERemark1Column {
                get {
                    return this.columnUOERemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOERemark2Column {
                get {
                    return this.columnUOERemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderGridRowNoColumn {
                get {
                    return this.columnHeaderGridRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailGridRowNoColumn {
                get {
                    return this.columnDetailGridRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColumnDivColumn {
                get {
                    return this.columnColumnDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubstPartsNoColumn {
                get {
                    return this.columnSubstPartsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnswerPartsNoColumn {
                get {
                    return this.columnAnswerPartsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNoColumn {
                get {
                    return this.columnSupplierSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockSlipDtlNumSrcColumn {
                get {
                    return this.columnStockSlipDtlNumSrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputSlipNoColumn {
                get {
                    return this.columnInputSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputEnterCntColumn {
                get {
                    return this.columnInputEnterCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputAnswerSalesUnitCostColumn {
                get {
                    return this.columnInputAnswerSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnswerMakerCdColumn {
                get {
                    return this.columnAnswerMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodspriceuSalesUnitCostColumn {
                get {
                    return this.columnGoodspriceuSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GridMainTableRow this[int index] {
                get {
                    return ((GridMainTableRow)(this.Rows[index]));
                }
            }
            
            public event GridMainTableRowChangeEventHandler GridMainTableRowChanging;
            
            public event GridMainTableRowChangeEventHandler GridMainTableRowChanged;
            
            public event GridMainTableRowChangeEventHandler GridMainTableRowDeleting;
            
            public event GridMainTableRowChangeEventHandler GridMainTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGridMainTableRow(GridMainTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GridMainTableRow AddGridMainTableRow(
                        string DivCd, 
                        int SupplierCd, 
                        int UOESupplierCd, 
                        string SlipNo, 
                        int OnlineNo, 
                        int OnlineRowNo, 
                        int GoodsMakerCd, 
                        string GoodsNo, 
                        string GoodsName, 
                        int UOESalesOrderNo, 
                        int UOESalesOrderRowNo, 
                        string WarehouseCode, 
                        string WarehouseShelfNo, 
                        int EnterCnt, 
                        int UOESectOutGoodsCnt, 
                        int BOShipmentCnt, 
                        double SalesUnitCost, 
                        double AnswerSalesUnitCost, 
                        string SubstPartsNo1, 
                        string UOERemark1, 
                        string UOERemark2, 
                        int HeaderGridRowNo, 
                        int DetailGridRowNo, 
                        string ColumnDiv, 
                        string SubstPartsNo, 
                        string AnswerPartsNo, 
                        int SupplierSlipNo, 
                        long StockSlipDtlNumSrc, 
                        string InputSlipNo, 
                        int InputEnterCnt, 
                        double InputAnswerSalesUnitCost, 
                        int AnswerMakerCd, 
                        double GoodspriceuSalesUnitCost) {
                GridMainTableRow rowGridMainTableRow = ((GridMainTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DivCd,
                        SupplierCd,
                        UOESupplierCd,
                        SlipNo,
                        OnlineNo,
                        OnlineRowNo,
                        GoodsMakerCd,
                        GoodsNo,
                        GoodsName,
                        UOESalesOrderNo,
                        UOESalesOrderRowNo,
                        WarehouseCode,
                        WarehouseShelfNo,
                        EnterCnt,
                        UOESectOutGoodsCnt,
                        BOShipmentCnt,
                        SalesUnitCost,
                        AnswerSalesUnitCost,
                        SubstPartsNo1,
                        UOERemark1,
                        UOERemark2,
                        HeaderGridRowNo,
                        DetailGridRowNo,
                        ColumnDiv,
                        SubstPartsNo,
                        AnswerPartsNo,
                        SupplierSlipNo,
                        StockSlipDtlNumSrc,
                        InputSlipNo,
                        InputEnterCnt,
                        InputAnswerSalesUnitCost,
                        AnswerMakerCd,
                        GoodspriceuSalesUnitCost};
                rowGridMainTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGridMainTableRow);
                return rowGridMainTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GridMainTableRow FindBySupplierCdSlipNoOnlineNoOnlineRowNo(int SupplierCd, string SlipNo, int OnlineNo, int OnlineRowNo) {
                return ((GridMainTableRow)(this.Rows.Find(new object[] {
                            SupplierCd,
                            SlipNo,
                            OnlineNo,
                            OnlineRowNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GridMainTableDataTable cln = ((GridMainTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GridMainTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDivCd = base.Columns["DivCd"];
                this.columnSupplierCd = base.Columns["SupplierCd"];
                this.columnUOESupplierCd = base.Columns["UOESupplierCd"];
                this.columnSlipNo = base.Columns["SlipNo"];
                this.columnOnlineNo = base.Columns["OnlineNo"];
                this.columnOnlineRowNo = base.Columns["OnlineRowNo"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnUOESalesOrderNo = base.Columns["UOESalesOrderNo"];
                this.columnUOESalesOrderRowNo = base.Columns["UOESalesOrderRowNo"];
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnWarehouseShelfNo = base.Columns["WarehouseShelfNo"];
                this.columnEnterCnt = base.Columns["EnterCnt"];
                this.columnUOESectOutGoodsCnt = base.Columns["UOESectOutGoodsCnt"];
                this.columnBOShipmentCnt = base.Columns["BOShipmentCnt"];
                this.columnSalesUnitCost = base.Columns["SalesUnitCost"];
                this.columnAnswerSalesUnitCost = base.Columns["AnswerSalesUnitCost"];
                this.columnSubstPartsNo1 = base.Columns["SubstPartsNo1"];
                this.columnUOERemark1 = base.Columns["UOERemark1"];
                this.columnUOERemark2 = base.Columns["UOERemark2"];
                this.columnHeaderGridRowNo = base.Columns["HeaderGridRowNo"];
                this.columnDetailGridRowNo = base.Columns["DetailGridRowNo"];
                this.columnColumnDiv = base.Columns["ColumnDiv"];
                this.columnSubstPartsNo = base.Columns["SubstPartsNo"];
                this.columnAnswerPartsNo = base.Columns["AnswerPartsNo"];
                this.columnSupplierSlipNo = base.Columns["SupplierSlipNo"];
                this.columnStockSlipDtlNumSrc = base.Columns["StockSlipDtlNumSrc"];
                this.columnInputSlipNo = base.Columns["InputSlipNo"];
                this.columnInputEnterCnt = base.Columns["InputEnterCnt"];
                this.columnInputAnswerSalesUnitCost = base.Columns["InputAnswerSalesUnitCost"];
                this.columnAnswerMakerCd = base.Columns["AnswerMakerCd"];
                this.columnGoodspriceuSalesUnitCost = base.Columns["GoodspriceuSalesUnitCost"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDivCd = new global::System.Data.DataColumn("DivCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivCd);
                this.columnSupplierCd = new global::System.Data.DataColumn("SupplierCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCd);
                this.columnUOESupplierCd = new global::System.Data.DataColumn("UOESupplierCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOESupplierCd);
                this.columnSlipNo = new global::System.Data.DataColumn("SlipNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNo);
                this.columnOnlineNo = new global::System.Data.DataColumn("OnlineNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlineNo);
                this.columnOnlineRowNo = new global::System.Data.DataColumn("OnlineRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlineRowNo);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnUOESalesOrderNo = new global::System.Data.DataColumn("UOESalesOrderNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOESalesOrderNo);
                this.columnUOESalesOrderRowNo = new global::System.Data.DataColumn("UOESalesOrderRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOESalesOrderRowNo);
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnWarehouseShelfNo = new global::System.Data.DataColumn("WarehouseShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseShelfNo);
                this.columnEnterCnt = new global::System.Data.DataColumn("EnterCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterCnt);
                this.columnUOESectOutGoodsCnt = new global::System.Data.DataColumn("UOESectOutGoodsCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOESectOutGoodsCnt);
                this.columnBOShipmentCnt = new global::System.Data.DataColumn("BOShipmentCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOShipmentCnt);
                this.columnSalesUnitCost = new global::System.Data.DataColumn("SalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnitCost);
                this.columnAnswerSalesUnitCost = new global::System.Data.DataColumn("AnswerSalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnswerSalesUnitCost);
                this.columnSubstPartsNo1 = new global::System.Data.DataColumn("SubstPartsNo1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubstPartsNo1);
                this.columnUOERemark1 = new global::System.Data.DataColumn("UOERemark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOERemark1);
                this.columnUOERemark2 = new global::System.Data.DataColumn("UOERemark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOERemark2);
                this.columnHeaderGridRowNo = new global::System.Data.DataColumn("HeaderGridRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderGridRowNo);
                this.columnDetailGridRowNo = new global::System.Data.DataColumn("DetailGridRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailGridRowNo);
                this.columnColumnDiv = new global::System.Data.DataColumn("ColumnDiv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnDiv);
                this.columnSubstPartsNo = new global::System.Data.DataColumn("SubstPartsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubstPartsNo);
                this.columnAnswerPartsNo = new global::System.Data.DataColumn("AnswerPartsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnswerPartsNo);
                this.columnSupplierSlipNo = new global::System.Data.DataColumn("SupplierSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNo);
                this.columnStockSlipDtlNumSrc = new global::System.Data.DataColumn("StockSlipDtlNumSrc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSlipDtlNumSrc);
                this.columnInputSlipNo = new global::System.Data.DataColumn("InputSlipNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputSlipNo);
                this.columnInputEnterCnt = new global::System.Data.DataColumn("InputEnterCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputEnterCnt);
                this.columnInputAnswerSalesUnitCost = new global::System.Data.DataColumn("InputAnswerSalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputAnswerSalesUnitCost);
                this.columnAnswerMakerCd = new global::System.Data.DataColumn("AnswerMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnswerMakerCd);
                this.columnGoodspriceuSalesUnitCost = new global::System.Data.DataColumn("GoodspriceuSalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodspriceuSalesUnitCost);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSupplierCd,
                                this.columnSlipNo,
                                this.columnOnlineNo,
                                this.columnOnlineRowNo}, true));
                this.columnSupplierCd.AllowDBNull = false;
                this.columnUOESupplierCd.AllowDBNull = false;
                this.columnSlipNo.AllowDBNull = false;
                this.columnOnlineNo.AllowDBNull = false;
                this.columnOnlineRowNo.AllowDBNull = false;
                this.columnDetailGridRowNo.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GridMainTableRow NewGridMainTableRow() {
                return ((GridMainTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GridMainTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GridMainTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GridMainTableRowChanged != null)) {
                    this.GridMainTableRowChanged(this, new GridMainTableRowChangeEvent(((GridMainTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GridMainTableRowChanging != null)) {
                    this.GridMainTableRowChanging(this, new GridMainTableRowChangeEvent(((GridMainTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GridMainTableRowDeleted != null)) {
                    this.GridMainTableRowDeleted(this, new GridMainTableRowChangeEvent(((GridMainTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GridMainTableRowDeleting != null)) {
                    this.GridMainTableRowDeleting(this, new GridMainTableRowChangeEvent(((GridMainTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGridMainTableRow(GridMainTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GridMainDataSet ds = new GridMainDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GridMainTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GridMainWorkTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDivCd;
            
            private global::System.Data.DataColumn columnSupplierCd;
            
            private global::System.Data.DataColumn columnUOESupplierCd;
            
            private global::System.Data.DataColumn columnSlipNo;
            
            private global::System.Data.DataColumn columnOnlineNo;
            
            private global::System.Data.DataColumn columnOnlineRowNo;
            
            private global::System.Data.DataColumn columnGoodsMakerCd;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnUOESalesOrderNo;
            
            private global::System.Data.DataColumn columnUOESalesOrderRowNo;
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            private global::System.Data.DataColumn columnWarehouseShelfNo;
            
            private global::System.Data.DataColumn columnEnterCnt;
            
            private global::System.Data.DataColumn columnUOESectOutGoodsCnt;
            
            private global::System.Data.DataColumn columnBOShipmentCnt;
            
            private global::System.Data.DataColumn columnSalesUnitCost;
            
            private global::System.Data.DataColumn columnAnswerSalesUnitCost;
            
            private global::System.Data.DataColumn columnSubstPartsNo1;
            
            private global::System.Data.DataColumn columnUOERemark1;
            
            private global::System.Data.DataColumn columnUOERemark2;
            
            private global::System.Data.DataColumn columnHeaderGridRowNo;
            
            private global::System.Data.DataColumn columnDetailGridRowNo;
            
            private global::System.Data.DataColumn columnColumnDiv;
            
            private global::System.Data.DataColumn columnSubstPartsNo;
            
            private global::System.Data.DataColumn columnAnswerPartsNo;
            
            private global::System.Data.DataColumn columnSupplierSlipNo;
            
            private global::System.Data.DataColumn columnStockSlipDtlNumSrc;
            
            private global::System.Data.DataColumn columnInputSlipNo;
            
            private global::System.Data.DataColumn columnInputEnterCnt;
            
            private global::System.Data.DataColumn columnInputAnswerSalesUnitCost;
            
            private global::System.Data.DataColumn columnAnswerMakerCd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GridMainWorkTableDataTable() {
                this.TableName = "GridMainWorkTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GridMainWorkTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GridMainWorkTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DivCdColumn {
                get {
                    return this.columnDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCdColumn {
                get {
                    return this.columnSupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOESupplierCdColumn {
                get {
                    return this.columnUOESupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNoColumn {
                get {
                    return this.columnSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnlineNoColumn {
                get {
                    return this.columnOnlineNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnlineRowNoColumn {
                get {
                    return this.columnOnlineRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsMakerCdColumn {
                get {
                    return this.columnGoodsMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOESalesOrderNoColumn {
                get {
                    return this.columnUOESalesOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOESalesOrderRowNoColumn {
                get {
                    return this.columnUOESalesOrderRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseShelfNoColumn {
                get {
                    return this.columnWarehouseShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterCntColumn {
                get {
                    return this.columnEnterCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOESectOutGoodsCntColumn {
                get {
                    return this.columnUOESectOutGoodsCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOShipmentCntColumn {
                get {
                    return this.columnBOShipmentCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnitCostColumn {
                get {
                    return this.columnSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnswerSalesUnitCostColumn {
                get {
                    return this.columnAnswerSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubstPartsNo1Column {
                get {
                    return this.columnSubstPartsNo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOERemark1Column {
                get {
                    return this.columnUOERemark1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOERemark2Column {
                get {
                    return this.columnUOERemark2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderGridRowNoColumn {
                get {
                    return this.columnHeaderGridRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailGridRowNoColumn {
                get {
                    return this.columnDetailGridRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColumnDivColumn {
                get {
                    return this.columnColumnDiv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubstPartsNoColumn {
                get {
                    return this.columnSubstPartsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnswerPartsNoColumn {
                get {
                    return this.columnAnswerPartsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierSlipNoColumn {
                get {
                    return this.columnSupplierSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockSlipDtlNumSrcColumn {
                get {
                    return this.columnStockSlipDtlNumSrc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputSlipNoColumn {
                get {
                    return this.columnInputSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputEnterCntColumn {
                get {
                    return this.columnInputEnterCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputAnswerSalesUnitCostColumn {
                get {
                    return this.columnInputAnswerSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnswerMakerCdColumn {
                get {
                    return this.columnAnswerMakerCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GridMainWorkTableRow this[int index] {
                get {
                    return ((GridMainWorkTableRow)(this.Rows[index]));
                }
            }
            
            public event GridMainWorkTableRowChangeEventHandler GridMainWorkTableRowChanging;
            
            public event GridMainWorkTableRowChangeEventHandler GridMainWorkTableRowChanged;
            
            public event GridMainWorkTableRowChangeEventHandler GridMainWorkTableRowDeleting;
            
            public event GridMainWorkTableRowChangeEventHandler GridMainWorkTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGridMainWorkTableRow(GridMainWorkTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GridMainWorkTableRow AddGridMainWorkTableRow(
                        string DivCd, 
                        int SupplierCd, 
                        int UOESupplierCd, 
                        string SlipNo, 
                        int OnlineNo, 
                        int OnlineRowNo, 
                        int GoodsMakerCd, 
                        string GoodsNo, 
                        string GoodsName, 
                        int UOESalesOrderNo, 
                        int UOESalesOrderRowNo, 
                        string WarehouseCode, 
                        string WarehouseShelfNo, 
                        int EnterCnt, 
                        int UOESectOutGoodsCnt, 
                        int BOShipmentCnt, 
                        double SalesUnitCost, 
                        double AnswerSalesUnitCost, 
                        string SubstPartsNo1, 
                        string UOERemark1, 
                        string UOERemark2, 
                        int HeaderGridRowNo, 
                        int DetailGridRowNo, 
                        string ColumnDiv, 
                        string SubstPartsNo, 
                        string AnswerPartsNo, 
                        int SupplierSlipNo, 
                        long StockSlipDtlNumSrc, 
                        string InputSlipNo, 
                        int InputEnterCnt, 
                        double InputAnswerSalesUnitCost, 
                        int AnswerMakerCd) {
                GridMainWorkTableRow rowGridMainWorkTableRow = ((GridMainWorkTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DivCd,
                        SupplierCd,
                        UOESupplierCd,
                        SlipNo,
                        OnlineNo,
                        OnlineRowNo,
                        GoodsMakerCd,
                        GoodsNo,
                        GoodsName,
                        UOESalesOrderNo,
                        UOESalesOrderRowNo,
                        WarehouseCode,
                        WarehouseShelfNo,
                        EnterCnt,
                        UOESectOutGoodsCnt,
                        BOShipmentCnt,
                        SalesUnitCost,
                        AnswerSalesUnitCost,
                        SubstPartsNo1,
                        UOERemark1,
                        UOERemark2,
                        HeaderGridRowNo,
                        DetailGridRowNo,
                        ColumnDiv,
                        SubstPartsNo,
                        AnswerPartsNo,
                        SupplierSlipNo,
                        StockSlipDtlNumSrc,
                        InputSlipNo,
                        InputEnterCnt,
                        InputAnswerSalesUnitCost,
                        AnswerMakerCd};
                rowGridMainWorkTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGridMainWorkTableRow);
                return rowGridMainWorkTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GridMainWorkTableRow FindBySupplierCdSlipNoOnlineNoOnlineRowNoColumnDiv(int SupplierCd, string SlipNo, int OnlineNo, int OnlineRowNo, string ColumnDiv) {
                return ((GridMainWorkTableRow)(this.Rows.Find(new object[] {
                            SupplierCd,
                            SlipNo,
                            OnlineNo,
                            OnlineRowNo,
                            ColumnDiv})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GridMainWorkTableDataTable cln = ((GridMainWorkTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GridMainWorkTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDivCd = base.Columns["DivCd"];
                this.columnSupplierCd = base.Columns["SupplierCd"];
                this.columnUOESupplierCd = base.Columns["UOESupplierCd"];
                this.columnSlipNo = base.Columns["SlipNo"];
                this.columnOnlineNo = base.Columns["OnlineNo"];
                this.columnOnlineRowNo = base.Columns["OnlineRowNo"];
                this.columnGoodsMakerCd = base.Columns["GoodsMakerCd"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnUOESalesOrderNo = base.Columns["UOESalesOrderNo"];
                this.columnUOESalesOrderRowNo = base.Columns["UOESalesOrderRowNo"];
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnWarehouseShelfNo = base.Columns["WarehouseShelfNo"];
                this.columnEnterCnt = base.Columns["EnterCnt"];
                this.columnUOESectOutGoodsCnt = base.Columns["UOESectOutGoodsCnt"];
                this.columnBOShipmentCnt = base.Columns["BOShipmentCnt"];
                this.columnSalesUnitCost = base.Columns["SalesUnitCost"];
                this.columnAnswerSalesUnitCost = base.Columns["AnswerSalesUnitCost"];
                this.columnSubstPartsNo1 = base.Columns["SubstPartsNo1"];
                this.columnUOERemark1 = base.Columns["UOERemark1"];
                this.columnUOERemark2 = base.Columns["UOERemark2"];
                this.columnHeaderGridRowNo = base.Columns["HeaderGridRowNo"];
                this.columnDetailGridRowNo = base.Columns["DetailGridRowNo"];
                this.columnColumnDiv = base.Columns["ColumnDiv"];
                this.columnSubstPartsNo = base.Columns["SubstPartsNo"];
                this.columnAnswerPartsNo = base.Columns["AnswerPartsNo"];
                this.columnSupplierSlipNo = base.Columns["SupplierSlipNo"];
                this.columnStockSlipDtlNumSrc = base.Columns["StockSlipDtlNumSrc"];
                this.columnInputSlipNo = base.Columns["InputSlipNo"];
                this.columnInputEnterCnt = base.Columns["InputEnterCnt"];
                this.columnInputAnswerSalesUnitCost = base.Columns["InputAnswerSalesUnitCost"];
                this.columnAnswerMakerCd = base.Columns["AnswerMakerCd"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDivCd = new global::System.Data.DataColumn("DivCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivCd);
                this.columnSupplierCd = new global::System.Data.DataColumn("SupplierCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCd);
                this.columnUOESupplierCd = new global::System.Data.DataColumn("UOESupplierCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOESupplierCd);
                this.columnSlipNo = new global::System.Data.DataColumn("SlipNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNo);
                this.columnOnlineNo = new global::System.Data.DataColumn("OnlineNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlineNo);
                this.columnOnlineRowNo = new global::System.Data.DataColumn("OnlineRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlineRowNo);
                this.columnGoodsMakerCd = new global::System.Data.DataColumn("GoodsMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsMakerCd);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnUOESalesOrderNo = new global::System.Data.DataColumn("UOESalesOrderNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOESalesOrderNo);
                this.columnUOESalesOrderRowNo = new global::System.Data.DataColumn("UOESalesOrderRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOESalesOrderRowNo);
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnWarehouseShelfNo = new global::System.Data.DataColumn("WarehouseShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseShelfNo);
                this.columnEnterCnt = new global::System.Data.DataColumn("EnterCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterCnt);
                this.columnUOESectOutGoodsCnt = new global::System.Data.DataColumn("UOESectOutGoodsCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOESectOutGoodsCnt);
                this.columnBOShipmentCnt = new global::System.Data.DataColumn("BOShipmentCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOShipmentCnt);
                this.columnSalesUnitCost = new global::System.Data.DataColumn("SalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnitCost);
                this.columnAnswerSalesUnitCost = new global::System.Data.DataColumn("AnswerSalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnswerSalesUnitCost);
                this.columnSubstPartsNo1 = new global::System.Data.DataColumn("SubstPartsNo1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubstPartsNo1);
                this.columnUOERemark1 = new global::System.Data.DataColumn("UOERemark1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOERemark1);
                this.columnUOERemark2 = new global::System.Data.DataColumn("UOERemark2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOERemark2);
                this.columnHeaderGridRowNo = new global::System.Data.DataColumn("HeaderGridRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderGridRowNo);
                this.columnDetailGridRowNo = new global::System.Data.DataColumn("DetailGridRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailGridRowNo);
                this.columnColumnDiv = new global::System.Data.DataColumn("ColumnDiv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnDiv);
                this.columnSubstPartsNo = new global::System.Data.DataColumn("SubstPartsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubstPartsNo);
                this.columnAnswerPartsNo = new global::System.Data.DataColumn("AnswerPartsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnswerPartsNo);
                this.columnSupplierSlipNo = new global::System.Data.DataColumn("SupplierSlipNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierSlipNo);
                this.columnStockSlipDtlNumSrc = new global::System.Data.DataColumn("StockSlipDtlNumSrc", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockSlipDtlNumSrc);
                this.columnInputSlipNo = new global::System.Data.DataColumn("InputSlipNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputSlipNo);
                this.columnInputEnterCnt = new global::System.Data.DataColumn("InputEnterCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputEnterCnt);
                this.columnInputAnswerSalesUnitCost = new global::System.Data.DataColumn("InputAnswerSalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputAnswerSalesUnitCost);
                this.columnAnswerMakerCd = new global::System.Data.DataColumn("AnswerMakerCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnswerMakerCd);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSupplierCd,
                                this.columnSlipNo,
                                this.columnOnlineNo,
                                this.columnOnlineRowNo,
                                this.columnColumnDiv}, true));
                this.columnSupplierCd.AllowDBNull = false;
                this.columnUOESupplierCd.AllowDBNull = false;
                this.columnSlipNo.AllowDBNull = false;
                this.columnOnlineNo.AllowDBNull = false;
                this.columnOnlineRowNo.AllowDBNull = false;
                this.columnDetailGridRowNo.AllowDBNull = false;
                this.columnColumnDiv.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GridMainWorkTableRow NewGridMainWorkTableRow() {
                return ((GridMainWorkTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GridMainWorkTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GridMainWorkTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GridMainWorkTableRowChanged != null)) {
                    this.GridMainWorkTableRowChanged(this, new GridMainWorkTableRowChangeEvent(((GridMainWorkTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GridMainWorkTableRowChanging != null)) {
                    this.GridMainWorkTableRowChanging(this, new GridMainWorkTableRowChangeEvent(((GridMainWorkTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GridMainWorkTableRowDeleted != null)) {
                    this.GridMainWorkTableRowDeleted(this, new GridMainWorkTableRowChangeEvent(((GridMainWorkTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GridMainWorkTableRowDeleting != null)) {
                    this.GridMainWorkTableRowDeleting(this, new GridMainWorkTableRowChangeEvent(((GridMainWorkTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGridMainWorkTableRow(GridMainWorkTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                GridMainDataSet ds = new GridMainDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GridMainWorkTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GridMainTableRow : global::System.Data.DataRow {
            
            private GridMainTableDataTable tableGridMainTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GridMainTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGridMainTable = ((GridMainTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DivCd {
                get {
                    try {
                        return ((string)(this[this.tableGridMainTable.DivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'DivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.DivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierCd {
                get {
                    return ((int)(this[this.tableGridMainTable.SupplierCdColumn]));
                }
                set {
                    this[this.tableGridMainTable.SupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UOESupplierCd {
                get {
                    return ((int)(this[this.tableGridMainTable.UOESupplierCdColumn]));
                }
                set {
                    this[this.tableGridMainTable.UOESupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNo {
                get {
                    return ((string)(this[this.tableGridMainTable.SlipNoColumn]));
                }
                set {
                    this[this.tableGridMainTable.SlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OnlineNo {
                get {
                    return ((int)(this[this.tableGridMainTable.OnlineNoColumn]));
                }
                set {
                    this[this.tableGridMainTable.OnlineNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OnlineRowNo {
                get {
                    return ((int)(this[this.tableGridMainTable.OnlineRowNoColumn]));
                }
                set {
                    this[this.tableGridMainTable.OnlineRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCd {
                get {
                    try {
                        return ((int)(this[this.tableGridMainTable.GoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'GoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableGridMainTable.GoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'GoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableGridMainTable.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UOESalesOrderNo {
                get {
                    try {
                        return ((int)(this[this.tableGridMainTable.UOESalesOrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'UOESalesOrderNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.UOESalesOrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UOESalesOrderRowNo {
                get {
                    try {
                        return ((int)(this[this.tableGridMainTable.UOESalesOrderRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'UOESalesOrderRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.UOESalesOrderRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    try {
                        return ((string)(this[this.tableGridMainTable.WarehouseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'WarehouseCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableGridMainTable.WarehouseShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'WarehouseShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.WarehouseShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EnterCnt {
                get {
                    try {
                        return ((int)(this[this.tableGridMainTable.EnterCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'EnterCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.EnterCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UOESectOutGoodsCnt {
                get {
                    try {
                        return ((int)(this[this.tableGridMainTable.UOESectOutGoodsCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'UOESectOutGoodsCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.UOESectOutGoodsCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOShipmentCnt {
                get {
                    try {
                        return ((int)(this[this.tableGridMainTable.BOShipmentCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'BOShipmentCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.BOShipmentCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableGridMainTable.SalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'SalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.SalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AnswerSalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableGridMainTable.AnswerSalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'AnswerSalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.AnswerSalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubstPartsNo1 {
                get {
                    try {
                        return ((string)(this[this.tableGridMainTable.SubstPartsNo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'SubstPartsNo1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.SubstPartsNo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOERemark1 {
                get {
                    try {
                        return ((string)(this[this.tableGridMainTable.UOERemark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'UOERemark1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.UOERemark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOERemark2 {
                get {
                    try {
                        return ((string)(this[this.tableGridMainTable.UOERemark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'UOERemark2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.UOERemark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HeaderGridRowNo {
                get {
                    try {
                        return ((int)(this[this.tableGridMainTable.HeaderGridRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'HeaderGridRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.HeaderGridRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DetailGridRowNo {
                get {
                    return ((int)(this[this.tableGridMainTable.DetailGridRowNoColumn]));
                }
                set {
                    this[this.tableGridMainTable.DetailGridRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ColumnDiv {
                get {
                    try {
                        return ((string)(this[this.tableGridMainTable.ColumnDivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'ColumnDiv\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.ColumnDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubstPartsNo {
                get {
                    try {
                        return ((string)(this[this.tableGridMainTable.SubstPartsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'SubstPartsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.SubstPartsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AnswerPartsNo {
                get {
                    try {
                        return ((string)(this[this.tableGridMainTable.AnswerPartsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'AnswerPartsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.AnswerPartsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableGridMainTable.SupplierSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'SupplierSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.SupplierSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockSlipDtlNumSrc {
                get {
                    try {
                        return ((long)(this[this.tableGridMainTable.StockSlipDtlNumSrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'StockSlipDtlNumSrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.StockSlipDtlNumSrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InputSlipNo {
                get {
                    try {
                        return ((string)(this[this.tableGridMainTable.InputSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'InputSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.InputSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InputEnterCnt {
                get {
                    try {
                        return ((int)(this[this.tableGridMainTable.InputEnterCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'InputEnterCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.InputEnterCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double InputAnswerSalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableGridMainTable.InputAnswerSalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'InputAnswerSalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.InputAnswerSalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AnswerMakerCd {
                get {
                    try {
                        return ((int)(this[this.tableGridMainTable.AnswerMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'AnswerMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.AnswerMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GoodspriceuSalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableGridMainTable.GoodspriceuSalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainTable\' にある列 \'GoodspriceuSalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainTable.GoodspriceuSalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivCdNull() {
                return this.IsNull(this.tableGridMainTable.DivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivCdNull() {
                this[this.tableGridMainTable.DivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMakerCdNull() {
                return this.IsNull(this.tableGridMainTable.GoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMakerCdNull() {
                this[this.tableGridMainTable.GoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNull() {
                return this.IsNull(this.tableGridMainTable.GoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNull() {
                this[this.tableGridMainTable.GoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableGridMainTable.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableGridMainTable.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOESalesOrderNoNull() {
                return this.IsNull(this.tableGridMainTable.UOESalesOrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOESalesOrderNoNull() {
                this[this.tableGridMainTable.UOESalesOrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOESalesOrderRowNoNull() {
                return this.IsNull(this.tableGridMainTable.UOESalesOrderRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOESalesOrderRowNoNull() {
                this[this.tableGridMainTable.UOESalesOrderRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCodeNull() {
                return this.IsNull(this.tableGridMainTable.WarehouseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCodeNull() {
                this[this.tableGridMainTable.WarehouseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseShelfNoNull() {
                return this.IsNull(this.tableGridMainTable.WarehouseShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseShelfNoNull() {
                this[this.tableGridMainTable.WarehouseShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnterCntNull() {
                return this.IsNull(this.tableGridMainTable.EnterCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnterCntNull() {
                this[this.tableGridMainTable.EnterCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOESectOutGoodsCntNull() {
                return this.IsNull(this.tableGridMainTable.UOESectOutGoodsCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOESectOutGoodsCntNull() {
                this[this.tableGridMainTable.UOESectOutGoodsCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOShipmentCntNull() {
                return this.IsNull(this.tableGridMainTable.BOShipmentCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOShipmentCntNull() {
                this[this.tableGridMainTable.BOShipmentCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnitCostNull() {
                return this.IsNull(this.tableGridMainTable.SalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnitCostNull() {
                this[this.tableGridMainTable.SalesUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnswerSalesUnitCostNull() {
                return this.IsNull(this.tableGridMainTable.AnswerSalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnswerSalesUnitCostNull() {
                this[this.tableGridMainTable.AnswerSalesUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubstPartsNo1Null() {
                return this.IsNull(this.tableGridMainTable.SubstPartsNo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubstPartsNo1Null() {
                this[this.tableGridMainTable.SubstPartsNo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOERemark1Null() {
                return this.IsNull(this.tableGridMainTable.UOERemark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOERemark1Null() {
                this[this.tableGridMainTable.UOERemark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOERemark2Null() {
                return this.IsNull(this.tableGridMainTable.UOERemark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOERemark2Null() {
                this[this.tableGridMainTable.UOERemark2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderGridRowNoNull() {
                return this.IsNull(this.tableGridMainTable.HeaderGridRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderGridRowNoNull() {
                this[this.tableGridMainTable.HeaderGridRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColumnDivNull() {
                return this.IsNull(this.tableGridMainTable.ColumnDivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColumnDivNull() {
                this[this.tableGridMainTable.ColumnDivColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubstPartsNoNull() {
                return this.IsNull(this.tableGridMainTable.SubstPartsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubstPartsNoNull() {
                this[this.tableGridMainTable.SubstPartsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnswerPartsNoNull() {
                return this.IsNull(this.tableGridMainTable.AnswerPartsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnswerPartsNoNull() {
                this[this.tableGridMainTable.AnswerPartsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNoNull() {
                return this.IsNull(this.tableGridMainTable.SupplierSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNoNull() {
                this[this.tableGridMainTable.SupplierSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockSlipDtlNumSrcNull() {
                return this.IsNull(this.tableGridMainTable.StockSlipDtlNumSrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockSlipDtlNumSrcNull() {
                this[this.tableGridMainTable.StockSlipDtlNumSrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputSlipNoNull() {
                return this.IsNull(this.tableGridMainTable.InputSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputSlipNoNull() {
                this[this.tableGridMainTable.InputSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputEnterCntNull() {
                return this.IsNull(this.tableGridMainTable.InputEnterCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputEnterCntNull() {
                this[this.tableGridMainTable.InputEnterCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputAnswerSalesUnitCostNull() {
                return this.IsNull(this.tableGridMainTable.InputAnswerSalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputAnswerSalesUnitCostNull() {
                this[this.tableGridMainTable.InputAnswerSalesUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnswerMakerCdNull() {
                return this.IsNull(this.tableGridMainTable.AnswerMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnswerMakerCdNull() {
                this[this.tableGridMainTable.AnswerMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodspriceuSalesUnitCostNull() {
                return this.IsNull(this.tableGridMainTable.GoodspriceuSalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodspriceuSalesUnitCostNull() {
                this[this.tableGridMainTable.GoodspriceuSalesUnitCostColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GridMainWorkTableRow : global::System.Data.DataRow {
            
            private GridMainWorkTableDataTable tableGridMainWorkTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GridMainWorkTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGridMainWorkTable = ((GridMainWorkTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DivCd {
                get {
                    try {
                        return ((string)(this[this.tableGridMainWorkTable.DivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'DivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.DivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierCd {
                get {
                    return ((int)(this[this.tableGridMainWorkTable.SupplierCdColumn]));
                }
                set {
                    this[this.tableGridMainWorkTable.SupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UOESupplierCd {
                get {
                    return ((int)(this[this.tableGridMainWorkTable.UOESupplierCdColumn]));
                }
                set {
                    this[this.tableGridMainWorkTable.UOESupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNo {
                get {
                    return ((string)(this[this.tableGridMainWorkTable.SlipNoColumn]));
                }
                set {
                    this[this.tableGridMainWorkTable.SlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OnlineNo {
                get {
                    return ((int)(this[this.tableGridMainWorkTable.OnlineNoColumn]));
                }
                set {
                    this[this.tableGridMainWorkTable.OnlineNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OnlineRowNo {
                get {
                    return ((int)(this[this.tableGridMainWorkTable.OnlineRowNoColumn]));
                }
                set {
                    this[this.tableGridMainWorkTable.OnlineRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GoodsMakerCd {
                get {
                    try {
                        return ((int)(this[this.tableGridMainWorkTable.GoodsMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'GoodsMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.GoodsMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableGridMainWorkTable.GoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'GoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableGridMainWorkTable.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UOESalesOrderNo {
                get {
                    try {
                        return ((int)(this[this.tableGridMainWorkTable.UOESalesOrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'UOESalesOrderNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.UOESalesOrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UOESalesOrderRowNo {
                get {
                    try {
                        return ((int)(this[this.tableGridMainWorkTable.UOESalesOrderRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'UOESalesOrderRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.UOESalesOrderRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    try {
                        return ((string)(this[this.tableGridMainWorkTable.WarehouseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'WarehouseCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableGridMainWorkTable.WarehouseShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'WarehouseShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.WarehouseShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EnterCnt {
                get {
                    try {
                        return ((int)(this[this.tableGridMainWorkTable.EnterCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'EnterCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.EnterCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UOESectOutGoodsCnt {
                get {
                    try {
                        return ((int)(this[this.tableGridMainWorkTable.UOESectOutGoodsCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'UOESectOutGoodsCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.UOESectOutGoodsCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOShipmentCnt {
                get {
                    try {
                        return ((int)(this[this.tableGridMainWorkTable.BOShipmentCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'BOShipmentCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.BOShipmentCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableGridMainWorkTable.SalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'SalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.SalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AnswerSalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableGridMainWorkTable.AnswerSalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'AnswerSalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.AnswerSalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubstPartsNo1 {
                get {
                    try {
                        return ((string)(this[this.tableGridMainWorkTable.SubstPartsNo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'SubstPartsNo1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.SubstPartsNo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOERemark1 {
                get {
                    try {
                        return ((string)(this[this.tableGridMainWorkTable.UOERemark1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'UOERemark1\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.UOERemark1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOERemark2 {
                get {
                    try {
                        return ((string)(this[this.tableGridMainWorkTable.UOERemark2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'UOERemark2\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.UOERemark2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HeaderGridRowNo {
                get {
                    try {
                        return ((int)(this[this.tableGridMainWorkTable.HeaderGridRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'HeaderGridRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.HeaderGridRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DetailGridRowNo {
                get {
                    return ((int)(this[this.tableGridMainWorkTable.DetailGridRowNoColumn]));
                }
                set {
                    this[this.tableGridMainWorkTable.DetailGridRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ColumnDiv {
                get {
                    return ((string)(this[this.tableGridMainWorkTable.ColumnDivColumn]));
                }
                set {
                    this[this.tableGridMainWorkTable.ColumnDivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubstPartsNo {
                get {
                    try {
                        return ((string)(this[this.tableGridMainWorkTable.SubstPartsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'SubstPartsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.SubstPartsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AnswerPartsNo {
                get {
                    try {
                        return ((string)(this[this.tableGridMainWorkTable.AnswerPartsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'AnswerPartsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.AnswerPartsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierSlipNo {
                get {
                    try {
                        return ((int)(this[this.tableGridMainWorkTable.SupplierSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'SupplierSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.SupplierSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockSlipDtlNumSrc {
                get {
                    try {
                        return ((long)(this[this.tableGridMainWorkTable.StockSlipDtlNumSrcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'StockSlipDtlNumSrc\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.StockSlipDtlNumSrcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InputSlipNo {
                get {
                    try {
                        return ((string)(this[this.tableGridMainWorkTable.InputSlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'InputSlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.InputSlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InputEnterCnt {
                get {
                    try {
                        return ((int)(this[this.tableGridMainWorkTable.InputEnterCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'InputEnterCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.InputEnterCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double InputAnswerSalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableGridMainWorkTable.InputAnswerSalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'InputAnswerSalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.InputAnswerSalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AnswerMakerCd {
                get {
                    try {
                        return ((int)(this[this.tableGridMainWorkTable.AnswerMakerCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'GridMainWorkTable\' にある列 \'AnswerMakerCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableGridMainWorkTable.AnswerMakerCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivCdNull() {
                return this.IsNull(this.tableGridMainWorkTable.DivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivCdNull() {
                this[this.tableGridMainWorkTable.DivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsMakerCdNull() {
                return this.IsNull(this.tableGridMainWorkTable.GoodsMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsMakerCdNull() {
                this[this.tableGridMainWorkTable.GoodsMakerCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNull() {
                return this.IsNull(this.tableGridMainWorkTable.GoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNull() {
                this[this.tableGridMainWorkTable.GoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableGridMainWorkTable.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableGridMainWorkTable.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOESalesOrderNoNull() {
                return this.IsNull(this.tableGridMainWorkTable.UOESalesOrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOESalesOrderNoNull() {
                this[this.tableGridMainWorkTable.UOESalesOrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOESalesOrderRowNoNull() {
                return this.IsNull(this.tableGridMainWorkTable.UOESalesOrderRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOESalesOrderRowNoNull() {
                this[this.tableGridMainWorkTable.UOESalesOrderRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCodeNull() {
                return this.IsNull(this.tableGridMainWorkTable.WarehouseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCodeNull() {
                this[this.tableGridMainWorkTable.WarehouseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseShelfNoNull() {
                return this.IsNull(this.tableGridMainWorkTable.WarehouseShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseShelfNoNull() {
                this[this.tableGridMainWorkTable.WarehouseShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnterCntNull() {
                return this.IsNull(this.tableGridMainWorkTable.EnterCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnterCntNull() {
                this[this.tableGridMainWorkTable.EnterCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOESectOutGoodsCntNull() {
                return this.IsNull(this.tableGridMainWorkTable.UOESectOutGoodsCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOESectOutGoodsCntNull() {
                this[this.tableGridMainWorkTable.UOESectOutGoodsCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOShipmentCntNull() {
                return this.IsNull(this.tableGridMainWorkTable.BOShipmentCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOShipmentCntNull() {
                this[this.tableGridMainWorkTable.BOShipmentCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnitCostNull() {
                return this.IsNull(this.tableGridMainWorkTable.SalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnitCostNull() {
                this[this.tableGridMainWorkTable.SalesUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnswerSalesUnitCostNull() {
                return this.IsNull(this.tableGridMainWorkTable.AnswerSalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnswerSalesUnitCostNull() {
                this[this.tableGridMainWorkTable.AnswerSalesUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubstPartsNo1Null() {
                return this.IsNull(this.tableGridMainWorkTable.SubstPartsNo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubstPartsNo1Null() {
                this[this.tableGridMainWorkTable.SubstPartsNo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOERemark1Null() {
                return this.IsNull(this.tableGridMainWorkTable.UOERemark1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOERemark1Null() {
                this[this.tableGridMainWorkTable.UOERemark1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOERemark2Null() {
                return this.IsNull(this.tableGridMainWorkTable.UOERemark2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOERemark2Null() {
                this[this.tableGridMainWorkTable.UOERemark2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderGridRowNoNull() {
                return this.IsNull(this.tableGridMainWorkTable.HeaderGridRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderGridRowNoNull() {
                this[this.tableGridMainWorkTable.HeaderGridRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubstPartsNoNull() {
                return this.IsNull(this.tableGridMainWorkTable.SubstPartsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubstPartsNoNull() {
                this[this.tableGridMainWorkTable.SubstPartsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnswerPartsNoNull() {
                return this.IsNull(this.tableGridMainWorkTable.AnswerPartsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnswerPartsNoNull() {
                this[this.tableGridMainWorkTable.AnswerPartsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierSlipNoNull() {
                return this.IsNull(this.tableGridMainWorkTable.SupplierSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierSlipNoNull() {
                this[this.tableGridMainWorkTable.SupplierSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockSlipDtlNumSrcNull() {
                return this.IsNull(this.tableGridMainWorkTable.StockSlipDtlNumSrcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockSlipDtlNumSrcNull() {
                this[this.tableGridMainWorkTable.StockSlipDtlNumSrcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputSlipNoNull() {
                return this.IsNull(this.tableGridMainWorkTable.InputSlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputSlipNoNull() {
                this[this.tableGridMainWorkTable.InputSlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputEnterCntNull() {
                return this.IsNull(this.tableGridMainWorkTable.InputEnterCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputEnterCntNull() {
                this[this.tableGridMainWorkTable.InputEnterCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputAnswerSalesUnitCostNull() {
                return this.IsNull(this.tableGridMainWorkTable.InputAnswerSalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputAnswerSalesUnitCostNull() {
                this[this.tableGridMainWorkTable.InputAnswerSalesUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnswerMakerCdNull() {
                return this.IsNull(this.tableGridMainWorkTable.AnswerMakerCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnswerMakerCdNull() {
                this[this.tableGridMainWorkTable.AnswerMakerCdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GridMainTableRowChangeEvent : global::System.EventArgs {
            
            private GridMainTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GridMainTableRowChangeEvent(GridMainTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GridMainTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GridMainWorkTableRowChangeEvent : global::System.EventArgs {
            
            private GridMainWorkTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GridMainWorkTableRowChangeEvent(GridMainWorkTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GridMainWorkTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591