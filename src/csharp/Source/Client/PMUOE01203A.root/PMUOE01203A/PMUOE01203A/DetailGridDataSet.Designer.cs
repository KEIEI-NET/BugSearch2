//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.1433
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Broadleaf.Application.Controller {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DetailGridDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DetailGridDataSet : global::System.Data.DataSet {
        
        private DetailTableDataTable tableDetailTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DetailGridDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DetailGridDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DetailTable"] != null)) {
                    base.Tables.Add(new DetailTableDataTable(ds.Tables["DetailTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DetailTableDataTable DetailTable {
            get {
                return this.tableDetailTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DetailGridDataSet cln = ((DetailGridDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DetailTable"] != null)) {
                    base.Tables.Add(new DetailTableDataTable(ds.Tables["DetailTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDetailTable = ((DetailTableDataTable)(base.Tables["DetailTable"]));
            if ((initTable == true)) {
                if ((this.tableDetailTable != null)) {
                    this.tableDetailTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DetailGridDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DetailGridDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDetailTable = new DetailTableDataTable();
            base.Tables.Add(this.tableDetailTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDetailTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DetailGridDataSet ds = new DetailGridDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DetailTableRowChangeEventHandler(object sender, DetailTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DetailTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnNo;
            
            private global::System.Data.DataColumn columnDivCd;
            
            private global::System.Data.DataColumn columnInputEnterCnt;
            
            private global::System.Data.DataColumn columnEnterCnt;
            
            private global::System.Data.DataColumn columnGoodsName;
            
            private global::System.Data.DataColumn columnGoodsNo;
            
            private global::System.Data.DataColumn columnWarehouseCode;
            
            private global::System.Data.DataColumn columnWarehouseShelfNo;
            
            private global::System.Data.DataColumn columnSectionCnt;
            
            private global::System.Data.DataColumn columnBOCnt;
            
            private global::System.Data.DataColumn columnSalesUnitCost;
            
            private global::System.Data.DataColumn columnInputAnswerSalesUnitCost;
            
            private global::System.Data.DataColumn columnSupplierCd;
            
            private global::System.Data.DataColumn columnSlipNo;
            
            private global::System.Data.DataColumn columnOnlineNo;
            
            private global::System.Data.DataColumn columnOnlineRowNo;
            
            private global::System.Data.DataColumn columnStockExists;
            
            private global::System.Data.DataColumn columnSubstPartsNo;
            
            private global::System.Data.DataColumn columnAnswerPartsNo;
            
            private global::System.Data.DataColumn columnAnswerSalesUnitCost;
            
            private global::System.Data.DataColumn columnGoodspriceuSalesUnitCost;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailTableDataTable() {
                this.TableName = "DetailTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DetailTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DetailTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoColumn {
                get {
                    return this.columnNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DivCdColumn {
                get {
                    return this.columnDivCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputEnterCntColumn {
                get {
                    return this.columnInputEnterCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnterCntColumn {
                get {
                    return this.columnEnterCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNameColumn {
                get {
                    return this.columnGoodsName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodsNoColumn {
                get {
                    return this.columnGoodsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseCodeColumn {
                get {
                    return this.columnWarehouseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarehouseShelfNoColumn {
                get {
                    return this.columnWarehouseShelfNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionCntColumn {
                get {
                    return this.columnSectionCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BOCntColumn {
                get {
                    return this.columnBOCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesUnitCostColumn {
                get {
                    return this.columnSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InputAnswerSalesUnitCostColumn {
                get {
                    return this.columnInputAnswerSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplierCdColumn {
                get {
                    return this.columnSupplierCd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SlipNoColumn {
                get {
                    return this.columnSlipNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnlineNoColumn {
                get {
                    return this.columnOnlineNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnlineRowNoColumn {
                get {
                    return this.columnOnlineRowNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockExistsColumn {
                get {
                    return this.columnStockExists;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubstPartsNoColumn {
                get {
                    return this.columnSubstPartsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnswerPartsNoColumn {
                get {
                    return this.columnAnswerPartsNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnswerSalesUnitCostColumn {
                get {
                    return this.columnAnswerSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GoodspriceuSalesUnitCostColumn {
                get {
                    return this.columnGoodspriceuSalesUnitCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailTableRow this[int index] {
                get {
                    return ((DetailTableRow)(this.Rows[index]));
                }
            }
            
            public event DetailTableRowChangeEventHandler DetailTableRowChanging;
            
            public event DetailTableRowChangeEventHandler DetailTableRowChanged;
            
            public event DetailTableRowChangeEventHandler DetailTableRowDeleting;
            
            public event DetailTableRowChangeEventHandler DetailTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDetailTableRow(DetailTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailTableRow AddDetailTableRow(
                        int No, 
                        string DivCd, 
                        int InputEnterCnt, 
                        int EnterCnt, 
                        string GoodsName, 
                        string GoodsNo, 
                        string WarehouseCode, 
                        string WarehouseShelfNo, 
                        int SectionCnt, 
                        int BOCnt, 
                        double SalesUnitCost, 
                        double InputAnswerSalesUnitCost, 
                        int SupplierCd, 
                        string SlipNo, 
                        int OnlineNo, 
                        int OnlineRowNo, 
                        bool StockExists, 
                        string SubstPartsNo, 
                        string AnswerPartsNo, 
                        double AnswerSalesUnitCost, 
                        double GoodspriceuSalesUnitCost) {
                DetailTableRow rowDetailTableRow = ((DetailTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        No,
                        DivCd,
                        InputEnterCnt,
                        EnterCnt,
                        GoodsName,
                        GoodsNo,
                        WarehouseCode,
                        WarehouseShelfNo,
                        SectionCnt,
                        BOCnt,
                        SalesUnitCost,
                        InputAnswerSalesUnitCost,
                        SupplierCd,
                        SlipNo,
                        OnlineNo,
                        OnlineRowNo,
                        StockExists,
                        SubstPartsNo,
                        AnswerPartsNo,
                        AnswerSalesUnitCost,
                        GoodspriceuSalesUnitCost};
                rowDetailTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDetailTableRow);
                return rowDetailTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailTableRow FindByNo(int No) {
                return ((DetailTableRow)(this.Rows.Find(new object[] {
                            No})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DetailTableDataTable cln = ((DetailTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DetailTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNo = base.Columns["No"];
                this.columnDivCd = base.Columns["DivCd"];
                this.columnInputEnterCnt = base.Columns["InputEnterCnt"];
                this.columnEnterCnt = base.Columns["EnterCnt"];
                this.columnGoodsName = base.Columns["GoodsName"];
                this.columnGoodsNo = base.Columns["GoodsNo"];
                this.columnWarehouseCode = base.Columns["WarehouseCode"];
                this.columnWarehouseShelfNo = base.Columns["WarehouseShelfNo"];
                this.columnSectionCnt = base.Columns["SectionCnt"];
                this.columnBOCnt = base.Columns["BOCnt"];
                this.columnSalesUnitCost = base.Columns["SalesUnitCost"];
                this.columnInputAnswerSalesUnitCost = base.Columns["InputAnswerSalesUnitCost"];
                this.columnSupplierCd = base.Columns["SupplierCd"];
                this.columnSlipNo = base.Columns["SlipNo"];
                this.columnOnlineNo = base.Columns["OnlineNo"];
                this.columnOnlineRowNo = base.Columns["OnlineRowNo"];
                this.columnStockExists = base.Columns["StockExists"];
                this.columnSubstPartsNo = base.Columns["SubstPartsNo"];
                this.columnAnswerPartsNo = base.Columns["AnswerPartsNo"];
                this.columnAnswerSalesUnitCost = base.Columns["AnswerSalesUnitCost"];
                this.columnGoodspriceuSalesUnitCost = base.Columns["GoodspriceuSalesUnitCost"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNo = new global::System.Data.DataColumn("No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo);
                this.columnDivCd = new global::System.Data.DataColumn("DivCd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDivCd);
                this.columnInputEnterCnt = new global::System.Data.DataColumn("InputEnterCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputEnterCnt);
                this.columnEnterCnt = new global::System.Data.DataColumn("EnterCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnterCnt);
                this.columnGoodsName = new global::System.Data.DataColumn("GoodsName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsName);
                this.columnGoodsNo = new global::System.Data.DataColumn("GoodsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsNo);
                this.columnWarehouseCode = new global::System.Data.DataColumn("WarehouseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseCode);
                this.columnWarehouseShelfNo = new global::System.Data.DataColumn("WarehouseShelfNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseShelfNo);
                this.columnSectionCnt = new global::System.Data.DataColumn("SectionCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionCnt);
                this.columnBOCnt = new global::System.Data.DataColumn("BOCnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBOCnt);
                this.columnSalesUnitCost = new global::System.Data.DataColumn("SalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesUnitCost);
                this.columnInputAnswerSalesUnitCost = new global::System.Data.DataColumn("InputAnswerSalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputAnswerSalesUnitCost);
                this.columnSupplierCd = new global::System.Data.DataColumn("SupplierCd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCd);
                this.columnSlipNo = new global::System.Data.DataColumn("SlipNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipNo);
                this.columnOnlineNo = new global::System.Data.DataColumn("OnlineNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlineNo);
                this.columnOnlineRowNo = new global::System.Data.DataColumn("OnlineRowNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlineRowNo);
                this.columnStockExists = new global::System.Data.DataColumn("StockExists", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockExists);
                this.columnSubstPartsNo = new global::System.Data.DataColumn("SubstPartsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubstPartsNo);
                this.columnAnswerPartsNo = new global::System.Data.DataColumn("AnswerPartsNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnswerPartsNo);
                this.columnAnswerSalesUnitCost = new global::System.Data.DataColumn("AnswerSalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnswerSalesUnitCost);
                this.columnGoodspriceuSalesUnitCost = new global::System.Data.DataColumn("GoodspriceuSalesUnitCost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodspriceuSalesUnitCost);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNo}, true));
                this.columnNo.AllowDBNull = false;
                this.columnNo.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailTableRow NewDetailTableRow() {
                return ((DetailTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DetailTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DetailTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DetailTableRowChanged != null)) {
                    this.DetailTableRowChanged(this, new DetailTableRowChangeEvent(((DetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DetailTableRowChanging != null)) {
                    this.DetailTableRowChanging(this, new DetailTableRowChangeEvent(((DetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DetailTableRowDeleted != null)) {
                    this.DetailTableRowDeleted(this, new DetailTableRowChangeEvent(((DetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DetailTableRowDeleting != null)) {
                    this.DetailTableRowDeleting(this, new DetailTableRowChangeEvent(((DetailTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDetailTableRow(DetailTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DetailGridDataSet ds = new DetailGridDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DetailTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DetailTableRow : global::System.Data.DataRow {
            
            private DetailTableDataTable tableDetailTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DetailTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDetailTable = ((DetailTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int No {
                get {
                    return ((int)(this[this.tableDetailTable.NoColumn]));
                }
                set {
                    this[this.tableDetailTable.NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DivCd {
                get {
                    try {
                        return ((string)(this[this.tableDetailTable.DivCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'DivCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.DivCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int InputEnterCnt {
                get {
                    try {
                        return ((int)(this[this.tableDetailTable.InputEnterCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'InputEnterCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.InputEnterCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EnterCnt {
                get {
                    try {
                        return ((int)(this[this.tableDetailTable.EnterCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'EnterCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.EnterCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsName {
                get {
                    try {
                        return ((string)(this[this.tableDetailTable.GoodsNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'GoodsName\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.GoodsNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GoodsNo {
                get {
                    try {
                        return ((string)(this[this.tableDetailTable.GoodsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'GoodsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.GoodsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseCode {
                get {
                    try {
                        return ((string)(this[this.tableDetailTable.WarehouseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'WarehouseCode\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.WarehouseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WarehouseShelfNo {
                get {
                    try {
                        return ((string)(this[this.tableDetailTable.WarehouseShelfNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'WarehouseShelfNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.WarehouseShelfNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SectionCnt {
                get {
                    try {
                        return ((int)(this[this.tableDetailTable.SectionCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'SectionCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.SectionCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BOCnt {
                get {
                    try {
                        return ((int)(this[this.tableDetailTable.BOCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'BOCnt\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.BOCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableDetailTable.SalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'SalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.SalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double InputAnswerSalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableDetailTable.InputAnswerSalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'InputAnswerSalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.InputAnswerSalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplierCd {
                get {
                    try {
                        return ((int)(this[this.tableDetailTable.SupplierCdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'SupplierCd\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.SupplierCdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SlipNo {
                get {
                    try {
                        return ((string)(this[this.tableDetailTable.SlipNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'SlipNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.SlipNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OnlineNo {
                get {
                    try {
                        return ((int)(this[this.tableDetailTable.OnlineNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'OnlineNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.OnlineNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OnlineRowNo {
                get {
                    try {
                        return ((int)(this[this.tableDetailTable.OnlineRowNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'OnlineRowNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.OnlineRowNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool StockExists {
                get {
                    try {
                        return ((bool)(this[this.tableDetailTable.StockExistsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'StockExists\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.StockExistsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubstPartsNo {
                get {
                    try {
                        return ((string)(this[this.tableDetailTable.SubstPartsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'SubstPartsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.SubstPartsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AnswerPartsNo {
                get {
                    try {
                        return ((string)(this[this.tableDetailTable.AnswerPartsNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'AnswerPartsNo\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.AnswerPartsNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AnswerSalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableDetailTable.AnswerSalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'AnswerSalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.AnswerSalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GoodspriceuSalesUnitCost {
                get {
                    try {
                        return ((double)(this[this.tableDetailTable.GoodspriceuSalesUnitCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'DetailTable\' にある列 \'GoodspriceuSalesUnitCost\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableDetailTable.GoodspriceuSalesUnitCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDivCdNull() {
                return this.IsNull(this.tableDetailTable.DivCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDivCdNull() {
                this[this.tableDetailTable.DivCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputEnterCntNull() {
                return this.IsNull(this.tableDetailTable.InputEnterCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputEnterCntNull() {
                this[this.tableDetailTable.InputEnterCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnterCntNull() {
                return this.IsNull(this.tableDetailTable.EnterCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnterCntNull() {
                this[this.tableDetailTable.EnterCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNameNull() {
                return this.IsNull(this.tableDetailTable.GoodsNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNameNull() {
                this[this.tableDetailTable.GoodsNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodsNoNull() {
                return this.IsNull(this.tableDetailTable.GoodsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodsNoNull() {
                this[this.tableDetailTable.GoodsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseCodeNull() {
                return this.IsNull(this.tableDetailTable.WarehouseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseCodeNull() {
                this[this.tableDetailTable.WarehouseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarehouseShelfNoNull() {
                return this.IsNull(this.tableDetailTable.WarehouseShelfNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarehouseShelfNoNull() {
                this[this.tableDetailTable.WarehouseShelfNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionCntNull() {
                return this.IsNull(this.tableDetailTable.SectionCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionCntNull() {
                this[this.tableDetailTable.SectionCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBOCntNull() {
                return this.IsNull(this.tableDetailTable.BOCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBOCntNull() {
                this[this.tableDetailTable.BOCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesUnitCostNull() {
                return this.IsNull(this.tableDetailTable.SalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesUnitCostNull() {
                this[this.tableDetailTable.SalesUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInputAnswerSalesUnitCostNull() {
                return this.IsNull(this.tableDetailTable.InputAnswerSalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInputAnswerSalesUnitCostNull() {
                this[this.tableDetailTable.InputAnswerSalesUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplierCdNull() {
                return this.IsNull(this.tableDetailTable.SupplierCdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplierCdNull() {
                this[this.tableDetailTable.SupplierCdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSlipNoNull() {
                return this.IsNull(this.tableDetailTable.SlipNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSlipNoNull() {
                this[this.tableDetailTable.SlipNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOnlineNoNull() {
                return this.IsNull(this.tableDetailTable.OnlineNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOnlineNoNull() {
                this[this.tableDetailTable.OnlineNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOnlineRowNoNull() {
                return this.IsNull(this.tableDetailTable.OnlineRowNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOnlineRowNoNull() {
                this[this.tableDetailTable.OnlineRowNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockExistsNull() {
                return this.IsNull(this.tableDetailTable.StockExistsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockExistsNull() {
                this[this.tableDetailTable.StockExistsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubstPartsNoNull() {
                return this.IsNull(this.tableDetailTable.SubstPartsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubstPartsNoNull() {
                this[this.tableDetailTable.SubstPartsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnswerPartsNoNull() {
                return this.IsNull(this.tableDetailTable.AnswerPartsNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnswerPartsNoNull() {
                this[this.tableDetailTable.AnswerPartsNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnswerSalesUnitCostNull() {
                return this.IsNull(this.tableDetailTable.AnswerSalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnswerSalesUnitCostNull() {
                this[this.tableDetailTable.AnswerSalesUnitCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGoodspriceuSalesUnitCostNull() {
                return this.IsNull(this.tableDetailTable.GoodspriceuSalesUnitCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGoodspriceuSalesUnitCostNull() {
                this[this.tableDetailTable.GoodspriceuSalesUnitCostColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DetailTableRowChangeEvent : global::System.EventArgs {
            
            private DetailTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailTableRowChangeEvent(DetailTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DetailTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591