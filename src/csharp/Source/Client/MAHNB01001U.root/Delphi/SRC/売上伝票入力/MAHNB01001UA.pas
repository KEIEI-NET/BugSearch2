
//****************************************************************************//
// システム         : PM.NS
// プログラム名称   : 売上伝票入力
// プログラム概要   :
//----------------------------------------------------------------------------//
//                (c)Copyright  2010 Broadleaf Co.,Ltd.
//============================================================================//
// 履歴
//----------------------------------------------------------------------------//
// 管理番号  10601193-00 作成担当 : LDNS
// 作 成 日  2010/05/29  修正内容 : 新規作成
//----------------------------------------------------------------------------//
// 管理番号  10601193-00 作成担当 : 20056 對馬 大輔
// 作 成 日  2010/05/30  修正内容 : 成果物統合
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木 正臣
// 作 成 日  2010/06/12  修正内容 : 携帯メール機能の組込
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木 正臣
// 作 成 日  2010/06/16  修正内容 : オフライン対応の組込
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2010/07/27  修正内容 : 障害対応
//                                : ①伝票呼出後、画面を終了すると例外エラーが発生する件の対応
//                                : ②見出貼付後、車輌検索キー項目からフォーカス移動すると車輌検索が動作する件の対応
//                                : ③現金得意先情報を見出貼付した場合、名称が再取得される件の対応
//                                : ④問合せ一覧と回答処理をツールバーに表示すると起動しない件の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2010/08/02  修正内容 : 障害対応
//                                : 伝票呼出後の表示明細行制御を正常動作するように修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2010/08/06  修正内容 : 障害対応
//                                : 担当者、受注者、発行者の表示制御変更
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2010/08/09  修正内容 : 障害対応
//                                : 明細部フォーカス制御を変更
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2010/08/24  修正内容 : 障害対応
//                                : [*]入力で問合せ一覧が起動しないように修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 譚洪
// 作 成 日  2010/08/13  修正内容 : 障害・改良対応(８月リリース案件)
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2010/08/30  修正内容 : 税率設定範囲チェック追加
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2010/09/27  修正内容 : 障害対応
//                                : 品番[0]を検索可能とする
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 譚洪
// 作 成 日  2010/10/08  修正内容 : 障害・改良対応(８月リリース案件)
//                                : 改訂No20(５２,５３,５４,５５,５６,５７)
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 呉元嘯
// 作 成 日  2010/10/15  修正内容 : 障害・改良対応(８月リリース案件)
//                                : 改訂No20(58)
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2010/10/27  修正内容 : 障害対応
//                                : 1)品番をマウス右クリックで貼付し、品番検索した場合、
//                                    フォーカスがフッタ部へ移動してしまう件の対応
//                                  2)ヘッダ制御で年式を最終項目とした場合
//                                    明細部の先頭行から最終行へ移動してしまう件の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 佐々木 健
// 作 成 日  2010/10/26  修正内容 : 得意先入力後のレスポンス改善
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木 正臣
// 作 成 日  2010/10/27  修正内容 : 障害対応
//                                : 1)車両管理番号から脱出時は
//                                    伝票備考１が空白の場合のみ車輌備考をセットするよう変更。
//                                  2)見出貼付で全明細クリアするので、
//                                    対象行Noには常に"1"をセットするように修正。
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木 正臣
// 作 成 日  2010/10/28  修正内容 : 障害対応
//                                : 1)伝票区分のComboBoxの更新処理を修正。
//                                    (現金得意先を入力→F9:新規→売掛得意先の貸出計上で
//                                     伝票の売掛区分=現金になる件の対応)
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木 正臣
// 作 成 日  2010/10/29  修正内容 : 障害対応
//                                : 1)2010/10/28の対応により元あり返品の
//                                    動作が不正になったため、修正。
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木 正臣
// 作 成 日  2010/11/01  修正内容 : 障害対応
//                                  1)フル型式固定番号のない情報を見出貼付した後、
//                                    車輛検索が動作しない件の修正。(2010/07/27デグレ)
//                                  2)フル型式固定番号のない情報を見出貼付した後、
//                                    年式がセットされない件の修正。
//                                  3)現金得意先をガイド入力した場合、
//                                    得意先名称欄が入力可能にならない件の修正。
//                                  4)車両管理ガイドでキャンセル時に
//                                    車両管理番号がクリアされる件の修正。
//                                  5)F5での車両管理ガイドの起動可否判断を修正。
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2010/11/02  修正内容 : 障害対応
//                                : 1)品番をマウス右クリックで貼付し、品番検索した場合、
//                                    不正エラーが発生する対応
//                                  2)データ保存後、続けて入力した場合、
//                                    車輌検索が動作してしまう件の対応
//                                  3)備考１が入力されていると車輌情報入力後
//                                    車輌備考で備考１が更新されない件の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2010/11/08  修正内容 : 障害対応
//                                : 1)既に発行済みの売上伝票の内容が
//                                    別の内容に書き換えられてしまう件の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 譚洪
// 作 成 日  2010/11/25  修正内容 : 障害改良対応11月
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2010/12/02  修正内容 : 障害対応
//                                : 1)仕入伝票番号からEnterキーを押下するとおちる件の対応
//                                : 2)設定(O)の削除変更を取消し
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2010/12/10  修正内容 : 障害対応
//                                : 売上金額からフォーカス移動した場合、
//                                : 常に売上金額手入力扱いになってしまう件の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2010/12/16  修正内容 : 障害対応
//                                : 明細項目変更後、マウスで入力不可項目をクリックし
//                                : 入力可能項目をクリックしても、変更内容が確定されない件の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2011/01/13  修正内容 : 障害対応
//                                : 下記対応をNsGridを修正し対応する為、2010/12/16の修正削除
//                                :  明細項目変更後、マウスで入力不可項目をクリックし
//                                :  入力可能項目をクリックしても、変更内容が確定されない件の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2011/01/27  修正内容 : 障害対応
//                                :  明細部速度改善(障害改良対応11月によるデグレ対応)
//                                :  以下のメソッドを定数に一括置換
//                                :     xColNameToIndex()
//                                :     xRowNameToIndex()
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2011/01/28  修正内容 : 障害対応
//                                : 明細部から納入先にフォーカスが移動してしまう件の対応
//                                : 以下、操作オペレーション
//                                :  1)売単価からマウスで納入先ボタンクリック
//                                :  2)納入先画面閉じて、売単価マウスクリック
//                                :  3)Enterキーで納入先にフォーカスが移動
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 21024　佐々木 健
// 作 成 日  2011/01/31  修正内容 : SCM対応
//                                  ①納期設定マスタのレイアウト変更対応
//                                  ②見積時にも、回答納期を入力出来るように変更
//                                  ③回答送信のユーザーインターフェース変更
//                                  ④ツールバーの表示制御の修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2011/02/01  修正内容 : SCM対応
//                                : 1)SCM展開時、展開処理が２回起動する件の対応：
//                                :     Timer_SCMRead Enabled のDefault をFalseへ変更
//                                : 2)SCMボタン制御対応：RC連動オプションを参照するように変更
//                                : 3)表示明細初期化
//                                : 4)追加回答対応：SCM回答時、明細を追加して回答可能とする
//                                : 5)PS管理番号入力制御
//                                : 6)発注明細表示時のフォーカス制御
//                                : 7)SCM情報存在チェック処理追加
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 22018 鈴木 正臣
// 作 成 日  2011/02/10  修正内容 : 障害対応
//                                : 1)数量列で↑、↓移動したときの処理が遅い件の修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 曹文傑
// 作 成 日  2011/02/11  修正内容 : 伝票内容が差し替わってしまう件の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2011/03/04  修正内容 : SCM対応
//                                : 1)CTI展開時の担当者、発行者、受注者の初期表示を行う
//                                : 2)CTI展開時の初期フォーカス位置を型式指定番号へ
//                                : 3)CMT連携時、回答送信後の空明細削除
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 曹文傑
// 作 成 日  2011/03/07  修正内容 : Redmine #19637の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2011/03/09  修正内容 : SCM対応
//                                : 1)問合せ番号と売上伝票番号が存在する伝票を修正呼出ししても
//                                :   伝票の対象行数ないで行追加可能とする
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2011/03/16  修正内容 : SCM対応
//                                : 1)回答納期の入力桁変更
//                                : 2)回答納期の初期IMEモード変更
//----------------------------------------------------------------------------//
// 管理番号  10600008-00 作成担当 : 曹文傑
// 作 成 日  2011/03/28  修正内容 : Redmine #20122の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2011/04/04  修正内容 : 明細複数選択を可能とする
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 曹文傑
// 作 成 日  2011/04/13  修正内容 : 明細複数選択行を削除可能とする
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 高峰
// 作 成 日  2011/04/29  修正内容 : Redmine #20933の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 譚洪
// 作 成 日  2011/05/18  修正内容 : 明細複数選択行の場合、削除以外不可
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 20056 對馬 大輔
// 作 成 日  2011/05/18  修正内容 : ３月改良、４月改良の障害対応
//                                  1)伝票種別：売上 以外で行操作するとエラーになる件の対応
//                                  2)フォーカスが明細部にある場合の計上ボタン制御修正
//----------------------------------------------------------------------------//
// 管理番号  10600008-00 作成担当 : 20056 對馬 大輔
// 作 成 日  2011/05/25  修正内容 : SCM改良
//                                : 1)送信確認画面に指示書番号の入力を追加
//                                : 2)フッタ部に指示書番号の入力を追加
//                                : 3)販売区分の入力制御追加
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 曹文傑
// 作 成 日  2011/05/30  修正内容 : キャンペーン売価を取得するように変更
//----------------------------------------------------------------------------//
// 管理番号 10704766-00  作成担当 : 許雁波
// 作 成 日  2011/07/19  修正内容 : 得意先コードを入力⇒担当者コードを入力
//                                  をお客さんの運用レベルで早く入力すると、
//                                  得意先コードが担当者コードで上書きされてしまう
//                                  現象を回避する（連番28）
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 許雁波
// 作 成 日  2011/07/20  修正内容 : 連番1028,Redmine#22936
//                                  仕入・出荷後数表示区分(明細算出後在庫数表示区分)について修正
// 管理番号              作成担当 : 朱宝軍
// 作 成 日  2011/07/16  修正内容 : ＰＭで元数量以上の返品が発生対応
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 譚洪
// 作 成 日  2011/07/22  修正内容 : 「　キーで『受注検索ガイド』が表示される、
//                                  又＠ キーで『メール情報』が表示されるのを修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 :  戴斌
// 作 成 日  2011/07/17  修正内容 :  SFから車両情報無しで発注したとき、売伝の検索モード変換
// 管理番号  10704766-00 作成担当 : 許雁波
// 作 成 日  2011/08/02  修正内容 : 連番1003
//                                  F8：日付の修正のみ可能とする
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 許雁波
// 作 成 日  2011/08/04  修正内容 : 連番895
//                                  管理番号検索モードの処理を追加する
//----------------------------------------------------------------------------//
// 管理番号              作成担当 :  張栄波
// 作 成 日  2011/07/19  修正内容 :  ＣＭＴ通信状態で売上を送信した場合、落ちるオペレーションが発生対応
// 管理番号  10704766-00 作成担当 : 許雁波
// 作 成 日  2011/08/06  修正内容 : 連番998、999
//                                  管理番号ガイドボタンを押下した場合、得意先名称、
//                                  担当者コード、名称の表示処理を追加する
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 朱宝軍
// 作 成 日  2011/07/22  修正内容 : Redmine #23148の対応
// 管理番号  10704766-00 作成担当 : 王飛
// 作 成 日  2011/08/08  修正内容 : 連番962 仕入ボタンの制御を修正する
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 朱宝軍
// 作 成 日  2011/07/23  修正内容 : 回答区分の追加
// 管理番号  10704766-00 作成担当 : 梁森東
// 作 成 日  2011/08/09  修正内容 : 連番４、979
//                                  ユーザー設定の入力制御にアクティブ色項目を追加
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 朱宝軍
// 作 成 日  2011/07/27  修正内容 : Redmine #23148の対応
// 管理番号  10704766-00 作成担当 : 梁森東
// 作 成 日  2011/08/09  修正内容 : 連番1000
//                                  管理番号にはかなを入力、ソース記述なし
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 豆昌紅
// 作 成 日  2011/07/28  修正内容 : Redmine #23148の⑥対応
// 管理番号  10704766-00 作成担当 : 徐錦山
// 作 成 日  2011/08/08  修正内容 : 連番994
//                                  明細部からの計上時は品番検索へ切り替え可能です
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 譚洪
// 作 成 日  2011/07/22  修正内容 : 連番824「　キーで『受注検索ガイド』が表示される、
//                                  又＠ キーで『メール情報』が表示されるのを修正
// 管理番号              作成担当 : 朱宝軍
// 作 成 日  2011/08/02  修正内容 : Redmine #23348の対応
// 管理番号  10704766-00 作成担当 : 徐錦山
// 作 成 日  2011/08/09  修正内容 : 連番922
//                                  伝票印刷パターン設定で、備考桁数をバイト換算に変更の対応
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 梁森東
// 作 成 日  2011/08/10  修正内容 : 連番968
//                                  メッセージが表示されるよう修正
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 許雁波
// 作 成 日  2011/08/08  修正内容 : 連番1002
//                                  「入力後のカーソル位置」のドロプダアウを追加
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 譚洪
// 作 成 日  2011/08/23  修正内容 : 連番1020
//                                  ＢＬコード検索後、明細表示される前に、↓で次行に移ると、前の行の数量欄にＢＬコードが入ってしまう
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 豆昌紅
// 作 成 日  2011/08/03  修正内容 : Redmine #23364の対応
// 管理番号  10704766-00 作成担当 : 許雁波
// 作 成 日  2011/08/18  修正内容 : 連番729
//                                  明細貼付ファンクションボタンを追加
//----------------------------------------------------------------------------//
// 管理番号 10704766-00  作成担当 : 許雁波
// 作 成 日  2011/08/12  修正内容 :連番２８
//		                      Redmine#23527の対応
//----------------------------------------------------------------------------//
// 管理番号  10703874-00 作成担当 : yangyi
// 作 成 日  K2011/08/12 修正内容 : イスコ個別対応
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 譚洪
// 作 成 日  2011/08/15  修正内容 :連番16
//			       Redmine#23578 連番16での掛率算出の修正内容の対応
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 朱宝軍
// 作 成 日  2011/08/16  修正内容 : Redmine#23681の対応
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 徐錦山
// 作 成 日  2011/08/20  修正内容 : 連番681,882 元定価が表示のを追加
//----------------------------------------------------------------------------//
// 管理番号  10703874-00 作成担当 : yangyi
// 作 成 日  K2011/09/01  修正内容 : Redmine#24294の対応
//----------------------------------------------------------------------------//
// 管理番号  10703874-00 作成担当 : yangyi
// 作 成 日  K2011/09/02  修正内容 : Redmine#24376の対応
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : yangmj
// 作 成 日  2011/09/05  修正内容 : Redmine#24348の対応
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : yangmj
// 作 成 日  2011/08/30  修正内容 :Redmine#24110
//			       Redmine#24110 伝票備考の文字数の修正内容の対応
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : yangmj
// 作 成 日  2011/09/08  修正内容 :Redmine#24567
//			       保存時に備考の明細、備考などの対応
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : yangmj
// 作 成 日  2011/09/13  修正内容 :Redmine#24853
//			                           在庫数表示の対応
//----------------------------------------------------------------------------//
// 管理番号  10703874-00 作成担当 : zhume
// 作 成 日  K2011/09/20 修正内容 : 備考２にフォーカスがある場合、保存(Ｆ10)を
// 　　　　　押して備考２がチェックされた場合、保存処理をしないように修正。
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : yangmj
// 作 成 日  2011/09/20  修正内容 :Redmine#25261
//			                           元伝票を指定しての返品時動作の修正の対応
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 譚洪
// 作 成 日  2011/09/20  修正内容 :Redmine#25246
//			                           連番691 でのテスト不具合についての対応
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : yangmj
// 作 成 日  2011/09/21  修正内容 :Redmine#25261
//			                           元伝票を指定しての返品時動作の修正の対応
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 譚洪
// 作 成 日  2011/09/21  修正内容 :Redmine#25423
//			                           Enterキー等の操作が聞かなくなりますので修正
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 鄧潘ハン
// 作 成 日  2011/09/28  修正内容 :Redmine#25639
//			                           発注の回答後、「続けて入力しますか？」で「はい」を選択した場合、「問合番号」が残ったままになっています
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 譚洪
// 作 成 日  2011/09/29  修正内容 :Redmine#25649
//			                           連番1020 でのテスト不具合の修正
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 鄧潘ハン
// 作 成 日  2011/09/29  修正内容 :Redmine#25650
//			                           １行目のフォーカス遷移が不正な件（9月対応分）ので修正
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 鄧潘ハン
// 作 成 日  2011/10/11  修正内容 :Redmine#25894
//			                           連携データ展開後の制御ので修正
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 鄧潘ハン
// 作 成 日  2011/10/20  修正内容 :Redmine#26094
//			                           ヘッダ部の売上日／見積日のフォーカス制御に関しての修正
//----------------------------------------------------------------------------//
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 鄧潘ハン
// 作 成 日  2011/10/26  修正内容 :Redmine#26224
//			                           F12発注選択時に、BO区分に関しては、発注先マスタ上の初期値設定項目（BO区分）を表示していますが、
//                                 初期値設定項目がスペースで設定されている場合、「*」が表示されるのでスペースとするの修正
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 鄧潘ハン
// 作 成 日  2011/10/29  修正内容 :Redmine#26251
//			                           全体初期値設定の明細算出後在庫数表示区分を「行移動時反映」に設定した状態で、
//                                 売上伝票入力で明細を入力し、売価率を入力後に「↓」キーを押して次行に移動すると在庫数が変更されないため、
//                                 ENTERで次行に移動する時と同じように在庫数が変更される用に修正
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 鄧潘ハン
// 作 成 日  2011/10/31  修正内容 :Redmine#26255
//			                           売上仕入同時入力時のフォーカス移動の不具合の修正
//----------------------------------------------------------------------------//
 // 管理番号10704766-00   作成担当 : 鄧潘ハン
// 作 成 日  2011/11/01  修正内容 :Redmine#26224
//			                           F12発注選択時に、BO区分に関しては、発注先マスタ上の初期値設定項目（BO区分）を表示していますが、
//                                 初期値設定項目がスペースで設定されている場合、「*」が表示されるのでスペースとするの修正
//----------------------------------------------------------------------------//
 // 管理番号10704766-00   作成担当 : 鄧潘ハン
// 作 成 日  2011/11/15  修正内容 :Redmine#7730
//			                           管理番号入力時、PMSF連携伝票の場合の仕様変更
//----------------------------------------------------------------------------//
 // 管理番号10704766-00   作成担当 : 鄧潘ハン
// 作 成 日  2011/11/17  修正内容 :Redmine#7730
//			                           管理番号入力時、PMSF連携伝票の場合の仕様変更
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 李占川
// 作 成 日  2011/11/17  修正内容 :redmine#26532
//			                           BLﾊﾟｰﾂｵｰﾀﾞｰｼｽﾃﾑの在庫確認で作成された見積伝票を修正呼出しした場合、
//                                 メッセージを表示し、参照モードで画面に表示して下さい。
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 李占川
// 作 成 日  2011/11/18  修正内容 :redmine#26532
//			                           BLﾊﾟｰﾂｵｰﾀﾞｰｼｽﾃﾑの在庫確認で作成された見積伝票を修正呼出しした場合、
//                                 メッセージを表示し、参照モードで画面に表示して下さい。
//----------------------------------------------------------------------------//
 // 管理番号10704766-00   作成担当 : 鄧潘ハン
// 作 成 日  2011/11/18  修正内容 :Redmine#7730
//			                           管理番号入力時、PMSF連携伝票の場合の仕様変更
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 劉思遠
// 作 成 日  2011/11/22  修正内容 : Redmine#8037
//			                            BLﾊﾟｰﾂｵｰﾀﾞｰ　在庫確認→発注時のデータセットの仕様変更
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : yangmj
// 作 成 日  2011/11/25  修正内容 : Redmine#8070
//			                            得意先コードを変更すると、前回の選択値ように設定の仕様変更
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : yangmj
// 作 成 日  2011/11/28  修正内容 : Redmine#8169
//			                            品番モードでフォーカスの移動の仕様変更
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : yangmj
// 作 成 日  2011/11/30  修正内容 : Redmine#8353 改良分
//			                            売上伝票入力のエラーの修正
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : liuzy
// 作 成 日  2011/12/01  修正内容 : Redmine#8379 改良分
//			                            粗利チェックの修正
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : yangmj
// 作 成 日  2011/12/01  修正内容 : Redmine#8344 改良分
//			                            販売区分のチェックの仕様変更
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 譚洪
// 作 成 日  2011/12/08  修正内容 : Redmine#8070
//			                            得意先コードを変更すると、前回の選択値ように設定の仕様変更
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : liuzy
// 作 成 日  2011/12/09  修正内容 : Redmine#8377
//			                            売上伝票入力各項目 IME制御の修正
//----------------------------------------------------------------------------//
// 管理番号  10703874-00 作成担当 : 鄧潘ハン
// 作 成 日  K2011/12/09  修正内容 : Redmine#8564の対応
//----------------------------------------------------------------------------//
// 管理番号    作成担当 : 20056 對馬 大輔
// 作 成 日  2011/12/12  修正内容 : 障害対応
//                                  赤伝を表示した場合のファンクション制御変更
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : 鄧潘ハン
// 作 成 日  2011/12/13  修正内容 : Redmine#27236
//			                            売上伝票入力／仕入同時入力の動作についての修正
//----------------------------------------------------------------------------//
// 管理番号  10703874-00 作成担当 : 鄧潘ハン
// 作 成 日  K2011/12/14  修正内容 : Redmine#8564の対応
//----------------------------------------------------------------------------//
// 管理番号  10703874-00 作成担当 : 鄧潘ハン
// 作 成 日  K2011/12/15  修正内容 : Redmine#8564の対応
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : liusy
// 作 成 日  2011/12/16  修正内容 : Redmine#26917
//			                            粗利チェックの修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : yangmj
// 作 成 日  2011/12/20  修正内容 : Redmine#26650
//			                            明細入力モードの切替の修正
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : 凌小青
// 作 成 日  2011/12/21  修正内容 : 2012/01/25配信分、Redmine27309の対応
//                                 明細貼付(D)の操作不正
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : liusy
// 作 成 日  2011/12/21  修正内容 : Redmine#26911 (#8377一時戻る)
//			                            売上伝票入力各項目 IME制御の修正
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : 田建委
// 作 成 日  2011/12/21  修正内容 : Redmine#27290
//			                            明細部で日付修正(F8)ボタンがグレーになるの修正
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : 李小路
// 作 成 日  2011/12/22  修正内容 : Redmine#27451
//			                            売上伝票入力/標準価格の色の修正
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : liusy
// 作 成 日  2011/12/31  修正内容 : 2012/01/25配信分 Redmine#26911
//			                            売上伝票入力各項目 IME制御の修正
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : zhangyong
// 作 成 日  2012/01/04  修正内容 : Redmine#27279
//			                            売上伝票入力/キーボード操作で、 エラーの発生
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : 譚洪
// 作 成 日  2012/01/05  修正内容 : Redmine#27526
//			                            売上伝票入力/在庫切れのチェック
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : 譚洪
// 作 成 日  2012/01/11  修正内容 : Redmine#27388
//			                            売上伝票入力/フォーカス移動のエラーの修正
//----------------------------------------------------------------------------//
// 管理番号10707327-00   作成担当 : 鄧潘ハン
// 作 成 日  2012/01/12 修正内容 : Redmine#27954
//			                            PMSF連携／PCCforNS BLﾊﾟｰﾂｵｰﾀﾞｰ 障害対応の修正
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : 凌小青
// 作 成 日  2012/01/17  修正内容 : 2012/02/23配信分、Redmine27977の対応
//                                 売上伝票入力の受注データの保存について（修正呼出モード）の修正
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : 譚洪
// 作 成 日  2012/01/17  修正内容 : 2012/02/23配信分 Redmine#27300、Redmine27294の対応
//			                            売上伝票入力/AccessViorationエラーの発生の修正
//----------------------------------------------------------------------------//
// 管理番号10704766-00   作成担当 : yangmj
// 作 成 日  2012/01/18  修正内容 : ソースマージ
//----------------------------------------------------------------------------//
// 管理番号 10704766-00  作成担当 : tianjw
// 作 成 日  2012/01/18  修正内容 : ソースマージ(#8169一時戻る)
//----------------------------------------------------------------------------//
// 管理番号  10800003-00 作成担当 : 20056 對馬 大輔
// 作 成 日  2012/01/20  修正内容 : SCM改良
//                                :  SF連携伝票のUOE発注は不可とする
//----------------------------------------------------------------------------//
// 管理番号10707327-00   作成担当 : 鄧潘ハン
// 作 成 日  2012/01/20 修正内容 : Redmine#28098
//			                           アクセスバイオレーションエラーが発生の修正
//----------------------------------------------------------------------------//
// 管理番号 10704766-00  作成担当 : 譚洪
// 作 成 日  2012/02/06  修正内容 : 売上伝票入力／品名入力の制御についての修正
//----------------------------------------------------------------------------//
// 管理番号 10707327-00  作成担当 : 陳建明
// 作 成 日 2012/02/06   修正内容 : Redmine#27562
//			                            売上伝票入力/赤伝ボタンのヒントの修正
//----------------------------------------------------------------------------//
// 管理番号 10707327-00  作成担当 : 李占川
// 作 成 日 2012/02/09   修正内容 : Redmine#28289
//			                            アプリケーション終了処理前に、印刷中フラグの判断を追加する
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : 李小路
// 作 成 日  2012/02/09  修正内容 : 2012/03/28配信分、Redmine#28291
//			                            請求書：印字時エラーについての修正
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : zhangyong
// 作 成 日  2012/02/21  修正内容 : Redmine#27279
//			                            売上伝票入力/キーボード操作で、 エラーの発生
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : 鄧潘ハン
// 作 成 日  2012/02/28  修正内容 : Redmine#27279
//			                            棚番項目にカーソルが移動するについての修正
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : 鄧潘ハン
// 作 成 日  2012/03/12  修正内容 : Redmine#28085
//			                            商品マスタに存在しない品番を入力し、すばやくEnterを連打すると品名入力時の
//                                  キャレット位置を調査するについての修正
//----------------------------------------------------------------------------//
// 管理番号  10707327-00 作成担当 : 20056 對馬 大輔
// 作 成 日  2012/03/29  修正内容 : 文字列項目で文字列内にキャレットがある状態で
//                                  ←キーを押下すると文字列内部を移動せずに
//                                  次項目へ移動してしまう件の対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : liusy
// 作 成 日  2012/04/05  修正内容 : Redmine#29226
//			                            売上伝票入力　伝票呼び出し時に操作、入力切替ボタンが反応しない
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 福田　康夫
// 作 成 日  2012/04/10  修正内容 : 障害No.607
//                                  売上仕入同時入力時の初期フォーカスの変更
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/04/10  修正内容 : 障害No.801
//			                            入力切替時のフォーカスの設定
//			                            「仕入日」にフォーカスをセットし「仕入(F6)」を押した際、
//                                  「BLｺｰﾄﾞ」にフォーカスをセットする修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/04/11  修正内容 : 障害No.594
//			                            ユーザー設定へ区分を追加して、
//                                  商品検索後のフォーカス位置を設定できるように修正する。
//			                            「受注数」に設定した場合、商品検索後に数量を
//                                  受注数にセットされて、フォーカス位置を受注数とする。
//                                  「出荷数」に設定した場合、商品検索後に数量を
//                                  出荷数にセットして、フォーカス位置を出荷数とする。
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 朱宝軍
// 作 成 日  2012/04/10  修正内容 : Redmine#29218
//			                            売上伝票入力　行削除後、品番が７桁以上入力できなくなる
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田 靖之
// 作 成 日  2012/04/23  修正内容 : 粗利条件チェック（警告）に該当した時の挙動修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 高峰
// 作 成 日  2012/04/25 修正内容  : 2012/05/24配信分　Redmine#29612
//                                  ①．売上伝票入力 伝票区分変更時にクリアされない明細がある(障害No.7)
//                                  ②．既存の障害：明細がクリアされる場合、フータ部の金額がクリアされていない。
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 20056 對馬 大輔
// 作 成 日  2012/05/02  修正内容 : 改良：貸出仕入同時入力対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田 靖之
// 作 成 日  2012/05/10  修正内容 : 仕入(F6)が使用可能な場合のチェック追加と
//                                  カーソル制御の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田 靖之
// 作 成 日  2012/05/15  修正内容 : グリッド最終行のチェック処理を有効にした事による
//                                  グリッドインデックスエラーの修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 湯上　千加子
// 作 成 日  2012/05/15  修正内容 : 障害対応 SCM障害№126
//                                  SF連携の売上計上時、発注ボタンを有効にする対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田 靖之
// 作 成 日  2012/05/16  修正内容 : 原単価を変更後、[F10]を押下し、粗利チェックの
//                                  メッセージで[いいえ]を押下時、フッター部の原価金額・
//                                  粗利金額計が正しく集計されない件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 20056 對馬 大輔
// 作 成 日  2012/05/17  修正内容 : 20120524配信分 ｼｽﾃﾑﾃｽﾄ障害一覧No82
//                                  BLｺｰﾄﾞor品名にﾌｫｰｶｽがある状態で行削除すると
//                                  入力内容がｸﾘｱされない件の対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田 靖之
// 作 成 日  2012/05/17  修正内容 : [F10]を押下後の粗利チェックの警告メッセージで
//                                  [はい]を押すとメッセージが複数回表示される件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 20056 對馬 大輔
// 作 成 日  2012/05/17  修正内容 : 貸出計上時、仕入情報最終行でEnterするとｴﾗｰの件の対応
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 湯上　千加子
// 作 成 日  2012/05/17  修正内容 : SCM障害№162対応
//                                  伝票表示時、明細内容が表示される前にＦ１（終了）
//                                  を押下するとエラーが表示される障害の対応　
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 福田　康夫
// 作 成 日  2012/05/18  修正内容 : 障害No.87
//                                  貸出計上伝票を作成するときにEnterを押してフォーカス
//                                  遷移すると、仕入先を変えていないのに商品価格を再取
//                                  得するかの確認メッセージが表示される
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/05/21  修正内容 : 障害No.594対応不備のため元に戻す
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/05/22  修正内容 : 障害No.526
//                                  貸出計上時、入力切替(F7)が反応しない
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/05/24  修正内容 : 障害No.849
//                                  締済み伝票呼び出し時、アクセスバイオレーション
//                                  エラーが発生する件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 福田 康夫
// 作 成 日  2012/05/31  修正内容 : 障害No.282
//                                  発注選択の時に「ESC」キーを押下することで発注扱いを解除する
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 30182 立谷 亮介
// 作 成 日  2012/06/06  修正内容 : 画面高速起動対応 制御ファイル出力
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/06/06  修正内容 : 障害No.826
//                                  売掛得意先で伝票に印字される得意先名称が略称で印字される
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 20073 西 毅
// 作 成 日  2012/06/13  修正内容 : ログオフ時のエラーメッセージの修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/06/13  修正内容 : 障害No.282不具合対応
//                                  Esc押下による発注解除を行うと発注対象外だった
//                                  在庫管理部品が発注状態になり、以降は発注状態
//                                  として扱われるようになる。（1行目のみ）
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/06/13  修正内容 : 全体初期表示設定の「明細算出後在庫数表示区分」が
//                                  「行移動時反映」の場合に出荷数を変更しても在庫数に
//                                  反映されない件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/06/14  修正内容 : マウスでグリッド以外（備考など）にフォーカスセット
//                                  した場合、在庫数が反映されない件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/06/26  修正内容 : 障害No.476
//                                  得意先電子元帳にて絞込条件を車台№にして絞り込みが
//                                  「含む」、「終わる」だと抽出されるが、「一致」「始まる」では
//                                  同じ車体№を入力しても抽出されない件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/06/26  修正内容 : 障害No.632
//                                  管理番号を変更しても車台番号が反映されない件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/06/26  修正内容 : 障害No.635
//                                  売上伝票を呼び出し赤伝を作成する場合、売上日の日を変更して
//                                  エンターを押すとエラーが表示される件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/07/03  修正内容 : 障害No.630
//                                  終了（F1)押下時、エラーチェック処理される件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/07/04  修正内容 : 障害No.632
//                                  管理番号を変更しても年式が反映されない件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/07/04  修正内容 : 障害No.880
//                                  見出貼付(F6)後、Tabキーで明細にフォーカスすると
//                                  エラーが発生する件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/07/04  修正内容 : 伝票登録、または更新後に続けて返品を行うと
//                                  エラーが表示される件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/07/25  修正内容 : 障害No.466
//                                  見出貼付(F6)で売上伝票を作成すると、仮伝番号が表示されない件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/07/26  修正内容 : 障害No.1039
//                                  仕入同時入力時に仕入伝票の項目で左矢印キーを押下すると
//                                  エラーになる件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 立谷 亮介 30182 R.Tachiya
// 作 成 日  2012/07/30  修正内容 : 障害No.455
//                                  入力速度パフォーマンスチューニング
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 30182 立谷 亮介 R.Tachiya
// 作 成 日  2012/07/31  修正内容 : 障害No.995の対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/08/06  修正内容 : 障害No.1096
//                                  売上伝票入力で型名・型式が手入力の場合、
//                                  納品書に印刷されないことある障害の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/08/06  修正内容 : 障害No.1038
//                                  BLコードが表示されない障害の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/08/07  修正内容 : 車輌管理された伝票を入力後、修正呼び出しすると
//                                  車輌備考が空白になっている障害の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/08/21  修正内容 : 伝票備考が全角20桁入力できるように修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/08/21  修正内容 : 車輌情報からファンクションキーによるフォーカス移動時に
//                                  車輌情報が保存されない障害の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 30182 立谷 亮介
// 作 成 日  2012/08/22  修正内容 : 画面高速起動対応 制御ファイル出力
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/08/22  修正内容 : 仕入同時計上の際の仕入伝票番号から↓キーとENTERによる
//                                  フォーカス遷移の不具合対応
//                                  （2012/07/30 障害No.455 対応漏れ）
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 湯上　千加子
// 作 成 日  2012/09/12  修正内容 : 10/17配信 システムテスト障害№1対応
//                                  伝票表示時、明細内容が表示される前にＦ１（終了）
//                                  を押下するとエラーが表示される障害の対応　
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/09/12  修正内容 : 備考１～３のTrimRight対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/09/04  修正内容 : カラー・トリムの存在チェックを外し、マスタに
//                                  存在しないコードも入力可能にするように修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/09/10  修正内容 : 仕入伝票番号に全角が入力できるように修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/09/21  修正内容 : 前行複写、一括複写処理後、マウスにて
//                                  ファンクションキーが動作しない件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 西 毅　
// 作 成 日  2012/10/11  修正内容 : BLコード、品番でF1キーを押下するとAccess Violation
//                                  エラーになる障害の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 西 毅　
// 作 成 日  2012/11/07  修正内容 : 画面高速起動対応 ログオフ時のメッセージ制御
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 譚 洪　
// 作 成 日  2012/10/15  修正内容 : 売仕同時入力の仕入日操作の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本 利明　
// 作 成 日  2012/11/13  修正内容 : 日付制御をオプション化
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 西 毅　
// 作 成 日  2012/11/15  修正内容 : 画面高速起動対応 ログオフ時のメッセージ制御
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/10/29  修正内容 : マウスクリックにて商品値引等の行ヘッダー色が
//                                  クリアされる件の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田 靖之　
// 作 成 日  2012/11/01  修正内容 : 「伝票種別：売上」「伝票区分：掛返品」の場合、
//                                  出荷数を未設定にしフォーカスを移動すると
//                                  出荷数が使用不可になる障害の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2012/12/17  修正内容 : カレンダーフォームをカレンダー表示直前に
//                                  生成するように修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 譚 洪
// 作 成 日  2012/12/18  修正内容 : Redmine#31582の不具合を修正
//----------------------------------------------------------------------------//
// 管理番号              作成担当 : 譚 洪
// 作 成 日  2012/12/26  修正内容 : カレンダーで↑↓←→キーを押しっぱなしにする
//                                  とフォーカスが移動しない(Redmine#31582)の不具合を修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本 利明
// 修 正 日  2012/12/21  修正内容 : 山形部品オプション対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 西 毅
// 修 正 日  2013/01/18  修正内容 : 仕入先ガイドから選択すると仕入情報ウィンドウが閉じる障害の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 西 毅　
// 作 成 日  2013/01/23  修正内容 : 10/29修正分の戻し（複数行選択して削除できなくなったため）
//----------------------------------------------------------------------------//
// 管理番号  10806793-00 作成担当 : 脇田　靖之
// 作 成 日  2013/01/15  修正内容 : 見積計上時のＵＯＥ発注対応
//----------------------------------------------------------------------------//
// 管理番号  10806793-00 作成担当 : 凌小青
// 作 成 日  2013/01/14  修正内容 : 2013/03/13配信分、Redmine33793の対応
//                                 ①.手入力品番を電子元帳で複写した場合、明細貼付のボタンが有効
//                                 ②.該当チケット既存バグの対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2013/02/01  修正内容 : マウスクリックにて商品値引等の行ヘッダー色が
//                                  クリアされる件の修正
//----------------------------------------------------------------------------//
// 管理番号  10806793-00 作成担当 : 脇田　靖之
// 作 成 日  2013/02/04  修正内容 : セキュリティ設定で赤伝発行×に設定している場合、
// 返品も使用不可にするように修正
// ----------------------------------------------------------------------------//
// 管理番号  10806793-00 作成担当 : 鄧潘ハン
// 作 成 日  2013/01/24  修正内容 : Redmine#34141
//                                  一括値引功能を追加
//----------------------------------------------------------------------------//
// 管理番号  10806793-00 作成担当 : yangyi
// 作 成 日  2013/02/08  修正内容 : 2013/03/06配信分の緊急対応
//                                  Redmine#34604 マウスポインタで制御 砂時計功能を追加
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 30744 湯上 千加子　
// 作 成 日  2013/02/12  修正内容 : SCM障害№10280対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本 利明　
// 作 成 日  2013/02/14  修正内容 : 仕入先(仕入情報)の移動制御を追加
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2013/02/14  修正内容 : 伝票修正時に仕入伝票番号が設定される障害の対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2013/02/15  修正内容 : 伝票呼出ガイドより選択した際のボタン有効無効不具合修正
//----------------------------------------------------------------------------//
// 管理番号  10806793-00 作成担当 : 脇田　靖之
// 作 成 日  2013/02/18  修正内容 : セキュリティ設定で赤伝発行×に設定している場合、
// 返品も使用不可にするように修正（再対応）
// ----------------------------------------------------------------------------//
// 管理番号  10806793-00 作成担当 : 脇田　靖之
// 作 成 日  2013/02/14  修正内容 : 車台番号入力時、生産年式範囲をチェックするように修正
//                                  （エラーメッセージ修正）
//----------------------------------------------------------------------------//
// 管理番号  10806793-00 作成担当 : 脇田　靖之
// 作 成 日  2013/02/20  修正内容 : 以下の障害対応
//                                  ①セキュリティ設定で赤伝発行×に設定している場合、
//                                    返品伝票を呼出した時、伝票区分が設定されない
//                                  ②一括値引の状態から計上を選択し、編集中データを登録すると
//                                    タイトルとガイドが一括値引モードだが明細が売上で表示される
//                                  ③一括値引モード⇔売上モード変更時に、編集中データを登録した場合、
//                                    前回伝票番号が表示されない（赤伝、返品も同様）
// ----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : wangqx
// 作 成 日  2013/02/18  修正内容 : 2013/03/13配信分　 システム障害 管理№140対応
//                                  赤伝発行際自動回答区分設定の修正
// ----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 30744 湯上
// 作 成 日  2013/02/25  修正内容 : 2013/03/13配信分　 システム障害 商品管理部障害№6対応
//----------------------------------------------------------------------------//
// 管理番号  10806793-00 作成担当 : 脇田　靖之
// 作 成 日  2013/02/25  修正内容 : BLコード０対応伝票の伝票呼出、赤伝、返品時のエラー対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本 利明　
// 作 成 日  2013/02/26  修正内容 : 仕入先(仕入情報)の移動制御を修正
//                                  ①Enter押下時の移動(仕入先移動不可)で在庫行を飛ばす
//                                  ②先頭でShift+TAB・Shift+Enterを無効にする
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本 利明　
// 作 成 日  2013/02/28  修正内容 : 計上時の仕入伝票番号(最終行)Enter押下でエラーになる障害を修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本 利明　
// 作 成 日  2013/04/02  修正内容 : 山形部品オプション対応
//                                  ①新規登録時の売価は売上全体設定･伝票修正区分(売価)の参照なし
//                                  ③数量マイナス入力明細は仕入情報の入力不可
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本 利明　
// 作 成 日  2013/04/10  修正内容 : 仕入日付フォーカス制御オプション(OPT-CPM0060)がオンで、
//                                  先頭明細の仕入情報が入力不可の場合に仕入(F6)または確定(F10)
//                                  押下時に仕入日にフォーカス移動しない障害を修正
//----------------------------------------------------------------------------//
// 管理番号  10806793-00 作成担当 : 脇田　靖之
// 作 成 日  2013/03/26  修正内容 : №1022 品番入力モードで明細入力後、車種変ボタンを
//                                  押下して別の型式を入力しＥＮＴＥＲ押下で明細行に移動した場合、
//                                  元の明細行にフォーカスが移動するように修正
//----------------------------------------------------------------------------//
// 管理番号  10800003-00 作成担当 : licb
// 作 成 日  2013/03/08  修正内容 : №980 2013/05/15配信分 Redmine#34831の対応
//                                  入力モードの表示について修正
//----------------------------------------------------------------------------//
// 管理番号  10800003-00 作成担当 : zhaimm
// 作 成 日  2013/03/18  修正内容 : №858 2013/05/15配信分 Redmine#34808
//                                  更新する時、納入先名称をクリアできない
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 田建委
// 作 成 日  2013/03/19  修正内容 : №387 2013/05/15配信分 Redmine#34825
//                                  車両情報に変更が無い場合はガイドを表示させない様にする対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本 利明　
// 作 成 日  2013/02/05  修正内容 : 受注対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本 利明　
// 作 成 日  2013/04/11  修正内容 :
//  ・№11:受注明細のポップアップメニューで仕入、発注、行値引、注釈を無効にする
//  ・№12:受注伝票呼出時に明細の仕入(F6)と発注(F12)を無効にする
//  ・№13:受注入力時に売上金額の入力を不可にする
//  ・№25:伝票種別コンボボックスの「受注」を「売上」の下に変更
//  ・№26:受注時に請求先ボタンを有効にする
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之　
// 作 成 日  2013/03/14  修正内容 : 仕掛一覧№831
//                                  倉庫でShift+Enterを押すとエラーになる障害を修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本 利明　
// 作 成 日  2013/04/16  修正内容 :
//  ・№20:品番入力モードのTAB押下時で明細にフォーカス移動する場合、品番に移動させる
//  ・明細コピー貼付時、伝票種別切替時にフッタ部の金額を更新する
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2013/04/16  修正内容 : 検索切替にて品番入力→部品検索を行い、
//                                  エンジン型式からフォーカスを移動すると、
//                                  車種選択が起動される障害対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2013/04/16  修正内容 : 下キー押下時に売価率、売単価0の確認で「いいえ」を選択すると、
//                                  次の明細行の車輌情報が表示される障害対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2013/04/17  修正内容 : 伝票呼出後、品名から下キーを押下すると、
//                                  次行の車輌情報に表示が更新されない障害対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 西　毅
// 作 成 日  2013/04/18  修正内容 : 受注対応削除
//----------------------------------------------------------------------------//
// 管理番号  10901273-00 作成担当 : 30744 湯上 千加子　
// 作 成 日  2013/04/16  修正内容 : SCM障害№10515対応 車種変更ボタンの設定修正
//----------------------------------------------------------------------------//
// 管理番号  10901273-00 作成担当 : 30744 湯上 千加子　
// 作 成 日  2013/04/16  修正内容 : SCM障害№10516対応 行№右クリックメニュー表示時の使用ボタン設定修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2013/04/18  修正内容 : 以下の障害を修正
//                                  ①ＰＭ７と同様に車輛備考を備考１にセットする
//                                  ②明細行削除を行うとすると、車輌情報の表示が
//                                  　フォーカス行の情報に更新されない
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2013/04/22  修正内容 : ユーザ設定「入力後のカーソル位置」の設定による
//　　　　　　　　　　　　　　　　　クリア処理の障害対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2013/04/23  修正内容 : 入力後のカーソル位置項目の順番、値を入れ替えに伴う修正
//　　　　　　　　　　　　　　　　　ＰＭＮＳタイプ：DataValue　1⇒0
//　　　　　　　　　　　　　　　　　ＰＭ７タイプ　：DataValue　0⇒1
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2013/04/26  修正内容 : №980 2013/05/15配信分 Redmine#34831の対応前に戻す
//----------------------------------------------------------------------------//
// 管理番号  10900269-00 作成担当 : FSI今野 利裕
// 作 成 日  2013/03/21  修正内容 : SPK車台番号文字列対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本 利明
// 作 成 日  2013/04/30  修正内容 : 車輛管理が｢登録無｣の得意先で管理番号のガイドがを有効にする
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田 靖之　
// 作 成 日  2013/03/07  修正内容 : 仕入情報フォーカス障害対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 30744 湯上 千加子
// 作 成 日  2013/05/08  修正内容 : 2013/05/22配信システムテスト障害№8対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2013/05/07  修正内容 : 以下の2点を修正
//                                  ①SPK対応の不具合
//                                  ②№980関連の不具合
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 脇田　靖之
// 作 成 日  2013/05/10  修正内容 : ユーザ設定「入力後のカーソル位置」の設定による
//　　　　　　　　　　　　　　　　　「元に戻す」処理の障害対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 宮本 利明
// 作 成 日  2013/05/10  修正内容 : ①車輌管理データ(車輌未登録)呼出時のフォーカス制御を追加
//                                  ②類別・E型式・型式の入力で以下の場合に入力値を元に戻す
//                                    ・車輌検索画面で｢戻る｣選択時
//                                    ・該当車種無しで品番入力モードへの変更確認で｢いいえ｣選択時
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 30744 湯上 千加子　
// 作 成 日  2013/03/28  修正内容 : SCM障害№192対応
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 西　毅
// 作 成 日  2013/05/14  修正内容 : №1943 明細の仕入伝票番号欄でShift+Enterを押下すると
//　　　　　　　　　　　　　　　　　エラーが発生する障害の修正
//----------------------------------------------------------------------------//
// 管理番号  10801804-00 作成担当 : 西　毅
// 作 成 日  2013/05/15  修正内容 : №1895 プログラム終了時にAccess Violationエラーが
//　　　　　　　　　　　　　　　　　発生する障害の修正
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 脇田　靖之
// 作 成 日  2013/06/04  修正内容 : №1964 車台番号からVINコードまたは
//　　　　　　　　　　　　　　　　　VINコードから車台番号に切り替わる場合、
//　　　　　　　　　　　　　　　　　入力値をクリアするように修正
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 宮本 利明
// 作 成 日  2013/05/23  修正内容 : 最新情報取得時の常駐プロセス再起動
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 脇田　靖之
// 作 成 日  2013/06/03  修正内容 : 出荷数からのフォーカス移動時に在庫数チェックをするように修正
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 脇田　靖之
// 作 成 日  2013/06/05  修正内容 : №1964 外車選択の場合、VINコードが表示されない障害を修正
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 脇田　靖之
// 作 成 日  2013/06/05  修正内容 : 明細項目でShift+Enter、Shift+Tabを押下するとエラーが発生する
//　　　　　　　　　　　　　　　　　障害の修正（注釈、回答納期）
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 30744 湯上 千加子
// 作 成 日  2013/06/06  修正内容 : 2013/06/18配信 システムテスト障害№28対応
//　　　　　　　　　　　　　　　　　前回伝票番号が表示されない障害の対応
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 脇田　靖之
// 作 成 日  2013/06/18  修正内容 : 2013/06/18配信 システムテスト障害№61対応
//　　　　　　　　　　　　　　　　　伝票呼出の編集で、フォーカスをフッター部の項目に
//　　　　　　　　　　　　　　　　　移動させると、その後、明細が入力できなくなる障害対応
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 脇田　靖之
// 作 成 日  2013/06/19  修正内容 : 品質保証部障害№84対応
//　　　　　　　　　　　　　　　　　売上入力の明細移動不具合対応(№1895対応の影響)
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 脇田　靖之
// 作 成 日  2013/06/19  修正内容 : 2013/06/18配信 システムテスト障害№60対応
//　　　　　　　　　　　　　　　　　伝票呼出後に明細を追加した状態で、再度「伝票呼出」で
//　　　　　　　　　　　　　　　　　同じ伝票を呼び出すと、車輌情報が表示されない障害の対応
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 西　毅
// 作 成 日  2013/06/19  修正内容 : 伝票修正時、VINコードが表示されない障害の修正
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 脇田　靖之
// 作 成 日  2013/06/03  修正内容 : 出荷数からのフォーカス移動時に在庫数チェックをするように修正
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 脇田　靖之
// 作 成 日  2013/07/04  修正内容 : 「2013/03/14 仕掛一覧№831」対応に不備があった為、戻す
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 脇田　靖之
// 作 成 日  2013/07/16  修正内容 : マウスで出荷数を選択した場合、 「F8:倉庫切り替え」が有効にならない障害
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 脇田　靖之
// 作 成 日  2013/07/24  修正内容 : 伝票呼出で、フォーカスをフッター部に移動させると、明細が入力できない障害の修正
//                                  【2013/06/18 脇田　靖之】と同内容の修正のため、ヘッダコメントのみ
//----------------------------------------------------------------------------//
// 管理番号  10902175-00 作成担当 : 宮本　利明
// 作 成 日  2013/08/19  修正内容 : 仕掛一覧 №2003対応を除外(次回対応)
//----------------------------------------------------------------------------//
// 管理番号  10904597-00 作成担当 : 脇田　靖之
// 作 成 日  2013/11/05  修正内容 : 仕掛一覧 №2119
//                                  見積時に値引行が入力できない。入力できるようにする。
//----------------------------------------------------------------------------//
// 管理番号  10904597-00 作成担当 : 脇田　靖之
// 作 成 日  2013/11/05  修正内容 : 仕掛一覧№1492(№594)対応
//                                  「商品検索後のフォーカス位置」項目追加し、受注伝票を入力しやすくする
//----------------------------------------------------------------------------//
// 管理番号  10904597-00 作成担当 : 脇田　靖之
// 作 成 日  2013/11/18  修正内容 : システムテスト一覧№44対応（仕掛一覧 №2119）
//----------------------------------------------------------------------------//
// 管理番号  10904597-00 作成担当 : 脇田　靖之
// 作 成 日  2013/11/18  修正内容 : システムテスト一覧№40、41対応（仕掛一覧 №2119）
//----------------------------------------------------------------------------//
// 管理番号  10904597-00 作成担当 : 脇田　靖之
// 作 成 日  2013/12/11  修正内容 : 仕掛一覧№1492(№594)対応 デグレ
//                                  出荷数に設定されているがBLガイドより選択すると受注数にフォーカスが設定される障害の修正
//----------------------------------------------------------------------------//
// 管理番号  10904597-00 作成担当 : 西　毅
// 作 成 日  2013/12/11  修正内容 : 5/15　№1895 と6/19のそれにかかわる修正を戻す
//----------------------------------------------------------------------------//
// 管理番号  10970602-00 作成担当 : 譚  洪
// 作 成 日  K2014/01/22  修正内容 : 登戸個別特販区分の変更対応
//----------------------------------------------------------------------------//
// 管理番号  10904597-00 作成担当 : 脇田 靖之
// 作 成 日  2014/02/24  修正内容 : 仕掛一覧№2307対応
//                                  ユーザー設定に「伝票種別の記憶」項目追加
//----------------------------------------------------------------------------//
// 管理番号  10904597-00 作成担当 : 脇田 靖之
// 作 成 日  2014/03/05  修正内容 : システムテスト一覧№60対応（仕掛一覧 №2307）
//                                  F9（新規）ボタンでユーザー設定－「伝票種別の記憶」＝しないの時、
//　　　　　　　　　　　　　　　　　受注者及び発行者がクリアされる。
//----------------------------------------------------------------------------//
// 管理番号  10904597-00 作成担当 : 脇田 靖之
// 作 成 日  2014/03/20  修正内容 : VSS023_システムテスト一覧№1対応
//                                  F9（新規）ボタンでユーザー設定－「伝票種別の記憶」＝しないの時、
//　　　　　　　　　　　　　　　　　「現在、編集中の・・・」のアラートで「いいえ」を選択した場合、
//                                  伝票種別が保持されず「売上」に変わる。
//----------------------------------------------------------------------------//
// 管理番号  11070071-00 作成担当 : 宮本　利明
// 作 成 日  2014/05/19  修正内容 : 仕掛一覧№2218 車輌備考欄にコード入力項目を追加
//----------------------------------------------------------------------------//
// 管理番号  11070071-00 作成担当 : 宮本　利明
// 作 成 日  2014/05/22  修正内容 : システムテスト障害№79,80
//----------------------------------------------------------------------------//
// 管理番号  11070071-00 作成担当 : 宮本　利明
// 作 成 日  2014/05/28  修正内容 : 車輌備考コード追加対応
//                                  ・車輌備考コード・車輌備考の両方でガイドを有効にする
//----------------------------------------------------------------------------//
// 管理番号  11070100-00 作成担当 : 宮本　利明
// 作 成 日  2014/05/30  修正内容 : システムテスト障害対応
//   ①№85：車輌備考ガイドから選択後、ガイドボタンにフォーカス移動する
//   ②№86：車輌備考→車輌備考コードの順に移動順を設定すると、設定通りにフォーカス移動しない
//           車輌備考でEnterキー押下した場合、ガイドボタンにフォーカス移動
//           車輌備考コードを最終項目に設定してEnterキー押下した場合、登録処理にいかない
//----------------------------------------------------------------------------//
// 管理番号  11070071-00 作成担当 : 宮本　利明
// 作 成 日  2014/06/17  修正内容 : Redmine#1654対応
//----------------------------------------------------------------------------//
// 管理番号  11070100-00 作成担当 : 宮本 利明
// 作 成 日  2014/07/15  修正内容 : 仕掛一覧 №1912
//                                  システムロール設定の伝票修正(行削除)権限の判定を追加
//----------------------------------------------------------------------------//
// 管理番号  11070100-00 作成担当 : 脇田 靖之
// 作 成 日  2014/08/21  修正内容 : 仕掛一覧 №1912
//                                  システムテスト障害№12、15、16対応
//                                  システムロール設定の伝票修正(行削除)権限の判定を変更
//----------------------------------------------------------------------------//
// 管理番号  11070100-00 作成担当 : 脇田 靖之
// 作 成 日  2014/10/03  修正内容 : 仕掛一覧 №1912
//                                  システムテスト障害№19対応
//                                  SCM回答送信済み伝票修正時の行削除の判定を変更
//----------------------------------------------------------------------------//
// 管理番号  11070184-00 作成担当 : 鹿庭　一郎
// 作 成 日  2014/09/22  修正内容 : SCM仕掛一覧No.10598対応
//----------------------------------------------------------------------------//
// 管理番号  11070221-00 作成担当 : 陳艶丹
// 作 成 日  2014/10/17  修正内容 : ①Redmine#43732の対応　SF側の「部品問合せ・発注」から外車の類別番号・型式を使用して手動回答で問合せを行った場合、
//                                  　売上伝票入力・部品選択画面でVINコードが正しく表示されない。
//　　　　　　　　　　　　　　　　　②Redmine#43733の対応　売上伝票入力画面にて新規入力の状態から外車で登録した伝票を呼び出すと、
//　　　　　　　　　　　　　　　　　　VINコードが空欄の状態で表示される。
//----------------------------------------------------------------------------//
// 管理番号  11070100-00 作成担当 : 脇田 靖之
// 作 成 日  2014/11/11  修正内容 : 仕掛一覧 №1912
//                                  システムテスト障害№17対応
//                                  SCM回答送信済み伝票修正時の行削除の判定を追加
//----------------------------------------------------------------------------//
// 管理番号  11100713-00  作成担当 : 高騁
// 作 成 日  K2015/04/01  修正内容 : 森川部品個別依頼の改良作業全拠点在庫情報一覧機能追加
//----------------------------------------------------------------------------//
// 管理番号  10904597-00 作成担当 : 脇田 靖之
// 作 成 日  2014/09/01  修正内容 : 仕掛一覧№2542対応
//                                  フォーカス移動で№列が黒くなりフォーカスエラーになる障害対応
//----------------------------------------------------------------------------//
// 管理番号  10904597-00 作成担当 : 脇田 靖之
// 作 成 日  2014/12/18  修正内容 : 仕掛一覧№2542対応 商品保証課Redmine#2786
//                                  行値引時、『売上金額』にフォーカス移動し「Shiftキー」+「Enterキー／Tabキー」を押下すると
//                                  エラーが発生する障害対応
//----------------------------------------------------------------------------//
// 管理番号  11070269-00 作成担当 : 脇田 靖之
// 作 成 日  2015/04/14  修正内容 : 品質保証部Redmine#3494
//                                  SFから返品要求しPMで返品を受付時にフォーカスに不正
//                                  ① データ読み込み後  ② [PCC]ボタンを押下後
//----------------------------------------------------------------------------//
// 管理番号  11100543-00 作成担当 : 黄興貴
// 作 成 日  K2015/04/29 修正内容 : 富士ジーワイ商事㈱ 回答取込パタン追加
//----------------------------------------------------------------------------//
// 管理番号  11070100-00 作成担当 : 西 毅
// 作 成 日  2015/06/03  修正内容 : 社内仕掛一覧 №697
//                                  管理番号を変更して得意先を変更する場合、
//                                  標準価格が再計算されない障害の修正
//----------------------------------------------------------------------------//
// 管理番号  11100543-00 作成担当 : 黄興貴
// 作 成 日  K2015/06/16 修正内容 : 富士ジーワイ商事㈱ Redmine#46406 No.4の対応回答取込制御不正
//----------------------------------------------------------------------------//
// 管理番号  11101427-00 作成担当 : 紀飛
// 作 成 日  K2015/06/18 修正内容 : ㈱メイゴ　WebUOE発注回答取込対応
//----------------------------------------------------------------------------//
// 管理番号  11170129-00 作成担当 : 李侠
// 作 成 日  2015/08/26  修正内容 : LDNS Redmine#47002
//                                  伝票備考,伝票備考2,伝票備考3で３１桁文字以上を入力する場合、エラーメッセージを表示します。
//                                  先頭から30桁文字を残している、超える文字を切り捨てる。
//----------------------------------------------------------------------------//
// 管理番号  11170139-00 作成担当 : 脇田 靖之
// 作 成 日  2015/08/31  修正内容 : 社内仕掛一覧 №709
//                                  得意先変更時に価格再表示のダイアログで
//                                  「いいえ」押下でも再表示される
//----------------------------------------------------------------------------//
// 管理番号  11170170-00 作成担当 : 陳艶丹
// 作 成 日  2015/09/01  修正内容 : LDNS Redmine#47025
//                                  BLP手動回答の場合でも、受注伝票の印刷を省略できるようにする。
//----------------------------------------------------------------------------//
// 管理番号  11101427-00 作成担当 : 紀飛
// 作 成 日  K2015/09/15 修正内容 : #Redmine47186障害一覧#38 売上伝票入力で
//                                  F10キーにて明細に移動した場合、「回答取込」ボタンが非活性となる
//----------------------------------------------------------------------------//
// 管理番号  11101427-00 作成担当 : 紀飛
// 作 成 日  K2015/09/17 修正内容 : #Redmine47186障害一覧#53 「回答取込」ボタン活性状態の問題
//----------------------------------------------------------------------------//
// 管理番号  11101427-00 作成担当 : 30757 佐々木　貴英
// 作 成 日  K2015/10/05 修正内容 : 営業指摘対応 ヘッダにフォーカスがあるときも[発注回答]は有効とする
//----------------------------------------------------------------------------//
// 管理番号  11170188-00 作成担当 : 譚洪
// 作 成 日  2015/10/26  修正内容 : Redmine#47609
//                                  ①メイゴ個別オプションのファンクション制御を追加する。
//                                  ②メイゴ個別と富士ジーワイ個別機能にメソッドが重複するエラーのPG修正
//----------------------------------------------------------------------------//
// 管理番号  11170204-00 作成担当 : 宮本 利明
// 作 成 日  2015/12/09  修正内容 : リモ伝障害対応 Redmine#47670
//                                  ・リモ伝発行時は終了確認ダイアログの終了ボタンを非表示
//----------------------------------------------------------------------------//
// 管理番号  11270007-00 作成担当 : 脇田 靖之
// 作 成 日  2016/01/21  修正内容 : 仕掛一覧№2808 貸出受注対応
//                                  ①貸出伝票の修正呼出時に計上状況(未計上・一部計上・計上済)を画面表示する
//                                  ②貸出伝票の修正呼出時に数量情報(貸出数・計上数・未計上数)をバルーン表示する
//                                  ③計上済みの受注伝票を伝票削除できるようにする
//----------------------------------------------------------------------------//
// 管理番号  11275052-00 作成担当 : 脇田 靖之
// 作 成 日  2016/02/17  修正内容 : 仕掛一覧 №2812
//                                  品番検索モードで、ヘッダ部から明細部に移動するときに
//                                  [進む(F3)]を使用するとIMEが有効にならない障害対応
//----------------------------------------------------------------------------//
// 管理番号  11202099-00  作成担当 : 譚洪
// 作 成 日  K2016/11/01  修正内容 : 売上伝票入力から外部PGを起動して売単価を算出の対応
//----------------------------------------------------------------------------//
// 管理番号  11202452-00  作成担当 : 譚洪
// 作 成 日  K2016/12/30  修正内容 : 水野商工様個別変更内容をPM.NSにて実現するため、第二売価の対応行います。
//----------------------------------------------------------------------------//
// 管理番号  11470152-00  作成担当 : 譚洪
// 作 成 日  2018/09/04  修正内容 : 履歴自動表示機能追加対応
//----------------------------------------------------------------------------//
// 管理番号  11500008-00  作成担当 : 陳艶丹
// 作 成 日  K2019/07/31  修正内容 : PMKOBETSU-539 (㈱泰平商会)_UOE回答取込で売伝がフリーズする障害のの対応
//----------------------------------------------------------------------------//
// 管理番号  11570208-00  作成担当 : 譚洪
// 作 成 日  2020/02/24   修正内容 : 消費税税率機能追加対応
//----------------------------------------------------------------------------//
// 管理番号               作成担当 : 岸
// 作 成 日  2020/03/30   修正内容 : 得意先コードアクセスバイオレーションエラー対応
//----------------------------------------------------------------------------//
// 管理番号  1600946-00   作成担当 : 呉元嘯
// 作 成 日  2020/11/09   修正内容 : PMKOBETSU-4085対応
//----------------------------------------------------------------------------//
// 管理番号  11770032-00  作成担当 : 譚洪
// 作 成 日  K2021/04/19  修正内容 : PMKOBETSU-4130 BLコード検索障害対応
//----------------------------------------------------------------------------//
// 管理番号  11770032-00  作成担当 : 呉元嘯
// 作 成 日  2021/04/29  修正内容 : BLINCIDENT-2982 見積伝票を計上処理すると売価が変更されるの障害対応
//----------------------------------------------------------------------------//
// 管理番号  11770032-00  作成担当 : 呉元嘯
// 作 成 日  2021/05/20   修正内容 : BLINCIDENT-2980 小数点有で運用している場合、現在庫数の対応
//----------------------------------------------------------------------------//
// 管理番号  11770032-00  作成担当 : 田建委
// 作 成 日  K2021/07/01  修正内容 : BLINCIDENT-2527 在庫検索で部品選択すると、合計金額が表示されない障害対応
//----------------------------------------------------------------------------//
// 管理番号  11770032-00  作成担当 : 譚洪
// 作 成 日  K2021/07/21  修正内容 : BLINCIDENT-3059 見積から売上計上を行う際、入力済みの車両明細が消える障害対応
//----------------------------------------------------------------------------//
// 管理番号  11601223-00  作成担当 : 陳艶丹
// 作 成 日  K2021/07/22  修正内容 : PMKOBETSU-4148 原価0円障害対応
//----------------------------------------------------------------------------//
// 管理番号  11601223-00  作成担当 : 譚洪
// 作 成 日  2021/09/16  修正内容 : PMKOBETSU-4188 売上伝票入力算出価格0円障害対応
//----------------------------------------------------------------------------//
// 管理番号  11870080-00  作成担当 : 陳艶丹
// 作 成 日  2022/04/26  修正内容 : PMKOBETSU-4208 電子帳簿対応
//----------------------------------------------------------------------------//


unit MAHNB01001UA;

interface

uses
  Windows, Messages, SysUtils, Variants, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Hedit, ComCtrls, ToolWin, ImgList, Menus, HFocus, ExtCtrls,
  HComBox, HDedit, Grids, BaseGrid, AdvGrid, HNsGrid, DBClient, DB ,HADOACS,
  Buttons, Imm, HInitProc, MAHNB01012C, MAHNB01013C, HDATE,
  MAHNB01019C, HDllCall, Classes,
  ReadInitDataThread, ReadInitDataSecondThread, ReadInitDataThirdThread, ReadInitDataFourthThread,
  ReadInitDataFifthThread, ReadInitDataSixthThread, ReadInitDataSeventhThread,
  ReadInitDataEighthThread, ReadInitDataNinthThread, ReadInitDataTenthThread,
  HMemPos, AppEvnts, StrUtils, CalendarGuid;

type
  TForm4 = class(TForm)
    il1: TImageList;
    ArrowKeyControl1: THArrowKeyControl;
    pnl_Header: TPanel;
    pnl2: TPanel;
    SectionCode: THEdit;
    SectionName: THEdit;
    SectionCodeBtn: TButton;
    pnl_SubSection: TPanel;
    SubSectionName: THEdit;
    SubSectionCodeBtn: TButton;
    pnl4: TPanel;
    CustomerCodeBtn: TButton;
    CustomerName: THEdit;
    pnl_SalesInputCode: TPanel;
    SalesInputCode: THEdit;
    SalesInputCodeBtn: TButton;
    SalesInputName: THEdit;
    CustomerClaimConfirmationBtn: TButton;
    pnl5: TPanel;
    SalesEmployeeCd: THEdit;
    SalesEmployeeCdBtn: TButton;
    SalesEmployeeNm: THEdit;
    pnl_FrontEmployee: TPanel;
    FrontEmployeeCd: THEdit;
    FrontEmployeeCdBtn: TButton;
    FrontEmployeeNm: THEdit;
    searchMode: TPanel;
    pnl_AcptAnOdrStatusTitle: TPanel;
    pnl_InputModeTitle: TPanel;
    SubSectionCode: THNedit;
    CustomerCode: THNedit;
    pnl8: TPanel;
    SalesSlipNum: THEdit;
    SalesSlipNumBtn: TButton;
    pnl_BeforeSalesSlipNum: TPanel;
    pnl9: TPanel;
    AcptAnOdrStatusDisplayComBo: THComboBox;
    pnl10: TPanel;
    SalesSlipDisplayComBo: THComboBox;
    pnl11: TPanel;
    pnl_SalesDate: TPanel;
    pnl_CarInfo: TPanel;
    carMngNo: TPanel;
    CarMngCode: THEdit;
    CarMngCodeBtn: TButton;
    pnl_ModelDesignationNo: TPanel;
    ModelDesignationNo: THNedit;
    ShortNm: TLabel;
    CategoryNo: THNedit;
    Label1: TLabel;
    EngineModelNm: THEdit;
    pnl24: TPanel;
    Label2: TLabel;
    MakerCode: THNedit;
    ModelCode: THNedit;
    ModelFullName: THEdit;
    pnl25: TPanel;
    ColorNo: THEdit;
    pnl26: TPanel;
    Label7: TLabel;
    TrimNo: THEdit;
    Label8: TLabel;
    ModelSubCode: THNedit;
    ModelFullNameBtn: TButton;
    FirstEntryDate: THDateEdit;
    FirstEntryDateRange: TPanel;
    Label3: TLabel;
    ProduceFrameNo: THEdit;
    ProduceFrameNoRange: TPanel;
    pnl23: TPanel;
    FullModel: THEdit;
    FullModelBtn: TButton;
    uTabControl_Footer: TPageControl;
    ts1: TTabSheet;
    Panel16: TPanel;
    GroupBox4: TGroupBox;
    GroupBox5: TGroupBox;
    GroupBox6: TGroupBox;
    ts2: TTabSheet;
    Panel17: TPanel;
    Panel18: TPanel;
    Label5: TLabel;
    ExpandableGroupBox: TButton;
    Panel15: TPanel;
    pnl_DisableInfo: TPanel;
    pm1: TPopupMenu;
    rowInsert: TMenuItem;
    rowDelete: TMenuItem;
    pnl41: TPanel;
    SlipNoteCodeBtn: TButton;
    SlipNoteCode: THNedit;
    SlipNote: THEdit;
    pnl_AddresseeCode: TPanel;
    AddresseeCodeBtn: TButton;
    AddresseeCode: THNedit;
    AddresseeName: THEdit;
    pnl_SlipNote2: TPanel;
    SlipNote2CodeBtn: TButton;
    SlipNote2Code: THNedit;
    SlipNote2: THEdit;
    pnl_SlipNote3: TPanel;
    SlipNote3CodeBtn: TButton;
    SlipNote3Code: THNedit;
    SlipNote3: THEdit;
    pnl_DeliveredGoodsDiv: TPanel;
    DeliveredGoodsDivComBo: THComboBox;
    pnl46: TPanel;
    RetGoodsReasonBtn: TButton;
    RetGoodsReason: THEdit;
    pnl47: TPanel;
    TotalDay: TPanel;
    Label4: TLabel;
    CollectMoney: TPanel;
    Label6: TLabel;
    pnl_PartySaleSlipNum: TPanel;
    PartySaleSlipNum: THEdit;
    Panel30: TPanel;
    salesPriceTotal: TPanel;
    Panel32: TPanel;
    salesPriceConsTaxTotalTitle: TPanel;
    salesPriceConsTaxTotal: TPanel;
    totalPrice: TPanel;
    totalGrossProfitTitle: TPanel;
    totalGrossProfit: TPanel;
    detailGrossProfitRateTitle: TPanel;
    totalGrossProfitRateTitle: TPanel;
    totalCostTitle: TPanel;
    totalCost: TPanel;
    detailGrossProfitRate: TPanel;
    totalGrossProfitRate: TPanel;
    Panel44: TPanel;
    GroupBox1: TGroupBox;
    Panel45: TPanel;
    Panel46: TPanel;
    SlipMemo1: THEdit;
    SlipMemo2: THEdit;
    SlipMemo3: THEdit;
    InsideMemo1: THEdit;
    InsideMemo2: THEdit;
    InsideMemo3: THEdit;
    AddInfoTabSheet: TTabSheet;
    Panel47: TPanel;
    GroupBox3: TGroupBox;
    Panel54: TPanel;
    Panel57: TPanel;
    GroupBox7: TGroupBox;
    Panel58: TPanel;
    addSalesPriceTotal: TPanel;
    Panel60: TPanel;
    addSalesPriceConsTaxTotalTitle: TPanel;
    addSalesPriceConsTaxTotal: TPanel;
    addTotalPrice: TPanel;
    addTotalGrossProfitTitle: TPanel;
    addTotalGrossProfit: TPanel;
    addDetailGrossProfitRateTitle: TPanel;
    addTotalGrossProfitRateTitle: TPanel;
    addTotalCostTitle: TPanel;
    addTotalCost: TPanel;
    addDetailGrossProfitRate: TPanel;
    addTotalGrossProfitRate: TPanel;
    CarSlipNote: THEdit;
    SlipNoteGuideBtn: TButton;
    Label9: TLabel;
    StatusBar: TPanel;
    StatusPanel3: TPanel;
    Timer1: TTimer;
    HNsGrid1: THNsGrid;
    HNsGrid2: THNsGrid;
    HNsGrid4: THNsGrid;
    HNsGrid3: THNsGrid;
    HNsGrid5: THNsGrid;
    pnl1: TPanel;
    btnInputChange: TBitBtn;
    btnInputStockInfo: TBitBtn;
    btnInputOrderInfo: TBitBtn;
    btnLineDiscount: TBitBtn;
    btnGoodsDiscount: TBitBtn;
    btnAnnotation: TBitBtn;
    btnChangeCarInfo: TBitBtn;
    btnStockSearch: TBitBtn;
    btnChangeWarehouse: TBitBtn;
    btnTBO: TBitBtn;
    btnCopyStockBefLine: TBitBtn;
    btnCopyStockAllLine: TBitBtn;
    rowCut: TMenuItem;
    rowCopy: TMenuItem;
    rowPaste: TMenuItem;
    F71: TMenuItem;
    W1: TMenuItem;
    G1: TMenuItem;
    M1: TMenuItem;
    L1: TMenuItem;
    N1: TMenuItem;
    RetKeyControl1: THRetKeyControl;
    HDllCALL1: THDllCall;
    grp1: TGroupBox;
    edtAcceptAnOrderNo: THNedit;
    Mileage: THNedit;
    AcptAnOdrStatusComBo: THComboBox;
    SalesGoodsCdComBo: THComboBox;
    SearchSlipDate: THDateEdit;
    BitBtn_Action: TBitBtn;
    pm2: TPopupMenu;
    CopyPop: TMenuItem;
    PastePop: TMenuItem;
    InSertPop: TMenuItem;
    DeletePop: TMenuItem;
    CutPop: TMenuItem;
    AddresseeConfirmationBtn: TButton;
    SalesDate: THDateEdit;
    Panel1: TPanel;
    tlb1: TToolBar;
    closeButton: TToolButton;
    newButton: TToolButton;
    saveButton: TToolButton;
    deleteSlipButton: TToolButton;
    returnButton: TToolButton;
    forwardButton: TToolButton;
    searchCarChangeButton: TToolButton;
    guideButton: TToolButton;
    shipmentAddUpButton: TToolButton;
    acceptAnOrderAddUpButton: TToolButton;
    estimateAddUpButton: TToolButton;
    updateButton: TToolButton;
    ReadSlipButton: TToolButton;
    SlipHeaderCopyButton: TToolButton;
    Panel2: TPanel;
    Panel49: TPanel;
    Image2: TImage;
    HEdit24: THEdit;
    Panel48: TPanel;
    Image1: TImage;
    HEdit23: THEdit;
    Timer2: TTimer;
    DorpdownList: TToolButton;
    pm3: TPopupMenu;
    retryButton: TMenuItem;
    redSlipButton: TMenuItem;
    returnSlipButton: TMenuItem;
    copySlipButton: TMenuItem;
    SetupButton: TMenuItem;
    ReNewalbtn: TMenuItem;
    StatusPaneMessage: TPanel;
    ReferenceListButton: TMenuItem;
    HisSearchButton: TMenuItem;// ADD　2018/09/04 譚洪　履歴自動表示の対応
    //----- ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応------->>>>>
    toolGetTaxRateButton: TToolButton;
    GetTaxRateButton: TMenuItem;
    //----- ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応-------<<<<<
    Timer_SCMRead: TTimer;
    btnSCM: TBitBtn;
    panel_InquiryNumber: TPanel;
    HEdit_InquiryNumber: THEdit;
    Panel4: TPanel;
    HComboBox_AnswerDiv: THComboBox;
    MailButton: TMenuItem;
    btnCopyToRC: TBitBtn;
    checkBox_MakeQR: TCheckBox;
    toolRetryButton: TToolButton;
    toolRedSlipButton: TToolButton;
    toolReturnSlipButton: TToolButton;
    toolCopySlipButton: TToolButton;
    toolSetupButton: TToolButton;
    toolReNewalbtn: TToolButton;
    toolReferenceListButton: TToolButton;
    toolHisSearchButton: TToolButton;// ADD　2018/09/04 譚洪　履歴自動表示の対応
    toolMailButton: TToolButton;
    aplctnvnts1: TApplicationEvents;
    Timer3: TTimer;
    Timer4: TTimer;
    Timer5: TTimer;  // ADD 2012/02/09 李占川 Redmine#28289
    toolMenu_UpdateButton: TMenuItem;
    toolMenu_SlipHeaderCopyButton: TMenuItem;
    toolMenu_estimateAddUpButton: TMenuItem;
    toolMenu_acceptAnOrderAddUpButton: TMenuItem;
    toolMenu_shipmentAddUpButton: TMenuItem;
    toolMenu_ReadSlipButton: TMenuItem;
    toolMenu_guideButton: TMenuItem;
    toolMenu_searchCarChangeButton: TMenuItem;
    toolMenu_forwardButton: TMenuItem;
    toolMenu_returnButton: TMenuItem;
    toolMenu_deleteSlipButton: TMenuItem;
    toolMenu_saveButton: TMenuItem;
    toolMenu_newButton: TMenuItem;
    toolMenu_closeButton: TMenuItem;
    HEdit_PartySalesSlipNum: THEdit;
    Label_PartySalesSlipNum: TLabel;
    dateUpdateBottun: TToolButton;      // ADD 2011/08/02
    DateUpdatebtn: TMenuItem;           // ADD 2011/08/02
	// 2011/08/18 XUJS ADD STA ------>>>>>>
    kakaku_Panel: TPanel;
    pkakaku_l: TPanel;
    pkakaku_v: TPanel;
    // 2011/08/18 XUJS ADD END ------<<<<<<
    detailCopyButton: TToolButton;            // ADD 連番729 2011/08/18
    toolMenu_detailCopyBtn: TMenuItem;        // ADD 連番729 2011/08/18
    // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
    discountAllLineBottun: TToolButton;
    toolMenu_discountAllLineBtn: TMenuItem;
    CarNoteCode: THNedit;
    // ------  ADD K2015/04/01 高騁 森川部品個別依頼------->>>>>
    allSecInfoButton: TToolButton;
    toolMenu_allSecInfoBtn: TMenuItem;
    // ------  ADD K2015/04/01 高騁 森川部品個別依頼-------<<<<<
    // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
    // ---- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ---- >>>>>
    UOEDataGet: TToolButton;
    toolMenu_UOEDataGet: TMenuItem;
    // ---- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ---- <<<<<

    btnSalesUnPrcCalc: TBitBtn; // ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ
    Panel5: TPanel; // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応
    // ---ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応 --->>>>>
    EBooksButton: TMenuItem;
    toolEBooksButton: TToolButton; // ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応
    // ---ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応 ---<<<<<

    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure New1DrawItem(Sender:   TObject;   ACanvas:   TCanvas;
      ARect:   TRect;   Selected:   Boolean);
    procedure ToolButtonClick(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure ArrowKeyControl1ChangeFocus(PrevCtrl: TWinControl;
      var NextCtrl: TWinControl; VkCode: Word);
    // --- UPD 2012/05/31 No.282---------->>>>>
    //procedure XFuncKeyButton1FuncKey(PrevCtrl: TWinControl;
    //  var NextCtrl: TWinControl; UsrCode: Word);
    //procedure xFuncKey   (PrevCtrl: TWinControl; var NextCtrl: TWinControl; UsrCode: Word);
    procedure XFuncKeyButton1FuncKey(Sender: TObject; PrevCtrl: TWinControl;
      var NextCtrl: TWinControl; UsrCode: Word);
    procedure xFuncKey   (Sender: TObject; PrevCtrl: TWinControl; var NextCtrl: TWinControl; UsrCode: Word);
    // --- UPD 2012/05/31 No.282----------<<<<<

    procedure  PageControl1DrawTab(Control:   TCustomTabControl;
      TabIndex:   Integer;   const   Rect:   TRect;   Active:   Boolean);
    procedure ExpandableGroupBoxClick(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure HNsGrid1CellChanging(Sender: TObject; OldRow, OldCol, NewRow,
      NewCol: Integer; var Allow: Boolean);
    procedure HNsGrid1CellValidate(Sender: TObject; ACol, ARow: Integer;
      var Value: string; var Valid: Boolean);
    procedure HNsGrid1GetDisplText(Sender: TObject; ACol, ARow: Integer;
      var Value: string);
    procedure HNsGrid1GetEditorType(Sender: TObject; ACol, ARow: Integer;
      var AEditor: TEditorType);
    procedure HNsGrid1MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure rowInsertClick(Sender: TObject);
    procedure HNsGrid1GetEditText(Sender: TObject; ACol, ARow: Integer;
      var Value: string);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure HNsGrid3GetEditorType(Sender: TObject; ACol, ARow: Integer;
      var AEditor: TEditorType);
    procedure HNsGrid3CanEditCell(Sender: TObject; ARow, ACol: Integer;
      var CanEdit: Boolean);
    procedure HNsGrid4GetEditorType(Sender: TObject; ACol, ARow: Integer;
      var AEditor: TEditorType);
    procedure HNsGrid4CanEditCell(Sender: TObject; ARow, ACol: Integer;
      var CanEdit: Boolean);
    procedure HNsGrid2CanEditCell(Sender: TObject; ARow, ACol: Integer;
      var CanEdit: Boolean);
    procedure HNsGrid2GetEditorType(Sender: TObject; ACol, ARow: Integer;
      var AEditor: TEditorType);
    procedure HNsGrid2CheckBoxClick(Sender: TObject; ACol, ARow: Integer;
      State: Boolean);
    procedure HNsGrid4CheckBoxClick(Sender: TObject; ACol, ARow: Integer;
      State: Boolean);
    procedure FullModelBtnClick(Sender: TObject);
    procedure SectionCodeBtnClick(Sender: TObject);
    procedure SubSectionCodeBtnClick(Sender: TObject);
    procedure CustomerCodeBtnClick(Sender: TObject);
    procedure CarMngCodeBtnClick(Sender: TObject);
    procedure EmployeeCdBtnClick(Sender: TObject);
    procedure SalesSlipNumBtnClick(Sender: TObject);
    procedure ModelFullNameBtnClick(Sender: TObject);
    procedure SlipNoteCodeBtnClick(Sender: TObject);
    procedure RetGoodsReasonBtnClick(Sender: TObject);
    procedure BitBtn_InputChange(Sender: TObject);
    procedure BitBtn_InputOrderInfo(Sender: TObject);
    // --- ADD 2012/05/31 No.282---------->>>>>
    procedure BitBtn_InputOrderInfoEsc(Sender: TObject);
    // --- ADD 2012/05/31 No.282----------<<<<<
    procedure BitBtn_InputStockInfo(Sender: TObject);
    procedure BitBtn_Annotation(Sender: TObject);
    procedure BitBtn_GoodsDiscount(Sender: TObject);
    procedure BitBtn_LineDiscount(Sender: TObject);
    procedure BitBtn_ChangeWarehouse(Sender: TObject);
    procedure SalesSlipDisplayComBoChange(Sender: TObject);
//    procedure ReadSlipButtonClick(Sender: TObject);
    procedure HNsGrid2ClickCell(Sender: TObject; ARow, ACol: Integer);
    procedure HNsGrid4ClickCell(Sender: TObject; ARow, ACol: Integer);
    procedure BitBtn_StockSearch(Sender: TObject);
    procedure BitBtn_TBO(Sender: TObject);
    procedure shipmentAddUpButtonlick(Sender: TObject);
    procedure BitBtn_ChangeCarInfo(Sender: TObject);
    procedure acceptAnOrderAddUpButtonClick(Sender: TObject);
    procedure estimateAddUpButtonClick(Sender: TObject);
    procedure copySlipButtonClick(Sender: TObject);
    procedure redSlipButtonClick(Sender: TObject);
    procedure SlipHeaderCopyButtonClick(Sender: TObject);
    procedure DetailCopyButtonClick(Sender: TObject);    //ADD 連番729 2011/08/18
    procedure DiscountAllLineButtonClick(Sender: TObject);// ADD 2013/01/24 鄧潘ハン REDMINE#34141
    procedure UOEDataGetClick(Sender: TObject);// ADD  黄興貴 K2015/04/29 回答取込パタン追加
    procedure returnSlipButtonClick(Sender: TObject);
    procedure AcptAnOdrStatusDisplayComBoChange(Sender: TObject);
    procedure BitBtn_CopyStockBefLine(Sender: TObject);
    procedure BitBtn_CopyStockAllLine(Sender: TObject);
    procedure BitBtn_SalesUnPrcCalc(Sender: TObject);  // ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ
    procedure xSetSalesUnPrcBtnEnabled();  // ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ
    procedure SalesUnPrcCalc(Sender: TObject);   // ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ
    procedure SetupButtonClick(Sender: TObject);
    procedure updateButtonClick(Sender: TObject);
    procedure CustomerClaimConfirmationBtnClick(Sender: TObject);
    procedure AddresseeConfirmationBtnClick(Sender: TObject);
    procedure ModelDesignationNoChange(Sender: TObject);
    procedure guideButtonClick(Sender: TObject);
    procedure HNsGrid1RowChanging(Sender: TObject; OldRow, NewRow: Integer;
      var Allow: Boolean);
    procedure HNsGrid1KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure HNsGrid1GetAlignment(Sender: TObject; ARow, ACol: Integer;
      var HAlign: TAlignment; var VAlign: TVAlignment);
    procedure ClosePopClick(Sender: TObject);
    procedure SlipNoteGuideBtnClick(Sender: TObject);
    procedure ReNewalbtnClick(Sender: TObject);
    procedure FirstEntryDateEnter(Sender: TObject);
    procedure BitBtn_ActionClick(Sender: TObject);
    procedure MileageEnter(Sender: TObject);
    procedure CustomerCodeEnter(Sender: TObject);
    procedure xSettingAddUpButtonToolEnabled(nextControl: TWinControl);
    procedure HNsGrid3ComboChange(Sender: TObject; ACol, ARow,
      AItemIndex: Integer; ASelection: string);
    procedure HNsGrid5KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure HNsGrid2SelectionChanged(Sender: TObject; ALeft, ATop, ARight,
      ABottom: Integer);
    procedure HNsGrid4SelectionChanged(Sender: TObject; ALeft, ATop, ARight,
      ABottom: Integer);
    procedure HNsGrid3SelectionChanged(Sender: TObject; ALeft, ATop, ARight,
      ABottom: Integer);
    procedure HNsGrid2RowChanging(Sender: TObject; OldRow, NewRow: Integer;
      var Allow: Boolean);
    procedure HNsGrid2KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure HNsGrid3ClickCell(Sender: TObject; ARow, ACol: Integer);
    procedure Timer2Timer(Sender: TObject);
    procedure HNsGrid1Exit(Sender: TObject);
    procedure HNsGrid1SelectCell(Sender: TObject; ACol, ARow: Integer;
      var CanSelect: Boolean);
    procedure FormCanResize(Sender: TObject; var NewWidth, NewHeight: Integer;
      var Resize: Boolean);
    procedure HNsGrid1KeyPress(Sender: TObject; var Key: Char);
    procedure HNsGrid1Enter(Sender: TObject);
    procedure HNsGrid1GetImeMode(Sender: TObject; ACol, ARow: Integer;
      var AImeMode: TImeMode);
    procedure HNsGrid1OnGridHint(Sender: TObject; ARow, ACol: Integer;
      var hintstr: string);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
//    procedure ApplicationEvents1Activate(Sender: TObject);
    procedure HNsGrid1CanEditCell(Sender: TObject; ARow, ACol: Integer;
      var CanEdit: Boolean);
//>>>2010/05/30
    procedure ReferenceListButtonClick(Sender: TObject);
    procedure HisSearchButtonClick(Sender: TObject);// ADD　2018/09/04 譚洪　履歴自動表示の対応
    procedure GetTaxRateButtonClick(Sender: TObject);// ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
//    procedure ReplyTransactionButtonClick(Sender: TObject);   // 2011/01/31 Del
    procedure btnSCMClick(Sender: TObject);
    procedure Timer_SCMReadTimer(Sender: TObject);
//<<<2010/05/30
    // --- ADD m.suzuki 2010/06/12 ---------->>>>>
    procedure MailButtonClick(Sender: TObject);
    // --- ADD m.suzuki 2010/06/12 ----------<<<<<
    procedure btnCopyToRCClick(Sender: TObject);
    procedure SlipNote2Exit(Sender: TObject);
    procedure SlipNote3Exit(Sender: TObject);
    procedure SlipNoteExit(Sender: TObject);
    procedure AddresseeNameExit(Sender: TObject);
    procedure AcptAnOdrStatusDisplayComBoEnter(Sender: TObject);
    procedure SalesSlipDisplayComBoEnter(Sender: TObject);
    procedure DeliveredGoodsDivComBoEnter(Sender: TObject);

    // --- ADD 2010/07/15 ---------->>>>>
    procedure FreeLib();
    procedure aplctnvnts1Message(var Msg: tagMSG; var Handled: Boolean);
    procedure CustomerCodeChange(Sender: TObject);
    procedure CustomerCodeExit(Sender: TObject);
    procedure Timer3Timer(Sender: TObject);
    procedure Timer4Timer(Sender: TObject);
    procedure HNsGrid1MouseMove(Sender: TObject; Shift: TShiftState; X,
      Y: Integer);
    procedure HNsGrid1MouseUp(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer); // --- ADD 2010/09/15
    // --- ADD 2010/07/15 ----------<<<<<
    procedure Timer5Timer(Sender: TObject); // ADD 2012/02/09 李占川 Redmine#28289
    procedure SectionCodeChange(Sender: TObject); // ADD 2011/05/30
    procedure CarMngCodeEnter(Sender: TObject); // ADD 2011/08/04
    procedure HNsGrid1MouseWheel(Sender: TObject; Shift: TShiftState;
      MousePos: TPoint; var Handled: Boolean); // ADD K2019/07/31 陳艶丹　PMKOBETSU-539の対応
    procedure FormMouseWheel(Sender: TObject; Shift: TShiftState;
      WheelDelta: Integer; MousePos: TPoint; var Handled: Boolean); // ADD K2019/07/31 陳艶丹　PMKOBETSU-539の対応
     //del liusy 2011/12/21 #26911
      // --- ADD liusy 2011/12/09 ---------->>>>>
    //procedure FullModelKeyUp(Sender: TObject; var Key: Word;
    //  Shift: TShiftState);
    //procedure FullModelClick(Sender: TObject);

    // --- ADD liusy 2011/12/09 ----------<<<<<
    //del liusy 2011/12/21 #26911
  private
    procedure xArrowKeyMain(PrevCtrl: TWinControl; var NextCtrl: TWinControl;
      VkCode: Word);
    procedure xOnExit(PrevCtrl: TWinControl);
    procedure xOnEnter   (PrevCtrl: TWinControl; var NextCtrl: TWinControl);
    procedure xSettingVisible();// 画面項目Visible設定
    //procedure SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
    procedure SettingToolBarButtonEnabled(NextCtrl: TWinControl); // ADD 2011/12/21 tianjw Redmine#27290
    procedure xInitialSettingGridCol(); // Grid初期設定
    procedure xInitialSettingGridColWidths();
    procedure xInitialSettingGridCol2(); // Grid2初期設定
    procedure xInitialSettingGridCol3(); // Grid3初期設定
    procedure xInitialSettingGridCol4(); // Grid4初期設定
    procedure xInitialSettingGridCol5(); // Grid5初期設定
    function xColNameToIndex(Name: string): Integer;
    function xRowNameToIndex(Name: string): Integer;
    function xCreateCD: Boolean;
    procedure xGyoNoSet(iRowNo: Integer); // 明細行番号付番
    procedure xDeatilClearDisplay(); // Grid明細クリア
    procedure xDeatilClearTable(); // Grid明細クリア
    procedure xSetNextFocus(var NextCtrl: TWinControl);
    procedure xInsert(); // 挿入
//>>>2010/05/30
//    procedure xClear(isConfirm : Boolean; keepAcptAnOdrStatus : Boolean; keepDate : Boolean;
//keepFooterInfo : Boolean; keepCustomer : Boolean; keepSalesDate : Boolean); // クリア  // UPD 2010/05/21
    procedure xClear(isConfirm : Boolean; keepAcptAnOdrStatus : Boolean; keepDate : Boolean;
keepFooterInfo : Boolean; keepCustomer : Boolean; keepSalesDate : Boolean; keepDetailRowCount :Boolean; customerCode : Integer); // クリア  // UPD 2010/05/21
//<<<2010/05/30
    function CanStrToFloat(str : string) : Boolean;     //ADD 2011/07/20

    // --- ADD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ---------->>>>>
    function xRowDelChk(iChkRow: Integer): Boolean;
    function xRowDelChkFromTo(iFromRow, iToRow: Integer): Boolean;
    // --- ADD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ----------<<<<<
    // --- ADD 2016/01/21 Wakita ---------->>>>>
    procedure xAddUpInfoDsp(iSalesRowNo: Integer);
    procedure AppShowHint(var HintStr: string; var CanShow: Boolean; var HintInfo: THintInfo);
    // --- ADD 2016/01/21 Wakita ----------<<<<<

 procedure xDelete(); // 削除
    procedure xCopy(); // コピー
    procedure xNew(); // 新規
    procedure xtoolbarSet(); // ADD 2010/07/01
// 2011/01/31 >>>
//    procedure xtoolbarSet8(widthTemp : Integer);
//    procedure xtoolbarSet7(widthTemp : Integer);
//    procedure xtoolbarSet6(widthTemp : Integer);
//    procedure xtoolbarSet5(widthTemp : Integer);
//    procedure xtoolbarSet4(widthTemp : Integer);
//    procedure xtoolbarSet3(widthTemp : Integer);
//    procedure xtoolbarSet2(widthTemp : Integer);
//    procedure xtoolbarSet1(widthTemp : Integer);
// 2011/01/31 <<<

// --- ADD 2010/05/31 ---------->>>>>
    // --- UPD 2012/05/31 No.282---------->>>>>
    //procedure xdoEsc(); // ESC
    procedure xdoEsc(Sender: TObject); // ESC
    // --- UPD 2012/05/31 No.282----------<<<<<
// --- ADD 2010/05/31 ----------<<<<<
    procedure xRetry(); // 元に戻す
    procedure xWrite(tempStr:string);
    procedure xCut();
    procedure SetDisplayHeaderFooterInfo(salesSlip: TSalesSlip); // コピー
    procedure xPaste(); // 貼り付け
    function xRowChk(iRow: Integer): Boolean; // 明細入力チェック処理
    function xTabFooterContainsFocus(): Boolean;
    function xHeaderContainsFocus(): Boolean;
    function Minutes(Time:TDateTime): Integer;
    function MinuteDiff(beginning:TDateTime; ending:TDateTime): Integer;
    // テーブル入力不可制御
    procedure xClearSalesDetailRow(salesRowNo: Integer); //売上明細行オブジェクトのクリア
    function xFindBySalesSlipNumSalesRowNo(salesSlipNum: string; salesRowNo:Integer) :Integer;
    { Public 宣言 }
    procedure xChangeSearchMode(clearCarFlag: Integer);//部品検索切替処理
    procedure xChangeSearchModeReflect(); //部品検索切替反映処理
    procedure xSettingGrid; //明細グリッド設定処理
    procedure xMoveNextAllowEditCell;
    procedure xSetDetailRowEdit(col:Integer ;rowIndex:Integer);
    procedure xSetDetailRowNoEdit(col:Integer ;rowIndex:Integer);
    procedure xSettingGridRow(rowIndex: Integer); //明細グリッド・行単位でのセル設定
    procedure xSalesDetailRowInitialSetting(defaultRowCount: Integer);
    procedure xSettingGridColVisible(statusType:Integer ; value: Integer);
    function xCarSearch(carSearchCondition : TCarSearchCondition; salesRowNo : Integer; seachType : Integer):Integer;
    //procedure xPriceCheckProc(OldCol : Integer; OldRow : Integer; iRow : Integer; salesRowNo : Integer; value : string);      // ADD 2010/09/14 // DEL 2011/12/01 YANGMJ REDMINE#8344
    //procedure xPriceCheckProc(OldCol : Integer; OldRow : Integer; iRow : Integer; salesRowNo : Integer; value : string; var flag : Boolean); // ADD 2011/12/01 YANGMJ REDMINE#8344 // DEL 2012/01/18 YANGMJ ソースマージ
    procedure xPriceCheckProc(OldCol : Integer; OldRow : Integer; iRow : Integer; salesRowNo : Integer; value : string);  // ADD 2012/01/18 YANGMJ ソースマージ
    procedure xSetDisplayCarInfo(salesRowNo : Integer; searchType : Integer);
    procedure xSetDisplayCarInfo2(carInfo: TCarInfo; searchType : Integer);
    procedure xSetDisplayCarInfoEnable();
    procedure xSetDeatilRowDisplay(salesRowNo :Integer);
    procedure xSetShipmentDisplay(salesRowNo :Integer);     // ADD 2010/09/10
    // --- DEL 2012/05/21 ---------->>>>>
    //procedure xSetAcceptAnOrderDisplay(salesRowNo :Integer);     // ADD 2012/04/11 No.594
    // --- DEL 2012/05/21 ----------<<<<<
    procedure xClearDisplayCarInfo();
    procedure xClearAddCarInfo();
    procedure xSettingAddInfoVisible();
    procedure xSettingChangeCarInfoVisible();
    function xGetActiveRowSalesRowNo() : Integer;
    procedure xDeleteEmptyRow();
    procedure xSettingSalesDetailRowInputRowCount(inputCnt : Integer);
    procedure xInitialRow();
    function xGetControlByName(name : string): TWinControl;
    procedure xSetDetailRowFormC(salesDetailArray:TSalesSlipInputCustomArrayA2; salesRowNo:Integer);
    procedure xSetShipmentFormC(salesDetailArray:TSalesSlipInputCustomArrayA2; salesRowNo:Integer);      // ADD 2010/09/10
    // --- UPD 2012/05/21 ---------->>>>>
    //procedure xSetAcceptAnOrderFormC(salesDetailArray:TSalesSlipInputCustomArrayA2; salesRowNo:Integer);      // ADD 2012/04/11 No.594
    // --- UPD 2012/05/21 ----------<<<<<
    procedure xSetDisplayCustomerInfoInit();
    procedure xSetDisplayCustomerInfo(customerInfo : TcustomerInfo);
    procedure xSetDisplayTotalPriceInfo(salesSlip: TSalesSlip);
    procedure xGetDisplayName();
    procedure xGetTaxRateName(salesSlip : TSalesSlip); // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
    procedure xGetRate1(salesTotal : Int64; sign : Integer; totalCost: Integer);
    procedure xGetRate2(salesTotal : Int64; totalCost: Integer);
    procedure xSetDisplayDetailInfo(salesRowNo: Integer);
    procedure SetControlFocus();
    procedure InitialSetFocusTick();
    procedure xSettingGuideButtonToolEnabled(nextCtrl: TWinControl);
    procedure xSetNoteCharCnt();
    procedure xSetDisplay();
    // --- UPD 2012/05/10 ---------->>>>>
    //procedure xSetNextControl();
    function xSetNextControl() : Boolean;
    // --- UPD 2012/05/10 ----------<<<<<
    procedure xSetHeaderControl();
    function xSetFootControl() : Boolean;
    procedure xdoSave(printSlipFlag: Boolean);
    procedure xSettingFocus(ColumnName: WideString);
    procedure xSettingFocus2(ColumnName: WideString);
    procedure xSettingFocus3(ColumnName: WideString);           // --- ADD 2010/08/13
    procedure xSettingFocus4(ColumnName: WideString);           // --- ADD 2010/08/26
    function xChangeAcptAnOdrStatus(var salesSlip: TSalesSlip;isCache: Boolean ) : Boolean;
    procedure xSettingToolBarButtonCaption();
    procedure xdoSaveAfter(saveStatus : Integer);

    function  xStringZeroAdd(str : string; count: integer):string;
    procedure xIsAllowEditAcceptAnOrderCntColum(rowIndex: Integer; colIndex:Integer; mode:Integer); //受注数
    procedure xShipmentCntColumIsAllowEdit(rowIndex: Integer; colIndex:Integer; mode:Integer); //出荷数
    procedure xIsAllowEditListPriceColum(rowIndex: Integer; colIndex:Integer; mode:Integer); //定価
    procedure xIsAllowEditSalesUnitCostColum(rowIndex: Integer; colIndex:Integer; mode:Integer); //原単価／原価率
    procedure xIsAllowEditSalesUnPrcColum(rowIndex: Integer; colIndex:Integer; mode:Integer);//売単価／売価率
    procedure xIsAllowEditDeliGdsCmpltDueDateColum(rowIndex: Integer; colIndex:Integer; acceptAnOrderCntDisplay:Double; mode:Integer);//納品完了予定日
    procedure xIsAllowEditPartySlipNumDtlColumn(rowIndex: Integer; colIndex:Integer; mode:Integer);//得意先注番
    procedure xIsAllowEditSlipMemoExistColumn(rowIndex: Integer; colIndex:Integer; salesRowNo:Integer);//メモ入力
    procedure xIsAllowEditUOE(rowIndex: Integer; colIndex:Integer; mode:Integer);//発注情報入力不可
    procedure xIsAllowEditSuppli(rowIndex: Integer; colIndex:Integer; mode:Integer); //仕入情報入力不可
    procedure xIsAllowEditTextColor(rowIndex: Integer; colIndex:Integer; mode:Integer);//無効要素のテキストカラー設定
    procedure xIsAllowEditTextColorChild(rowIndex: Integer; colIndex:Integer; mode:Integer);//行値引、注釈以外の無効要素のテキストカラー設定
    function xGridColumnDisCheck(rowIndex: Integer; colIndex:Integer; mode:Integer):Boolean;
    function xGridColIndexToName(rowIndex: Integer; colIndex:Integer):string;
    procedure xGridColumnDisSet(rowIndex: Integer; colIndex:Integer; mode:Integer);
    procedure xTransparentFontColorSet(rowIndex: Integer; colIndex:Integer; mode:Integer);
    procedure xAllowEditorFontColorSet(rowIndex: Integer; colIndex:Integer; fontColor:Integer);
    function xTransparentFontColorCheck(rowIndex: Integer; colIndex:Integer):Boolean;
    procedure xGridDetailTransparentColorCellSet();
    function xAcceptAnOrderCntDisplayCheck(rowIndex: Integer; colIndex:Integer):Boolean;
    procedure xSettingGridHeader();
    procedure xActiveCellButtonEnabledControl(colKey: string ; salesRowNo:Integer);
    function xSettingGridRowFromInputChange():Integer;//各InputTypeにより、明細グリッド・行単位でのセル設定
    // -- Add 2012/07/30 30182 R.Tachiya -->>>>>
    function xSettingGridRowFromInputChangeBySalesRowNo(salesRowNo: Integer):Integer;//各InputTypeにより、明細グリッド・行単位でのセル設定、指定行のみ
    function xSettingGridRowFromInputChangeProc(rowIndex: Integer):Integer;//各InputTypeにより、明細グリッド・行単位でのセル設定、共通処理
    // -- Add 2012/07/30 30182 R.Tachiya --<<<<<
    procedure xAfterCarMngNoGuideReturn(paraStatus:Integer; selectedInfo:TCarMangInputExtraInfo; inputflag:Integer);
    procedure xForwardNextFocus(control : TWinControl; vk_code: Integer );
    procedure xDeleteSalesSlip();
    procedure xSetConstArray();
    procedure xSetBitbtnConstArray();     // ADD 2010/08/13
    procedure xLoadToolManagerCustomizeInfo();
    procedure xSaveToolManagerCustomizeInfo();
    procedure xLoadBitbtnCustomizeInfo();    // ADD 2010/08/13
    procedure xGridSetting();
    procedure xSetItemtSalesGoodsCd(acptAnOdrStatus : Integer; formatFlg: Boolean);
    procedure xSetItemtSalesSlipCd(var salesSlip : TSalesSlip; acptAnOdrStatus : Integer; formatFlg: Boolean);
    // --- ADD m.suzuki 2010/10/29 ---------->>>>>
    procedure xSetItemtSalesSlipCdKeepSlipCd(var salesSlip : TSalesSlip; acptAnOdrStatus : Integer; formatFlg: Boolean);
    // --- ADD m.suzuki 2010/10/29 ----------<<<<<
    procedure xSalesPriceChanged();
    procedure xSlipMemoInfoFormSetting(salesRowNo : Integer);
    procedure xMemoInputSetting(input : Boolean);
    procedure xCarInfoFormSetting(salesRowNo : Integer);
    procedure xSalesSlipDetailInput_DetailChanged(salesRowNo : Integer);
    procedure xToolButtonSettingDetail();
    function xGetNextControl(prevCtrl: TWinControl; mode : Integer) : TWinControl;
    function xGetNextControlForFooter(prevCtrl: TWinControl; mode : Integer) : TWinControl;
    procedure xEnableControl(AControl : TWinControl; Enable : Boolean);
    procedure xSetControlAlignment(AControl : TWinControl; Alignment : Integer);
    procedure xCarInfoFormSettingForColor(enabledValue: Boolean);
    function xCheckDateForFirstEntryDate() : Boolean;
    function xCheckDateForSalesDate(salesDate: Integer) : Boolean;
    function xCheckDateForStockDate(var dateTime:TDateTime; stockDate: string) : Boolean;   // ADD 2012/10/15
    procedure xInitControlAlignment();
    // --- UPD 2010/06/26 ---------->>>>>
    //function xGetNextCtrlAfterCarSearch(): TWinControl;
    function xGetNextCtrlAfterCarSearch(prevCtrl: TWinControl): TWinControl;
    // --- UPD 2010/06/26 ----------<<<<<
    function xGetNextCtrlNotCarSearch(): TWinControl; // ADD 2013/05/10 T.Miyamoto
    function xReturnKeyDown(): Boolean ;
    function xMoveReturnCell(activeCellCheck : Boolean): Boolean;
    //function xMoveUpDownCell(activeCellCheck : Boolean): Boolean; // DEL 2010/07/01
    function xMoveUpDownCell(activeCellCheck : Boolean; Sender : TObject): Boolean;// ADD 2010/07/01
    function xMoveUpDownCellAdJust(activeCellCheck : Boolean; actionType: Integer): Boolean;
    function xMoveRowCellAdJust(afterLogicalRow : Integer; actionType : Integer; keyType :Integer): Boolean;
    procedure xSetGridSelRowColor(grid : THNsGrid; rowIndex : Integer);
    procedure xSetGridSelColColor(grid : THNsGrid; colIndex : Integer);
    procedure xSettingCarSpecGridCol(carInfo: TCarInfo);
    procedure xSetItemsDictionary();
    procedure xStatusBarMessageSetting(barMessage : string);
    procedure xSetMoneyVisible(visible: Boolean);
    procedure xSetDetailGridForModel(rowIndex: Integer; colCnt: Integer);
// 2011/01/31 Del >>>
//    procedure xSetReplyTransactionButtonEnable(); //ADD 2010/07/08
// 2011/01/31 Del <<<
    procedure xGotoCell(aCol: Integer; aLine: Integer; aRow: Integer); //ADD 2010/06/26
    // --- ADD m.suzuki 2010/06/12 ---------->>>>>
    procedure xGetStartParameter( var param: WideString );
    procedure xProcessStart( sCommand : WideString );
    procedure xMakeQRCall;
    // --- ADD m.suzuki 2010/06/12 ----------<<<<<

    // --- ADD 2010/07/14 ---------->>>>>
    procedure xInitialRow_AddUp(salesDetailArray: TSalesSlipInputCustomArrayA2);
    // --- ADD 2010/07/14 ----------<<<<<

    procedure xHNsGrid1CellValidate_Mouse(Sender: TObject; ACol, ARow: Integer;
      var Value: string; var Valid: Boolean);   // ADD 2010/07/20
    procedure xSettingKeepCarInfo(); // ADD 2012/08/21 Wakita　
    procedure xSleepUpToFormReView();// -- Add 2012/08/22 30182 R.Tachiya --
    // --- ADD 2012/11/15 T.Nishi ---------->>>>>
    procedure xCloseProc();
    // --- ADD 2012/11/15 T.Nishi ----------<<<<<
    // --- ADD 2013/05/23 T.Miyamoto ---------->>>>>
    procedure xSleepUpToReboot();
    // --- ADD 2013/05/23 T.Miyamoto ----------<<<<<

    //-----ADD 2013/01/24 鄧潘ハン REDMINE#34141 -->>>>>
    procedure xDiscountGridInitial();
    procedure xNotDiscountInitalSet();
    //-----ADD 2013/01/24 鄧潘ハン REDMINE#34141 --<<<<<

    procedure MonthCalendarSelect(Sender: TObject);  // ADD 2012/12/18

    procedure xAllSecStockInfoProc(rowNo: Integer; isPressed: Boolean; isClose: Boolean); // ADD K2015/04/01 高騁 森川部品個別依頼  全拠点在庫情報一覧パラメータ取得

  end;

const
  ctROWSTATUS_NORMAL = 0; //行ステータス（通常行）
  ctROWSTATUS_COPY = 1; //行ステータス（コピー行）
  ctROWSTATUS_CUT = 2; //行ステータス（カット行）
  ctBLCodeSearch = 1; //BLコード検索
  ctGoodsNoSearch = 2; //品番検索
  ctFullModelSearch = 1; // 型式検索
  ctModelPlateSearch = 2; // モデルプレート検索
  ctEDITSTATUS_AllOK = 0; //行編集ステータス（全項目編集可能）
  ctEDITSTATUS_ShipmentCountOnly = 1;//行編集ステータス（数量のみ編集可能）
  ctEDITSTATUS_AllDisable = 2;//行編集ステータス（全項目無効）
  ctEDITSTATUS_AllReadOnly = 3; //行編集ステータス（全項目参照のみ）
  ctEDITSTATUS_RowDiscount = 6; //行編集ステータス（行値引き／売上金額のみ編集可能）
  ctEDITSTATUS_Annotation = 7; //行編集ステータス（注釈／商品名称のみ編集可能）
  ctEDITSTATUS_GoodsDiscount = 8;//行編集ステータス（商品値引き）
  ctEDITSTATUS_AddUpNew = 4;//行編集ステータス（計上新規／数量、単価のみ編集可能）
  ctEDITSTATUS_AddUpEdit = 5;//行編集ステータス（計上編集／単価のみ編集可能）
  ctEDITSTATUS_ExistSlip = 9;//行編集ステータス（通常修正）

  ctINPUTMODE_SalesSlip_Normal = 0; //入力モード（通常）
  ctINPUTMODE_SalesSlip_Return = 1; //入力モード（返品））
  ctINPUTMODE_SalesSlip_Red = 2; //入力モード（赤伝）
  ctINPUTMODE_SalesSlip_ShipmentAddUp = 3; //入力モード（出荷計上）
  ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp = 4; //入力モード（受注計上）
  ctINPUTMODE_SalesSlip_EstimateAddUp = 5; // 入力モード（見積計上）
  ctINPUTMODE_SalesSlip_AddUp = 6; //入力モード（締め済み）
  ctINPUTMODE_SalesSlip_ReadOnly = 7;//入力モード（読み取り専用）

  //受注ステータス
  acptAnOdrStatusState_Estimate = 10;// 見積
  acptAnOdrStatusState_UnitPriceEstimate = 15;// 単価見積
  acptAnOdrStatusState_SearchEstimate = 16;// 検索見積
  acptAnOdrStatusState_AcceptAnOrder = 20;// 受注
  acptAnOdrStatusState_Sales = 30;// 売上
  acptAnOdrStatusState_Shipment = 40;// 貸出

  //>>>2010/08/09
  ctSearchPartsModeState_NonSearch = 0;     // 検索無し
  ctSearchPartsModeState_BLCodeSearch = 1;  // BLコード検索
  ctSearchPartsModeState_GoodsNoSearch = 2; // 品番検索
  //<<<2010/08/09

  //売上伝票区分（明細）
  salesSlipCdDtl_Sales = 0; //売上
  salesSlipCdDtl_RetGoods = 1; //返品
  salesSlipCdDtl_Discount = 2; //値引
  salesSlipCdDtl_Annotation = 3; //注釈
  salesSlipCdDtl_Subtotal = 4; //小計
  salesSlipCdDtl_Work = 5; //作業

  actionType_Up = 1;
  actionType_Down = 2;
  keyType_enter = 1;
  keyType_other = 2;

  //商品区分
  salesGoodsCd_Goods = 0; //商品
  salesGoodsCd_NonGoods = 1; //商品外
  salesGoodsCd_ConsTaxAdjust = 2; //消費税調整
  salesGoodsCd_BalanceAdjust = 3; //残高調整
  salesGoodsCd_AccRecConsTaxAdjust = 4; //売掛用消費税調整
  salesGoodsCd_AccRecBalanceAdjust = 5; //売掛用残高調整

  //売上伝票区分
  salesSlipCd_Sales = 0;// 売上
  salesSlipCd_RetGoods = 1;// 返品

  //売上伝票番号初期値
  ctDefaultSalesSlipNum = '000000000';

  ctStatusType_InputChange = 5;

  ctSearchCarMode_FullModel = '型式';
  ctSearchCarMode_ModelPlate = 'ﾓﾃﾞﾙﾌﾟﾚｰﾄ';

  ctMoneyFormat = '#,###,##0';
  ctPercentFormat ='#,###,##0.00%';

  ctSearchMode_BLSearch = '部品検索'; // BLコード検索
  ctSearchMode_GoodsNoSearch = '品番入力'; // 品番検索

  ctAppliName = '売上伝票入力';
  MESSAGE_GoodsCode = '前方一致検索：最後に*を入力[例:A*]';

  // --- ADD m.suzuki 2010/06/12 ---------->>>>>
  // メーラーEXEファイル名
  ctAssemblyID_Mail = 'PMKHN07500U.EXE';
  // --- ADD m.suzuki 2010/06/12 ----------<<<<<

  login_EnterpriseCode = '0123130012020600';// ADD K2011/12/09

  // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
  ctToolButtonNm_DiscountAllLine = '一括値引(E)';
  ctToolButtonNm_Tuujyou = '売上(E)';
  // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<

  ctCol_RowNo = 0;
  ctCol_BLGoodsCode = 1;
  ctCol_GoodsNo = 1;
  ctCol_GoodsName = 2;
  ctCol_GoodsKindCode = 3;
  ctCol_GoodsMakerCd = 4;
  ctCol_SupplierCd = 5;
  ctCol_AcceptAnOrderCntDisplay = 6;
  ctCol_ShipmentCntDisplay = 6;
  ctCol_SalesCode = 7;
  ctCol_ListPriceDisplay = 7;
  ctCol_OpenPriceDivDisplay = 8;
  ctCol_CostRate = 9;
  ctCol_SalesRate = 9;
  ctCol_SalesUnitCost = 10;
  ctCol_SalesUnPrcDisplay = 10;
  ctCol_SalesMoneyDisplay = 11;
  ctCol_DtlNote = 12;
  ctCol_PartySlipNumDtl = 12;
  ctCol_DeliGdsCmpltDueDate = 13;
  ctCol_CmpltSalesRowNo = 14;
  ctCol_BoCode = 15;
  ctCol_SupplierSnmForOrder = 15;
  ctCol_SupplierCdForOrder = 16;
  ctCol_AcceptAnOrderCntForOrder = 17;
  ctCol_DeliveredGoodsDivNm = 18;
  ctCol_UOEResvdSectionNm = 18;
  ctCol_FollowDeliGoodsDivNm = 19;
  ctCol_WarehouseCode = 20;
  ctCol_SupplierStockDisplay = 20;
  ctCol_WarehouseShelfNo = 21;
  ctCol_PartySalesSlipNum = 22;
  ctCol_SupplierCdForStock = 22;
  ctCol_StockDate = 23;
  ctCol_RecycleDivNm = 24;
  ctCol_GoodsMngNo = 24;
  ctCol_SlipMemoExist = 25;
  ctCol_AddUpInfo = 25; // ADD 2016/01/21 Wakita


  ctRow_RowNo = 0;
  ctRow_BLGoodsCode = 0;
  ctRow_GoodsNo = 1;
  ctRow_GoodsName = 0;
  ctRow_GoodsKindCode = 1;
  ctRow_GoodsMakerCd = 1;
  ctRow_SupplierCd = 1;
  ctRow_AcceptAnOrderCntDisplay = 0;
  ctRow_ShipmentCntDisplay = 1;
  ctRow_SalesCode = 0;
  ctRow_ListPriceDisplay = 1;
  ctRow_OpenPriceDivDisplay = 1;
  ctRow_CostRate = 0;
  ctRow_SalesRate = 1;
  ctRow_SalesUnitCost = 0;
  ctRow_SalesUnPrcDisplay = 1;
  ctRow_SalesMoneyDisplay = 1;
  ctRow_DtlNote = 0;
  ctRow_PartySlipNumDtl = 1;
  ctRow_DeliGdsCmpltDueDate = 1;
  ctRow_CmpltSalesRowNo = 0;
  ctRow_BoCode = 0;
  ctRow_SupplierSnmForOrder = 1;
  ctRow_SupplierCdForOrder = 0;
  ctRow_AcceptAnOrderCntForOrder = 0;
  ctRow_DeliveredGoodsDivNm = 0;
  ctRow_UOEResvdSectionNm = 1;
  ctRow_FollowDeliGoodsDivNm = 0;
  ctRow_WarehouseCode = 0;
  ctRow_SupplierStockDisplay = 1;
  ctRow_WarehouseShelfNo = 0;
  ctRow_PartySalesSlipNum = 1;
  ctRow_SupplierCdForStock = 0;
  ctRow_StockDate = 0;
  ctRow_RecycleDivNm = 0;
  ctRow_GoodsMngNo = 1;
  ctRow_SlipMemoExist = 0;
  ctRow_AddUpInfo = 1; // ADD 2016/01/21 Wakita
  //<<<2011/01/27

// 2011/01/31 >>>
  ctToolButtonIndex_Close = 0;
  ctToolButtonIndex_New = 1;
  ctToolButtonIndex_Save = 2;
  ctToolButtonIndex_DeleteSlip = 3;
  ctToolButtonIndex_Return = 4;
  ctToolButtonIndex_Forward = 5;
  ctToolButtonIndex_SearchCarChange = 6;
  ctToolButtonIndex_Guide = 7;
  ctToolButtonIndex_ReadSlip = 8;
  ctToolButtonIndex_ShipmentAddUp = 9;
  ctToolButtonIndex_AcceptAnOrderAddUp = 10;
  ctToolButtonIndex_EstimateAddUp = 11;
  ctToolButtonIndex_SlipHeaderCopy = 12;
  ctToolButtonIndex_Update = 13;
  ctToolButtonIndex_Retry = 14;
  ctToolButtonIndex_RedSlip = 15;
  ctToolButtonIndex_ReturnSlip = 16;
  ctToolButtonIndex_CopySlip = 17;
  ctToolButtonIndex_Setup = 18;
  ctToolButtonIndex_ReNewal = 19;
  ctToolButtonIndex_ReferenceList = 20;
  ctToolButtonIndex_Mail = 21;
  ctToolButtonIndex_DateUpdate = 22;    // ADD 2011/08/02
  ctToolButtonIndex_DetailCopy = 23;    // ADD 連番729 2011/08/18
  ctToolButtonIndex_DiscountAllLine = 24;  // ADD 2013/01/24 鄧潘ハン REDMINE#34141
  ctToolButtonIndex_AllSecInfo = 25; // ADD K2015/04/01 高騁 森川部品個別依頼
  ctToolButtonIndex_UOEDataGet = 26; // ADD  黄興貴 K2015/04/29 回答取込パタン追加
  ctToolButtonIndex_HisSearch = 27; // ADD　2018/09/04 譚洪　履歴自動表示の対応
//  ctToolButtonCount = 22;             // DEL 2011/08/02
  //ctToolButtonCount = 24;               // ADD 2011/08/02 // DEL 2013/01/24 鄧潘ハン REDMINE#34141
   // ctToolButtonCount = 25; // ADD 2013/01/24 鄧潘ハン REDMINE#34141 // DEL K2015/04/01 高騁 森川部品個別依頼
  //ctToolButtonCount = 26; // ADD K2015/04/01 高騁 森川部品個別依頼 // DEL  黄興貴 K2015/04/29 回答取込パタン追加
  //ctToolButtonCount = 27; // ADD  黄興貴 K2015/04/29 回答取込パタン追加// DEL　2018/09/04 譚洪　履歴自動表示の対応
  //ctToolButtonCount = 28;// ADD　2018/09/04 譚洪　履歴自動表示の対応// DEL 譚洪 2020/02/24 PMKOBETSU-2912の対応
  ctToolButtonIndex_GetTaxRate = 28; // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応
  //ctToolButtonCount = 29;     // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応 // DEL 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応
  // --- ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応 ---->>>>>
  ctToolButtonIndex_EBooks= 29;
  ctToolButtonCount = 30;
  // --- ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応 ----<<<<<

  ctOnlineKindDiv_None        = 0;
  ctOnlineKindDiv_Scm         = 10;
  ctOnlineKindDiv_TspNS       = 20;
  ctOnlineKindDiv_TspInline   = 30;
  ctOnlineKindDiv_TspMail     = 40;
// 2011/01/31 <<<

//>>>2011/04/04
  ctFixRowColor = $001595EE;
  ctFixRowColorTo = $0094E6FB;
//<<<2011/04/04

  // --- ADD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ---------->>>>>
  //システムロール設定オペレーションコード
  ctOperationCode_RowDelete       = 21; //伝票修正(行削除)
  // --- ADD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ----------<<<<<

  // --- ADD 2016/01/21 Wakita ---------->>>>>
  //グリッドチェックモード(GridJoinCheck関数パラメータ)
  ctGridCheckMode_AddUpInfo = 21; //計上情報

  //計上状況表示パターン
  ctAddUpInfo_Def     = 0; //空白
  ctAddUpInfo_Non     = 1; //未計上
  ctAddUpInfo_Part    = 2; //一部計上
  ctAddUpInfo_Already = 3; //計上済
  //計上状況背景色(TColor値)
  ctAddUpColor_Def     = $00DEDFDE; //空白
  ctAddUpColor_Non     = $00C1B6FF; //未計上　･･･clWebLightPink
  ctAddUpColor_Part    = $00C1B6FF; //一部計上･･･clWebLightPink
  ctAddUpColor_Already = $00DEDFDE; //計上済
  // --- ADD 2016/01/21 Wakita ----------<<<<<

var
  Form4: TForm4;
  OldCtrl: TWinControl;  //現在の前のコントロール
  i_InputType   : Integer;  // 0:通常入力 1:切替入力 2:仕入 3: 発注
  i_InputType_bk : Integer; //ADD 2012/05/10
  cd : TClientDataSet;
  RCHNB01003UADM: TRCHNB01003UADM;
  i_CloseFlg  : Integer;
  i_searchPartsMode : Integer; // 1:BLコード検索 2:品番検索
  i_searchCarMode : Integer; // 1:型式検索 2:モデルプレート検索
  i_itemtSalesSlipCdDisp : Integer;
  i_itemtSalesSlipCdFlg : Integer;
  i_ctTabKeyAddInfo : Integer;
  i_settingAddInfoVisibleFlg : Integer;
  i_RowMaxCount : Integer;
  s_ChangeData: String;
  i_ChangeFlg: Integer;
  searchCarDiv, gridReturnFlg, focusFlg : Boolean;

  i_CustomerNameFlg: Integer;    // 得意先名称フラグ
  s_TotalDayDf: WideString;         // 締日
  s_CollectMoneyDf: WideString;         // 集金月日

  inputModeTitle, defaultSalesSlipNumDf: WideString;
  operationCodeFlg :Integer;

//  secInfoSet: TSecInfoSet;
  salesSlip_section: TSalesSlip;
  salesSlip_subSection: TSalesSlip;
  salesSlip_employee: TSalesSlip;
  salesSlip_note: TSalesSlip;
  salesSlip_goodsReason: TSalesSlip;
  salesSlip_disp: TSalesSlip;
  salesSlip: TSalesSlip;
//  subSection: TSubSection;
//  employee:   TEmployee;
  modelNameU: TModelNameU;
//  paramInfo:  TCarMngGuideParamInfo;
  selectedInfo:  TCarMangInputExtraInfo;
  searchResult:  TSalesSlipSearchResult;
//  noteGuidBd: TNoteGuidBd;
  userGdHd:   TUserGdHd;
  userGdBd:   TUserGdBd;
  customerSearchRet: TCustomerSearchRet;

//  makerList:  TDELPHI0001CustomArrayA1;

  posTerminalMg: TPosTerminalMg;
  acptAnOdrTtlSt: TAcptAnOdrTtlSt;// -- Add 2012/07/31 30182 R.Tachiya --
  salesTtlSt: TSalesTtlSt;
  allDefSet: TAllDefSet;
  companyInf: TCompanyInf;

  loginEnterpriseCode, loginSectionCode: string;
  ctTabKeyAddInfo, settingAddInfoVisibleFlg: Integer;

  cEqpDefDspInfoListTemp : TSalesSlipInputCustomArrayB4;
  i_beforeCarSearchBuffer : BeforeCarSearchBuffer;
  i_StringCarRelationGuid : string;

  guideCodeArray :  TWideStringArray;
  guideNameArray :  TWideStringArray;


  F: Text;
  FileName: string = 'c:\test.txt';
  FocusCellReserve :TNsGridCoord;

  _costDisplay : Boolean;
  searchPartsModeProperty : Integer;
  b_OpenFlg, b_CloseFlg: Boolean; // FormShowフラグ  True:Showする  False:しない
  b_MstCheckFlg: Boolean;

  toolManagerKeys : array[0..1] of string;
// 2011/01/31 >>>
//  // --- UPD m.suzuki 2010/06/12 ---------->>>>>
//  //toolbarKeys : array[0..1, 0..19] of string;
//  //tToolButtons : array[0..1, 0..19] of TObject;
//  toolbarKeys : array[0..1, 0..22] of string;
//  tToolButtons : array[0..1, 0..22] of TObject;
//  // --- UPD m.suzuki 2010/06/12 ----------<<<<<
//  tToolButtonsVisible : array[0..22] of Boolean;

  toolbarKeys : array[0..1, 0..ctToolButtonCount-1] of string;
  tToolButtons : array[0..1, 0..ctToolButtonCount-1] of TObject;
  tToolButtonsVisible : array[0..ctToolButtonCount-1] of Boolean;
// 2011/01/31 <<<
  toolManagerButtons : array[0..1] of TToolBar;
  bitButtons : array[0..1] of TBitBtn;            // ADD 2010/08/13

  AcptAnOdrCodeArr: array of Integer;
  AcptAnOdrNameArr: array of string;

  focusPositionValue: Integer;
  detail_oldRow,detail_oldCol: Integer;
  action_Key : Word;
  settingGridFlg , toolbarFlg: Boolean;
  comBoChangeflag : boolean;

  categoryNoDisp : Integer;
  modelDesignationNoDisp: Integer;
  carMngCodeDisp, fullModelDisp, engineModelNmDisp: WideString;

  setColorFlag : Boolean;
  newRowNo : Integer;
  setSaveFlag  : Integer = -1;
  newWidthTemp : Integer;
  isCanResize : Boolean;
  isEnter : Boolean;// ADD 2010/06/26
  vk_Up_Check : Boolean;// ADD 2010/07/01
  vk_Down_Check : Boolean;// ADD 2010/07/01
  vk_Left_Check : Boolean;// ADD 2010/07/01
  vk_Right_Check : Boolean;// ADD 2010/07/01
  copyLogicRow : Integer;
  Underlineflag: Boolean;
  //normalInputFlg: Boolean; // ADD 2010/07/01// DEL 2012/02/21 zhangyong Redmine#27279
  normalInputFlg, tempShiftTabFlg: Boolean; // ADD 2012/02/21 zhangyong Redmine#27279

  b_revisionVisible, b_deleteVisible, b_redSlipVisible: Boolean;

  b_slipDiscountVisible: Boolean;// ADD 2013/01/24 鄧潘ハン REDMINE#34141

  i_Opt_CarMng, i_Opt_StockingPayment : Integer;
  gi_Opt_Scm : Integer; // 2010/06/30

  hNsGrid1EnterShow : Boolean;
  checkDetailAction : Boolean;
  moveUpDownCellCheck : Boolean;// ADD 2010/06/02

  // --- ADD m.suzuki 2010/06/16 ---------->>>>>
  bOnlineFlag : Boolean; // オンラインフラグ (True:オンライン / False:オフライン)
  // --- ADD m.suzuki 2010/06/16 ----------<<<<<
  // --- ADD liusy 2011/12/09 ---------->>>>>
  imeFlag : Boolean;
  // --- ADD liusy 2011/12/09 ----------<<<<<
  bClearResultFlg : Boolean;

//  bCheckTypeOne : Boolean;   // DEL 2010/07/12

  PrevCtrlForhNsGrid: Boolean;  //現在の前のコントロール // ADD 2010/07/01

  optCarMng, optFreeSearch, optPcc, optRCLink, optUoe, optStockingPayment, optScm, optQRMail : Integer;
  optDateCtrl : Integer; // ADD T.Miyamoto 2012/11/13
  optNoBuTo : Integer; // ADD 譚洪 K2014/01/22
  // --- ADD 2012/12/21 T.Miyamoto ------------------------------>>>>>
  // 山形部品オプション対応
  optStockEntCtrl : Integer; // 売仕入同時入力制御オプション    (OPT-CPM0050)
  optStockDateCtrl: Integer; // 仕入日付フォーカス制御オプション(OPT-CPM0060)
  optSalesCostCtrl: Integer; // 原価修正制御オプション          (OPT-CPM0070)
  // --- ADD 2012/12/21 T.Miyamoto ------------------------------<<<<<

  checkFlg, checkTwiceFlg : Boolean;
  grossProfitRateFlg : Boolean;
  oldRowFlg, oldColFlg, newRowFlg, newColFlg : Integer;
  oldRowOneFlg, oldColOneFlg, newRowOneFlg, newColOneFlg : Integer;
  customerInfo : TCustomerInfo;

  isSlipNoteBtnClick : Boolean; // ADD 2010/07/12
  isSaveFlg : Boolean; // ADD 2014/06/17 T.Miyamoto

  iCol_Mouse,iRow_Mouse, iLogicalRow_Mouse :Integer; // ADD 2010/07/16
  iFlag_Mouse : Boolean; // ADD 2010/07/16
  customerCodeExitFlg : Boolean;  // ADD 2010/07/19
  dateTimeOne:TDateTime;
  dateTimeTwo:TDateTime;
  dateTimeThree:TDateTime;
  dateTimeFouth:TDateTime;
  dateTimeFivth:TDateTime;      // ADD 2010/09/10
  dateTimeSixth:TDateTime;      // ADD 2010/09/10
  dateTimeSeventh:TDateTime;    // ADD 2010/11/25
  dateTimeEigth:TDateTime;      // ADD 2010/11/25
//  dateTimeNine:TDateTime;      //ADD 2011/12/01 YANGMJ REDMINE#8344  // DEL 2012/01/18 YANGMJ ソースマージ
//  checkSaleCd:Boolean;         //ADD 2011/12/01 YANGMJ REDMINE#8344  // DEL 2012/01/18 YANGMJ ソースマージ
//  checkPrice:Boolean;         //ADD 2011/12/01 YANGMJ REDMINE#8344   // DEL 2012/01/18 YANGMJ ソースマージ
  checkCodeFlg:Boolean;
  logicalRowInt :Integer;           // --- ADD 2010/08/13
  fullModeFlg, smallPointFlg, inputStockFlg, inputOrderFlg, tblBitDivflg, moveFocusFlg : Boolean;  // ADD 2010/08/13
  diffHitInt :Integer;  // ADD 2010/09/10
  f3_focusFlg, f3_enableFlg :Boolean;    // ADD 2010/09/14
  _isDoubleFlag :Boolean;    // ADD 2012/01/17 Redmine27300
  grid1_focusFlg:Boolean;  // ADD 2010/10/08
  focusIntoGridCheck, firstEntryDateFlg : Boolean;   // ADD 2010/10/15

  iFlg : Integer; // 2010/10/27
  svRow, svCol, svLine : Integer; // 2010/10/27

  prevCtrlBak: TWinControl;  // 2010/11/25

  _isErrorFlag: Boolean;  // 2011/02/11

  startKeyName, endKeyNameList: WideString;   // ADD 2010/04/29 FOR #20933

  enterOne, enterTwo:TDateTime;   // ADD 2012/01/11 Redmine#27388
  enterFlg:Boolean;               // ADD 2012/01/11 Redmine#27388


  //>>>2011/01/13
//  beforeSalesMoney: Double; // 2010/12/16
//  beforeSalesUnPrc: Double; // 2010/12/16
//  beforeSalesRate: Double; // 2010/12/16
//  beforeCostRate: Double; // 2010/12/16
//  beforeSalesUnitCost: Double; // 2010/12/16
//  beforeListPrice: Double; // 2010/12/16
//  beforeShipmentCnt: Double; // 2010/12/16
//  beforeAcceptAnOrderCnt: Double; // 2010/12/16
  //<<<2011/01/13

  gridStartRow : integer; // 2011/04/04
  gMouseDownFlg : Boolean; // 2011/04/04
  isScmReadCheck : Boolean; // 2011/07/23
  isShipmentCntError : Boolean; // 2011/07/27
  rowChangedFlg : Boolean; //ADD 2011/07/20
  strCarMngCode : String;//ADD 2011/08/04
  IsGoodsNoFromXMLExist : Boolean;  // ADD 連番729 2011/08/18
  beSlipNote, beSlipNote2, beSlipNote3  : string; // 2011/08/30
  preSalesDate : Int64; //ADD K2011/09/01
  noSaveFlg : Boolean; //ADD K2011/09/20
  CarMngGuideFlag : Boolean; // ADD 2012/06/26 No.632
  // --- DEL 2013/01/23 T.Nishi ---------->>>>>
  //// --- ADD 2012/10/29 Wakita ---------->>>>>
  //guideColorsSaveArray: array [0 .. 200] of Integer;
  //guideColorsToSaveArray: array [0 .. 200] of Integer;
  //// --- ADD 2012/10/29 Wakita ----------<<<<<
  // --- DEL 2013/01/23 T.Nishi ----------<<<<<
  // --- ADD 2013/02/01 Wakita ---------->>>>>
  guideColorsSaveArray: array [0 .. 200] of Integer;
  guideColorsToSaveArray: array [0 .. 200] of Integer;
  // --- ADD 2013/02/01 Wakita ----------<<<<<
  discountAllLineflag : boolean;  //一括値引フラグ　// ADD 2013/01/24 鄧潘ハン REDMINE#34141
  isOptPermitForFuJi: Boolean = False; // 富士ジーワイ商事㈱オプション判定フラグ // ADD  黄興貴 K2015/04/29 回答取込パタン追加
  isOptPermitForMeiGo: Boolean = False; // ㈱メイゴオプション判定フラグ // ADD  紀飛 K2015/06/18 WebUOE発注回答取込
  isOptPermitForKoei: Boolean = False; // ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ
  isOptPermitForEBooks: Boolean = False; // ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応

  //水野商工㈱オプション判定フラグ
  isOptPermitForMizuno2ndSellPriceCtl: Boolean = False; // ADD K2016/12/30 譚洪 水野商工㈱

  isSalesSlipSearch : Boolean;  // ADD 2013/02/20 Wakita ①　
  eventCancelFlg : Boolean; // ADD 2013/02/25 Wakita
  gCanClose : Boolean = false;  // ADD 2013/07/16 Wakita
  // --- DEL 2013/12/11 T.Nishi ---------->>>>>
  //// --- ADD 2013/05/15 T.Nishi ---------->>>>>
  //gKeyDownEventFlg : Boolean = false;  //true : イベント発生中 false : イベント未発生中
  //// --- ADD 2013/05/15 T.Nishi ----------<<<<<
  // --- DEL 2013/12/11 T.Nishi ----------<<<<<
  // ------  ADD K2015/04/01 高騁 森川部品個別依頼------->>>>>
  isOptPermitForMoriKawa: Boolean = False;// 森川個別オプション判定フラグ
  notChangeAllSecStock: Boolean = False;
  isSetupClick: Boolean = False;
  // ------  ADD K2015/04/01 高騁 森川部品個別依頼-------<<<<<
  // --- ADD K2015/09/15 紀飛 #Redmine47186障害一覧#38 売上伝票入力でF10キーにて明細に移動した場合、「回答取込」ボタンが非活性となる----->>>>>
  nextCtrlChangeFlag: Boolean = False;
  // --- ADD K2015/09/15 紀飛 #Redmine47186障害一覧#38 売上伝票入力でF10キーにて明細に移動した場合、「回答取込」ボタンが非活性となる-----<<<<<

  salesUnPrcCalcFlg : Boolean;            // ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ

implementation

{$R *.dfm}
//*************************************************************************
//  FormCreate
//***********************************************
//**************************
procedure TForm4.Timer1Timer(Sender: TObject);
var
widthTemp : Integer;
begin
    Timer1.Enabled := False;
    inputStockFlg := True;            // ADD 2010/08/13
    inputOrderFlg := True;            // ADD 2010/08/13

    //>>>2010/06/30
    //    // ツールバーマネージャーのカスタマイズ情報のロード
    xLoadToolManagerCustomizeInfo();
    //<<<2010/06/30

//>>>2011/01/13
//    beforeSalesMoney := 0; // 2010/12/16
//    beforeSalesUnPrc := 0; // 2010/12/16
//    beforeSalesRate := 0; // 2010/12/16
//    beforeCostRate := 0; // 2010/12/16
//    beforeSalesUnitCost := 0; // 2010/12/16
//    beforeListPrice := 0; // 2010/12/16
//    beforeShipmentCnt := 0; // 2010/12/16
//    beforeAcceptAnOrderCnt := 0; // 2010/12/16
//<<<2011/01/13
    // ---- UPD 2010/06/26 --------->>>>>
    // ---- UPD T.Miyamoto 2012/11/13 ------------------------------>>>>>
    //gpxMAHNB01019B_GetOptInfo(optCarMng, optFreeSearch, optPcc,
    //            optRCLink, optUoe, optStockingPayment, optScm, optQRMail);
    gpxMAHNB01019B_GetOptInfo(optCarMng,
                              optFreeSearch,
                              optPcc,
                              optRCLink,
                              optUoe,
                              optStockingPayment,
                              optScm,
                              optQRMail,
                              optDateCtrl,
                              optNoBuTo);  // ADD 譚洪 K2014/01/22
    // ---- UPD T.Miyamoto 2012/11/13 ------------------------------<<<<<
  // ---- ADD 2012/12/21 T.Miyamoto ------------------------------>>>>>
  gpxMAHNB01019B_GetYamagataOptInfo(optStockEntCtrl
                                  , optStockDateCtrl
                                  , optSalesCostCtrl);
  // ---- ADD 2012/12/21 T.Miyamoto ------------------------------<<<<<

    // ----UPD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
    //gpxMAHNB01013B_BeginControllingByOperationAuthority(b_revisionVisible,
    //                                    b_deleteVisible, b_redSlipVisible);
    gpxMAHNB01013B_BeginControllingByOperationAuthority(b_revisionVisible,
                                        b_deleteVisible, b_redSlipVisible, b_slipDiscountVisible);
    // ----UPD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<

    gpxMAHNB01013B_OptPermitForMoriKawa(isOptPermitForMoriKawa); // ADD K2015/04/01 高騁 森川部品個別依頼
    gpxMAHNB01013B_OptPermitForKoei(isOptPermitForKoei);  // ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ

    toolbarFlg := True;

    xtoolbarSet();

    // ----------- ADD K2015/04/01 高騁 森川部品個別依頼 ------>>>>>
    if(allSecInfoButton.Visible) or (toolMenu_allSecInfoBtn.Visible) then
    xAllSecStockInfoProc(HNsGrid1.LogicalRow,True,False);
    // ----------- ADD K2015/04/01 高騁 森川部品個別依頼 ------<<<<<

    Form4.Width := Form4.Width + 1;
    Form4.Width := Form4.Width - 1;

    //画面項目名称設定処理
    xGetDisplayName();

    HEdit24.DataText := salesSlip_disp.ResultsAddUpSecNm;
    HEdit23.DataText := HGetLoginEmployeeName;
    StatusPanel3.Caption := FormatDateTime('yyyy/MM/dd hh:mm', Now);

    gi_Opt_Scm := optScm; // 2010/06/30

    // SCMオプション(Opt_SCM)：OFF ツールバー 問合せ一覧→非表示
    // ツールバー 回答処理→非表示  明細部 SCMボタン→非表示
    if (optScm = 0) then
    begin
       ReferenceListButton.Visible := False;
       toolReferenceListButton.Visible := False;
// 2011/01/31 Del >>>
//       ReplyTransactionButton.Visible := False;
//       toolReplyTransactionButton.Visible := False;
// 2011/01/31 Del <<<
       btnSCM.Visible := False;
       btnCopyToRC.Left := 904;
       panel_InquiryNumber.Visible := False; // 2010/06/30
//       pnl_PartySaleSlipNum.Visible := True; // 2010/07/15
    end
    else
    begin
//>>>2011/02/01 SCMボタン制御対応
       if (optRCLink = 0) then begin
         btnSCM.Visible := false;
       end else begin
         btnSCM.Visible := true;
       end;
//<<<2011/02/01 SCMボタン制御対応
//>>>2010/07/15
//       panel_InquiryNumber.Visible := True; // 2010/06/30
      if (salesSlip_disp.OnlineKindDiv = 10) then begin
        panel_InquiryNumber.Visible := true;
        btnscm.Enabled := true;
//>>>2011/05/25
        pnl47.Visible := false;
        TotalDay.Visible := false;
        Label4.Visible := false;
        CollectMoney.Visible := false;
        Label6.Visible := false;
        HEdit_PartySalesSlipNum.Visible := true;
        Label_PartySalesSLipNum.Visible := true;
//<<<2011/05/25
      end else begin
        panel_InquiryNumber.Visible := false;
        btnscm.Enabled := false;
//>>>2011/05/25
        pnl47.Visible := true;
        TotalDay.Visible := true;
        Label4.Visible := true;
        CollectMoney.Visible := true;
        Label6.Visible := true;
        HEdit_PartySalesSlipNum.Visible := false;
        Label_PartySalesSLipNum.Visible := false;
//<<<2011/05/25
      end;
//<<<2010/07/15
       // --- DEL 2012/07/25 Wakita ---------->>>>>
       //pnl_PartySaleSlipNum.Visible := False;
       // --- DEL 2012/07/25 Wakita ----------<<<<<
    end;
    // 買掛オプション(Opt_StockingPayment)：OFF  明細部 仕入先ボタン→非表示
    if (optStockingPayment = 0) then
    begin
       inputStockFlg := False;              // ADD 2010/08/13
       btnInputStockInfo.Visible := False;
       btnInputStockInfo.Left := 50;
       btnInputChange.Left := 131;
    end;
    // UOEオプション(Opt_UOE)：OFF  明細部 発注ボタン→非表示
    if (optUoe = 0) then
    begin
       inputOrderFlg := False;            // ADD 2010/08/13
       btnInputOrderInfo.Visible := False;
       btnInputChange.Left := 128;
       btnInputStockInfo.Left := 208;
    end;
    // RC連動オプション(Opt_RCLink)：OFF   明細部 RCへコピー→非表示
    if (optRCLink = 0) then
    begin
       btnCopyToRC.Visible := False;
    end;
    // QRコード携帯メールオプション(Opt_QRMail)：OFF  ツールバー メール→非表示
    // フッタ部　QRコード作成→非表示
    if (optQRMail = 0) then
    begin
       MailButton.Visible := False;
       toolMailButton.Visible := False;
       checkBox_MakeQR.Visible := False;
    end;

    // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- >>>>>
    // 売価算出オプション(isOptPermitForKoei)：False   明細部 売価算出→非表示
    // 売価算出オプション(isOptPermitForKoei)：True   明細部 売価算出→表示
    if not isOptPermitForKoei then
    begin
      btnSalesUnPrcCalc.Visible := False;
      //  明細部 「PCC」と「RCへコピー」位置を補正処理
      if (btnSCM.Visible) then
      begin
         btnSCM.Left := 904;
         btnCopyToRC.Left := 944;
      end
      else
      begin
         btnCopyToRC.Left := 904;
      end;
    end
    else
    begin
      btnSalesUnPrcCalc.Visible := True;
      //  明細部 「PCC」と「RCへコピー」位置を補正処理
      if (btnSCM.Visible) then
      begin
         btnSCM.Left := 983;
         btnCopyToRC.Left := 1023;
      end
      else
      begin
         btnCopyToRC.Left := 983;
      end;
    end;
    // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- <<<<<

    xLoadBitbtnCustomizeInfo();          // ADD 2010/08/13

//    gpxMAHNB01012B_GetSettingOptionInfo(i_Opt_CarMng, i_Opt_StockingPayment);
//
//    if ((i_Opt_CarMng = 0) and (i_Opt_StockingPayment = 1)) then
//    begin
//       btnInputOrderInfo.Visible := False;
//       btnInputStockInfo.Visible := True;
//       btnInputChange.Left := 181;
//       btnInputStockInfo.Left := 263;
//    end
//    else if ((i_Opt_CarMng = 1) and (i_Opt_StockingPayment = 0)) then
//    begin
//       btnInputOrderInfo.Visible := True;
//       btnInputStockInfo.Visible := False;
//       btnInputChange.Left := 181;
//       btnInputOrderInfo.Left := 263;
//    end
//    else if ((i_Opt_CarMng = 0) and (i_Opt_StockingPayment = 0)) then
//    begin
//       btnInputOrderInfo.Visible := False;
//       btnInputStockInfo.Visible := False;
//       btnInputChange.Left := 253;
//    end;
// ---- UPD 2010/06/26 ---------<<<<<

    //伝票備考、伝票備考２、伝票備考３の入力桁数を制御する
    xSetNoteCharCnt();

    //追加情報タブ項目Visible設定
    gpxMAHNB01013B_GetAddInfoVisible(ctTabKeyAddInfo, settingAddInfoVisibleFlg);
    if ctTabKeyAddInfo = 1 then
    begin
      AddInfoTabSheet.TabVisible := false;
    end else begin
      AddInfoTabSheet.TabVisible := true;
    end;

    AddInfoTabSheet.TabVisible := False;
    uTabControl_Footer.ActivePageIndex := 0;

    //  //グリッド情報が入力しない場合、伝票メモ、社内メモの表示しない
    SlipMemo1.Enabled := False;
    SlipMemo1.Color := clBtnFace;
    SlipMemo2.Enabled := False;
    SlipMemo2.Color := clBtnFace;
    SlipMemo3.Enabled := False;
    SlipMemo3.Color := clBtnFace;
    InsideMemo1.Enabled := False;
    InsideMemo1.Color := clBtnFace;
    InsideMemo2.Enabled := False;
    InsideMemo2.Color := clBtnFace;
    InsideMemo3.Enabled := False;
    InsideMemo3.Color := clBtnFace;

    //売上全体設定.部品検索区分=部品検索、車種名称の入力不可
    if (salesTtlSt.PartsSearchDivCd = 0) then
    begin
      xEnableControl(ModelFullName, False);
    end;



    //グリッド列初期設定処理
    xInitialSettingGridCol();
    xInitialSettingGridCol2();
    xInitialSettingGridCol3();
    xInitialSettingGridCol4();
    xInitialSettingGridCol5();

    HNsGrid1.AlwaysValidate := true;

    xSettingGrid;

    CopyPop.Enabled := False;
    PastePop.Enabled := False;
    CutPop.Enabled := False;

    // ADD 2010/08/13 ---- >>>>
    if ((btnInputStockInfo.Visible = False) and (btnInputOrderInfo.Visible = True)) then
    begin
      btnInputChange.Left := 127;
      btnInputOrderInfo.Left := 206;
      W1.Visible := False;
      G1.Visible := True;
    end
    else if ((btnInputStockInfo.Visible = True) and (btnInputOrderInfo.Visible = False)) then
    begin
      btnInputChange.Left := 129;
      btnInputStockInfo.Left := 208;
      W1.Visible := True;
      G1.Visible := False;
    end
    else if ((btnInputStockInfo.Visible = False) and (btnInputOrderInfo.Visible = False)) then
    begin
      W1.Visible := False;
      G1.Visible := False;
      btnInputChange.Left := 181;
    end
    else
    begin
      W1.Visible := True;
      G1.Visible := True;
      btnInputChange.Left := 74;
      btnInputStockInfo.Left := 153;
      btnInputOrderInfo.Left := 206;
    end;
    // ADD 2010/08/13 ---- <<<<<

    // --- DEL  30757 佐々木　貴英 K2015/10/05 ----------------->>>>>
    //// --- ADD K2015/09/15 紀飛 #Redmine47186障害一覧#38 売上伝票入力でF10キーにて明細に移動した場合、「回答取込」ボタンが非活性となる----->>>>>
    //UOEDataGet.Enabled := False;
    //toolMenu_UOEDataGet.Enabled := False;
    //// --- ADD K2015/09/15 紀飛 #Redmine47186障害一覧#38 売上伝票入力でF10キーにて明細に移動した場合、「回答取込」ボタンが非活性となる-----<<<<<
    // --- DEL  30757 佐々木　貴英 K2015/10/05 -----------------<<<<<
end;

procedure TForm4.Timer2Timer(Sender: TObject);
begin
   StatusPanel3.Caption := FormatDateTime('yyyy/MM/dd hh:mm', Now);
end;

// --- ADD 2010/08/13
procedure TForm4.Timer3Timer(Sender: TObject);
begin
   if (DeliveredGoodsDivComBo.DroppedDown = True) then
   begin
      SendMessage(DeliveredGoodsDivComBo.Handle, CB_SHOWDROPDOWN, INTEGER(False), 0);
      Timer3.Enabled := False;
   end;
end;

// --- ADD 2010/09/15 -- >>>>
procedure TForm4.Timer4Timer(Sender: TObject);
begin
   Timer4.Enabled := False;
   keybd_event(VK_ESCAPE, 0 ,0,0);
end;

// --- ADD 2010/09/15 -- <<<<

// --- ADD 2010/08/13

procedure TForm4.ToolButtonClick(Sender: TObject);
var
  Key: Word;
  i: Integer;

begin

    case TToolButton(Sender).Tag of
    1:  Key := VK_F1;  //F1:終了
    2:  Key := VK_F9;  //F9:新規
    3:  Key := VK_F10;  //F3:確定
    // UPD 2010/08/13 -- >>>
    //4:  Key := VK_F12;  //伝票削除(F12)
    4:  Key := VK_OEM_5;  //伝票削除(F12)
    // UPD 2010/08/13 -- <<<
    5:  Key := VK_F2;  //戻る(F2)
    6:  Key := VK_F3;  //F3:進め
    7:  Key := VK_F18;  //F18:元に戻す
    8:  Key := VK_F4;  //F4:検索切替
    9:  Key := VK_F5;
    10: Key := VK_F20; //貸出計上(&I)
    11: Key := VK_F21; //受注計上(&H)
    12: Key := VK_F22; //見積計上(&Q)
    13: Key := VK_F23; //更新(&V)
    14: Key := VK_F14;  //赤伝(&R)
    15: Key := VK_F15; //返品(&Y)
    16: Key := VK_F16; //伝票複写(&P)
    17: Key := VK_F17;  //伝票呼出(X)
    // UPD 2010/08/13 -- >>>
    //18: Key := VK_F6;  //見出貼付(F6)
    //18: Key := VK_OEM_4;  //見出貼付(F6)     // DEL 2010/08/25
    //18: Key := VK_OEM_6;  //見出貼付(F6)       // ADD 2010/08/25 // DEL 2011/07/22
    18: Key := VK_PA1;  //見出貼付(F6)       // ADD 2011/07/22
    // UPD 2010/08/13 -- <<<
    19: Key := VK_F19;  //設定(&O)
    20: Key := VK_F24; // 最新情報(&A)
    //21: Key := VK_OEM_1; // 問合せ一覧 // 2010/05/30   // 2010/08/24
    //21: Key := VK_OEM_4; // 問合せ一覧 // 2010/08/24     // DEL 2011/07/22
    21: Key := VK_OEM_8; // 問合せ一覧 // ADD 2011/07/22
    23: Key := VK_F8;    // 日付修正   // ADD 2011/08/02
    24: Key := VK_F13;   // 明細貼付   // ADD 連番729 2011/08/18
    25: Key := VK_OEM_7;   // 一括値引(E)// ADD 2013/01/24 鄧潘ハン REDMINE#34141
    26: Key := VK_PACKET; // 在庫情報(S)// ADD K2015/04/01 高騁 森川部品個別依頼
    27: Key := VK_OEM_2; // 回答取込（T）ADD  黄興貴(T) K2015/04/29
    28: Key := VK_ATTN; // 履歴検索// ADD　2018/09/04 譚洪　履歴自動表示の対応
    //22: Key := VK_OEM_2; // 回答処理 // 2010/05/30     // 2011/01/31 Del
    // --- ADD m.suzuki 2010/06/12 ---------->>>>>
    //100: Key := VK_OEM_3; // メール    // DEL 2011/07/22
    100: Key := VK_OEM_102; // メール    // ADD 2011/07/22
    // --- ADD m.suzuki 2010/06/12 ----------<<<<<
    31: Key := VK_CRSEL; // 税率入力 // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応
    32: Key := VK_EXSEL; // 電帳.DX // ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応
  end;
  FormKeyDown(OldCtrl, Key, []);
end;

// --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ------------------>>>>>
// *************************************************************************
// 富士UOE取込処理
// *************************************************************************
procedure TForm4.UOEDataGetClick(Sender: TObject);
var
  salesRowNo: Integer;
  salesDetailArray: TSalesSlipInputCustomArrayA2;
begin
  // 行番号
  salesRowNo := HNsGrid1.Row div 2;
  // データ取込処理
  gpxMAHNB01013B_ReadUoeData(salesRowNo);
  // パタン制御を行う
  SettingToolBarButtonEnabled(HNsGrid1);
  // 売上明細にセット
  gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);
  // 画面に表示する
  xSetDetailRowFormC(salesDetailArray, -1);
  // 明細グリッド設定処理
  xSettingGrid;
  // 明細グリッド設定処理
  xActiveCellButtonEnabledControl('GoodsNo',salesRowNo);

  // 明細部変更後発生イベント処理
  xSalesSlipDetailInput_DetailChanged(salesRowNo);

  // 伝票メモ表示処理
  xSlipMemoInfoFormSetting(salesRowNo);

  // 売上金額変更後発生イベント処理
  xSalesPriceChanged;
  // --- ADD 呉元嘯 2020/11/09 PMKOBETSU-4085対応 -------->>>>>
  if (isOptPermitForFuJi) and (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, HNsGrid1.LogicalRow * 2] = false) then
  begin
    HNsGrid1.SetFocus;
    HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntDisplay,HNsGrid1.LogicalRow * 2);
  end;
  // --- ADD 呉元嘯 2020/11/09 PMKOBETSU-4085対応 --------<<<<<
end;
// --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ------------------<<<<<

procedure TForm4.updateButtonClick(Sender: TObject);
var
nextControl : TWinControl;
begin
  xdoSave(false);
end;

// *************************************************************************
// 空白行削除処理
// *************************************************************************
procedure TForm4.xDeleteEmptyRow();
var
   i, rowCount : Integer;
begin

//>>>2010/07/27
//   for i := 1 to  (HNsGrid1.LogicalRowCount -1) do
//   begin
//     if (Trim(RCHNB01003UADM.GoodsName[i -1]) = '') then
//     begin
//       HNsGrid1.RemoveLogicalRowsEx(i,1);
//     end;
//   end;

  for i := HNsGrid1.LogicalRowCount - 1 downto 1 do begin
    if (Trim(RCHNB01003UADM.GoodsName[i - 1]) = '') then begin
      HNsGrid1.RemoveLogicalRowsEx(i, 1);
    end;
  end;

//<<<2010/07/27

end;

//*************************************************************************
//  FormKeyDown
//*************************************************************************
procedure TForm4.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var
  UsrCode, status, salesRowNo, searchType,OldRowLogic : Integer;
  NextCtrl: TWinControl;
  beforeSalesSlipNumText : WideString;
  salesDetailArray: TSalesSlipInputCustomArrayA2;
  OldCol, OldRow,rowIndex : Integer;
//  gridJoinCheck : Boolean; // ADD 2010/10/15 // DEL 2011/02/11
  gridJoinCheck, isErrorFlag : Boolean; // ADD 2011/02/11
  i :   Integer;       // ADD 2010/10/15
  ix :   Integer;       // ADD 2010/04/13
  activeBK : WideString;     // ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ
begin
  // --- DEL 2013/12/11 T.Nishi ---------->>>>>
  //// --- ADD 2013/05/15 T.Nishi ---------->>>>>
  //if gKeyDownEventFlg = true then begin
  //  Key := 0; // ADD 2013/06/19 Wakita
  //  exit;
  //end;
  //try
  //  gKeyDownEventFlg := true;
  //// --- ADD 2013/05/15 T.Nishi ----------<<<<<
  // --- DEL 2013/12/11 T.Nishi ---------->>>>>
  // ADD 2012/02/21 zhangyong Redmine#27279 ----->>>>>>>
   // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- >>>>>
   if isOptPermitForKoei then
   begin
     activeBK :=  Form4.ActiveControl.Name;
   end;
   // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- <<<<<

  if (ssShift in Shift) then
  begin
     tempShiftTabFlg := true;
  end
  else
  begin
    tempShiftTabFlg := false;
  end;
  // ADD 2012/02/21 zhangyong Redmine#27279 -----<<<<<<<
  // ---ADD 2011/02/11---------->>>>
  gpxMAHNB01013B_GetErrorFlag(isErrorFlag);
  if isErrorFlag then
  begin
    if (ssAlt in Shift) then
    begin
      if ((Key = Ord('X'))
         or (Key = Ord('I'))
         or (Key = Ord('H'))
         or (Key = Ord('Q'))
         or (Key = Ord('V'))
         or (Key = Ord('U'))
         or (Key = Ord('R'))
         or (Key = Ord('Y'))
         or (Key = Ord('P'))
         or (Key = Ord('O'))
         or (Key = Ord('A'))) then
      begin
        Exit;
      end;
    end;

    case Key of
    VK_F9 : Exit;
    VK_F10 : Exit;
    VK_F12 : Exit;
    VK_F2 : Exit;
    VK_F3 : Exit;
    VK_F4 : Exit;
    VK_F5 : Exit;
    VK_F6 : Exit;
    end;

  end;
  // ---ADD 2011/02/11----------<<<<
  // ---ADD 2011/04/13---------->>>>
  if ((HNsGrid1.Col = ctCol_StockDate)
     and (('' = Form4.ActiveControl.Name)
     or ('HNsGrid1' = Form4.ActiveControl.Name))) then
  begin
    if (GetKeyState(VK_DOWN) and $8000 = $8000) then
    begin
      HNsGrid1.SetFocus;
    end;

    if (GetKeyState(VK_UP) and $8000 = $8000) then
    begin
      if (HNsGrid1.Row div 2) - 1 = 0 then
      begin
        HNsGrid1.SetFocus;
      end
      else
      begin
        for ix := HNsGrid1.Row - 1 downto 0 do
        begin
          if ix <= 1 then
          begin
            if ((FullModel.Enabled = True) and (FullModel.ReadOnly = False)) then
            begin
              FullModel.SetFocus;
              Exit;
            end
            else
            begin
              SalesEmployeeCd.SetFocus;
              Exit;
            end;
          end;

          if xGridColumnDisCheck(ix, ctCol_PartySalesSlipNum, 2) = False then
          begin
            HNsGrid1.SetFocus;
            //HNsGrid1.GotoCell(ctCol_PartySalesSlipNum, ix);  // DEL 2012/10/15
            HNsGrid1.GotoCell(ctCol_PartySalesSlipNum, ix + 1);// ADD 2012/10/15
            Exit;
          end
          else
          begin
            Continue;
          end;
        end;
      end;
    end;
  end;
  // ---ADD 2011/04/13----------<<<<
  gridJoinCheck := False;  // ADD 2010/10/15
  if (focusFlg) then
  begin
    if ((RCHNB01003UADM.EditStatus[0] = ctEDITSTATUS_RowDiscount)
      or (RCHNB01003UADM.EditStatus[0] = ctEDITSTATUS_Annotation)) then
    begin
     if OldCtrl.Name = 'HNsGrid1' then     // ADD 2010/07/08
     xSettingFocus2('GoodsNameTP');
    end
    else if (RCHNB01003UADM.EditStatus[0] = salesSlipCdDtl_RetGoods) then
    begin
     if OldCtrl.Name = 'HNsGrid1' then     // ADD 2010/07/08
     xSettingFocus2('ShipmentCntDisplayTP');
    end
    // ----------ADD 2010/07/01--------->>>>>
    else if (RCHNB01003UADM.EditStatus[0] = ctINPUTMODE_SalesSlip_Red) then
      begin
      if OldCtrl.Name = 'SlipNoteCode' then
      begin
        xSetFootControl();
      end;

    end
    // ----------ADD 2010/07/01---------<<<<<
    // ----------ADD 2010/07/08--------->>>>>
    else if (RCHNB01003UADM.EditStatus[0] = ctEDITSTATUS_ExistSlip) then
    begin
      if OldCtrl.Name = 'HNsGrid1' then
     xSettingFocus2('GoodsNameTP');

    end
    // ----------ADD 2010/07/08---------<<<<<
    else
    begin
     xSettingFocus2('BLGoodsCodeTP');
    end;

   // ----------ADD 2010/07/01--------->>>>>
   if (((GetKeyState(VK_UP) and $8000 = $8000)) and ((RCHNB01003UADM.EditStatus[0] = ctINPUTMODE_SalesSlip_Red) or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Red)) and (OldCtrl.Name = 'SalesInputCode')) then
    begin
      if (SalesInputCode.Visible = True and (SalesInputCode.Enabled = True)) then
      begin
        NextCtrl := SalesInputCode;
        SalesInputCode.SetFocus;
      end
      else if (FrontEmployeeCd.Visible = True and (FrontEmployeeCd.Enabled = True)) then
      begin
        NextCtrl := FrontEmployeeCd;
        FrontEmployeeCd.SetFocus;
      end
      else if (SalesEmployeeCd.Visible = True and (SalesEmployeeCd.Enabled = True)) then
      begin
        NextCtrl := SalesEmployeeCd;
        SalesEmployeeCd.SetFocus;
      end;

    end;
    // ----------ADD 2010/07/01---------<<<<<
    vk_Up_Check := False;// ADD 2010/07/01
    vk_Down_Check := False;// ADD 2010/07/01
    focusFlg := False; // ADD 2010/07/01
    Exit;
  end;


    UsrCode := 0;
  action_Key := Key;
  OldRowLogic := HNsGrid1.LogicalRow;

  OldCol := HNsGrid1.Col;//ADD 2010/06/02
  OldRow := HNsGrid1.Row;//ADD 2010/06/02

  if (ssAlt in Shift) then begin
    if (Key = Ord('U')) then begin
      if retryButton.Enabled or toolRetryButton.Enabled then
      begin
        UsrCode := 7;
        gpxMAHNB01013B_DoAddLine(17,0,0); // ADD 2011/02/11
      end;
    end else if (Key = Ord('A')) then
    begin
      if ReNewalbtn.Enabled or toolReNewalbtn.Enabled then
      begin
        UsrCode := 24;
        gpxMAHNB01013B_DoAddLine(22,0,0); // ADD 2011/02/11
        ReNewalbtnClick(ReNewalbtn);
      end;
    //赤伝（Ｘ）
    end else if (Key = Ord('R')) then begin
//      if (redSlipButton.Visible and redSlipButton.Enabled) or (toolRedSlipButton.Visible and toolRedSlipButton.Enabled) then  // DEL 2010/07/16
      if (b_redSlipVisible and redSlipButton.Enabled or toolRedSlipButton.Enabled) then  // ADD 2010/07/16
        begin
        UsrCode := 14;
        gpxMAHNB01013B_DoAddLine(18,0,0); // ADD 2011/02/11
        redSlipButtonClick(redSlipButton);
        end;
    //伝票呼出（Ｘ）
    end else if (Key = Ord('X')) then begin
//      if ReadSlipButton.Visible and ReadSlipButton.Enabled then  // DEL 2010/07/16
      if b_revisionVisible and ReadSlipButton.Enabled then    // ADD 2010/07/16
      begin
      UsrCode := 17;
      gpxMAHNB01013B_DoAddLine(11,0,0); // ADD 2011/02/11
      SalesSlipNumBtnClick(SlipHeaderCopyButton);
      end;
    end else if (Key = Ord('O')) then begin
      if (SetupButton.Enabled or toolSetupButton.Enabled) then
      begin
      UsrCode := 19;
      gpxMAHNB01013B_DoAddLine(21,0,0); // ADD 2011/02/11
      SetupButtonClick(SetupButton);
      end;
    end else if (Key = Ord('I')) then begin
      if shipmentAddUpButton.Enabled then
      begin
        UsrCode := 10;
        gpxMAHNB01013B_DoAddLine(12,0,0); // ADD 2011/02/11
        shipmentAddUpButtonlick(Sender);
      end;
    end else if (Key = Ord('H')) then begin
      if acceptAnOrderAddUpButton.Enabled then
      begin
        UsrCode := 11;
        gpxMAHNB01013B_DoAddLine(13,0,0); // ADD 2011/02/11
        acceptAnOrderAddUpButtonClick(Sender);
      end;
    end else if (Key = Ord('Q')) then begin
      if estimateAddUpButton.Enabled then
      begin
        UsrCode := 12;
        gpxMAHNB01013B_DoAddLine(14,0,0); // ADD 2011/02/11
        estimateAddUpButtonClick(Sender);
      end;
    end else if (Key = Ord('V')) then begin
      if updateButton.Enabled then
      begin
        UsrCode := 13;
        gpxMAHNB01013B_DoAddLine(16,0,0); // ADD 2011/02/11
        updateButtonClick(Sender);
      end;
    end else if (Key = Ord('Y')) then begin
      if returnSlipButton.Enabled or toolReturnSlipButton.Enabled then
      begin
        UsrCode := 15;
        gpxMAHNB01013B_DoAddLine(19,0,0); // ADD 2011/02/11
        returnSlipButtonClick(Sender);
      end;
    end else if (Key = Ord('P')) then begin
      if copySlipButton.Enabled or toolCopySlipButton.Enabled then
      begin
        UsrCode := 16;
        gpxMAHNB01013B_DoAddLine(20,0,0); // ADD 2011/02/11
        copySlipButtonClick(Sender);
      end;
    // --------- ADD 連番729 2011/08/18 ----------->>>>>
    end else if (Key = Ord('D')) then begin
      if (Form4.ActiveControl = HNsGrid1) and
        (detailCopyButton.Enabled) then begin
        DetailCopyButtonClick(detailCopyButton);
      end;
    // --------- ADD 連番729 2011/08/18 -----------<<<<<
    // --------- DEL 譚洪 2015/10/26 Redmine#47609 ----------->>>>>
    // --------- ADD 黄興貴 K2015/04/29 回答取込パタン追加 ----------->>>>>
//    end else if (Key = Ord('T')) then begin
//      if (Form4.ActiveControl = HNsGrid1) and
//         (UOEDataGet.Enabled) and
//         (isOptPermitForFuJi) then
//         begin
//         UOEDataGetClick(UOEDataGet);
//      end;
    // --------- ADD 黄興貴 K2015/04/29 回答取込パタン追加 -----------<<<<<

  // --------- ADD 紀飛 K2015/06/18 WebUOE発注回答取込 ----------->>>>>
//    end else if (Key = Ord('T')) then begin
//      // --- DEL  30757 佐々木　貴英 K2015/10/05 ----------------->>>>>
//      //if (Form4.ActiveControl = HNsGrid1) and
//      //   (UOEDataGet.Enabled) and
//      // --- DEL  30757 佐々木　貴英 K2015/10/05 -----------------<<<<<
//      // --- ADD  30757 佐々木　貴英 K2015/10/05 ----------------->>>>>
//      if (UOEDataGet.Enabled) and
//      // --- ADD  30757 佐々木　貴英 K2015/10/05 -----------------<<<<<
//         (isOptPermitForMeiGo) then
//         begin
//         UOEDataGetClick(UOEDataGet);
//      end;
    // --------- ADD 紀飛 K2015/06/18 WebUOE発注回答取込 -----------<<<<<
    // --------- DEL 譚洪 2015/10/26 Redmine#47609 -----------<<<<<

    // --------- ADD 譚洪 2015/10/26 Redmine#47609 ----------->>>>>
    end else if (Key = Ord('T')) then begin
      if (UOEDataGet.Enabled) and
         ((isOptPermitForFuJi and (Form4.ActiveControl = HNsGrid1)) OR
         (isOptPermitForMeiGo)) then
      begin
        UOEDataGetClick(UOEDataGet);
      end;
      // --------- ADD 譚洪 2015/10/26 Redmine#47609 -----------<<<<<
    end else if (Key = Ord('1')) then begin
      if (ExpandableGroupBox.Visible) and (ExpandableGroupBox.Enabled)then
      begin
        UsrCode := 49;
        ExpandableGroupBoxClick(Sender);
      end;
    end else if (Key = Ord('2')) then begin
      if (ts1.TabVisible) and (uTabControl_Footer.ActivePage <> ts1) then
      begin
        UsrCode := 50;
        uTabControl_Footer.ActivePage := ts1;
        SlipNoteCode.SetFocus;
      end;
    end else if (Key = Ord('3')) then begin
      if (ts2.TabVisible) and (uTabControl_Footer.ActivePage <> ts2) then
      begin
        UsrCode := 51;
        uTabControl_Footer.ActivePage := ts2;
        if SlipMemo1.Enabled then
        begin
            SlipMemo1.SetFocus;
        end;
      end;
     end else if (Key = Ord('4')) then begin
      if (AddInfoTabSheet.TabVisible) and (uTabControl_Footer.ActivePage <> AddInfoTabSheet) then
      begin
        UsrCode := 52;
        uTabControl_Footer.ActivePage := AddInfoTabSheet;
        // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
        if CarNoteCode.Enabled then
        begin
            CarNoteCode.SetFocus;
        end else
        // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------<<<<<
        if CarSlipNote.Enabled then
        begin
            CarSlipNote.SetFocus;
        end;
      end;
    // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
        //----- ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応------->>>>>
    end else if ((Key = Ord('J')) and (Form4.ActiveControl <> HNsGrid1)) then
    begin
      if (GetTaxRateButton.Enabled or toolGetTaxRateButton.Enabled) then
      begin
      UsrCode := 31;
      GetTaxRateButtonClick(GetTaxRateButton);
      end;
    //----- ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応-------<<<<<
    // --- ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応----->>>>>
    end else if (Key = Ord('G')) then
    begin
      if(EBooksButton.Enabled and EBooksButton.Visible)then
      begin
        UsrCode := 32;
        gpxMAHNB01013B_StartEBooks();
      end;
    // --- ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応-----<<<<<
    end else if (Key = Ord('E')) then begin
      if (b_slipDiscountVisible) and ((discountAllLineBottun.Enabled)
        or (toolMenu_discountAllLineBtn.Enabled))then
      begin
        UsrCode := 30;
        gpxMAHNB01013B_DoAddLine(50,0,0);
        DiscountAllLineButtonClick(toolMenu_discountAllLineBtn);
      end;
    // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
    // end;  // DEL K2015/04/01 高騁 森川部品個別依頼
    // ----------- ADD K2015/04/01 高騁 森川部品個別依頼 ------>>>>>
    end else if (Key = Ord('S')) then
    begin
      if((allSecInfoButton.Enabled) or (toolMenu_allSecInfoBtn.Enabled)) and ((allSecInfoButton.Visible) or (toolMenu_allSecInfoBtn.Visible))then
      begin
        xAllSecStockInfoProc(HNsGrid1.LogicalRow,True,False);
      end;
    //----- ADD　2018/09/04 譚洪　履歴自動表示の対応------->>>>>
    end else if (Key = Ord('F')) then
    begin
      if (HisSearchButton.Enabled or toolHisSearchButton.Enabled) then
          begin
            UsrCode := 28;
            HisSearchButtonClick(HisSearchButton);
          end;
    //----- ADD　2018/09/04 譚洪　履歴自動表示の対応-------<<<<<
    end;
    // ------  ADD K2015/04/01 高騁 森川部品個別依頼-------<<<<<
  end else begin
      case Key of
    VK_F1     : if closeButton.Enabled then
                begin
                  UsrCode := 1;
//>>>2010/06/30
//                  // ツールバーマネージャーのカスタマイズ情報の保存
//                  xSaveToolManagerCustomizeInfo();
//<<<2010/06/30
                  gpxMAHNB01013B_DoAddLine(2,0,0); // ADD 2011/02/11
                end;
    // ---UPD 2011/02/11------------->>>>
//    VK_F2     : if returnButton.Enabled then UsrCode := 5;
    VK_F2     : if returnButton.Enabled then
                begin
                   UsrCode := 5;
                   gpxMAHNB01013B_DoAddLine(7,0,0);
                   // --- ADD 2012/08/21 Wakita ---------->>>>>
                   xSettingKeepCarInfo();
                   // --- ADD 2012/08/21 Wakita ----------<<<<<
                end;
    // ---UPD 2011/02/11-------------<<<<
    // ---UPD 2011/02/11------------->>>>
//    VK_F3     : if forwardButton.Enabled then UsrCode := 6;
    VK_F3     : if forwardButton.Enabled then
                begin
                   UsrCode := 6;
                   gpxMAHNB01013B_DoAddLine(8,0,0);
                   // --- ADD 2012/08/21 Wakita ---------->>>>>
                   xSettingKeepCarInfo();
                   // --- ADD 2012/08/21 Wakita ----------<<<<<
                end;
    // ---UPD 2011/02/11-------------<<<<
//    VK_F4     : if forwardButton.Enabled then
//                begin
//                  UsrCode := 4;
//                  xChangeSearchMode(1);
//                end;
    VK_F4      : if searchCarChangeButton.Enabled then
                begin
                  UsrCode := 8;
                   gpxMAHNB01013B_DoAddLine(9,0,0); // ADD 2011/02/11
                  xChangeSearchMode(1);
                end;
    VK_F5      : if guideButton.Enabled then
                begin
                  UsrCode := 9;
                   gpxMAHNB01013B_DoAddLine(10,0,0); // ADD 2011/02/11
                  guideButtonClick(guideButton);
                end;
                // UPD 2010/08/13  ---- >>>>
                // UPD 2010/09/19  ---- >>>>
    VK_F6      : //if (Form4.ActiveControl = HNsGrid1) then
                 if (
                    (Form4.ActiveControl = HNsGrid1)
                    or (Form4.ActiveControl = SlipNoteCode)
                    or (Form4.ActiveControl = SlipNote2Code)
                    or (Form4.ActiveControl = SlipNote3Code)
                    or (Form4.ActiveControl = SlipNote)
                    or (Form4.ActiveControl = SlipNote2)
                    or (Form4.ActiveControl = SlipNote3)
                    or (Form4.ActiveControl = SlipNoteCodeBtn)
                    or (Form4.ActiveControl = SlipNote2CodeBtn)
                    or (Form4.ActiveControl = SlipNote3CodeBtn)
                    or (Form4.ActiveControl = AddresseeCode)
                    or (Form4.ActiveControl = AddresseeName)
                    or (Form4.ActiveControl = AddresseeCodeBtn)
                    or (Form4.ActiveControl = DeliveredGoodsDivComBo)
                    or (Form4.ActiveControl = AddresseeConfirmationBtn)
                    or (Form4.ActiveControl = RetGoodsReason)
                    or (Form4.ActiveControl = RetGoodsReasonBtn)
                    or (Form4.ActiveControl = checkBox_MakeQR)
                    or (Form4.ActiveControl = HEdit_InquiryNumber)
                    or (Form4.ActiveControl = HComboBox_AnswerDiv)
                    or (Form4.ActiveControl = PartySaleSlipNum)
                    or (Form4.ActiveControl = InsideMemo1)
                    or (Form4.ActiveControl = InsideMemo2)
                    or (Form4.ActiveControl = InsideMemo3)
                    or (Form4.ActiveControl = SlipMemo1)
                    or (Form4.ActiveControl = SlipMemo2)
                    or (Form4.ActiveControl = SlipMemo3)
                    or (Form4.ActiveControl = CarNoteCode) // ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218
                    or (Form4.ActiveControl = CarSlipNote)
                    or (Form4.ActiveControl = Mileage)
                    or (Form4.ActiveControl = SlipNoteGuideBtn)
                    or (Form4.ActiveControl = uTabControl_Footer)
                    or (Form4.ActiveControl.Name = '') // ADD 2012/12/21 T.Miyamoto
                    ) then
                 // UPD 2010/09/19  ---- <<<<
                 begin
                   if ((btnInputStockInfo.Visible = True) and (btnInputStockInfo.Enabled = True)) then
                   begin
                      // --- DEL 2012/05/18 No.87 ---------->>>>>
                      //HNsGrid1.GotoCell(ctCol_GoodsName,2); // ADD 2010/09/06
                      // --- DEL 2012/05/18 No.87 ----------<<<<<
                      BitBtn_InputStockInfo(Sender);
                   // ------ADD 2010/10/21-------->>>>>
                   end else if optStockingPayment = 0 then // 買掛オプション(Opt_StockingPayment)：OFF
                   begin
                       if SlipHeaderCopyButton.Enabled = True then
                       begin
                        UsrCode := 18;
                        SlipHeaderCopyButtonClick(SlipHeaderCopyButton);
                       end;
                   end;
                   // ------ADD 2010/10/21--------<<<<<
                 end
                 else
                 begin
                   if SlipHeaderCopyButton.Enabled = True then
                   begin
                    UsrCode := 18;
                    SlipHeaderCopyButtonClick(SlipHeaderCopyButton);
                   end;
                 end;
    //VK_OEM_4   : if SlipHeaderCopyButton.Enabled then   // DEL 2010/08/25
    //VK_OEM_6   : if SlipHeaderCopyButton.Enabled then     // ADD 2010/08/25  // DEL 2011/07/22
    VK_PA1   : if SlipHeaderCopyButton.Enabled then     // ADD 2011/07/22
                 begin
                  UsrCode := 18;
                  SlipHeaderCopyButtonClick(SlipHeaderCopyButton);
                 end;

                 // UPD 2010/08/13 ---- <<<<
    VK_F7      : if btnInputChange.Enabled then
                begin
                  // --- UPD 2012/05/22 No.526 ---------->>>>>
                  //HNsGrid1.GotoCell(ctCol_GoodsName,2); // ADD 2010/09/06
                  if (Form4.ActiveControl.Name = 'HNsGrid1') then
                  begin
                    HNsGrid1.SetFocus;
                    HNsGrid1.GotoCell(ctCol_GoodsName,2);
                  end;
                  // --- UPD 2012/05/22 No.526 ----------<<<<<
                  BitBtn_InputChange(Sender);
                end;
// ------------- ADD 2011/08/02 ---------------------- >>>>>
    VK_F8      : if (pnl_Header.ContainsControl(Form4.ActiveControl))
                   or (pnl_CarInfo.ContainsControl(Form4.ActiveControl))
                   or (uTabControl_Footer.ContainsControl(Form4.ActiveControl)) then
                begin
                  if SalesDate.Enabled and not SalesDate.ReadOnly then begin
                    // --- ADD 2012/08/21 Wakita ---------->>>>>
                    xSettingKeepCarInfo();
                    // --- ADD 2012/08/21 Wakita ----------<<<<<
                    SalesDate.SetFocus;
                  end;
                end
                else
// ------------- ADD 2011/08/02 ---------------------- <<<<<
                if btnChangeWarehouse.Enabled then
                begin
                  BitBtn_ChangeWarehouse(Sender);
                end;
    VK_F10     : if saveButton.Enabled then
                 begin
                   Key := 150;
                   UsrCode := 3;
  // --- ADD K2021/04/19 譚洪 PMKOBETSU-4130 BLコード検索障害対応 -- >>>>>
                   // blｺｰﾄﾞ検索モード且つ先頭行BLｺｰﾄﾞがフォーカスイン且つ品名が入力可の場合
                   if (i_searchPartsMode = 1)
                     and (Form4.ActiveControl = HNsGrid1)
                     and (HNsGrid1.LogicalRow = 1)
                     and (HNsGrid1.Col = ctCol_BLGoodsCode) and (HNsGrid1.Row mod 2 = 0)
                     and (HNsGrid1.ReadOnly[ctCol_GoodsName, xGetActiveRowSalesRowNo() * 2] = False) then
                   begin
                     HNsGrid1.SetFocus;
                     HNsGrid1.GotoCell(ctCol_GoodsName,2);
                   end;
  // --- ADD K2021/04/19 譚洪 PMKOBETSU-4130 BLコード検索障害対応 -- <<<<<
                 end;
    // --- ADD 2010/07/01 ---------->>>>>
    // --- UPD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ---------->>>>>
//    VK_F11     : if rowDelete.Enabled then
//                 begin
//                   iFlag_Mouse := False;
//                   iLogicalRow_Mouse := HNsGrid1.LogicalRow;
//                   xDelete;
//                 end;
    VK_F11     : begin
                   iFlag_Mouse := False;
                   iLogicalRow_Mouse := HNsGrid1.LogicalRow;
                   xDelete;
                 end;
    // --- UPD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ----------<<<<<
    // --- ADD 2010/07/01 ----------<<<<<
    //伝票削除（Ｘ）
               // UPD 2010/08/13 ---- >>>>
    VK_F12     : if (Form4.ActiveControl = HNsGrid1) then
                 begin
                   if ((btnInputOrderInfo.Visible = True) and (btnInputOrderInfo.Enabled = True)) then
                   begin
//                      HNsGrid1.GotoCell(ctCol_GoodsName,2);  // ADD 2010/09/06 // 2011/02/01 // 発注明細表示時のフォーカス制御
                      BitBtn_InputOrderInfo(Sender);
                   // --------UPD 2010/10/21-------->>>>>
                   //end;
                   end
                   else if optUoe = 0 then // UOEオプション(Opt_UOE)：OFF
                   begin
                     if b_deleteVisible and deleteSlipButton.Enabled then
                     begin
                      UsrCode := 4;
                      gpxMAHNB01013B_DoAddLine(6,0,0); // ADD 2011/02/11
                      xDeleteSalesSlip();
                     end;
                   end;
                   // --------UPD 2010/10/21--------<<<<<<
                 end
                 else
                 begin
                   // if deleteSlipButton.Visible and deleteSlipButton.Enabled then   // DEL 2010/07/16
                   if b_deleteVisible and deleteSlipButton.Enabled then     // ADD 2010/07/16
                   begin
                    UsrCode := 4;
                    gpxMAHNB01013B_DoAddLine(6,0,0); // ADD 2011/02/11
                    xDeleteSalesSlip();
                   end;
                 end;
// ------------- ADD 連番729 2011/08/18 ---------------------- >>>>>
    VK_F13    : if (Form4.ActiveControl = HNsGrid1) and
                  (detailCopyButton.Enabled) then begin
                  DetailCopyButtonClick(detailCopyButton);
                end;
// ------------- ADD 連番729 2011/08/18 ---------------------- <<<<<

// --- DEL  譚洪 2015/10/26 Redmine#47609 ------------------>>>>>
// --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ------------------>>>>>
//    VK_OEM_2   : if (Form4.ActiveControl = HNsGrid1) and
//                    (UOEDataGet.Enabled) and
//                    (isOptPermitForFuJi) then
//                 begin
//                 UOEDataGetClick(UOEDataGet);
//                 end;
// --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ------------------<<<<<

// --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 ------------------>>>>>
    // --- DEL  30757 佐々木　貴英 K2015/10/05 ----------------->>>>>
    //VK_OEM_2   : if (Form4.ActiveControl = HNsGrid1) and
    //                (UOEDataGet.Enabled) and
    // --- DEL  30757 佐々木　貴英 K2015/10/05 -----------------<<<<<
    // --- ADD  30757 佐々木　貴英 K2015/10/05 ----------------->>>>>
//    VK_OEM_2   : if (UOEDataGet.Enabled) and
//    // --- ADD  30757 佐々木　貴英 K2015/10/05 -----------------<<<<<
//                    (isOptPermitForMeiGo) then
//                 begin
//                 UOEDataGetClick(UOEDataGet);
//                 end;
// --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 ------------------<<<<<
// --- DEL  譚洪 2015/10/26 Redmine#47609 ------------------<<<<<


// --- ADD  譚洪 2015/10/26 Redmine#47609 ------------------>>>>>
    VK_OEM_2   : if (UOEDataGet.Enabled) and
                    ((isOptPermitForFuJi and (Form4.ActiveControl = HNsGrid1)) OR
                    isOptPermitForMeiGo) then
                 begin
                   UOEDataGetClick(UOEDataGet);
                 end;
// --- ADD  譚洪 2015/10/26 Redmine#47609 ------------------<<<<<


    VK_OEM_5  :  if b_deleteVisible and deleteSlipButton.Enabled then     // ADD 2010/07/16
                 begin
                  UsrCode := 4;
                  gpxMAHNB01013B_DoAddLine(6,0,0); // ADD 2011/02/11
                  xDeleteSalesSlip();
                 end;
                 // ADD 2010/08/13 ---- <<<<
    VK_F20    : if shipmentAddUpButton.Enabled then
                begin
                  UsrCode := 10;
                  gpxMAHNB01013B_DoAddLine(12,0,0); // ADD 2011/02/11
                  shipmentAddUpButtonlick(Sender);
                end;

    VK_F21    : if acceptAnOrderAddUpButton.Enabled then
                begin
                  UsrCode := 11;
                  gpxMAHNB01013B_DoAddLine(13,0,0); // ADD 2011/02/11
                  acceptAnOrderAddUpButtonClick(Sender);
                end;
    VK_F22    : if estimateAddUpButton.Enabled then
                begin
                  UsrCode := 12;
                  gpxMAHNB01013B_DoAddLine(14,0,0); // ADD 2011/02/11
                  estimateAddUpButtonClick(Sender);
                end;
    VK_F23    : if updateButton.Enabled then
                begin
                  UsrCode := 13;
                  gpxMAHNB01013B_DoAddLine(16,0,0); // ADD 2011/02/11
                  updateButtonClick(Sender);
                end;
    VK_F15    : if returnSlipButton.Enabled or toolReturnSlipButton.Enabled then
                begin
                  UsrCode := 15;
                  gpxMAHNB01013B_DoAddLine(19,0,0); // ADD 2011/02/11
                  returnSlipButtonClick(Sender);
                end;
    VK_F16    : if copySlipButton.Enabled or toolCopySlipButton.Enabled then
                begin
                  UsrCode := 16;
                  gpxMAHNB01013B_DoAddLine(20,0,0); // ADD 2011/02/11
                  copySlipButtonClick(Sender);
                end;
    VK_F14    : if redSlipButton.Enabled or toolRedSlipButton.Enabled then
                begin
                UsrCode := 14;
                gpxMAHNB01013B_DoAddLine(18,0,0); // ADD 2011/02/11
                redSlipButtonClick(redSlipButton);
                end;
    VK_F17    : if ReadSlipButton.Enabled then
                begin
                UsrCode := 17;
                gpxMAHNB01013B_DoAddLine(11,0,0); // ADD 2011/02/11
                SalesSlipNumBtnClick(ReadSlipButton);
                end;
    VK_F18    : if retryButton.Enabled or toolRetryButton.Enabled then
                begin
                UsrCode := 7;
                gpxMAHNB01013B_DoAddLine(17,0,0); // ADD 2011/02/11
                end;
    VK_F19    : if SetupButton.Enabled or toolSetupButton.Enabled then
                begin
                UsrCode := 19;
                gpxMAHNB01013B_DoAddLine(21,0,0); // ADD 2011/02/11
                SetupButtonClick(SetupButton);
                end;
    VK_F24    : if ReNewalbtn.Enabled or toolReNewalbtn.Enabled then
                begin
                UsrCode := 24;
                gpxMAHNB01013B_DoAddLine(22,0,0); // ADD 2011/02/11
                ReNewalbtnClick(ReNewalbtn);
                end;
//    VK_F7     : if btnToolBtn14.Enabled then UsrCode := 7;
//    VK_F8     : if btnToolBtn16.Enabled then UsrCode := 8;
    // ---UPD 2011/02/11------------>>>>
//    VK_F9     : if newButton.Enabled then UsrCode := 2;

    VK_F9     : if newButton.Enabled then
                begin
                UsrCode := 2;
                gpxMAHNB01013B_DoAddLine(3,0,0);
                end;
    // ---UPD 2011/02/11------------<<<<
    VK_ESCAPE : UsrCode := 29;
    //>>>2010/05/30
//    VK_OEM_1  : // 2010/08/24
    //VK_OEM_4  : // 2010/08/24   // DEL 2011/07/22
    VK_OEM_8  : // ADD 2011/07/22
//                if ReferenceListButton.Enabled or toolReferenceListButton.Enabled then    // DEL 2010/07/16
                if (optScm <> 0) and (ReferenceListButton.Enabled or toolReferenceListButton.Enabled) then  // ADD 2010/07/16
                begin
                UsrCode := 25;
                ReferenceListButtonClick(ReferenceListButton); // 2010/07/27
                end;
    //----- ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応------->>>>>
    VK_CRSEL  :
                if (GetTaxRateButton.Enabled or toolGetTaxRateButton.Enabled) then
                begin
                UsrCode := 31;
                GetTaxRateButtonClick(GetTaxRateButton);
                end;
    //----- ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応-------<<<<<
    // --- ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応----->>>>>
    VK_EXSEL  :
                if(EBooksButton.Enabled and EBooksButton.Visible)then
                begin
                  UsrCode := 32;
                  gpxMAHNB01013B_StartEBooks();
                end;
    // --- ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応-----<<<<<
    //----- ADD　2018/09/04 譚洪　履歴自動表示の対応------->>>>>
    VK_ATTN  :
                if (HisSearchButton.Enabled or toolHisSearchButton.Enabled) then
                begin
                UsrCode := 28;
                HisSearchButtonClick(HisSearchButton);
                end;
    //----- ADD　2018/09/04 譚洪　履歴自動表示の対応-------<<<<<
// 2011/01/31 Del >>>
//    VK_OEM_2  :
////                if ReplyTransactionButton.Enabled or toolReplyTransactionButton.Enabled then  // DEL 2010/07/16
//                if (optScm <> 0) and (ReplyTransactionButton.Enabled or toolReplyTransactionButton.Enabled) then  // ADD 2010/07/16
//                begin
//                UsrCode := 26;
//                ReplyTransactionButtonClick(ReplyTransactionButton); // 2010/07/27
//                end;
// 2011/01/31 Del <<<
    //<<<2010/05/30
    // --- ADD m.suzuki 2010/06/12 ---------->>>>>
    // メール
    //VK_OEM_3  :     // DEL 2011/07/22
    VK_OEM_102  :  // ADD 2011/07/22
//                if MailButton.Enabled or toolMailButton.Enabled then  // DEL 2010/07/16
                if (optQRMail <> 0) and (MailButton.Enabled or toolMailButton.Enabled) then  // ADD 2010/07/16
                begin
                UsrCode := 192;
                MailButtonClick(MailButton);
                end;
    // --- ADD m.suzuki 2010/06/12 ----------<<<<<
//----------- ADD 2013/01/24 鄧潘ハン REDMINE#34141 ------>>>>>
    VK_OEM_7   : if (b_slipDiscountVisible) and ((discountAllLineBottun.Enabled)
                    or (toolMenu_discountAllLineBtn.Enabled))then
                 begin
                    UsrCode := 30;
                    gpxMAHNB01013B_DoAddLine(50,0,0);
                    DiscountAllLineButtonClick(toolMenu_discountAllLineBtn);
                 end;
//---------- ADD 2013/01/24 鄧潘ハン REDMINE#34141  ------<<<<<
// ----------- ADD K2015/04/01 高騁 森川部品個別依頼 ------>>>>>
        VK_PACKET:
          begin
            if(allSecInfoButton.Enabled) or (toolMenu_allSecInfoBtn.Enabled) then
            begin
              xAllSecStockInfoProc(HNsGrid1.LogicalRow,True,False);
            end;
          end;
// ---------- ADD K2015/04/01 高騁 森川部品個別依頼 ------<<<<<
    end;
  end;

//>>>2010/07/15
//  if (optScm = 0) then
//    begin
//      pnl_PartySaleSlipNum.Visible := True;
//      panel_InquiryNumber.Visible := False;
//    end
//    else
//    begin
//      pnl_PartySaleSlipNum.Visible := False;
//      panel_InquiryNumber.Visible := True;
//    end;
//<<<2010/07/15

  // --- UPD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- >>>>>

//  if (UsrCode <> 0) and (TToolButton(Sender).Enabled = True) then begin
//      NextCtrl := OldCtrl;
//
//      // --- UPD 2012/05/31 No.282---------->>>>>
//      //XFuncKeyButton1FuncKey(OldCtrl, NextCtrl, UsrCode);
//      XFuncKeyButton1FuncKey(Sender, OldCtrl, NextCtrl, UsrCode);
//      // --- ADD 2012/05/31 No.282----------<<<<<
//
//  end;

  if isOptPermitForKoei then
  begin
    if (((UsrCode <> 0) and (TToolButton(Sender).Enabled = True))
      or (UsrCode = 1)            // 終了
      or (UsrCode = 2)            // 新規
      or (UsrCode = 3)            // 確定
      or (UsrCode = 5)            // 戻る
      or (UsrCode = 6)) then begin  // 進む

      NextCtrl := OldCtrl;

      XFuncKeyButton1FuncKey(Sender, OldCtrl, NextCtrl, UsrCode);

    end;
  end
  // 既存の場合、
  else
  begin
    if (UsrCode <> 0) and (TToolButton(Sender).Enabled = True) then begin
      NextCtrl := OldCtrl;

      // --- UPD 2012/05/31 No.282---------->>>>>
      //XFuncKeyButton1FuncKey(OldCtrl, NextCtrl, UsrCode);
      XFuncKeyButton1FuncKey(Sender, OldCtrl, NextCtrl, UsrCode);
      // --- ADD 2012/05/31 No.282----------<<<<<

    end;
  end;
  // --- UPD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- <<<<<


  // --- UPD 2010/05/31 ---------->>>>>

//  //明細最終行 移動無し
//  if (Form4.ActiveControl = HNsGrid1) and (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then begin
//    if (GetKeyState(VK_RETURN) and $8000 = $8000) or (GetKeyState(VK_DOWN) and $8000 = $8000) then
//    begin
//     if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, HNsGrid1.LogicalRow -1, -1, 9) = 0) then
//     begin
//       Key := 0;
//     end
//     else
//     begin
//       //  VK_DOWN
//       if ((GetKeyState(VK_DOWN) and $8000 = $8000) and (HNsGrid1.Row mod 2 = 1)) then
//       begin
//          Key := 0;
//          SlipNoteCode.SetFocus;
//       end
//       else
//       if ((GetKeyState(VK_DOWN) and $8000 = $8000) and (HNsGrid1.Row mod 2 = 0) and (HNsGrid1.Col = ctCol_GoodsName)) then
//       begin
//         Key := 0;
//
//         HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2 + 1);
//
//       end;
//     end;
//
//    end;
//  end
//  // 明細一行目
//  else if (Form4.ActiveControl = HNsGrid1) and (HNsGrid1.LogicalRow = 1) then
//  BEGIN
//    if (HNsGrid1.Row = 2) then
//    begin
//       if (GetKeyState(VK_UP) and $8000 = $8000) then begin
//         Key := 0;
//
//         gpxMAHNB01013B_CheckDetailAction(OldRowLogic - 1, HNsGrid1.LogicalRow -1 ,1);
//
//         gpxMAHNB01013B_CheckDetailAction(OldRowLogic - 1, HNsGrid1.LogicalRow -1,2);
//
//         //グリッド最上位行キーダウンイベント
//         if (FullModel.ReadOnly = False) then
//         begin
//            FullModel.SetFocus;
//         end
//         else if (CustomerCode.ReadOnly = False) then
//         begin
//           CustomerCode.SetFocus;
//         end
//         else if (SalesEmployeeCd.ReadOnly = False) then
//         begin
//           SalesEmployeeCd.SetFocus;
//         end;
//       end
//       else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
//       begin
//          if (HNsGrid1.Col = ctCol_BLGoodsCode) then
//          begin
//            Key := 0;
//          end
//          else if (HNsGrid1.Col = ctCol_GoodsName) then
//          begin
//             if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, HNsGrid1.Row] = True) then
//             begin
//                Key := 0;
//             end;
//          end;
//       end;
//    end;
//
//
//  END
//  else if (Form4.ActiveControl = HNsGrid1) and (GetKeyState(VK_UP) and $8000 = $8000) then
//  begin
//     if (HNsGrid1.Row mod 2 = 0) and (HNsGrid1.Col = ctCol_BLGoodsCode) then
//     begin
//
//        if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, HNsGrid1.Row - 2] = True) then
//        begin
//          Key := 0;
//
//          gpxMAHNB01013B_CheckDetailAction(OldRowLogic - 1, HNsGrid1.LogicalRow -1 ,1);
//
//          gpxMAHNB01013B_CheckDetailAction(OldRowLogic - 1, HNsGrid1.LogicalRow -1,2);
//
//          //グリッド最上位行キーダウンイベント
//          if (FullModel.ReadOnly = False) then
//          begin
//             FullModel.SetFocus;
//          end
//          else if (CustomerCode.ReadOnly = False) then
//          begin
//            CustomerCode.SetFocus;
//          end
//          else if (SalesEmployeeCd.ReadOnly = False) then
//          begin
//            SalesEmployeeCd.SetFocus;
//          end;
//        end;
  // end;
  // HNsGrid1.ShowInplaceEdit;
  // end;

  // Up/Downキーセル移動処理
  // ---------UPD 2010/06/02---------->>>>>
  // if ((Form4.ActiveControl = HNsGrid1) and (xMoveUpDownCell(False))) then
  // begin
  // Key := 0;
  // end;
  if moveUpDownCellCheck = True then
  begin
    // if ((Form4.ActiveControl = HNsGrid1) and (xMoveUpDownCell(False))) then // DEL 2010/07/01
    // if ((Form4.ActiveControl = HNsGrid1) and (PrevCtrlForhNsGrid = False) and (xMoveUpDownCell(False, Sender))) then // ADD 2010/07/01 // DEL 2010/10/27 障害・改良対応(８月リリース案件)の63
    if ((Key <> VK_PROCESSKEY) and (Form4.ActiveControl = HNsGrid1) and (PrevCtrlForhNsGrid = False) and (xMoveUpDownCell(False, Sender))) then // ADD 2010/07/01 　// ADD 2010/10/27 障害・改良対応(８月リリース案件)の63
    begin
      Key := 0;
    end;
  end;

  // HNsGrid1.ShowInplaceEdit; //ADD 2010/07/01

  // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- >>>>>
  if isOptPermitForKoei then
  begin
    if (activeBK = 'HNsGrid1') and
      ((GetKeyState(VK_UP) and $8000 = $8000)
        or (GetKeyState(VK_DOWN) and $8000 = $8000)
        or (GetKeyState(VK_RETURN) and $8000 = $8000)
        or (GetKeyState(VK_TAB) and $8000 = $8000))then
    begin
       xSetSalesUnPrcBtnEnabled();
    end;
  end;
  // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- <<<<<

  moveUpDownCellCheck := True;
  // ---------UPD 2010/06/02----------<<<<<

  // --- UPD 2010/05/31 ----------<<<<<

  if (Key = 0) then
  begin
    if (OldRowLogic <> HNsGrid1.LogicalRow) then
    begin
      // ----------DEL 2010/07/01----------->>>>>
      // // ----------UPD 2010/07/01----------->>>>>
      // //gpxMAHNB01013B_CheckDetailAction(OldRowLogic - 1, HNsGrid1.LogicalRow -1 ,1);
      // // 通常入力の場合、粗利チェックを行う。
      // if (i_InputType = 0) then
      // begin
      // gpxMAHNB01013B_CheckDetailAction(OldRowLogic - 1, HNsGrid1.LogicalRow -1 ,1);
      // gpxMAHNB01013B_CheckDetailAction(OldRowLogic - 1, HNsGrid1.LogicalRow -1,2);
//        end;
//        // ----------UPD 2010/07/01-----------<<<<<
//
//        xSlipMemoInfoFormSetting(HNsGrid1.LogicalRow);
//
//        // 車両情報設定処理
//        xCarInfoFormSetting(HNsGrid1.LogicalRow);
//
//        // --- UPD 2010/05/31 ---------->>>>>
//
//        HNsGrid1.FocusCell(HNsGrid1.Col,HNsGrid1.Row);
//
//        // 明細部変更後発生イベント処理
//        xSalesSlipDetailInput_DetailChanged(HNsGrid1.LogicalRow);
//
//        // --- UPD 2010/05/31 ----------<<<<<
     // ----------DEL 2010/07/01----------<<<<<
     end;
     xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼
     // --- ADD 2010/06/02 ---------->>>>>
     if ((OldCol <> HNsGrid1.Col) or (OldRow <> HNsGrid1.Row)) then
     begin
       xActiveCellButtonEnabledControl(xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col),HNsGrid1.LogicalRow);
     end;
     // --- ADD 2010/06/02 ----------<<<<<
  end;


  //カラー・トリム・装備画面先頭行・最終行 移動無し
  if Form4.ActiveControl = HNsGrid2 then
  begin
    if GetKeyState(VK_RETURN) and $8000 = $8000 then
    begin
      HNsGrid2ClickCell(Sender, HNsGrid2.LogicalRow, 3);
      Key := 0;
    end;

    if HNsGrid2.LogicalRow = HNsGrid2.RowCount - 1 then
    begin
      if (GetKeyState(VK_DOWN) and $8000 = $8000) or (GetKeyState(VK_RIGHT) and $8000 = $8000) then
      begin
         Key := 0;
      end;
    end else if HNsGrid2.LogicalRow = 1 then
    begin
      if (GetKeyState(VK_UP) and $8000 = $8000) or (GetKeyState(VK_LEFT) and $8000 = $8000)  then
      begin
         Key := 0;
      end;
    end;
  end;

  if Form4.ActiveControl = HNsGrid4 then
  begin
    if GetKeyState(VK_RETURN) and $8000 = $8000 then
    begin
      HNsGrid4ClickCell(Sender, HNsGrid4.LogicalRow, 3);
      Key := 0;
    end;

    if HNsGrid4.LogicalRow = HNsGrid4.RowCount - 1 then
    begin
      if (GetKeyState(VK_DOWN) and $8000 = $8000) or (GetKeyState(VK_RIGHT) and $8000 = $8000) then
      begin
         Key := 0;
      end;
    end else if HNsGrid4.LogicalRow = 1 then
    begin
      if (GetKeyState(VK_UP) and $8000 = $8000) or (GetKeyState(VK_LEFT) and $8000 = $8000)  then
      begin
         Key := 0;
      end;
    end;
  end;

  if Form4.ActiveControl = HNsGrid3 then
  begin
    if GetKeyState(VK_RETURN) and $8000 = $8000 then
    begin
      Key := 0;
    end;

    if HNsGrid3.LogicalRow = HNsGrid3.RowCount - 1 then
    begin
      if (GetKeyState(VK_RETURN) and $8000 = $8000) or (GetKeyState(VK_DOWN) and $8000 = $8000) or (GetKeyState(VK_RIGHT) and $8000 = $8000) then
      begin
         Key := 0;
      end;
    end else if HNsGrid3.LogicalRow = 1 then
    begin
      if (GetKeyState(VK_UP) and $8000 = $8000) or (GetKeyState(VK_LEFT) and $8000 = $8000)  then
      begin
         Key := 0;
      end;
    end;
  end;

  // ----------UPD 2010/07/13--------->>>>>
  // ---- ADD 2010/06/02 ------------->>>>>
    // ---- UPD 2010/06/028 ------------->>>>>
//  if (Form4.ActiveControl = PartySaleSlipNum) then
  //if ((Form4.ActiveControl = PartySaleSlipNum) or (Form4.ActiveControl = AddresseeConfirmationBtn)) then
  // ---- UPD 2010/06/028 -------------<<<<<

  if xTabFooterContainsFocus() then
  // ----------UPD 2010/07/13---------<<<<<
  begin

    if (setSaveFlag = 0) then
    begin
       if (i_searchPartsMode = 2) then
       begin
          // ----------UPD 2010/07/13--------->>>>>
          //xSettingFocus('GoodsNoTP');
          xSettingFocus2('GoodsNoTP');
          // ----------UPD 2010/07/13---------<<<<<
       end else
       if (i_searchPartsMode = 1) then
       begin
          // ----------UPD 2010/07/13--------->>>>>
          //xSettingFocus('BLGoodsCodeTP');
          xSettingFocus2('BLGoodsCodeTP');
          // ----------UPD 2010/07/13---------<<<<<
       end;
    end
    else
    if (setSaveFlag = 1) then
    begin
      // ----------UPD 2010/07/01--------->>>>>
      //SectionCode.SetFocus;
      InitialSetFocusTick();
      // ----------UPD 2010/07/01---------<<<<<
    end;

    setSaveFlag := -1;

  end;

  setSaveFlag := -1; // ADD 2011/03/28
  // ---- ADD 2010/06/02 -------------<<<<<

  // UPD 2010/08/26   ----------->>>>
  // --- ADD 2010/08/13
  //if (Form4.ActiveControl <> HNsGrid1) then // DEL 2010/10/15
  if ((Form4.ActiveControl <> HNsGrid1) and focusIntoGridCheck) then  // ADD 2010/10/15
  begin
    // --------ADD 2010/10/15--------->>>>>
    for i := 1 to HNsGrid1.LogicalRowCount do
    begin
      if (gpxMAHNB01013B_GridJoinCheck(0, i - 1, -1, 9) = 1) then
      begin
        gridJoinCheck := True;
        Break;
      end;
    end;
    if gridJoinCheck = False then
    begin
      logicalRowInt := 0;
    end;
    // --------ADD 2010/10/15---------<<<<<
    if (moveFocusFlg and (logicalRowInt <> 0)) then
    begin

       //if (GetKeyState(VK_DOWN) and $8000 = $8000)  then // DEL 2010/10/15
       if ((GetKeyState(VK_DOWN) and $8000 = $8000) or (GetKeyState(VK_UP) and $8000 = $8000))  then  // ADD 2010/10/15
       begin
         if (i_searchPartsMode = 2) then
         begin
            xSettingFocus3('GoodsNoTP');
            xSettingFocus4('GoodsNoTP');
         end else
         if (i_searchPartsMode = 1) then
         begin
            xSettingFocus3('BLGoodsCodeTP');
            xSettingFocus4('BLGoodsCodeTP');
         end;
       end else if (GetKeyState(VK_RETURN) and $8000 = $8000) then
       begin
         if (i_searchPartsMode = 2) then
         begin
            xSettingFocus2('GoodsNoTP');
            xSettingFocus3('GoodsNoTP');

         end else
         if (i_searchPartsMode = 1) then
         begin
            xSettingFocus2('BLGoodsCodeTP');
            xSettingFocus3('BLGoodsCodeTP');
         end;
       end;
    end
    else if (moveFocusFlg and (logicalRowInt = 0)) then
    begin
       if ((GetKeyState(VK_RETURN) and $8000 = $8000)
          or (GetKeyState(VK_UP) and $8000 = $8000)  // ADD 2010/10/15
          or (GetKeyState(VK_DOWN) and $8000 = $8000))  then
       begin
         if (i_searchPartsMode = 2) then
         begin
            xSettingFocus2('GoodsNoTP');
         end else
         if (i_searchPartsMode = 1) then
         begin
            xSettingFocus2('BLGoodsCodeTP');
         end;
         // -------ADD 2010/10/20------->>>>>
         // 車両情報設定処理
         xCarInfoFormSetting(logicalRowInt + 1);
         // -------ADD 2010/10/20-------<<<<<
       end;
    end;
  end;
   // --- ADD 2010/08/13
   // UPD 2010/08/26   -----------<<<<

   vk_Up_Check := False;// ADD 2010/07/01
   vk_Down_Check := False;// ADD 2010/07/01
   focusFlg := False;// ADD 2010/07/01
   PrevCtrlForhNsGrid := False; // ADD 2010/07/01
   focusIntoGridCheck := False;  // ADD 2010/10/15

   // ----------- ADD 連番729 2011/08/18 -------------------->>>>>
   if Form4.ActiveControl <> HNsGrid1 then begin
     detailCopyButton.Enabled := False;
     toolMenu_detailCopyBtn.Enabled := False;
   end;
   // ----------- ADD 連番729 2011/08/18 --------------------<<<<<
   // --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ------------------>>>>>
   //if Form4.ActiveControl <> HNsGrid1 then begin // DEL  譚洪 2015/10/26 Redmine#47609
   if (Form4.ActiveControl <> HNsGrid1) and isOptPermitForFuJi then begin // ADD  譚洪 2015/10/26 Redmine#47609
     UOEDataGet.Enabled := False;
     toolMenu_UOEDataGet.Enabled := False;
   end;
   // --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ------------------<<<<<

   // --- DEL  30757 佐々木　貴英 K2015/10/05 ----------------->>>>>
   //// --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 ------------------>>>>>
   //if Form4.ActiveControl <> HNsGrid1 then begin
   //  UOEDataGet.Enabled := False;
   //  toolMenu_UOEDataGet.Enabled := False;
   //end;
   // --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 ------------------<<<<<
   // --- DEL  30757 佐々木　貴英 K2015/10/05 -----------------<<<<<

  // --- ADD 2012/05/24 No.849 ---------->>>>>
  if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp) then
  begin
    //明細備考に一時的にフォーカスを当てる
    HNsGrid1.FocusCell(26, 2);

    SalesSlipNum.setFocus;
    Form4.ActiveControl := SalesSlipNum;
  end;
  // --- ADD 2012/05/24 No.849 ----------<<<<<
  //// --- DEL 2013/12/11 T.Nishi ---------->>>>>
  //// --- ADD 2013/05/15 T.Nishi ---------->>>>>
  //finally
  //  gKeyDownEventFlg := false;
  //end;
  //// --- ADD 2013/05/15 T.Nishi ----------<<<<<
  // --- DEL 2013/12/11 T.Nishi ---------->>>>>
end;

// --- ADD K2019/07/31 陳艶丹　PMKOBETSU-539の対応 ---------->>>>>
procedure TForm4.FormMouseWheel(Sender: TObject; Shift: TShiftState;
  WheelDelta: Integer; MousePos: TPoint; var Handled: Boolean);
begin
  // 森川オプションありの場合、マウスホイール動作は無効化になる。
  if(isOptPermitForMoriKawa) then begin
    Handled := true;
  end;
end;
// --- ADD K2019/07/31 陳艶丹　PMKOBETSU-539の対応 ----------<<<<

procedure TForm4.acceptAnOrderAddUpButtonClick(Sender: TObject);
var
inputMode, salesRowNo, searchType, rowCount, isResult, ctTabKeyAddInfo, settingAddInfoVisibleFlg, resultNum, saveStatus, i: Integer;
salesDetailArray: TSalesSlipInputCustomArrayA2;
// --- ADD m.suzuki 2010/06/12 ---------->>>>>
//isMakeQR: Boolean; // DEL 2011/02/11
isMakeQR, isErrorFlag: Boolean; // ADD 2011/02/11
// --- ADD m.suzuki 2010/06/12 ----------<<<<<
begin

  if Form4.ActiveControl = HNsGrid1 then
  begin
      rowCount := 0;
      if HNsGrid1.RowSelectCount >= 0 then
      begin
          rowCount := HNsGrid1.RowSelectCount;
      end;

      gpxMAHNB01013B_AcceptAnOrderReferenceSearch(rowCount, CustomerCode.Text);
      gpxMAHNB01013B_GetSaveStatus(saveStatus);

      if (saveStatus = 1)  then
      begin
        //>>> ADD  2012/05/17 SCM障害№162対応
        // データ取得・表示終了まで終了ボタン使用不可
        b_CloseFlg := True;
        //<<< ADD  2012/05/17 SCM障害№162対応

        // 売上情報
        xSetDisplay();
        // 売上金額変更後発生イベント処理
        xSalesPriceChanged();

        // 車両情報画面表示処理
        salesRowNo := xGetActiveRowSalesRowNo();
        searchType := 0;
        xSetDisplayCarInfo(salesRowNo, searchType);
        //画面表示処理（明細情報）
        // --- UPD 2010/05/31 ---------->>>>>
        //xSetDisplayDetailInfo();
        xSetDisplayDetailInfo(salesRowNo);
        // --- UPD 2010/05/31 ----------<<<<<

        xSlipMemoInfoFormSetting(salesRowNo);
        // 明細データ設定
        xDeatilClearDisplay();

        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        // --- ADD 2010/05/31 ---------->>>>>
        xInitialRow;
        // --- ADD 2010/05/31 ----------<<<<<
        // --- ADD 2010/07/14 ---------->>>>>
        if (salesDetailArray.Csafield1Count > i_RowMaxCount) then
        begin
          xInitialRow_AddUp(salesDetailArray);
        end;
        // --- ADD 2010/07/14 ---------->>>>>
        xSetDetailRowFormC(salesDetailArray,-1);

        xSettingGrid();

        HNsGrid1.SetFocus;

        //HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, HNsGrid1.LogicalRow * 2 + 1);// DEL 2010/07/16
        HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, 3); // ADD 2010/07/16
        // HNsGrid1.ActiveRowShow := true;
        // --- ADD K2021/07/21 譚洪 BLINCIDENT-3059対応 ----->>>>>
        salesRowNo := xGetActiveRowSalesRowNo();
        // 車両情報設定処理
        xCarInfoFormSetting(salesRowNo);
        // --- ADD K2021/07/21 譚洪 BLINCIDENT-3059対応 -----<<<<<

        xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

        //>>> ADD  2012/05/17 SCM障害№162対応
        // 終了ボタン使用可能
        b_CloseFlg := False;
        //<<< ADD  2012/05/17 SCM障害№162対応

      end;
  end else begin
      //データ保存確認
      // --- UPD m.suzuki 2010/06/12 ---------->>>>>
      //gpxMAHNB01013B_ShowSaveCheckDialog(true, resultNum, CarMngCode.Text) ;
      // --- ADD 2010/07/16 ---------->>>>>
      if checkBox_MakeQR.Visible then
      BEGIN
          isMakeQR := checkBox_MakeQR.Checked;
      END else begin
          isMakeQR := False;
      END;
      //isMakeQR := checkBox_MakeQR.Checked;
      // --- ADD 2010/07/16 ----------<<<<<
      gpxMAHNB01013B_ShowSaveCheckDialog(true, resultNum, CarMngCode.Text, isMakeQR);
      checkBox_MakeQR.Checked := isMakeQR;
      // --- UPD m.suzuki 2010/06/12 ----------<<<<<

      // ---ADD 2011/02/11------------->>>>
      gpxMAHNB01013B_GetErrorFlag(isErrorFlag);
      if isErrorFlag then
      begin
        _isErrorFlag := isErrorFlag;
        newButton.Visible := False; // 新規(F9)
        saveButton.Visible := False; // 確定(F10)
        deleteSlipButton.Visible := False; // 伝票削除(F12)
        returnButton.Visible := False; // 戻る(F2)
        forwardButton.Visible := False; // 進む(F3
        guideButton.Visible := False; // ガイド(F5)
        searchCarChangeButton.Visible := False; // 検索切替(F4)
        ReadSlipButton.Visible := False; // 伝票呼出(X)
        shipmentAddUpButton.Visible := False; // 貸出計上(I)
        acceptAnOrderAddUpButton.Visible := False; // 受注計上(H)
        estimateAddUpButton.Visible := False; // 見積計上(Q)
        SlipHeaderCopyButton.Visible := False; // 見出貼付(F6)
        updateButton.Visible := False; // 更新(V)
        toolRetryButton.Visible := False; // 元に戻す(U)
        toolRedSlipButton.Visible := False; // 赤伝(R)
        toolReturnSlipButton.Visible := False; // 返品(Y)
        toolCopySlipButton.Visible := False; // 伝票複写(P)
        toolSetupButton.Visible := False; // 設定(O)
        toolReNewalbtn.Visible := False; // 最新情報(A)
        toolReferenceListButton.Visible := False; // 問合せ一覧
        toolHisSearchButton.Visible := False; // 履歴検索 // ADD　2018/09/04 譚洪　履歴自動表示の対応
        toolGetTaxRateButton.Visible := False; // 税率入力 // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応
        toolEBooksButton.Visible := False; // 電帳.DX // ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応
        //toolReplyTransactionButton.Visible := False; // 回答処理
        toolMailButton.Visible := False; // メール
        dateUpdateBottun.Visible := False; // 日付修正  // ADD 2011/08/02
        detailCopyButton.Visible := False; // 明細貼付  // ADD 連番729 2011/08/18
        UOEDataGet.Visible := False; // ADD  黄興貴 K2015/04/29 回答取込パタン追加
        discountAllLineBottun.Visible := False; // 一括値引 //ADD 2013/01/24 鄧潘ハン REDMINE#34141
        allSecInfoButton.Visible := False; // 在庫情報 // ADD K2015/04/01 高騁 森川部品個別依頼
        DorpdownList.Visible := False;
        // ---UPD 2011/03/07------------->>>>
//        SalesSlipNum.Visible := False; // 伝票番号
//        SalesSlipNumBtn.Visible := False; // 伝票番号BTN
        pnl8.Visible := False;    //伝票番号
        // ---UPD 2011/03/07-------------<<<<
      end;
      // ---ADD 2011/02/11-------------<<<<
      //データ保存不要、「いいえ」、保存okの場合、出荷計上処理を行う
      if (resultNum = 0) or (resultNum = 1)  or (resultNum = 4) then
      begin
        if resultNum = 0 then
        begin
          xDeatilClearDisplay();

           // 保存状態取得
           gpxMAHNB01013B_GetSaveStatus(saveStatus);
           xdoSaveAfter(saveStatus);

           //>>> ADD  2012/05/17 SCM障害№162対応
           // データ取得・表示終了まで終了ボタン使用不可
           b_CloseFlg := True;
           //<<< ADD  2012/05/17 SCM障害№162対応

           //>>>2010/11/08
           xSetDisplay();
           xDeatilClearDisplay();
           xSetDisplayDetailInfo(salesRowNo);
           xChangeSearchModeReflect();
           xSettingAddInfoVisible();
           InitialSetFocusTick();
           //<<<2010/11/08

           //>>> ADD  2012/05/17 SCM障害№162対応
           // 終了ボタン使用可能
           b_CloseFlg := False;
           //<<< ADD  2012/05/17 SCM障害№162対応

        end;

        gpxMAHNB01013B_AcceptAnOrderAddup(False, isResult);
        // HNsGrid 設定前
        if isResult = 1 then
        begin
          //>>> ADD  2012/05/17 SCM障害№162対応
          // データ取得・表示終了まで終了ボタン使用不可
          b_CloseFlg := True;
          //<<< ADD  2012/05/17 SCM障害№162対応
          // 売上情報
          xSetDisplay();

          // 売上金額変更後発生イベント処理
          xSalesPriceChanged();

          // 車両情報画面表示処理
          salesRowNo := xGetActiveRowSalesRowNo();
          searchType := 0;
          xSetDisplayCarInfo(salesRowNo, searchType);

          //画面表示処理（明細情報）
          // --- UPD 2010/05/31 ---------->>>>>
          //xSetDisplayDetailInfo();
          xSetDisplayDetailInfo(salesRowNo);
          // --- UPD 2010/05/31 ----------<<<<<

          // 明細データ設定
          xDeatilClearDisplay();
          gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

          // --- ADD 2010/05/31 ---------->>>>>
          xInitialRow;
          // --- ADD 2010/05/31 ----------<<<<<

          // --- ADD 2010/07/14 ---------->>>>>
          if (salesDetailArray.Csafield1Count > i_RowMaxCount) then
          begin
            xInitialRow_AddUp(salesDetailArray);
          end;
          // --- ADD 2010/07/14 ---------->>>>>

          xSetDetailRowFormC(salesDetailArray,-1);

          xSettingGrid();
          xDeleteEmptyRow();

          HNsGrid1.HideInplaceEdit; // ADD 呉元嘯 2021/04/29 BLINCIDENT-2982の対応
          HNsGrid1.SetFocus;

          //HNsGrid1.FocusCell(ctCol_SupplierCd, HNsGrid1.LogicalRow * 2 + 1);// DEL 2010/07/16
          HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, 3);// ADD 2010/07/16
          HNsGrid1.ShowInplaceEdit; // ADD 呉元嘯 2021/04/29 BLINCIDENT-2982の対応

          // HNsGrid1.ActiveRowShow := true;

          // 車両情報設定処理
          salesRowNo := xGetActiveRowSalesRowNo();

          // ガイドボタンツール有効無効設定処理
          xSettingGuideButtonToolEnabled(OldCtrl);
          xSettingVisible();

          xSlipMemoInfoFormSetting(salesRowNo);
          //追加情報タブ項目Visible設定
          xSettingAddInfoVisible();
          //伝票備考、伝票備考２、伝票備考３の入力桁数を制御する
          xSetNoteCharCnt();
          xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);
          // --- DEL 2010/06/17 ---------->>>>>
          //OldCtrl := Form4.ActiveControl;
          // --- DEL 2010/06/17 ----------<<<<<
          //>>> ADD  2012/05/17 SCM障害№162対応
          // 終了ボタン使用可能
          b_CloseFlg := False;
          //<<< ADD  2012/05/17 SCM障害№162対応
          // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
          //値引モード
          if(discountAllLineflag)then
          begin
              //「一括値引」→「売上」
              xNotDiscountInitalSet();
          end;
          // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
        end;
      //保存確認ダイアログデータ保存失敗の場合、明細にFocus設定する
      end else begin
        if resultNum =3 then
        begin
            // HNsGrid1
            HNsGrid1.SetFocus;
        end;

      end;

   end;
      // フッタタブ位置セット
      uTabControl_Footer.ActivePage := ts1;
      xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼
end;

procedure TForm4.AcptAnOdrStatusDisplayComBoChange(Sender: TObject);
var
  salesSlip : TSalesSlip;
  salesDetailArray: TSalesSlipInputCustomArrayA2;
begin
//  xWrite('start1 + AcptAnOdrStatusDisplayComBoChange******************');
  if (not settingGridFlg) and (comBoChangeflag)then
//  if (not settingGridFlg) then
  begin

    comBoChangeflag := false;
    gpxMAHNB01012B_GetSalesSlip(salesSlip);

    // 売上形式変更処理
    xChangeAcptAnOdrStatus(salesSlip, True);

    // 明細グリッドセル設定処理
    gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);
    xSetDetailRowFormC(salesDetailArray,-1);

    xSettingGrid();
    xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);
    xToolButtonSettingDetail();
    comBoChangeflag := true;

    xSalesPriceChanged;// ADD 2013/04/16 T.Miyamoto
  end;
//  xWrite('end11 + AcptAnOdrStatusDisplayComBoChange******************');
end;

// --- ADD 2010/06/26 ---------->>>>>
procedure TForm4.AcptAnOdrStatusDisplayComBoEnter(Sender: TObject);
begin
  // --- ADD 2010/07/01 ---------->>>>>
  //AcptAnOdrStatusDisplayComBo.DroppedDown := True;
  if ((GetKeyState(VK_RETURN) and $8000 = $8000) or
    (GetKeyState(VK_TAB) and $8000 = $8000) or
    (GetKeyState(VK_RIGHT) and $8000 = $8000) or
    (GetKeyState(VK_LEFT) and $8000 = $8000) or
    (GetKeyState(VK_DOWN) and $8000 = $8000) or
    (GetKeyState(VK_UP) and $8000 = $8000)) then
  begin
  AcptAnOdrStatusDisplayComBo.DroppedDown := True;
end;
  // --- ADD 2010/07/01 ----------<<<<<
end;
// --- ADD 2010/06/26 ----------<<<<<

procedure TForm4.AddresseeConfirmationBtnClick(Sender: TObject);
var
  salesSlip: TSalesSlip;
begin
  gpxMAHNB01012B_AddresseeConfirmationClick(salesSlip);

  SetDisplayHeaderFooterInfo(salesSlip_disp);
  //画面表示処理（売上金額合計情報）
  xSetDisplayTotalPriceInfo(salesSlip_disp);
end;

//procedure TForm4.ApplicationEvents1Activate(Sender: TObject);
//var
//  AGrid: THNsGrid;
//begin
//  if (Self.ActiveControl is THNsGrid) then
//  begin
//    AGrid :=  (Self.ActiveControl as THNsGrid);
//
//    if (AGrid.NormalEdit <> Nil) then
//    begin
//      AGrid.NormalEdit.SetFocus;
//    end;
//  end;
//end;

//*************************************************************************
// 得意先情報画面格納処理
//*************************************************************************
procedure TForm4.CustomerCodeChange(Sender: TObject);
var
clearAddCarInfo, canChangeFocus, reCalcSalesPrice, guideStart, clearDetailInput, clearCarInfo, reCalcSalesUnitPrice, clearRateInfo : Boolean;
salesSlipCurrent : TSalesSlip;
salesRowNo : Integer;
carInfo :TCarInfo;
begin


  reCalcSalesUnitPrice := False;  //ADD 2015/08/31 Wakita

   if ((Length(Trim(CustomerCode.Text)) = 8) and (customerCodeExitFlg)) then
   begin

    gpxMAHNB01012B_AfterCustomerCodeFocus(salesSlip_disp, CustomerCode.GetInt(), customerInfo, clearAddCarInfo, canChangeFocus,
                                                  reCalcSalesPrice, guideStart, clearDetailInput, clearCarInfo, reCalcSalesUnitPrice, clearRateInfo);
     // 得意先情報画面格納処理
     xSetDisplayCustomerInfo(customerInfo);

     xGetTaxRateName(salesSlip_disp);   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応

   end;
end;

procedure TForm4.ArrowKeyControl1ChangeFocus(PrevCtrl: TWinControl;
  var NextCtrl: TWinControl; VkCode: Word);
  // ADD 2010/10/08 -- >>>
  var
  status, rowIndex, colIndex : Integer;
  value : string;
  salesRowNo, iRow : Integer;
  // ADD 2010/10/08 -- <<<
  AGridCoord : TGridCoord; // 2010/10/27
  gridJoinCheck : Boolean; // ADD 2010/11/01
  i : Integer; // ADD 2010/11/01
  //flag: Boolean;// ADD 2011/12/01 YANGMJ REDMINE#8344 // DEL 2012/01/18 YANGMJ ソースマージ
begin
//  // THNsGridの編集用コンポーネントを判別して無視する
//  if ((Assigned(PrevCtrl) and (PrevCtrl.Owner is THNsGrid)) or
//        (Assigned(NextCtrl) and (NextCtrl.Owner is THNsGrid))) then Exit;
//
//  if((PrevCtrl <> nil) and (PrevCtrl.Name = 'SlipPrintDivCd') and (VkCode = VK_RETURN)) then NextCtrl := PrevCtrl;
//
//  if (NextCtrl is TStatusBar) or(NextCtrl is TToolBar) then Exit;

    //>>>2010/10/27
    enterOne := Now();  // ADD 2012/01/11 Redmine#27388
    enterFlg := true;   // ADD 2012/01/11 Redmine#27388
    _isDoubleFlag := False;   // ADD 2012/01/17 Redmine27300
    if (VkCode = VK_Return) and (PrevCtrl.name = '') then begin
      NextCtrl := HNSGrid1;
      iFlg := 1;
    end;
    //<<<2010/10/27


  // --- ADD 2010/08/13
  if ((NextCtrl <> nil) and (NextCtrl.Name = 'tlb1')) then
  begin
    tblBitDivflg := True;
  end
  else
  begin
    tblBitDivflg := False;
  end;

  // ADD 2010/10/08 -- >>>
  //if ((NextCtrl <> nil) and (NextCtrl.Name = 'HNsGrid1')) then  //DEL 2011/07/19
  if ((NextCtrl <> nil) and (NextCtrl.Name = 'HNsGrid1') and (salesSlip_disp.InputMode <> ctINPUTMODE_SalesSlip_ReadOnly)) then //ADD 2011/07/19
  begin
    grid1_focusFlg := True;
    prevCtrlBak := PrevCtrl;
  end
  else
  begin
    grid1_focusFlg := False;
  end;

  //----ADD START 2011/07/19------------>>>>
  if salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly then
  begin
     if (NextCtrl <> nil) and (NextCtrl.Name = 'HNsGrid1') then
     begin
        NextCtrl := PrevCtrl;
     end
  end;
  //----ADD END 2011/07/19------------<<<<

  if (Trim(FullModel.Text) <> '') then
  begin
     FirstEntryDate.ExtCase.RetKey := True;
     SalesDate.ExtCase.RetKey := True;
  end;

//  if ((PrevCtrl <> nil) and (PrevCtrl.Name = 'HNsGrid1')) then
//  begin
//     rowIndex := HNsGrid1.Row;
//     colIndex := HNsGrid1.Col;
//     iRow := rowIndex div 2 - 1;
//     salesRowNo := RCHNB01003UADM.SalesRowNo[iRow];
//     value := HNsGrid1.CurrentCell;
//     //f3_enableFlg := True;
//
//     xPriceCheckProc(colIndex, rowIndex, iRow, salesRowNo, value);
//
//      status := gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,1);
//      if (status = -1) then
//      begin
//          gpxMAHNB01013B_GetGrossProfitRateFlg(grossProfitRateFlg);
//          if (grossProfitRateFlg) then
//          begin
//            checkFlg := True;
//            NextCtrl := HNsGrid1;
//            HNsGrid1.SetFocus;
//            HNsGrid1.GotoCell(ctCol_SalesRate, (rowIndex div 2) * 2 + 1);
//            HNsGrid1.FocusCell(9, (rowIndex div 2) * 2 + 1);
//            exit;
//          end
//          else
//          begin
//            status := gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,2);
//
//            if (status = -1) then
//            begin
//              NextCtrl := HNsGrid1;
//              HNsGrid1.GotoCell(ctCol_SalesRate, (rowIndex div 2) * 2 + 1);
//              HNsGrid1.FocusCell(9, (rowIndex div 2) * 2 + 1);
//              exit;
//            end
//            else
//            begin
//              checkFlg := False;
//            end;
//          end;
//      end
//      else if (status = 3) then
//      begin
//        HNsGrid1.SetFocus;
//        NextCtrl := HNsGrid1;
//        HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, (rowIndex div 2) * 2 + 1);
//        HNsGrid1.GotoCell(ctCol_SalesUnPrcDisplay, (rowIndex div 2) * 2 + 1);
//        exit;
//      end
//      else if (status = 1) then
//      begin
//        status := gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,2);
//
//        if (status = -1) then
//        begin
//          NextCtrl := HNsGrid1;
//          HNsGrid1.GotoCell(ctCol_SalesRate, (rowIndex div 2) * 2 + 1);
//          HNsGrid1.FocusCell(9, (rowIndex div 2) * 2 + 1);
//          exit;
//        end
//        else
//        begin
//          //f3_focusFlg := True;
//        end;
//      end
//      else
//      begin
//        status := gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,2);
//
//        if (status = -1) then
//        begin
//          NextCtrl := HNsGrid1;
//          HNsGrid1.GotoCell(ctCol_SalesRate, (rowIndex div 2) * 2 + 1);
//          HNsGrid1.FocusCell(9, (rowIndex div 2) * 2 + 1);
//          exit;
//        end
//        else if (status = 1) then
//        begin
//          //f3_focusFlg := True;
//        end
//        else
//        begin
//          //f3_focusFlg := True;
//        end;
//      end;
//  end;

  if ((NextCtrl <> nil) and (NextCtrl.Parent.Name <> 'HNsGrid1')
      and (NextCtrl.Name <> 'btnCopyStockBefLine') and (NextCtrl.Name <> 'btnCopyStockAllLine'))  then
  begin
    btnCopyStockBefLine.Enabled := False;
    btnCopyStockAllLine.Enabled := False;
  end;
   // -----ADD 2010/10/08------<<<<<<
  // --- DEL 2012/06/13 Wakita ---------->>>>>
  ////---------ADD 2011/07/20 ------------>>>>>
  //if ((PrevCtrl <> nil) and (PrevCtrl.name = 'HNsGrid1')) then
  //begin
  //  rowChangedFlg := True;
  //end;
  ////---------ADD 2011/07/20 ------------<<<<<
  // --- DEL 2012/06/13 Wakita ----------<<<<<
  // --- ADD 2012/06/14 Wakita ---------->>>>>
  if ((PrevCtrl <> nil) and (PrevCtrl.name = 'HNsGrid1')) then
  begin
    rowChangedFlg := True;
  end;
  // --- ADD 2012/06/14 Wakita ----------<<<<<

//if (i_searchPartsMode = 1) then   //DEL 2011/07/19
//if (i_searchPartsMode = ctBLCodeSearch) or (i_searchPartsMode = ctGoodsNoSearch) then  //ADD 2011/07/19 //DEL 2011/08/16
if (i_searchPartsMode = 1) then   //ADD 2011/08/16
begin
  if ((FullModel.DataText = '')
     and (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal)
     and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum)) then
  begin
     if ((NextCtrl <> tlb1)
        and (NextCtrl <> SectionCode)
        and (NextCtrl <> SubSectionCode)
        and (NextCtrl <> CustomerCode)
        and (NextCtrl <> SalesEmployeeCd)
        and (NextCtrl <> FrontEmployeeCd)
        and (NextCtrl <> SalesInputCode)
        and (NextCtrl <> SalesSlipNum)
        and (NextCtrl <> AcptAnOdrStatusDisplayComBo)
        and (NextCtrl <> SalesSlipDisplayComBo)
        and (NextCtrl <> SalesDate)
        and (NextCtrl <> SectionCodeBtn)
        and (NextCtrl <> SubSectionCodeBtn)
        and (NextCtrl <> CustomerCodeBtn)
        and (NextCtrl <> SalesEmployeeCdBtn)
        and (NextCtrl <> FrontEmployeeCdBtn)
        and (NextCtrl <> SalesInputCodeBtn)
        and (NextCtrl <> SalesSlipNumBtn)
        and (NextCtrl <> CustomerClaimConfirmationBtn)
        and (NextCtrl <> CarMngCodeBtn)
        and (NextCtrl <> ModelDesignationNo)
        and (NextCtrl <> CategoryNo)
        and (NextCtrl <> EngineModelNm)
        and (NextCtrl <> FullModelBtn)
        and (NextCtrl <> FullModel)
        and (NextCtrl <> MakerCode)
        and (NextCtrl <> ModelCode)
        and (NextCtrl <> ModelSubCode)
        and (NextCtrl <> ModelFullName)
        and (NextCtrl <> ProduceFrameNo)
        and (NextCtrl <> ColorNo)
        and (NextCtrl <> TrimNo)
        and (NextCtrl <> FirstEntryDate)
        and (NextCtrl <> CarMngCode)
        and (NextCtrl <> ModelFullNameBtn)
        and (NextCtrl <> CustomerName)   // ADD 2010/11/02
        ) then
     begin
         NextCtrl := PrevCtrl;
     end;
  end;
end;
// --- ADD 2010/08/13

  // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- >>>>>
  if isOptPermitForKoei then
  begin
    salesUnPrcCalcFlg := False;
    if (NextCtrl <> nil) and (NextCtrl.Name <> '') and (NextCtrl.Name <> 'HNsGrid1') and (NextCtrl.Name <> 'btnSalesUnPrcCalc') then
    begin
       salesUnPrcCalcFlg := True;
       btnSalesUnPrcCalc.Enabled := False;
    end;
  end;
  // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- <<<<<

  moveUpDownCellCheck := True;// ADD 2010/06/02
  if((PrevCtrl <> nil) and (PrevCtrl.Name = 'EsctionCode') and (VkCode = VK_RETURN)) then NextCtrl := PrevCtrl;

  if (NextCtrl is TStatusBar) or(NextCtrl is TToolBar) or (NextCtrl = nil) then Exit;

  // ----------ADD 2010/06/02--------->>>>>
  if((PrevCtrl <> nil) and (PrevCtrl.Parent.Name = 'HNsGrid1')
  and (VkCode = VK_RETURN) and (PrevCtrl is TDateTimePicker)) then
  begin
    NextCtrl := HNsGrid1;

    // 仕入
    if i_InputType = 2 then
    begin
      FocusCellReserve.Col := ctCol_PartySalesSlipNum;
      FocusCellReserve.Row := HNsGrid1.LogicalRow;
      FocusCellReserve.Line := 1;
      xSetNextFocus(NextCtrl);
      // ----------DEL 2010/07/01---------->>>>>
//    end else
//    // 切替入力
//    if i_InputType = 1 then
//    begin
//      // 最終行
//      if HNsGrid1.LogicalRow = HNsGrid1.RowCount - 1 then
//      begin
//        xSetFootControl();
//      end else
//      // 最終行以外
//      begin
//        if (HNsGrid1.ReadOnly[ctCol_DtlNote, (HNsGrid1.LogicalRow + 1) * 2] = False) then
//        begin
//          // 次行明細備考
//          HNsGrid1.FocusCell(ctCol_DtlNote, (HNsGrid1.LogicalRow + 1) * 2);
//        end else if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, (HNsGrid1.LogicalRow + 1) * 2 + 1] = False) then
//        begin
//          // 次行得意先注番
//          HNsGrid1.FocusCell(ctCol_PartySlipNumDtl, (HNsGrid1.LogicalRow + 1) * 2 + 1);
//        end else
//        begin
//          // 次行納品完了予定日
//          HNsGrid1.FocusCell(ctCol_DeliGdsCmpltDueDate, (HNsGrid1.LogicalRow + 1) * 2 + 1);
//        end;
//
//      end;
    // ----------DEL 2010/07/01---------->>>>>
    end;

    Exit;
  end;
  // ----------ADD 2010/06/02---------<<<<<

  // ----------ADD 2010/07/01--------->>>>>
  if ((PrevCtrl <> HNsGrid1) and (VkCode = VK_DOWN)) then
  begin
       PrevCtrlForhNsGrid := True;
  end;
  // ----------ADD 2010/07/01---------<<<<<

  // ----------ADD 2010/07/01--------->>>>>
  if ((VkCode = VK_UP)) then
  begin
     if (((RCHNB01003UADM.EditStatus[0] = ctINPUTMODE_SalesSlip_Red) or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Red)) and (NextCtrl.Name = 'HNsGrid5')) then
      begin
        if (SalesInputCode.Visible = True and (SalesInputCode.Enabled = True)) then
        begin
          OldCtrl := SalesInputCode;
          SalesInputCode.SetFocus;
        end
        else if (FrontEmployeeCd.Visible = True and (FrontEmployeeCd.Enabled = True)) then
        begin
          OldCtrl := FrontEmployeeCd;
          FrontEmployeeCd.SetFocus;
        end
        else if (SalesEmployeeCd.Visible = True and (SalesEmployeeCd.Enabled = True)) then
        begin
          OldCtrl := SalesEmployeeCd;
          SalesEmployeeCd.SetFocus;
        end;
        focusFlg := True;
        Exit;
      end;
  end;
 // ----------ADD 2010/07/01---------<<<<<

  xOnExit(PrevCtrl);
  xArrowKeyMain(PrevCtrl,NextCtrl,VkCode);
  // ---------- ADD 2011/08/04 --------------- >>>>>
  if (PrevCtrl <> nil) and (NextCtrl <> nil) and (PrevCtrl.Name = 'CarMngCode') and (NextCtrl.Name <> 'CarMngCode') then begin
    CarMngCode.Text := StringReplace(CarMngCode.Text, '*', '', [rfReplaceAll]);
  end;
  // ---------- ADD 2011/08/04 --------------- <<<<<
  // ---------------- ADD 連番729 2011/08/18 -------------------->>>>>
  if (NextCtrl <> nil) and (PrevCtrl <> nil) then
  begin
    if ((PrevCtrl.Name = 'HNsGrid1') and (NextCtrl.Name = '')) or
      ((PrevCtrl.Name <> 'HNsGrid1') and (NextCtrl.Name = 'HNsGrid1')) then begin
      if ((xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col) = 'BLGoodsCode') or
        //---UPD BY 凌小青 on 2013/01/14 for Redmine#33793 ------>>>>>
        //(xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col) = 'GoodsNo')) and
        //(IsGoodsNoFromXMLExist) then
        (xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col) = 'GoodsNo')) then
        //---UPD BY 凌小青 on 2013/01/14 for Redmine#33793 ------<<<<<
      begin
        detailCopyButton.Enabled := True;
        toolMenu_detailCopyBtn.Enabled := True;
      end;
    end
    else if (NextCtrl.Name <> 'HNsGrid1') then begin
      detailCopyButton.Enabled := False;
      toolMenu_detailCopyBtn.Enabled := False;
    end;
  end;
  // ---------------- ADD 連番729 2011/08/18 --------------------<<<<<
  // --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ----------------->>>>>
  //if (NextCtrl <> nil) and (PrevCtrl <> nil) then // DEL  譚洪 2015/10/26 Redmine#47609
  if (NextCtrl <> nil) and (PrevCtrl <> nil) and isOptPermitForFuJi then// ADD  譚洪 2015/10/26 Redmine#47609
  begin
    if ((PrevCtrl.Name = 'HNsGrid1') and (NextCtrl.Name = '')) or
      ((PrevCtrl.Name <> 'HNsGrid1') and (NextCtrl.Name = 'HNsGrid1')) then
      begin
        // --- UPD 呉元嘯 2020/11/09 PMKOBETSU-4085対応 -------->>>>>
        //UOEDataGet.Enabled := True;
        //toolMenu_UOEDataGet.Enabled := True;
        //一括値引と返品の場合、「回答取込」ボタンが非活性
        if (discountAllLineflag = False) and (salesSlip_disp.SalesSlipCd <> salesSlipCd_RetGoods)then
        begin
          UOEDataGet.Enabled := True;
          toolMenu_UOEDataGet.Enabled := True;
        end
        else
        begin
          UOEDataGet.Enabled := False;
          toolMenu_UOEDataGet.Enabled := False;
        end;
        // --- UPD 呉元嘯 2020/11/09 PMKOBETSU-4085対応 --------<<<<<
      end
      else if (NextCtrl.Name <> 'HNsGrid1') then
      begin
        UOEDataGet.Enabled := False;
        toolMenu_UOEDataGet.Enabled := False;
      end;
  end;
  // --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 -----------------<<<<<

  // --- DEL  30757 佐々木　貴英 K2015/10/05 ----------------->>>>>
  //// --- ADD K2015/09/15 紀飛 #Redmine47186障害一覧#38 売上伝票入力でF10キーにて明細に移動した場合、「回答取込」ボタンが非活性となる----->>>>>
  //if isOptPermitForMeiGo then
  //begin
  //  if (NextCtrl = CustomerCode) and (VkCode = VK_F10) and (xTabFooterContainsFocus <> True)then
  //  begin
  //    nextCtrlChangeFlag := True;
  //    NextCtrl := HNsGrid1;
  //  end;
  //// --- ADD K2015/09/15 紀飛 #Redmine47186障害一覧#38 売上伝票入力でF10キーにて明細に移動した場合、「回答取込」ボタンが非活性となる-----<<<<<
  //
  //  //// --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 ----------------->>>>>
  //  if (NextCtrl <> nil) and (PrevCtrl <> nil) then
  //  begin
  //    if ((PrevCtrl.Name = 'HNsGrid1') and (NextCtrl.Name = '')) or
  //      ((PrevCtrl.Name <> 'HNsGrid1') and (NextCtrl.Name = 'HNsGrid1')) then
  //      begin
  //        UOEDataGet.Enabled := True;
  //        toolMenu_UOEDataGet.Enabled := True;
  //      end
  //      else if (NextCtrl.Name <> 'HNsGrid1') then
  //      begin
  //        UOEDataGet.Enabled := False;
  //        toolMenu_UOEDataGet.Enabled := False;
  //      end;
  //  end;
  //  // --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 -----------------<<<<<
  //
  //// --- ADD K2015/09/15 紀飛 #Redmine47186障害一覧#38 売上伝票入力でF10キーにて明細に移動した場合、「回答取込」ボタンが非活性となる----->>>>>
  //  if nextCtrlChangeFlag then
  //  begin
  //    nextCtrlChangeFlag := False;
  //    NextCtrl := CustomerCode;
  //  end;
  //end;
  //// --- ADD K2015/09/15 紀飛 #Redmine47186障害一覧#38 売上伝票入力でF10キーにて明細に移動した場合、「回答取込」ボタンが非活性となる-----<<<<<
  // --- DEL  30757 佐々木　貴英 K2015/10/05 -----------------<<<<<

  // ADD 2010/10/21 --- >>>>
  if (firstEntryDateFlg) then
  begin
     firstEntryDateFlg := False;
     Exit;
  end;
  // ADD 2010/10/21 --- <<<<

//  RCHNB01003UAF.Repaint;
  xOnEnter(PrevCtrl,NextCtrl);

  // ----------ADD 2010/06/02--------->>>>>
  // 売上伝票番号
  // --- UPD 2010/07/07 ---------->>>>>
  //if ((PrevCtrl <> nil) and (PrevCtrl.Tag = 114) and (NextCtrl.Tag <> 114)) then
  if ((PrevCtrl <> nil) and (PrevCtrl.Tag = 114) and (NextCtrl.Tag <> 114) and (SalesSlipNum.Text <> '')) then
  // --- UPD 2010/07/07 ----------<<<<<
  begin
  // Focus設定
    if salesSlip_disp.InputMode = 2 then
    begin
        OldCtrl := SalesSlipNumBtn;
        NextCtrl := SalesSlipNumBtn;
        SalesSlipNumBtn.SetFocus;
        Exit;
    end;
    NextCtrl := HNsGrid1;
    xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼
  //----ADD START 2011/08/03------------>>>>
  if salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly then
  begin
     if (NextCtrl <> nil) and (NextCtrl.Name = 'HNsGrid1') then
     begin
        OldCtrl := SalesSlipNumBtn;
        NextCtrl := SalesSlipNumBtn;
        SalesSlipNumBtn.SetFocus;
        xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼
        Exit;
     end
  end;
 //----ADD END 2011/08/03------------<<<<
    // -------UPD 2010/07/16------->>>>>
//    FocusCellReserve.Col := ctCol_ShipmentCntDisplay;
//    FocusCellReserve.Row := HNsGrid1.LogicalRow;
//    FocusCellReserve.Line := 1;
//    xSetNextFocus(NextCtrl);
    if salesSlip_disp.AcptAnOdrStatus = acptAnOdrStatusState_AcceptAnOrder then
    begin
      FocusCellReserve.Col := ctCol_AcceptAnOrderCntDisplay;
      FocusCellReserve.Row := 1;
      FocusCellReserve.Line := 0;
      xSetNextFocus(NextCtrl);
    end
    else
    if HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, 3] = False then
    begin
      FocusCellReserve.Col := ctCol_ShipmentCntDisplay;
      FocusCellReserve.Row := 1;
      FocusCellReserve.Line := 1;
      xSetNextFocus(NextCtrl);
    end
    else
    if HNsGrid1.ReadOnly[ctCol_GoodsName, 2] = False then
    begin
      FocusCellReserve.Col := ctCol_GoodsName;
      FocusCellReserve.Row := 1;
      FocusCellReserve.Line := 0;
      xSetNextFocus(NextCtrl);
    end;
    // -------UPD 2010/07/16-------<<<<<
    Exit;
  end;

    //if (((VkCode = VK_DOWN) or (VkCode = VK_RETURN)) and (NextCtrl.Parent.Name = 'pnl_CarInfo')) then  //DEL 2010/07/01
    if (((VkCode = VK_DOWN) or (VkCode = VK_RETURN)) and ((NextCtrl.Parent.Name = 'pnl_CarInfo') or ((NextCtrl = HNsGrid1) and (NextCtrl.Parent.Name = 'Panel15' )))) then //ADD 2010/07/01
  begin
     if ((RCHNB01003UADM.EditStatus[0] = ctEDITSTATUS_RowDiscount)
          or (RCHNB01003UADM.EditStatus[0] = ctEDITSTATUS_Annotation)) then
      begin
       OldCtrl := HNsGrid1;    // ADD 2010/07/08
       NextCtrl := HNsGrid1;   // ADD 2010/07/08
       xSettingFocus2('GoodsNameTP');

       Exit;
      end
      else if (RCHNB01003UADM.EditStatus[0] = salesSlipCdDtl_RetGoods) then
      begin
       OldCtrl := HNsGrid1;    // ADD 2010/07/08
       NextCtrl := HNsGrid1;   // ADD 2010/07/08
       xSettingFocus2('ShipmentCntDisplayTP');

       Exit;
      end
      // ----------ADD 2010/07/01--------->>>>>
      else if ((RCHNB01003UADM.EditStatus[0] = ctINPUTMODE_SalesSlip_Red) or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Red)) then
      begin
        OldCtrl := SlipNoteCode;
        NextCtrl := SlipNoteCode;
        xSetFootControl();

        Exit;
      end
      // ----------ADD 2010/07/01---------<<<<<
      // ----------ADD 2010/07/12--------->>>>>
      else if (RCHNB01003UADM.EditStatus[0] = ctINPUTMODE_SalesSlip_ShipmentAddUp)
      or (RCHNB01003UADM.EditStatus[0] = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp)
      or (RCHNB01003UADM.EditStatus[0] = ctINPUTMODE_SalesSlip_EstimateAddUp)then
      begin
        OldCtrl := HNsGrid1;
        NextCtrl := HNsGrid1;
        xSetNextFocus(NextCtrl);

        Exit;
      end
      // ----------ADD 2010/07/12---------<<<<<
      // ----------ADD 2010/07/08--------->>>>>
      else if (RCHNB01003UADM.EditStatus[0] = ctEDITSTATUS_ExistSlip) then
      begin
//>>>2010/10/27
//       OldCtrl := HNsGrid1;
//       NextCtrl := HNsGrid1;
//       xSettingFocus2('GoodsNameTP');
//
//       Exit;

       //if iFlg = 0 then begin   //DEL 2011/07/19
       if (iFlg = 0) and (salesSlip_disp.InputMode <> ctINPUTMODE_SalesSlip_ReadOnly) then begin //ADD 2011/07/19
       OldCtrl := HNsGrid1;
       NextCtrl := HNsGrid1;
       xSettingFocus2('GoodsNameTP');

       Exit;
      end;
//<<<2010/10/27
      end;
      // ----------ADD 2010/07/08---------<<<<<
//      else
//      begin
//       xSettingFocus2('BLGoodsCodeTP');
//      end
//      else
//          // BLコード検索
//      if i_searchPartsMode = ctBLCodeSearch then
//      begin
//        if HNsGrid1.ReadOnly[1, HNsGrid1.Row] = False then
//        begin
//          FocusCellReserve.Col := 1;
//          FocusCellReserve.Row := HNsGrid1.LogicalRow;
//          FocusCellReserve.Line := 0;
//          xSetNextFocus(NextCtrl);
//          moveUpDownCellCheck := False;
//          hNsGrid1EnterShow := False;  // ADD 2010/07/08
//          Exit;
//        end;
//      end
//      else
//      // 品番検索
//      if i_searchPartsMode = ctGoodsNoSearch then
//      begin
//        if HNsGrid1.ReadOnly[1, HNsGrid1.Row] = False then
//        begin
//          FocusCellReserve.Col := 1;
//          FocusCellReserve.Row := HNsGrid1.LogicalRow;
//          FocusCellReserve.Line := 1;
//          xSetNextFocus(NextCtrl);
//          moveUpDownCellCheck := False;
//          hNsGrid1EnterShow := False; // ADD 2010/07/08
//          Exit;
//        end;
//      end;
//      focusFlg := True;

  end;


  if ((NextCtrl.Name = 'HNsGrid1')
    and (PrevCtrl.Parent.Parent.Name = 'pnl_CarInfo')
    and (PrevCtrl.Name <> 'HNsGrid5')
    and ((VkCode = VK_RETURN) or (VkCode = VK_DOWN))) then
  begin
    // BLコード検索
    if i_searchPartsMode = ctBLCodeSearch then
    begin
      //---UPD 2010/07/19--------->>>>>
//      if HNsGrid1.ReadOnly[1, HNsGrid1.Row] = False then
      if HNsGrid1.ReadOnly[1, 2] = False then
      //---UPD 2010/07/19---------<<<<<
      begin
        //---UPD 2010/07/19--------->>>>>
        FocusCellReserve.Col := 1;
//        FocusCellReserve.Row := HNsGrid1.LogicalRow;
        //---UPD 2010/07/19---------<<<<<
        FocusCellReserve.Row := 1;
        FocusCellReserve.Line := 0;
        xSetNextFocus(NextCtrl);
        moveUpDownCellCheck := False;
        hNsGrid1EnterShow := False;  // ADD 2010/07/08
        Exit;
      end;
    end
    else
    // 品番検索
    if i_searchPartsMode = ctGoodsNoSearch then
    begin
      //---UPD 2010/07/19--------->>>>>
//      if HNsGrid1.ReadOnly[1, HNsGrid1.Row] = False then
      if HNsGrid1.ReadOnly[1, 3] = False then
      //---UPD 2010/07/19---------<<<<<
      begin
        //---UPD 2010/07/19--------->>>>>
        FocusCellReserve.Col := 1;
//        FocusCellReserve.Row := HNsGrid1.LogicalRow;
        //---UPD 2010/07/19---------<<<<<
        FocusCellReserve.Row := 1;
        FocusCellReserve.Line := 1;
        xSetNextFocus(NextCtrl);
        moveUpDownCellCheck := False;
        hNsGrid1EnterShow := False; // ADD 2010/07/08
        Exit;
      end;
    end;
  end;

  // ----------ADD 2010/06/02---------<<<<<
  // ----------ADD 2010/07/09---------<<<<<
  if ((PrevCtrl <> nil) and (PrevCtrl.Name = 'SalesDate')) and
    ((RCHNB01003UADM.EditStatus[0] = ctINPUTMODE_SalesSlip_Red) or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Red)) and
    ((VkCode = VK_RETURN) or (VkCode = 121) or (VkCode = VK_DOWN)) then
  begin
    NextCtrl := SlipNoteCode;
    OldCtrl := SlipNoteCode;
//    xSetNextFocus(NextCtrl);
     xSetFootControl();
  end;
  // ----------ADD 2010/07/09--------->>>>>

  // ----------ADD 2010/07/12---------<<<<<
  if ((PrevCtrl <> nil) and (PrevCtrl.Name = 'SalesDate')) and
    ((RCHNB01003UADM.EditStatus[0] = ctINPUTMODE_SalesSlip_ShipmentAddUp)
      or (RCHNB01003UADM.EditStatus[0] = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp)
      or (RCHNB01003UADM.EditStatus[0] = ctINPUTMODE_SalesSlip_EstimateAddUp)) and
    ((VkCode = VK_RETURN) or (VkCode = VK_DOWN)) then
  begin
    NextCtrl := HNsGrid1;
    OldCtrl := HNsGrid1;
    xSetNextFocus(NextCtrl);
  end;
  // ----------ADD 2010/07/12--------->>>>>

  // ----------ADD 2010/06/02--------->>>>>
//  xSetNextFocus(NextCtrl);

 // ----------ADD 2010/10/21--------->>>>>
 // 年式のフォーカス制御に関する件の対応
 if ((Form4.ActiveControl <> HNsGrid1) and focusIntoGridCheck and moveFocusFlg) then
  begin
     if ((VkCode = VK_RETURN)
          or (VkCode = VK_TAB) // ADD 2013/04/16 №20 T.Miyamoto
          or (VkCode = VK_UP)
          or (VkCode = VK_DOWN))  then
       begin
         // -----ADD 2011/12/13 鄧潘ハン REDMINE#27236--->>>>>
         if (i_InputType = 2) then
         begin
           NextCtrl :=  HNsGrid1;
           Exit;
         end;
         // --- ADD 2012/06/26 No.635 ---------->>>>>
         if (HNsGrid1.Enabled = False) then
         begin
           Exit;
         end;
         // --- ADD 2012/06/26 No.635 ----------<<<<<
         // -----ADD 2011/12/13 鄧潘ハン REDMINE#27236---<<<<<
         if (i_searchPartsMode = 2) then
         begin
//>>>2010/10/27
//            NextCtrl :=  HNsGrid1;
//            FocusCellReserve.Col := ctCol_BLGoodsCode;
//            FocusCellReserve.Row := 1;
//            FocusCellReserve.Line := 1;
//            xSetNextFocus(NextCtrl);

            if iFlg = 0 then begin
            NextCtrl :=  HNsGrid1;
            FocusCellReserve.Col := ctCol_BLGoodsCode;
            // --- UPD 2013/03/26 Wakita ---------->>>>>
            //FocusCellReserve.Row := 1;
            FocusCellReserve.Row := xGetActiveRowSalesRowNo();
            // --- UPD 2013/03/26 Wakita ----------<<<<<
            FocusCellReserve.Line := 1;
            xSetNextFocus(NextCtrl);
            end else begin
              NextCtrl :=  HNsGrid1; // 2010/11/02
              HNsGrid1.HideInplaceEdit;
              HNsGrid1.SetFocus;
              iFlg := 0;
              AGridCoord := HNsGrid1.LogicalToPhysicalCell(svCol, svLine, svRow);
              THNsGrid(NextCtrl).GotoCell(AGridCoord.X, AGridCoord.Y);
              HNsGrid1.ShowInplaceEdit;
              Exit;
            end;
//<<<2010/10/27

            // 車両情報設定処理
            xCarInfoFormSetting(logicalRowInt + 1);
         end else begin
            //NextCtrl := nil;
            //--- ADD 2010/11/01 ---------->>>>>
            // --------ADD 2010/10/15--------->>>>>
            gridJoinCheck := False;
            for i := 1 to HNsGrid1.LogicalRowCount do
            begin
              if (gpxMAHNB01013B_GridJoinCheck(0, i - 1, -1, 9) = 1) then
              begin
                gridJoinCheck := True;
                Break;
              end;
            end;

            NextCtrl :=  HNsGrid1;
            if (gridJoinCheck) then
            begin
              HNsGrid1.HideInplaceEdit;
              HNsGrid1.SetFocus;
              // --- UPD 2013/02/14 Wakita ---------->>>>>
              //HNsGrid1.GotoCell(ctCol_BLGoodsCode, xGetActiveRowSalesRowNo() * 2);
              if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, xGetActiveRowSalesRowNo() * 2] = False) then
              begin
                HNsGrid1.GotoCell(ctCol_BLGoodsCode, xGetActiveRowSalesRowNo() * 2);
              end
              else if (HNsGrid1.ReadOnly[ctCol_GoodsName, xGetActiveRowSalesRowNo() * 2] = False) then
              begin
                HNsGrid1.GotoCell(ctCol_GoodsName, xGetActiveRowSalesRowNo() * 2);
              end;
              // --- UPD 2013/02/14 Wakita ----------<<<<<
              HNsGrid1.ShowInplaceEdit;
            end else
            begin
              HNsGrid1.HideInplaceEdit;
              HNsGrid1.SetFocus;
              HNsGrid1.FocusCell(1, 2);
              HNsGrid1.ShowInplaceEdit;
            end;
            //--- ADD 2010/11/01 ----------<<<<<
         end;

       end;
       //NextCtrl := nil;
    Exit;
  end;
  // ----------ADD 2010/10/21---------<<<<<
// -----DEL 2012/01/18 YANGMJ ソースマージ ----- >>>>>
//  // -----ADD 2011/12/01 YANGMJ REDMINE#8344--------->>>>>
//  if ((PrevCtrl <> nil) and ((NextCtrl.Name = 'SlipNoteCode')
//  or (NextCtrl.Name = 'SlipNote2Code')
//  or(NextCtrl.Name = 'SlipNote3Code')
//  or(NextCtrl.Name = 'SlipNote')
//  or(NextCtrl.Name = 'SlipNote2')
//  or(NextCtrl.Name = 'SlipNote3')
//  or(NextCtrl.Name = 'AddresseeCode')
//  or(NextCtrl.Name = 'AddresseeName')
//  or(NextCtrl.Name = 'DeliveredGoodsDivComBo')
//  or(NextCtrl.Name = 'SlipNoteCodeBtn')
//  or(NextCtrl.Name = 'SlipNote2CodeBtn')
//  or(NextCtrl.Name = 'SlipNote3CodeBtn')
//  or(NextCtrl.Name = 'AddresseeCodeBtn')
//  or(NextCtrl.Name = 'AddresseeConfirmationBtn')
//  or(NextCtrl.Name = 'RetGoodsReason')
//  or(NextCtrl.Name = 'RetGoodsReasonBtn')
//  or(NextCtrl.Name = 'RetGoodsReasonBtn')
//  or(NextCtrl.Name = 'PartySaleSlipNum')
//  or(NextCtrl.Name = 'SlipMemo1')
//  or(NextCtrl.Name = 'SlipMemo2')
//  or(NextCtrl.Name = 'SlipMemo3')
//  or(NextCtrl.Name = 'InsideMemo1')
//  or(NextCtrl.Name = 'InsideMemo2')
//  or(NextCtrl.Name = 'InsideMemo3')
//  or(NextCtrl.Name = 'CarSlipNote')
//  or(NextCtrl.Name = 'SlipNoteGuideBtn')
//  or(NextCtrl.Name = 'Mileage') )
//  ) and (PrevCtrl.Name = 'HNsGrid1') then
//  begin
//    for rowIndex := 2 to HNsGrid1.RowCount - 1 do
//    begin
//      // 販売区分チェック
//      if (salesTtlSt.SalesCdDspDivCd = 2) then begin
//        iRow := rowIndex div 2 - 1;
//        salesRowNo := RCHNB01003UADM.SalesRowNo[iRow];
//        value := HNsGrid1.Cells[7,rowIndex];
//        xPriceCheckProc(7, rowIndex, iRow, salesRowNo, value, flag);
//        if flag then
//        begin
//            NextCtrl := HNsGrid1;
//            f3_enableFlg := True;
//            HNsGrid1.GotoCell(ctCol_SalesCode, rowIndex);
//            HNsGrid1.FocusCell(ctCol_SalesCode, rowIndex);
//            HNsGrid1.ShowInplaceEdit;
//            Exit;
//        end;
//
//        if (gpxMAHNB01013B_GridJoinCheck(0, rowIndex div 2 -1 , -1, 9) = 1) then begin
//          status := gpxMAHNB01013B_CheckDetailAction(rowIndex div 2 -1, 0 ,5);
//          if (status = -1) then begin
//              NextCtrl := HNsGrid1;
//              f3_enableFlg := True;
//              HNsGrid1.GotoCell(ctCol_SalesCode, rowIndex);
//              HNsGrid1.FocusCell(ctCol_SalesCode, rowIndex);
//              HNsGrid1.ShowInplaceEdit;
//              Exit;
//          end
//        end;
//        //del by liusy 2011/12/16 --------->>>>>
////        if (gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,6) = 9) then
////        begin
////          NextCtrl := HNsGrid1;
////          f3_enableFlg := True;
////          HNsGrid1.GotoCell(ctCol_SalesRate, rowIndex + 1);
////          HNsGrid1.FocusCell(9, rowIndex + 1);
////          HNsGrid1.ShowInplaceEdit;
////          Exit;
////        end;
//        //del by liusy 2011/12/16 ---------<<<<<
//      end;
//    end;
//  end;
// // -----ADD 2011/12/01 YANGMJ REDMINE#8344---------<<<<<
// -----DEL 2012/01/18 YANGMJ ソースマージ ----- <<<<<
 // del by liusy #26911 2011/12/21  --------->>>>>
    // add 2011/12/09 ----->>>>
//    imeFlag := false;
//    if( (PrevCtrl <> nil)  and (PrevCtrl.name = 'HNsGrid1') and (NextCtrl <> nil)  and (NextCtrl.name <> 'HNsGrid1'))then begin
//       imeFlag := true;
//       if (NextCtrl is THNedit) then
//           begin
//              SetImeMode(form4.Handle, imClose);
//              THNedit(NextCtrl).ImeMode := imClose;
//        end
//    end;
    // add 2011/12/09 -----<<<<
 // del by liusy #26911 2011/12/21  -----<<<<<
end;

// *************************************************************************
// xOnExit
// *************************************************************************
procedure TForm4.xOnExit(PrevCtrl: TWinControl);
begin
  if (not Assigned(PrevCtrl)) then
    Exit;

  if not(PrevCtrl is THNsGrid) then
  begin
    // 値が変化したか確認
    if (PrevCtrl is THEdit) or (PrevCtrl is THNedit) then
    begin
      if (s_ChangeData = THEdit(PrevCtrl).DataText) then
      begin
        i_ChangeFlg := 0;
      end
      else
      begin
        i_ChangeFlg := 1;
      end;
    end
    else
    begin
      i_ChangeFlg := 0;
    end;
  end;
end;

// *************************************************************************
// 履歴
//--------------------------------------------------------------------------
// 管理番号              作成担当 : 許雁波
// 作 成 日  2011/08/12  修正内容 : Redmine#23527の対応
// *************************************************************************
procedure TForm4.xArrowKeyMain(PrevCtrl: TWinControl;
  var NextCtrl: TWinControl; VkCode: Word);
  var
  salesRowNo, searchType, carSerchRet, modelDeNo, cateNo, makerCd, modelCd, modelSubCd: Integer;
  name, makerName, modeName, currentColorCode, currentTrimCode, code, tempCarMngCode, value: WideString;
  carSearchCondition : TCarSearchCondition;
  i, status : Integer;
  carInfo :TCarInfo;
  boolRet, changeCarInfo, returnFlag, clearCarInfo, reCalcSalesPrice, reCalcSalesUnitPrice, clearRateInfo ,
     canChangeFocus, changeSalesSlip, clearDetailInput, changeSalesGoodsCd, guideStart, clearAddCarInfo,
     equelFlag, inputSalesSlipNum, deleteEmptyRow, getNextCtrl, getNextCtrlForFooter, isCache, changeAcptAnOdrStatus,
     isDataChanged, SalesDateCheck: Boolean;
  readDBDatStatus: Integer;
  control : TWinControl;
  salesSlipCurrent, salesSlipSet: TSalesSlip;
//  customerInfo : TCustomerInfo;   // DEL 2010/07/17
  taxRate: Double;
  salesDetailArray: TSalesSlipInputCustomArrayA2;
  rowIndex: Integer;
  cnt: Integer;
  dialogFlag: Boolean;
  findDataFlg: Boolean;  // ADD 2010/07/01
  tDate      : TDateTime; // 2010/08/30
  carChangeRowFlg : Boolean;  // 2010/11/01
  slipNoteCharCnt, slipNote2CharCnt, slipNote3CharCnt,slipNoteLen, slipNote2Len, slipNote3Len: Integer; // 2011/08/30

  begin

  carChangeRowFlg := False;   // 2010/11/01

  if (PrevCtrl = nil) then
    Exit;
  if (NextCtrl = nil) then
    NextCtrl := PrevCtrl;


  //マウスかつ, ファンクションキー押下の場合
  if (VkCode = 0) and (NextCtrl is TToolBar) then Exit;

  ClearBeforeCarSearchBuffer(i_beforeCarSearchBuffer);

  gpxMAHNB01012B_GetSalesSlip(salesSlipCurrent);
  salesRowNo := xGetActiveRowSalesRowNo();
  // 変更前情報保持
  if (LoadLibraryMAHNB01012B(HDllCALL1) <> 0) then
      Exit;
  gpxMAHNB01012B_GetCarInfoRow(salesRowNo, 1, carInfo);

  salesSlip_disp := salesSlipCurrent;
  changeCarInfo := False;
  //searchCarDiv := True;

  boolRet := True;
  reCalcSalesPrice := False;
  reCalcSalesUnitPrice := False;
  clearRateInfo := False;
  changeSalesGoodsCd := False;
  changeAcptAnOdrStatus := false;
  changeSalesSlip := false;
  //changeStockInfo := False;
  changeCarInfo := False;
  getNextCtrl := False;
  getNextCtrlForFooter := False;
  isCache := False;
  inputSalesSlipNum := False;
  taxRate := 0;

  fullModeFlg := False;       // ADD 2010/08/13

  case PrevCtrl.Tag of

    //売上明細
    153: begin
           if ((NextCtrl.Tag <> 140) and (NextCtrl.Tag <> 142) and (
           NextCtrl.Tag <> 143) and (NextCtrl.Tag <> 144)
           and (NextCtrl.Tag <> 145) and (NextCtrl.Tag <> 146)
           and (NextCtrl.Tag <> 147) and (NextCtrl.Tag <> 148)
           and (NextCtrl.Tag <> 149) and (NextCtrl.Tag <> 150)
           and (NextCtrl.Tag <> 151) and (NextCtrl.Tag <> 152)) then
           begin
              // ----------UPD 2010/07/01----------->>>>>
             //gpxMAHNB01013B_CheckDetailAction(HNsGrid1.LogicalRow -1, 0 ,1);
             // 通常入力の場合、粗利チェックを行う。
//             if (i_InputType = 0) then
//             begin
//               gpxMAHNB01013B_CheckDetailAction(HNsGrid1.LogicalRow -1, 0 ,1);
//             end;
             // ----------UPD 2010/07/01-----------<<<<<
           end;
         end;

    // 売上情報
    // 拠点コード
    101: begin
         getNextCtrl := True;
         canChangeFocus := True;

         SectionCode.Text := xStringZeroAdd(SectionCode.Text, 2);
         if SectionCode.Text <> salesSlipCurrent.ResultsAddUpSecCd then
         begin
           if SectionCode.Text = '' then
           begin
              salesSlip_disp.ResultsAddUpSecCd := SectionCode.Text;
              salesSlip_disp.ResultsAddUpSecNm := '';
           end else
           begin
              status := gpxMAHNB01012B_AfterSectionCodeFocus(SectionCode.Text, salesSlip_disp);
              if status = -1 then
              begin
                canChangeFocus := False;
              end else if status = 1 then
              begin
                reCalcSalesPrice:= True;
                reCalcSalesUnitPrice:= True;
              end
              else if status = 2 then
              begin
                clearRateInfo := True;
              end;
           end;

             SetDisplayHeaderFooterInfo(salesSlip_disp);
             //画面表示処理（売上金額合計情報）
             xSetDisplayTotalPriceInfo(salesSlip_disp);
         end;

         // NextCtrl制御
         if canChangeFocus then
         begin
           if not (GetKeyState(VK_SHIFT) < 0) then
           begin
              case VkCode of
              VK_RETURN, VK_TAB:
                begin
                  if SectionCode.Text = '' then
                  begin
                    NextCtrl := SectionCodeBtn;
                    getNextCtrl := False;
                  end;
                end;
              end;
           end;
         end else
         begin
            NextCtrl := PrevCtrl;
            getNextCtrl := False;
         end;
    end;

    // --- ADD 2010/05/31 ---------->>>>>
    // 拠点ガイドボタン
    102: begin
       getNextCtrl := true;

       if GetKeyState(VK_SHIFT) < 0 then
       begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
              NextCtrl := SectionCode;
              getNextCtrl := False;
            end;
          end;
       end else
       begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
              PrevCtrl := SectionCode;
            end;
          end;
       end;
    end;
    // --- ADD 2010/05/31 ----------<<<<<

    // 部門コード
    103: begin
        getNextCtrl := True;
        canChangeFocus := True;

        if SubSectionCode.GetInt() <> salesSlipCurrent.SubSectionCode then
        begin
          if SubSectionCode.GetInt() = 0 then
          begin
            salesSlip_disp.SubSectionCode := 0;
            salesSlip_disp.SubSectionName := '';
          end else
          begin
            gpxMAHNB01012B_GetNameFromSubSection(SubSectionCode.GetInt(), name);

            if name = '' then
            begin
              Application.MessageBox(
                '部門が存在しません。',
                PChar(Caption),
                MB_OK + MB_ICONINFORMATION);

                canChangeFocus:= False;
            end else
            begin
              salesSlip_disp.SubSectionCode := SubSectionCode.GetInt();
              salesSlip_disp.SubSectionName:= name;
            end;
          end;

          SetDisplayHeaderFooterInfo(salesSlip_disp);
          //画面表示処理（売上金額合計情報）
          xSetDisplayTotalPriceInfo(salesSlip_disp);
        end;

        // NextCtrl制御
         if canChangeFocus then
         begin
           if not (GetKeyState(VK_SHIFT) < 0) then
           begin
              case VkCode of
              VK_RETURN, VK_TAB:
                begin
                  if SubSectionCode.Text = '' then
                  begin
                    NextCtrl := SubSectionCodeBtn;
                    getNextCtrl := False;
                  end;
                end;
              end;
           end;
         end else
         begin
            NextCtrl := PrevCtrl;
            getNextCtrl := False;
         end;
    end;

    // --- ADD 2010/05/31 ---------->>>>>
    // 部門ガイドボタン
    104: begin
       getNextCtrl := true;

       if GetKeyState(VK_SHIFT) < 0 then
       begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
              NextCtrl := SubSectionCode;
              getNextCtrl := False;
            end;
          end;
       end else
       begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
              PrevCtrl := SubSectionCode;
            end;
          end;
       end;
    end;
    // --- ADD 2010/05/31 ----------<<<<<

    // 売上伝票番号
    114: begin

      isSalesSlipSearch := False;  // ADD 2013/02/20 Wakita ①

      code := Trim(SalesSlipNum.Text);

      // --- UPD 2010/07/01 --------->>>>>
//      gpxMAHNB01012B_AfterSalesSlipNumFocus(salesSlip_disp, salesSlipCurrent, code, HGetEnterpriseCode, equelFlag, readDBDatStatus, reCalcSalesPrice, deleteEmptyRow);
      gpxMAHNB01012B_AfterSalesSlipNumFocus(salesSlip_disp, salesSlipCurrent, code, HGetEnterpriseCode, equelFlag, readDBDatStatus, reCalcSalesPrice, deleteEmptyRow, findDataFlg);
      // --- UPD 2010/07/01 ---------<<<<<

      // --- ADD 2010/07/01 --------->>>>>
      if not findDataFlg then
      NextCtrl := PrevCtrl;
      // --- ADD 2010/07/01 ---------<<<<<

      if not equelFlag then
      begin
        if readDBDatStatus = 0 then
        begin
          gpxMAHNB01012B_GetCarInfoRow(salesRowNo, 1, carInfo);
          inputSalesSlipNum := true;

          SalesSlipNum.Text := code;

          // 伝票区分コンボエディタアイテム設定処理
          xSetItemtSalesSlipCd(salesSlip_disp, salesSlip_disp.AcptAnOdrStatusDisplay, false);

          // フッタタブ位置セット
          uTabControl_Footer.ActivePage := ts1;

          //伝票備考、伝票備考２、伝票備考３の入力桁数を制御する
          xSetNoteCharCnt();

          // --- ADD 2010/06/02 ---------->>>>>
          //追加情報タブ項目Visible設定
          // --- DEL 2012/08/07 Wakita ---------->>>>>
          ////追加情報タブ項目Visible設定
          //xSettingAddInfoVisible();
          // --- DEL 2012/08/07 Wakita ----------<<<<<
          changeCarInfo := true;
          // --- ADD 2010/06/02 ---------->>>>>
          xGetTaxRateName(salesSlip_disp);   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応

        end;

        // 計上時は空白行を削除する(出荷計上 受注計上 見積計上)
        if deleteEmptyRow then
        begin
          // 空白行削除処理
          xDeleteEmptyRow();
        end;

        // 売上データクラス→画面格納処理TODO
        gpxMAHNB01013B_GetDisplayHeaderFooterInfo(inputModeTitle, defaultSalesSlipNumDf, i_searchPartsMode, operationCodeFlg); // ADD 2010/07/13

        // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
        //値引モード
        if(discountAllLineflag) and (readDBDatStatus = 0)then
        begin
            //「一括値引」→「売上」
            xNotDiscountInitalSet();
        end;
        // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<

        SetDisplayHeaderFooterInfo(salesSlip_disp);
        //画面表示処理（売上金額合計情報）
        xSetDisplayTotalPriceInfo(salesSlip_disp);

        xDeatilClearDisplay();
        // 明細データ設定
        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        // --- ADD 2010/05/31 ---------->>>>>
        xInitialRow;
        // --- ADD 2010/05/31 ----------<<<<<
        // --- ADD 2010/07/14 ---------->>>>>
        if (salesDetailArray.Csafield1Count > i_RowMaxCount) then
        begin
          xInitialRow_AddUp(salesDetailArray);
        end;
        // --- ADD 2010/07/14 ---------->>>>>
        xSetDetailRowFormC(salesDetailArray,-1);
        // 明細グリッド設定処理
        xSettingGrid();
        // ---------UPD 2010/06/02------->>>>>
        //xSettingSalesDetailRowInputRowCount(salesSlip_disp.DetailRowCountForReadSlip);
        if readDBDatStatus = 0 then
        begin
          xSettingSalesDetailRowInputRowCount(salesSlip_disp.DetailRowCountForReadSlip);
        end;
        // ---------UPD 2010/06/02-------<<<<<
        xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

        // Visible設定
        xSettingVisible();
        // --- ADD 2010/06/02 ---------->>>>>
        //追加情報タブ項目Visible設定
        //xSettingAddInfoVisible();
        // --- ADD 2010/06/02 ---------->>>>>
      end;
      // --- DEL 2010/06/02 ---------->>>>>
      //changeCarInfo := true;
      // --- DEL 2010/06/02 ---------->>>>>

      //gpxMAHNB01013B_BeginControllingByOperationAuthority(b_revisionVisible, b_deleteVisible, b_redSlipVisible); // ADD 2010/07/13 // DEL 2013/01/24 鄧潘ハン REDMINE#34141
      gpxMAHNB01013B_BeginControllingByOperationAuthority(b_revisionVisible, b_deleteVisible, b_redSlipVisible, b_slipDiscountVisible);// ADD 2013/01/24 鄧潘ハン REDMINE#34141

      //xSetItemsDictionary();    // ADD 2010/07/13  // DEL 2011/10/20

      // --- ADD 2010/07/19 ---------->>>>>
      xLoadToolManagerCustomizeInfo();
      //伝票削除（Ｘ）
      if (b_deleteVisible and tToolButtonsVisible[3]) then
      begin
        deleteSlipButton.Visible := True;
      end else
      begin
        deleteSlipButton.Visible := False;
      end;
     // --- ADD 2010/07/19 ----------<<<<<

      //>>>2011/03/09
//      //>>>2011/02/01
//      // SCM情報が存在する伝票は行追加不可
//      if ((salesSlip_disp.InquiryNumber <> 0) and (salesSlip_disp.SalesSlipNum <> ctDefaultSalesSlipNum)) then begin
//        xDeleteEmptyRow();
//      end;
//      //<<<2011/02/01
      //<<<2011/03/09

      // --- ADD 2013/02/18 Wakita ---------->>>>>
      xtoolbarSet();
      // --- ADD 2013/02/18 Wakita ----------<<<<<

      isSalesSlipSearch := False;  // ADD 2013/02/20 Wakita ①

    end;

    // 担当者
    108: begin
      canChangeFocus := True;

      SalesEmployeeCd.Text := xStringZeroAdd(SalesEmployeeCd.Text, 4);
      // ---------UPD 2010/07/14------->>>>>
      //if SalesEmployeeCd.Text <> Trim(salesSlipCurrent.SalesEmployeeCd) then
      if Trim(SalesEmployeeCd.Text) <> Trim(salesSlipCurrent.SalesEmployeeCd) then
      // ---------UPD 2010/07/14-------<<<<<
      begin
          gpxMAHNB01012B_ChangeSalesEmployee(salesSlip_disp, salesSlipCurrent, Trim(SalesEmployeeCd.Text), canChangeFocus);
          SetDisplayHeaderFooterInfo(salesSlip_disp);
          //画面表示処理（売上金額合計情報）
          xSetDisplayTotalPriceInfo(salesSlip_disp);
      end;

      // NextCtrl制御
      if canChangeFocus then
      begin
        if GetKeyState(VK_SHIFT) < 0 then
        begin
          case VkCode of
              VK_RETURN, VK_TAB:
                begin
                  NextCtrl := xGetNextControl(prevCtrl, 1);
                end;
          end;
        end else
        begin
          case VkCode of
              VK_RETURN, VK_TAB:
                begin
                  if SalesEmployeeCd.Text = '' then
                  begin
                    NextCtrl := SalesEmployeeCdBtn;
                  end else
                  begin
                    NextCtrl := xGetNextControl(prevCtrl, 0);
                  end;
                end;
          end;
        end;
      end else
      begin
        NextCtrl := PrevCtrl;
      end;
    end;

    // --- ADD 2010/05/31 ---------->>>>>
    // 担当者ガイドボタン
    109: begin
       getNextCtrl := true;

       if GetKeyState(VK_SHIFT) < 0 then
       begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
              NextCtrl := SalesEmployeeCd;
              getNextCtrl := False;
            end;
          end;
       end else
       begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
              PrevCtrl := SalesEmployeeCd;
            end;
          end;
       end;
    end;
    // --- ADD 2010/05/31 ----------<<<<<
    // 受注者
    110: begin
      canChangeFocus := True;

      FrontEmployeeCd.Text := xStringZeroAdd(FrontEmployeeCd.Text, 4);
      // ---------UPD 2010/07/14------->>>>>
      //if FrontEmployeeCd.Text <> Trim(salesSlipCurrent.FrontEmployeeCd) then
       if Trim(FrontEmployeeCd.Text) <> Trim(salesSlipCurrent.FrontEmployeeCd) then
       // ---------UPD 2010/07/14-------<<<<<
      begin
          gpxMAHNB01012B_ChangeFrontEmployee(salesSlip_disp, salesSlipCurrent, Trim(FrontEmployeeCd.Text), canChangeFocus);
          SetDisplayHeaderFooterInfo(salesSlip_disp);
          //画面表示処理（売上金額合計情報）
          xSetDisplayTotalPriceInfo(salesSlip_disp);
      end;

      // NextCtrl制御
      if canChangeFocus then
      begin
        if GetKeyState(VK_SHIFT) < 0 then
        begin
          case VkCode of
            VK_RETURN, VK_TAB:
              begin
                NextCtrl := xGetNextControl(prevCtrl, 1);
              end;
          end;
        end else
        begin
          case VkCode of
            VK_RETURN, VK_TAB:
              begin
                if FrontEmployeeCd.Text = '' then
                begin
                  NextCtrl := FrontEmployeeCdBtn;
                end else
                begin
                  NextCtrl := xGetNextControl(prevCtrl, 0);
                end;
              end;
          end;
        end;
      end else
      begin
        NextCtrl := PrevCtrl;
      end;
    end;

    // --- ADD 2010/05/31 ---------->>>>>
    // 受注者ガイドボタン
    111: begin
       getNextCtrl := true;

       if GetKeyState(VK_SHIFT) < 0 then
       begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
              NextCtrl := FrontEmployeeCd;
              getNextCtrl := False;
            end;
          end;
       end else
       begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
              PrevCtrl := FrontEmployeeCd;
            end;
          end;
       end;
    end;
    // --- ADD 2010/05/31 ----------<<<<<

    // 発行者
    112: begin
      canChangeFocus := True;

      SalesInputCode.Text := xStringZeroAdd(SalesInputCode.Text, 4);
      // ---------UPD 2010/07/14------->>>>>
      //if SalesInputCode.Text <> Trim(salesSlipCurrent.SalesInputCode) then
      if Trim(SalesInputCode.Text) <> Trim(salesSlipCurrent.SalesInputCode) then
      // ---------UPD 2010/07/14-------<<<<<
      begin
          gpxMAHNB01012B_ChangeSalesInput(salesSlip_disp, salesSlipCurrent, Trim(SalesInputCode.Text), canChangeFocus);
          SetDisplayHeaderFooterInfo(salesSlip_disp);
          //画面表示処理（売上金額合計情報）
          xSetDisplayTotalPriceInfo(salesSlip_disp);
      end;

      // NextCtrl制御
      if canChangeFocus then
      begin
        if GetKeyState(VK_SHIFT) < 0 then
        begin
          case VkCode of
              VK_RETURN, VK_TAB:
                begin
                  NextCtrl := xGetNextControl(prevCtrl, 1);
                end;
          end;
        end else
        begin
          case VkCode of
              VK_RETURN, VK_TAB:
                begin
                  if SalesInputCode.Text = '' then
                  begin
                    NextCtrl := SalesInputCodeBtn;
                  end else
                  begin
                    NextCtrl := xGetNextControl(prevCtrl, 0);
                  end;
                end;
          end;
        end;

        if (NextCtrl <> nil) then
          NextCtrl := NextCtrl;
      end else
      begin
        NextCtrl := PrevCtrl;
      end;
    end;

    // --- ADD 2010/05/31 ---------->>>>>
    // 発行者ガイドボタン
    113: begin
       getNextCtrl := true;

       if GetKeyState(VK_SHIFT) < 0 then
       begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
              NextCtrl := SalesInputCode;
              getNextCtrl := False;
            end;
          end;
       end else
       begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
              PrevCtrl := SalesInputCode;
            end;
          end;
       end;
    end;
    // --- ADD 2010/05/31 ----------<<<<<

    // 得意先コード
    105: begin
      //CustomerCode.Enabled := False;     //ADD 連番28 2011/07/19   //DEL Redmine#23527 2011/08/12
      canChangeFocus := True;
      guideStart := True;

      if CustomerCode.GetInt() = 0 then
      begin
        CustomerCode.Text := '';
      end;

      if CustomerCode.GetInt() <> salesSlipCurrent.CustomerCode then
      begin

        gpxMAHNB01012B_AfterCustomerCodeFocus(salesSlip_disp, CustomerCode.GetInt(), customerInfo, clearAddCarInfo, canChangeFocus,
                                              reCalcSalesPrice, guideStart, clearDetailInput, clearCarInfo, reCalcSalesUnitPrice, clearRateInfo);
        CustomerCode.Enabled := False;     //ADD Redmine#23527 2011/08/12
        xGetTaxRateName(salesSlip_disp);   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
        //得意先を変更した場合は、管理番号の値をクリアする
        if clearAddCarInfo then
        begin
          xClearAddCarInfo();
        end;

        if not guideStart then
        begin
        // -----------UPD 2010/09/07---------->>>>>
//          if salesSlip.CustomerCode <> 0 then
//          begin
//            CustomerCode.DataText := IntToStr(salesSlip.CustomerCode);
//          end else
//          begin
//            CustomerCode.DataText := '';
//          end;
          if salesSlip_disp.CustomerCode <> 0 then
          begin
            CustomerCode.DataText := IntToStr(salesSlip_disp.CustomerCode);
          end else
          begin
            CustomerCode.DataText := '';
          end;
          // -----------UPD 2010/09/07----------<<<<<
//          CustomerCode.SetInt(salesSlip_disp.CustomerCode);
          //CustomerName.Text := salesSlip_disp.CustomerName;   //  DEL 2010/09/10
          CustomerName.Text := salesSlip_disp.CustomerSnm;     //  ADD 2010/09/10
          AddresseeCode.SetInt(salesSlip_disp.AddresseeCode);
        end;

        if clearDetailInput then
        begin
          xDeatilClearDisplay();
          xDeatilClearTable();
        end;

        if clearCarInfo then
        begin
          // 画面クリア処理（車両情報）
          xClearDisplayCarInfo();
        end;

        // --- UPD 2010/07/06 ----------<<<<<
        if guideStart then
        begin
          // 得意先情報画面格納処理
          xSetDisplayCustomerInfo(customerInfo);
        end;
        // --- UPD 2010/07/06 ----------<<<<<


      // 伝票区分コンボエディタアイテム設定処理
//      xSetItemtSalesSlipCd(salesSlip_disp, salesSlip_disp.AcptAnOdrStatusDisplay, false);    // DEL 2010/07/06
      //xSetItemtSalesSlipCd(salesSlip_disp, salesSlip_disp.AcptAnOdrStatusDisplay, True);     // ADD 2010/07/06 //DEL 2011/11/25
      xSetItemtSalesSlipCdKeepSlipCd(salesSlip_disp, salesSlip_disp.AcptAnOdrStatusDisplay, True); //ADD 2011/11/25
      // 伝票区分設定処理
      gpxMAHNB01012B_ChangeSalesSlip(salesSlip_disp, False, SalesSlipDisplayComBo.SelCode, changeSalesSlip, clearDetailInput, clearCarInfo);
      // 売上データキャッシュ処理
      gpxMAHNB01012B_Cache(salesSlip_disp);
      // Visible設定
      xSettingVisible();
      //追加情報タブ項目Visible設定
      xSettingAddInfoVisible();
      //車種変更ボタンVisible設定
      xSettingChangeCarInfoVisible();
      //伝票備考、伝票備考２、伝票備考３の入力桁数を制御する
      xSetNoteCharCnt();
      CustomerCode.Enabled := True;    //ADD Redmine#23527 2011/08/12
      // --- ADD 2013/11/05 Wakita ---------->>>>>
      xActiveCellButtonEnabledControl('', HNsGrid1.LogicalRow);
      // --- ADD 2013/11/05 Wakita ----------<<<<<
      end;


      // NextCtrl制御
      if canChangeFocus then
      begin
        if GetKeyState(VK_SHIFT) < 0 then
        begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
              NextCtrl := xGetNextControl(prevCtrl, 1);
            end;
          end;
        end else
        begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
              if (CustomerCode.GetInt() = 0) and (guideStart) then
              begin
                CustomerCodeBtnClick(CustomerCodeBtn);
                gpxMAHNB01012B_GetSalesSlip(salesSlip);
                xSettingVisible();
                //追加情報タブ項目Visible設定
                xSettingAddInfoVisible();
              end;

              if not guideStart then
              begin
                NextCtrl := PrevCtrl;
              end else if CustomerCode.GetInt() = 0 then
              begin
                // NextCtrl := CustomerCodeBtn;   // DEL 2010/09/13
                 NextCtrl := CustomerCode;        // ADD 2010/09/13
              end else
              begin
                NextCtrl := xGetNextControl(prevCtrl, 0);
              end;
            end;
          // ADD 2010/11/02 --- >>>>
          VK_RIGHT:
            begin
              if (CustomerName.ReadOnly = False) then
              begin
                NextCtrl := CustomerName;
              end;
            end;
          // ADD 2010/11/02 --- <<<<
          end;
        end;
      end else
      begin
        NextCtrl := PrevCtrl;
      end;
//      CustomerCode.Enabled := True;    //ADD 連番28 2011/07/19   //DEL Redmine#23527 2011/08/12
    end;

    // 得意先名称
    154 : begin
      // --- ADD 2012/06/06 No.826 ---------->>>>>
      if (CustomerName.ReadOnly) then Exit;
      // --- ADD 2012/06/06 No.826 ----------<<<<<

      if Trim(salesSlipCurrent.CustomerSnm) <> CustomerName.Text then
      begin
        if CustomerCode.Text<> '' then
        begin
          name := CustomerName.Text;
          if Length(name) > 20 then
          begin
            name := Copy(name, 1, 20);
          end;
          salesSlip_disp.CustomerSnm := name;
          salesSlip_disp.CustomerName := name;
          salesSlip_disp.CustomerName2 := '';
        end;
      //---ADD 2010/11/26 -----------<<<<<
      end else
      begin
          salesSlip_disp.CustomerSnm :=  CustomerName.Text;
          salesSlip_disp.CustomerName :=  CustomerName.Text;
          salesSlip_disp.CustomerName2 := '';
      end;
      //---ADD 2010/11/26 ----------->>>>>

      if GetKeyState(VK_SHIFT) < 0 then
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              NextCtrl := xGetNextControl(prevCtrl, 1);
            end;
        end;
      end else
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              if CustomerName.Text = '' then
              begin
                NextCtrl := CustomerCodeBtn;
              end else
              begin
                NextCtrl := xGetNextControl(prevCtrl, 0);
              end;
            end;
        end;
      end;
    end;

    // --- ADD 2010/05/31 ---------->>>>>
    // 得意先ガイド
    106: begin
       getNextCtrl := true;

       if GetKeyState(VK_SHIFT) < 0 then
       begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
              if (CustomerName.Visible) and (not CustomerName.ReadOnly) then
              begin
                NextCtrl := CustomerName;
              end else
              begin
                NextCtrl := CustomerCode;
              end;

              getNextCtrl := False;
            end;
          end;
       end else
       begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
              if (CustomerClaimConfirmationBtn.Visible) and (CustomerClaimConfirmationBtn.Enabled) then
              begin
                NextCtrl := CustomerClaimConfirmationBtn;
              end else
              begin
                NextCtrl := SalesEmployeeCd;
              end;

              getNextCtrl := False;
            end;
          // ADD 2010/11/02 --- >>>>
          VK_LEFT:
            begin
              if (CustomerName.ReadOnly = False) then
              begin
                NextCtrl := CustomerName;
              end;
            end;
          // ADD 2010/11/02 --- <<<<
          end;
       end;
    end;
    // --- ADD 2010/05/31 ----------<<<<<

    // 請求先確認
    107 : begin
      getNextCtrl := True;
    end;

    // 伝票種別
    116: begin
      // 売上形式変更処理
      xChangeAcptAnOdrStatus(salesSlip_disp, False);

      getNextCtrl := true;
    end;

    // 伝票区分
    117: begin

        gpxMAHNB01012B_ChangeSalesSlip(salesSlip_disp, False, SalesSlipDisplayComBo.SelCode, changeSalesSlip, clearDetailInput, clearCarInfo);

        if clearDetailInput then
        begin
          xDeatilClearDisplay();
          xDeatilClearTable();
        end;

        if clearCarInfo then
        begin
          // 画面クリア処理（車両情報）
          xClearDisplayCarInfo();
        end;

        SetDisplayHeaderFooterInfo(salesSlip_disp);
        //画面表示処理（売上金額合計情報）
        xSetDisplayTotalPriceInfo(salesSlip_disp);

        getNextCtrl := true;
        case VkCode of
        VK_DOWN:
          begin
            NextCtrl := MakerCode;
            getNextCtrl := False;
          end;
        end;
    end;

    // 商品区分
//    117: begin
//      if salesSlipCurrent.SalesGoodsCd <> SalesSlipDisplayComBo.SelCode then
//      begin
//        if SalesSlipDisplayComBo.SelCode <> -1 then
//        begin
//          gpxMAHNB01012B_ChangeSalesGoodsCd(salesSlipCurrent, SalesSlipDisplayComBo.SelCode, changeSalesGoodsCd, clearDetailInput, clearCarInfo);
//
//        if clearDetailInput then
//        begin
//          //xDeatilClear();
//        end;
//
//        if clearCarInfo then
//        begin
//          // 画面クリア処理（車両情報）
//          xClearDisplayCarInfo();
//        end;
//        end;
//
//        if changeSalesGoodsCd then
//        begin
//          salesSlip.SalesGoodsCd := SalesSlipDisplayComBo.SelCode;
//          // this._salesSlipDetailInput.GridSetting(this._salesInputConstructionAcs.SalesInputConstruction);
//        end;
//
//      end;
//
//      SetDisplayHeaderFooterInfo();
//      //画面表示処理（売上金額合計情報）
//      xSetDisplayTotalPriceInfo(salesSlip_disp);
//
//      case VkCode of
//      VK_DOWN:
//        begin
//          NextCtrl := MakerCode;
//        end;
//      end;
//    end;

    // 売上日
    119: begin
      SalesDateCheck := xCheckDateForSalesDate(SalesDate.LongDate);

      if (not SalesDateCheck) then
      begin
        //>>>2010/08/30
        //SalesDate.Clear;
        tDate := TicksToTDateTime(salesSlipCurrent.SalesDate);
        SalesDate.SetDate(StrToInt(FormatDateTime('yyyy', tDate)),
        StrToInt(FormatDateTime('mm', tDate)),
        StrToInt(FormatDateTime('dd', tDate)));
        getNextCtrl := false;
        NextCtrl := SalesDate;
        //<<<2010/08/30
      end
      else
      begin
         //gpxMAHNB01012B_AfterSalesDateFocus(salesSlip_disp, salesSlipCurrent,  TDateTimeToTicks(StrToDateTime(FormatFloat('0000/00/00', SalesDate.LongDate))), pnl_SalesDate.Caption, reCalcSalesUnitPrice, reCalcSalesPrice, taxRate); // DEL K2011/0812
         gpxMAHNB01012B_AfterSalesDateFocus(salesSlip_disp, salesSlipCurrent,  TDateTimeToTicks(StrToDateTime(FormatFloat('0000/00/00', SalesDate.LongDate))), pnl_SalesDate.Caption, reCalcSalesUnitPrice, reCalcSalesPrice, taxRate, canChangeFocus); // ADD K2011/0812
         // ----- ADD K2011/08/12 --------------------------->>>>>
         // ----- ADD K2011/12/09 --------------------------->>>>>
         // ----- UPD T.Miyamoto 2012/11/13 ------------------------------>>>>>
         //if (loginEnterpriseCode = login_EnterpriseCode) then
         if (loginEnterpriseCode = login_EnterpriseCode) or (optDateCtrl <> 0) then
         // ----- UPD T.Miyamoto 2012/11/13 ------------------------------<<<<<
         begin
         // ----- ADD K2011/12/09 ---------------------------<<<<<
             if (canChangeFocus) then
             begin
                 getNextCtrl := true;
             end
             else
             begin
                //tDate := TicksToTDateTime(salesSlipCurrent.SalesDate); // DEL K2011/09/01
                // ----- ADD K2011/09/01 --------------------------->>>>>
                if Length(IntToStr(salesSlipCurrent.SalesDate)) = 8 then
                begin
                  tDate := StrToDateTime(FormatFloat('0000/00/00', salesSlipCurrent.SalesDate));
                end else
                begin
                  tDate := TicksToTDateTime(salesSlipCurrent.SalesDate);
                end;
                // ----- ADD K2011/09/01 ---------------------------<<<<<
                SalesDate.SetDate(StrToInt(FormatDateTime('yyyy', tDate)),
                StrToInt(FormatDateTime('mm', tDate)),
                StrToInt(FormatDateTime('dd', tDate)));
                getNextCtrl := false;
                NextCtrl := SalesDate;
                SalesDate.SetFocus;// ADD K2011/09/01
             end;
         end;// ADD K2011/12/09
         // ----- ADD K2011/08/12 ---------------------------<<<<<
         //getNextCtrl := true; // 2010/08/30
         //getNextCtrl := true; // ADD K2011/12/14  // DEL K2011/12/14
         // ----- ADD K2011/12/15 --------------------------->>>>>
         // ----- UPD T.Miyamoto 2012/11/13 ------------------------------>>>>>
         //if (loginEnterpriseCode <> login_EnterpriseCode) then
         if (loginEnterpriseCode <> login_EnterpriseCode) and (optDateCtrl = 0) then
         // ----- UPD T.Miyamoto 2012/11/13 ------------------------------<<<<<
         begin
              getNextCtrl := true;
         end;
         // ----- ADD K2011/12/15 ---------------------------<<<<<
         //画面項目名称設定処理
         xGetDisplayName();   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
      end;
      //getNextCtrl := true; // 2010/08/30
      SalesDate.Color := $00D0C895;
    end;

    // 納入先コード
    210: begin
      if AddresseeCode.GetInt() <> salesSlipCurrent.AddresseeCode then
      begin
        gpxMAHNB01012B_AfterAddresseeCodeFocue(salesSlip_disp, AddresseeCode.GetInt(), HGetEnterpriseCode, reCalcSalesPrice);

        SetDisplayHeaderFooterInfo(salesSlip_disp);
        //画面表示処理（売上金額合計情報）
        xSetDisplayTotalPriceInfo(salesSlip_disp);
      end;

      getNextCtrl := true;
    end;

    // 納入先名称
    211: begin
      if salesSlipCurrent.AddresseeName + salesSlipCurrent.AddresseeName2 <> AddresseeName.Text then
      begin
        if AddresseeName.Text <> '' then
        begin
          salesSlip_disp.AddresseeName := AddresseeName.Text;
          salesSlip_disp.AddresseeName2 := '';
          if Length(AddresseeName.Text) > 30 then
          begin
            salesSlip_disp.AddresseeName := Copy(AddresseeName.Text, 1, 30);
          end;
        //---UPD zhaimm 2013/03/18 Redmine#34808 ------>>>>>
        //end;
        end else begin
          if AddresseeCode.GetInt() = 0 then
          begin
            salesSlip_disp.AddresseeName := '';
            salesSlip_disp.AddresseeName2 := '';
          end;
        end;
        //---UPD zhaimm 2013/03/18 Redmine#34808 ------<<<<<
      end;

      getNextCtrl := True;
      if not (GetKeyState(VK_SHIFT) < 0) then
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              if AddresseeName.Text = '' then
              begin
                getNextCtrl := false;
                NextCtrl := AddresseeCodeBtn;
              end;
            end;
        end;
      end;
    end;

    // 納入先確認
    214: begin
      getNextCtrl := true;
      // ADD 2013/02/12 SCM障害№10280対応------------------------>>>>>
      if not GetKeyState(VK_SHIFT) < 0 then
       begin
          case VkCode of
          VK_RETURN, VK_TAB:
            begin
             // UPD 2013/02/25 2013/03/13配信 システムテスト障害対応 ----------->>>>>
             //if (salesSlip_disp.OnlineKindDiv = 10) then
             // begin
             //   NextCtrl := HEdit_PartySalesSlipNum;
             // end else
             // begin
             //   NextCtrl := PartySaleSlipNum;
             // end;
             //   getNextCtrl := False;
              if (salesSlip_disp.CustOrderNoDispDiv = 0) then
              begin
                getNextCtrl := true;
              end else
              begin
                if (salesSlip_disp.OnlineKindDiv = 10) then
                begin
                  NextCtrl := HEdit_PartySalesSlipNum;
                end else
                begin
                  NextCtrl := PartySaleSlipNum;
                end;
                  getNextCtrl := False;
              end;
            end;
            // UPD 2013/02/25 2013/03/13配信 システムテスト障害対応 ----------->>>>>
          end;
       end;
      // ADD 2013/02/12 SCM障害№10280対応------------------------<<<<<
    end;

    // 納入先ガイド
    212: begin
      getNextCtrl := true;

      if GetKeyState(VK_SHIFT) < 0 then
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              getNextCtrl := false;
              NextCtrl := AddresseeName;
            end;
        end;
      end else
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              PrevCtrl := AddresseeName;
            end;
        end;
      end;
    end;

    // 得意先注番
    217: begin
      gpxMAHNB01013B_AfterPartySaleSlipNumFocus(salesSlip_disp, salesSlipCurrent, PartySaleSlipNum.Text, dialogFlag);
//>>>2011/05/17
//      if dialogFlag then
//      begin
//
//        for i := 1 to HNsGrid1.LogicalRowCount do
//        begin
//          if (HNsGrid1.LogicalCells[ctCol_BLGoodsCode, ctRow_BLGoodsCode, i] <> '') then
//          begin
//            HNsGrid1.LogicalCells[ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl, i] := PartySaleSlipNum.Text;
//          end;
//        end;
//      end;

      if salesSlipCurrent.PartySaleSlipNum <> HEdit_PartySalesSlipNum.Text then
      begin
        salesSlip_disp.PartySaleSlipNum := HEdit_PartySalesSlipNum.Text;
      end;
//<<<2011/05/17

      // NextCtrl制御
      getNextCtrl := true;
    end;

    // 備考１コード
    201: begin
      getNextCtrl := true;

      if salesSlipCurrent.SlipNoteCode <> SlipNoteCode.GetInt() then
      begin
        gpxMAHNB01012B_AfterSlipNoteCodeFocus(salesSlip_disp, SlipNoteCode.GetInt());

        // 売上データクラス→画面格納処理
        SetDisplayHeaderFooterInfo(salesSlip_disp);
        //画面表示処理（売上金額合計情報）
        xSetDisplayTotalPriceInfo(salesSlip_disp);
      end;

      // NextCtrl制御
      if not (GetKeyState(VK_SHIFT) < 0) then
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              if SlipNoteCode.Text = '' then
              begin

              end;
            end;
        end;
      end else
      begin
//        NextCtrl :=  nil;
//        getNextCtrlForFooter := true;
//        getNextCtrl := false;
      end;
    end;
    // 備考２コード
    204: begin
      getNextCtrl := true;

      if salesSlipCurrent.SlipNote2Code <> SlipNote2Code.GetInt() then
      begin
        //gpxMAHNB01012B_AfterSlipNote2CodeFocus(salesSlip_disp, SlipNote2Code.GetInt()); // DEL K2011/08/12
        gpxMAHNB01012B_AfterSlipNote2CodeFocus(salesSlip_disp, SlipNote2Code.GetInt(), canChangeFocus);// ADD K2011/08/12

        // ----- DEL K2011/08/12 --------------------------->>>>>
        //// 売上データクラス→画面格納処理
        //SetDisplayHeaderFooterInfo(salesSlip_disp);
        ////画面表示処理（売上金額合計情報）
        //xSetDisplayTotalPriceInfo(salesSlip_disp);
        // ----- DEL K2011/08/12 ---------------------------<<<<<
         // ----- ADD K2011/08/12 --------------------------->>>>>
         // ----- ADD K2011/12/09 --------------------------->>>>>
         if (loginEnterpriseCode = login_EnterpriseCode) then
         begin
         // ----- ADD K2011/12/09 ---------------------------<<<<<
            if (canChangeFocus) then
            begin
              getNextCtrl := true;
        // 売上データクラス→画面格納処理
        SetDisplayHeaderFooterInfo(salesSlip_disp);
        //画面表示処理（売上金額合計情報）
        xSetDisplayTotalPriceInfo(salesSlip_disp);
              end
              else
              begin
                getNextCtrl := false;
                NextCtrl := SlipNote2;
              end;
             end
         // ----- ADD K2011/12/09 --------------------------->>>>>
         else
         begin
             // 売上データクラス→画面格納処理
             SetDisplayHeaderFooterInfo(salesSlip_disp);
             //画面表示処理（売上金額合計情報）
             xSetDisplayTotalPriceInfo(salesSlip_disp);
         end;
         // ----- ADD K2011/12/09 ---------------------------<<<<<
         // ----- ADD K2011/08/12 ---------------------------<<<<<
      end;

      // NextCtrl制御

    end;

    // 備考３コード
    207: begin
      getNextCtrl := true;

      if salesSlipCurrent.SlipNote3Code <> SlipNote3Code.GetInt() then
      begin
        gpxMAHNB01012B_AfterSlipNote3CodeFocus(salesSlip_disp, SlipNote3Code.GetInt());

        // 売上データクラス→画面格納処理
        SetDisplayHeaderFooterInfo(salesSlip_disp);
        //画面表示処理（売上金額合計情報）
        xSetDisplayTotalPriceInfo(salesSlip_disp);
      end;

      // NextCtrl制御

    end;

    // 備考１
    202: begin
      isSlipNoteBtnClick := False; // ADD 2010/07/12
      getNextCtrl := true;

      // --- UPD 2012/09/12 Wakita ---------->>>>>
      //if salesSlipCurrent.SlipNote <> SlipNote.Text then
      if TrimRight(salesSlipCurrent.SlipNote) <> TrimRight(SlipNote.Text) then
      // --- UPD 2012/09/12 Wakita ----------<<<<<
      begin
        //-----UPD 2011/08/30----->>>>>
        // --- UPD 2012/09/12 Wakita ---------->>>>>
        //if Length(SlipNote.Text) > 30 then
        if Length(TrimRight(SlipNote.Text)) > 30 then
        // --- UPD 2012/09/12 Wakita ----------<<<<<
        begin
            Application.MessageBox(
            PChar(
             '備考の入力可能文字数が規定値('
             + IntToStr(30)
             + '文字)を超えています。'),
              PChar(Caption),
              MB_OK + MB_ICONWARNING);
              // --- UPD 2012/09/12 Wakita ---------->>>>>
              //salesSlip_disp.SlipNote := beSlipNote;
              //SlipNote.Text := beSlipNote;
              // DEL 李侠 Redmine#47002 2015/08/26 ---- >>>>>
              //salesSlip_disp.SlipNote := TrimRight(beSlipNote);
              //SlipNote.Text := TrimRight(beSlipNote);
              // DEL 李侠 Redmine#47002 2015/08/26 ---- <<<<<
              // ADD 李侠 Redmine#47002 2015/08/26 ---- >>>>>
              salesSlip_disp.SlipNote := LeftStr(TrimRight(SlipNote.Text),30);
              SlipNote.Text := LeftStr(TrimRight(SlipNote.Text),30);
              // ADD 李侠 Redmine#47002 2015/08/26 ---- <<<<<
              // --- UPD 2012/09/12 Wakita ----------<<<<<
              //-----ADD 2011/09/08----->>>>>
              // NextCtrl制御
              if not (GetKeyState(VK_SHIFT) < 0) then
              begin
                case VkCode of
                  VK_RETURN, VK_TAB:
                    begin
                      if Trim(SlipNote.Text) = '' then
                      begin
                        getNextCtrl := False;
                        NextCtrl := SlipNote;
                      end;
                    end;
                end;
              end;
              //-----ADD 2011/09/08-----<<<<<
        end else
        begin
           // --- UPD 2012/09/12 Wakita ---------->>>>>
           //salesSlip_disp.SlipNote := SlipNote.Text;
           //beSlipNote := SlipNote.Text;
           salesSlip_disp.SlipNote := TrimRight(SlipNote.Text);
           beSlipNote := TrimRight(SlipNote.Text);
           // --- UPD 2012/09/12 Wakita ----------<<<<<
           //-----ADD 2011/09/08----->>>>>
           // NextCtrl制御
           if not (GetKeyState(VK_SHIFT) < 0) then
           begin
               case VkCode of
                VK_RETURN, VK_TAB:
                  begin
                    if Trim(SlipNote.Text) = '' then
                    begin
                      getNextCtrl := False;
                      NextCtrl := SlipNoteCodeBtn;
                    end;
                  end;
              end;
            end;
        end;
        //-----ADD 2011/09/08-----<<<<<
        // salesSlip_disp.SlipNote := SlipNote.Text;
        //-----UPD 2011/08/30-----<<<<<
      end;
      //-----DEL 2011/09/08----->>>>>

//      // NextCtrl制御
//      if not (GetKeyState(VK_SHIFT) < 0) then
//      begin
//        case VkCode of
//          VK_RETURN, VK_TAB:
//            begin
//              if Trim(SlipNote.Text) = '' then
//              begin
//                getNextCtrl := False;
//                NextCtrl := SlipNoteCodeBtn;
//              end;
//            end;
//        end;
//      end;
     //-----DEL 2011/09/08-----<<<<<
    end;

    // 備考２
    205: begin
      isSlipNoteBtnClick := False; // ADD 2010/07/12
      getNextCtrl := true;

      // ----- ADD K2011/08/12 --------------------------->>>>>
      // ----- ADD K2011/12/09 --------------------------->>>>>
      if (loginEnterpriseCode = login_EnterpriseCode) then
      begin
      // ----- ADD K2011/12/09 ---------------------------<<<<<
        // --- UPD 2012/09/12 Wakita ---------->>>>>
        //gpxMAHNB01012B_AfterSlipNote2Focus(salesSlip_disp, SlipNote2.Text, canChangeFocus); // UPD K2011/08/12
        gpxMAHNB01012B_AfterSlipNote2Focus(salesSlip_disp, TrimRight(SlipNote2.Text), canChangeFocus); // UPD K2011/08/12
        // --- UPD 2012/09/12 Wakita ----------<<<<<
        if (canChangeFocus) then
        begin
        // NextCtrl制御
        // ----- DEL K2011/12/15 --------------------------->>>>>
        {if not (GetKeyState(VK_SHIFT) < 0) then
        begin
          case VkCode of
            VK_RETURN, VK_TAB:
              begin
                if Trim(SlipNote2.Text) = '' then
                begin
                  getNextCtrl := False;
                  NextCtrl := SlipNote2CodeBtn;
                end;
              end;
          end;
        end;  }
        // ----- DEL K2011/12/15 ---------------------------<<<<<
        end
        else
        begin
           getNextCtrl := false;
           NextCtrl := SlipNote2;
           noSaveFlg := true;// ADD K2011/09/20
        end;
      end; // ADD K2011/12/09
      // ----- ADD K2011/08/12 ---------------------------<<<<<
      // --- UPD 2012/09/12 Wakita ---------->>>>>
      //if salesSlipCurrent.SlipNote2 <> SlipNote2.Text then
      if TrimRight(salesSlipCurrent.SlipNote2) <> TrimRight(SlipNote2.Text) then
      // --- UPD 2012/09/12 Wakita ----------<<<<<
      begin
        //-----UPD 2011/08/30----->>>>>
        // --- UPD 2012/09/12 Wakita ---------->>>>>
        //if Length(SlipNote2.Text) > 30 then
        if Length(TrimRight(SlipNote2.Text)) > 30 then
        // --- UPD 2012/09/12 Wakita ----------<<<<<
        begin
            Application.MessageBox(
            PChar(
             '備考２の入力可能文字数が規定値('
             + IntToStr(30)
             + '文字)を超えています。'),
              PChar(Caption),
              MB_OK + MB_ICONWARNING);
              // --- UPD 2012/09/12 Wakita ---------->>>>>
              //salesSlip_disp.SlipNote2 := beSlipNote2;
              //SlipNote2.Text := beSlipNote2;
              // DEL 李侠 Redmine#47002 2015/08/26 ---- >>>>>
              //salesSlip_disp.SlipNote2 := TrimRight(beSlipNote2);
              //SlipNote2.Text := TrimRight(beSlipNote2);
              // DEL 李侠 Redmine#47002 2015/08/26 ---- <<<<<
              // ADD 李侠 Redmine#47002 2015/08/26 ---- >>>>>
              salesSlip_disp.SlipNote2 := LeftStr(TrimRight(SlipNote2.Text),30);
              SlipNote2.Text := LeftStr(TrimRight(SlipNote2.Text),30);
              // ADD 李侠 Redmine#47002 2015/08/26 ---- <<<<<
              // --- UPD 2012/09/12 Wakita ----------<<<<<
              //-----ADD 2011/09/08----->>>>>
              // NextCtrl制御
              if not (GetKeyState(VK_SHIFT) < 0) then
              begin
                case VkCode of
                  VK_RETURN, VK_TAB:
                    begin
                      if Trim(SlipNote2.Text) = '' then
                      begin
                        getNextCtrl := False;
                        NextCtrl := SlipNote2;
                      end;
                    end;
                end;
              end;
             //-----ADD 2011/09/08-----<<<<<
        end else
        begin
           // --- UPD 2012/09/12 Wakita ---------->>>>>
           //salesSlip_disp.SlipNote2 := SlipNote2.Text;
           //beSlipNote2 := SlipNote2.Text;
           salesSlip_disp.SlipNote2 := TrimRight(SlipNote2.Text);
           beSlipNote2 := TrimRight(SlipNote2.Text);
           // --- UPD 2012/09/12 Wakita ----------<<<<<
           //-----ADD 2011/09/08----->>>>>
            // NextCtrl制御
            if not (GetKeyState(VK_SHIFT) < 0) then
            begin
              case VkCode of
                VK_RETURN, VK_TAB:
                  begin
                    if Trim(SlipNote2.Text) = '' then
                    begin
                      getNextCtrl := False;
                      NextCtrl := SlipNote2CodeBtn;
                    end;
                  end;
              end;
            end;
           //-----ADD 2011/09/08-----<<<<<
        end;
        // salesSlip_disp.SlipNote2 := SlipNote2.Text;
        //-----UPD 2011/08/30-----<<<<<
      end;
      //-----DEL 2011/09/08----->>>>>
//      // NextCtrl制御
//      if not (GetKeyState(VK_SHIFT) < 0) then
//      begin
//        case VkCode of
//          VK_RETURN, VK_TAB:
//            begin
//              if Trim(SlipNote2.Text) = '' then
//              begin
//                getNextCtrl := False;
//                NextCtrl := SlipNote2CodeBtn;
//              end;
//            end;
//        end;
//      end;
      //-----DEL 2011/09/08-----<<<<<
    // ----- ADD K2011/12/09 --------------------------->>>>>
    // NextCtrl制御
    // ----- DEL K2011/12/15 --------------------------->>>>>
    {if (loginEnterpriseCode <> login_EnterpriseCode) then
    begin
       if not (GetKeyState(VK_SHIFT) < 0) then
       begin
         case VkCode of
           VK_RETURN, VK_TAB:
             begin
               if Trim(SlipNote2.Text) = '' then
               begin
                getNextCtrl := False;
                NextCtrl := SlipNote2CodeBtn;
               end;
            end;
    end;
       end;
      end;    }
    // ----- DEL K2011/12/15 ---------------------------<<<<<
    end;
    // ----- ADD K2011/12/09 ---------------------------<<<<<
    // 備考３
    208: begin
      isSlipNoteBtnClick := False; // ADD 2010/07/12
      getNextCtrl := true;

      // --- UPD 2012/09/12 Wakita ---------->>>>>
      //if salesSlipCurrent.SlipNote3 <> SlipNote3.Text then
      if TrimRight(salesSlipCurrent.SlipNote3) <> TrimRight(SlipNote3.Text) then
      // --- UPD 2012/09/12 Wakita ----------<<<<<
      begin
        //-----UPD 2011/08/30----->>>>>
        // --- UPD 2012/09/12 Wakita ---------->>>>>
        //if Length(SlipNote3.Text) > 30 then
        if Length(TrimRight(SlipNote3.Text)) > 30 then
        // --- UPD 2012/09/12 Wakita ----------<<<<<
        begin
            Application.MessageBox(
            PChar(
             '備考３の入力可能文字数が規定値('
             + IntToStr(30)
             + '文字)を超えています。'),
              PChar(Caption),
              MB_OK + MB_ICONWARNING);
              // --- UPD 2012/09/12 Wakita ---------->>>>>
              //salesSlip_disp.SlipNote3 := beSlipNote3;
              //SlipNote3.Text := beSlipNote3;
              // DEL 李侠 Redmine#47002 2015/08/26 ---- <<<<<
              //salesSlip_disp.SlipNote3 := TrimRight(beSlipNote3);
              //SlipNote3.Text := TrimRight(beSlipNote3);
              // DEL 李侠 Redmine#47002 2015/08/26 ---- <<<<<
              // ADD 李侠 Redmine#47002 2015/08/26 ---- >>>>>
              salesSlip_disp.SlipNote3 := LeftStr(TrimRight(SlipNote3.Text),30);
              SlipNote3.Text := LeftStr(TrimRight(SlipNote3.Text),30);
              // ADD 李侠 Redmine#47002 2015/08/26 ---- <<<<<
              // --- UPD 2012/09/12 Wakita ----------<<<<<
              //-----ADD 2011/09/08----->>>>>
              // NextCtrl制御
              if not (GetKeyState(VK_SHIFT) < 0) then
              begin
                case VkCode of
                  VK_RETURN, VK_TAB:
                    begin
                      if Trim(SlipNote3.Text) = '' then
                      begin
                        getNextCtrl := False;
                        NextCtrl := SlipNote3;
                      end;
                    end;
                end;
              end;
             //-----ADD 2011/09/08-----<<<<<
        end else
        begin
           // --- UPD 2012/09/12 Wakita ---------->>>>>
           //salesSlip_disp.SlipNote3 := SlipNote3.Text;
           //beSlipNote3 := SlipNote3.Text;
           salesSlip_disp.SlipNote3 := TrimRight(SlipNote3.Text);
           beSlipNote3 := TrimRight(SlipNote3.Text);
           // --- UPD 2012/09/12 Wakita ----------<<<<<
            //-----ADD 2011/09/08----->>>>>
            // NextCtrl制御
            if not (GetKeyState(VK_SHIFT) < 0) then
            begin
              case VkCode of
                VK_RETURN, VK_TAB:
                  begin
                    if Trim(SlipNote3.Text) = '' then
                    begin
                      getNextCtrl := False;
                      NextCtrl := SlipNote3CodeBtn;
                    end;
                  end;
              end;
            end;
           //-----ADD 2011/09/08-----<<<<<
        end;
        // salesSlip_disp.SlipNote3 := SlipNote3.Text;
        //-----UPD 2011/08/30-----<<<<<
      end;
       //-----DEL 2011/09/08----->>>>>
//      // NextCtrl制御
//      if not (GetKeyState(VK_SHIFT) < 0) then
//      begin
//        case VkCode of
//          VK_RETURN, VK_TAB:
//            begin
//              if Trim(SlipNote3.Text) = '' then
//              begin
//                getNextCtrl := False;
//                NextCtrl := SlipNote3CodeBtn;
//              end;
//            end;
//        end;
//      end;
        //-----DEL 2011/09/08-----<<<<<
    end;

    // 備考１ガイド
    203: begin
      getNextCtrl := true;

      // NextCtrl制御
      if GetKeyState(VK_SHIFT) < 0 then
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              getNextCtrl := False;
              NextCtrl := SlipNote;
            end;
        end;
      end else
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              PrevCtrl := SlipNote;
            end;
        end;
      end;
    end;

    // 備考２ガイド
    206: begin
      getNextCtrl := true;

      // NextCtrl制御
      if GetKeyState(VK_SHIFT) < 0 then
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              getNextCtrl := False;
              NextCtrl := SlipNote2;
            end;
        end;
      end else
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              PrevCtrl := SlipNote2;
            end;
        end;
      end;
    end;

    // 備考３ガイド
    209: begin
      getNextCtrl := true;

      // NextCtrl制御
      if GetKeyState(VK_SHIFT) < 0 then
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              getNextCtrl := False;
              NextCtrl := SlipNote3;
            end;
        end;
      end else
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              PrevCtrl := SlipNote3;
            end;
        end;
      end;
    end;

    // 返品理由
    215: begin
      value := Trim(RetGoodsReason.Text);

      if salesSlipCurrent.RetGoodsReason <> value then
      begin
        salesSlip_disp.RetGoodsReason := value;
        salesSlip_disp.RetGoodsReasonDiv := 0;
      end;

      // NextCtrl制御
      getNextCtrl := True;
      getNextCtrlForFooter := false;

      if not (GetKeyState(VK_SHIFT) < 0) then
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              if Trim(RetGoodsReason.Text) = '' then
              begin
                getNextCtrl := False;
                NextCtrl := RetGoodsReasonBtn;
              end;
            end;
        end;
      end;
    end;

    // 返品理由ガイド
    216: begin
      getNextCtrl := true;

      // NextCtrl制御
      if GetKeyState(VK_SHIFT) < 0 then
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              getNextCtrl := False;
              NextCtrl := RetGoodsReason;
            end;
        end;
      end else
      begin
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              PrevCtrl := RetGoodsReason;
            end;
        end;
      end;
    end;

    // 納品区分
    213: begin
      // --- ADD 2010/07/12 ---------->>>>>
      if not (DeliveredGoodsDivComBo.SelCode = -1) then
      begin
        salesSlip_disp.DeliveredGoodsDiv := DeliveredGoodsDivComBo.SelCode;
        salesSlip_disp.DeliveredGoodsDivNm := DeliveredGoodsDivComBo.Text;

        if Length(salesSlip_disp.DeliveredGoodsDivNm) > 10 then
        begin
          salesSlip_disp.DeliveredGoodsDivNm := Copy(salesSlip_disp.DeliveredGoodsDivNm, 1, 10);
        end;
      end else
      begin
        salesSlip_disp.DeliveredGoodsDiv := salesSlipCurrent.DeliveredGoodsDiv;
        salesSlip_disp.DeliveredGoodsDivNm := salesSlipCurrent.DeliveredGoodsDivNm;
      end;
      // --- ADD 2010/07/12 ----------<<<<<

      // 売上データクラス→画面格納処理
      SetDisplayHeaderFooterInfo(salesSlip_disp);
      //画面表示処理（売上金額合計情報）
      xSetDisplayTotalPriceInfo(salesSlip_disp);

      getNextCtrl := true;
      getNextCtrlForFooter := false;
    end;

    // 車両情報
    // 諸元情報
    136: begin
          case VkCode of
            VK_UP:
              begin
                getNextCtrl := false;
                NextCtrl := FullModel;
              end;
            VK_RETURN, VK_TAB, VK_DOWN:
              begin
                getNextCtrl := false;
                NextCtrl := HNsGrid1;
              end;
          end;
    end;

    // 管理番号
    120: begin
          //管理番号でのガイド表示設定
          status := gpxMAHNB01012B_AfterCarMngCodeFocus(CarMngCode.Text, CustomerCode.GetInt(), HGetEnterpriseCode, salesRowNo, selectedInfo, returnFlag, clearCarInfo);
// ------------ ADD 2011/08/04 --------------->>>>>
          //前回と同じ場合、3を戻す
          //データを選択する場合、1を戻す
          //何も選らない場合、2を戻す
          //新規登録を選択場合、0を戻す
          //ガイドで検索データがない場合、0を戻す
          if ((status = 2) or (status = 3)) and (pos('*', CarMngCode.Text) > 0) then begin
            strCarMngCode := CarMngCode.Text;
          end else begin
            strCarMngCode := '';
          end;
// ------------ ADD 2011/08/04 ---------------<<<<<

          gpxMAHNB01012B_SetGetSearchCarDiv(2, searchCarDiv); // ADD 2010/07/16

          if returnFlag then
          begin
            //ガイド表示後のフォーカス制御
            if ('新規登録' = selectedInfo.CarMngCode) then
            begin
                ModelDesignationNo.setFocus;
                CarNoteCode.SetInt(0); // ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218
                CarSlipNote.Text := ''; // 2010/11/02
            end else
            begin
              // 得意先コード
              CustomerCode.SetInt(selectedInfo.CustomerCode);

              CarMngGuideFlag := True; // ADD 2012/06/26 No.632

              control := CustomerCode;
              ArrowKeyControl1ChangeFocus(control, control, VK_TAB);

              // 型式指定番号
              ModelDesignationNo.SetInt(selectedInfo.ModelDesignationNo);
              // 類別番号
              CategoryNo.SetInt(selectedInfo.CategoryNo);

              // 車両情報画面表示処理
              xSetDisplayCarInfo(salesRowNo, searchType);

              CarMngGuideFlag := False; // ADD 2012/06/26 No.632
            end;
          end;

          if clearCarInfo then
          begin
            tempCarMngCode := CarMngCode.Text;
            // 画面クリア処理（車両情報）
            xClearDisplayCarInfo();

            CarMngCode.Text := tempCarMngCode;
          end;

          // 追加情報タブ項目Visible設定
          xSettingAddInfoVisible();

          //>>>2010/11/02
//          // --- UPD m.suzuki 2010/10/27 ---------->>>>>
//          //// --- ADD 2010/07/14 ---------->>>>>
//          //SlipNote.Text := CarSlipNote.Text; // 備考1
//          //// --- ADD 2010/07/14  ----------<<<<<
//          if (SlipNote.Text = '') then
//          begin
          //SlipNote.Text := CarSlipNote.Text; // 備考1
//          end;
//          // --- UPD m.suzuki 2010/10/27 ----------<<<<<

          //if (Trim(CarMngCode.Text) <> Trim(carInfo.CarMngCode)) // DEL 2011/11/18
          if (Trim(CarMngCode.Text) <> Trim(carInfo.CarMngCode)) AND (status <> 10)then begin // ADD 2011/11/18
             // --- ADD 2013/04/18 Wakita ---------->>>>>
             begin
               if (TrimRight(SlipNote.Text) = '') then
             // --- ADD 2013/04/18 Wakita ----------<<<<<

             // --- UPD 2012/09/12 Wakita ---------->>>>>
             //SlipNote.Text := CarSlipNote.Text; // 備考1
             SlipNote.Text := TrimRight(CarSlipNote.Text); // 備考1
             // --- UPD 2012/09/12 Wakita ----------<<<<<
             // --- ADD 2013/04/18 Wakita ---------->>>>>
             end;
             // --- ADD 2013/04/18 Wakita ----------<<<<<
          end;
          //<<<2010/11/02

          //----ADD 2010/06/17----->>>>>
          salesSlipSet.CustomerCode := CustomerCode.GetInt();
          salesSlipSet.SalesEmployeeCd := SalesEmployeeCd.Text;
          salesSlipSet.SalesEmployeeNm := SalesEmployeeNm.Text;
          // --- UPD 2012/09/12 Wakita ---------->>>>>
          //salesSlipSet.SlipNote := SlipNote.Text;   //----ADD 2010/09/06
          salesSlipSet.SlipNote := TrimRight(SlipNote.Text);
          // --- UPD 2012/09/12 Wakita ----------<<<<<
          gpxMAHNB01013B_SetSalesSlip(salesSlipSet);
          //----ADD 2010/06/17-----<<<<<
          // 車種変更ボタンVisible設定
          xSettingChangeCarInfoVisible();

          getNextCtrl := true;
          case VkCode of
            VK_DOWN:
              begin
                getNextCtrl := false;
                NextCtrl := ModelDesignationNo;
              end;
            VK_RETURN, VK_TAB:
              begin
//                if status = 0 then       // DEL 2011/08/04
                if (status = 0) or (status = 3) then    // ADD 2011/08/04
                begin
                  PrevCtrl := CarMngCode;

                  // --- ADD 2013/05/10 T.Miyamoto ---------->>>>>
                  //車輌未検索時の次フォーカスを設定
                  if (searchCarDiv) then
                  begin
                    getNextCtrl := false;
                    NextCtrl:= xGetNextCtrlNotCarSearch();
                  end;
                  // --- ADD 2013/05/10 T.Miyamoto ----------<<<<<
                end else if status = 1 then
                begin
                  getNextCtrl := false;
                  // --- UPD 2010/06/26 ---------->>>>>
                  //NextCtrl:= xGetNextCtrlAfterCarSearch();
                  NextCtrl:= xGetNextCtrlAfterCarSearch(PrevCtrl);
                  // --- UPD 2010/06/26 ----------<<<<<

                  // ADD 2010/08/13 ---->>>>
                  if (returnFlag) then
                  begin
                    //if (xGetNextControl(CarMngCode, 0) <> nil) then     // DEL 2010/08/25
                    if (xGetNextCtrlAfterCarSearch(CarMngCode) <> nil) then       // ADD 2010/08/25
                    begin
                        //if (xGetNextControl(CarMngCode, 0) = HNsGrid1) then       // DEL 2010/08/25
                        if (xGetNextCtrlAfterCarSearch(CarMngCode) = HNsGrid1) then // ADD 2010/08/25
                        begin
                          if (HNsGrid1.Enabled = True) then
                          begin
                            NextCtrl := HNsGrid1;
                          end
                        end
                        else
                        begin
                           //NextCtrl := xGetNextControl(CarMngCode, 0);   // DEL 2010/08/25
                           NextCtrl := xGetNextCtrlAfterCarSearch(CarMngCode);     // ADD 2010/08/25
                        end;
                    end;
                  end;
                  // ADD 2010/08/13 ----<<<<

                end else
                begin
                  PrevCtrl := SalesDate;
                end;
              end;
          end;
         end;
    // 管理番号ガイド
    121: begin
          case VkCode of
            VK_RETURN, VK_TAB:
              begin
                getNextCtrl := false;
                NextCtrl := ModelDesignationNo;
              end;
          end;
        end;

    // 型式指定番号
    127 : begin
      getNextCtrl := true;

      if not (GetKeyState(VK_SHIFT) < 0) then
      begin
        getNextCtrl := False;
        case VkCode of
          VK_RETURN, VK_TAB:
            begin
              NextCtrl := CategoryNo;
            end;
        end;
      end;
    end;

    // 類別区分番号
    128: begin
          getNextCtrl := false;
          PrevCtrl := ModelDesignationNo;

          // BLコード検索
          if i_searchPartsMode = ctBLCodeSearch then
          begin
            if ((CategoryNo.GetInt() <> 0)
                and (ModelDesignationNo.GetInt() <> 0)
                and ((ModelDesignationNo.GetInt() <> carInfo.ModelDesignationNo)
                    or (CategoryNo.GetInt() <> carInfo.CategoryNo)
                    or searchCarDiv)) then
              begin
                // --- DEL 2013/05/10 T.Miyamoto ---------->>>>>
                //searchCarDiv := false;
                //gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv); // ADD 2010/07/19
                // --- DEL 2013/05/10 T.Miyamoto ----------<<<<<

                ClearTCarSearchCondition(carSearchCondition);
                carSearchCondition.ModelDesignationNo := ModelDesignationNo.GetInt();
                carSearchCondition.CategoryNo := CategoryNo.GetInt();
                searchType := 1;

                // 車両検索処理
                carSerchRet := xCarSearch(carSearchCondition, salesRowNo, searchType);

                case carSerchRet of
                9:
                  begin
                    Application.MessageBox(
                      '検索中にエラーが発生しました。',
                      PChar(Caption),
                      MB_OK + MB_ICONWARNING);

                      NextCtrl := ModelDesignationNo;
                  end;
                0:
                  begin
                    changeCarInfo := True;
                    // 車両情報画面表示処理
                    xSetDisplayCarInfo(salesRowNo, searchType);

                    // --- UPD 2010/06/26 ---------->>>>>
                    //NextCtrl:= xGetNextCtrlAfterCarSearch();
                    NextCtrl:= xGetNextCtrlAfterCarSearch(PrevCtrl);
                    // --- UPD 2010/06/26 ----------<<<<<
                    carChangeRowFlg := true;

                    // --- ADD 2013/05/10 T.Miyamoto ---------->>>>>
                    //車輌検索済に設定
                    searchCarDiv := false;
                    gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv);
                    // --- ADD 2013/05/10 T.Miyamoto ----------<<<<<
                  end;
                1:
                  begin
                  if Application.MessageBox(
                    '該当する車輌情報が存在しません。' + #10 + #10 +
                    '品番入力モードに変更しますか？',
                    PChar(Caption),
                    MB_YESNO + MB_ICONWARNING + MB_DEFBUTTON2) = IDYES then
                  begin
                    // 部品検索切替処理
                    xChangeSearchMode(0);
                    changeCarInfo := True;
                    // 車両情報テーブル行の型式指定番号および類別区分番号セット
                    gpxMAHNB01012B_SettingCarInfoRowFromCategoryNoAndDesignationNo(salesRowNo, ModelDesignationNo.GetInt(), CategoryNo.GetInt());
                  end else
                  begin
                    NextCtrl := ModelDesignationNo;
                    // --- UPD 2013/05/10 T.Miyamoto ---------->>>>>
                    //ModelDesignationNo.Clear();
                    //CategoryNo.Clear();
                    ModelDesignationNo.SetInt(carInfo.ModelDesignationNo);
                    CategoryNo.SetInt(carInfo.CategoryNo);
                    // --- UPD 2013/05/10 T.Miyamoto ----------<<<<<
                  end;

                  end;
                // --- ADD 2013/05/10 T.Miyamoto ---------->>>>>
                -1:
                  begin
                    //車輌検索で｢戻る｣押下時は入力値を元に戻す
                    ModelDesignationNo.SetInt(carInfo.ModelDesignationNo);
                    CategoryNo.SetInt(carInfo.CategoryNo);
                  end;
                // --- ADD 2013/05/10 T.Miyamoto ----------<<<<<
                end;
              end else
              begin
                // 車両情報テーブル行の型式指定番号および類別区分番号セット
                gpxMAHNB01012B_SettingCarInfoRowFromCategoryNoAndDesignationNo(salesRowNo, ModelDesignationNo.GetInt(), CategoryNo.GetInt());
                getNextCtrl := true;
                PrevCtrl := ModelDesignationNo;
              end;
          end else
          begin
            // 車両情報テーブル行の型式指定番号および類別区分番号セット
            gpxMAHNB01012B_SettingCarInfoRowFromCategoryNoAndDesignationNo(salesRowNo, ModelDesignationNo.GetInt(), CategoryNo.GetInt());
            getNextCtrl := true;
            PrevCtrl := ModelDesignationNo;
          end;
         end;
    // 型式／モデルプレート
    133: begin
          getNextCtrl := true;

          // BLコード検索
          if i_searchPartsMode = ctBLCodeSearch then
          begin
            if i_searchCarMode = ctFullModelSearch then
            begin
              //---------------------------------------------------------------
              // 型式検索
              //---------------------------------------------------------------
              if ((Trim(FullModel.Text) <> '')
              and ((Trim(FullModel.Text) <> Trim(carInfo.FullModel))
                or searchCarDiv)) then
              begin
                // --- DEL 2013/05/10 T.Miyamoto ---------->>>>>
                //searchCarDiv := False;
                //gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv); // ADD 2010/07/19
                // --- DEL 2013/05/10 T.Miyamoto ----------<<<<<
                // 車両検索処理
                ClearTCarSearchCondition(carSearchCondition);
                carSearchCondition.CarModel.FullModel := FullModel.Text;
                carSearchCondition.CarModel.IsFullModel := True;
                searchType := 2;

                // 車両検索処理
                carSerchRet := xCarSearch(carSearchCondition, salesRowNo, searchType);

                case carSerchRet of
                9:
                  begin
                    getNextCtrl := false;
                    NextCtrl := PrevCtrl;
                    FullModel.Clear();
                  end;
                0:
                  begin
                    fullModeFlg := True;      // ADD 2010/08/13
                    changeCarInfo := True;
                    // 車両情報画面表示処理
                    xSetDisplayCarInfo(salesRowNo, searchType);
                    // --- UPD 2010/06/26 ---------->>>>>
                    //NextCtrl:= xGetNextCtrlAfterCarSearch();
                    NextCtrl:= xGetNextCtrlAfterCarSearch(PrevCtrl);

                    if NextCtrl = nil then
                    begin
                      getNextCtrl := true;
                    end else
                    begin
                      getNextCtrl := false;
                    end;
                    // --- UPD 2010/06/26 ----------<<<<<

                    // --- ADD 2013/05/10 T.Miyamoto ---------->>>>>
                    //車輌検索済に設定
                    searchCarDiv := false;
                    gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv);
                    // --- ADD 2013/05/10 T.Miyamoto ----------<<<<<
                  end;
                1:
                  begin
                    if Application.MessageBox(
                      '該当する車輌情報が存在しません。' + #10 + #10 +
                      '品番入力モードに変更しますか？',
                      PChar(Caption),
                      MB_YESNO + MB_ICONWARNING + MB_DEFBUTTON2) = IDYES then
                    begin
                      fullModeFlg := True;      // ADD 2010/08/13
                      // 部品検索切替処理
                      xChangeSearchMode(0);
                      changeCarInfo := True;
                      getNextCtrl := true;
                      // 車両情報テーブル行の型式セット
                      gpxMAHNB01012B_SettingCarInfoRowFromFullModel(salesRowNo, FullModel.Text);
                    end else
                    begin
                      getNextCtrl := false;
                      NextCtrl := PrevCtrl;
                      // --- UPD 2013/05/10 T.Miyamoto ---------->>>>>
                      //FullModel.Clear();
                      FullModel.Text := Trim(carInfo.FullModel);
                      // --- UPD 2013/05/10 T.Miyamoto ----------<<<<<
                    end;
                  end;
                  // ADD 2010/08/13 ---->>>>
                -1:
                  begin
                    // --- UPD 2013/05/10 T.Miyamoto ---------->>>>>
                    //getNextCtrl := false;
                    //NextCtrl := PrevCtrl;
                    //FullModel.Clear();
                    //車輌検索で｢戻る｣押下時は入力値を元に戻す
                    FullModel.Text := Trim(carInfo.FullModel);
                    // --- UPD 2013/05/10 T.Miyamoto ----------<<<<<
                  end;
                  // ADD 2010/08/13 ----<<<<
                end;
                // --- ADD 2010/08/13
              end
              else
              begin
                if (FullModel.DataText = '') then
                begin
                   fullModeFlg := False;
                end
                else
                begin
                   fullModeFlg := True;
                end;
              end;
              // --- ADD 2010/08/13

            end else
            begin
              //---------------------------------------------------------------
              // モデルプレート検
              //---------------------------------------------------------------
              if ((Trim(FullModel.Text) <> '')
                and ((Trim(FullModel.Text) <> Trim(carInfo.FullModel))
                    or searchCarDiv)) then
              begin
                searchCarDiv := False;
                gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv); // ADD 2010/07/19
                // 車両検索処理
                ClearTCarSearchCondition(carSearchCondition);
                carSearchCondition.ModelPlate := FullModel.Text;
                searchType := 4;

                // 車両検索処理
                carSerchRet := xCarSearch(carSearchCondition, salesRowNo, searchType);

                case carSerchRet of
                9:
                  begin
                    getNextCtrl := false;
                    NextCtrl := PrevCtrl;
                    FullModel.Clear();
                  end;
                0:
                  begin
                    fullModeFlg := True;        // ADD 2010/08/13
                    changeCarInfo := True;
                    // 車両情報画面表示処理
                    xSetDisplayCarInfo(salesRowNo, searchType);
                    // --- UPD 2010/06/26 ---------->>>>>
                    //nextCtrl:= xGetNextCtrlAfterCarSearch();
                    nextCtrl:= xGetNextCtrlAfterCarSearch(PrevCtrl);
                    if NextCtrl = nil then
                    begin
                      getNextCtrl := true;
                    end else
                    begin
                      getNextCtrl := false;
                    end;
                    // --- UPD 2010/06/26 ----------<<<<<
                  end;
                1:
                  begin
                  if Application.MessageBox(
                    '該当する車輌情報が存在しません。' + #10 + #10 +
                    '品番入力モードに変更しますか？',
                    PChar(Caption),
                    MB_YESNO + MB_ICONWARNING + MB_DEFBUTTON2) = IDYES then
                  begin
                    // 部品検索切替処理
                    fullModeFlg := True;      // ADD 2010/08/13
                    xChangeSearchMode(0);
                    changeCarInfo := True;
                    getNextCtrl := true;
                    gpxMAHNB01012B_SettingCarInfoRowFromFullModel(salesRowNo, FullModel.Text);
                  end else
                  begin
                    getNextCtrl := false;
                    NextCtrl := PrevCtrl;
                    // --- UPD 2013/05/10 T.Miyamoto ---------->>>>>
                    //FullModel.Clear();
                    FullModel.Text := Trim(carInfo.FullModel);
                    // --- UPD 2013/05/10 T.Miyamoto ----------<<<<<
                  end;

                  end;
                  // ADD 2010/08/13 ---->>>>
                -1:
                  begin
                    // --- UPD 2013/05/10 T.Miyamoto ---------->>>>>
                    //getNextCtrl := false;
                    //NextCtrl := PrevCtrl;
                    //FullModel.Clear();
                    //車輌検索で｢戻る｣押下時は入力値を元に戻す
                    FullModel.Text := Trim(carInfo.FullModel);
                    // --- UPD 2013/05/10 T.Miyamoto ----------<<<<<
                  end;
                 // ADD 2010/08/13 ----<<<<
                end;
                // --- ADD 2010/08/13
              end
              else
              begin
                if (FullModel.DataText = '') then
                begin
                   fullModeFlg := False;
                end
                else
                begin
                   fullModeFlg := True;
                end;
              end;
              // --- ADD 2010/08/13
            end;
          end else
          begin
            fullModeFlg := True;         // --- ADD 2010/08/13
            gpxMAHNB01012B_SettingCarInfoRowFromFullModel(salesRowNo, FullModel.Text);
          end;

          case VkCode of
              VK_DOWN:
              begin
                getNextCtrl := false;
                // ADD 2010/08/13 ---->>>>
                if (fullModeFlg) then
                begin
                  NextCtrl := HNsGrid1;
                end
                else
                begin
                  NextCtrl := FullModel;
                end;
                // ADD 2010/08/13 ----<<<<
              end;
              VK_UP:
              begin
                getNextCtrl := false;
                NextCtrl := ModelDesignationNo;
              end;
          end;
         end;
    // エンジン型式
    129: begin
          getNextCtrl := true;

          // BLコード検索
          if i_searchPartsMode = ctBLCodeSearch then
          begin
            if ((Trim(EngineModelNm.Text) <> '')
              and ((Trim(EngineModelNm.Text) <> Trim(carInfo.EngineModelNm))
                  or searchCarDiv)) then
              begin
                // --- DEL 2013/05/10 T.Miyamoto ---------->>>>>
                //searchCarDiv := False;
                //gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv); // ADD 2010/07/19
                // --- DEL 2013/05/10 T.Miyamoto ----------<<<<<
                // 車両検索処理
                ClearTCarSearchCondition(carSearchCondition);
                carSearchCondition.EngineModel.FullModel := EngineModelNm.Text;
                searchType := 3;

                // 車両検索処理
                carSerchRet := xCarSearch(carSearchCondition, salesRowNo, searchType);

                case carSerchRet of
                9:
                  begin
                    getNextCtrl := false;
                    NextCtrl := PrevCtrl;
                    EngineModelNm.Clear();
                  end;
                0:
                  begin
                    changeCarInfo := True;
                    // 車両情報画面表示処理
                    xSetDisplayCarInfo(salesRowNo, searchType);
                    // --- UPD 2010/06/26 ---------->>>>>
                    //nextCtrl := xGetNextCtrlAfterCarSearch();
                    nextCtrl := xGetNextCtrlAfterCarSearch(PrevCtrl);
                    //NextCtrl := PrevCtrl;
                    if NextCtrl = nil then
                    begin
                      getNextCtrl := true;
                    end else
                    begin
                      getNextCtrl := false;
                    end;
                    // --- UPD 2010/06/26 ----------<<<<<

                    // --- ADD 2013/05/10 T.Miyamoto ---------->>>>>
                    //車輌検索済に設定
                    searchCarDiv := false;
                    gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv);
                    // --- ADD 2013/05/10 T.Miyamoto ----------<<<<<
                  end;
                1:
                  begin
                  if Application.MessageBox(
                    '該当する車輌情報が存在しません。' + #10 + #10 +
                    '品番入力モードに変更しますか？',
                    PChar(Caption),
                    MB_YESNO + MB_ICONWARNING + MB_DEFBUTTON2) = IDYES then
                  begin
                    // 部品検索切替処理
                    xChangeSearchMode(0);
                    changeCarInfo := True;
                    getNextCtrl := true;
                    // 車両情報テーブル行のエンジン型式セット
                    gpxMAHNB01012B_SettingCarInfoRowFromEngineModelNm(salesRowNo, EngineModelNm.Text);
                  end else
                  begin
                    getNextCtrl := false;
                    NextCtrl := PrevCtrl;
                    // --- UPD 2013/05/10 T.Miyamoto ---------->>>>>
                    //EngineModelNm.Clear();
                    EngineModelNm.Text := Trim(carInfo.EngineModelNm);
                    // --- UPD 2013/05/10 T.Miyamoto ----------<<<<<
                  end;
                  end;
                // --- ADD 2013/05/10 T.Miyamoto ---------->>>>>
                -1:
                  begin
                    //車輌検索で｢戻る｣押下時は入力値を元に戻す
                    EngineModelNm.Text := Trim(carInfo.EngineModelNm);
                  end;
                // --- ADD 2013/05/10 T.Miyamoto ----------<<<<<
                end;
              end;
          end else
          begin
            // 車両情報テーブル行のエンジン型式セット
            gpxMAHNB01012B_SettingCarInfoRowFromEngineModelNm(salesRowNo, EngineModelNm.Text);
          end;
         end;
    // カラー
    131: begin
          if Trim(ColorNo.Text) <> '' then
          begin
            currentColorCode := carInfo.ColorCode;
            if gpxMAHNB01012B_SelectColorInfo(carInfo.CarRelationGuid, ColorNo.Text) <> true then
            begin
              Application.MessageBox(
              'カラーコードが設定範囲外です。'
              , PChar(Caption), MB_OK
                + MB_ICONINFORMATION);

              ColorNo.Text := currentColorCode;
              // カラー情報選択処理
              gpxMAHNB01012B_SelectColorInfo(carInfo.CarRelationGuid, ColorNo.Text);
              changeCarInfo := False;
              NextCtrl := PrevCtrl;
            end else
            begin
              xSetDisplayCarInfo(salesRowNo, 1);
            end;
          end else
          begin
            // カラー情報選択処理
            gpxMAHNB01012B_SelectColorInfo(carInfo.CarRelationGuid, ColorNo.Text);
          end;
          getNextCtrl := true;
          changeCarInfo := true; // ADD 2010/05/31
         end;
    // トリム
    135: begin
          if Trim(TrimNo.Text) <> '' then
          begin
            currentTrimCode := carInfo.TrimCode;
            if gpxMAHNB01012B_SelectTrimInfo(carInfo.CarRelationGuid, TrimNo.Text) <> true then
            begin
              Application.MessageBox(
              'トリムコードが設定範囲外です。'
              , PChar(Caption), MB_OK
                + MB_ICONINFORMATION);

            TrimNo.Text := currentTrimCode;
            // トリム情報選択処理
            gpxMAHNB01012B_SelectTrimInfo(carInfo.CarRelationGuid, TrimNo.Text);
            changeCarInfo := False;
            NextCtrl := PrevCtrl;
            end else
            begin
              xSetDisplayCarInfo(salesRowNo, 1);
            end;
          end else
          begin
            // トリム情報選択処理
            gpxMAHNB01012B_SelectTrimInfo(carInfo.CarRelationGuid, TrimNo.Text);
          end;

          getNextCtrl := true;
          changeCarInfo := true; // ADD 2010/05/31

          case VkCode of
              VK_TAB,    // ADD 2013/05/10 T.Miyamoto
              VK_RETURN, // ADD 2013/05/10 T.Miyamoto
              VK_DOWN:
              begin
                // --- ADD 2010/08/13
                // --- UPD 2013/05/10 T.Miyamoto ---------->>>>>
                //if ((i_searchPartsMode = 1) and (FullModel.DataText = '')) then
                if ((i_searchPartsMode = 1) and (searchCarDiv)) then
                // --- UPD 2013/05/10 T.Miyamoto ----------<<<<<
                begin
                  getNextCtrl := false;
                  NextCtrl := TrimNo;
                end
                else
                begin
                  getNextCtrl := false;
                  NextCtrl := HNsGrid1;
                end;
                // --- ADD 2010/08/13
              end;
          end;
         end;
    // カーメーカーコード
    122: begin
            changeCarInfo := False;
            getNextCtrl := False;

            if MakerCode.GetInt() <> carInfo.MakerCode then
            begin
              gpxMAHNB01012B_AfterMakerCodeFocus(MakerCode.GetInt(), salesRowNo, makerName);
              ModelFullName.Text := makerName;
              if (MakerCode.GetInt() <> 0) and (makerName = '') then
              begin
                Application.MessageBox(
                '入力したメーカーコードは存在しません。'
                , PChar(Caption), MB_OK
                  + MB_ICONINFORMATION);

                MakerCode.SetInt(carInfo.MakerCode);
                ModelFullName.Text := carInfo.MakerFullName;
                NextCtrl := PrevCtrl;
              end else
              begin
                changeCarInfo := True;
              end;
            end;

            getNextCtrl := true;
            // NextCtrl制御
            if not (GetKeyState(VK_SHIFT) < 0) then
            begin
              case VkCode of
                VK_RETURN, VK_TAB:
                begin
                  if MakerCode.GetInt() =0 then
                  begin
                    // --- UPD 2010/10/21
                    //getNextCtrl := false;
                    getNextCtrl := true;
                    // --- UPD 2010/10/21
                    NextCtrl := ModelFullNameBtn;
                  end;
                end;

              end;
            end;
         end;
    // 車種コード
    123: begin
            changeCarInfo := False;
            getNextCtrl := False;

            if (ModelCode.GetInt() <> carInfo.ModelCode)
              or (ModelSubCode.GetInt() <> carInfo.ModelSubCode) then
            begin
              makerCd := MakerCode.GetInt();
              modelCd := ModelCode.GetInt();
              modelSubCd := ModelSubCode.GetInt();

              gpxMAHNB01012B_AfterModelCodeFocus(makerCd, modelCd, modelSubCd, salesRowNo, modeName);
              ModelFullName.Text := modeName;
              if (ModelCode.GetInt() <> 0) and (modeName = '') then
              begin
                Application.MessageBox(
                '入力した車種コードは存在しません。'
                , PChar(Caption), MB_OK
                  + MB_ICONINFORMATION);

                ModelCode.SetInt(carInfo.ModelCode);
                ModelFullName.Text := carInfo.ModelFullName;
                NextCtrl := PrevCtrl;
              end else
              begin
                changeCarInfo := True;
                getNextCtrl := true;
              end;
            end else
            begin
              getNextCtrl := true;
            end;
         end;
    // 車種呼称コード
    124: begin
            changeCarInfo := False;
            getNextCtrl := False;

            if (ModelCode.GetInt() <> carInfo.ModelCode)
                or (ModelSubCode.GetInt() <> carInfo.ModelSubCode) then
            begin
              makerCd := MakerCode.GetInt();
              modelCd := ModelCode.GetInt();
              modelSubCd := ModelSubCode.GetInt();

              gpxMAHNB01012B_AfterModelSubCodeFocus(makerCd, modelCd, modelSubCd, salesRowNo, modeName);
              ModelFullName.Text := modeName;
              if (ModelSubCode.GetInt() <> 0) and (modeName = '') then
              begin
                Application.MessageBox(
                '入力した車種呼称コードは存在しません。'
                , PChar(Caption), MB_OK
                  + MB_ICONINFORMATION);

                ModelCode.SetInt(carInfo.ModelCode);
                ModelSubCode.SetInt(carInfo.ModelSubCode);
                ModelFullName.Text := carInfo.ModelFullName;
                NextCtrl := PrevCtrl;
              end else
              begin
                changeCarInfo := True;
                getNextCtrl := True;
              end;
            end else
            begin
              getNextCtrl := True;
            end;
         end;
    // 車種名称
    125: begin
            makerCd := MakerCode.GetInt();
            modelCd := ModelCode.GetInt();
            modelSubCd := ModelSubCode.GetInt();
            modeName := ModelFullName.Text;

            gpxMAHNB01012B_AfterModelFullNameFocus(makerCd, modelCd, modelSubCd, modeName, salesRowNo);

            changeCarInfo := True;
            getNextCtrl := true;

            // NextCtrl制御
            if not (GetKeyState(VK_SHIFT) < 0) then
            begin
              case VkCode of
                VK_RETURN, VK_TAB:
                begin
                  if Trim(ModelFullName.Text) = '' then
                  begin
                    NextCtrl := ModelFullNameBtn;
                    getNextCtrl := false;
                  end;
                end;
              end;
            end;
         end;
    // 車種ガイドボタン
    126: begin
      getNextCtrl := true;

      if GetKeyState(VK_SHIFT) < 0 then
      begin
          case VkCode of
            VK_RETURN, VK_TAB:
            begin
              if (ModelFullName.Enabled) and (not ModelFullName.ReadOnly) and (ModelFullName.Visible) then
              begin
                nextCtrl := ModelFullName;
              end else
              begin
                nextCtrl := MakerCode;
              end;
              getNextCtrl := false;
            end;
          end;
      end else
      begin
        case VkCode of
            VK_RETURN, VK_TAB:
            begin
              PrevCtrl := ModelFullName;
            end;
        end;
      end;
    end;

    // 年式
    130: begin
            // チェック
            if (not xCheckDateForFirstEntryDate()) then
            begin
              Application.MessageBox(
                '日付が不正です。'
                , PChar(Caption), MB_OK
                  + MB_ICONINFORMATION);

                  NextCtrl := PrevCtrl;
                  changeCarInfo := True;
                  getNextCtrl := False;
            end else
            begin
              boolRet := True;
              gpxMAHNB01012B_AfterFirstEntryDateFocus(FirstEntryDate.LongDate, salesRowNo, boolRet);

              if not boolRet then
              begin
                Application.MessageBox(
                '生産年式が設定範囲外です。'
                , PChar(Caption), MB_OK
                  + MB_ICONINFORMATION);

                NextCtrl := PrevCtrl;
                changeCarInfo := False;
                getNextCtrl := False;

                FirstEntryDate.LongDate := carInfo.FirstEntryDate * 100;
              end else
              begin
                changeCarInfo := True;
                getNextCtrl := true;
              end;
            end;

            case VkCode of
              VK_DOWN:
              begin
                getNextCtrl := false;
                NextCtrl := ProduceFrameNo;
              end;
            end;

            if FirstEntryDate.LongDate = 0 then
            begin
               FirstEntryDate.YearName := '';
            end;

         end;
    // 車台番号
    134: begin
            canChangeFocus := true;

            // UPD 2010/09/06 ---- >>>>>
            //if ProduceFrameNo.Text <> carInfo.FrameNo then
            if Trim(ProduceFrameNo.Text) <> carInfo.FrameNo then
            // UPD 2010/09/06 ---- <<<<<
            begin
              searchType := 0;
              boolRet := true;
              // --- UPD 2012/06/26 No.476 ---------->>>>>
              //gpxMAHNB01012B_AfterProduceFrameNoFocus(ProduceFrameNo.Text, salesRowNo, boolRet, 1);
              gpxMAHNB01012B_AfterProduceFrameNoFocus(Trim(ProduceFrameNo.Text), salesRowNo, boolRet, 1);
              // --- UPD 2012/06/26 No.476 ----------<<<<<

              if boolRet then
              begin
                xSetDisplayCarInfo(salesRowNo, searchType);
                changeCarInfo := True;
              end else
              begin
                Application.MessageBox(
                // --- UPD 2013/02/14 Wakita ---------->>>>>
                //'車台番号が設定範囲外です。'
                '入力した車台番号の生産年式が設定範囲外です。'
                // --- UPD 2013/02/14 Wakita ----------<<<<<
                , PChar(Caption), MB_OK
                  + MB_ICONINFORMATION);

                NextCtrl := PrevCtrl;
                changeCarInfo := False;
                getNextCtrl := False;
                canChangeFocus := False;

                // --- UPD 2012/06/26 No.476 ---------->>>>>
                //ProduceFrameNo.Text := carInfo.FrameNo;
                ProduceFrameNo.Text := Trim(carInfo.FrameNo);
                // --- UPD 2012/06/26 No.476 ----------<<<<<
                ProduceFrameNo.SelectAll();
              end;
            end;

            getNextCtrl := canChangeFocus;

            if getNextCtrl then
            begin
              case VkCode of
                VK_DOWN:
                begin
                // --- ADD 2010/08/13
                  // --- UPD 2013/05/10 T.Miyamoto ---------->>>>>
                  //if ((i_searchPartsMode = 1) and (FullModel.DataText = '')) then
                  if ((i_searchPartsMode = 1) and (searchCarDiv)) then
                  // --- UPD 2013/05/10 T.Miyamoto ----------<<<<<
                  begin
                    getNextCtrl := false;
                    NextCtrl := ProduceFrameNo;
                  end
                  else
                  begin
                    getNextCtrl := false;
                    NextCtrl := HNsGrid1;
                  end;
                end;
                // --- ADD 2010/08/13
              end;
            end;
         end;

    //伝票メモ
    401,402,403,404,405,406:
    begin
       gpxMAHNB01013B_SetSlipMemo(SlipMemo1.Text, SlipMemo2.Text,SlipMemo3.Text,InsideMemo1.Text,InsideMemo2.Text,InsideMemo3.Text,salesRowNo);

       // 各行ごとの設定
      cnt := HNsGrid1.RowCount;
      for rowIndex := 2 to cnt - 1 do
      begin
        xSettingGridRow(rowIndex);
      end;
    end;

    // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
    // 車輌備考コード
    500: begin
           if (carInfo.CarNoteCode <> CarNoteCode.GetInt()) then begin // ADD 2014/05/22 T.Miyamoto ｼｽﾃﾑﾃｽﾄ障害№79
             gpxMAHNB01012B_SettingCarInfoRowFromCarNoteCode(salesRowNo, CarNoteCode.GetInt());
             xSetDisplayCarInfo(salesRowNo, 0);
           end;
           getNextCtrl := True; // ADD 2014/05/30 T.Miyamoto ｼｽﾃﾑﾃｽﾄ障害№86
    end;
    // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------<<<<<

    // 車輌備考
    501: begin
           if CarSlipNote.Text <> carInfo.CarNote then
           begin
            // 車輌備考設定処理
            gpxMAHNB01012B_SettingCarInfoRowFromCarNoteCode(salesRowNo, 0); // ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218
            gpxMAHNB01012B_SettingCarInfoRowFromCarNote(salesRowNo, CarSlipNote.Text);
            xSetDisplayCarInfo(salesRowNo, 0);

            changeCarInfo := True;
           end;

           getNextCtrl := true;
           // --- DEL 2014/05/30 T.Miyamoto ｼｽﾃﾑﾃｽﾄ障害№86 ------------------------------>>>>>
           //// NextCtrl制御
           //if not (GetKeyState(VK_SHIFT) < 0) then
           // begin
           //   case VkCode of
           //     VK_RETURN, VK_TAB:
           //     begin
           //       if Trim(CarSlipNote.Text) = '' then
           //       begin
           //         getNextCtrl := false;
           //         // --- UPD 2014/05/22 T.Miyamoto ｼｽﾃﾑﾃｽﾄ障害№80 ---------->>>>>
           //         //NextCtrl := SlipNoteGuideBtn;
           //         NextCtrl := Mileage;
           //         // --- UPD 2014/05/22 T.Miyamoto ｼｽﾃﾑﾃｽﾄ障害№80 ----------<<<<<
           //       end;
           //     end;
           //   end;
           // end;
           // --- DEL 2014/05/30 T.Miyamoto ｼｽﾃﾑﾃｽﾄ障害№86 ------------------------------<<<<<
         end;
    // 走行距離
    503: begin
          Mileage.Text := StringReplace(Mileage.Text, ',', '', [rfReplaceAll]) ; // ADD 2010/06/26
          if Mileage.GetInt() <> carInfo.Mileage then
          begin
            // 車輌走行距離設定処理
            gpxMAHNB01012B_SettingCarInfoRowFromMileage(salesRowNo, Mileage.GetInt());
            xSetDisplayCarInfo(salesRowNo, 0);

            changeCarInfo := True;
          end
          // --- ADD 2010/06/26 ---------->>>>>
          else
          begin
            Mileage.Text := FormatFloat('#,##0', Mileage.GetInt());
          end;
          // --- ADD 2010/06/26 ----------<<<<<

          getNextCtrl := true;
         end;
     // 車輌備考ガイド
     502: begin
       getNextCtrl := true;

       // NextCtrl制御
       if GetKeyState(VK_SHIFT) < 0 then
        begin
          case VkCode of
            VK_RETURN, VK_TAB:
            begin
              NextCtrl := CarSlipNote;
              getNextCtrl := false;
            end;
          end;
        end else
        begin
          case VkCode of
            VK_RETURN, VK_TAB:
            begin
              PrevCtrl := CarSlipNote;
              //getNextCtrl := false; // DEL 2014/05/30 T.Miyamoto ｼｽﾃﾑﾃｽﾄ障害№85
            end;
          end;
        end;
     end;
  end;

  //---------------------------------------------------------------
  // 売上データ変更時
  //---------------------------------------------------------------
  gpxMAHNB01012B_CompareSalesSlip(salesSlip_disp, salesSlipCurrent, returnFlag);
  if returnFlag or isCache then
  begin
    // 売上データキャッシュ処理
    gpxMAHNB01012B_CacheForChange(salesSlip_disp);

    // 売上データクラス→画面格納処理
      SetDisplayHeaderFooterInfo(salesSlip_disp);
    //画面表示処理（売上金額合計情報）
    xSetDisplayTotalPriceInfo(salesSlip_disp);

    // データ変更フラグプロパティをTrueにする
    isDataChanged := true;
    gpxMAHNB01012B_SetGetIsDataChanged(1, isDataChanged);
  end;

  //---------------------------------------------------------------
  // 車両情報変更時
  //---------------------------------------------------------------
  if changeCarInfo then
  begin
    // 車両情報画面表示処理
    xSetDisplayCarInfo(salesRowNo, 0);

    // 売上データクラス→画面格納処理
    SetDisplayHeaderFooterInfo(salesSlip_disp);
    //画面表示処理（売上金額合計情報）
    xSetDisplayTotalPriceInfo(salesSlip_disp);

    // データ変更フラグプロパティをTrueにする
    isDataChanged := true;
    gpxMAHNB01012B_SetGetIsDataChanged(1, isDataChanged);

    // 追加情報タブ項目Visible設定
    xSettingAddInfoVisible();

    //----ADD 2010/06/17----->>>>>
    salesSlipSet.CustomerCode := CustomerCode.GetInt();
    salesSlipSet.SalesEmployeeCd := SalesEmployeeCd.Text;
    salesSlipSet.SalesEmployeeNm := SalesEmployeeNm.Text;
    // --- UPD 2012/09/12 Wakita ---------->>>>>
    //salesSlipSet.SlipNote := SlipNote.Text;    //----ADD 2010/09/06
    salesSlipSet.SlipNote := TrimRight(SlipNote.Text);
    // --- UPD 2012/09/12 Wakita ----------<<<<<
    gpxMAHNB01013B_SetSalesSlip(salesSlipSet);
    //----ADD 2010/06/17-----<<<<<
  end;

  //----------------------------------------------------------------
  // 車輌検索前に退避しておいた内容の再セット
  //----------------------------------------------------------------

  // --- UPD 2012/06/26 No.476 ---------->>>>>
  //if (i_beforeCarSearchBuffer.ProduceFrameNo <> '') and (ProduceFrameNo.Text = '') then
  if (i_beforeCarSearchBuffer.ProduceFrameNo <> '') and (Trim(ProduceFrameNo.Text) = '') then
  // --- UPD 2012/06/26 No.476 ----------<<<<<
  begin
    ProduceFrameNo.Text := i_beforeCarSearchBuffer.ProduceFrameNo;
  end;

  // --- DEL m.suzuki 2010/11/01 ---------->>>>>
  //if (i_beforeCarSearchBuffer.FirstEntryDate <> 0) and (FirstEntryDate.LongDate = 0) then
  //begin
  //  FirstEntryDate.LongDate := i_beforeCarSearchBuffer.FirstEntryDate;
  //end;
  // --- DEL m.suzuki 2010/11/01 ----------<<<<<

  if i_beforeCarSearchBuffer.ColorNo <> '' then
  begin
    ColorNo.Text := i_beforeCarSearchBuffer.ColorNo;
  end;

  if i_beforeCarSearchBuffer.TrimNo <> '' then
  begin
    TrimNo.Text := i_beforeCarSearchBuffer.TrimNo;
  end;

  // 入力チェック
  // --- ADD 2012/06/26 No.632 ---------->>>>>
  if (CarMngGuideFlag = False) then
  begin
  // --- ADD 2012/06/26 No.632 ----------<<<<<
    if (i_beforeCarSearchBuffer.ProduceFrameNo <> '') or (Trim(ProduceFrameNo.Text) <> '') then
    begin
      // [車台番号]
      searchType := 0;
      boolRet := true;
      // --- UPD 2012/06/26 No.476 ---------->>>>>
      //gpxMAHNB01012B_AfterProduceFrameNoFocus(ProduceFrameNo.Text, salesRowNo, boolRet, 2);
      gpxMAHNB01012B_AfterProduceFrameNoFocus(Trim(ProduceFrameNo.Text), salesRowNo, boolRet, 2);
      // --- UPD 2012/06/26 No.476 ----------<<<<<

      if boolRet then
      begin
        xSetDisplayCarInfo(salesRowNo, searchType);
        changeCarInfo := True;
      end else
      begin
        Application.MessageBox(
        // --- UPD 2013/02/14 Wakita ---------->>>>>
        //'車台番号が設定範囲外です。'
        '入力した車台番号の生産年式が設定範囲外です。'
        // --- UPD 2013/02/14 Wakita ----------<<<<<
        , PChar(Caption), MB_OK
          + MB_ICONINFORMATION);

        NextCtrl := ProduceFrameNo;

        ProduceFrameNo.Text := '';
      end;
    end;
    // --- DEL 2012/07/04 No.632 ---------->>>>>
    // --- ADD 2012/06/26 No.632 ---------->>>>>
    //end;
    // --- ADD 2012/06/26 No.632 ----------<<<<<
    // --- DEL 2012/07/04 No.632 ----------<<<<<

    // --- ADD 2013/03/21 ---------->>>>>
    // 型式が入力済みかつ、メーカーコードがBENZ、
    // VINコードが入力済みの場合(外車の場合)
    // ハンドル位置をチェックする
    if (Trim(carInfo.FullModel) <> '') and
       (carInfo.MakerCode = 80) and
       (carInfo.DomesticForeignCode = 2) and
       (gpxMAHNB01012B_CheckHandlePosition(carInfo.CarRelationGuid, Trim(ProduceFrameNo.Text)) <> True) then
    begin
      if VkCode <> VK_DOWN then
      begin
        Application.MessageBox(
        'ハンドル位置が異なります。'
        , PChar(Caption), MB_OK
          + MB_ICONINFORMATION);
      end;
      NextCtrl := ProduceFrameNo;
      getNextCtrl := False;
      ProduceFrameNo.SelectAll();
    end;
    // --- ADD 2013/03/21 ----------<<<<<

    // --- ADD m.suzuki 2010/11/01 ---------->>>>>
    if (i_beforeCarSearchBuffer.FirstEntryDate <> 0) and (FirstEntryDate.LongDate = 0) then
    begin
      FirstEntryDate.LongDate := i_beforeCarSearchBuffer.FirstEntryDate;
    end;
    // --- ADD m.suzuki 2010/11/01 ----------<<<<<

    // [年式]
    if (i_beforeCarSearchBuffer.FirstEntryDate <> 0) or (FirstEntryDate.LongDate <> 0) then
    begin
      if (not xCheckDateForFirstEntryDate()) then
      begin
        Application.MessageBox(
          '日付が不正です。'
          , PChar(Caption), MB_OK
            + MB_ICONINFORMATION);

            NextCtrl := PrevCtrl;
      end else
      begin
        boolRet := True;
        gpxMAHNB01012B_AfterFirstEntryDateFocus(FirstEntryDate.LongDate, salesRowNo, boolRet);

        if not boolRet then
        begin
          Application.MessageBox(
          '生産年式が設定範囲外です。'
          , PChar(Caption), MB_OK
            + MB_ICONINFORMATION);

          // --- UPD 2012/06/26 No.476 ---------->>>>>
          //if ProduceFrameNo.Text <> '' then
          if Trim(ProduceFrameNo.Text) <> '' then
          // --- UPD 2012/06/26 No.476 ----------<<<<<
          begin
            NextCtrl := ProduceFrameNo;
          end;

          FirstEntryDate.LongDate := 0;
        end;
      end;
    end;

    // [カラー]
    if i_beforeCarSearchBuffer.ColorNo <> '' then
    begin
      ColorNo.Text := i_beforeCarSearchBuffer.ColorNo;
      if Trim(ColorNo.Text) <> '' then
      begin
        currentColorCode := carInfo.ColorCode;
        if gpxMAHNB01012B_SelectColorInfo(carInfo.CarRelationGuid, ColorNo.Text) <> true then
        begin
          Application.MessageBox(
          'カラーコードが設定範囲外です。'
          , PChar(Caption), MB_OK
            + MB_ICONINFORMATION);

          ColorNo.Text := '';
          // カラー情報選択処理
          gpxMAHNB01012B_SelectColorInfo(carInfo.CarRelationGuid, ColorNo.Text);
          NextCtrl := ColorNo;
        end;
      end else
      begin
        // カラー情報選択処理
        gpxMAHNB01012B_SelectColorInfo(carInfo.CarRelationGuid, ColorNo.Text);
      end;
    end;

    // [トリム]
    if i_beforeCarSearchBuffer.TrimNo <> '' then
    begin
      TrimNo.Text := i_beforeCarSearchBuffer.TrimNo;
      if Trim(TrimNo.Text) <> '' then
      begin
        currentTrimCode := carInfo.TrimCode;
        if gpxMAHNB01012B_SelectTrimInfo(carInfo.CarRelationGuid, TrimNo.Text) <> true then
        begin
          Application.MessageBox(
          'トリムコードが設定範囲外です。'
          , PChar(Caption), MB_OK
            + MB_ICONINFORMATION);

        TrimNo.Text := '';
        // トリム情報選択処理
        gpxMAHNB01012B_SelectTrimInfo(carInfo.CarRelationGuid, TrimNo.Text);
        NextCtrl := TrimNo;
        end;
      end else
      begin
        // トリム情報選択処理
        gpxMAHNB01012B_SelectTrimInfo(carInfo.CarRelationGuid, TrimNo.Text);
      end;
    end;
  // --- ADD 2012/07/04 No.632 ---------->>>>>
  end;
  // --- ADD 2012/07/04 No.632 ----------<<<<<

  //---------------------------------------------------------------
  // 売上単価再計算時
  //---------------------------------------------------------------
  if reCalcSalesUnitPrice then
  begin
    gpxMAHNB01012B_ReCalcSalesUnitPrice(salesSlip_disp);

    // 売上金額変更後発生イベント処理
    xSalesPriceChanged();

  end;

  //---------------------------------------------------------------
  // 売上金額再計算時
  //---------------------------------------------------------------
  if reCalcSalesPrice then
  begin
    // 売上金額計算処理
    //this._salesSlipDetailInput.CalculationSalesPrice();

    // --- ADD 2010/05/31 ---------->>>>>
    gpxMAHNB01012B_CalculationSalesPrice();
    // --- ADD 2010/05/31 ----------<<<<<

    // 売上金額変更後発生イベント処理
    xSalesPriceChanged();
  end;

  //---------------------------------------------------------------
  // 明細情報更新
  //---------------------------------------------------------------
  if reCalcSalesUnitPrice or reCalcSalesPrice or inputSalesSlipNum then
  begin
    xSalesSlipDetailInput_DetailChanged(salesRowNo);

    xDeatilClearDisplay();
    gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);
    xSetDetailRowFormC(salesDetailArray,-1);
    // --- ADD 2010/06/02 ---------->>>>>
    xSettingGrid();
    // --- ADD 2010/06/02 ---------->>>>>
  end;

  //---------------------------------------------------------------
  // 掛率情報クリア
  //---------------------------------------------------------------
  // ----- DEL 2021/09/16 譚洪 PMKOBETSU-4188対応----->>>>>
  //if clearRateInfo then
  //begin
  //  gpxMAHNB01012B_ClearAllRateInfo();
  //end;
  // ----- DEL 2021/09/16 譚洪 PMKOBETSU-4188対応-----<<<<<

  //---------------------------------------------------------------
  // 明細グリッドセル再設定
  //---------------------------------------------------------------
  if changeSalesGoodsCd or changeAcptAnOdrStatus or changeSalesSlip or clearRateInfo or reCalcSalesUnitPrice then
  begin
    // 明細グリッドセル設定処理
    xSettingGrid();

    xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);
  end;

  //---------------------------------------------------------------
  // NextCtrl算出
  //---------------------------------------------------------------
  if getNextCtrl then
  begin
    if GetKeyState(VK_SHIFT) < 0 then
      begin
        case VkCode of
        VK_RETURN, VK_TAB:
          begin
            NextCtrl := xGetNextControl(prevCtrl, 1);
          end;
        end;
      end else
      begin
        case VkCode of
        VK_RETURN, VK_TAB:
          begin
            NextCtrl := xGetNextControl(prevCtrl, 0);
          end;
        end;
      end;
  end else if getNextCtrlForFooter then
  begin
    if GetKeyState(VK_SHIFT) < 0 then
      begin
        case VkCode of
        VK_RETURN, VK_TAB:
          begin
            NextCtrl := xGetNextControlForFooter(prevCtrl, 1);
          end;
        end;
      end else
      begin
        case VkCode of
        VK_RETURN, VK_TAB:
          begin
            NextCtrl := xGetNextControlForFooter(prevCtrl, 0);
          end;
        end;
      end;
  end;

  // ADD 2010/10/21 --- >>>>
  if ((NextCtrl.Name = 'FirstEntryDate') and (prevCtrl.Name = 'FirstEntryDate')) then
  begin
     NextCtrl := nil;
     firstEntryDateFlg := True;
     Exit;
  end;
  // ADD 2010/10/21 --- <<<<

// --- ADD 2010/10/21 障害・改良対応(８月リリース案件)の７０ ---------- >>>>>
  if ((NextCtrl.Name = 'FirstEntryDate') and (prevCtrl.Name <> 'FirstEntryDate')) then
  begin
    if ((xGetNextControl(FirstEntryDate, 0) = FirstEntryDate)) then
    begin
      if (
        ((Trim(FullModel.Text) <> '') and (i_searchPartsMode = ctBLCodeSearch))
        or (i_searchPartsMode = ctGoodsNoSearch)) then
      begin
         FirstEntryDate.ExtCase.RetKey := True;
      end
      else
      begin
         FirstEntryDate.ExtCase.RetKey := False;
      end;
    end else
    begin
      FirstEntryDate.ExtCase.RetKey := True;
    end;
  end;

  if ((NextCtrl.Name = 'SalesDate') and (prevCtrl.Name <> 'SalesDate')) then
  begin
//    if ((xGetNextControl(SalesDate, 0) = HNsGrid1)
//        and (
//        ((Trim(FullModel.Text) <> '') and (i_searchPartsMode = ctBLCodeSearch))
//        or (i_searchPartsMode = ctGoodsNoSearch))
//    ) then
//    begin
//      SalesDate.ExtCase.RetKey := True;
//    end else
//    begin
//      SalesDate.ExtCase.RetKey := False;
//    end;
    if (xGetNextControl(SalesDate, 0) = SalesDate) then
    begin
      if (
        ((Trim(FullModel.Text) <> '') and (i_searchPartsMode = ctBLCodeSearch))
        or (i_searchPartsMode = ctGoodsNoSearch)) then
      begin
        SalesDate.ExtCase.RetKey := True;
      end
      else
      begin
        SalesDate.ExtCase.RetKey := False;
      end;
    end else
    begin
      SalesDate.ExtCase.RetKey := True;
    end;
  end;
//  else if ((NextCtrl.Name = 'HNsGrid1')) then
//  begin
//     if (SalesDate.ExtCase.RetKey) then
//     begin
//        NextCtrl := HNsGrid1;
//     end;
//  end;

  if ((NextCtrl.Name = 'CategoryNo') and (prevCtrl.Name <> 'CategoryNo')) then
  begin
//    if ((xGetNextControl(CategoryNo, 0) = CategoryNo)
//        and (
//        ((Trim(FullModel.Text) <> '') and (i_searchPartsMode = ctBLCodeSearch))
//        or (i_searchPartsMode = ctGoodsNoSearch))
//    ) then
//    begin
//      CategoryNo.ExtCase.RetKey := True;
//    end else
//    begin
//      CategoryNo.ExtCase.RetKey := False;
//    end;
//    if ((xGetNextControl(CategoryNo, 0) = CategoryNo)) then
//    begin
//      if ((Trim(ModelDesignationNo.Text) = '') or (Trim(CategoryNo.Text) = '')) then
//      begin
//        CategoryNo.ExtCase.RetKey := False;
//      end
//      else
//      begin
//        CategoryNo.ExtCase.RetKey := True;
//      end;
//    end else
//    begin
//      CategoryNo.ExtCase.RetKey := True;
//    end;
  end;

  // --- ADD 2010/10/21 --- >>>>
  if (NextCtrl.Name = 'FullModelBtn') then
  begin
      if i_searchCarMode=1 then
      begin
        i_searchCarMode := 2;
        FullModelBtn.Caption := ctSearchCarMode_ModelPlate;
      end else if i_searchCarMode=2 then
      begin
        i_searchCarMode := 1;
        FullModelBtn.Caption := ctSearchCarMode_FullModel;
      end;
      NextCtrl := PrevCtrl;
  end;
  // --- ADD 2010/10/21 --- <<<<


// --- ADD 2010/10/21 障害・改良対応(８月リリース案件)の７０ ---------- <<<<<

  //---------------------------------------------------------------
  // ボタンツール有効無効設定処理
  //---------------------------------------------------------------
  if ((NextCtrl <> Nil) and (NextCtrl.TabStop)
      or ((NextCtrl <> Nil) and (NextCtrl.Name = 'FirstEntryDate'))) then
  begin
        xSettingGuideButtonToolEnabled(NextCtrl);
        xSettingAddUpButtonToolEnabled(NextCtrl);
        xSettingToolBarButtonCaption;
        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        // ----- ADD 2011/12/21 tianjw Redmine#27290 ------------------>>>>>
        if Form4.ActiveControl = HNsGrid1 then
        begin
          SettingToolBarButtonEnabled(HNsGrid1);
        end
        else
        begin
          SettingToolBarButtonEnabled(nil);
        end;
        // ----- ADD 2011/12/21 tianjw Redmine#27290 ------------------<<<<<
  end;

  //売上明細
  case NextCtrl.Tag of
   153:begin
         if (HNsGrid1.LogicalRow > 0) then
         begin
            xActiveCellButtonEnabledControl(xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col),HNsGrid1.LogicalRow);
         end;
       end;
  end;

  if NextCtrl is THComboBox then
  begin
    THComboBox(NextCtrl).Color := $009CE3F7;
  end else if NextCtrl is TDateTimePicker then
  begin
    TDateTimePicker(NextCtrl).Color := $009CE3F7;
  end;

  //---------------------------------------------------------------
  // 登録処理
  //---------------------------------------------------------------
  //   最終項目(納入先確認、返品理由、返品理由ガイド、得意先注番)でEnterキーを押下した場合
  //---------------------------------------------------------------
  if VkCode = VK_RETURN then
  begin
    if (PrevCtrl = NextCtrl) and (getNextCtrl = true) then
    begin
      if (PrevCtrl.Name = SlipNote.Name)
      or (PrevCtrl.Name = SlipNote2.Name)
      or (PrevCtrl.Name = SlipNote3.Name)
      or (PrevCtrl.Name = SlipNoteCode.Name)
      or (PrevCtrl.Name = SlipNote2Code.Name)
      or (PrevCtrl.Name = SlipNote3Code.Name)
      or (PrevCtrl.Name = SlipNoteCodeBtn.Name)
      or (PrevCtrl.Name = SlipNote2CodeBtn.Name)
      or (PrevCtrl.Name = SlipNote3CodeBtn.Name)
      or (PrevCtrl.Name = AddresseeConfirmationBtn.Name)
      or (PrevCtrl.Name = RetGoodsReason.Name)
      or (PrevCtrl.Name = RetGoodsReasonBtn.Name)
      or (PrevCtrl.Name = PartySaleSlipNum.Name)
      or (PrevCtrl.Name = AddresseeCode.Name)
      or (PrevCtrl.Name = AddresseeName.Name)
      or (PrevCtrl.Name = AddresseeCodeBtn.Name)
      or (PrevCtrl.Name = DeliveredGoodsDivComBo.Name)
      or (PrevCtrl.Name = CarSlipNote.Name)
      or (PrevCtrl.Name = CarNoteCode.Name) // ADD 2014/05/30 T.Miyamoto ｼｽﾃﾑﾃｽﾄ障害№86
      or (PrevCtrl.Name = SlipNoteGuideBtn.Name)
      or (PrevCtrl.Name = HEdit_PartySalesSlipNum.Name) // 2011/05/25
      or (PrevCtrl.Name = Mileage.Name) then
      begin
        // --- ADD 2010/07/12 ---------->>>>>
        //xdoSave(true);
        if ((PrevCtrl.Name = SlipNote.Name)
        or (PrevCtrl.Name = SlipNote2.Name)
        or (PrevCtrl.Name = SlipNote3.Name))
        and (isSlipNoteBtnClick) then
        begin

        end else
        begin
          //>>>2011/12/12
          //xdoSave(true);

          if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Red) and
              (salesSlip_disp.SalesSlipNum <> ctDefaultSalesSlipNum)) then begin
          end else begin
            isSaveFlg := True; // ADD 20104/06/17 T.Miyamoto
          xdoSave(true);
        end;
          //<<<2011/12/12
        end;
        // --- ADD 2010/07/12 ----------<<<<<
      end;
    end;
  end;
   // --- ADD 2010/08/13
  if (PrevCtrl = HNsGrid1) then
  begin
     logicalRowInt := HNsGrid1.LogicalRow;
     // ADD K2015/04/01 高騁 森川部品個別依頼 ---->>>>>
     if(NextCtrl <> Nil) and (NextCtrl.Name <> '') then
     begin
      xAllSecStockInfoProc(HNsGrid1.LogicalRow, False, False);
     end;
     // ADD K2015/04/01 高騁 森川部品個別依頼 ----<<<<<
  end;

  if (NextCtrl = HNsGrid1 ) then
  begin
    if ((GetKeyState(VK_RETURN) and $8000 = $8000)
        or (GetKeyState(VK_TAB) and $8000 = $8000) // ADD 2013/04/16 №20 T./Miyamoto
        or (GetKeyState(VK_UP) and $8000 = $8000) // ADD 2010/10/15
        or (carChangeRowFlg) // ADD 2010/11/01
        //or ((i_searchPartsMode = 1) and (searchCarDiv)) // ADD 2013/05/10 T.Miyamoto DEL 2013/06/18 Wakita
        or (GetKeyState(VK_DOWN) and $8000 = $8000))  then
     begin
        moveFocusFlg := True;
        NextCtrl := nil;     // DEL 2010/10/25 // ADD 2010/11/01
        focusIntoGridCheck := True; // ADD 2010/10/15
        carChangeRowFlg := False;  // ADD 2010/11/01
     end;
     //---ADD START 2011/07/19----->>>>
     if salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly then
     begin
        NextCtrl := nil;
     end;
     //---ADD END 2011/07/19-----<<<<
  end
  else
  begin
    moveFocusFlg := False;
    focusIntoGridCheck := False;  // ADD 2010/10/15
  end;
  // --- ADD 2010/08/13
end;

//*************************************************************************
//  フォーカス収得時
//*************************************************************************
procedure TForm4.xOnEnter(PrevCtrl: TWinControl; var NextCtrl: TWinControl);
  begin
  if (NextCtrl = Nil) then
  begin
    if (PrevCtrl = Nil) then
      Exit
    else
      NextCtrl := PrevCtrl;
  end;
  if (NextCtrl.Enabled = false) then
    NextCtrl := PrevCtrl;

  if not(NextCtrl is THNsGrid) then
  begin
    // 値セーブ
    if (NextCtrl is THEdit) or (NextCtrl is THNedit) then
    begin
      if (i_ChangeFlg = 0) then
      begin
        s_ChangeData := THEdit(NextCtrl).DataText;
      end;
    end
    else
    begin
      s_ChangeData := '';
    end;
  end;


  OldCtrl := NextCtrl;
end;

// --- ADD 2010/07/14 ---------->>>>>
procedure TForm4.xInitialRow_AddUp(salesDetailArray: TSalesSlipInputCustomArrayA2);
var
  i:Integer;
begin
    HNsGrid1.InsertLogicalRows(i_RowMaxCount, (salesDetailArray.Csafield1Count + 1 - i_RowMaxCount),true);

    xInitialSettingGridCol;

    for i := 0 to salesDetailArray.Csafield1Count - 1 do
    begin
      HNsGrid1.MergeCells(ctCol_GoodsName, (i + 1) * 2 + ctRow_GoodsName, 4, 1); // 品名
      HNsGrid1.MergeCells(ctCol_GoodsNo, (i + 1) * 2 + ctRow_GoodsNo, 2, 1); // 品番
      HNsGrid1.MergeCells(ctCol_SalesCode, (i + 1) * 2 + ctRow_SalesCode, 2, 1); // 販売区分
      HNsGrid1.MergeCells(ctCol_SupplierStockDisplay, (i + 1) * 2 + ctRow_SupplierStockDisplay, 2, 1); // 現在庫数
      HNsGrid1.MergeCells(ctCol_PartySalesSlipNum, (i + 1) * 2 + ctRow_PartySalesSlipNum, 2, 1); // 仕入伝票番号

      HNsGrid1.MergeCells(ctCol_SupplierSnmForOrder, (i + 1) * 2 + ctRow_SupplierSnmForOrder, 3, 1); // 発注先名称
      HNsGrid1.MergeCells(ctCol_UOEResvdSectionNm, (i + 1) * 2 + ctRow_UOEResvdSectionNm, 2, 1); // 指定拠点

      HNsGrid1.MergeCells(ctCol_DtlNote, (i + 1) * 2 + ctRow_DtlNote, 2, 1); // 明細備考
      HNsGrid1.MergeCells(ctCol_DeliGdsCmpltDueDate, (i + 1) * 2 + ctRow_DeliGdsCmpltDueDate, 2, 1); // 納品完了予定日
    end;

    xGridSetting();

    xSettingGrid;
end;
// --- ADD 2010/07/14 ----------<<<<<

procedure TForm4.shipmentAddUpButtonlick(Sender: TObject);
var
inputMode, salesRowNo, searchType, rowCount, iRow, isSave, resultNum, saveStatus: Integer;
salesSlip: TSalesSlip;
salesDetailArray: TSalesSlipInputCustomArrayA2;
//focusFlag : Boolean; // DEL 2011/02/11
focusFlag, isErrorFlag : Boolean; // ADD 2011/02/11
// --- ADD m.suzuki 2010/06/12 ---------->>>>>
isMakeQR: Boolean;
// --- ADD m.suzuki 2010/06/12 ----------<<<<<
rowIndex,cnt:integer; // 2012/05/02
begin

  if Form4.ActiveControl = HNsGrid1 then
  begin
      rowCount := 0;
      if HNsGrid1.RowSelectCount >= 0 then
      begin
         rowCount :=  HNsGrid1.RowSelectCount;
      end;

      gpxMAHNB01013B_GetSalesHisGuide(rowCount, CustomerCode.Text);

      gpxMAHNB01013B_GetSaveStatus(saveStatus);

      if (saveStatus = 1)  then
      begin

        //>>> ADD  2012/05/17 SCM障害№162対応
        // データ取得・表示終了まで終了ボタン使用不可
        b_CloseFlg := True;
        //<<< ADD  2012/05/17 SCM障害№162対応

        // 売上情報
        xSetDisplay();

        // 売上金額変更後発生イベント処理
        xSalesPriceChanged();

        // 車両情報画面表示処理
        salesRowNo := xGetActiveRowSalesRowNo();
        searchType := 0;
        xSetDisplayCarInfo(salesRowNo, searchType);
        //車両項目制御
        // --- UPD 2010/05/31 ---------->>>>>
        //xSetDisplayDetailInfo();
        xSetDisplayDetailInfo(salesRowNo);
        // --- UPD 2010/05/31 ----------<<<<<

        // 車両情報設定処理
        xCarInfoFormSetting(salesRowNo);

        xSlipMemoInfoFormSetting(salesRowNo);

        // 明細データ設定
        xDeatilClearDisplay();

        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        // --- ADD 2010/05/31 ---------->>>>>
        xInitialRow;
        // --- ADD 2010/05/31 ----------<<<<<

        // --- ADD 2010/07/14 ---------->>>>>
        if (salesDetailArray.Csafield1Count > i_RowMaxCount) then
        begin
          xInitialRow_AddUp(salesDetailArray);
        end;
        // --- ADD 2010/07/14 ---------->>>>>

        xSetDetailRowFormC(salesDetailArray,-1);

        xSettingGrid();

        HNsGrid1.SetFocus;

        //HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, HNsGrid1.LogicalRow * 2 + 1); // DEL 2010/07/16
        HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, 3); // ADD 2010/07/16
        // HNsGrid1.ActiveRowShow := true;
        // --- ADD K2021/07/21 譚洪 BLINCIDENT-3059対応 ----->>>>>
        salesRowNo := xGetActiveRowSalesRowNo();
        // 車両情報設定処理
        xCarInfoFormSetting(salesRowNo);
        // --- ADD K2021/07/21 譚洪 BLINCIDENT-3059対応 -----<<<<<

        xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);
        //>>> ADD  2012/05/17 SCM障害№162対応
        // 終了ボタン使用可能
        b_CloseFlg := False;
        //<<< ADD  2012/05/17 SCM障害№162対応

      end;

  end else begin

      //データ保存確認
      // --- UPD m.suzuki 2010/06/12 ---------->>>>>
      //gpxMAHNB01013B_ShowSaveCheckDialog(true, resultNum, CarMngCode.Text) ;
        // --- ADD 2010/07/16 ---------->>>>>
      if checkBox_MakeQR.Visible then
      BEGIN
          isMakeQR := checkBox_MakeQR.Checked;
      END else begin
          isMakeQR := False;
      END;
      //isMakeQR := checkBox_MakeQR.Checked;
      // --- ADD 2010/07/16 ----------<<<<<
      gpxMAHNB01013B_ShowSaveCheckDialog(true, resultNum, CarMngCode.Text, isMakeQR);
      checkBox_MakeQR.Checked := isMakeQR;
      // --- UPD m.suzuki 2010/06/12 ----------<<<<<

      // ---ADD 2011/02/11------------->>>>
      gpxMAHNB01013B_GetErrorFlag(isErrorFlag);
      if isErrorFlag then
      begin
        _isErrorFlag := isErrorFlag;
        newButton.Visible := False; // 新規(F9)
        saveButton.Visible := False; // 確定(F10)
        deleteSlipButton.Visible := False; // 伝票削除(F12)
        returnButton.Visible := False; // 戻る(F2)
        forwardButton.Visible := False; // 進む(F3
        guideButton.Visible := False; // ガイド(F5)
        searchCarChangeButton.Visible := False; // 検索切替(F4)
        ReadSlipButton.Visible := False; // 伝票呼出(X)
        shipmentAddUpButton.Visible := False; // 貸出計上(I)
        acceptAnOrderAddUpButton.Visible := False; // 受注計上(H)
        estimateAddUpButton.Visible := False; // 見積計上(Q)
        SlipHeaderCopyButton.Visible := False; // 見出貼付(F6)
        updateButton.Visible := False; // 更新(V)
        toolRetryButton.Visible := False; // 元に戻す(U)
        toolRedSlipButton.Visible := False; // 赤伝(R)
        toolReturnSlipButton.Visible := False; // 返品(Y)
        toolCopySlipButton.Visible := False; // 伝票複写(P)
        toolSetupButton.Visible := False; // 設定(O)
        toolReNewalbtn.Visible := False; // 最新情報(A)
        toolReferenceListButton.Visible := False; // 問合せ一覧
        toolHisSearchButton.Visible := False; // 履歴検索 // ADD　2018/09/04 譚洪　履歴自動表示の対応
        toolGetTaxRateButton.Visible := False; // 税率入力 // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応
        toolEBooksButton.Visible := False; // 電帳.DX // ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応
        //toolReplyTransactionButton.Visible := False; // 回答処理
        toolMailButton.Visible := False; // メール
        dateUpdateBottun.Visible := False; // 日付修正  // ADD 2011/08/02
        detailCopyButton.Visible := False; // 明細貼付  // ADD 連番729 2011/08/18
        UOEDataGet.Visible := False;// ADD  黄興貴 K2015/04/29 回答取込パタン追加
        discountAllLineBottun.Visible := False; // 一括値引 //ADD 2013/01/24 鄧潘ハン REDMINE#34141
        allSecInfoButton.Visible := False; // 在庫情報 // ADD K2015/04/01 高騁 森川部品個別依頼
        DorpdownList.Visible := False;
        // ---UPD 2011/03/07------------->>>>
//        SalesSlipNum.Visible := False; // 伝票番号
//        SalesSlipNumBtn.Visible := False; // 伝票番号BTN
        pnl8.Visible := False;    //伝票番号
        // ---UPD 2011/03/07-------------<<<<
      end;
      // ---ADD 2011/02/11-------------<<<<
      //データ保存不要、「いいえ」、保存okの場合、出荷計上処理を行う
      if (resultNum = 0) or (resultNum = 1)  or (resultNum = 4) then
      begin
      // --------UPD 2010/07/01--------->>>>>
        if resultNum = 0 then
        begin
           xDeatilClearDisplay();
           // 保存状態取得
           gpxMAHNB01013B_GetSaveStatus(saveStatus);
           xdoSaveAfter(saveStatus);

           //>>>2010/11/08
           //>>> ADD  2012/05/17 SCM障害№162対応
           // データ取得・表示終了まで終了ボタン使用不可
           b_CloseFlg := True;
           //<<< ADD  2012/05/17 SCM障害№162対応
           xSetDisplay();
           xDeatilClearDisplay();
           xSetDisplayDetailInfo(salesRowNo);
           xChangeSearchModeReflect();
           xSettingAddInfoVisible();
           InitialSetFocusTick();
           //>>> ADD  2012/05/17 SCM障害№162対応
           // 終了ボタン使用可能
           b_CloseFlg := False;
           //<<< ADD  2012/05/17 SCM障害№162対応

           //<<<2010/11/08
        end;
//        if resultNum = 4 then
//        begin
//           // 保存状態取得
//           gpxMAHNB01013B_GetSaveStatus(saveStatus);
//           xdoSaveAfter(saveStatus);
//        end;
      // --------UPD 2010/07/01---------<<<<<
        // 出荷計上処理
        gpxMAHNB01013B_ShipmentAddUp(False, isSave);

        // HNsGrid 設定前
        if isSave = 1 then
        begin
          //>>> ADD  2012/05/17 SCM障害№162対応
          // データ取得・表示終了まで終了ボタン使用不可
          b_CloseFlg := True;
          //<<< ADD  2012/05/17 SCM障害№162対応

          // 売上情報
          xSetDisplay();

          // 売上金額変更後発生イベント処理
          xSalesPriceChanged();

          // 車両情報画面表示処理
          salesRowNo := xGetActiveRowSalesRowNo();
          searchType := 0;
          xSetDisplayCarInfo(salesRowNo, searchType);

          // 車両項目制御
          // --- UPD 2010/05/31 ---------->>>>>
          //xSetDisplayDetailInfo();
          xSetDisplayDetailInfo(salesRowNo);
          // --- UPD 2010/05/31 ----------<<<<<

          // セルアクティブ時ボタン有効無効コントロール処理
          xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

          // 明細データクリア
          xDeatilClearDisplay();

          gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

          // --- ADD 2010/05/31 ---------->>>>>
          xInitialRow;
          // --- ADD 2010/05/31 ----------<<<<<

          // --- ADD 2010/07/14 ---------->>>>>
          if (salesDetailArray.Csafield1Count > i_RowMaxCount) then
          begin
            xInitialRow_AddUp(salesDetailArray);
          end;
          // --- ADD 2010/07/14 ---------->>>>>

          xSetDetailRowFormC(salesDetailArray,-1);

          xSettingGrid();

          xDeleteEmptyRow();

          HNsGrid1.HideInplaceEdit; // ADD 呉元嘯 2021/04/29 BLINCIDENT-2982の対応
          HNsGrid1.SetFocus;

          //HNsGrid1.FocusCell(ctCol_SupplierCd, HNsGrid1.LogicalRow * 2 + 1);  // DEL 2010/07/16
          HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, 3); // ADD 2010/07/16
          HNsGrid1.ShowInplaceEdit; // ADD 呉元嘯 2021/04/29 BLINCIDENT-2982の対応

          // HNsGrid1.ActiveRowShow := true;

          // 車両情報設定処理
          salesRowNo := xGetActiveRowSalesRowNo();
          xCarInfoFormSetting(salesRowNo);

          xSlipMemoInfoFormSetting(salesRowNo);

          // ガイドボタンツール有効無効設定処理
          xSettingGuideButtonToolEnabled(OldCtrl);
          xSettingVisible();

          //追加情報タブ項目Visible設定
           xSettingAddInfoVisible();

          //伝票備考、伝票備考２、伝票備考３の入力桁数を制御する
          xSetNoteCharCnt();
          xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);
          // --- DEL 2010/06/17 ---------->>>>>
          //OldCtrl := Form4.ActiveControl;
          // --- DEL 2010/06/17 ----------<<<<<

          // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
          //値引モード
          if(discountAllLineflag)then
          begin
              //「一括値引」→「売上」
              xNotDiscountInitalSet();
          end;
          // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
          //>>> ADD  2012/05/17 SCM障害№162対応
          // 終了ボタン使用可能
          b_CloseFlg := False;
          //<<< ADD  2012/05/17 SCM障害№162対応
        end;
      //保存確認ダイアログデータ保存失敗の場合、明細にFocus設定する
      end else begin
        if resultNum =3 then
        begin
            // HNsGrid1
            HNsGrid1.SetFocus;
        end;

      end;
   end;

//>>>2012/05/02
  xSettingGridRowFromInputChange();
//      cnt := HNsGrid1.RowCount;
//      for rowIndex := 2 to cnt - 1 do
//      begin
//        xSettingGridRow(rowIndex);
//      end;
//<<<2012/05/02

      // フッタタブ位置セット
      uTabControl_Footer.ActivePage := ts1;
     // xSettingAddUpButtonToolEnabled(nextControl);
     xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼
end;

//>>>2010/05/30
procedure TForm4.ReferenceListButtonClick(Sender: TObject);
var
inputMode, salesRowNo, searchType, rowCount, iRow, isSave, resultNum, saveStatus: Integer;
salesSlip: TSalesSlip;
salesDetailArray: TSalesSlipInputCustomArrayA2;
focusFlag : Boolean;
carInfo: TCarInfo;
begin

  // SCM問合せ一覧選択
  gpxMAHNB01013B_ReferenceList(False, isSave);

  // HNsGrid 設定前
  if isSave = 1 then
  begin
    isScmReadCheck := true;// add 2011/07/23 朱宝軍
    //>>>2011/02/01 表示明細初期化
    // 表示明細初期化
    xInitialRow();
    //<<<2011/02/01 表示明細初期化
    //>>> ADD  2012/05/17 SCM障害№162対応
    // データ取得・表示終了まで終了ボタン使用不可
    b_CloseFlg := True;
    //<<< ADD  2012/05/17 SCM障害№162対応

    // 売上情報
    xSetDisplay();

    // 売上金額変更後発生イベント処理
    xSalesPriceChanged();

    // 車両情報画面表示処理
    salesRowNo := xGetActiveRowSalesRowNo();
    searchType := 0;
    xSetDisplayCarInfo(salesRowNo, searchType);
    // ---------------------- ADD START 2011/07/17 daib ----------------->>>>>
    gpxMAHNB01012B_GetCarInfoRow(salesRowNo, 1, carInfo);
    if (carInfo.CategoryNo = 0) and (i_searchPartsMode = 1) and (salesSlip_disp.InquiryNumber <> 0) then
    begin
      xChangeSearchMode(0);
      // 車両情報テーブル行の型式指定番号および類別区分番号セット
      gpxMAHNB01012B_SettingCarInfoRowFromCategoryNoAndDesignationNo(salesRowNo, carInfo.ModelDesignationNo, 0);
    end;
    // ---------------------- ADD END 2011/07/17 daib -----------------<<<<<
    // 車両項目制御
    xSetDisplayDetailInfo(salesRowNo);

    // セルアクティブ時ボタン有効無効コントロール処理
    xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

    // 明細データクリア
    xDeatilClearDisplay();

    gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

    xSetDetailRowFormC(salesDetailArray,-1);

    xSettingGrid();

//>>>2011/03/09
////>>>2011/02/01 追加回答対応
////    xDeleteEmptyRow();
//    if ((salesSlip_disp.SalesSlipCd = salesSlipCdDtl_RetGoods) or
//        ((salesSlip_disp.InquiryNumber <> 0) and (salesSlip_disp.SalesSlipNum <> ctDefaultSalesSlipNum))) then begin
//      xDeleteEmptyRow();
//    end;
////<<<2011/02/01 追加回答対応
    if (salesSlip_disp.SalesSlipCd = salesSlipCdDtl_RetGoods) then begin
      xDeleteEmptyRow();
    end else begin
      if (salesSlip_disp.SalesSlipNum <> ctDefaultSalesSlipNum) then begin
        xSettingSalesDetailRowInputRowCount(salesSlip_disp.DetailRowCountForReadSlip);
      end;
    end;
//<<<2011/03/09

    HNsGrid1.SetFocus;

    // --- DEL 2015/04/14 Wakita ---------->>>>>
    //HNsGrid1.FocusCell(ctCol_SupplierCd, HNsGrid1.LogicalRow * 2 + 1);
    // --- DEL 2015/04/14 Wakita ----------<<<<<
    // --- ADD 2015/04/14 Wakita ---------->>>>>
    if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
    or  (HNsGrid1.ReadOnly[ctCol_SupplierCd, HNsGrid1.LogicalRow * 2 + 1] = True)) then
    begin
      // 返品または読み取り専用
      HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, HNsGrid1.LogicalRow * 2 + 1);
    end
    else
    begin
      HNsGrid1.FocusCell(ctCol_SupplierCd, HNsGrid1.LogicalRow * 2 + 1);
    end;
    // --- ADD 2015/04/14 Wakita ----------<<<<<

    // HNsGrid1.ActiveRowShow := true;

    // 車両情報設定処理
    salesRowNo := xGetActiveRowSalesRowNo();
    xCarInfoFormSetting(salesRowNo);

    xSlipMemoInfoFormSetting(salesRowNo);

    // ガイドボタンツール有効無効設定処理
    xSettingGuideButtonToolEnabled(OldCtrl);
    xSettingVisible();

    //追加情報タブ項目Visible設定
    xSettingAddInfoVisible();

    //伝票備考、伝票備考２、伝票備考３の入力桁数を制御する
    xSetNoteCharCnt();
    xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);
    OldCtrl := Form4.ActiveControl;
  //end;//del 2011/07/23
  //add 2011/07/23
    //>>>2011/10/11
    searchCarDiv := false;
    gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv);
    // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
    //値引モード
    if(discountAllLineflag)then
    begin
        //「一括値引」→「売上」
        xNotDiscountInitalSet();
    end;
    // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<

    //<<<2011/10/11
    //>>> ADD  2012/05/17 SCM障害№162対応
    // 終了ボタン使用可能
    b_CloseFlg := False;
    //<<< ADD  2012/05/17 SCM障害№162対応

  end else
  begin
    isScmReadCheck := false;
  end;
  //end 2011/07/23

  // フッタタブ位置セット
  uTabControl_Footer.ActivePage := ts1;
  xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼

end;

// 2011/01/31 Del >>>
//procedure TForm4.ReplyTransactionButtonClick(Sender: TObject);
//var
//beforeSalesSlipNumText, CarMngCodeStr:  WideString;
//isSave, isMakeQR: Boolean;
//ctTabKeyAddInfo, settingAddInfoVisibleFlg, salesRowNo, searchType, result, saveStatus : Integer;
//salesDetailArray: TSalesSlipInputCustomArrayA2;
//begin
//  CarMngCodeStr :=  CarMngCode.Text;
////>>>2010/07/06
////  isMakeQR := True;
//  // --- ADD 2010/07/16 ---------->>>>>
//  if checkBox_MakeQR.Visible then
//  BEGIN
//      isMakeQR := checkBox_MakeQR.Checked;
//  END else begin
//      isMakeQR := False;
//  END;
//  //isMakeQR := checkBox_MakeQR.Checked;
//  // --- ADD 2010/07/16 ----------<<<<<
////<<<2010/07/06
//
//  // 保存処理(SCM回答送信有り)
//  // --- UPD 2010/06/29 ---------->>>>>
////  gpxMAHNB01013B_AfterSave(result, CarMngCodeStr, True, isMakeQR, False);
//  gpxMAHNB01013B_AfterSave(result, CarMngCodeStr, True, isMakeQR, True);
//  // --- UPD 2010/06/29 ----------<<<<<
//
//  // 保存状態取得
//  gpxMAHNB01013B_GetSaveStatus(saveStatus);
//  if result <> -1 then
//  begin
//       xdoSaveAfter(saveStatus);
//  end;
//
//
//  case result of
//    -1:
//    begin
//      // 車両情報画面表示処理
//      salesRowNo := xGetActiveRowSalesRowNo();
//      searchType := 0;
//      xSetDisplayCarInfo(salesRowNo, searchType);
//
//      xDeatilClearDisplay();
//      // 明細データ設定
//      gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);
//
//      xSetDetailRowFormC(salesDetailArray,-1);
//      xSettingGrid();
//    end;
//    0:
//    begin
////     xSetDisplay();
////     xDeatilClearDisplay();
////     if (i_searchPartsMode = 2) then
////     begin
////        xSettingFocus('GoodsNoTP');
////     end else
////     if (i_searchPartsMode = 1) then
////     begin
////        xSettingFocus('BLGoodsCodeTP');
////     end;
////     xChangeSearchModeReflect();
////     xSetDisplayDetailInfo();
//    end;
//    1:
//    begin
////     xSetDisplay();
////     xDeatilClearDisplay();
////     xSetDisplayDetailInfo();
////     xChangeSearchModeReflect();
////     //追加情報タブ項目Visible設定
////     xSettingAddInfoVisible();
//    end;
//  end;
//end;
// 2011/01/31 Del <<<
//<<<2010/05/30

procedure TForm4.SetupButtonClick(Sender: TObject);
var
  dialog : Integer;
begin
  dialog := gpxMAHNB01013B_ShowSalesSlipInputSetup();
  if dialog = 1 then
  begin
    gpxMAHNB01013B_setColDisplayStatusList();
    xGridSetting();
    isSetupClick := True; // ADD K2015/04/01 高騁 森川部品個別依頼
    xLoadToolManagerCustomizeInfo(); // ADD 2010/07/06
    isSetupClick := False; // ADD K2015/04/01 高騁 森川部品個別依頼

    Form4.Width := Form4.Width + 1;
    Form4.Width := Form4.Width - 1;

    // ADD 2010/08/13 ---- >>>>>
    xLoadBitbtnCustomizeInfo();

    if ((btnInputStockInfo.Visible = False) and (btnInputOrderInfo.Visible = True)) then
    begin
      btnInputChange.Left := 127;
      btnInputOrderInfo.Left := 206;
      W1.Visible := False;
      G1.Visible := True;
    end
    else if ((btnInputStockInfo.Visible = True) and (btnInputOrderInfo.Visible = False)) then
    begin
      btnInputChange.Left := 129;
      btnInputStockInfo.Left := 208;
      W1.Visible := True;
      G1.Visible := False;
    end
    else if ((btnInputStockInfo.Visible = False) and (btnInputOrderInfo.Visible = False)) then
    begin
      W1.Visible := False;
      G1.Visible := False;
      btnInputChange.Left := 181;
    end
    else
    begin
      W1.Visible := True;
      G1.Visible := True;
      btnInputChange.Left := 74;
      btnInputStockInfo.Left := 153;
      btnInputOrderInfo.Left := 206;
    end;
    // ADD 2010/08/13 ----- <<<<<

    // --- ADD 2010/06/02 ---------->>>>>
    InitialSetFocusTick();
    // --- ADD 2010/06/02 ----------<<<<<

    //>>>2010/08/06
    xClear(False, False, False, False, False, False, False, salesSlip_disp.CustomerCode);
    //<<<2010/08/06
  end;

end;

//procedure TForm4.ReadSlipButtonClick(Sender: TObject);
//var
//  acptAnOdrStatus, estimateDivide, salesRowNo,searchType  : Integer;
//  salesDetailArray: TSalesSlipInputCustomArrayA2;
//begin
//  gpxMAHNB01013B_salesSlipGuide(Form4.Name, HGetEnterpriseCode, AcptAnOdrStatusDisplayComBo.SelCode,
//          acptAnOdrStatus, estimateDivide, searchResult, salesSlip);
//
////  gpxMAHNB01013B_GetDisplayHeaderFooterInfo(salesSlip_disp, inputModeTitle, defaultSalesSlipNumDf, i_searchPartsMode, operationCodeFlg);
////
////  SetDisplayHeaderFooterInfo(salesSlip_disp);
////
////  //画面表示処理（売上金額合計情報）
////  xSetDisplayTotalPriceInfo(salesSlip_disp);
//  xSetDisplay();
//  //画面表示処理（明細情報）
//  xSetDisplayDetailInfo();
//  // 車両情報画面表示処理
//  salesRowNo := xGetActiveRowSalesRowNo();
//  searchType := 0;
//  xSetDisplayCarInfo(salesRowNo, searchType);
//
//  // 明細データ設定
//  gpxMAHNB01012B_GetSalesAllDetailDataTable(salesDetailArray);
//
//  xSetDetailRowFormC(salesDetailArray,-1);
//
//  xSettingGrid;
//end;

procedure TForm4.SlipHeaderCopyButtonClick(Sender: TObject);
var
  salesRowNo, searchType, searchPartsModeProperty, carSerchRet: Integer;
  existSalesDetail, clearDetailFlg, fullModelFixedNoAryFlg, errorFlg, changeCarInfo,copySlipHeaderClearFlg : Boolean;
  outSalesSlipHeaderCopyData : TSalesSlipHeaderCopyData;
  carSearchCondition : TCarSearchCondition;
begin
  gpxMAHNB01013B_DoAddLine(15,0,0); // ADD 2011/02/11

  // --- UPD m.suzuki 2010/10/27 ---------->>>>>
  //salesRowNo := xGetActiveRowSalesRowNo();
  salesRowNo := 1; // CopySlipHeaderの中でクリアするので常に"1"
  // --- UPD m.suzuki 2010/10/27 ----------<<<<<
  gpxMAHNB01013B_CopySlipHeader(pnl_CarInfo.Enabled, salesRowNo, AddresseeName.Text, existSalesDetail, clearDetailFlg, searchPartsModeProperty, fullModelFixedNoAryFlg, errorFlg, outSalesSlipHeaderCopyData, copySlipHeaderClearFlg);
//  if clearDetailFlg then xClearSalesDetailRow();

  // ---ADD 2011/02/11-------------->>>>
  // 見出貼付は、項目を抜粋してログ出力する
  gpxMAHNB01013B_DoAddLine(43,0,outSalesSlipHeaderCopyData.AcptAnOdrStatus);
  gpxMAHNB01013B_DoAddLine(44,outSalesSlipHeaderCopyData.SalesSlipCd,0);
  // --- UPD 2012/05/24 No.849 ---------->>>>>
  //gpxMAHNB01013B_DoAddLine(45,strtoint(outSalesSlipHeaderCopyData.SalesSlipNum),0);
  gpxMAHNB01013B_DoAddLine(45,StrToIntDef(outSalesSlipHeaderCopyData.SalesSlipNum,0),0);
  // --- UPD 2012/05/24 No.849 ----------<<<<<
  gpxMAHNB01013B_DoAddLine(46,outSalesSlipHeaderCopyData.SalesRowNo,0);
  gpxMAHNB01013B_DoAddLine(47,outSalesSlipHeaderCopyData.SalesDate,0);
  // --- UPD 2012/05/24 No.849 ---------->>>>>
  //gpxMAHNB01013B_DoAddLine(48,strtoint(outSalesSlipHeaderCopyData.SectionCode),0);
  gpxMAHNB01013B_DoAddLine(48,StrToIntDef(outSalesSlipHeaderCopyData.SectionCode,0),0);
  // --- UPD 2012/05/24 No.849 ----------<<<<<
  gpxMAHNB01013B_DoAddLine(49,outSalesSlipHeaderCopyData.CustomerCode,0);
  // ---ADD 2011/02/11--------------<<<<
  if not errorFlg then
  begin
      if not existSalesDetail then
      begin
        xDeatilClearDisplay();
        // 部品検索切替反映処理
        xChangeSearchModeReflect();
      end else
      begin
        if copySlipHeaderClearFlg then
        begin
          // 画面初期化処理
          // ----- UPD 2010/05/21 ------------>>>>>
//          xClear(False, True, clearDetailFlg, False, False);
          //xClear(False, True, clearDetailFlg, False, False, False);
         // xClear(False, True, clearDetailFlg, False, False, False, False);//ADD 2010/06/02
// ----- UPD 2010/05/21 ------------>>>>>
          // ----- UPD 2010/09/07 ------------>>>>>
//          xClear(False, True, clearDetailFlg, False, False, False, False, 0);
          xDeatilClearDisplay();

          xInitialSettingGridCol;

          // グリッド設定処理（ユーザー設定より）
          xGridSetting();

          xSettingGrid;

          xInitialRow();
          // ----- UPD 2010/09/07 ------------<<<<<
//<<<2010/05/30
        end else
        begin
          Exit;
        end;
      end;

      // 車両情報画面表示処理
      searchType := 0;
      xSetDisplayCarInfo(salesRowNo, searchType);

      // todo
      // [車輌情報セット・検索]
      if pnl_CarInfo.Enabled then
      begin

        ClearTCarSearchCondition(carSearchCondition);
        carSearchCondition.ModelDesignationNo := ModelDesignationNo.GetInt();
        carSearchCondition.CategoryNo := CategoryNo.GetInt();
        searchType := 0;

        // 車両検索処理
        carSerchRet := xCarSearch(carSearchCondition, salesRowNo, searchType);
        case carSerchRet of
        9:
          begin
            EngineModelNm.Clear();
          end;
        0:
          begin
            changeCarInfo := True;
            // 車両情報画面表示処理
            xSetDisplayCarInfo(salesRowNo, searchType);
            //NextCtrl := PrevCtrl;
          end;
        1:
          begin
          if Application.MessageBox(
            '該当する車輌情報が存在しません。' + #10 + #10 +
            '品番入力モードに変更しますか？',
            PChar(Caption),
            MB_YESNO + MB_ICONWARNING + MB_DEFBUTTON2) = IDYES then
          begin
            // 部品検索切替処理
            xChangeSearchMode(0);
            changeCarInfo := True;
            // 車両情報テーブル行のエンジン型式セット
            gpxMAHNB01012B_SettingCarInfoRowFromEngineModelNm(salesRowNo, EngineModelNm.Text);
          end else
          begin
            EngineModelNm.Clear();
          end;
          end;
        end;

        // 車輌情報
        carMngCode.DataText := Trim(outSalesSlipHeaderCopyData.CarMngCode); // 管理番号
        modelDesignationNo.SetInt(outSalesSlipHeaderCopyData.ModelDesignationNo); // 型式指定番号
        categoryNo.SetInt(outSalesSlipHeaderCopyData.CategoryNo); // 類別番号
        fullModel.Text := Trim(outSalesSlipHeaderCopyData.FullModel); // フル型式
        engineModelNm.Text := Trim(outSalesSlipHeaderCopyData.EngineModelNm); // エンジン型式
        makerCode.SetInt(outSalesSlipHeaderCopyData.MakerCode); // 車種メーカーコード
        modelCode.SetInt(outSalesSlipHeaderCopyData.ModelCode); // 車種コード
        modelSubCode.SetInt(outSalesSlipHeaderCopyData.ModelSubCode); // 車種サブコード
        modelFullName.Text := Trim(outSalesSlipHeaderCopyData.ModelFullName); // 車種全角名称
        firstEntryDate.LongDate := outSalesSlipHeaderCopyData.FirstEntryDate; // 年式
        // --- UPD 2012/06/26 No.476 ---------->>>>>
        //produceFrameNo.Text := outSalesSlipHeaderCopyData.FrameNo; // 車台番号
        produceFrameNo.Text := Trim(outSalesSlipHeaderCopyData.FrameNo); // 車台番号
        // --- UPD 2012/06/26 No.476 ----------<<<<<
        colorNo.Text := Trim(outSalesSlipHeaderCopyData.ColorCode); // カラーコード
        trimNo.Text := Trim(outSalesSlipHeaderCopyData.TrimCode); // トリムコード

        searchCarDiv := false; // 2010/07/27
        gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv); // 2010/07/27

        //>>>2010/07/27
        if (salesSlip_disp.AccRecDivCd = 0) and
           (outSalesSlipHeaderCopyData.CustomerSnm <> '') then begin
          salesSlip_disp.CustomerSnm := outSalesSlipHeaderCopyData.CustomerSnm;
        end;
        //<<<2010/07/27
      end;

      // 売上データクラス→画面格納処理
      xSetDisplay();

      // 伝票区分コンボエディタアイテム設定処理
      xSetItemtSalesSlipCd(salesSlip_disp, salesSlip_disp.AcptAnOdrStatusDisplay, True);     // ADD 2010/09/07

      if pnl_CarInfo.Enabled then
      begin
        if (fullModelFixedNoAryFlg) then
        begin
          // --- ADD m.suzuki 2010/11/01 ---------->>>>>
          // ※フル型式固定番号・自由検索固定番号がない場合は、
          //   検索必要状態に戻す。
          searchCarDiv := true;
          gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv); // 1:Set,2:Get
          // --- ADD m.suzuki 2010/11/01 ----------<<<<<

          if (outSalesSlipHeaderCopyData.CategoryNo <> 0) then
          begin
            // 類別番号
            categoryNo.setFocus();
          end else if (outSalesSlipHeaderCopyData.ModelDesignationNo <> 0) then
          begin
            // 型式指定番号
            modelDesignationNo.setFocus();
          end else if (outSalesSlipHeaderCopyData.FullModel <> '') then
          begin
            // フル型式
            fullModel.setFocus();
          end else if (outSalesSlipHeaderCopyData.EngineModelNm <> '') then
          begin
            // エンジン型式
            engineModelNm.setFocus();
          end;
        end;
      end;

      //追加情報タブ項目Visible設定
      xSettingAddInfoVisible();
// ------------ ADD 連番729 2011/08/18 --------------------- >>>>>
      if (Form4.ActiveControl = HNsGrid1) then
      begin
        if ((xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col) = 'BLGoodsCode') or
          //---UPD BY 凌小青 on 2013/01/14 for Redmine#33793 ------>>>>>
          //(xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col) = 'GoodsNo')) and
          //(IsGoodsNoFromXMLExist) then
          (xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col) = 'GoodsNo')) then
          //---UPD BY 凌小青 on 2013/01/14 for Redmine#33793 ------<<<<<
        begin
          detailCopyButton.Enabled := True;
          toolMenu_detailCopyBtn.Enabled := True;
        end;
      end;
// --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ----------------->>>>>
      //if (Form4.ActiveControl = HNsGrid1) then // DEL  譚洪 2015/10/26 Redmine#47609
      if (Form4.ActiveControl = HNsGrid1) and isOptPermitForFuJi then  // ADD  譚洪 2015/10/26 Redmine#47609
      begin
        // --- UPD 呉元嘯 2020/11/09 PMKOBETSU-4085対応 -------->>>>>
        //UOEDataGet.Enabled := True;
        //toolMenu_UOEDataGet.Enabled := True;
        //一括値引と返品の場合、「回答取込」ボタンが非活性
        if (discountAllLineflag = False) and (salesSlip_disp.SalesSlipCd <> salesSlipCd_RetGoods)then
        begin
          UOEDataGet.Enabled := True;
          toolMenu_UOEDataGet.Enabled := True;
        end
        else
        begin
          UOEDataGet.Enabled := False;
          toolMenu_UOEDataGet.Enabled := False;
        end;
        // --- UPD 呉元嘯 2020/11/09 PMKOBETSU-4085対応 --------<<<<<
      end;
// --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 -----------------<<<<<

// --- DEL  30757 佐々木　貴英 K2015/10/05 ----------------->>>>>
//// --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 ----------------->>>>>
//      if (Form4.ActiveControl = HNsGrid1) then
//      begin
//        UOEDataGet.Enabled := True;
//        toolMenu_UOEDataGet.Enabled := True;
//      end;
//// --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 -----------------<<<<<
// --- DEL  30757 佐々木　貴英 K2015/10/05 -----------------<<<<<
// ------------ ADD 連番729 2011/08/18 --------------------- <<<<<

      // --- ADD 2012/07/25 Wakita ---------->>>>>
      case salesSlip_disp.CustOrderNoDispDiv of
        0: //しない
          begin
            pnl_PartySaleSlipNum.Visible := false;
          end;
        1: //する
          begin
            pnl_PartySaleSlipNum.Visible := true;
          end;
      end;
      // --- ADD 2012/07/25 Wakita ----------<<<<<

      // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
      //値引モード
      if(discountAllLineflag) then
      begin
         //一括値引Grid初期化
         xDiscountGridInitial();
      end;
      // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<

  end;

//
//  // 売上データクラス→画面格納処理
//  xSetDisplay();
//
//  //追加情報タブ項目Visible設定
//  xSettingAddInfoVisible();
  xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼
end;

//-------------- ADD 連番729 2011/08/18 ----------------->>>>>
//*************************************************************************
//  明細貼付処理
//*************************************************************************
procedure TForm4.DetailCopyButtonClick(Sender: TObject);
var
  salesRowNo: Integer;
  salesDetailArray: TSalesSlipInputCustomArrayA2;
begin
  salesRowNo := HNsGrid1.Row div 2;
  gpxMAHNB01013B_CopySlipDetail(salesRowNo);

  //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
  SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

  gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

  xSetDetailRowFormC(salesDetailArray, -1);

  xSettingGrid;

  xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼

  xActiveCellButtonEnabledControl('GoodsNo',salesRowNo);

  // 明細部変更後発生イベント処理
  xSalesSlipDetailInput_DetailChanged(salesRowNo);

  xSlipMemoInfoFormSetting(salesRowNo);

  xSalesPriceChanged;

end;
//-------------- ADD 連番729 2011/08/18 -----------------<<<<<

//-------------- ADD 2013/01/24 鄧潘ハン REDMINE#34141 ------------------>>>>>
//*************************************************************************
//  一括値引処理
//*************************************************************************
procedure TForm4.DiscountAllLineButtonClick(Sender: TObject);
var
  i,resultNum,saveStatus,salesRowNo : Integer;
  salesDetailArray: TSalesSlipInputCustomArrayA2;
  isMakeQR, isErrorFlag,keepDate: Boolean;
  beforeSalesSlipNumText:  WideString;        // ADD 2013/02/20 Wakita ③
begin
    //データ保存確認
    if checkBox_MakeQR.Visible then
    BEGIN
        isMakeQR := checkBox_MakeQR.Checked;
    END else begin
        isMakeQR := False;
    END;

    gpxMAHNB01013B_ShowSaveCheckDialog(true, resultNum, CarMngCode.Text, isMakeQR) ;
    checkBox_MakeQR.Checked := isMakeQR;
    gpxMAHNB01013B_GetErrorFlag(isErrorFlag);
    if isErrorFlag then
    begin
      _isErrorFlag := isErrorFlag;
      newButton.Visible := False; // 新規(F9)
      saveButton.Visible := False; // 確定(F10)
      deleteSlipButton.Visible := False; // 伝票削除(F12)
      returnButton.Visible := False; // 戻る(F2)
      forwardButton.Visible := False; // 進む(F3
      guideButton.Visible := False; // ガイド(F5)
      searchCarChangeButton.Visible := False; // 検索切替(F4)
      ReadSlipButton.Visible := False; // 伝票呼出(X)
      shipmentAddUpButton.Visible := False; // 貸出計上(I)
      acceptAnOrderAddUpButton.Visible := False; // 受注計上(H)
      estimateAddUpButton.Visible := False; // 見積計上(Q)
      SlipHeaderCopyButton.Visible := False; // 見出貼付(F6)
      updateButton.Visible := False; // 更新(V)
      toolRetryButton.Visible := False; // 元に戻す(U)
      toolRedSlipButton.Visible := False; // 赤伝(R)
      toolReturnSlipButton.Visible := False; // 返品(Y)
      toolCopySlipButton.Visible := False; // 伝票複写(P)
      toolSetupButton.Visible := False; // 設定(O)
      toolReNewalbtn.Visible := False; // 最新情報(A)
      toolReferenceListButton.Visible := False; // 問合せ一覧
      toolHisSearchButton.Visible := False; // 履歴検索 // ADD　2018/09/04 譚洪　履歴自動表示の対応
      toolGetTaxRateButton.Visible := False; // 税率入力　// ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応
      toolEBooksButton.Visible := False; // 電帳.DX // ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応
      toolMailButton.Visible := False; // メール
      dateUpdateBottun.Visible := False; // 日付修正
      detailCopyButton.Visible := False; // 明細貼付
      UOEDataGet.Visible := False;// ADD  黄興貴 K2015/04/29 回答取込パタン追加
      DorpdownList.Visible := False;
      pnl8.Visible := False;    //伝票番号
      discountAllLineBottun.Visible := False; // 一括値引
      allSecInfoButton.Visible := False; // 在庫情報 // ADD K2015/04/01 高騁 森川部品個別依頼
    end;
    //データ保存不要、「いいえ」、保存okの場合、一括値引処理を行う
    if (resultNum = 0) or (resultNum = 1)  or (resultNum = 4)then
    begin

      if (salesTtlSt.SlipDateClrDivCd = 1) then
      begin
         keepDate := True;
      end
      else
      begin
         keepDate := False;
      end;

      // --- ADD 2013/02/20 Wakita ③ ---------->>>>>
      if (resultNum = 0) then
      begin
        //前回伝票番行設定
        gpxMAHNB01013B_GetBeforeSalesSlipNumText(beforeSalesSlipNumText);
        pnl_BeforeSalesSlipNum.Caption := beforeSalesSlipNumText;
      end;
      // --- ADD 2013/02/20 Wakita ③ ----------<<<<<

      //入力モードは値引の場合、入力モードが通常に変更する
      if (discountAllLineBottun.Caption = ctToolButtonNm_Tuujyou)
          or (toolMenu_discountAllLineBtn.Caption = ctToolButtonNm_Tuujyou) then
      begin

         if(resultNum = 4) then
         begin
              //「一括値引」→「売上」
              xNotDiscountInitalSet();
              //入力モード変数セット
              inputModeTitle := '通常';
              //入力モード画面デスプリセット
              pnl_InputModeTitle.Caption := '通常';
              //売上入力明細クリア処理
              gpxMAHNB01013B_DoAddLine(-999,0,0);
              xDeatilClearDisplay();
              xInitialRow();
              //明細グリッド設定処理
              xSettingGrid;

         end
         else
         begin
           xClear(False, True, keepDate, False, False, True, False, 0);
         end;
         xSetDisplay();
         toolMenu_discountAllLineBtn.Caption := ctToolButtonNm_DiscountAllLine;
         discountAllLineBottun.Caption := ctToolButtonNm_DiscountAllLine;
         //初期フォーカス設定
         InitialSetFocusTick();
         Exit;
      end;


      if(resultNum <> 4) then
      begin
           xClear(False, True, keepDate, False, False, True, False, 0);
      end;

     //行値引情報をセットと現在庫数調整
     gpxMAHNB01013B_uButtonGoodsDiscountClick(-1000);
     salesDetailArray.Csafield1 := nil;
     salesDetailArray.Csafield1Count := 0;

     //伝票種別  →　30:売上
     AcptAnOdrStatusDisplayComBo.SelCode := 30;
     //明細ALL取得処理
     gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

     //全て明細画面表示処理
     for i := 1 to salesDetailArray.Csafield1Count do
     begin
         xSetDetailRowFormC(salesDetailArray,i);
         inc(salesDetailArray.Csafield1);
     end;

     //一括値引グローバル変数→true
     discountAllLineflag := true;

     //明細グリッド設定処理
     xSettingGrid;
     //セルアクティブ時ボタン有効無効コントロール処理
     xActiveCellButtonEnabledControl(xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col),HNsGrid1.LogicalRow);

     //初期フォーカス設定
     InitialSetFocusTick();

     //一括値引TMenuItem →売上(E)
     toolMenu_discountAllLineBtn.Caption := ctToolButtonNm_Tuujyou;
     //一括値引TToolButton →売上(E)
     discountAllLineBottun.Caption := ctToolButtonNm_Tuujyou;
     //入力モード画面デスプリセット
     pnl_InputModeTitle.Caption :=  '値引';
     //入力モード変数セット
     inputModeTitle :=  '値引';
     //カラーはピンクに変更
     pnl_InputModeTitle.Color := TColor(RGB(255,   192,   203));

   end;
end;


//一括値引Grid初期化
procedure TForm4.xDiscountGridInitial();
var
  salesDetailArray: TSalesSlipInputCustomArrayA2;
  i: Integer;
begin
         //行値引情報をセットと現在庫数調整
         gpxMAHNB01013B_uButtonGoodsDiscountClick(-1000);
         salesDetailArray.Csafield1 := nil;
         salesDetailArray.Csafield1Count := 0;

         //明細ALL取得処理
         gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

         //全て明細画面表示処理
         for i := 1 to i_RowMaxCount do
         begin
             salesDetailArray.Csafield1.SalesRowNo := i;
             xSetDetailRowFormC(salesDetailArray,i);
         end;
         //明細グリッド設定処理
         xSettingGrid;
end;

//「一括値引」→「売上」
procedure TForm4.xNotDiscountInitalSet();
begin
       if(inputModeTitle = '通常') or (inputModeTitle = '値引')then
       begin
           //入力モード変数セット
           inputModeTitle :=  '通常';
           //入力モード画面デスプリセット
           pnl_InputModeTitle.Caption := '通常';
       end;
       //入力モード画面カラーデスプリ
       pnl_InputModeTitle.Color := clHotLight;
       //一括値引TMenuItem →一括値引(E)
       toolMenu_discountAllLineBtn.Caption := ctToolButtonNm_DiscountAllLine;
       //一括値引TToolButton →一括値引(E)
       discountAllLineBottun.Caption := ctToolButtonNm_DiscountAllLine;
       //Delphiで、一括値引フラグにFalseをセットする
       discountAllLineflag := False;
       //C#で、一括値引フラグにFalseをセットする
       gpxMAHNB01013B_DoAddLine(-1,0,0);
end;
//-------------- ADD 2013/01/24 鄧潘ハン REDMINE#34141 ------------------<<<<<

// ------   ADD K2015/04/01 高騁 森川部品個別依頼 ------->>>>>
// *************************************************************************
// 全拠点在庫情報一覧パラメータ取得
// *************************************************************************
procedure TForm4.xAllSecStockInfoProc(rowNo: Integer; isPressed: Boolean; isClose: Boolean);
var
  makerCd: Integer;
  goodsNo: WideString;
  goodsName: WideString;
  errMsg: WideString;
  begin
    if(salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp) or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly)then begin
      Exit;
    end;
    if (notChangeAllSecStock = True) then begin
      notChangeAllSecStock := False;
      Exit;
    end;
    if(isOptPermitForMoriKawa) then begin
      if (Form4.ActiveControl <> nil) and (Form4.ActiveControl.Name = 'HNsGrid1') then begin
        makerCd := StrToIntDef(HNsGrid1.LogicalCells[ctCol_GoodsMakerCd, 1,rowNo], 0);
        goodsNo := HNsGrid1.LogicalCells[ctCol_GoodsNo, 1, rowNo];
        goodsName := HNsGrid1.LogicalCells[ctCol_GoodsName, 0, rowNo];
        gpxMAHNB01013B_ReadAllSecStockInfo(makerCd, goodsNo, goodsName, isPressed, isClose, errMsg);
      end else begin
        gpxMAHNB01013B_ReadAllSecStockInfo(0,'', '', isPressed, isClose, errMsg);
      end;
    end;
  end;
// ------   ADD K2015/04/01 高騁 森川部品個別依頼 -------<<<<<

procedure TForm4.ExpandableGroupBoxClick(Sender: TObject);
begin
  if (ExpandableGroupBox.Caption = '+') then begin
      ExpandableGroupBox.Caption := '-';
      pnl_DisableInfo.Height := 282;
      pnl_DisableInfo.Visible := True;
  end else begin
      ExpandableGroupBox.Caption := '+';
      pnl_DisableInfo.Visible := False;
  end;
end;

//*************************************************************************
//  管理番号ガイド処理
//*************************************************************************
procedure TForm4.CarMngCodeBtnClick(Sender: TObject);
var
  salesRowNo, searchType, resultStatus  : Integer;
  control : TWinControl;
  carInfo :TCarInfo; // 2010/11/02
begin
    salesRowNo := xGetActiveRowSalesRowNo();
    gpxMAHNB01012B_GetCarInfoRow(salesRowNo, 1, carInfo); // 2010/11/02

    gpxMAHNB01012B_carMngNoGuide(CustomerCode.GetInt, HGetEnterpriseCode, selectedInfo, resultStatus, salesRowNo, carMngCode.Text);

//    // 車両情報画面表示処理
//    salesRowNo := xGetActiveRowSalesRowNo();
//    searchType := 0;
//    xSetDisplayCarInfo(salesRowNo, searchType);


    // --- DEL m.suzuki 2010/11/01 ---------->>>>>
    ////管理番号ガイド表示後の処理
    //xAfterCarMngNoGuideReturn(resultStatus, selectedInfo, 0);
    //CarMngCode.DataText := selectedInfo.CarMngCode;
    // --- DEL m.suzuki 2010/11/01 ----------<<<<<

  // --- DEL m.suzuki 2010/10/27 ---------->>>>>
  //// --- ADD 2010/06/02 ---------->>>>>
  //SlipNote.Text := CarSlipNote.Text; // 備考1
  //// --- ADD 2010/06/02 ----------<<<<<

  //// --- ADD 2010/08/13 ---------->>>>>
  //salesSlip_disp.SlipNote := CarSlipNote.Text; // 備考1
  //gpxMAHNB01013B_SetSalesSlip(salesSlip_disp);
  //// --- ADD 2010/08/13 ----------<<<<<
  // --- DEL m.suzuki 2010/10/27 ----------<<<<<

  gpxMAHNB01012B_SetGetSearchCarDiv(2, searchCarDiv); // ADD 2010/07/16

  // ADD 2010/08/13 ---->>>>
  if (resultStatus <> -1) then
  begin
    //---ADD 2011/11/17 -------->>>>>
    if (resultStatus = 1) then
    begin
      CarMngCode.DataText := selectedInfo.CarMngCode;
    end;
    //---ADD 2011/11/17 --------<<<<<
    // --- ADD m.suzuki 2010/11/01 ---------->>>>>
    //管理番号ガイド表示後の処理
    //fterCarMngNoGuideReturn(resultStatus, selectedInfo, 0); //DEL 2011/11/15
    //---ADD 2011/11/15 ------------------->>>>>
    //---DEL 2011/11/17 -------->>>>>
    //if (carInfo.CarRelationGuid <> '')  then
    //begin
    //---DEL 2011/11/17 --------<<<<<
         CarMngGuideFlag := True; // ADD 2012/06/26 No.632

         xAfterCarMngNoGuideReturn(resultStatus, selectedInfo, 0);

         CarMngGuideFlag := False; // ADD 2012/06/26 No.632
    //end;// DEL 2011/11/17
    //---ADD 2011/11/15 -------------------<<<<<
// ----------- ADD 連番998、999 2011/08/06 ----------------- >>>>>
    // 売上データクラス→画面格納処理
    SetDisplayHeaderFooterInfo(salesSlip_disp);
// ----------- ADD 連番998、999 2011/08/06 ----------------- <<<<<

    CarMngCode.DataText := selectedInfo.CarMngCode;
    // --- ADD m.suzuki 2010/11/01 ----------<<<<<

    // --- ADD m.suzuki 2010/10/27 ---------->>>>>
    // 備考1
    //>>>2010/11/02
    //if (SlipNote.Text = '') then
    //if (Trim(CarMngCode.Text) <> Trim(carInfo.CarMngCode)) // DEL 2011/11/18
    if (Trim(CarMngCode.Text) <> Trim(carInfo.CarMngCode)) AND (resultStatus <> 1)then // ADD 2011/11/18
    //<<<2010/11/02
    begin
      // --- UPD 2012/09/12 Wakita ---------->>>>>
      //SlipNote.Text := CarSlipNote.Text;
      //salesSlip_disp.SlipNote := SlipNote.Text;
      SlipNote.Text := TrimRight(CarSlipNote.Text);
      salesSlip_disp.SlipNote := TrimRight(SlipNote.Text);
      // --- UPD 2012/09/12 Wakita ----------<<<<<
      gpxMAHNB01013B_SetSalesSlip(salesSlip_disp);
    end;
    // --- ADD m.suzuki 2010/10/27 ----------<<<<<

    // --- ADD 2013/05/10 T.Miyamoto ---------->>>>>
    //車輌未検索時の次フォーカスを設定
    if (searchCarDiv) then
    begin
      xGetNextCtrlNotCarSearch().SetFocus;
      Exit;
    end;
    // --- ADD 2013/05/10 T.Miyamoto ----------<<<<<

    //if (xGetNextControl(CarMngCode, 0) <> nil) then    // DEL 2010/08/25
    //if (xGetNextCtrlAfterCarSearch(CarMngCode) <> nil) then   // ADD 2010/08/25 //DEL 2011/11/15
    //if ((carInfo.CarRelationGuid <> '') and (xGetNextCtrlAfterCarSearch(CarMngCode) <> nil)) then //ADD 2011/11/15 //DEL 2011/11/17
    if (xGetNextCtrlAfterCarSearch(CarMngCode) <> nil) then //ADD 2011/11/17
    begin
        //if (xGetNextControl(CarMngCode, 0) = HNsGrid1) then   // DEL 2010/08/25
        if (xGetNextCtrlAfterCarSearch(CarMngCode) = HNsGrid1) then    // ADD 2010/08/25
        begin
          if (HNsGrid1.Enabled = True) then
          begin
             HNsGrid1.SetFocus;
             if i_searchPartsMode = 1 then
             begin
               HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2);
             end
             else
             begin
               HNsGrid1.FocusCell(ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1);
             end;
          end
        end
        else
        begin
           //xGetNextControl(CarMngCode, 0).SetFocus;    // DEL 2010/08/25
           xGetNextCtrlAfterCarSearch(CarMngCode).SetFocus;      // ADD 2010/08/25
        end;
    end;
  end;
  // ADD 2010/08/13 ----<<<<
end;

// ------------ ADD 2011/08/04 -------------------- >>>>>
//*************************************************************************
//  管理番号フォーカスイン処理
//*************************************************************************
procedure TForm4.CarMngCodeEnter(Sender: TObject);
begin
  if strCarMngCode <> '' then CarMngCode.Text := strCarMngCode;
end;
// ------------ ADD 2011/08/04 -------------------- <<<<<

procedure TForm4.ClosePopClick(Sender: TObject);
begin
   Close;
end;

procedure TForm4.copySlipButtonClick(Sender: TObject);
var
inputMode, salesRowNo, searchType, rowCount, isResult, ctTabKeyAddInfo, settingAddInfoVisibleFlg, resultNum, saveStatus: Integer;
salesDetailArray: TSalesSlipInputCustomArrayA2;
// --- ADD m.suzuki 2010/06/12 ---------->>>>>
//isMakeQR: Boolean; // DEL 2011/02/11
isMakeQR, isErrorFlag: Boolean; // ADD 2011/02/11
// --- ADD m.suzuki 2010/06/12 ----------<<<<<
colKey:string;//ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.2の対応
begin

  if Form4.ActiveControl = HNsGrid1 then
  begin
      rowCount := 0;
      if HNsGrid1.RowSelectCount >= 0 then
      begin
          rowCount := HNsGrid1.RowSelectCount;
      end;

      gpxMAHNB01013B_SalesReferenceSearch(rowCount, CustomerCode.Text);
      //>>> ADD  2012/05/17 SCM障害№162対応
      // データ取得・表示終了まで終了ボタン使用不可
      b_CloseFlg := True;
      //<<< ADD  2012/05/17 SCM障害№162対応

      xSetDisplay();

      // 伝票区分コンボエディタアイテム設定処理
      xSetItemtSalesSlipCd(salesSlip_disp, salesSlip_disp.AcptAnOdrStatusDisplay, True);  // ADD 2010/09/07

      // 売上金額変更後発生イベント処理
      xSalesPriceChanged();

      // 車両情報画面表示処理
      salesRowNo := xGetActiveRowSalesRowNo();
      searchType := 0;
      xSetDisplayCarInfo(salesRowNo, searchType);
      //画面表示処理（明細情報）
      // --- UPD 2010/05/31 ---------->>>>>
      //xSetDisplayDetailInfo();
      xSetDisplayDetailInfo(salesRowNo);
      // --- UPD 2010/05/31 ----------<<<<<

      xSlipMemoInfoFormSetting(salesRowNo);
      // 明細データ設定
      xDeatilClearDisplay();

      gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

      // --- ADD 2010/05/31 ---------->>>>>
      xInitialRow;
      // --- ADD 2010/05/31 ----------<<<<<
      xSetDetailRowFormC(salesDetailArray,-1);
      xSettingGrid();
      //---UPD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.2の対応----->>>>>
      //xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);
      if(HNsGrid1.Col = ctCol_BLGoodsCode) then
      begin
        colKey :='BLGoodsCode';
      end
      else if (HNsGrid1.Col = ctCol_GoodsName)then
      begin
        colKey := 'GoodsNo';
      end
      else
      begin
        colKey := '';
      end;
      xActiveCellButtonEnabledControl(colKey,HNsGrid1.LogicalRow);
      //---UPD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.2の対応-----<<<<<

      //>>> ADD  2012/05/17 SCM障害№162対応
      // 終了ボタン使用可能
      b_CloseFlg := False;
      //<<< ADD  2012/05/17 SCM障害№162対応
  end else begin
      //データ保存確認
      // --- UPD m.suzuki 2010/06/12 ---------->>>>>
      //gpxMAHNB01013B_ShowSaveCheckDialog(true, resultNum, CarMngCode.Text) ;

      // --- ADD 2010/07/16 ---------->>>>>
      if checkBox_MakeQR.Visible then
      BEGIN
          isMakeQR := checkBox_MakeQR.Checked;
      END else begin
          isMakeQR := False;
      END;
      //isMakeQR := checkBox_MakeQR.Checked;
      // --- ADD 2010/07/16 ----------<<<<<

      gpxMAHNB01013B_ShowSaveCheckDialog(true, resultNum, CarMngCode.Text, isMakeQR) ;
      checkBox_MakeQR.Checked := isMakeQR;
      // --- UPD m.suzuki 2010/06/12 ----------<<<<<

      // ---ADD 2011/02/11------------->>>>
      gpxMAHNB01013B_GetErrorFlag(isErrorFlag);
      if isErrorFlag then
      begin
        _isErrorFlag := isErrorFlag;
        newButton.Visible := False; // 新規(F9)
        saveButton.Visible := False; // 確定(F10)
        deleteSlipButton.Visible := False; // 伝票削除(F12)
        returnButton.Visible := False; // 戻る(F2)
        forwardButton.Visible := False; // 進む(F3
        guideButton.Visible := False; // ガイド(F5)
        searchCarChangeButton.Visible := False; // 検索切替(F4)
        ReadSlipButton.Visible := False; // 伝票呼出(X)
        shipmentAddUpButton.Visible := False; // 貸出計上(I)
        acceptAnOrderAddUpButton.Visible := False; // 受注計上(H)
        estimateAddUpButton.Visible := False; // 見積計上(Q)
        SlipHeaderCopyButton.Visible := False; // 見出貼付(F6)
        updateButton.Visible := False; // 更新(V)
        toolRetryButton.Visible := False; // 元に戻す(U)
        toolRedSlipButton.Visible := False; // 赤伝(R)
        toolReturnSlipButton.Visible := False; // 返品(Y)
        toolCopySlipButton.Visible := False; // 伝票複写(P)
        toolSetupButton.Visible := False; // 設定(O)
        toolReNewalbtn.Visible := False; // 最新情報(A)
        toolReferenceListButton.Visible := False; // 問合せ一覧
        toolHisSearchButton.Visible := False; // 履歴検索 // ADD　2018/09/04 譚洪　履歴自動表示の対応
        toolGetTaxRateButton.Visible := False; // 税率入力 // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
        toolEBooksButton.Visible := False; // 電帳.DX // ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応
        //toolReplyTransactionButton.Visible := False; // 回答処理
        toolMailButton.Visible := False; // メール
        dateUpdateBottun.Visible := False; // 日付修正  // ADD 2011/08/02
        detailCopyButton.Visible := False; // 明細貼付  // ADD 連番729 2011/08/18
        UOEDataGet.Visible := False;// ADD  黄興貴 K2015/04/29 回答取込パタン追加
        discountAllLineBottun.Visible := False; // 一括値引 //ADD 2013/01/24 鄧潘ハン REDMINE#34141
        allSecInfoButton.Visible := False; // ADD K2015/04/01 高騁 森川部品個別依頼
        DorpdownList.Visible := False;
        // ---UPD 2011/03/07------------->>>>
//        SalesSlipNum.Visible := False; // 伝票番号
//        SalesSlipNumBtn.Visible := False; // 伝票番号BTN
        pnl8.Visible := False;    //伝票番号
        // ---UPD 2011/03/07-------------<<<<
      end;
      // ---ADD 2011/02/11-------------<<<<
      //データ保存不要、「いいえ」、保存okの場合、出荷計上処理を行う
      if (resultNum = 0) or (resultNum = 1)  or (resultNum = 4) then
      begin
        if resultNum = 0 then
        begin
           //>>> ADD  2012/05/17 SCM障害№162対応
           // データ取得・表示終了まで終了ボタン使用不可
           b_CloseFlg := True;
           //<<< ADD  2012/05/17 SCM障害№162対応
           // 保存状態取得
           gpxMAHNB01013B_GetSaveStatus(saveStatus);
           xdoSaveAfter(saveStatus);
           xDeatilClearDisplay();

           //>>>2010/11/08
           xSetDisplay();
           xDeatilClearDisplay();
           xSetDisplayDetailInfo(salesRowNo);
           xChangeSearchModeReflect();
           xSettingAddInfoVisible();
           InitialSetFocusTick();
           //>>> ADD  2012/05/17 SCM障害№162対応
           // 終了ボタン使用可能
           b_CloseFlg := False;
           //<<< ADD  2012/05/17 SCM障害№162対応
           //<<<2010/11/08
        end;

        gpxMAHNB01013B_CopySlip(False, isResult);
  //    HNsGrid 設定前
        if isResult = 1 then
        begin
          // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
          //値引モード
          if(discountAllLineflag) then
          begin
              //「一括値引」→「売上」
              xNotDiscountInitalSet();
          end;
          // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
          //>>> ADD  2012/05/17 SCM障害№162対応
          // データ取得・表示終了まで終了ボタン使用不可
          b_CloseFlg := True;
          //<<< ADD  2012/05/17 SCM障害№162対応
          xSetDisplay();
          // 伝票区分コンボエディタアイテム設定処理
          xSetItemtSalesSlipCd(salesSlip_disp, salesSlip_disp.AcptAnOdrStatusDisplay, True);  // ADD 2010/09/07
          // 売上金額変更後発生イベント処理
          xSalesPriceChanged();

          // 車両情報画面表示 処理
          salesRowNo := xGetActiveRowSalesRowNo();
          searchType := 0;
          xSetDisplayCarInfo(salesRowNo, searchType);
          //画面表示処理（明細情報）
          // --- UPD 2010/05/31 ---------->>>>>
          //xSetDisplayDetailInfo();
          xSetDisplayDetailInfo(salesRowNo);
          // --- UPD 2010/05/31 ----------<<<<<

          // 明細データ設定
          xDeatilClearDisplay();

          gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

          // --- ADD 2010/05/31 ---------->>>>>
          xInitialRow;
          // --- ADD 2010/05/31 ----------<<<<<
          // --- ADD 2010/07/14 ---------->>>>>
          if (salesDetailArray.Csafield1Count > i_RowMaxCount) then
          begin
            xInitialRow_AddUp(salesDetailArray);
          end;
          // --- ADD 2010/07/14 ---------->>>>>
          xSetDetailRowFormC(salesDetailArray,-1);
          xSettingGrid();

          // ガイドボタンツール有効無効設定処理
          xSettingGuideButtonToolEnabled(OldCtrl);
          xSettingVisible();

          HNsGrid1.SetFocus;

          HNsGrid1.FocusCell(ctCol_SupplierCd, HNsGrid1.LogicalRow * 2 + 1);

          // 車両情報設定処理
          salesRowNo := xGetActiveRowSalesRowNo();

          xSlipMemoInfoFormSetting(salesRowNo);
          //追加情報タブ項目Visible設定
          xSettingAddInfoVisible();

          //伝票備考、伝票備考２、伝票備考３の入力桁数を制御する
          xSetNoteCharCnt();
          xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);
          // --- DEL 2010/06/17 ---------->>>>>
          //OldCtrl := Form4.ActiveControl;
          // --- DEL 2010/06/17 ----------<<<<<
          //>>> ADD  2012/05/17 SCM障害№162対応
          // 終了ボタン使用可能
          b_CloseFlg := False;
          //<<< ADD  2012/05/17 SCM障害№162対応
        end;
      //保存確認ダイアログデータ保存失敗の場合、明細にFocus設定する
      end else begin
        if resultNum =3 then
        begin
            // HNsGrid1
            HNsGrid1.SetFocus;
        end;

      end;

   end;
      // フッタタブ位置セット
      uTabControl_Footer.ActivePage := ts1;
      xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼
end;

//*************************************************************************
//  最新情報
//*************************************************************************
//Update Note: 2010/06/02 譚洪 PM.NS障害・改良対応（７月リリース案件）
//No.26「最新情報」を押下すると「納品区分」が追加される不具合対応。
procedure TForm4.ReNewalbtnClick(Sender: TObject);
var
  i : Integer;
begin
  if Application.MessageBox(
          '画面情報はクリアされます。' + #10 + #10 +
          'よろしいですか？',
          PChar(Caption),
          MB_YESNO + MB_ICONWARNING + MB_DEFBUTTON1) = IDNO then
  begin
    Exit;
  end;

  try
    gpxMAHNB01013B_ReNewalBtnClick(HGetEnterpriseCode, HGetLoginEmployeeBelongSectionCode);

    gpxMAHNB01019B_GetPosTerminalMg(posTerminalMg);
    gpxMAHNB01019B_GetAcptAnOdrTtlSt(acptAnOdrTtlSt);// -- Add 2012/07/31 30182 R.Tachiya --
    gpxMAHNB01019B_GetSalesTtlSt(salesTtlSt);
    gpxMAHNB01019B_GetAllDefSet(allDefSet);
    gpxMAHNB01019B_GetCompanyInf(companyInf);

    gpxMAHNB01019B_CacheSalesProcMoneyListCall();
    gpxMAHNB01019B_CacheStockProcMoneyListCall();
    gpxMAHNB01019B_CacheRateProtyMngListCall();
    gpxMAHNB01019B_SettingProcMoney();

    // ADD 2010/08/13 ---->>>>
    // 小数点表示区分しないの場合、
    if (salesTtlSt.DwnPLCdSpDivCd = 0) then
    begin
        smallPointFlg := False;
    end
    // 小数点表示区分するの場合、
    else
    begin
        smallPointFlg := True;
    end;
    // ADD 2010/08/13 ----<<<<

    //初期値補正
    //自社情報設定マスタ.部門管理区分 = 0:拠点の場合、部門コード、部門名称、部門ガイドは表示しない
    if (companyInf.SecMngDiv = 0) then
    begin
      pnl_SubSection.Visible := False;
    end else
    begin
      pnl_SubSection.Visible := True;
    end;

    // 納品区分コンボエディタアイテム初期設定処理
    gpxMAHNB01013B_SetUserGdBdComboEditor(guideCodeArray, guideNameArray);
    DeliveredGoodsDivComBo.Clear();

    for i := 0 to High(guideCodeArray) do
    begin
        DeliveredGoodsDivComBo.HAdd(StrToInt(guideCodeArray[i]), guideNameArray[i])
    end;

    // --- ADD 2010/06/02 ---------->>>>>
    if (High(guideCodeArray) > 0) then
    begin
       DeliveredGoodsDivComBo.SelCode := 0;
    end;
    // --- ADD 2010/06/02 ----------<<<<<

    // Visible設定
    xSettingVisible();     // ADD 2010/07/12

    // 画面初期化処理
    // ----- UPD 2010/05/21 ------------>>>>>
    //xClear(False, False, False, False, False);
    //xClear(False, False, False, False, False, False);
    //xClear(False, False, False, False, False, False, False); //ADD 2010/06/02
    // ----- UPD 2010/05/21 ------------>>>>>
    //>>>2010/05/30
    xClear(False, False, False, False, False, False, False, 0);
    //<<<2010/05/30
    // 得意先情報画面格納処理
    gpxMAHNB01013B_GetDisplayCustomerInfo(i_CustomerNameFlg, s_TotalDayDf, s_CollectMoneyDf);

    // 得意先名称
    if (i_CustomerNameFlg = 0) then
    begin
       xEnableControl(CustomerName, False);
    end else begin
       xEnableControl(CustomerName, True);
    end;
    // 締日
    if (s_TotalDayDf = '0') then
    begin
       TotalDay.Caption := '';
    end
    else
    begin
       TotalDay.Caption := s_TotalDayDf;
    end;
    // 集金月日
    if (s_CollectMoneyDf = '0') then
    begin
      CollectMoney.Caption := '';
    end
    else
    begin
      CollectMoney.Caption := s_CollectMoneyDf;
    end;

    xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

    //画面表示処理（明細情報）
    // --- UPD 2010/05/31 ---------->>>>>
    //xSetDisplayDetailInfo();
    xSetDisplayDetailInfo(HNsGrid1.LogicalRow);
    // --- UPD 2010/05/31 ----------<<<<<

    // グリッド設定処理（ユーザー設定より）
    xGridSetting();
    // --- ADD 2010/06/02 ---------->>>>>
    InitialSetFocusTick();
    // --- ADD 2010/06/02 ----------<<<<<

    // Visible設定
    //xSettingVisible();     // DEL 2010/07/12

    // 画面項目名称設定処理
    xGetDisplayName();

    settingGridFlg := False;

    xSetItemsDictionary;

    // SCMオプション(Opt_SCM)：OFF ツールバー 問合せ一覧→非表示
    // ツールバー 回答処理→非表示  明細部 SCMボタン→非表示
    if (optScm = 0) then
    begin
       ReferenceListButton.Visible := False;
       toolReferenceListButton.Visible := False;
// 2011/01/31 Del >>>
//       ReplyTransactionButton.Visible := False;
//       toolReplyTransactionButton.Visible := False;
// 2011/01/31 Del <<<
       btnSCM.Visible := False;
       btnCopyToRC.Left := 904;
//       panel_InquiryNumber.Visible := False; // 2010/06/30 // 2010/07/15
//       pnl_PartySaleSlipNum.Visible := True; // 2010/07/15
    end
    else
    begin
//       panel_InquiryNumber.Visible := True; // 2010/06/30 // 2010/07/15
//       pnl_PartySaleSlipNum.Visible := False; // 2010/07/15

//>>>2011/02/01 SCMボタン制御対応
      if (optRCLink = 0) then begin
        btnSCM.Visible := false;
      end else begin
        btnSCM.Visible := true;
      end;
//<<<2011/02/01 SCMボタン制御対応
    end;
    // 買掛オプション(Opt_StockingPayment)：OFF  明細部 仕入先ボタン→非表示
    if (optStockingPayment = 0) then
    begin
       inputStockFlg := False;               // ADD 2010/08/13
       btnInputStockInfo.Visible := False;
       btnInputStockInfo.Left := 50;
       btnInputChange.Left := 131;
    end;
    // UOEオプション(Opt_UOE)：OFF  明細部 発注ボタン→非表示
    if (optUoe = 0) then
    begin
       inputOrderFlg := False;                 // ADD 2010/08/13
       btnInputOrderInfo.Visible := False;
       btnInputChange.Left := 128;
       btnInputStockInfo.Left := 208;
    end;
    // RC連動オプション(Opt_RCLink)：OFF   明細部 RCへコピー→非表示
    if (optRCLink = 0) then
    begin
       btnCopyToRC.Visible := False;
    end;
    // QRコード携帯メールオプション(Opt_QRMail)：OFF  ツールバー メール→非表示
    // フッタ部　QRコード作成→非表示
    if (optQRMail = 0) then
    begin
       MailButton.Visible := False;
       toolMailButton.Visible := False;
       checkBox_MakeQR.Visible := False;
    end;

    // --- ADD 2013/05/23 T.Miyamoto ---------->>>>>
    // 常駐プロセス再起動
    xSleepUpToReboot();
    // --- ADD 2013/05/23 T.Miyamoto ----------<<<<<
  finally
    gpxMAHNB01013B_ProcessingDialogDispose();
  end;
end;

// --- ADD m.suzuki 2010/06/12 ---------->>>>>
//*************************************************************************
// メールボタン
//*************************************************************************
procedure TForm4.MailButtonClick(Sender: TObject);
var
  sFilePath: WideString;
  sParam: WideString;
begin
  if FileExists(ctAssemblyID_Mail) then
  begin

    // カレントディレクトリ設定
    ChDir( ExtractFilePath( Application.ExeName ) );

    // メール用情報ファイル作成
    gpxMAHNB01012B_MakeMailDefaultData( sFilePath );

    // EXE起動パラメータ取得
    xGetStartParameter( sParam );

    if (sParam <> '') then
    begin

      // メーラー実行
      // ( "PMKHN07500U.EXE" + <EXE起動パラメータ> + <メール情報ファイル名>)
      xProcessStart( ctAssemblyID_Mail + ' ' + sParam + ' ' + sFilePath );

    end;

  end else begin
    // メーラーが存在しない
  end;
end;

//*************************************************************************
// EXE起動パラメータ取得処理（自分が受け取った引数を返す）
//*************************************************************************
procedure TForm4.xGetStartParameter( var param: WideString );
var
  ix : Integer;
begin

  param := '';
  if  ParamCount  > 0 then
  begin
    for ix := 1 to ParamCount do
    begin
      // パラメータをスペース区切りで連結
      param := param + ' ' + ParamStr(ix);

      // 必要な引数は2つなので,念のためbreak
      if (ix = 2) then break;
    end;
  end;

end;
//*************************************************************************
// プロセス起動処理
//*************************************************************************
procedure TForm4.xProcessStart( sCommand : WideString );
var
  si : TStartupInfo;
  pi : TProcessInformation;
begin
  GetStartupInfo( si );
  CreateProcess( nil, PChar(sCommand), nil, nil, False,
     CREATE_DEFAULT_ERROR_MODE,nil,PChar(GetCurrentDir),si,pi);
end;

//*************************************************************************
// QR作成処理呼び出し
//*************************************************************************
procedure TForm4.xMakeQRCall;
var
  sParam : WideString;
begin

  if ( (checkBox_MakeQR.Visible = True) and (checkBox_MakeQR.Checked = True) ) then
  begin
    // カレントディレクトリ設定
    ChDir( ExtractFilePath( Application.ExeName ) );

    // EXE起動パラメータ取得
    xGetStartParameter( sParam );

    // QR作成処理
    gpxMAHNB01013B_MakeQR( sParam );

  end;

end;
// --- ADD m.suzuki 2010/06/12 ----------<<<<<

procedure TForm4.CustomerClaimConfirmationBtnClick(Sender: TObject);
var
  focus : WideString;
begin
  gpxMAHNB01012B_CustomerClaimConfirmationClick(TDateTimeToTicks(StrToDateTime(FormatFloat('0000/00/00', SalesDate.LongDate))), focus);

  if focus <> '' then
  begin
    if focus = 'CustomerCode' then
    begin
      CustomerCode.SetFocus();
    end;

    if focus = 'SalesDate' then
    begin
      SalesDate.SetFocus();
    end;
  end;
end;

// *************************************************************************
// 履歴
//--------------------------------------------------------------------------
// 管理番号              作成担当 : 許雁波
// 作 成 日  2011/08/12  修正内容 : Redmine#23527の対応
// *************************************************************************
procedure TForm4.CustomerCodeBtnClick(Sender: TObject);
var
  dialogResultFlag: Integer;
  control : TWinControl;
  vk_code : Integer;
  customerCodeChangedFlg, optCarMngFlg: Boolean;
  salesRowNo: Integer;
  salesSlipCurrent: TSalesSlip;
  isDataChanged, returnFlag, clearAddCarInfo, guideStart, clearDetailInput, clearCarInfo, reCalcSalesPrice, canChangeFocus, reCalcSalesUnitPrice, clearRateInfo, changeSalesSlip: Boolean;
  salesDetailArray: TSalesSlipInputCustomArrayA2;
begin

  reCalcSalesUnitPrice := False;  //ADD 2015/08/31 Wakita

  if(Sender = CustomerCodeBtn) then
  begin
    control := CustomerCode;
    gpxMAHNB01013B_customerGuide(True, AddresseeCode.GetInt, CustomerCode.GetInt, customerSearchRet, dialogResultFlag, customerCodeChangedFlg, optCarMngFlg);
    if dialogResultFlag = 0 then
    begin

      salesRowNo := xGetActiveRowSalesRowNo();
      gpxMAHNB01012B_GetSalesSlip(salesSlipCurrent);
      if CustomerCode.GetInt() <> customerSearchRet.CustomerCode then
        begin
          guideStart := False;

          gpxMAHNB01012B_AfterCustomerCodeFocus(salesSlip_disp, customerSearchRet.CustomerCode, customerInfo, clearAddCarInfo, canChangeFocus,
                                                reCalcSalesPrice, guideStart, clearDetailInput, clearCarInfo, reCalcSalesUnitPrice, clearRateInfo);
          xGetTaxRateName(salesSlip_disp);   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
          //得意先を変更した場合は、管理番号の値をクリアする
          if clearAddCarInfo then
          begin
            xClearAddCarInfo();
          end;

          if not guideStart then
          begin
             // -----------UPD 2010/09/07---------->>>>>
//          if salesSlip.CustomerCode <> 0 then
//          begin
//            CustomerCode.DataText := IntToStr(salesSlip.CustomerCode);
//          end else
//          begin
//            CustomerCode.DataText := '';
//          end;
             customerCodeExitFlg := False;

            if salesSlip_disp.CustomerCode <> 0 then
            begin
              CustomerCode.DataText := IntToStr(salesSlip_disp.CustomerCode);
            end else
            begin
              CustomerCode.DataText := '';
            end;
           // -----------UPD 2010/09/07----------<<<<<
  //          CustomerCode.SetInt(salesSlip_disp.CustomerCode);
            //CustomerName.Text := salesSlip_disp.CustomerName;  // DEL 2010/09/10
            CustomerName.Text := salesSlip_disp.CustomerSnm;     // ADD 2010/09/10
            AddresseeCode.SetInt(salesSlip_disp.AddresseeCode);

          if clearDetailInput then
          begin
            xDeatilClearDisplay();
            xDeatilClearTable();
          end;

          if clearCarInfo then
          begin
            // 画面クリア処理（車両情報）
            xClearDisplayCarInfo();
          end;

          // --- UPD m.suzuki 2010/11/01 ---------->>>>>
          //// --- UPD 2010/07/06 ----------<<<<<
          //if guideStart then
          //begin
          //  // 得意先情報画面格納処理
          //  xSetDisplayCustomerInfo(customerInfo);
          //end;
          //// --- UPD 2010/07/06 ----------<<<<<
            // 得意先情報画面格納処理
            xSetDisplayCustomerInfo(customerInfo);
          // --- UPD m.suzuki 2010/11/01 ----------<<<<<


        // 伝票区分コンボエディタアイテム設定処理
  //      xSetItemtSalesSlipCd(salesSlip_disp, salesSlip_disp.AcptAnOdrStatusDisplay, false);    // DEL 2010/07/06
        //xSetItemtSalesSlipCd(salesSlip_disp, salesSlip_disp.AcptAnOdrStatusDisplay, True);     // ADD 2010/07/06   DEL 2011/12/08
        xSetItemtSalesSlipCdKeepSlipCd(salesSlip_disp, salesSlip_disp.AcptAnOdrStatusDisplay, True);   // ADD 2011/12/08
        // 伝票区分設定処理
        gpxMAHNB01012B_ChangeSalesSlip(salesSlip_disp, False, SalesSlipDisplayComBo.SelCode, changeSalesSlip, clearDetailInput, clearCarInfo);
        // 売上データキャッシュ処理
        gpxMAHNB01012B_Cache(salesSlip_disp);
        // Visible設定
        xSettingVisible();
        //追加情報タブ項目Visible設定
        xSettingAddInfoVisible();
        //車種変更ボタンVisible設定
        xSettingChangeCarInfoVisible();
        //伝票備考、伝票備考２、伝票備考３の入力桁数を制御する
        xSetNoteCharCnt();
        end;
      end;
      //---------------------------------------------------------------
      // 売上データ変更時
      //---------------------------------------------------------------
      gpxMAHNB01012B_CompareSalesSlip(salesSlip_disp, salesSlipCurrent, returnFlag);
      if returnFlag then
      begin
        // 売上データキャッシュ処理
        gpxMAHNB01012B_CacheForChange(salesSlip_disp);

        // 売上データクラス→画面格納処理
          SetDisplayHeaderFooterInfo(salesSlip_disp);
        //画面表示処理（売上金額合計情報）
        xSetDisplayTotalPriceInfo(salesSlip_disp);

        // データ変更フラグプロパティをTrueにする
        isDataChanged := true;
        gpxMAHNB01012B_SetGetIsDataChanged(1, isDataChanged);
      end;

      // ---ADD 2011/05/30--------->>>>>
      //---------------------------------------------------------------
      // 売上単価再計算時
      //---------------------------------------------------------------
      if reCalcSalesUnitPrice then
      begin
      gpxMAHNB01012B_ReCalcSalesUnitPrice(salesSlip_disp);

      // 売上金額変更後発生イベント処理
      xSalesPriceChanged();

      end;
      // ---ADD 2011/05/30---------<<<<<

      //---------------------------------------------------------------
      // 売上金額再計算時
      //---------------------------------------------------------------

        // --- ADD 2010/05/31 ---------->>>>>
        gpxMAHNB01012B_CalculationSalesPrice();
        // --- ADD 2010/05/31 ----------<<<<<

        // 売上金額変更後発生イベント処理
        xSalesPriceChanged();

      //---------------------------------------------------------------
      // 明細情報更新
      //---------------------------------------------------------------
        xSalesSlipDetailInput_DetailChanged(salesRowNo);

        xDeatilClearDisplay();
        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);
        xSetDetailRowFormC(salesDetailArray,-1);
        // --- ADD 2010/06/02 ---------->>>>>
        xSettingGrid();
        // --- ADD 2010/06/02 ---------->>>>>

      //---------------------------------------------------------------
      // ボタンツール有効無効設定処理
      //---------------------------------------------------------------
      xSettingToolBarButtonCaption;
      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(nil); // ADD 2011/12/21 tianjw Redmine#27290

      // ----------UPD 2010/09/07---------->>>>>
      //CustomerCode.SetInt(customerSearchRet.CustomerCode);
      //CustomerName.Text := customerSearchRet.Name;
      CustomerCode.SetInt(salesSlip_disp.CustomerCode);
      //CustomerName.Text := salesSlip_disp.CustomerName;  // DEL 2010/09/10
      CustomerName.Text := salesSlip_disp.CustomerSnm;    // ADD 2010/09/10
      // ----------UPD 2010/09/07----------<<<<<

      if AddresseeCode.GetInt = 0 then AddresseeCode.SetInt(CustomerCode.GetInt);
    end
    // ADD 2010/09/10 -- >>>>
    else
    if (dialogResultFlag = 1) then
    begin
      if CustomerCode.Enabled and not CustomerCode.ReadOnly then    // ADD Redmine#23527 2011/08/12
       CustomerCode.SetFocus;
    end;
    // ADD 2010/09/10 -- <<<<
  end;

  if(Sender = AddresseeCodeBtn) then
  begin
    control := AddresseeCode;
    gpxMAHNB01013B_customerGuide(False, AddresseeCode.GetInt, CustomerCode.GetInt, customerSearchRet, dialogResultFlag, customerCodeChangedFlg, optCarMngFlg);
    if dialogResultFlag = 0 then
    begin
      AddresseeCode.SetInt(customerSearchRet.CustomerCode);
      AddresseeName.Text := customerSearchRet.Name + customerSearchRet.Name2;
    end;
  end;

  // 次の項目へフォーカス移動
  if dialogResultFlag = 0 then
  begin
    if customerCodeChangedFlg then
    begin
      // 車輌管理オプション有りの場合
      if optCarMngFlg then
      begin
        //得意先を変更した場合は、管理番号の値をクリアする
        xClearAddCarInfo();
      end;

      //伝票備考、伝票備考２、伝票備考３の入力桁数を制御する
      xSetNoteCharCnt();
    end;

    // 次の項目へフォーカス移動
    vk_code := VK_RETURN;
    xForwardNextFocus(control, vk_code);

  end;

  xSettingVisible();
  //追加情報タブ項目Visible設定
  xSettingAddInfoVisible();

end;

procedure TForm4.CustomerCodeEnter(Sender: TObject);
begin
  if CustomerCode.GetInt() <> 0 then
  begin
    CustomerCode.Text := IntToStr(CustomerCode.GetInt());
    CustomerCode.SelectAll;
  end;
  customerCodeExitFlg := False;
end;

procedure TForm4.CustomerCodeExit(Sender: TObject);
begin
    customerCodeExitFlg := True;
end;

// --- ADD 2010/06/26 ---------->>>>>
procedure TForm4.DeliveredGoodsDivComBoEnter(Sender: TObject);
begin
  // --- ADD 2010/07/01 ---------->>>>>
  //DeliveredGoodsDivComBo.DroppedDown := True;
  if ((GetKeyState(VK_RETURN) and $8000 = $8000) or
    (GetKeyState(VK_TAB) and $8000 = $8000) or
    (GetKeyState(VK_RIGHT) and $8000 = $8000) or
    (GetKeyState(VK_LEFT) and $8000 = $8000) or
    (GetKeyState(VK_DOWN) and $8000 = $8000) or
    (GetKeyState(VK_UP) and $8000 = $8000)) then
  begin
     DeliveredGoodsDivComBo.DroppedDown := True;
  end;
  // --- ADD 2010/07/01 ----------<<<<<
end;

// --- ADD 2010/06/26 ----------<<<<<

procedure TForm4.FirstEntryDateEnter(Sender: TObject);
var
  yearName : string;
begin
  if (allDefSet.EraNameDispCd1 = 1) and (FirstEntryDate.LongDate = 0) then
  begin
    FirstEntryDate.Clear();
    FirstEntryDate.LongDate := StrToIntDef(FormatDateTime('yyyymmdd',Now), 0);
    yearName := FirstEntryDate.YearName;

    FirstEntryDate.LongDate := 0;
    FirstEntryDate.YearName := yearName;
  end;
end;

procedure TForm4.FormCanResize(Sender: TObject; var NewWidth,
  NewHeight: Integer; var Resize: Boolean);
  var
   i ,j ,col : Integer;
begin


    // ---ADD 2011/02/11---------------->>>>
    if _isErrorFlag then
    begin
      Exit;
    end;
    // ---ADD 2011/02/11----------------<<<<
     newWidthTemp := NewWidth;

    if (toolbarFlg) then
    begin
       xtoolbarset();
    end;


    if (isCanResize) then
    begin
       isCanResize := False;
       Exit;
    end;

    // --------ADD 2010/06/26------->>>>>
    if isEnter then
    begin
      Exit;
    end;
    // --------ADD 2010/06/26-------<<<<<
    // --------ADD 2010/07/01------->>>>>
    if vk_Right_Check then
    begin
      Exit;
    end;

    // --------ADD 2010/07/01-------<<<<<
    xSettingGridColVisible(0, i_InputType);
//    if (NewWidth > 1024) then
//    begin
//      HNsGrid1.ColWidths[0] := 40;
//      for j := 1 to HNsGrid1.ColCount - 1 do
//      begin
//         HNsGrid1.ColWidths[j] := 64;
//      end;
//    end;
//    HNsGrid1.ColWidths[ctCol_GoodsKindCode] := 40;  //純優
//    HNsGrid1.ColWidths[ctCol_OpenPriceDivDisplay] := 30;  //OP
//    HNsGrid1.ColWidths[ctCol_SlipMemoExist] := 27;  //メモ
//    HNsGrid1.ColWidths[ctCol_BoCode] := 40;  //BO
//    HNsGrid1.ColWidths[ctCol_GoodsName] := 157;  //品番
//    HNsGrid1.ColWidths[ctCol_BLGoodsCode] := 55;  //BLコード
//    HNsGrid1.ColWidths[ctCol_SalesUnitCost] := 95;  //原単価
//    HNsGrid1.ColWidths[ctCol_SalesMoneyDisplay] := 94;  //売上金額
//    HNsGrid1.ColWidths[ctCol_SalesCode] := 90;  //販売区分
//    HNsGrid1.ColWidths[ctCol_CostRate] := 64; //原価率
//    HNsGrid1.ColWidths[ctCol_WarehouseCode] := 64; //倉庫
//    HNsGrid1.ColWidths[ctCol_WarehouseShelfNo] := 64; //棚番
//
//    // 発注情報
//    HNsGrid1.ColWidths[ctCol_BoCode] := 0;
//    HNsGrid1.ColWidths[ctCol_SupplierCdForOrder] := 0;
//    HNsGrid1.ColWidths[ctCol_AcceptAnOrderCntForOrder] := 0;
//    HNsGrid1.ColWidths[ctCol_DeliveredGoodsDivNm] := 0;
//    HNsGrid1.ColWidths[ctCol_FollowDeliGoodsDivNm] := 0;
//
//    //入力切替
//    HNsGrid1.ColWidths[ctCol_DtlNote] := 0;
//    HNsGrid1.ColWidths[ctCol_CmpltSalesRowNo] := 0;
//    HNsGrid1.ColWidths[ctCol_DeliGdsCmpltDueDate] := 0;
//
//    //仕入情報
//    HNsGrid1.ColWidths[ctCol_PartySalesSlipNum] := 0;
//    HNsGrid1.ColWidths[ctCol_StockDate] := 0;
//
//    if (NewWidth > 1024) then
//    begin
//      for i := 0 to HNsGrid1.ColCount - 1 do
//      begin
//         col := HNsGrid1.ColWidths[i];
//         HNsGrid1.ColWidths[i] := longint(col)*longint(NewWidth) div 1024;
//      end;
//    end;


    HNsGrid5.Width := Form4.Width - 6;
end;

procedure TForm4.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  gpxMAHNB01013B_FormPosSerialize(Form4.Top, Form4.Left, Form4.Height, Form4.Width);   // ADD 2010/07/01

  FreeLibraryMAHNB01012B(HDllCALL1);
  FreeLibraryMAHNB01019B(HDllCALL1);
  FreeLibraryMAHNB01013B(HDllCALL1);
end;

procedure TForm4.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
// ADD 2012/02/09 李占川 Redmine#28289 --- >>>>>
const
    mbFour = [mbYes, mbCancel];
// ADD 2012/02/09 李占川 Redmine#28289 --- <<<<
    mbRemote = [mbCancel]; // ADD 2015/12/09 T.Miyamoto リモ伝障害対応 Redmine#47670
var
  Imc: HIMC;
  // ADD 2012/02/09 李占川 Redmine#28289 --- >>>>>
  printThreadOverFlag: Boolean;
  Ret: Integer;
  FMessageDialog: TForm;
  // ADD 2012/02/09 李占川 Redmine#28289 --- <<<<
  chkOnlineKindDiv :Integer; // ADD 2015/12/09 T.Miyamoto リモ伝障害対応 Redmine#47670
begin
  gCanClose := CanClose;  // ADD 2013/07/16 Wakita

  if (b_CloseFlg) then
  begin
      CanClose := False;
      Exit;
  end;

  // ADD 2012/02/09 李占川 Redmine#28289 --- >>>>>
  // 印刷中フラグの取込
  gpxMAHNB01012B_GetPrintThreadOverFlag(printThreadOverFlag);

  //  印刷中場合
  if (not printThreadOverFlag) then
  begin
    Timer5.Enabled := true;

    // --- UPD 2015/12/09 T.Miyamoto リモ伝障害対応 Redmine#47670 ---------->>>>>
    //FMessageDialog := CreateMessageDialog('印刷処理の実行中です。'+ #10 + #10
    //   + '印刷処理の完了後に自動的に終了します。',mtWarning,mbFour);
    gpxMAHNB01013B_GetOnlineKindDiv(chkOnlineKindDiv); // オンライン種別取得
    if (chkOnlineKindDiv <> ctOnlineKindDiv_Scm) then
    begin
      FMessageDialog := CreateMessageDialog('印刷処理の実行中です。' +#10+#10+ '印刷処理の完了後に自動的に終了します。', mtWarning, mbFour);
    end else begin
      FMessageDialog := CreateMessageDialog('回答送信処理完了まで待機しています。' +#10+#10+ '送信処理の完了後に自動的に終了します。', mtWarning, mbRemote);
    end;
    // --- UPD 2015/12/09 T.Miyamoto リモ伝障害対応 Redmine#47670 ----------<<<<<
    FMessageDialog.Caption := '注意 - ＜' + PChar(Caption) + '＞';
    with FMessageDialog do
    try
    // --- UPD 2015/12/09 T.Miyamoto リモ伝障害対応 Redmine#47670 ---------->>>>>
    //TButton(FindComponent('Yes')).Caption := '終了';
    if (chkOnlineKindDiv <> ctOnlineKindDiv_Scm) then
    begin
      TButton(FindComponent('Yes')).Caption := '終了';
    end;
    // --- UPD 2015/12/09 T.Miyamoto リモ伝障害対応 Redmine#47670 ----------<<<<<
    TButton(FindComponent('Cancel')).Caption := 'キャンセル';
    ShowModal;
    case ModalResult of
        mrYes:
        begin
          CanClose := TRUE;
        end;
        mrCancel:
        begin
          Timer5.Enabled := false;
          CanClose := FALSE;
          Exit;
        end;
    end;
    finally
      Free;
    end;
  end;
  // ADD 2012/02/09 李占川 Redmine#28289 --- <<<<

  //IMEのOFF
  // --- DEL 2012/07/03 No.630 ---------->>>>>
  // --- UPD 2010/06/02 ---------->>>>>
//  SalesEmployeeCd.SetFocus;
//  if SalesEmployeeCd.CanFocus then
//  SalesEmployeeCd.SetFocus;
//  // --- UPD 2010/06/02 ----------<<<<<
  // --- DEL 2012/07/03 No.630 ----------<<<<<

  Imc := ImmGetContext(TWinControl(Sender).Handle);     //入力コンテキストのハンドル取得
  try
    ImmSetOpenStatus(Imc,False);                        //IMEのOFF
  finally
    ImmReleaseContext(TWinControl(Sender).Handle,Imc);  //入力コンテキストのハンドル開放
  end;

  //終了メッセージ
//  if ((i_CloseFlg = 0) and b_OpenFlg) then begin
//    CanClose := MessageDlg(Form4.Caption+'を終了しますか？',mtConfirmation,[mbYes,mbNo],0) = mrYes;
//  end;
//  if (Canclose <> True) then Exit;

  Application.ProcessMessages;

  // free dll start
//  FreeLibraryMAHNB01012B(HDllCALL1);
//  FreeLibraryMAHNB01019B(HDllCALL1);
//  FreeLibraryMAHNB01013B(HDllCALL1);
  // free dll end
// --- ADD 2012/11/15 T.Nishi ---------->>>>>
  xCloseProc();
// --- ADD 2012/11/15 T.Nishi ----------<<<<<
end;

procedure TForm4.FormCreate(Sender: TObject);
var
  rcWorkArea: TRect;
  iCnt: Integer;
  HWND: Integer;

  thread1: Thread_ReadInitData;
  thread2: Thread_ReadInitDataSecond;
  thread3: Thread_ReadInitDataThird;

   thread1Bool : Boolean;
   thread2Bool : Boolean;
   thread3Bool : Boolean;
   maxLength   : Integer;

// 2011/01/31 >>>
//  //>>>2010/05/30
//  parameter1 : string;
//  parameter2 : string;
//  //<<<2010/05/30

  param1 : string;
  param2 : string;
  param3 : string;
// 2011/01/31 <<<
  // --- DEL 2013/01/23 T.Nishi ---------->>>>>
  //I: Integer;   // --- ADD 2012/10/29 Wakita
  // --- DEL 2013/01/23 T.Nishi ----------<<<<<
  I: Integer;   // --- ADD 2013/02/01 Wakita
begin
//    xWrite('begin');
    b_OpenFlg := True;
    settingGridFlg := True;
    comBoChangeflag := true;
    moveUpDownCellCheck := True;// ADD 2010/06/02
    normalInputFlg := False;  // ADD 2010/07/01
    rowChangedFlg := False; // ADD 2011/07/20
    strCarMngCode := '';   // ADD 2011/08/04
    discountAllLineflag := False;// ADD 2013/01/24 鄧潘ハン REDMINE#34141

    //画面を中央に表示
    SystemParametersInfo(SPI_GETWORKAREA,0,@rcWorkArea,0);
    Top  := (rcWorkArea.Bottom - Height) div 2;
    Left := (rcWorkArea.Right  - Width ) div 2;

//    xWrite('画面を中央に表示完了');

    loginEnterpriseCode := HGetEnterpriseCode;
    loginSectionCode := HGetLoginEmployeeBelongSectionCode;

//    xWrite('拠点情報完了');

    // 初期化データの取得 start
    if (LoadLibraryMAHNB01019B(HDllCALL1) <> 0) then
    Exit;
    if (LoadLibraryMAHNB01012B(HDllCALL1) <> 0) then
    Exit;
    if (LoadLibraryMAHNB01013B(HDllCALL1) <> 0) then
    Exit;

//    xWrite('Load-B完了');
    thread1Bool := True;
    thread2Bool := True;
    thread3Bool := True;
    thread1 := Thread_ReadInitData.Create;
    thread2 := Thread_ReadInitDataSecond.Create;
    thread3 := Thread_ReadInitDataThird.Create;

    // 項目のAlignmentの初期値設定
    xInitControlAlignment();
    gpxMAHNB01012B_SetStateList();
    gpxMAHNB01013B_GetNoteGuidList(HGetEnterpriseCode);

    AcptAnOdrStatusDisplayComBo.HClear();
    AcptAnOdrStatusDisplayComBo.HAdd(30, '売上');
    // --- DEL 2013/04/18 T.Nishi ---------->>>>>
    //AcptAnOdrStatusDisplayComBo.HAdd(20, '受注'); // ADD //2013/04/11 T.Miyamoto №25
    // --- DEL 2013/04/18 T.Nishi ----------<<<<<
    AcptAnOdrStatusDisplayComBo.HAdd(40, '貸出');
    AcptAnOdrStatusDisplayComBo.HAdd(10, '見積');
    AcptAnOdrStatusDisplayComBo.HAdd(15, '単価見積');

    AcptAnOdrStatusComBo.HClear();
    AcptAnOdrStatusComBo.HAdd(30, '売上');
    // --- DEL 2013/04/18 T.Nishi ---------->>>>>
    //AcptAnOdrStatusComBo.HAdd(20, '受注'); // ADD 2013/04/11 T.Miyamoto №25
    // --- DEL 2013/04/18 T.Nishi ----------<<<<<
    AcptAnOdrStatusComBo.HAdd(40, '貸出');
    AcptAnOdrStatusComBo.HAdd(10, '見積');
    AcptAnOdrStatusComBo.HAdd(15, '単価見積');

    SalesGoodsCdComBo.HClear();
    SalesGoodsCdComBo.HAdd(0, '商品');
    SalesGoodsCdComBo.HAdd(2, '消費税調整');
    SalesGoodsCdComBo.HAdd(3, '残高調整');
    SalesGoodsCdComBo.HAdd(4, '売掛消費税調整');
    SalesGoodsCdComBo.HAdd(5, '売掛残高調整');

    _costDisplay := True;
    i_searchCarMode := ctFullModelSearch;// 型式検索

    gpxMAHNB01013B_GetSalesSlipInputConstructionData(maxLength,5);
    i_RowMaxCount := maxLength;
    HNsGrid1.LogicalRowCount := i_RowMaxCount + 1;

    xSalesDetailRowInitialSetting(i_RowMaxCount);

    //タイトルバー複数画面起動してもタイトルバーに起動数が表示されない。
    iCnt := 1;
    HWND := FindWindow(nil,Pchar(ctAppliName + '['+ IntToStr(iCnt) +']')) ;
    while (HWND <> 0) do begin
      Inc(iCnt);
      HWND := FindWindow(nil,Pchar(ctAppliName + '['+ IntToStr(iCnt) +']')) ;
    end;
    Form4.Caption := ctAppliName + '['+ IntToStr(iCnt) +']';
    while not thread1.abort or not thread2.abort or not thread3.abort do
    begin
      Sleep(100);

      if (thread1.abort and thread1Bool) then
      begin
          thread1Bool := False;
          thread1.Free;
//          xWrite('thread1完了');
      end;
      if (thread2.abort and thread2Bool) then
      begin
          thread2Bool := False;
          thread2.Free;
//          xWrite('thread2完了');
      end;
      if (thread3.abort and thread3Bool) then
      begin
          thread3Bool := False;
          thread3.Free;
//          xWrite('thread3完了');
      end;
    end;
//
//    xWrite('thread完了');

// 2011/01/31 >>>
//  //>>>2010/05/30
//  if ParamCount = 4 then
//  begin
//    // 起動パラメータ設定処理
//    gpxMAHNB01013B_SettingParameter(ParamStr(1)+' '+ParamStr(2), ParamStr(4));
//
//  end else
//  begin
//    gpxMAHNB01013B_SettingParameter(ParamStr(1)+' '+ParamStr(2), '');
//  end;
//  //<<<2010/05/30


  if (ParamCount >= 2) then begin
    param1 := ParamStr(1)+' '+ParamStr(2);
  end;

  if (ParamCount >= 3) then begin
    param2 := ParamStr(3);
  end;
  if (ParamCount >= 4) then begin
    param3 := ParamStr(4);
  end;
  // 起動パラメータ設定処理
  gpxMAHNB01013B_SettingParameter(param1, param2, param3);
// 2011/01/31 <<<

    // --- ADD m.suzuki 2010/06/16 ---------->>>>>
    // オンラインフラグ取得
    bOnlineFlag := gpxMAHNB01013B_GetOnlineFlag();
    // --- ADD m.suzuki 2010/06/16 ----------<<<<<

  // --- DEL 2013/01/23 T.Nishi ---------->>>>>
  //// --- ADD 2012/10/29 Wakita ---------->>>>>
  //for I := 1 to HNsGrid1.RowCount do
  //begin
  //  guideColorsSaveArray[I] := clNone;
  //  guideColorsToSaveArray[I] := clNone;
  //end;
  //// --- ADD 2012/10/29 Wakita ----------<<<<<
  // --- DEL 2013/01/23 T.Nishi ----------<<<<<
  // --- ADD 2013/02/01 Wakita ---------->>>>>
  for I := 1 to HNsGrid1.RowCount do
  begin
    guideColorsSaveArray[I] := clNone;
    guideColorsToSaveArray[I] := clNone;
  end;
  // --- ADD 2013/02/01 Wakita ----------<<<<<

  isSalesSlipSearch := False;  // ADD 2013/02/20 Wakita ①
  eventCancelFlg := False; // ADD 2013/02/25 Wakita

  // --- ADD 2016/01/21 Wakita ---------->>>>>
  //ヒント表示メソッドを Application の OnShowHint イベントに関連付け
  Application.OnShowHint := AppShowHint;
  // --- ADD 2016/01/21 Wakita ----------<<<<<
end;
//*************************************************************************
//  FormShow
//*************************************************************************
procedure TForm4.FormShow(Sender: TObject);
var
  I : Integer;
mytime: TDateTime;
topInt, leftInt, heightInt, widthInt : Integer;
widthTemp : Integer;

 begin
//  xWrite('FormShow---BEGIN');
//  xWrite('マスタデータのチェックBEGIN');

    KeyPreview := True;
    customerCodeExitFlg := True;
    Timer3.Enabled := False;         // --- ADD 2010/08/13
    Timer4.Enabled := False;         // --- ADD 2010/09/15

    i_CloseFlg := 0;

    gpxMAHNB01013B_DoAddLine(1,0,0); // ADD 2011/02/11

    gpxMAHNB01013B_GetInitData();

    gpxMAHNB01013B_InitMstCheck(b_MstCheckFlg);

    //>>>2010/05/30
    gpxMAHNB01013B_GetSobaInfo();
    //<<<2010/05/30

    gpxMAHNB01013B_OptPermitForFuJi(isOptPermitForFuJi);// ADD  黄興貴 K2015/04/29 回答取込パタン追加
    gpxMAHNB01013B_OptPermitForMeiGo(isOptPermitForMeiGo);// ADD  紀飛 K2015/06/18 WebUOE発注回答取込
    gpxMAHNB01013B_OptPermitForEBooks(isOptPermitForEBooks);// ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応

    //水野商工㈱オプションの取得
    gpxMAHNB01013B_OptPermitForMizuno2ndSellPriceCtl(isOptPermitForMizuno2ndSellPriceCtl);  // ADD K2016/12/30 譚洪 水野商工㈱

    if (not b_MstCheckFlg) then
    begin
      Close;
    end;
    gpxMAHNB01019B_GetPosTerminalMg(posTerminalMg);
    gpxMAHNB01019B_GetAcptAnOdrTtlSt(acptAnOdrTtlSt);// -- Add 2012/07/31 30182 R.Tachiya --
    gpxMAHNB01019B_GetSalesTtlSt(salesTtlSt);
    gpxMAHNB01019B_GetAllDefSet(allDefSet);
    gpxMAHNB01019B_GetCompanyInf(companyInf);

    gpxMAHNB01019B_CacheSalesProcMoneyListCall();
    gpxMAHNB01019B_CacheStockProcMoneyListCall();
    gpxMAHNB01019B_CacheRateProtyMngListCall();
    gpxMAHNB01019B_SettingProcMoney();

    // ADD 2010/08/13 ---->>>>
    // 小数点表示区分しないの場合、
    if (salesTtlSt.DwnPLCdSpDivCd = 0) then
    begin
        smallPointFlg := False;
    end
    // 小数点表示区分するの場合、
    else
    begin
        smallPointFlg := True;
    end;
    // ADD 2010/08/13 ----<<<<

//  xWrite('マスタデータのチェックEND');


//  xWrite('初期値補正と納品区分コンボエディタアイテム初期設定処理BEGIN');
  //初期値補正
  //自社情報設定マスタ.部門管理区分 = 0:拠点の場合、部門コード、部門名称、部門ガイドは表示しない
  if (companyInf.SecMngDiv = 0) then
  begin
    pnl_SubSection.Visible := False;
  end;
  //売上全体設定マスタ.発行者表示区分 = しない の場合、発行者の表示しない
  if (salesTtlSt.InpAgentDispDiv = 1) then
  begin
    pnl_SalesInputCode.Visible := False;
  end;


  // 納品区分コンボエディタアイテム初期設定処理
  gpxMAHNB01013B_SetUserGdBdComboEditor(guideCodeArray, guideNameArray);
  DeliveredGoodsDivComBo.Clear();

  for i := 0 to High(guideCodeArray) do
  begin
      DeliveredGoodsDivComBo.HAdd(StrToInt(guideCodeArray[i]), guideNameArray[i])
  end;


//  xWrite('初期値補正と納品区分コンボエディタアイテム初期設定処理END');
//   gpxMAHNB01013B_GetSearchPartsModeProperty(searchPartsModeProperty);
//   i_searchPartsMode := searchPartsModeProperty;
//  xWrite('クリア処理BEGIN');

  // ----- UPD 2010/05/21 ------------>>>>>
  //xClear(False, False, False, False, False);
  //xClear(False, False, False, False, False, False);
  //xClear(False, False, False, False, False, False, False);//ADD 2010/06/02

  // ----- UPD 2010/05/21 ------------>>>>>
  //>>>2010/05/30
  xClear(False, False, False, False, False, False, False, 0);
  //<<<2010/05/30

//  xWrite('クリア処理END');

//  xWrite('画面表示とグリッド設定処理BEGIN');


  // 得意先情報画面格納処理
  gpxMAHNB01013B_GetDisplayCustomerInfo(i_CustomerNameFlg, s_TotalDayDf, s_CollectMoneyDf);

  // 得意先名称
  if (i_CustomerNameFlg = 0) then
  begin
     xEnableControl(CustomerName, False);
  end else begin
     xEnableControl(CustomerName, True);
  end;
  // 締日
  if (s_TotalDayDf = '0') then
  begin
     TotalDay.Caption := '';
  end
  else
  begin
     TotalDay.Caption := s_TotalDayDf;
  end;
  // 集金月日
  if (s_CollectMoneyDf = '0') then
  begin
    CollectMoney.Caption := '';
  end
  else
  begin
    CollectMoney.Caption := s_CollectMoneyDf;
  end;

  xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

  //画面表示処理（明細情報）
  // --- UPD 2010/05/31 ---------->>>>>
  //xSetDisplayDetailInfo();
  xSetDisplayDetailInfo(HNsGrid1.LogicalRow);
  // --- UPD 2010/05/31 ----------<<<<<

  // グリッド設定処理（ユーザー設定より）
  xGridSetting();
  // --- ADD 2010/06/02 ---------->>>>>
  InitialSetFocusTick();
  // --- ADD 2010/06/02 ----------<<<<<

  //画面項目Visible設定
  xSettingVisible();

  //セキュリティ権限による制御開始(ツールバーボタン)

//  xWrite('画面表示とグリッド設定処理END');
//  xWrite('FormShow---END');

 settingGridFlg := False;

 xSetItemsDictionary;

 gpxMAHNB01013B_SetInitData(IsGoodsNoFromXMLExist);     // ADD 2011/08/15

  //>>>2010/05/30
  // SCM情報読込タイマー起動
  Timer_SCMRead.Enabled := true;
  //<<<2010/05/30

  // ADD 2010/07/01 ---->>>>>
  gpxMAHNB01013B_FormPosDeserialize(topInt, leftInt, heightInt, widthInt);

  Form4.Left := leftInt;
  Form4.Top := topInt;
  Form4.Width := widthInt;
  Form4.Height := heightInt;
  // ADD 2010/07/01 ----<<<<<

  // --- ADD 2012/11/07 T.Nishi ---------->>>>>
  //バックグラウンド待機前はTag番号を10に設定（バックグラウンド状態判別の為）
  Form4.Tag := 10;
  // --- ADD 2012/11/07 T.Nishi ----------<<<<<
  xSleepUpToFormReView();// -- Add 2012/08/22 30182 R.Tachiya --
  // --- ADD 2012/11/07 T.Nishi ---------->>>>>
  //バックグラウンド待機後はTag番号を0に設定
  Form4.Tag := 0;
  // --- ADD 2012/11/07 T.Nishi ----------<<<<<

 end;
 // -- Add St 2012/08/22 30182 R.Tachiya --
// *************************************************************************
// 常駐待機処理
// *************************************************************************
procedure TForm4.xSleepUpToFormReView();
const
  TempPath = '\Temp\';
var
  path : string ;
  outTime: Integer;
  sleepTime: Integer;
  maxLoopCount: Integer;
  count: Integer;
  sw: TStreamWriter;
  sr: TStreamReader;
  processId: Integer;
  buffer: String;
begin

  processId := GetCurrentProcessId();
  path := ExtractFilePath( Application.ExeName ) + TempPath + 'MAHNB01001U_' + IntToStr(processId);

  {$REGION '//コントロールファイル確認処理'}

  try
    if FileExists(path) then begin
      //ファイルが見つかれば処理続行
    end else
    begin
      //ファイルが見つからない場合終了する
      exit();
    end;
  except
    //その他エラーは終了
    exit();
  end;

  {$ENDREGION}

  {$REGION '//常駐待機中通知処理'}

  outTime := 60 * 1000;//ms
  sleepTime := 50;//ms
  maxLoopCount := outTime div sleepTime;//回

  count := 0;
  repeat
  begin

    try
     try
      sw := TStreamWriter.Create(
        path,
        FALSE,
        TEncoding.Default);
      sw.WriteLine('InitializeEnd');
      break;
     except
      //何かエラーが発生したらスリープしてリトライ
      Sleep(sleepTime);
     end;
    finally
    if sw <> nil then
        sw.Close;
    end;

    inc(count);

  end;
  until count > maxLoopCount;

  {$ENDREGION}

  {$REGION '//復活表示指示確認処理'}

  while not(buffer = 'ReViewForm') do
  begin

    try
      try
        try
          sr := TStreamReader.Create(
            path,
            TEncoding.Default);
          buffer := sr.ReadLine;
        except on EFOpenError do
          //ファイルオープンエラーの場合終了する
          exit();
        end;
      except
        //その他エラーは何もしない
      end;
    finally
    if sr <> nil then
        sr.Close;
    end;

    if buffer <> 'ReViewForm' then
      Sleep(sleepTime);

    // ループ処理中にもイベントを流す		      		//
    // ログオフ処理が流れるようにするための対応		//
    Application.ProcessMessages();

  end;

  {$ENDREGION}

  {$REGION '//復活表示設定終了通知処理'}

  outTime := 60 * 1000;//ms
  sleepTime := 50;//ms
  maxLoopCount := outTime div sleepTime;//回

  count := 0;
  repeat
  begin

    try
     try
      sw := TStreamWriter.Create(
        path,
        FALSE,
        TEncoding.Default);
      sw.WriteLine('SettingEnd');
      break;
     except
      //何かエラーが発生したらスリープしてリトライ
      Sleep(sleepTime);
     end;
    finally
      if sw <> nil then
        sw.Close;
    end;

    inc(count);

  end;
  until count > maxLoopCount;

  {$ENDREGION}

end;
// -- Add Ed 2012/08/22 30182 R.Tachiya --

// --- ADD 2012/11/15 T.Nishi ---------->>>>>
procedure TForm4.xCloseProc();
const
  TempPath = '\Temp\';
var
  path : string ;
  outTime: Integer;
  sleepTime: Integer;
  maxLoopCount: Integer;
  count: Integer;
  sw: TStreamWriter;
  sr: TStreamReader;
  processId: Integer;
  buffer: String;
begin
  {$REGION '//コントロールファイル確認処理'}

  processId := GetCurrentProcessId();
  path := ExtractFilePath( Application.ExeName ) + TempPath + 'MAHNB01001U_' + IntToStr(processId);

  try
    if FileExists(path) then begin
      //ファイルが見つかれば処理続行
    end else
    begin
      //ファイルが見つからない場合終了する
      exit();
    end;
  except
    //その他エラーは終了
    exit();
  end;

  {$ENDREGION}

  {$REGION '//復活表示設定終了通知処理'}

  outTime := 60 * 1000;//ms
  sleepTime := 50;//ms
  maxLoopCount := outTime div sleepTime;//回

  count := 0;
  repeat
  begin

    try
     try
      sw := TStreamWriter.Create(
        path,
        FALSE,
        TEncoding.Default);
      sw.WriteLine('ProcessEnd');
      break;
     except
      //何かエラーが発生したらスリープしてリトライ
      Sleep(sleepTime);
     end;
    finally
      if sw <> nil then
        sw.Close;
    end;

    inc(count);

  end;
  until count > maxLoopCount;

  {$ENDREGION}
end;
// --- ADD 2012/11/15 T.Nishi ----------<<<<<

// --- ADD 2013/05/23 T.Miyamoto ---------->>>>>
// *************************************************************************
// 最新情報取得時の常駐プロセス再起動
// *************************************************************************
procedure TForm4.xSleepUpToReboot();
const
  TempPath = '\Temp\';
var
  path : string ;
  outTime: Integer;
  sleepTime: Integer;
  maxLoopCount: Integer;
  count: Integer;
  sw: TStreamWriter;
  sr: TStreamReader;
  processId: Integer;
  buffer: String;
  SearchPath :String;
  Rec  :TSearchRec;
  hProcess: THandle;
begin
  processId := GetCurrentProcessId();
  outTime := 60 * 1000;//ms
  sleepTime := 50;//ms
  maxLoopCount := outTime div sleepTime;//回

  //指定ディレクトリのプロセスファイルを列挙
  SearchPath := ExtractFilePath( Application.ExeName ) + TempPath + 'MAHNB01001U_*';
  if FindFirst(SearchPath, faAnyFile, Rec) = 0 then
  try
    repeat

      //フォルダ・カレントディレクトリ・親ディレクトリは対象外
      if not((Rec.Attr and faDirectory > 0)) and
         (Rec.Name <> '.') and (Rec.Name <> '..') then
      begin
        //本プロセス以外
        if (Rec.Name <> 'MAHNB01001U_' + IntToStr(processId)) then
        begin
          path := ExtractFilePath( Application.ExeName ) + TempPath + Rec.Name;
          try
            try
              //設定値読込
              sr := TStreamReader.Create(path, TEncoding.Default);
              buffer := sr.ReadLine;
            except on EFOpenError do
              exit();
            end;
          finally
            if sr <> nil then
              sr.Close;
          end;

          //設定値が「InitializeEnd(初期化終了)」の場合 ※待機中プロセス
          if (buffer = 'InitializeEnd') then
          begin
            try
              //設定値を「Reboot(再起動)」に変更
              sw := TStreamWriter.Create(path, FALSE, TEncoding.Default);
              sw.WriteLine('Reboot');

              //該当プロセスを終了
              processId := StrToIntDef(StringReplace(Rec.Name,'MAHNB01001U_','',[rfReplaceAll]),0);
              hProcess := OpenProcess(PROCESS_TERMINATE, False, processId);
              TerminateProcess(hProcess, 0);
              CloseHandle(hProcess);
            finally
              if sw <> nil then
                sw.Close;
            end;
          end;
        end;
      end;

    until (FindNext(Rec) <> 0);
  finally
    FindClose(Rec);
  end;
end;
// --- ADD 2013/05/23 T.Miyamoto ----------<<<<<

//>>>2010/05/30
procedure TForm4.Timer_SCMReadTimer(Sender: TObject);
var
inputMode, salesRowNo, searchType, rowCount, iRow, isSave, resultNum, saveStatus: Integer;
salesSlip: TSalesSlip;
salesDetailArray: TSalesSlipInputCustomArrayA2;
focusFlag : Boolean;
ret : Boolean;
customerCode : Integer;
carInfo: TCarInfo;
begin

  Timer_SCMRead.Enabled := false;

  // SCMReadタイマー処理
  gpxMAHNB01013B_TimerSCMReadTick(ret, customerCode);

  if ret = true then
  begin
    isScmReadCheck := true;// add 2011/07/23
    if customerCode <> 0 then
    begin
      xClear(false, false, false, false, true, false, false, customerCode);

      //>>>2011/03/04
      // 従業員情報設定
      gpxMAHNB01013B_SettingEmpInfo();

      // フォーカス設定
      ModelDesignationNo.SetFocus;
      //<<<2011/03/04
    end else begin
      //>>> ADD  2012/05/17 SCM障害№162対応
      // データ取得・表示終了まで終了ボタン使用不可
      b_CloseFlg := True;
      //<<< ADD  2012/05/17 SCM障害№162対応

      // 売上情報
      xSetDisplay();

      // 売上金額変更後発生イベント処理
      xSalesPriceChanged();

      // 車両情報画面表示処理
      salesRowNo := xGetActiveRowSalesRowNo();
      searchType := 0;
      xSetDisplayCarInfo(salesRowNo, searchType);
      // ---------------------- ADD START 2011/07/17 daib ----------------->>>>>
      gpxMAHNB01012B_GetCarInfoRow(salesRowNo, 1, carInfo);
      if (carInfo.CategoryNo = 0) and (i_searchPartsMode = 1) and (salesSlip_disp.InquiryNumber <> 0) then
      begin
        xChangeSearchMode(0);
      // 車両情報テーブル行の型式指定番号および類別区分番号セット
        gpxMAHNB01012B_SettingCarInfoRowFromCategoryNoAndDesignationNo(salesRowNo, carInfo.ModelDesignationNo, 0);
      end;
      // ---------------------- ADD END 2011/07/17 daib -----------------<<<<<

      // 車両項目制御
      xSetDisplayDetailInfo(salesRowNo);

      // セルアクティブ時ボタン有効無効コントロール処理
      xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

      // 明細データクリア
      xDeatilClearDisplay();

      gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

      xSetDetailRowFormC(salesDetailArray,-1);

      xSettingGrid();

//>>>2011/03/09
////>>>2011/02/01 追加回答対応
////      xDeleteEmptyRow();
//      if ((salesSlip_disp.SalesSlipCd = salesSlipCdDtl_RetGoods) or
//          ((salesSlip_disp.InquiryNumber <> 0) and (salesSlip_disp.SalesSlipNum <> ctDefaultSalesSlipNum))) then begin
//        xDeleteEmptyRow();
//      end;
////<<<2011/02/01 追加回答対応
      if (salesSlip_disp.SalesSlipCd = salesSlipCdDtl_RetGoods) then begin
        xDeleteEmptyRow();
      end else begin
        if (salesSlip_disp.SalesSlipNum <> ctDefaultSalesSlipNum) then begin
          xSettingSalesDetailRowInputRowCount(salesSlip_disp.DetailRowCountForReadSlip);
        end;
      end;
//<<<2011/03/09

      HNsGrid1.SetFocus;

      // --- DEL 2015/04/14 Wakita ---------->>>>>
      //HNsGrid1.FocusCell(ctCol_SupplierCd, HNsGrid1.LogicalRow * 2 + 1);
      // --- DEL 2015/04/14 Wakita ----------<<<<<
      // --- ADD 2015/04/14 Wakita ---------->>>>>
      if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
      or  (HNsGrid1.ReadOnly[ctCol_SupplierCd, HNsGrid1.LogicalRow * 2 + 1] = True)) then
      begin
        // 返品または読み取り専用
        HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, HNsGrid1.LogicalRow * 2 + 1);
      end
      else
      begin
        HNsGrid1.FocusCell(ctCol_SupplierCd, HNsGrid1.LogicalRow * 2 + 1);
      end;
      // --- ADD 2015/04/14 Wakita ----------<<<<<

      // HNsGrid1.ActiveRowShow := true;

      // 車両情報設定処理
      salesRowNo := xGetActiveRowSalesRowNo();
      xCarInfoFormSetting(salesRowNo);

      xSlipMemoInfoFormSetting(salesRowNo);

      // ガイドボタンツール有効無効設定処理
      xSettingGuideButtonToolEnabled(OldCtrl);
      xSettingVisible();

      //追加情報タブ項目Visible設定
      xSettingAddInfoVisible();

      //伝票備考、伝票備考２、伝票備考３の入力桁数を制御する
      xSetNoteCharCnt();
      xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);
      OldCtrl := Form4.ActiveControl;

      //>>>2010/07/06
      SetDisplayHeaderFooterInfo(salesSlip_disp);
      //<<<2010/07/06

      //>>> ADD  2012/05/17 SCM障害№162対応
      // 終了ボタン使用可能
      b_CloseFlg := False;
      //<<< ADD  2012/05/17 SCM障害№162対応

    end;

    //>>>2011/10/11
    searchCarDiv := false;
    gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv);
    //<<<2011/10/11
  // end;//del 2011/07/23
  // ---------------------- ADD START 2011/07/23  ----------------->>>>>
  end else
  begin
    isScmReadCheck := false;
 end;
  // ---------------------- ADD END   2011/07/23  -----------------<<<<<
  // フッタタブ位置セット
  uTabControl_Footer.ActivePage := ts1;

end;
//<<<2010/05/30


//>>>2010/05/30

 // *************************************************************************
// クリアの時のイベント
// *************************************************************************
// ----- UPD 2010/05/21 ------------>>>>>
//procedure TForm4.xClear(isConfirm : Boolean; keepAcptAnOdrStatus : Boolean; keepDate : Boolean;
//keepFooterInfo : Boolean; keepCustomer : Boolean);
//procedure TForm4.xClear(isConfirm : Boolean; keepAcptAnOdrStatus : Boolean; keepDate : Boolean;
//keepFooterInfo : Boolean; keepCustomer : Boolean; keepSalesDate : Boolean);
//procedure TForm4.xClear(isConfirm : Boolean; keepAcptAnOdrStatus : Boolean; keepDate : Boolean;
//keepFooterInfo : Boolean; keepCustomer : Boolean; keepSalesDate : Boolean; keepDetailRowCount :Boolean);
// ----- UPD 2010/05/21 ------------>>>>>
procedure TForm4.xClear(isConfirm : Boolean; keepAcptAnOdrStatus : Boolean; keepDate : Boolean;
keepFooterInfo : Boolean; keepCustomer : Boolean; keepSalesDate : Boolean; keepDetailRowCount :Boolean; customerCode : Integer);
//<<<2010/05/30
var
  DialogResultFlg : Boolean;
  carInfo: TCarInfo;
begin
  // ----- UPD 2010/05/21 ------------>>>>>
  //DialogResultFlg := gpxMAHNB01013B_Clear(isConfirm, keepAcptAnOdrStatus, keepDate, keepFooterInfo, keepCustomer);
  //DialogResultFlg := gpxMAHNB01013B_Clear(isConfirm, keepAcptAnOdrStatus, keepDate, keepFooterInfo, keepCustomer, keepSalesDate);
  //DialogResultFlg := gpxMAHNB01013B_Clear(isConfirm, keepAcptAnOdrStatus, keepDate, keepFooterInfo, keepCustomer, keepSalesDate,keepDetailRowCount);//2010/06/02
  // ----- UPD 2010/05/21 ------------>>>>>

//DialogResultFlg := gpxMAHNB01013B_Clear(isConfirm, keepAcptAnOdrStatus, keepDate, keepFooterInfo, keepCustomer, keepSalesDate,keepDetailRowCount, customerCode);
bClearResultFlg := gpxMAHNB01013B_Clear(isConfirm, keepAcptAnOdrStatus, keepDate, keepFooterInfo, keepCustomer, keepSalesDate,keepDetailRowCount, customerCode);
//<<<2010/05/30
// if (DialogResultFlg) then
 if (bClearResultFlg) then
  begin

    // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
    //値引モード
    if(discountAllLineflag) then
    begin
        //「一括値引」→「売上」
        xNotDiscountInitalSet();
    end;
    // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
    gpxMAHNB01013B_GetItemtSalesSlipCd(i_itemtSalesSlipCdDisp , i_itemtSalesSlipCdFlg);

    // --- DEL m.suzuki 2010/10/28 ---------->>>>>
    //SalesSlipDisplayComBo.Items.Clear();
    //if (i_itemtSalesSlipCdDisp = 1 ) then
    //begin
    //SalesSlipDisplayComBo.HAdd(10, '掛売上');
    //end else if (i_itemtSalesSlipCdDisp = 2 ) then
    //begin
    //SalesSlipDisplayComBo.HAdd(30, '現金売上');
    //end else if ((i_itemtSalesSlipCdDisp = 3) or (i_itemtSalesSlipCdDisp = 5)) then
    //begin
    //SalesSlipDisplayComBo.HAdd(10, '掛売上');
    //SalesSlipDisplayComBo.HAdd(20, '掛返品');
    //end else if ((i_itemtSalesSlipCdDisp = 4) or (i_itemtSalesSlipCdDisp = 6)) then
    //begin
    //SalesSlipDisplayComBo.HAdd(30, '現金売上');
    //SalesSlipDisplayComBo.HAdd(40, '現金返品');
    //end;
    //
    //if (i_itemtSalesSlipCdFlg = 1 ) then
    //begin
    //SalesSlipDisplayComBo.ItemIndex := 0;
    //end;
    // --- DEL m.suzuki 2010/10/28 ----------<<<<<

    // --- ADD m.suzuki 2010/10/28 ---------->>>>>
    // クリア後の売上情報を取得
    gpxMAHNB01012B_GetSalesSlip(salesSlip_disp);
    // 伝票区分の再構築
    xSetItemtSalesSlipCd(salesSlip_disp, salesSlip_disp.AcptAnOdrStatusDisplay, True);
    // --- ADD m.suzuki 2010/10/28 ----------<<<<<

    //車輌情報クリア
    xClearDisplayCarInfo();
    xClearAddCarInfo();


    // 車両情報データ→画面
    // --- UPD 2010/06/02 ------>>>>>
//    xSetDisplayCarInfo(1, 0);
    gpxMAHNB01012B_GetCarInfoRow(1, 0, carInfo);

    xSetDisplayCarInfo2(carInfo, 0);
    // --- UPD 2010/06/02 ------<<<<<

    btnAnnotation.Enabled := True;

  //明細グリッドクリア
    if (not settingGridFlg) then
    begin
      xDeatilClearDisplay();
      xInitialRow();
    end;

    gpxMAHNB01013B_GetSearchPartsModeProperty(searchPartsModeProperty);
    i_searchPartsMode := searchPartsModeProperty;

    xChangeSearchModeReflect();

    SlipMemo1.DataText := '';
    SlipMemo1.Enabled := False;
    SlipMemo1.Color := clBtnFace;
    SlipMemo2.DataText := '';
    SlipMemo2.Enabled := False;
    SlipMemo2.Color := clBtnFace;
    SlipMemo3.DataText := '';
    SlipMemo3.Enabled := False;
    SlipMemo3.Color := clBtnFace;
    InsideMemo1.DataText := '';
    InsideMemo1.Enabled := False;
    InsideMemo1.Color := clBtnFace;
    InsideMemo2.DataText := '';
    InsideMemo2.Enabled := False;
    InsideMemo2.Color := clBtnFace;
    InsideMemo3.DataText := '';
    InsideMemo3.Enabled := False;
    InsideMemo3.Color := clBtnFace;

    //車輌情報クリア
    // --- DEL 2010/06/02 ------>>>>>
//    xClearDisplayCarInfo();
//    xClearAddCarInfo();
    // --- DEL 2010/06/02 ------<<<<<

    xSalesPriceChanged();

    if (optScm = 0) then
    begin
//      pnl_PartySaleSlipNum.Visible := True; // 2010/07/15
      panel_InquiryNumber.Visible := False;
    end
    else
    begin
//>>>2010/07/15
//      pnl_PartySaleSlipNum.Visible := False;
//      panel_InquiryNumber.Visible := True;
      if (salesSlip_disp.OnlineKindDiv = 10) then begin
        panel_InquiryNumber.Visible := true;
        btnscm.Enabled := true;
//>>>2011/05/25
        pnl47.Visible := false;
        TotalDay.Visible := false;
        Label4.Visible := false;
        CollectMoney.Visible := false;
        Label6.Visible := false;
        HEdit_PartySalesSlipNum.Visible := true;
        Label_PartySalesSLipNum.Visible := true;
//<<<2011/05/25
      // ADD 2013/02/12 SCM障害№10280対応------------------------>>>>>
        pnl_PartySaleSlipNum.Visible := false;
      // ADD 2013/02/12 SCM障害№10280対応------------------------<<<<<
      end else begin
        panel_InquiryNumber.Visible := false;
        btnscm.Enabled := false;
//>>>2011/05/25
        pnl47.Visible := true;
        TotalDay.Visible := true;
        Label4.Visible := true;
        CollectMoney.Visible := true;
        Label6.Visible := true;
        HEdit_PartySalesSlipNum.Visible := false;
        Label_PartySalesSLipNum.Visible := false;
//<<<2011/05/25
      // ADD 2013/02/12 SCM障害№10280対応------------------------>>>>>
      // UPD 2013/02/25 2013/03/13配信 システムテスト障害対応----------------->>>>>
      //  pnl_PartySaleSlipNum.Visible := true;
        case salesSlip_disp.CustOrderNoDispDiv of
        0: //しない
          begin
            pnl_PartySaleSlipNum.Visible := false;
          end;
        1: //する
          begin
            pnl_PartySaleSlipNum.Visible := true;
          end;
        end;
      // UPD 2013/02/25 2013/03/13配信 システムテスト障害対応-----------------<<<<<
      // ADD 2013/02/12 SCM障害№10280対応------------------------<<<<<
      end;
//<<<2010/07/15
    end;

//>>>2010/07/15
      case salesSlip_disp.CustOrderNoDispDiv of
      0: //しない
        begin
          pnl_PartySaleSlipNum.Visible := false;
        end;
      1: //する
        begin
          pnl_PartySaleSlipNum.Visible := true;
        end;
    end;
//<<<2010/07/15

    //>>>2010/07/06
    HEdit_InquiryNumber.DataText := '';
    //<<<2010/07/06

    // セルアクティブ時ボタン有効無効コントロール処理
    xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

    xSettingAddInfoVisible();
  end;
end;

//----- ADD　2018/09/04 譚洪　履歴自動表示の対応------->>>>>
// *************************************************************************
// 履歴検索のイベント
// *************************************************************************
procedure TForm4.HisSearchButtonClick(Sender: TObject);
var
salesRowNo, status  : Integer;
begin
  begin
     if (ActiveControl = HNsGrid1) or (HNsGrid1.Focused = True)  then
     begin
         salesRowNo := xGetActiveRowSalesRowNo();
     end
     else
     begin
         salesRowNo := 1;
     end;
  end;

  // 履歴検索のイベント処理
  status :=gpxMAHNB01013B_HisSearch(salesRowNo);
end;
//----- ADD　2018/09/04 譚洪　履歴自動表示の対応-------<<<<<

//----- ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応------->>>>>
// *************************************************************************
// 税率入力のイベント
// *************************************************************************
procedure TForm4.GetTaxRateButtonClick(Sender: TObject);
var
status  : Integer;
taxRateDialogResult,i : Integer;
begin
  // 税率入力のイベント処理
  gpxMAHNB01013B_GetTaxRate();

  gpxMAHNB01013B_GetTaxRateDialogResult(taxRateDialogResult);
    if taxRateDialogResult = 1 then
    begin
      gpxMAHNB01019B_GetPosTerminalMg(posTerminalMg);
      gpxMAHNB01019B_GetAcptAnOdrTtlSt(acptAnOdrTtlSt);
      gpxMAHNB01019B_GetSalesTtlSt(salesTtlSt);
      gpxMAHNB01019B_GetAllDefSet(allDefSet);
      gpxMAHNB01019B_GetCompanyInf(companyInf);

      gpxMAHNB01019B_CacheSalesProcMoneyListCall();
      gpxMAHNB01019B_CacheStockProcMoneyListCall();
      gpxMAHNB01019B_CacheRateProtyMngListCall();
      gpxMAHNB01019B_SettingProcMoney();

      // 小数点表示区分しないの場合、
      if (salesTtlSt.DwnPLCdSpDivCd = 0) then
      begin
          smallPointFlg := False;
      end
      // 小数点表示区分するの場合、
      else
      begin
          smallPointFlg := True;
      end;

      //初期値補正
      //自社情報設定マスタ.部門管理区分 = 0:拠点の場合、部門コード、部門名称、部門ガイドは表示しない
      if (companyInf.SecMngDiv = 0) then
      begin
        pnl_SubSection.Visible := False;
      end else
      begin
        pnl_SubSection.Visible := True;
      end;

      // 納品区分コンボエディタアイテム初期設定処理
      gpxMAHNB01013B_SetUserGdBdComboEditor(guideCodeArray, guideNameArray);
      DeliveredGoodsDivComBo.Clear();

      for i := 0 to High(guideCodeArray) do
      begin
          DeliveredGoodsDivComBo.HAdd(StrToInt(guideCodeArray[i]), guideNameArray[i])
      end;

      if (High(guideCodeArray) > 0) then
      begin
         DeliveredGoodsDivComBo.SelCode := 0;
      end;

      // Visible設定
      xSettingVisible();
      xClear(False, False, False, False, False, False, False, 0);
      // 得意先情報画面格納処理
      gpxMAHNB01013B_GetDisplayCustomerInfo(i_CustomerNameFlg, s_TotalDayDf, s_CollectMoneyDf);

      // 得意先名称
      if (i_CustomerNameFlg = 0) then
      begin
         xEnableControl(CustomerName, False);
      end else begin
         xEnableControl(CustomerName, True);
      end;
      // 締日
      if (s_TotalDayDf = '0') then
      begin
         TotalDay.Caption := '';
      end
      else
      begin
         TotalDay.Caption := s_TotalDayDf;
      end;
      // 集金月日
      if (s_CollectMoneyDf = '0') then
      begin
        CollectMoney.Caption := '';
      end
      else
      begin
        CollectMoney.Caption := s_CollectMoneyDf;
      end;

      xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

      //画面表示処理（明細情報）
      xSetDisplayDetailInfo(HNsGrid1.LogicalRow);

      // グリッド設定処理（ユーザー設定より）
      xGridSetting();
      InitialSetFocusTick();


      // 画面項目名称設定処理
      xGetDisplayName();

      settingGridFlg := False;

      xSetItemsDictionary;

      // SCMオプション(Opt_SCM)：OFF ツールバー 問合せ一覧→非表示
      // ツールバー 回答処理→非表示  明細部 SCMボタン→非表示
      if (optScm = 0) then
      begin
         ReferenceListButton.Visible := False;
         toolReferenceListButton.Visible := False;
         btnSCM.Visible := False;
         btnCopyToRC.Left := 904;
      end
      else
      begin
        if (optRCLink = 0) then begin
          btnSCM.Visible := false;
        end else begin
          btnSCM.Visible := true;
        end;

      end;
      // 買掛オプション(Opt_StockingPayment)：OFF  明細部 仕入先ボタン→非表示
      if (optStockingPayment = 0) then
      begin
         inputStockFlg := False;
         btnInputStockInfo.Visible := False;
         btnInputStockInfo.Left := 50;
         btnInputChange.Left := 131;
      end;
      // UOEオプション(Opt_UOE)：OFF  明細部 発注ボタン→非表示
      if (optUoe = 0) then
      begin
         inputOrderFlg := False;
         btnInputOrderInfo.Visible := False;
         btnInputChange.Left := 128;
         btnInputStockInfo.Left := 208;
      end;
      // RC連動オプション(Opt_RCLink)：OFF   明細部 RCへコピー→非表示
      if (optRCLink = 0) then
      begin
         btnCopyToRC.Visible := False;
      end;
      // QRコード携帯メールオプション(Opt_QRMail)：OFF  ツールバー メール→非表示
      // フッタ部　QRコード作成→非表示
      if (optQRMail = 0) then
      begin
         MailButton.Visible := False;
         toolMailButton.Visible := False;
         checkBox_MakeQR.Visible := False;
      end;
      // 常駐プロセス再起動
      xSleepUpToReboot();
    end;

end;
//----- ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応-------<<<<<

// *************************************************************************
// FocusInの時のイベント
// *************************************************************************
procedure TForm4.HNsGrid1CanEditCell(Sender: TObject; ARow, ACol: Integer;
  var CanEdit: Boolean);
begin

 if (ARow > 1) then
 begin
    CanEdit := true;
 end;
 // --- ADD 2013/07/16 Wakita ---------->>>>>
 if (gCanClose = False) then
 begin
    // セルアクティブ時ボタン有効無効コントロール処理
    xActiveCellButtonEnabledControl(xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col),HNsGrid1.LogicalRow);
 end;
 // --- ADD 2013/07/16 Wakita ----------<<<<<

end;

// *************************************************************************
// FocusInの時のイベント
// *************************************************************************
procedure TForm4.HNsGrid1CellChanging(Sender: TObject; OldRow, OldCol, NewRow,
  NewCol: Integer; var Allow: Boolean);
var
  OldRowLogic, NewRowLogic: Integer;
  NewColChange: Integer;
  status : Integer;
  diffInt, diffIntTwo, diffIntThree : LongInt;      // ADD 2010/09/14
  value : string;
  valid : Boolean;
  salesDetailArray: TSalesSlipInputCustomArrayA2;
  salesRowNo, iRow : Integer;         // ADD 2010/09/13
  //flag : Boolean;  // ADD 2011/12/01 YANGMJ REDMINE#8344 // DEL 2012/01/18 YANGMJ ソースマージ
  //diffIntNine : LongInt;      // ADD 2011/12/01 YANGMJ REDMINE#8344 // DEL 2012/01/18 YANGMJ ソースマージ
  // --- DEL 2012/05/21 ---------->>>>>
  //focusPositionAfterBLCodeSearch : Integer;   // ADD 2012/04/11 No.594
  // --- DEL 2012/05/21 ----------<<<<<
begin
  //status := 0; // ADD 2011/12/01 YANGMJ REDMINE#8344// DEL 2012/01/18 YANGMJ ソースマージ
//>>>2011/01/18
  if (HNsGrid1.Focused) then begin
    grid1_focusFlg := false;
  end;
//<<<2011/01/18

  // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- >>>>>
  if isOptPermitForKoei then
  begin
    salesUnPrcCalcFlg := False;
  end;
  // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- <<<<<



  // ADD 2010/10/08 -- >>>
  if (grid1_focusFlg) then
  begin
    grid1_focusFlg := False;

    if (HNsGrid1.ReadOnly[NewCol, NewRow] = True) then
    begin
//>>>2010/12/02
//       if (prevCtrlBak <> nil) then
       if (prevCtrlBak <> nil) and (prevCtrlBak.name <> '') then
//<<<2010/12/02
       begin
         prevCtrlBak.SetFocus;
       end;
       Allow := False;
    end;
    xAllSecStockInfoProc(NewRow div 2,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼
    Exit;
  end;
  // ADD 2010/10/08 -- <<<

  // ADD 2010/09/15 -- >>>>
  if (f3_enableFlg) then
   begin
     f3_enableFlg := False;
     Exit;
   end;
   // ADD 2010/09/15 -- <<<<
  detail_oldRow := OldRow;
  detail_oldCol := OldCol;
  NewColChange :=  NewRow;
  value := HNsGrid1.CurrentCell;

  iRow := OldRow div 2 - 1;            // ADD 2010/09/13
  salesRowNo := RCHNB01003UADM.SalesRowNo[iRow];  // ADD 2010/09/13

  OldRowLogic:= (OldRow div 2) -1;
  NewRowLogic := (NewColChange div 2) -1;

  // --- ADD 2014/09/01 Wakita ---------->>>>>
  // 品番検索
  if (i_searchPartsMode = ctGoodsNoSearch) then
  begin
    // 「№」列にフォーカスがある場合
    if (HNsGrid1.Col = 0) then
    begin
      // 右クリック＋エンターキーで有効明細が存在する場合
      if (OldRow <> NewRow) then
      begin
        // 移動先を元に戻す
        NewRow := OldRow;
        NewColChange :=  NewRow;
        NewRowLogic := (NewColChange div 2) -1;
      end;
      HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, (OldRow div 2));
    end;
  end;
  // --- ADD 2014/09/01 Wakita ----------<<<<<

  dateTimeTwo := Now();
  dateTimeFouth := Now();
  diffInt := MinuteDiff(dateTimeOne, dateTimeTwo);
  diffIntTwo := MinuteDiff(dateTimeThree, dateTimeFouth);
//  ShowMessage(IntToStr(diffInt));

  //if (diffInt < 0.1) then     // DEL 2010/09/14
  if (diffInt < 100) then       // ADD 2010/09/14
  begin
     Allow := False;
     HNsGrid1.FocusCell(9, (OldRow div 2) * 2 + 1);
//     checkTwiceFlg := False;
//     checkFlg := False;
     Exit;
  end;

  //if (diffIntTwo < 0.1) then     // DEL 2010/09/14
  if (diffIntTwo < 100) then       // ADD 2010/09/14
  begin
     Allow := False;
     //HNsGrid1.FocusCell(OldCol, (OldRow div 2) * 2 + 1);
     //HNsGrid1.FocusCell(OldCol, OldRow);        // DEL 2010/09/13
     //HNsGrid1.FocusCell(ctCol_SalesUnitCost, (OldRow div 2) * 2);      // ADD 2010/09/13   // DEL 2010/09/14
     HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, (OldRow div 2) * 2 + 1);    // ADD 2010/09/14
     Exit;
  end;

//----- DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
//  //-----ADD 2011/12/01 YANGMJ REDMINE#8344 ----->>>>>
//  dateTimeEigth := Now();
//  diffIntNine := MinuteDiff(dateTimeNine, dateTimeEigth);
//
//  if (diffIntNine < 100) then
//  begin
//     Allow := False;
//     HNsGrid1.FocusCell(ctCol_SalesCode, (OldRow div 2) * 2);    // ADD 2010/09/14
//     Exit;
//  end;
//  //-----ADD 2011/12/01 YANGMJ REDMINE#8344 -----<<<<<
//----- DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
  // ADD 2010/11/25 --- >>>>
  dateTimeEigth := Now();
  diffIntThree := MinuteDiff(dateTimeSeventh, dateTimeEigth);

  if (diffIntThree < 100) then
  begin
     Allow := False;
     Exit;
  end;
  // ADD 2010/11/25 --- <<<<
    if (not KeyPreview) then
  begin
//      if (bCheckTypeOne) then
//      begin
//        bCheckTypeOne := False;
//        KeyPreview := True;
//      end;
    Exit;
  end;

// DEL 2010/07/20 ---->>>>
//  //商品属性(純正優良)
//   if ((not GetKeyState(VK_RETURN) and $8000 = $8000) and (not GetKeyState(VK_UP) and $8000 = $8000) and
//   (not GetKeyState(VK_DOWN) and $8000 = $8000) and (not GetKeyState(VK_LEFT) and $8000 = $8000)
//   and (not GetKeyState(VK_RIGHT) and $8000 = $8000) and (not GetKeyState(VK_TAB) and $8000 = $8000)) then
//  begin
////    if ((OldCol = ctCol_GoodsKindCode) and ((OldRow mod 2) = 1)) then
////     begin
//        xHNsGrid1CellValidate_Mouse(Sender, OldCol, HNsGrid1.Row, value, valid);// ADD 2010/07/20
//        if (checkCodeFlg) then
//        begin
//          dateTimeThree := Now();
//          KeyPreview := False;
//          HNsGrid1.Cells[OldCol, OldRow] := value;  // ADD 2010/07/20
//          Allow := False;
//          HNsGrid1.GotoCell(OldCol, OldRow);
//          Allow := False;
//          HNsGrid1.FocusCell(OldCol, OldRow);
////          goodsKindCodeFlg := False;
//          Exit;
//        end;
////     end;
//  end;
// DEL 2010/07/20 ----<<<<

//  if ((not GetKeyState(VK_RETURN) and $8000 = $8000) and (not GetKeyState(VK_UP) and $8000 = $8000) and
//     (not GetKeyState(VK_DOWN) and $8000 = $8000) and (not GetKeyState(VK_LEFT) and $8000 = $8000)
//     and (not GetKeyState(VK_RIGHT) and $8000 = $8000) and checkFlg) then
//  begin
////    if ((OldRow = oldRowFlg) and (OldCol = oldColFlg) and (NewRow = newRowFlg) and (NewCol = newColFlg)) then
////      begin
//        checkFlg := False;
//        checkTwiceFlg := False;
//
//  end;
//
//  if (checkTwiceFlg) then
//  begin
//    Allow := False;
//    HNsGrid1.FocusCell(9, (OldRow div 2) * 2 + 1);
//    checkTwiceFlg := False;
//    checkFlg := False;
//    Exit;
//  end;
//
//  if ((not GetKeyState(VK_RETURN) and $8000 = $8000) and (not GetKeyState(VK_UP) and $8000 = $8000) and
//     (not GetKeyState(VK_DOWN) and $8000 = $8000) and (not GetKeyState(VK_LEFT) and $8000 = $8000)
//     and (not GetKeyState(VK_RIGHT) and $8000 = $8000) and checkFlg) then
//    begin
//      if ((OldRow = oldRowFlg) and (OldCol = oldColFlg) and (NewRow <> newRowFlg)) then
//      begin
//        checkTwiceFlg := True;
//      end
//      else
//      begin
//        Allow := False;
//        HNsGrid1.FocusCell(9, (OldRow div 2) * 2 + 1);
//        checkFlg := False;
//      end;
//      Exit;
//    end;
//
//      oldRowFlg := OldRow;
//      oldColFlg := OldCol;
//      newRowFlg := NewRow;
//      newColFlg := NewCol;


  // DEL 2010/07/12 --->>>>
//  if (GetKeyState(VK_RETURN) and $8000 = $8000) then
//  begin
//      if (not KeyPreview) then
//      begin
//       Exit;
//      end;
//  end
//  else
//  begin
//     if (checkFlg) then
//     begin
//       checkFlg := False;
//       Exit;
//     end;
//
//     if (KeyPreview) then
//     begin
//       checkFlg := True;
//     end;

//     if ((oldRowFlg = OldRow) and (oldColFlg >= OldCol)) then
//     begin
//      Exit;
//     end
//     else
//     begin
//      oldRowFlg := OldRow;
//      oldColFlg := OldCol;
//      KeyPreview := True;
//     end;
//  end;

//  if (not checkFlg) then
//  begin
//     checkFlg := True;
//     Exit;
//  end;
 // DEL 2010/07/12 ---- <<<<

  // ADD 2010/09/10  --- >>>>
  dateTimeSixth := Now();
  diffHitInt := MinuteDiff(dateTimeFivth, dateTimeSixth);
  //if (diffHitInt < 0.1) then      // DEL 2010/09/14
  if (diffHitInt < 100) then        // ADD 2010/09/14
  begin
     gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

      // --- DEL 2012/05/21 ---------->>>>>
//      // --- UPD 2012/04/11 No.594 ---------->>>>>
//      //xSetShipmentFormC(salesDetailArray,-1);
//      gpxMAHNB01013B_GetSalesSlipInputConstructionData(focusPositionAfterBLCodeSearch, 9);
//      //新規伝票で且つ
//      //伝票種別「売上」、伝票区分「売上」又は伝票種別「貸出」、伝票区分「売上」で且つ
//      //売上全体設定「受注数入力：する」且つユーザ設定「商品検索後のカーソル位置：受注数」の場合
//      if  ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))
//      and (((AcptAnOdrStatusDisplayComBo.SelCode = 30) and (SalesSlipDisplayComBo.SelCode = 10))
//      or  ((AcptAnOdrStatusDisplayComBo.SelCode = 40) and (SalesSlipDisplayComBo.SelCode = 10)))
//      and (salesTtlSt.AcpOdrInputDiv = 1)
//      and (focusPositionAfterBLCodeSearch = 1) then
//      begin
//        xSetAcceptAnOrderFormC(salesDetailArray,-1);
//      end
//      else
//      begin
//        xSetShipmentFormC(salesDetailArray,-1);
//      end
//      // --- UPD 2012/04/11 No.594 ----------<<<<<
      // --- DEL 2012/05/21 ----------<<<<<
      // --- ADD 2012/05/21 ---------->>>>>
      xSetShipmentFormC(salesDetailArray,-1);
      // --- ADD 2012/05/21 ----------<<<<<

  end;
  // ADD 2010/09/10  ---- <<<<

  // UPD 2011/08/23  --- >>>>
  // ADD 2010/09/15  --- >>>>
  if ((GetKeyState(VK_DOWN) and $8000 = $8000)) then
  begin
    if ((gpxMAHNB01013B_GridJoinCheck(0, OldRowLogic, -1, 9) = 1)
         and (gpxMAHNB01013B_GridJoinCheck(0, NewRowLogic, -1, 9) = 0)
         and (HNsGrid1.Cells[HNsGrid1.Col,HNsGrid1.Row] <> '')
         and (diffHitInt < 100)) then
    begin
//       Timer4.Enabled := True;
//       MessageDlgPos('', mtWarning, mbOKCancel, 0, 3000, 3000);

       if (CustomerClaimConfirmationBtn.Enabled = True) then // ADD 2012/07/04
       CustomerClaimConfirmationBtn.SetFocus;
       HNsGrid1.SetFocus;
       //Exit;     // DEL 2010/09/20
    end;
  end;
  // UPD 2011/08/23  --- <<<<


  // ADD 2010/09/15  --- >>>>

  // BLコード
  if (HNsGrid1.Col = ctCol_BLGoodsCode)
  and ((HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
  begin
     //if ((action_Key <> VK_UP) and (action_Key <> VK_LEFT) and (HNsGrid1.Cells[HNsGrid1.Col,HNsGrid1.Row] = '')) then
//     begin
//     end

  end;

  //品名
  if (OldCol = ctCol_GoodsName)
  and ((OldRow > 1) and (OldRow mod 2 = 0)) then
  begin
     if (action_Key = VK_DOWN) then
     begin
       NewColChange := OldRow + 1;
       // --- ADD 2013/04/17 Wakita ---------->>>>>
       if HNsGrid1.ReadOnly[ctCol_GoodsName, NewColChange] = True then
          NewColChange := NewColChange + 1;
       // --- ADD 2013/04/17 Wakita ----------<<<<<
     end;

    //  最終行の最終項目
    if ((gridReturnFlg = False) and (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1)) then
    begin
      //VK_RETURN
      if (GetKeyState(VK_RETURN) and $8000 = $8000) then
      begin
        if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 1] = ctEDITSTATUS_Annotation) then
        begin
           NewCol:= 2;
           NewRow := HNsGrid1.RowCount - 2;
        end
        else
        begin
           NewCol:= 1;
        end;

       xSetFootControl();
      end;
    end;
  end;

    //売上金額
  if (OldCol = ctCol_SalesMoneyDisplay)
  and ((OldRow > 1) and (OldRow mod 2 = 1)) then
  begin
    //  最終行の最終項目
    if ((gridReturnFlg = False) and (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1)) then
    begin
      //VK_RETURN
      if (GetKeyState(VK_RETURN) and $8000 = $8000) then
      begin
        if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 1] = ctEDITSTATUS_RowDiscount) then
        begin
           NewCol:= 2;
           NewRow := HNsGrid1.RowCount - 2;
        end
        else
        begin
           NewCol:= 1;
        end;

        if (xSetFootControl() = False) then
        begin
          NewCol := ctCol_SalesMoneyDisplay;
        end;
      end;
    end;
  end;

  // --- ADD 2010/06/02 ---------->>>>>
  //仕入伝票番号
  if (OldCol = ctCol_PartySalesSlipNum)
  and ((OldRow > 1) and (OldRow mod 2 = 1)) then
  begin
    //  最終行の最終項目
    if ((gridReturnFlg = False) and (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1)) then
    begin
      //VK_RETURN
      if (GetKeyState(VK_RETURN) and $8000 = $8000) then
      begin
        if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 1] = ctEDITSTATUS_RowDiscount) then
        begin
           NewCol:= 2;
           NewRow := HNsGrid1.RowCount - 2;
        end
        else
        begin
           NewCol:= 1;
        end;

       xSetFootControl();
      end;
    end;
  end;

  //  最終行の最終項目
  if ((gridReturnFlg = False) and (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1)) then
  begin
    //VK_RETURN
    if (GetKeyState(VK_RETURN) and $8000 = $8000) then
    begin
      xSetFootControl();
      Exit;
    end;
  end;
  // --- ADD 2010/06/02 ----------<<<<<

    //if ((HNsGrid1.ReadOnly[NewCol, NewRow] = True) and (HNsGrid1.ColorsTo[NewCol, NewRow] = $DEDFDE)) then

    // UPD 2010/09/14  -- >>>
  if (not f3_enableFlg) then
  begin
    if (HNsGrid1.ReadOnly[NewCol, NewRow] = True) then
    begin
       Allow := False;
       Exit;
    end
    else
    begin
      Allow := True;
    end;
  end
  else
  begin
    Allow := True;
  end;
  // UPD 2010/09/14  --- <<<<

  OldRowLogic:= (OldRow div 2) -1;
  NewRowLogic := (NewColChange div 2) -1;

//>>>2011/01/13
////>>>2010/12/16
//  if (((OldRowLogic + 1) = (NewRow div 2)) and
//      (((OldCol = ctCol_SalesRate) and ((OldRow mod 2) = 1)) or
//       ((OldCol = ctCol_CostRate) and ((OldRow mod 2) = 0)) or
//       ((OldCol = ctCol_ListPriceDisplay) and ((OldRow mod 2) = 1)) or
//       ((OldCol = ctCol_SalesUnitCost) and ((OldRow mod 2) = 0)) or
//       ((OldCol = ctCol_SalesUnPrcDisplay) and ((OldRow mod 2) = 1)) or
//       ((OldCol = ctCol_SalesMoneyDisplay) and ((OldRow mod 2) = 1)) or
//       ((OldCol = ctCol_ShipmentCntDisplay) and ((OldRow mod 2) = 1)) or
//       ((OldCol = ctCol_AcceptAnOrderCntDisplay) and ((OldRow mod 2) = 0)))) then
//  begin
//    xPriceCheckProc(OldCol, OldRow, iRow, salesRowNo, value);      // ADD 2010/09/14
//  end;
////<<<2010/12/16
//<<<2011/01/13


  if ((OldRowLogic + 1) <> (NewRow div 2)) then
  begin
     if (checkDetailAction = False) then
     begin

        // ----------UPD 2010/07/01----------->>>>>
        //gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,1);
        // 通常入力の場合、粗利チェックを行う。
        if (i_InputType = 0) then
        begin
          KeyPreview := False;
//
//        if ((not GetKeyState(VK_RETURN) and $8000 = $8000) and (not GetKeyState(VK_UP) and $8000 = $8000) and
//         (not GetKeyState(VK_DOWN) and $8000 = $8000) and (not GetKeyState(VK_LEFT) and $8000 = $8000)
//         and (not GetKeyState(VK_RIGHT) and $8000 = $8000)) then
//        begin
//          checkFlg := True;
//        end;
          // DEL 2010/09/14  --- >>>>
          // ADD 2010/09/13 --- >>>>
          // 売価率
//          if ((OldCol = ctCol_SalesRate) and ((OldRow mod 2) = 1)) then
//          begin
//            status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesRate');
//          end
//          // 原価率
//          else if ((OldCol = ctCol_CostRate) and ((OldRow mod 2) = 0)) then
//          begin
//            status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','CostRate');
//          end
//          // 定価
//          else if ((OldCol = ctCol_ListPriceDisplay) and ((OldRow mod 2) = 1)) then
//          begin
//            status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','ListPriceDisplay');
//          end
//          // 原単価
//          else if ((OldCol = ctCol_SalesUnitCost) and ((OldRow mod 2) = 0)) then
//          begin
//            status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesUnitCost');
//          end
//          // 売単価
//          else if ((OldCol = ctCol_SalesUnPrcDisplay) and ((OldRow mod 2) = 1)) then
//          begin
//            status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesUnPrcDisplay');
//          end;
//
//
//          if (status = 3) then
//          begin
//            if (not smallPointFlg) then
//            begin
//               gpxMAHNB01013B_SmallPointProc(iRow);
//            end;
//
//            SettingToolBarButtonEnabled();
//
//            gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
//
//            //Value := FloatToStr(salesDetailArray.Csafield1.SalesRate);
//
//            xActiveCellButtonEnabledControl(xGridColIndexToName(OldRow,OldCol),salesRowNo);
//
//            xSetDetailRowFormC(salesDetailArray, salesRowNo);
//
//            // 明細部変更後発生イベント処理
//            xSalesSlipDetailInput_DetailChanged(salesRowNo);
//
//            xSlipMemoInfoFormSetting(salesRowNo);
//
//            xSalesPriceChanged;
//
//            xSettingGridRowFromInputChange();
//          end;
          // ADD 2010/09/13 --- <<<<
          // DEL 2010/09/14  --- <<<<
          //xPriceCheckProc(OldCol, OldRow, iRow, salesRowNo, value);      // ADD 2010/09/14  // DEL 2011/12/01 YANGMJ REDMINE#8344
          if (not _isDoubleFlag) then   // ADD 2012/01/17 Redmine27300
          begin
          //xPriceCheckProc(OldCol, OldRow, iRow, salesRowNo, value, flag); // ADD 2011/12/01 YANGMJ REDMINE#8344// DEL 2012/01/18 YANGMJ ソースマージ
          xPriceCheckProc(OldCol, OldRow, iRow, salesRowNo, value);// ADD 2012/01/18 YANGMJ ソースマージ
          end;

          // MOD 2010/11/25 --- >>>>
          // 受注伝票でマイナス金額のチェック
          status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,4);
          if (status = -1) then
          begin
            Allow := false;
            HNsGrid1.GotoCell(ctCol_SalesMoneyDisplay, (OldRow div 2) * 2 + 1);
            //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1と類似の現象の対応----->>>>>
            NewRow := (OldRow div 2) * 2 + 1;
            NewCol := 11;
            //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1と類似の現象の対応-----<<<<<
            HNsGrid1.ShowInplaceEdit;
            f3_focusFlg := True;
            dateTimeSeventh:=Now();
          end
          else
          begin
            // 数量と金額の符号が異なるチェック
            status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,3);
            if (status = -1) then
            begin
              Allow := false;
              HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay, (OldRow div 2) * 2 + 1);
              //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1と類似の現象の対応----->>>>>
              NewRow := (OldRow div 2) * 2 + 1;
              NewCol := 6;
              //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1と類似の現象の対応-----<<<<<
              HNsGrid1.ShowInplaceEdit;
              f3_focusFlg := True;
              dateTimeSeventh:=Now();
            end
            else
            begin
                status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,1);
                if (status = -1) then
                begin
                    gpxMAHNB01013B_GetGrossProfitRateFlg(grossProfitRateFlg);
                    if (grossProfitRateFlg) then
                    begin
                      checkFlg := True;
                      Allow := false;
                      HNsGrid1.GotoCell(ctCol_SalesRate, (OldRow div 2) * 2 + 1);
                      //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1の対応----->>>>>
                      NewRow := (OldRow div 2) * 2 + 1;
                      NewCol := 9;
                      //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1の対応-----<<<<<
                      Allow := False;
                      HNsGrid1.FocusCell(9, (OldRow div 2) * 2 + 1);
                      f3_focusFlg := True;     // ADD 2010/09/14
                      dateTimeOne:=Now();
                    end
                    else
                    begin
                      // ----- ADD 2011/09/21 ----------------------------------->>>>>
                      if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
                      and (RCHNB01003UADM.SalesSlipDtlNumSrc[salesRowNo -1] <> 0)
                      and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))  then
                      begin
                        checkFlg := False;
                      end
                      else
                      begin
                      // ----- ADD 2011/09/21 -----------------------------------<<<<<
                          status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,2);

                          if (status = -1) then
                          begin
                          checkFlg := True;
                          Allow := false;
                          HNsGrid1.GotoCell(ctCol_SalesRate, (OldRow div 2) * 2 + 1);
                          //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1の対応----->>>>>
                          NewRow := (OldRow div 2) * 2 + 1;
                          NewCol := 9;
                          //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1の対応-----<<<<<
                          Allow := False;
                          HNsGrid1.FocusCell(9, (OldRow div 2) * 2 + 1);
                          f3_focusFlg := True;       // ADD 2010/09/14
                          dateTimeOne:=Now();
                          end
                          else
                          begin
                            checkFlg := False;
                          end;
                      end;// ADD 2011/09/21
                    end;
                end
                // ADD 2010/09/13 --- >>>>
                else if (status = 3) then
                begin
                  checkFlg := True;
                  Allow := false;
                  //HNsGrid1.GotoCell(ctCol_SalesUnitCost, (OldRow div 2) * 2);         // DEL 2010/09/14
                  HNsGrid1.GotoCell(ctCol_SalesUnPrcDisplay, (OldRow div 2) * 2 + 1);   // ADD 2010/09/14
                  //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1と類似の現象の対応----->>>>>
                  NewRow := (OldRow div 2) * 2 + 1;
                  NewCol := 10;
                  //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1と類似の現象の対応-----<<<<<
                  Allow := False;
                  f3_focusFlg := True;       // ADD 2010/09/14
                  //HNsGrid1.FocusCell(ctCol_SalesUnitCost, (OldRow div 2) * 2);        // DEL 2010/09/14
                  HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, (OldRow div 2) * 2 + 1);  // ADD 2010/09/14
                  dateTimeThree:=Now();
                end
// -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
//                //add by liusy #26917 2011/12/16 ----->>>>
//                else if(status = 9) then
//                begin
//                  checkFlg := True;
//                  Allow := false;
//                  HNsGrid1.GotoCell(ctCol_SalesRate, (HNsGrid1.Row div 2) * 2 + 1);
//                  HNsGrid1.FocusCell(9,  (HNsGrid1.Row div 2) * 2 + 1);
//                  HNsGrid1.ShowInplaceEdit;
//                  i_InputType := 0;
//                  xSettingGridColVisible(0, i_InputType);
//                  HNsGrid1.SetFocus;
//                end
//                //add by liusy #26917 2011/12/16 -----<<<<
// -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
                // ADD 2010/09/13 --- <<<<
                // --- ADD 2010/07/19 -------------->>>>>
                else if (status = 1) then
                begin
                  // ----- ADD 2011/09/21 ----------------------------------->>>>>
                  if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
                  and (RCHNB01003UADM.SalesSlipDtlNumSrc[salesRowNo -1] <> 0)
                  and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))  then
                  begin
                    checkFlg := False;
                  end
                  else
                  begin
                  // ----- ADD 2011/09/21 -----------------------------------<<<<<
                      status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,2);

                      if (status = -1) then
                      begin
                        checkFlg := True;
                        Allow := false;
            //            THNsGrid(Sender).GotoCell(ctCol_SalesRate, (OldRow div 2) * 2 + 1);
                        HNsGrid1.GotoCell(ctCol_SalesRate, (OldRow div 2) * 2 + 1);
                        Allow := False;
                        HNsGrid1.FocusCell(9, (OldRow div 2) * 2 + 1);
                        //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1の対応----->>>>>
                        NewRow := (OldRow div 2) * 2 + 1;
                        NewCol := 9;
                        //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1の対応-----<<<<<
                        f3_focusFlg := True;      // ADD 2010/09/14
                        dateTimeOne:=Now();
                      end
                      else
                      begin
                        checkFlg := False;
                      end;
                  end;// ADD 2011/09/21
                end
                // --- ADD 2010/07/19 --------------<<<<<
                else
                begin
                  // ----- ADD 2011/09/21 ----------------------------------->>>>>
                  if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
                  and (RCHNB01003UADM.SalesSlipDtlNumSrc[salesRowNo -1] <> 0)
                  and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))  then
                  begin
                    KeyPreview := True;
                    checkFlg := False;
                  end
                  else
                  begin
                  // ----- ADD 2011/09/21 -----------------------------------<<<<<
                      status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,2);

                      if (status = -1) then
                      begin
                        checkFlg := True;
                        Allow := false;
            //            THNsGrid(Sender).GotoCell(ctCol_SalesRate, (OldRow div 2) * 2 + 1);
                       //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1の対応----->>>>>
                        NewRow := (OldRow div 2) * 2 + 1;
                        NewCol := 9;
                       //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1の対応-----<<<<<
                        HNsGrid1.GotoCell(ctCol_SalesRate, (OldRow div 2) * 2 + 1);
                        Allow := False;
                        HNsGrid1.FocusCell(9, (OldRow div 2) * 2 + 1);
                        f3_focusFlg := True;      // ADD 2010/09/14
                        dateTimeOne:=Now();
                        NewRowLogic := OldRowLogic; // ADD 2013/04/16 Wakita
                      end
                      // --- ADD 2010/07/19 -------------->>>>>
                      else if (status = 1) then
                      begin
                         checkFlg := False;
                      end
                      // --- ADD 2010/07/19 --------------<<<<<
                      else
                      begin
                        checkFlg := False;
                      end;
                        KeyPreview := True; //ADD 2010/07/19
                  end;// ADD 2011/09/21
                end;
            end;
          end;
          // MOD 2010/11/25 --- <<<<

        end;
        // ----------UPD 2010/07/01-----------<<<<<

        //>>>2011/05/25
        // 販売区分チェック
        if (salesTtlSt.SalesCdDspDivCd = 2) then begin
          if (status = 0) then begin
            status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,5);

            if (status = -1) then begin
            //-----DEL 2012/01/18 YANGMJ ソースマージ----->>>>>
//              //-----ADD 2011/12/01 YANGMJ REDMINE#8344----->>>>>
//              i_InputType := 0;
//
//              xSettingGridColVisible(0, i_InputType);
//              HNsGrid1.SetFocus;
//              xSettingGridRowFromInputChange();
//              //-----ADD 2011/12/01 YANGMJ REDMINE#8344-----<<<<<
            //-----DEL 2012/01/18 YANGMJ ソースマージ-----<<<<<
              checkFlg := True;
              Allow := false;
              HNsGrid1.GotoCell(ctCol_SalesCode, (OldRow div 2) * 2);
              //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1と類似の現象の対応----->>>>>
              NewRow := (OldRow div 2) * 2 + 1;
              NewCol := 7;
              //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.1と類似の現象の対応-----<<<<<
              Allow := False;
              HNsGrid1.FocusCell(ctCol_SalesCode, (OldRow div 2) * 2);
              f3_focusFlg := True;
              //dateTimeOne:=Now(); //DEL 2011/12/01 YANGMJ REDMINE#8344
              //dateTimeNine:=Now();//ADD 2011/12/01 YANGMJ REDMINE#8344 //DEL 2012/01/18 YANGMJ ソースマージ
              dateTimeOne:=Now();//ADD 2012/01/18 YANGMJ ソースマージ
            end
          end;
        end;
        //<<<2011/05/25

        // UPD 2010/09/13 --- >>>>
        if (status <> 3) then
        begin
           xSlipMemoInfoFormSetting(NewRowLogic + 1);

           xSalesSlipDetailInput_DetailChanged(NewRowLogic + 1);
        end;

        //xSlipMemoInfoFormSetting(NewRowLogic + 1);

        // 車両情報設定処理
        xCarInfoFormSetting(NewRowLogic + 1);
        xAllSecStockInfoProc(NewRowLogic + 1, False,False); // ADD K2015/04/01 高騁 森川部品個別依頼

        // 明細部変更後発生イベント処理
        //xSalesSlipDetailInput_DetailChanged(NewRowLogic + 1);  // ADD 2010/07/01
        // UPD 2010/09/13 --- <<<<
     end;
  end;

  if (status = -1) then
  begin
     //TODO:
  end;

  xActiveCellButtonEnabledControl(xGridColIndexToName(NewRow,NewCol),NewRowLogic + 1);

  // --- ADD 2012/04/10 No.607---------->>>>>
  HNsGrid1.SetFocus;
  // --- ADD 2012/04/10 No.607----------<<<<<
end;

// *************************************************************************
// 編集タイプをセット用のイベント(入力形式の設置)
// *************************************************************************
//Update Note: 2010/06/02 李占川 李占川 PM.NS障害・改良対応（７月リリース案件）
//No.10 品番入力後に特定操作を行なうと元データが消える不具合対応
//Update Note: 2010/06/02 呉元嘯 PM.NS障害・改良対応（７月リリース案件）
//No.13 注釈入力後にエンターキーで次明細を進むように修正する。
//Update Note : 2010/07/01　張凱</br>
//納品区分・H納品区分・指定拠点が変更された場合は、すべての同一発注先の明細に対して、設定内容を反映する</br>
procedure TForm4.HNsGrid1CellValidate(Sender: TObject; ACol, ARow: Integer;
  var Value: string; var Valid: Boolean);
var
  iRow, iCnt, st ,editStatus: Integer;
  goodsNo,cellValue,beforeCellValue : string;
  salesRowNo : Integer;
  retObj: TObject;
  salesDetailArray: TSalesSlipInputCustomArrayA2;
  originalCellValue: string;
  stReturn, focusFlg: Boolean;
  warehouseCode, rowIndex : Integer;
  // --- DEL 2012/05/21 ---------->>>>>
  //focusPositionAfterBLCodeSearch : Integer;   // ADD 2012/04/11 No.594
  // --- DEL 2012/05/21 ----------<<<<<
  stockDateTime:TDateTime; // ADD 2012/10/15
  //shipmentCntFlg : Boolean; //ADD 2013/06/03 Wakita //DEL 2013/08/19 除外(次回対応)
  shipmentCntDisplay, acceptAnOrderCntDisplay: Double;  // ADD 2013/11/05 Wakita
  focusPositionAfterBLCodeSearch : Integer;  // ADD 2013/12/11 Wakita
begin
   stReturn := True;
   gridReturnFlg := stReturn;
   iRow := ARow div 2 - 1;
   salesRowNo := RCHNB01003UADM.SalesRowNo[iRow];
   cellValue := '';
   Valid := True;
   st := 0;
   originalCellValue := '';
   isCanResize := True;
   _isDoubleFlag := False;  // ADD 2012/01/17 Redmine27300

   // --- ADD 2013/02/25 Wakita ---------->>>>>
   //イベントをキャンセルする
   if (eventCancelFlg) then
   begin
     eventCancelFlg := False;
     Exit;
   end;
   // --- ADD 2013/02/25 Wakita ----------<<<<<

   // --- DEL 2012/05/21 ---------->>>>>
//   // --- ADD 2012/04/11 No.594 ---------->>>>>
//   gpxMAHNB01013B_GetSalesSlipInputConstructionData(focusPositionAfterBLCodeSearch, 9);
//   // --- ADD 2012/04/11 No.594 ----------<<<<<
   // --- DEL 2012/05/21 ----------<<<<<

   // ------------ ADD 2011/07/20 ------------------>>>>>
   //数字の項目
   if (CanStrToFloat(Value) and CanStrToFloat(HNsGrid1.OriginalCellValue)) then
   begin
     if (StrToFloatDef(AnsiReplaceStr(Trim(Value), ',', ''), 0.0) = StrToFloatDef(AnsiReplaceStr(Trim(HNsGrid1.OriginalCellValue), ',', ''), 0.0)) then
     begin
       // 項目内容が変わらないでも行移動の場合
       if rowChangedFlg then
       begin
         gpxMAHNB01013B_StockInfoAdjust();

         gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
         xSetDetailRowFormC(salesDetailArray, salesRowNo);
         rowChangedFlg := False;
       end;
     end;
   end
   else
   //非数字の項目
   begin
     if (Value = HNsGrid1.OriginalCellValue) or
       ((Value = '0') and (HNsGrid1.OriginalCellValue = ''))then begin
       // 項目内容が変わらないでも行移動の場合
       if rowChangedFlg then
       begin
         gpxMAHNB01013B_StockInfoAdjust();

         gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
         if (salesDetailArray.Csafield1Count <> 0) then  // ADD 2012/01/20 Redmine28089
         begin
            xSetDetailRowFormC(salesDetailArray, salesRowNo);
         end;
         rowChangedFlg := False;
       end;
     end;
   end;
   // ------------ ADD 2011/07/20 ------------------<<<<<

   // ADD 2010/09/15 --->>>>
   if (f3_enableFlg) then
   begin
     f3_enableFlg := False;
     Exit;
   end;
   // ADD 2010/09/15 ---<<<<

   //Value := HNsGrid1.Cells[ACol, ARow];// ADD 2010/07/01

   // DEL 2010/07/12 --->>>>
//   if ((GetKeyState(VK_RETURN) and $8000 = $8000) and not KeyPreview) then
//   begin
//     KeyPreview := True;
//     Exit;
//   end
//   else

   if (not KeyPreview) then
   begin
//     bCheckTypeOne := True;
     KeyPreview  := True;
     Exit;
   end;

   checkCodeFlg := False;

   // -------ADD 2010/06/24--------->>>>>
   if ARow < 2 then
   begin
     Exit;
   end;

   // -------ADD 2010/06/24---------<<<<<
   // -------ADD 2010/06/26--------->>>>>
   if GetKeyState(VK_RETURN) and $8000 = $8000 then
   begin
      isEnter := True;
   end
   else
   begin
      isEnter := False;
   end;
   // -------ADD 2010/06/26---------<<<<<
   // -------ADD 2010/07/01--------->>>>>
   if (GetKeyState(VK_DOWN) and $8000 = $8000) then
   begin
      vk_Down_Check := True;
   end
   else
   begin
      vk_Down_Check := False;
   end;
   if (GetKeyState(VK_UP) and $8000 = $8000) then
   begin
      vk_Up_Check := True;
   end
   else
   begin
      vk_Up_Check := False;
   end;
   // -------ADD 2010/07/01---------<<<<<

   // --- DEL 2013/08/19 除外(次回対応) ------------------------------>>>>>
   //// --- ADD 2013/06/03 Wakita ---------->>>>>
   //shipmentCntFlg := False;
   ////出荷数
   //if ((ACol = ctCol_ShipmentCntDisplay) and ((ARow mod 2) = 1)) then
   //   shipmentCntFlg := True;
   //// --- ADD 2013/06/03 Wakita ----------<<<<<
   // --- DEL 2013/08/19 除外(次回対応) ------------------------------<<<<<

   // --- UPD 2013/08/19 除外(次回対応) ------------------------------>>>>>
   //// --- UPD 2013/06/03 Wakita ---------->>>>>
   ////if (Value = HNsGrid1.OriginalCellValue) then
   //if ((Value = HNsGrid1.OriginalCellValue) and (shipmentCntFlg = False)) then
   //// --- UPD 2013/06/03 Wakita ----------<<<<<
   if (Value = HNsGrid1.OriginalCellValue) then
   // --- UPD 2013/08/19 除外(次回対応) ------------------------------<<<<<
   begin
      //
      if ((ACol = ctCol_BLGoodsCode) and ((ARow mod 2) = 0)) then
      begin
         //BLコード
      end
       // ---------ADD zhangyong 2012/01/04 Redmine#27279---------->>>>>
      else if ((ACol = ctCol_BLGoodsCode) and ((ARow mod 2) = 1)) then
      begin
         //品番
          if (( isEnter) and (not vk_Down_Check) and (not vk_Up_Check)) then begin
                if((not (   GetKeyState( VK_MENU) and $8000 = $8000)) and
                   (not (   GetKeyState( VK_SHIFT) and $8000 = $8000)))
                 then begin
                      stReturn := xReturnKeyDown;
                    gridReturnFlg := stReturn;
                   Exit;
                end;
          end;
      end
        else if ((ACol = ctCol_GoodsMakerCd) and ((ARow mod 2) = 1)) then
      begin
         // メーカーコード
          if (( isEnter) and (not vk_Down_Check) and (not vk_Up_Check)) then begin
                if((not (   GetKeyState( VK_MENU) and $8000 = $8000)) and
                   (not (   GetKeyState( VK_SHIFT) and $8000 = $8000)))
                 then begin
                    stReturn := xReturnKeyDown;
                    gridReturnFlg := stReturn;
                   Exit;
                end;
          end;
      end
       // ---------ADD zhangyong 2012/01/04 Redmine#27279----------<<<<<
      else if ((ACol = ctCol_GoodsName) and ((ARow mod 2) = 0)) then
      begin
        // ---------ADD 2010/06/02---------->>>>>
        //注釈行
        if ((RCHNB01003UADM.EditStatus[ARow div 2 -1 ] = ctEDITSTATUS_Annotation)
            and (GetKeyState(VK_RETURN) and $8000 = $8000)) then
        begin
          // --- ADD 2013/06/05 Wakita ---------->>>>>
          //SHIFTキー押下時はBLコードや品番項目に移動しないので以下の処理を通らないように修正
          if (not(GetKeyState(VK_SHIFT) and $8000 = $8000)) then
          begin
          // --- ADD 2013/06/05 Wakita ----------<<<<<
            // 最終行
            if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
            begin
              stReturn := False;
              if(not xSetFootControl()) then
              begin
                Valid := False;
              end;
            end
            else
            begin
              // BLコード検索
              if i_searchPartsMode = ctBLCodeSearch then
              begin
                if HNsGrid1.ReadOnly[ctCol_BLGoodsCode,HNsGrid1.Row + 2] = False then
                begin
                  HNsGrid1.FocusCell(ctCol_BLGoodsCode - 1, HNsGrid1.Row + 2);
                  Exit;
                end;
              end;

              // 品番検索
              if i_searchPartsMode = ctGoodsNoSearch then
              begin
                if HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 3] = False then
                begin
                  HNsGrid1.FocusCell(ctCol_GoodsNo - 1, HNsGrid1.Row + 3);
                  Exit;
                end;
              end;
            end;
          // --- ADD 2013/06/05 Wakita ---------->>>>>
          end;
          // --- ADD 2013/06/05 Wakita ----------<<<<<
        end
        //行値引き
        else if ((RCHNB01003UADM.EditStatus[ARow div 2 -1 ] = ctEDITSTATUS_RowDiscount)
            and (GetKeyState(VK_RETURN) and $8000 = $8000)) then
        begin
          Exit;
        end;
        // ---------ADD 2010/06/02----------<<<<<


        stReturn := xReturnKeyDown;
        gridReturnFlg := stReturn;

        if (Value = '') then
        begin
          // UPD 2010/08/13 ---->>>>
          //if ((GetKeyState(VK_RETURN) and $8000 = $8000)) then
          if ((GetKeyState(VK_RETURN) and $8000 = $8000) Or (GetKeyState(VK_TAB) and $8000 = $8000)) then
          // UPD 2010/08/13 ----<<<<
          begin
            Valid := False;
          end;
        end;

        Exit
      end
      // ADD 2010/10/12 --- >>>>>>
      else
      if ((ACol = ctCol_PartySalesSlipNum) and ((ARow mod 2) = 1)) then
      begin
         for rowIndex := ARow to HNsGrid1.RowCount - 1 do
         begin
            //有効行のみ
            if (gpxMAHNB01013B_GridJoinCheck(0, rowIndex div 2 -1 , -1, 9) = 1) then
            begin
              // --- UPD 2012/05/18 No.87 ---------->>>>>
              //// --- UPD START 2012/04/10 No.607 ---------->>>>>
              ////if HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, rowIndex] = False then
              //if HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, rowIndex + 1] = False then
              //// --- UPD END   2012/04/10 No.607 ----------<<<<<
              if HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, rowIndex] = False then
              // --- UPD 2012/05/18 No.87 ----------<<<<<
              begin
                // UPD 2013/02/14 T.Miyamoto ------------------------------>>>>>
                //// --- UPD 2012/05/18 No.87 ---------->>>>>
                ////// --- UPD START 2012/04/10 No.607 ---------->>>>>
                //////HNsGrid1.GotoCell(ctCol_SupplierCdForStock, rowIndex);
                ////HNsGrid1.GotoCell(ctCol_PartySalesSlipNum, rowIndex + 1);
                ////// --- UPD END   2012/04/10 No.607 ----------<<<<<
                //HNsGrid1.GotoCell(ctCol_SupplierCdForStock, rowIndex);
                //// --- UPD 2012/05/18 No.87 ----------<<<<<
                if ((isEnter) and (not(GetKeyState(VK_SHIFT) and $8000 = $8000))) then
                begin
                  stReturn := xReturnKeyDown;
                  gridReturnFlg := stReturn;
                end else begin
                  HNsGrid1.GotoCell(ctCol_SupplierCdForStock, rowIndex);
                end;
                // UPD 2013/02/14 T.Miyamoto ------------------------------<<<<<
                Exit;
              end
            end
            else
            begin
              // --- ADD 2012/04/10 No.801 ---------->>>>>
              HNsGrid1.SetFocus;
              // --- ADD 2012/04/10 No.801 ----------<<<<<
              if i_searchPartsMode = ctGoodsNoSearch then
              begin
                HNsGrid1.GotoCell(ctCol_GoodsNo, rowIndex);
                Exit;
              end
              else if i_searchPartsMode = ctBLCodeSearch then
              begin
                HNsGrid1.GotoCell(ctCol_BLGoodsCode, rowIndex);
                Exit;
              end;
            end;
         end;
      end
      // ADD 2010/10/12 --- <<<<<
      else

      // ADD 2012/10/15 --- >>>>
//      if ((ACol = ctCol_StockDate) and ((ARow mod 2) = 0)) then
//      begin
////             st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,Value,HNsGrid1.OriginalCellValue,'StockDate');
////
////             SettingToolBarButtonEnabled(HNsGrid1);
//
//             //gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
//
//             //Exit;
//      end
//      else
      // ADD 2012/10/15 --- <<<<

      begin
         // ADD 2012/10/15 --- >>>>
         if ((GetKeyState(VK_TAB) and $8000 = $8000) OR (GetKeyState(VK_RETURN) and $8000 = $8000)) then
         begin
             if (tempShiftTabFlg) then
             begin
               if ((ACol = ctCol_StockDate) and ((ARow mod 2) = 0)) then
               begin
                 Exit;
               end;
             end;
             tempShiftTabFlg := false;
         end;
         // ADD 2012/10/15 --- <<<<

         stReturn := xReturnKeyDown;
         gridReturnFlg := stReturn;
  // 項目内容が変わった且つ行移動の場合
  if rowChangedFlg or ((salesRowNo - 1) <> (HNsGrid1.Row div 2 - 1)) then
  begin
   gpxMAHNB01013B_StockInfoAdjust();

   gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
   xSetDetailRowFormC(salesDetailArray, salesRowNo);
   if rowChangedFlg then rowChangedFlg := False;
  end;
  // ------------ ADD 2011/07/20 -------------- <<<<<
         Exit
      end;

   end;

   //ActiveCellが品番の場合
   if ((ACol = ctCol_GoodsNo) and ((ARow mod 2) = 1)) then
   begin
      goodsNo := HNsGrid1.LogicalCells[ctCol_GoodsNo, 1, iRow + 1];

      if (HNsGrid1.OriginalCellValue = goodsNo) then
      begin
      //stReturn := xReturnKeyDown; // DEL zhangyong 2012/01/04  Redmine#27279
      //gridReturnFlg := stReturn; // DEL zhangyong 2012/01/04  Redmine#27279
      // ------------ DEL zhangyong 2012/02/21 Redmine#27279 -------------- >>>>>
      // ------------ ADD zhangyong 2012/01/04 Redmine#27279 -------------- >>>>>
      //      if (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow -1, -1, 9) = 0) then
//        BEGIN
//             if ((GetKeyState(VK_TAB) and $8000 = $8000) Or (GetKeyState(VK_DOWN) and $8000 = $8000) Or (GetKeyState(VK_RETURN) and $8000 = $8000) Or (GetKeyState(VK_RIGHT) and $8000 = $8000)) then begin
//            if (i_searchPartsMode = ctBLCodeSearch) then
//            begin
//               Valid := False;
//               Exit;
//            end;
//          end;

//         stReturn := xReturnKeyDown;
//         gridReturnFlg := stReturn;
//        END;
        // ------------ ADD zhangyong 2012/01/04 Redmine#27279 -------------- <<<<<
      // ------------ DEL zhangyong 2012/02/21 Redmine#27279 -------------- <<<<<
      // ------------ ADD zhangyong 2012/02/21 Redmine#27279 -------------- >>>>>
        if (HNsGrid1.Row <= 3) then
        begin
             if ((GetKeyState(VK_TAB) and $8000 = $8000) OR (GetKeyState(VK_RETURN) and $8000 = $8000)) then
          begin
             if (tempShiftTabFlg) then
              begin
      if (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow -1, -1, 9) = 0) then
            begin
                  HNsGrid1.FocusCell(ctCol_BLGoodsCode + 1, 2);
               end
               else
               begin
                  HNsGrid1.FocusCell(ctCol_WarehouseCode + 1, HNsGrid1.Row - 1);
               end;

            end;
              tempShiftTabFlg := false;
          end;
        end
        // ------------ ADD 鄧潘ハン 2012/02/28 Redmine#27279 -------------- >>>>>
         else begin
           if ((GetKeyState(VK_TAB) and $8000 = $8000) OR (GetKeyState(VK_RETURN) and $8000 = $8000)) then
           begin
               if (tempShiftTabFlg) then
               begin
                   if (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow -1, -1, 9) = 0) then
                   begin
                      HNsGrid1.FocusCell(ctCol_SalesMoneyDisplay + 1, HNsGrid1.Row - 2);

                   end
                   else
                   begin
                      HNsGrid1.FocusCell(ctCol_WarehouseCode + 1, HNsGrid1.Row - 1);
                   end;
               end;
               tempShiftTabFlg := false;
           end;
        end;
        // ------------ ADD 鄧潘ハン 2012/02/28 Redmine#27279 -------------- <<<<<
        // ------------ DEL 鄧潘ハン 2012/02/28 Redmine#27279 -------------- >>>>>
//        else begin
//           if (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow -1, -1, 9) = 0) then
//           begin
//              HNsGrid1.FocusCell(ctCol_SalesMoneyDisplay + 1, HNsGrid1.Row - 2);
//
//           end
//           else
//           begin
//              HNsGrid1.FocusCell(ctCol_WarehouseCode + 1, HNsGrid1.Row - 1);
//           end;
//
//        end;
        // ------------ DEL 鄧潘ハン 2012/02/28 Redmine#27279 -------------- <<<<<
         Exit;
      // ------------ ADD zhangyong 2012/02/21 Redmine#27279 -------------- <<<<<
      end;

//      st := gpxMAHNB01013B_AfterGoodsNoUpdate(iRow,goodsNo,salesRowNo);    //DEL 連番729 2011/08/18
      // ----ADD 2013/02/08 yangyi REDMINE#34604---- >>>>>
      //読み込み時に砂時計を表示する
      Screen.Cursor := crHourglass;   
      // ----ADD 2013/02/08 yangyi REDMINE#34604---- <<<<<
      st := gpxMAHNB01013B_AfterGoodsNoUpdate(iRow,goodsNo, 0, salesRowNo);  //ADD 連番729 2011/08/18
      // ----ADD 2013/02/08 yangyi REDMINE#34604---- >>>>>
      //読み込み終わったので砂時計を解除する
      Screen.Cursor := crDefault;     
      // ----ADD 2013/02/08 yangyi REDMINE#34604---- <<<<<

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

      xSetDetailRowFormC(salesDetailArray,-1);

      Value := RCHNB01003UADM.GoodsNo[salesRowNo - 1];

      // --- UPD 2010/06/02 ---------->>>>>
      if (st = 0) then
      begin
        xSettingGrid;

        xActiveCellButtonEnabledControl(xGridColIndexToName(ARow,ACol),salesRowNo);

        // 明細部変更後発生イベント処理
        xSalesSlipDetailInput_DetailChanged(salesRowNo);

        xSlipMemoInfoFormSetting(salesRowNo);

        xSalesPriceChanged;

        // --- ADD 2013/11/05 Wakita ---------->>>>>
        shipmentCntDisplay := RCHNB01003UADM.ShipmentCntDisplay[salesRowNo - 1];
        acceptAnOrderCntDisplay := RCHNB01003UADM.AcceptAnOrderCntDisplay[salesRowNo - 1];
        // --- ADD 2013/11/05 Wakita ----------<<<<<

        // --- ADD 2013/12/11 Wakita ---------->>>>>
        gpxMAHNB01013B_GetSalesSlipInputConstructionData(focusPositionAfterBLCodeSearch, 9);
        // --- ADD 2013/12/11 Wakita ----------<<<<<

        xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False);  // ADD K2015/04/01 高騁 森川部品個別依頼　

        // [品名＝空白]
        // 品番⇒品名へ移動
        if (HNsGrid1.Cells[ctCol_GoodsName,HNsGrid1.Row - 1] = '') then
        begin
            // HNsGrid1.FocusCell(ctCol_GoodsName - 1, HNsGrid1.Row - 1); // DEL 2011/11/28
            //HNsGrid1.FocusCell(ctCol_BLGoodsCode - 1, HNsGrid1.Row - 1); // ADD 2011/11/28 // DEL 2012/01/18 tianjw
            //HNsGrid1.FocusCell(ctCol_BLGoodsCode - 1, HNsGrid1.Row - 1);  // ADD 2012/02/06 譚洪 // DEL 2014/09/01 Wakita
            //HNsGrid1.FocusCell(ctCol_GoodsName - 1, HNsGrid1.Row - 1); // ADD 2012/01/18 tianjw  DEL 2012/02/06 譚洪

          // --- ADD 2014/09/01 Wakita ---------->>>>>
          if ((GetKeyState(VK_TAB) and $8000 = $8000) OR (GetKeyState(VK_RETURN) and $8000 = $8000)) then
          begin
            if not(tempShiftTabFlg) then
            begin
              HNsGrid1.FocusCell(ctCol_BLGoodsCode - 1, HNsGrid1.Row - 1);
            end;
          end;
          // --- ADD 2014/09/01 Wakita ----------<<<<<
        end
        else
        begin
          // 商品情報取得成功
          if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Estimate) then
          begin
            HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay -1,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);
          end
          else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_UnitPriceEstimate) then
          begin
             HNsGrid1.LogicalFocusCell(ctCol_SalesRate -1,ctRow_SalesRate,HNsGrid1.LogicalRow);
          end
          else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Sales) then
          begin
              // ADD 2011/09/29 --- >>>>
              // DEL 2015/04/01 高騁 森川部品個別依頼 ---->>>>>
              //   if (CustomerClaimConfirmationBtn.Enabled = True) then // ADD 2012/07/04
              //   CustomerClaimConfirmationBtn.SetFocus;
              // DEL 2015/04/01 高騁 森川部品個別依頼 ---->>>>>

              // ADD K2015/04/01 高騁 森川部品個別依頼 ---->>>>>
              if (CustomerClaimConfirmationBtn.Enabled = True) then      // ADD 2012/07/04
              begin
                if(isOptPermitForMoriKawa) then begin
                  notChangeAllSecStock := True;
                end;
                CustomerClaimConfirmationBtn.SetFocus;
              end;
              // ADD K2015/04/01 高騁 森川部品個別依頼 ----<<<<<
               HNsGrid1.SetFocus;
              // ADD 2011/09/29 --- <<<<
          //-----ADD BY 凌小青 on 2012/01/17 for Redmine#27977 ----->>>>>>
             if (salesSlip_disp.AcptAnOdrStatus = acptAnOdrStatusState_AcceptAnOrder) then
             begin
              HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay -1,ctRow_AcceptAnOrderCntDisplay,HNsGrid1.LogicalRow);
             end
             else
             begin
          //-----ADD BY 凌小青 on 2012/01/17 for Redmine#27977 -----<<<<<<

              // --- DEL 2012/05/21 ---------->>>>>
//              // --- ADD 2012/04/11 No.594 ----------<<<<<
//              //新規伝票で且つ
//              //伝票種別「売上」、伝票区分「売上」又は伝票種別「貸出」、伝票区分「売上」で且つ
//              //売上全体設定「受注数入力：する」且つユーザ設定「商品検索後のカーソル位置：受注数」の場合
//              if  ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))
//              and (((AcptAnOdrStatusDisplayComBo.SelCode = 30) and (SalesSlipDisplayComBo.SelCode = 10))
//              or  ((AcptAnOdrStatusDisplayComBo.SelCode = 40) and (SalesSlipDisplayComBo.SelCode = 10)))
//              and (salesTtlSt.AcpOdrInputDiv = 1)
//              and (focusPositionAfterBLCodeSearch = 1) then
//              begin
//                HNsGrid1.GotoCell(ctCol_AcceptAnOrderCntDisplay - 1,HNsGrid1.LogicalRow * 2);
//              end
//              else
//              begin
//              // --- ADD 2012/04/11 No.594 ----------<<<<<
              // --- DEL 2012/05/21 ----------<<<<<

              //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);
              // --- UPD 2013/11/05 Wakita ---------->>>>>
              //HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay - 1,HNsGrid1.LogicalRow * 2 + ctRow_ShipmentCntDisplay);

                // --- UPD 2013/12/11 Wakita ---------->>>>>
//              if ((shipmentCntDisplay <> 0) and (acceptAnOrderCntDisplay = 0)) then
//              begin
//                 // 出荷数
//              	 HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay - 1,HNsGrid1.LogicalRow * 2 + ctRow_ShipmentCntDisplay);
//              end
//              else if ((shipmentCntDisplay = 0) and (acceptAnOrderCntDisplay = 0)) then
//              begin
//                 // 受注数
//                 HNsGrid1.GotoCell(ctCol_AcceptAnOrderCntDisplay - 1,HNsGrid1.LogicalRow * 2);
//              end;

                // 売上全体設定「受注数入力：する」
                // ユーザー設定「商品検索後のカーソル位置：受注数」
                // 「出荷数：０」、「受注数：０」
                // 伝票区分「掛売上、現金売上」
                // 新規伝票の場合
                if ((salesTtlSt.AcpOdrInputDiv = 1) and
                    (focusPositionAfterBLCodeSearch = 1) and
                    ((shipmentCntDisplay = 0) and (acceptAnOrderCntDisplay = 0)) and
                    ((SalesSlipDisplayComBo.SelCode = 10) or (SalesSlipDisplayComBo.SelCode = 30)) and
                    ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))) then
                begin
                  // 受注数
                  HNsGrid1.GotoCell(ctCol_AcceptAnOrderCntDisplay - 1,HNsGrid1.LogicalRow * 2);
                end
                else
                begin
                 // 出荷数
              	 HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay - 1,HNsGrid1.LogicalRow * 2 + ctRow_ShipmentCntDisplay);
                end;
                // --- UPD 2013/12/11 Wakita ----------<<<<<

              // --- UPD 2013/11/05 Wakita ----------<<<<<

              // --- DEL 2012/05/21 ---------->>>>>
//              // --- ADD 2012/04/11 No.594 ---------->>>>>
//              end
//              // --- ADD 2012/04/11 No.594 ----------<<<<<
              // --- DEL 2012/05/21 ----------<<<<<

             end//ADD ON 2012/01/17
          end
          else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Shipment) then
          begin
              // --- UPD 2013/11/05 Wakita ---------->>>>>
              //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay -1,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);
              // --- UPD 2013/12/11 Wakita ---------->>>>>
//              if ((shipmentCntDisplay <> 0) and (acceptAnOrderCntDisplay = 0)) then
//              begin
//                 // 出荷数
//                 HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay - 1,HNsGrid1.LogicalRow * 2 + ctRow_ShipmentCntDisplay);
//              end
//              else if ((shipmentCntDisplay = 0) and (acceptAnOrderCntDisplay = 0)) then
//              begin
//                 // 受注数
//                 HNsGrid1.GotoCell(ctCol_AcceptAnOrderCntDisplay - 1,HNsGrid1.LogicalRow * 2);
//              end;

                // 売上全体設定「受注数入力：する」
                // ユーザー設定「商品検索後のカーソル位置：受注数」
                // 「出荷数：０」、「受注数：０」
                // 伝票区分「掛売上、現金売上」
                // 新規伝票の場合
                if ((salesTtlSt.AcpOdrInputDiv = 1) and
                    (focusPositionAfterBLCodeSearch = 1) and
                    ((shipmentCntDisplay = 0) and (acceptAnOrderCntDisplay = 0)) and
                    ((SalesSlipDisplayComBo.SelCode = 10) or (SalesSlipDisplayComBo.SelCode = 30)) and
                    ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))) then
                begin
                  // 受注数
                  HNsGrid1.GotoCell(ctCol_AcceptAnOrderCntDisplay - 1,HNsGrid1.LogicalRow * 2);
                end
                else
                begin
                 // 出荷数
              	 HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay - 1,HNsGrid1.LogicalRow * 2 + ctRow_ShipmentCntDisplay);
                end;
              // --- UPD 2013/12/11 Wakita ----------<<<<<
              // --- UPD 2013/11/05 Wakita ---------->>>>>

          end;
        end;
      end
      else
      begin
         Valid := False;
      end;
      // --- UPD 2010/06/02 ----------<<<<<

      //>>>2010/10/27
      svRow := HNsGrid1.LogicalRow;
      svCol := ctCol_ShipmentCntDisplay;
      svLine := HNsGrid1.LogicalLine;
      //<<<2010/10/27

      Exit;

   end
   // BLコード
   else if ((ACol = ctCol_BLGoodsCode) and ((ARow mod 2) = 0)) then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_BLGoodsCode, 0, iRow + 1];

      if (HNsGrid1.OriginalCellValue = cellValue) then
      begin
        if (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow -1, -1, 9) = 0) then
        BEGIN
          // UPD 2010/08/13 ---->>>>
          //if ((GetKeyState(VK_DOWN) and $8000 = $8000) Or (GetKeyState(VK_RETURN) and $8000 = $8000) Or (GetKeyState(VK_RIGHT) and $8000 = $8000)) then begin
          if ((GetKeyState(VK_TAB) and $8000 = $8000) Or (GetKeyState(VK_DOWN) and $8000 = $8000) Or (GetKeyState(VK_RETURN) and $8000 = $8000) Or (GetKeyState(VK_RIGHT) and $8000 = $8000)) then begin
          // UPD 2010/08/13 ----<<<<
            if (i_searchPartsMode = ctBLCodeSearch) then
            begin
               Valid := False;
               Exit;
            end;
          end;

        END
        // --- UPD 2010/05/31 ---------->>>>>
//         Value := IntToStr(RCHNB01003UADM.BLGoodsCode[iRow]);
//         if (RCHNB01003UADM.BLGoodsCode[iRow] <> 0) then
//         begin
//           //xReturnKeyDown;
//         end;
        else
        begin
//           if (GetKeyState(VK_RETURN) and $8000 = $8000) and (i_searchPartsMode = ctBLCodeSearch)then
//           begin
//              Valid := False;
//              Exit;
//           end;
        end;
        // --- UPD 2010/05/31 ----------<<<<<
         Exit;
      end;
      // ----ADD 2013/02/08 yangyi REDMINE#34604---- >>>>>
      //読み込み時に砂時計を表示する
      Screen.Cursor := crHourglass;  
      // ----ADD 2013/02/08 yangyi REDMINE#34604---- <<<<<
      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,IntToStr(RCHNB01003UADM.BLGoodsCode[ARow div 2 - 1]),'BLGoodsCode');
      // ----ADD 2013/02/08 yangyi REDMINE#34604---- >>>>>
      //読み込み終わったので砂時計を解除する
      Screen.Cursor := crDefault;    
      // ----ADD 2013/02/08 yangyi REDMINE#34604---- <<<<<

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

      xSetDetailRowFormC(salesDetailArray,-1);

      Value := IntToStr(RCHNB01003UADM.BLGoodsCode[iRow]);

      if (st = 0) then
      begin
         xSettingGrid;
         xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼
      end
      else
      begin
         Valid := False;
      end;

      xActiveCellButtonEnabledControl(xGridColIndexToName(ARow,ACol),salesRowNo);

      // 明細部変更後発生イベント処理
      xSalesSlipDetailInput_DetailChanged(salesRowNo);

      xSlipMemoInfoFormSetting(salesRowNo);

      xSalesPriceChanged;

      // --- ADD 2013/11/05 Wakita ---------->>>>>
      shipmentCntDisplay := RCHNB01003UADM.ShipmentCntDisplay[salesRowNo - 1];
      acceptAnOrderCntDisplay := RCHNB01003UADM.AcceptAnOrderCntDisplay[salesRowNo - 1];
      // --- ADD 2013/11/05 Wakita ----------<<<<<

      // --- ADD 2013/12/11 Wakita ---------->>>>>
      gpxMAHNB01013B_GetSalesSlipInputConstructionData(focusPositionAfterBLCodeSearch, 9);
      // --- ADD 2013/12/11 Wakita ----------<<<<<

      if (st = 0) then
      begin
        // 商品情報取得成功
        if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Estimate) then
        begin
          HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay -1,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);
        end
        else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_UnitPriceEstimate) then
        begin
           HNsGrid1.LogicalFocusCell(ctCol_SalesRate -1,ctRow_SalesRate,HNsGrid1.LogicalRow);
        end
        else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Sales) then
        begin
           // ADD 2011/09/29 --- >>>>
            if (CustomerClaimConfirmationBtn.Enabled = True) then // ADD 2012/07/04
             // DEL 2015/04/01 高騁 森川部品個別依頼 ---->>>>>
              // CustomerClaimConfirmationBtn.SetFocus;
              // HNsGrid1.SetFocus;
            // DEL 2015/04/01 高騁 森川部品個別依頼 ----<<<<<
            // ADD K2015/04/01 高騁 森川部品個別依頼 ---->>>>>
              if (CustomerClaimConfirmationBtn.Enabled = True) then      // ADD 2012/07/04
              begin
                if(isOptPermitForMoriKawa) then begin
                  notChangeAllSecStock := True;
                end;
                CustomerClaimConfirmationBtn.SetFocus;
                xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼
              end;
            // ADD K2015/04/01 高騁 森川部品個別依頼 ----<<<<<
              // ADD 2011/09/29 --- <<<<
        //-----ADD BY 凌小青 on 2012/01/17 for Redmine#27977 ----->>>>>>
             if (salesSlip_disp.AcptAnOdrStatus = acptAnOdrStatusState_AcceptAnOrder) then
             begin
              HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay -1,ctRow_AcceptAnOrderCntDisplay,HNsGrid1.LogicalRow);
             end
             else
             begin
       //-----ADD BY 凌小青 on 2012/01/17 for Redmine#27977 -----<<<<<<

               // --- DEL 2012/05/21 ---------->>>>>
//             // --- ADD 2012/04/11 No.594 ---------->>>>>
//             //新規伝票で且つ
//             //伝票種別「売上」、伝票区分「売上」又は伝票種別「貸出」、伝票区分「売上」で且つ
//             //売上全体設定「受注数入力：する」且つユーザ設定「商品検索後のカーソル位置：受注数」の場合
//             if  ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))
//             and (((AcptAnOdrStatusDisplayComBo.SelCode = 30) and (SalesSlipDisplayComBo.SelCode = 10))
//             or  ((AcptAnOdrStatusDisplayComBo.SelCode = 40) and (SalesSlipDisplayComBo.SelCode = 10)))
//             and (salesTtlSt.AcpOdrInputDiv = 1)
//             and (focusPositionAfterBLCodeSearch = 1) then
//             begin
//               HNsGrid1.GotoCell(ctCol_AcceptAnOrderCntDisplay - 1,HNsGrid1.LogicalRow * 2);
//             end
//             else
//             begin
//             // --- ADD 2012/04/11 No.594 ----------<<<<<
             // --- DEL 2012/05/21 ----------<<<<<

             //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay -1,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);//DEL 2011/09/05
             // --- UPD 2013/11/05 Wakita ---------->>>>>
             //HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay - 1,HNsGrid1.LogicalRow * 2 + ctRow_ShipmentCntDisplay); //ADD 2011/09/05

              // --- UPD 2013/12/11 Wakita ---------->>>>>
//              if ((shipmentCntDisplay <> 0) and (acceptAnOrderCntDisplay = 0)) then
//              begin
//                 // 出荷数
//                 HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay - 1,HNsGrid1.LogicalRow * 2 + ctRow_ShipmentCntDisplay);
//              end
//              else if ((shipmentCntDisplay = 0) and (acceptAnOrderCntDisplay = 0)) then
//              begin
//                 // 受注数
//                 HNsGrid1.GotoCell(ctCol_AcceptAnOrderCntDisplay - 1,HNsGrid1.LogicalRow * 2);
//              end;

                // 売上全体設定「受注数入力：する」
                // ユーザー設定「商品検索後のカーソル位置：受注数」
                // 「出荷数：０」、「受注数：０」
                // 伝票区分「掛売上、現金売上」
                // 新規伝票の場合
                if ((salesTtlSt.AcpOdrInputDiv = 1) and
                    (focusPositionAfterBLCodeSearch = 1) and
                    ((shipmentCntDisplay = 0) and (acceptAnOrderCntDisplay = 0)) and
                    ((SalesSlipDisplayComBo.SelCode = 10) or (SalesSlipDisplayComBo.SelCode = 30)) and
                    ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))) then
                begin
                  // 受注数
                  HNsGrid1.GotoCell(ctCol_AcceptAnOrderCntDisplay - 1,HNsGrid1.LogicalRow * 2);
                end
                else
                begin
                 // 出荷数
              	 HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay - 1,HNsGrid1.LogicalRow * 2 + ctRow_ShipmentCntDisplay);
                end;
              // --- UPD 2013/12/11 Wakita ----------<<<<<
              // --- UPD 2013/11/05 Wakita ----------<<<<<

             // --- DEL 2012/05/21 ---------->>>>>
//             // --- ADD 2012/04/11 No.594 ---------->>>>>
//             end
//             // --- ADD 2012/04/11 No.594 ----------<<<<<

             end //ADD ON 2012/01/17
             // --- DEL 2012/05/21 ----------<<<<<
        end
        else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Shipment) then
        begin
           // --- DEL 2012/05/21 ---------->>>>>
//           // --- ADD 2012/04/11 No.594 ---------->>>>>
//           //新規伝票で且つ
//           //伝票種別「売上」、伝票区分「売上」又は伝票種別「貸出」、伝票区分「売上」で且つ
//           //売上全体設定「受注数入力：する」且つユーザ設定「商品検索後のカーソル位置：受注数」の場合
//           if  ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))
//           and (((AcptAnOdrStatusDisplayComBo.SelCode = 30) and (SalesSlipDisplayComBo.SelCode = 10))
//           or  ((AcptAnOdrStatusDisplayComBo.SelCode = 40) and (SalesSlipDisplayComBo.SelCode = 10)))
//           and (salesTtlSt.AcpOdrInputDiv = 1)
//           and (focusPositionAfterBLCodeSearch = 1) then
//           begin
//            HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay - 1,ctRow_AcceptAnOrderCntDisplay,HNsGrid1.LogicalRow);
//           end
//           else
//           begin
//           // --- ADD 2012/04/11 No.594 ----------<<<<<
           // --- DEL 2012/05/21 ----------<<<<<

           // --- UPD 2013/11/05 Wakita ---------->>>>>
           //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay -1,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);
           // --- UPD 2013/12/11 Wakita ---------->>>>>
//           if ((shipmentCntDisplay <> 0) and (acceptAnOrderCntDisplay = 0)) then
//           begin
//              // 出荷数
//              HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay - 1,HNsGrid1.LogicalRow * 2 + ctRow_ShipmentCntDisplay);
//           end
//           else if ((shipmentCntDisplay = 0) and (acceptAnOrderCntDisplay = 0)) then
//           begin
//              // 受注数
//              HNsGrid1.GotoCell(ctCol_AcceptAnOrderCntDisplay - 1,HNsGrid1.LogicalRow * 2);
//           end;

           // 売上全体設定「受注数入力：する」
           // ユーザー設定「商品検索後のカーソル位置：受注数」
           // 「出荷数：０」、「受注数：０」
           // 伝票区分「掛売上、現金売上」
           // 新規伝票の場合
           if ((salesTtlSt.AcpOdrInputDiv = 1) and
               (focusPositionAfterBLCodeSearch = 1) and
               ((shipmentCntDisplay = 0) and (acceptAnOrderCntDisplay = 0)) and
               ((SalesSlipDisplayComBo.SelCode = 10) or (SalesSlipDisplayComBo.SelCode = 30)) and
               ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))) then
           begin
             // 受注数
             HNsGrid1.GotoCell(ctCol_AcceptAnOrderCntDisplay - 1,HNsGrid1.LogicalRow * 2);
           end
           else
           begin
             // 出荷数
             HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay - 1,HNsGrid1.LogicalRow * 2 + ctRow_ShipmentCntDisplay);
           end;
           // --- UPD 2013/12/11 Wakita ----------<<<<<
           // --- UPD 2013/11/05 Wakita ----------<<<<<

           // --- DEL 2012/05/21 ---------->>>>>
//           // --- ADD 2012/04/11 No.594 ---------->>>>>
//           end
//           // --- ADD 2012/04/11 No.594 ----------<<<<<
           // --- DEL 2012/05/21 ----------<<<<<

        end;
      end;
      dateTimeFivth := Now();       // ADD 2010/09/10

      Exit;

   end
   //品名
   else if ((ACol = ctCol_GoodsName) and ((ARow mod 2) = 0))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_GoodsName, 0, iRow + 1];

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'GoodsName');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := salesDetailArray.Csafield1.GoodsName;

      if(Value <> HNsGrid1.OriginalCellValue) then
      begin
        xAllSecStockInfoProc(HNsGrid1.LogicalRow, False, False); // ADD K2015/04/01 高騁 森川部品個別依頼
      end;
   end
   //倉庫コード
   else if ((ACol = ctCol_WarehouseCode) and ((ARow mod 2) = 0))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_WarehouseCode, 0, iRow + 1];

      originalCellValue := HNsGrid1.OriginalCellValue;

      if (cellValue = originalCellValue) then
      begin
         stReturn := xReturnKeyDown;
         gridReturnFlg := stReturn;
  // ------------ ADD 2011/07/20 -------------- >>>>>
  // 項目内容が変わった且つ行移動の場合
  if rowChangedFlg or ((salesRowNo - 1) <> (HNsGrid1.Row div 2 - 1)) then
  begin
   gpxMAHNB01013B_StockInfoAdjust();

   gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
   xSetDetailRowFormC(salesDetailArray, salesRowNo);
   if rowChangedFlg then rowChangedFlg := False;
  end;
  // ------------ ADD 2011/07/20 -------------- <<<<<
         Exit;
      end;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'WarehouseCode');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
      //画面項目名称設定処理
      xGetDisplayName();   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
      warehouseCode := StrToIntDef(salesDetailArray.Csafield1.WarehouseCode,0);

      if (warehouseCode <> 0) then
      begin
        Value := IntToStr(warehouseCode);
      end
      else
      begin
        Value := '';
      end;
   end
   //販売区分
   else if ((ACol = ctCol_SalesCode) and ((ARow mod 2) = 0))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_SalesCode, 0, iRow + 1];

      originalCellValue := HNsGrid1.OriginalCellValue;

      if (cellValue = originalCellValue) then
      begin
         stReturn := xReturnKeyDown;
         gridReturnFlg := stReturn;
         Exit;
      end;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'SalesCode');
       // -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
//      // -----ADD 2011/12/01 YANGMJ REDMINE#8344 ----->>>>>
//      if st = -1 then
//      begin
//        checkSaleCd :=True;
//        HNsGrid1.SetFocus;
//        HNsGrid1.GotoCell(ctCol_SalesCode, rowIndex);
//        f3_enableFlg := True;
//        dateTimeEigth := Now();
//        i_InputType := 0;
//      end;
//      // -----ADD 2011/12/01 YANGMJ REDMINE#8344 -----<<<<<
       // -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := IntToStr(salesDetailArray.Csafield1.SalesCode);

      //画面項目名称設定処理
      xGetDisplayName();   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応

   end
   //出荷数
   else if ((ACol = ctCol_ShipmentCntDisplay) and ((ARow mod 2) = 1))  then
   begin
      // --- DEL 2012/05/21 ---------->>>>>
//      // --- ADD 2012/04/11 No.594 ---------->>>>>
//      //新規伝票で且つ
//      //伝票種別「売上」、伝票区分「売上」又は伝票種別「貸出」、伝票区分「売上」で且つ
//      //売上全体設定「受注数入力：する」且つユーザ設定「商品検索後のカーソル位置：受注数」の場合
//      if  ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))
//      and (((AcptAnOdrStatusDisplayComBo.SelCode = 30) and (SalesSlipDisplayComBo.SelCode = 10))
//      or  ((AcptAnOdrStatusDisplayComBo.SelCode = 40) and (SalesSlipDisplayComBo.SelCode = 10)))
//      and (salesTtlSt.AcpOdrInputDiv = 1)
//      and (focusPositionAfterBLCodeSearch = 1) then
//      begin
//        //受注数設定
//        cellValue := HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntDisplay, 0, iRow + 1];
//        originalCellValue := HNsGrid1.OriginalCellValue;
//        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'AcceptAnOrderCntDisplay');
//        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
//      end;
//      // --- ADD 2012/04/11 No.594 ----------<<<<<
      // --- DEL 2012/05/21 ----------<<<<<

      cellValue := HNsGrid1.LogicalCells[ctCol_ShipmentCntDisplay, 1, iRow + 1];

      originalCellValue := HNsGrid1.OriginalCellValue;

      // --- DEL 2012/01/05 Redmine#27526 ---- >>>>>
//      if (cellValue = originalCellValue) then
//      begin
//         stReturn := xReturnKeyDown;
//         gridReturnFlg := stReturn;
//
//         Exit;
//      end;
      // --- DEL 2012/01/05 Redmine#27526 ---- <<<<<

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'ShipmentCntDisplay');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := FloatToStr(salesDetailArray.Csafield1.ShipmentCntDisplay);

// 2011/01/31 Del >>>
//      xSetReplyTransactionButtonEnable();  // ADD 2010/07/08
// 2011/01/31 Del <<<
   end
   //受注数
   else if ((ACol = ctCol_AcceptAnOrderCntDisplay) and ((ARow mod 2) = 0))  then
   begin
      // --- DEL 2012/05/21 ---------->>>>>
//      // --- ADD 2012/04/11 No.594 ---------->>>>>
//      //新規伝票で且つ
//      //伝票種別「売上」、伝票区分「売上」又は伝票種別「貸出」、伝票区分「売上」で且つ
//      //売上全体設定「受注数入力：する」且つユーザ設定「商品検索後のカーソル位置：受注数」の場合
//      if  ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))
//      and (((AcptAnOdrStatusDisplayComBo.SelCode = 30) and (SalesSlipDisplayComBo.SelCode = 10))
//      or  ((AcptAnOdrStatusDisplayComBo.SelCode = 40) and (SalesSlipDisplayComBo.SelCode = 10)))
//      and (salesTtlSt.AcpOdrInputDiv = 1)
//      and (focusPositionAfterBLCodeSearch = 1) then
//      begin
//        //出荷数設定
//        cellValue := HNsGrid1.LogicalCells[ctCol_ShipmentCntDisplay, 1, iRow + 1];
//        originalCellValue := HNsGrid1.OriginalCellValue;
//        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'ShipmentCntDisplay');
//        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
//      end;
//      // --- ADD 2012/04/11 No.594 ----------<<<<<
      // --- DEL 2012/05/21 ----------<<<<<

      cellValue := HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntDisplay, 0, iRow + 1];

      originalCellValue := HNsGrid1.OriginalCellValue;

      // --- DEL 2012/01/05 Redmine#27526 ---- >>>>>
//      if (cellValue = originalCellValue) then
//      begin
//         stReturn := xReturnKeyDown;
//         gridReturnFlg := stReturn;
//
//         Exit;
//      end;
// --- DEL 2012/01/05 Redmine#27526 ---- <<<<<

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'AcceptAnOrderCntDisplay');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := FloatToStr(salesDetailArray.Csafield1.AcceptAnOrderCnt);
   end
   //定価
   else if ((ACol = ctCol_ListPriceDisplay) and ((ARow mod 2) = 1))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_ListPriceDisplay, 1, iRow + 1];

      originalCellValue := HNsGrid1.OriginalCellValue;

      if (cellValue = originalCellValue) then
      begin
         stReturn := xReturnKeyDown;
         gridReturnFlg := stReturn;
         Exit;
      end;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'ListPriceDisplay');

      // ADD 2010/08/23 --- >>>
      if (not smallPointFlg) then
      begin
         gpxMAHNB01013B_SmallPointProc(iRow);
      end;
      // ADD 2010/08/23 --- <<<

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := FloatToStr(salesDetailArray.Csafield1.ListPriceDisplay);  // ADD 2010/09/10
   end
   //売単価
   else if ((ACol = ctCol_SalesUnPrcDisplay) and ((ARow mod 2) = 1))  then
   begin
      // --- DEL 2012/05/21 ---------->>>>>
//      // --- ADD 2012/04/11 No.594 ---------->>>>>
//      //新規伝票で且つ
//      //伝票種別「売上」、伝票区分「売上」又は伝票種別「貸出」、伝票区分「売上」で且つ
//      //売上全体設定「受注数入力：する」且つユーザ設定「商品検索後のカーソル位置：受注数」の場合
//      if  ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))
//      and (((AcptAnOdrStatusDisplayComBo.SelCode = 30) and (SalesSlipDisplayComBo.SelCode = 10))
//      or  ((AcptAnOdrStatusDisplayComBo.SelCode = 40) and (SalesSlipDisplayComBo.SelCode = 10)))
//      and (salesTtlSt.AcpOdrInputDiv = 1)
//      and (focusPositionAfterBLCodeSearch = 1) then
//      begin
//        //受注数設定
//        cellValue := HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntDisplay, 0, iRow + 1];
//        originalCellValue := HNsGrid1.OriginalCellValue;
//        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'AcceptAnOrderCntDisplay');
//        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
//
//        //出荷数設定
//        cellValue := HNsGrid1.LogicalCells[ctCol_ShipmentCntDisplay, 1, iRow + 1];
//        originalCellValue := HNsGrid1.OriginalCellValue;
//        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'ShipmentCntDisplay');
//        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
//      end;
//      // --- ADD 2012/04/11 No.594 ----------<<<<<
      // --- DEL 2012/05/21 ----------<<<<<

      //cellValue := HNsGrid1.LogicalCells[ctCol_SalesUnPrcDisplay, 1, iRow + 1];      // DEL 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ
      // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- >>>>>
      if isOptPermitForKoei then
      begin
        // コーエイの場合、売価セルパラーメタ値を使用する。
        cellValue := Value;
      end
      else
      begin
        // 既存の場合、
        cellValue := HNsGrid1.LogicalCells[ctCol_SalesUnPrcDisplay, 1, iRow + 1];
      end;
      // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- <<<<<

      originalCellValue := HNsGrid1.OriginalCellValue;

      if (cellValue = originalCellValue) then
      begin
         stReturn := xReturnKeyDown;
         gridReturnFlg := stReturn;
  // ------------ ADD 2011/07/20 -------------- >>>>>
  // 項目内容が変わった且つ行移動の場合
  if rowChangedFlg or ((salesRowNo - 1) <> (HNsGrid1.Row div 2 - 1)) then
  begin
   gpxMAHNB01013B_StockInfoAdjust();

   gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
   xSetDetailRowFormC(salesDetailArray, salesRowNo);
   if rowChangedFlg then rowChangedFlg := False;
  end;
  // ------------ ADD 2011/07/20 -------------- <<<<<
         Exit;
      end;


      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'SalesUnPrcDisplay');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := FloatToStr(salesDetailArray.Csafield1.SalesUnPrcTaxExcFl);  // ADD 2010/07/14
   end
   //売価率
   else if ((ACol = ctCol_SalesRate) and ((ARow mod 2) = 1))  then
   begin
      // --- DEL 2012/05/21 ---------->>>>>
//      // --- ADD 2012/04/11 No.594 ---------->>>>>
//      //新規伝票で且つ
//      //伝票種別「売上」、伝票区分「売上」又は伝票種別「貸出」、伝票区分「売上」で且つ
//      //売上全体設定「受注数入力：する」且つユーザ設定「商品検索後のカーソル位置：受注数」の場合
//      if  ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))
//      and (((AcptAnOdrStatusDisplayComBo.SelCode = 30) and (SalesSlipDisplayComBo.SelCode = 10))
//      or  ((AcptAnOdrStatusDisplayComBo.SelCode = 40) and (SalesSlipDisplayComBo.SelCode = 10)))
//      and (salesTtlSt.AcpOdrInputDiv = 1)
//      and (focusPositionAfterBLCodeSearch = 1) then
//      begin
//        //受注数設定
//        cellValue := HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntDisplay, 0, iRow + 1];
//        originalCellValue := HNsGrid1.OriginalCellValue;
//        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'AcceptAnOrderCntDisplay');
//        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
//
//        //出荷数設定
//        cellValue := HNsGrid1.LogicalCells[ctCol_ShipmentCntDisplay, 1, iRow + 1];
//        originalCellValue := HNsGrid1.OriginalCellValue;
//        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'ShipmentCntDisplay');
//        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
//      end;
//      // --- ADD 2012/04/11 No.594 ----------<<<<<
      // --- DEL 2012/05/21 ----------<<<<<

      cellValue := HNsGrid1.LogicalCells[ctCol_SalesRate, 1, iRow + 1];

      originalCellValue := HNsGrid1.OriginalCellValue;

      if (cellValue = originalCellValue) then
      begin
         stReturn := xReturnKeyDown;
         gridReturnFlg := stReturn;
         Exit;
      end;

      // --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
      //st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'SalesRate');
      if (HNsGrid1.ReadOnly[ctCol_SalesRate, ARow] = False) then
      begin
        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow, cellValue, HNsGrid1.originalCellValue, 'SalesRate');
      end;
      // --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<


      // ADD 2010/08/23 --- >>>
      if (not smallPointFlg) then
      begin
         gpxMAHNB01013B_SmallPointProc(iRow);
      end;
      // ADD 2010/08/23 --- <<<

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := FloatToStr(salesDetailArray.Csafield1.SalesRate);  // ADD 2010/07/14
   end
   //原単価
   else if ((ACol = ctCol_SalesUnitCost) and ((ARow mod 2) = 0))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_SalesUnitCost, 0, iRow + 1];

      originalCellValue := HNsGrid1.OriginalCellValue;

      if (cellValue = originalCellValue) then
      begin
         stReturn := xReturnKeyDown;
         gridReturnFlg := stReturn;
         Exit;
      end;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'SalesUnitCost');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := FloatToStr(salesDetailArray.Csafield1.SalesUnitCost);
   end
   //原価率
   else if ((ACol = ctCol_CostRate) and ((ARow mod 2) = 0))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_CostRate, 0, iRow + 1];

      originalCellValue := HNsGrid1.OriginalCellValue;

      if (cellValue = originalCellValue) then
      begin

         stReturn := xReturnKeyDown;
         gridReturnFlg := stReturn;
         Exit;
      end;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'CostRate');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := FloatToStr(salesDetailArray.Csafield1.CostRate);  // ADD 2010/07/14
   end
   //売上金額
   else if ((ACol = ctCol_SalesMoneyDisplay) and ((ARow mod 2) = 1))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_SalesMoneyDisplay, 1, iRow + 1];

      originalCellValue := HNsGrid1.OriginalCellValue;

      if (cellValue = originalCellValue) then
      begin
         stReturn := xReturnKeyDown;
         gridReturnFlg := stReturn;
  // ------------ ADD 2011/07/20 -------------- >>>>>
  // 項目内容が変わった且つ行移動の場合
  if rowChangedFlg or ((salesRowNo - 1) <> (HNsGrid1.Row div 2 - 1)) then
  begin
   gpxMAHNB01013B_StockInfoAdjust();

   gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
   xSetDetailRowFormC(salesDetailArray, salesRowNo);
   if rowChangedFlg then rowChangedFlg := False;
  end;
  // ------------ ADD 2011/07/20 -------------- <<<<<
         Exit;
      end;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,IntToStr(RCHNB01003UADM.SalesMoneyTaxExc[ARow div 2 - 1]),'SalesMoneyDisplay');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
      if (st = -1) then
      begin
         Value := originalCellValue;
      end
   end
   //原価金額
   else if ((ACol = ctCol_SalesMoneyDisplay) and ((ARow mod 2) = 0))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_SalesMoneyDisplay, 0, iRow + 1];

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'Cost');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
   end
   //メーカーコード
   else if ((ACol = ctCol_GoodsMakerCd) and ((ARow mod 2) = 1))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_GoodsMakerCd, 1, iRow + 1];

      originalCellValue := HNsGrid1.OriginalCellValue;

      if (cellValue = originalCellValue) then
      begin
      //stReturn := xReturnKeyDown; // DEL zhangyong 2012/01/04  Redmine#27279
      //gridReturnFlg := stReturn; // DEL zhangyong 2012/01/04  Redmine#27279
      //------   ADD zhangyong 2012/01/04 Redmine#27279 ------->>>>>
      if (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow -1, -1, 9) = 0) then
        BEGIN
             if ((GetKeyState(VK_TAB) and $8000 = $8000) Or (GetKeyState(VK_DOWN) and $8000 = $8000) Or (GetKeyState(VK_RETURN) and $8000 = $8000) Or (GetKeyState(VK_RIGHT) and $8000 = $8000)) then begin
            if (i_searchPartsMode = ctBLCodeSearch) then
            begin
               Valid := False;
               Exit;
            end;
          end;
        END;
        if (( isEnter) and (not vk_Down_Check) and (not vk_Up_Check)) then begin
              if((not (   GetKeyState( VK_MENU) and $8000 = $8000)) and
                 (not (   GetKeyState( VK_SHIFT) and $8000 = $8000)))
               then begin
                  stReturn := xReturnKeyDown;
                  gridReturnFlg := stReturn;
              end;
        end;
      //------   ADD zhangyong 2012/01/04 Redmine#27279 -------<<<<<
         Exit;
      end;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'GoodsMakerCd');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := IntToStr(salesDetailArray.Csafield1.GoodsMakerCd);

      xAllSecStockInfoProc(HNsGrid1.LogicalRow, False, False); // ADD K2015/04/01 高騁 森川部品個別依頼
   end
   //納品完了予定日
   else if ((ACol = ctCol_DeliGdsCmpltDueDate) and ((ARow mod 2) = 1))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_DeliGdsCmpltDueDate, 1, iRow + 1];

      //>>>2011/03/16
      RCHNB01003UADM.DeliGdsCmpltDueDate[ARow div 2 - 1] := cellValue;
      HNsGrid1.Cells[ACol, ARow] := cellValue;
      HNsGrid1.LogicalCells[ctCol_DeliGdsCmpltDueDate, 1, iRow + 1] := cellValue;
      //<<<2011/03/16
      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'DeliGdsCmpltDueDate');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
   end
   //仕入先コード(売上情報)
   else if ((ACol = ctCol_SupplierCd) and ((ARow mod 2) = 1))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_SupplierCd, 1, iRow + 1];
      originalCellValue := HNsGrid1.OriginalCellValue;

      if (cellValue = originalCellValue) then
      begin
         stReturn := xReturnKeyDown;
         gridReturnFlg := stReturn;
         Exit;
      end;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'SupplierCd');

      if (st = -1) then
      begin
        Valid := False;
      end;

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := IntToStr(salesDetailArray.Csafield1.SupplierCd);

      if (originalCellValue = cellValue) then
      begin
         Valid := False;
      end
      else
      begin
        Valid := True;
      end;
      //画面項目名称設定処理
      xGetDisplayName();   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
   end
   //仕入先コード(仕入情報共通)
   else if ((ACol = ctCol_SupplierCdForStock) and ((ARow mod 2) = 0))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_SupplierCdForStock, 0, iRow + 1];

      originalCellValue := HNsGrid1.OriginalCellValue;

      if (cellValue = originalCellValue) then
      begin
        Exit;
      end;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'SupplierCdForStock');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := intToStr(salesDetailArray.Csafield1.SupplierFormalSync);
      //画面項目名称設定処理
      xGetDisplayName();   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
   end
   //仕入日
   else if ((ACol = ctCol_StockDate) and ((ARow mod 2) = 0))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_StockDate, 0, iRow + 1];

         // ADD 2012/10/15 --- >>>>
         if ('' = cellValue) then
         begin
              SettingToolBarButtonEnabled(HNsGrid1);

              gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

              Value := HNsGrid1.OriginalCellValue;

              st := -1;
         end
         else
         begin
           if (xCheckDateForStockDate(stockDateTime, cellValue)) then
           begin
               Value:=FormatDateTime('yyyy/mm/dd',stockDateTime);

               st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,Value,HNsGrid1.OriginalCellValue,'StockDate');

               SettingToolBarButtonEnabled(HNsGrid1);

               gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

           end
           else
           begin

              gpxMAHNB01013B_ShowStockDateMsg();

              SettingToolBarButtonEnabled(HNsGrid1);

              gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

              Value := HNsGrid1.OriginalCellValue;

              st := -1;

           end;
         end;


         // ADD 2012/10/15 --- <<<<

         // DEL 2012/10/15 --- >>>>
//      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'StockDate');
//
//      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
//      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290
//
//      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
        // DEL 2012/10/15 --- <<<<

   end
   //仕入伝票番号
   else if ((ACol = ctCol_PartySalesSlipNum) and ((ARow mod 2) = 1))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_PartySalesSlipNum, 1, iRow + 1];

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'PartySalesSlipNum');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      // ADD 2010/10/13 --- >>>>
       for rowIndex := ARow to HNsGrid1.RowCount - 1 do
       begin
          //有効行のみ
          if (gpxMAHNB01013B_GridJoinCheck(0, rowIndex div 2 -1 , -1, 9) = 1) then
          begin
            // --- UPD 2012/05/18 No.87 ---------->>>>>
            //// --- UPD 2012/04/10 No.607 ---------->>>>>
            ////if HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, rowIndex] = False then
            //if HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, rowIndex + 1] = False then
            //// --- UPD 2012/04/10 No.607 ----------<<<<<
            if HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, rowIndex] = False then
            // --- UPD 2012/05/18 No.87 ----------<<<<<
            begin
              // --- UPD 2012/05/18 No.87 ---------->>>>>
              //// --- UPD 2012/04/10 No.607 ---------->>>>>
              ////HNsGrid1.GotoCell(ctCol_SupplierCdForStock, rowIndex);
              //HNsGrid1.GotoCell(ctCol_PartySalesSlipNum, rowIndex + 1);
              //// --- UPD 2012/04/10 No.607 ----------<<<<<
              HNsGrid1.GotoCell(ctCol_SupplierCdForStock, rowIndex);
              // --- UPD 2012/05/18 No.87 ----------<<<<<
              Break;
            end
          end
          else
          begin
            // --- ADD 2012/04/10 No.801 ---------->>>>>
            HNsGrid1.SetFocus;
            // --- ADD 2012/04/10 No.801 ----------<<<<<
            if i_searchPartsMode = ctGoodsNoSearch then
            begin
              HNsGrid1.GotoCell(ctCol_GoodsNo, rowIndex);
              Break;
            end
            else if i_searchPartsMode = ctBLCodeSearch then
            begin
              HNsGrid1.GotoCell(ctCol_BLGoodsCode, rowIndex);
              Break;
            end;
          end;
       end;
       // ADD 2010/10/13 --- <<<<
   end
   //ＢＯ区分
   else if ((ACol = ctCol_BoCode) and ((ARow mod 2) = 0))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_BoCode, 0, iRow + 1];

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'BoCode');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := salesDetailArray.Csafield1.BoCode;
   end
   //発注先
   else if ((ACol = ctCol_SupplierCdForOrder) and ((ARow mod 2) = 0))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_SupplierCdForOrder, 0, iRow + 1];

      originalCellValue := HNsGrid1.OriginalCellValue;

      if (cellValue = originalCellValue) then
      begin
         Exit;
      end;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'SupplierCdForOrder');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := IntToStr(salesDetailArray.Csafield1.SupplierCdForOrder);

   end
   //発注数
   else if ((ACol = ctCol_AcceptAnOrderCntForOrder) and ((ARow mod 2) = 0))  then
   begin
      cellValue := HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntForOrder, 0, iRow + 1];

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'AcceptAnOrderCntForOrder');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      xSetDetailRowFormC(salesDetailArray,-1); // ADD 2011/11/01

      Value := FloatToStr(RCHNB01003UADM.AcceptAnOrderCntForOrder[ARow div 2 - 1]);// ADD 2011/11/01
// 2011/01/31 Del >>>
//      xSetReplyTransactionButtonEnable();  // ADD 2010/07/08
// 2011/01/31 Del <<<
   end
   //納品区分
   else if ((ACol = ctCol_DeliveredGoodsDivNm) and ((ARow mod 2) = 0))  then
   begin
      cellValue := Value;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,RCHNB01003UADM.UOEDeliGoodsDiv[ARow div 2 - 1],'DeliveredGoodsDivNm');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      // --- UPD ZHANGKAI 2010/07/01 ---------->>>>>
      //gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo); //DEL 2010/07/01
      gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

      xSetDetailRowFormC(salesDetailArray,-1);

      if st = -1 then
      begin
        checkCodeFlg := True;
        vk_Down_Check := False; //ADD 2010/07/19
        vk_Up_Check := False;  //ADD 2010/07/19
        Valid := False;
      end;

      //Value := salesDetailArray.Csafield1.UOEDeliGoodsDiv; // DEL 2010/07/19
      Value := RCHNB01003UADM.UOEDeliGoodsDiv[ARow div 2 - 1];// ADD 2010/07/19

      Exit;


      // --- UPD ZHANGKAI 2010/07/01 ----------<<<<<

   end
   //Ｈ納品区分
   else if ((ACol = ctCol_FollowDeliGoodsDivNm) and ((ARow mod 2) = 0))  then
   begin
      cellValue := Value;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,RCHNB01003UADM.FollowDeliGoodsDiv[ARow div 2 - 1],'FollowDeliGoodsDivNm');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      // --- UPD ZHANGKAI 2010/07/01 ---------->>>>>
      //gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo); //DEL 2010/07/01
      gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

      xSetDetailRowFormC(salesDetailArray,-1);


      if st = -1 then
      begin
         checkCodeFlg := True;
        vk_Down_Check := False; //ADD 2010/07/19
        vk_Up_Check := False;  //ADD 2010/07/19
        Valid := False;
      end;

      //Value := salesDetailArray.Csafield1.FollowDeliGoodsDiv;// DEL 2010/07/19
      Value := RCHNB01003UADM.FollowDeliGoodsDiv[ARow div 2 - 1];// ADD 2010/07/19

      Exit;

      // --- UPD ZHANGKAI 2010/07/01 ----------<<<<<

   end
   //指定拠点
   else if ((ACol = ctCol_UOEResvdSectionNm) and ((ARow mod 2) = 1))  then
   begin
      cellValue := Value;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,RCHNB01003UADM.UOEResvdSection[ARow div 2 - 1],'UOEResvdSectionNm');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      // --- UPD ZHANGKAI 2010/07/01 ---------->>>>>
      //gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo); //DEL 2010/07/01
      gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

      xSetDetailRowFormC(salesDetailArray,-1);

      if st = -1 then
      begin
        checkCodeFlg := True;
        vk_Down_Check := False; //ADD 2010/07/19
        vk_Up_Check := False;  //ADD 2010/07/19
        Valid := False;
      end;

      //Value := salesDetailArray.Csafield1.UOEResvdSection;// DEL 2010/07/19
      Value := RCHNB01003UADM.UOEResvdSection[ARow div 2 - 1];// ADD 2010/07/19
      Exit;

      // --- UPD ZHANGKAI 2010/07/01 ----------<<<<<
   end
   //明細備考
   else if ((ACol = ctCol_DtlNote) and ((ARow mod 2) = 0)) then
   begin
      cellValue := HNsGrid1.GridCells[ACol,ARow];

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,RCHNB01003UADM.DtlNote[ARow div 2 - 1],'DtlNote');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

   end
   //得意先注番
   else if ((ACol = ctCol_PartySlipNumDtl) and ((ARow mod 2) = 1)) then
   begin
      cellValue := HNsGrid1.GridCells[ACol,ARow];

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,RCHNB01003UADM.PartySlipNumDtl[ARow div 2 - 1],'PartySlipNumDtl');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

   end
   // 商品属性(純正優良)
   else if ((ACol = ctCol_GoodsKindCode) and ((ARow mod 2) = 1)) then
   begin
      cellValue := HNsGrid1.GridCells[ACol,ARow];

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,IntToStr(RCHNB01003UADM.GoodsKindCode[ARow div 2 - 1]),'GoodsKindCode');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

      Value := IntToStr(salesDetailArray.Csafield1.GoodsKindCode);

   end
   //>>>2010/05/30
   //RC区分
   else if ((ACol = ctCol_RecycleDivNm) and ((ARow mod 2) = 0))  then
   begin
      cellValue := Value;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,IntToStr(RCHNB01003UADM.RecycleDiv[ARow div 2 - 1]),'RecycleDivNm');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

   end
   //PS管理番号
   else if ((ACol = ctCol_GoodsMngNo) and ((ARow mod 2) = 1))  then
   begin
      cellValue := Value;

      st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,IntToStr(RCHNB01003UADM.GoodsMngNo[ARow div 2 - 1]),'GoodsMngNo');

      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
   end
   //<<<2010/05/30
   else
   begin
     if (HNsGrid1.OriginalCellValue = Value) then
     begin
        Exit;
     end;
   end;

  xActiveCellButtonEnabledControl(xGridColIndexToName(ARow,ACol),salesRowNo);

  xSetDetailRowFormC(salesDetailArray, salesRowNo);

  // 明細部変更後発生イベント処理
  xSalesSlipDetailInput_DetailChanged(salesRowNo);

  xSlipMemoInfoFormSetting(salesRowNo);

  xSalesPriceChanged;

  //xSettingGridRowFromInputChange();// -- Del 2012/07/30 30182 R.Tachiya --
  xSettingGridRowFromInputChangeBySalesRowNo(salesRowNo);// -- Add 2012/07/30 30182 R.Tachiya --

  // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- >>>>>
  if isOptPermitForKoei then
  begin
     // マウスはセルから移出の場合、エラーが発生の場合、
     if (st <> 0) then
     begin
         salesUnPrcCalcFlg := False;
     end;
  end;
  // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- <<<<<

  if (st = -1) then
  begin
     checkCodeFlg := True;
     vk_Down_Check := False; //ADD 2010/07/19
     vk_Up_Check := False;  //ADD 2010/07/19
     Valid := False;
  end
  // --- UPD 2010/09/09 ---------->>>>>
  else if (st = 3) then
  begin
//    if (not vk_Down_Check and not vk_Up_Check) then
//    begin
//       if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, ARow div 2 * 2] = False) then
//       begin
//        HNsGrid1.FocusCell(ctCol_SalesUnitCost - 1, ARow div 2 * 2);
//       end
//       else
//       begin
//        HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay - 1, ARow div 2 * 2 + 1);
//       end;
//    end
////    else if (not vk_Up_Check) then
////    begin
////       if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, ARow div 2 * 2] = False) then
////       begin
////        HNsGrid1.FocusCell(ctCol_SalesUnitCost - 1, ARow div 2 * 2);
////       end
////       else
////       begin
////        HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay - 1, ARow div 2 * 2 + 1);
////       end;
////    end
//    else
//    begin
//       if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, ARow div 2 * 2] = False) then
//       begin
//        HNsGrid1.FocusCell(ctCol_SalesUnitCost, ARow div 2 * 2 - 1);
//       end
//       else
//       begin
//        HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, ARow div 2 * 2);
//       end;
//    end;
//     checkCodeFlg := True;
//     vk_Down_Check := False;
//     vk_Up_Check := False;
     checkCodeFlg := True;
     vk_Down_Check := False;
     vk_Up_Check := False;
     Valid := False;
  end
  // --- UPD 2010/09/09 ----------<<<<<
  else if (st <> 1) then   //ADD 2010/07/16
  begin
     stReturn := xReturnKeyDown;
     gridReturnFlg := stReturn;
  end;
  // ------------ ADD 2011/07/20 -------------- >>>>>
  // 項目内容が変わった且つ行移動の場合
  if rowChangedFlg or ((salesRowNo - 1) <> (HNsGrid1.Row div 2 - 1)) then
  begin
   gpxMAHNB01013B_StockInfoAdjust();

   gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
   xSetDetailRowFormC(salesDetailArray, salesRowNo);
   if rowChangedFlg then rowChangedFlg := False;
  end;
  // ------------ ADD 2011/07/20 -------------- <<<<<
end;

// --- ADD 2010/07/20 ---------->>>>>
// *************************************************************************
// 編集タイプをセット用のイベント(入力形式の設置)
// *************************************************************************
procedure TForm4.xHNsGrid1CellValidate_Mouse(Sender: TObject; ACol, ARow: Integer;
  var Value: string; var Valid: Boolean);

var
  iRow, iCnt, st ,editStatus: Integer;
  goodsNo,cellValue,beforeCellValue : string;
  salesRowNo : Integer;
  retObj: TObject;
  salesDetailArray: TSalesSlipInputCustomArrayA2;
  originalCellValue: string;
  stReturn, focusFlg: Boolean;
  warehouseCode : Integer;
  begin
      stReturn := True;
     gridReturnFlg := stReturn;
     iRow := ARow div 2 - 1;
     salesRowNo := RCHNB01003UADM.SalesRowNo[iRow];
     cellValue := '';
     Valid := True;
     st := 0;
     originalCellValue := '';
     isCanResize := True;


     if (not KeyPreview) then
     begin
       KeyPreview  := True;
       Exit;
     end;

     checkCodeFlg := False;

     // -------ADD 2010/06/24--------->>>>>
     if ARow < 2 then
     begin
       Exit;
     end;

     // -------ADD 2010/06/24---------<<<<<
     // -------ADD 2010/06/26--------->>>>>
     if GetKeyState(VK_RETURN) and $8000 = $8000 then
     begin
        isEnter := True;
     end
     else
     begin
        isEnter := False;
     end;
     // -------ADD 2010/06/26---------<<<<<
     // -------ADD 2010/07/01--------->>>>>
     if (GetKeyState(VK_DOWN) and $8000 = $8000) then
     begin
        vk_Down_Check := True;
     end
     else
     begin
        vk_Down_Check := False;
     end;
     if (GetKeyState(VK_UP) and $8000 = $8000) then
     begin
        vk_Up_Check := True;
     end
     else
     begin
        vk_Up_Check := False;
     end;
     // -------ADD 2010/07/01---------<<<<<

     if (Value = HNsGrid1.OriginalCellValue) then
     begin
        //
        if ((ACol = ctCol_BLGoodsCode) and ((ARow mod 2) = 0)) then
        begin
           //BLコード
        end
        else if ((ACol = ctCol_GoodsName) and ((ARow mod 2) = 0)) then
        begin
          // ---------ADD 2010/06/02---------->>>>>
          //注釈行
          if ((RCHNB01003UADM.EditStatus[ARow div 2 -1 ] = ctEDITSTATUS_Annotation)
              and (GetKeyState(VK_RETURN) and $8000 = $8000)) then
          begin
            // 最終行
            if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
            begin
              stReturn := False;
              if(not xSetFootControl()) then
              begin
                Valid := False;
              end;
            end
            else
            begin
              // BLコード検索
              if i_searchPartsMode = ctBLCodeSearch then
              begin
                if HNsGrid1.ReadOnly[ctCol_BLGoodsCode,HNsGrid1.Row + 2] = False then
                begin
                  HNsGrid1.FocusCell(ctCol_BLGoodsCode - 1, HNsGrid1.Row + 2);
                  Exit;
                end;
              end;

              // 品番検索
              if i_searchPartsMode = ctGoodsNoSearch then
              begin
                if HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 3] = False then
                begin
                  HNsGrid1.FocusCell(ctCol_GoodsNo - 1, HNsGrid1.Row + 3);
                  Exit;
                end;
              end;
            end;
          end
          //行値引き
          else if ((RCHNB01003UADM.EditStatus[ARow div 2 -1 ] = ctEDITSTATUS_RowDiscount)
              and (GetKeyState(VK_RETURN) and $8000 = $8000)) then
          begin
            Exit;
          end;
          // ---------ADD 2010/06/02----------<<<<<


          stReturn := xReturnKeyDown;
          gridReturnFlg := stReturn;

          if (Value = '') then
          begin
            if (GetKeyState(VK_RETURN) and $8000 = $8000) then
            begin
              Valid := False;
            end;
          end;

          Exit
        end
        else
        begin
           stReturn := xReturnKeyDown;
           gridReturnFlg := stReturn;
           Exit
        end;

     end;

     //ActiveCellが品番の場合
     if ((ACol = ctCol_GoodsNo) and ((ARow mod 2) = 1)) then
     begin
        goodsNo := HNsGrid1.LogicalCells[ctCol_GoodsNo, 1, iRow + 1];

        if (HNsGrid1.OriginalCellValue = goodsNo) then
        begin
           stReturn := xReturnKeyDown;
           gridReturnFlg := stReturn;

           Exit;
        end;

//        st := gpxMAHNB01013B_AfterGoodsNoUpdate(iRow,goodsNo,salesRowNo);  //DEL 連番729 2011/08/18
        st := gpxMAHNB01013B_AfterGoodsNoUpdate(iRow,goodsNo,0,salesRowNo);  //ADD 連番729 2011/08/18

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        xSetDetailRowFormC(salesDetailArray,-1);

        Value := RCHNB01003UADM.GoodsNo[salesRowNo - 1];

        // --- UPD 2010/06/02 ---------->>>>>
        if (st = 0) then
        begin
          xSettingGrid;

          xActiveCellButtonEnabledControl(xGridColIndexToName(ARow,ACol),salesRowNo);

          // 明細部変更後発生イベント処理
          xSalesSlipDetailInput_DetailChanged(salesRowNo);

          xSlipMemoInfoFormSetting(salesRowNo);

          xSalesPriceChanged;

          // [品名＝空白]
          // 品番⇒品名へ移動
          if (HNsGrid1.Cells[ctCol_GoodsName,HNsGrid1.Row - 1] = '') then
          begin
            HNsGrid1.FocusCell(ctCol_GoodsName - 1, HNsGrid1.Row - 1);
          end
          else
          begin
            // 商品情報取得成功
            if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Estimate) then
            begin
              HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay -1,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);
            end
            else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_UnitPriceEstimate) then
            begin
               HNsGrid1.LogicalFocusCell(ctCol_SalesRate -1,ctRow_SalesRate,HNsGrid1.LogicalRow);
            end
            else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Sales) then
            begin
               //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);
               HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay - 1,HNsGrid1.LogicalRow * 2 + ctRow_ShipmentCntDisplay);
            end
            else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Shipment) then
            begin
               HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay -1,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);
            end;
          end;
        end
        else
        begin
           Valid := False;
        end;
        // --- UPD 2010/06/02 ----------<<<<<

        Exit;

     end
     // BLコード
     else if ((ACol = ctCol_BLGoodsCode) and ((ARow mod 2) = 0)) then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_BLGoodsCode, 0, iRow + 1];

        if (HNsGrid1.OriginalCellValue = cellValue) then
        begin
          if (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow -1, -1, 9) = 0) then
          BEGIN
            if (GetKeyState(VK_DOWN) and $8000 = $8000) Or (GetKeyState(VK_RETURN) and $8000 = $8000) Or (GetKeyState(VK_RIGHT) and $8000 = $8000) then begin
              if (i_searchPartsMode = ctBLCodeSearch) then
              begin
                 Valid := False;
                 Exit;
              end;
            end;

          END
          // --- UPD 2010/05/31 ---------->>>>>
  //         Value := IntToStr(RCHNB01003UADM.BLGoodsCode[iRow]);
  //         if (RCHNB01003UADM.BLGoodsCode[iRow] <> 0) then
  //         begin
  //           //xReturnKeyDown;
  //         end;
          else
          begin
  //           if (GetKeyState(VK_RETURN) and $8000 = $8000) and (i_searchPartsMode = ctBLCodeSearch)then
  //           begin
  //              Valid := False;
  //              Exit;
  //           end;
          end;
          // --- UPD 2010/05/31 ----------<<<<<

           Exit;
        end;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,IntToStr(RCHNB01003UADM.BLGoodsCode[ARow div 2 - 1]),'BLGoodsCode');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        xSetDetailRowFormC(salesDetailArray,-1);

        Value := IntToStr(RCHNB01003UADM.BLGoodsCode[iRow]);

        if (st = 0) then
        begin
           xSettingGrid;
        end
        else
        begin
           Valid := False;
        end;

        xActiveCellButtonEnabledControl(xGridColIndexToName(ARow,ACol),salesRowNo);

        // 明細部変更後発生イベント処理
        xSalesSlipDetailInput_DetailChanged(salesRowNo);

        xSlipMemoInfoFormSetting(salesRowNo);

        xSalesPriceChanged;

        if (st = 0) then
        begin
          // 商品情報取得成功
          if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Estimate) then
          begin
            HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay -1,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);
          end
          else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_UnitPriceEstimate) then
          begin
             HNsGrid1.LogicalFocusCell(ctCol_SalesRate -1,ctRow_SalesRate,HNsGrid1.LogicalRow);
          end
          else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Sales) then
          begin
             HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay -1,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);
          end
          else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Shipment) then
          begin
             HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay -1,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);
          end;
        end;

        Exit;

     end
     //品名
     else if ((ACol = ctCol_GoodsName) and ((ARow mod 2) = 0))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_GoodsName, 0, iRow + 1];

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'GoodsName');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

        Value := salesDetailArray.Csafield1.GoodsName;


     end
     //倉庫コード
     else if ((ACol = ctCol_WarehouseCode) and ((ARow mod 2) = 0))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_WarehouseCode, 0, iRow + 1];

        originalCellValue := HNsGrid1.OriginalCellValue;

        if (cellValue = originalCellValue) then
        begin
           stReturn := xReturnKeyDown;
           gridReturnFlg := stReturn;

           Exit;
        end;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'WarehouseCode');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
        //画面項目名称設定処理
        xGetDisplayName();   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
        warehouseCode := StrToIntDef(salesDetailArray.Csafield1.WarehouseCode,0);

        if (warehouseCode <> 0) then
        begin
          Value := IntToStr(warehouseCode);
        end
        else
        begin
          Value := '';
        end;
     end
     //販売区分
     else if ((ACol = ctCol_SalesCode) and ((ARow mod 2) = 0))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_SalesCode, 0, iRow + 1];

        originalCellValue := HNsGrid1.OriginalCellValue;

        if (cellValue = originalCellValue) then
        begin
           stReturn := xReturnKeyDown;
           gridReturnFlg := stReturn;

           Exit;
        end;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'SalesCode');

      // -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
//        // -----ADD 2011/12/01 YANGMJ REDMINE#8344 ----->>>>>
//        if st = -1 then
//        begin
//          checkSaleCd :=True;
//          HNsGrid1.SetFocus;
//          HNsGrid1.GotoCell(ctCol_SalesCode, iRow + 1);
//          f3_enableFlg := True;
//          dateTimeEigth := Now();
//          i_InputType := 0;
//        end;
//        // -----ADD 2011/12/01 YANGMJ REDMINE#8344 -----<<<<<
       // -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

        Value := IntToStr(salesDetailArray.Csafield1.SalesCode);

        //画面項目名称設定処理
        xGetDisplayName();   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応

     end
     //出荷数
     else if ((ACol = ctCol_ShipmentCntDisplay) and ((ARow mod 2) = 1))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_ShipmentCntDisplay, 1, iRow + 1];

        originalCellValue := HNsGrid1.OriginalCellValue;

        if (cellValue = originalCellValue) then
        begin
           stReturn := xReturnKeyDown;
           gridReturnFlg := stReturn;

           Exit;
        end;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'ShipmentCntDisplay');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

        Value := FloatToStr(salesDetailArray.Csafield1.ShipmentCntDisplay);

// 2011/01/31 Del >>>
//        xSetReplyTransactionButtonEnable();  // ADD 2010/07/08
// 2011/01/31 Del <<<
     end
     //受注数
     else if ((ACol = ctCol_AcceptAnOrderCntDisplay) and ((ARow mod 2) = 0))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntDisplay, 0, iRow + 1];

        originalCellValue := HNsGrid1.OriginalCellValue;

        if (cellValue = originalCellValue) then
        begin
           stReturn := xReturnKeyDown;
           gridReturnFlg := stReturn;

           Exit;
        end;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'AcceptAnOrderCntDisplay');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

        Value := FloatToStr(salesDetailArray.Csafield1.AcceptAnOrderCnt);
     end
     //定価
     else if ((ACol = ctCol_ListPriceDisplay) and ((ARow mod 2) = 1))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_ListPriceDisplay, 1, iRow + 1];

        originalCellValue := HNsGrid1.OriginalCellValue;

        if (cellValue = originalCellValue) then
        begin
           stReturn := xReturnKeyDown;
           gridReturnFlg := stReturn;

           Exit;
        end;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'ListPriceDisplay');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
     end
     //売単価
     else if ((ACol = ctCol_SalesUnPrcDisplay) and ((ARow mod 2) = 1))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_SalesUnPrcDisplay, 1, iRow + 1];

        originalCellValue := HNsGrid1.OriginalCellValue;

        if (cellValue = originalCellValue) then
        begin
           stReturn := xReturnKeyDown;
           gridReturnFlg := stReturn;
           Exit;
        end;


        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'SalesUnPrcDisplay');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

        Value := FloatToStr(salesDetailArray.Csafield1.SalesUnPrcTaxExcFl);  // ADD 2010/07/14
     end
     //売価率
     else if ((ACol = ctCol_SalesRate) and ((ARow mod 2) = 1))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_SalesRate, 1, iRow + 1];

        originalCellValue := HNsGrid1.OriginalCellValue;

        if (cellValue = originalCellValue) then
        begin
           stReturn := xReturnKeyDown;
           gridReturnFlg := stReturn;
           Exit;
        end;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'SalesRate');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

        Value := FloatToStr(salesDetailArray.Csafield1.SalesRate);  // ADD 2010/07/14
     end
     //原単価
     else if ((ACol = ctCol_SalesUnitCost) and ((ARow mod 2) = 0))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_SalesUnitCost, 0, iRow + 1];

        originalCellValue := HNsGrid1.OriginalCellValue;

        if (cellValue = originalCellValue) then
        begin
           stReturn := xReturnKeyDown;
           gridReturnFlg := stReturn;

           Exit;
        end;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'SalesUnitCost');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

        Value := FloatToStr(salesDetailArray.Csafield1.SalesUnitCost);
     end
     //原価率
     else if ((ACol = ctCol_CostRate) and ((ARow mod 2) = 0))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_CostRate, 0, iRow + 1];

        originalCellValue := HNsGrid1.OriginalCellValue;

        if (cellValue = originalCellValue) then
        begin

           stReturn := xReturnKeyDown;
           gridReturnFlg := stReturn;
           Exit;
        end;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'CostRate');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

        Value := FloatToStr(salesDetailArray.Csafield1.CostRate);  // ADD 2010/07/14
     end
     //売上金額
     else if ((ACol = ctCol_SalesMoneyDisplay) and ((ARow mod 2) = 1))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_SalesMoneyDisplay, 1, iRow + 1];

        originalCellValue := HNsGrid1.OriginalCellValue;

        if (cellValue = originalCellValue) then
        begin
           stReturn := xReturnKeyDown;
           gridReturnFlg := stReturn;
           Exit;
        end;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,IntToStr(RCHNB01003UADM.SalesMoneyTaxExc[ARow div 2 - 1]),'SalesMoneyDisplay');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
        if (st = -1) then
        begin
           Value := originalCellValue;
        end;
     end
     //原価金額
     else if ((ACol = ctCol_SalesMoneyDisplay) and ((ARow mod 2) = 0))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_SalesMoneyDisplay, 0, iRow + 1];

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'Cost');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
     end
     //メーカーコード
     else if ((ACol = ctCol_GoodsMakerCd) and ((ARow mod 2) = 1))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_GoodsMakerCd, 1, iRow + 1];

        originalCellValue := HNsGrid1.OriginalCellValue;

        if (cellValue = originalCellValue) then
        begin
           stReturn := xReturnKeyDown;
           gridReturnFlg := stReturn;

           Exit;
        end;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'GoodsMakerCd');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

        Value := IntToStr(salesDetailArray.Csafield1.GoodsMakerCd);
     end
     //納品完了予定日
     else if ((ACol = ctCol_DeliGdsCmpltDueDate) and ((ARow mod 2) = 1))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_DeliGdsCmpltDueDate, 1, iRow + 1];

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'DeliGdsCmpltDueDate');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
     end
     //仕入先コード(売上情報)
     else if ((ACol = ctCol_SupplierCd) and ((ARow mod 2) = 1))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_SupplierCd, 1, iRow + 1];
        originalCellValue := HNsGrid1.OriginalCellValue;

        if (cellValue = originalCellValue) then
        begin
           stReturn := xReturnKeyDown;
           gridReturnFlg := stReturn;
           Exit;
        end;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'SupplierCd');

        if (st = -1) then
        begin
          Valid := False;
        end;

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

        Value := IntToStr(salesDetailArray.Csafield1.SupplierCd);
        //画面項目名称設定処理
        xGetDisplayName();   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応

        if (originalCellValue = cellValue) then
        begin
           Valid := False;
        end
        else
        begin
          Valid := True;
        end;
     end
     //仕入先コード(仕入情報共通)
     else if ((ACol = ctCol_SupplierCdForStock) and ((ARow mod 2) = 0))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_SupplierCdForStock, 0, iRow + 1];

        originalCellValue := HNsGrid1.OriginalCellValue;

        if (cellValue = originalCellValue) then
        begin
          Exit;
        end;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'SupplierCdForStock');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

        Value := intToStr(salesDetailArray.Csafield1.SupplierFormalSync);
        //画面項目名称設定処理
        xGetDisplayName();   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
     end
     //仕入日
     else if ((ACol = ctCol_StockDate) and ((ARow mod 2) = 0))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_StockDate, 0, iRow + 1];

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'StockDate');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
     end
     //仕入伝票番号
     else if ((ACol = ctCol_PartySalesSlipNum) and ((ARow mod 2) = 1))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_PartySalesSlipNum, 1, iRow + 1];

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'PartySalesSlipNum');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
     end
     //ＢＯ区分
     else if ((ACol = ctCol_BoCode) and ((ARow mod 2) = 0))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_BoCode, 0, iRow + 1];

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'BoCode');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

        Value := salesDetailArray.Csafield1.BoCode;
     end
     //発注先
     else if ((ACol = ctCol_SupplierCdForOrder) and ((ARow mod 2) = 0))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_SupplierCdForOrder, 0, iRow + 1];

        originalCellValue := HNsGrid1.OriginalCellValue;

        if (cellValue = originalCellValue) then
        begin
           Exit;
        end;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'SupplierCdForOrder');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

        Value := IntToStr(salesDetailArray.Csafield1.SupplierCdForOrder);

     end
     //発注数
     else if ((ACol = ctCol_AcceptAnOrderCntForOrder) and ((ARow mod 2) = 0))  then
     begin
        cellValue := HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntForOrder, 0, iRow + 1];

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,HNsGrid1.OriginalCellValue,'AcceptAnOrderCntForOrder');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

// 2011/01/31 Del >>>
//        xSetReplyTransactionButtonEnable();  // ADD 2010/07/08
// 2011/01/31 Del <<<
     end
     //納品区分
     else if ((ACol = ctCol_DeliveredGoodsDivNm) and ((ARow mod 2) = 0))  then
     begin
        cellValue := Value;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,RCHNB01003UADM.UOEDeliGoodsDiv[ARow div 2 - 1],'DeliveredGoodsDivNm');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        // --- UPD ZHANGKAI 2010/07/01 ---------->>>>>
        //gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo); //DEL 2010/07/01
        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        xSetDetailRowFormC(salesDetailArray,-1);

        if st = -1 then
        begin
          checkCodeFlg := True;
          vk_Down_Check := False; //ADD 2010/07/19
          vk_Up_Check := False;  //ADD 2010/07/19
          Valid := False;
        end;

        //Value := salesDetailArray.Csafield1.UOEDeliGoodsDiv; // DEL 2010/07/19
        Value := RCHNB01003UADM.UOEDeliGoodsDiv[ARow div 2 - 1];// ADD 2010/07/19

        Exit;


        // --- UPD ZHANGKAI 2010/07/01 ----------<<<<<

     end
     //Ｈ納品区分
     else if ((ACol = ctCol_FollowDeliGoodsDivNm) and ((ARow mod 2) = 0))  then
     begin
        cellValue := Value;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,RCHNB01003UADM.FollowDeliGoodsDiv[ARow div 2 - 1],'FollowDeliGoodsDivNm');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        // --- UPD ZHANGKAI 2010/07/01 ---------->>>>>
        //gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo); //DEL 2010/07/01
        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        xSetDetailRowFormC(salesDetailArray,-1);


        if st = -1 then
        begin
           checkCodeFlg := True;
          vk_Down_Check := False; //ADD 2010/07/19
          vk_Up_Check := False;  //ADD 2010/07/19
          Valid := False;
        end;

        //Value := salesDetailArray.Csafield1.FollowDeliGoodsDiv;// DEL 2010/07/19
        Value := RCHNB01003UADM.FollowDeliGoodsDiv[ARow div 2 - 1];// ADD 2010/07/19

        Exit;

        // --- UPD ZHANGKAI 2010/07/01 ----------<<<<<

     end
     //指定拠点
     else if ((ACol = ctCol_UOEResvdSectionNm) and ((ARow mod 2) = 1))  then
     begin
        cellValue := Value;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,RCHNB01003UADM.UOEResvdSection[ARow div 2 - 1],'UOEResvdSectionNm');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        // --- UPD ZHANGKAI 2010/07/01 ---------->>>>>
        //gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo); //DEL 2010/07/01
        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        xSetDetailRowFormC(salesDetailArray,-1);

        if st = -1 then
        begin
          checkCodeFlg := True;
          vk_Down_Check := False; //ADD 2010/07/19
          vk_Up_Check := False;  //ADD 2010/07/19
          Valid := False;
        end;

        //Value := salesDetailArray.Csafield1.UOEResvdSection;// DEL 2010/07/19
        Value := RCHNB01003UADM.UOEResvdSection[ARow div 2 - 1];// ADD 2010/07/19
        Exit;

        // --- UPD ZHANGKAI 2010/07/01 ----------<<<<<
     end
     //明細備考
     else if ((ACol = ctCol_DtlNote) and ((ARow mod 2) = 0)) then
     begin
        cellValue := HNsGrid1.GridCells[ACol,ARow];

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,RCHNB01003UADM.DtlNote[ARow div 2 - 1],'DtlNote');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

     end
     //得意先注番
     else if ((ACol = ctCol_PartySlipNumDtl) and ((ARow mod 2) = 1)) then
     begin
        cellValue := HNsGrid1.GridCells[ACol,ARow];

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,RCHNB01003UADM.PartySlipNumDtl[ARow div 2 - 1],'PartySlipNumDtl');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

     end
     // 商品属性(純正優良)
     else if ((ACol = ctCol_GoodsKindCode) and ((ARow mod 2) = 1)) then
     begin
        cellValue := HNsGrid1.GridCells[ACol,ARow];

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,IntToStr(RCHNB01003UADM.GoodsKindCode[ARow div 2 - 1]),'GoodsKindCode');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

        Value := IntToStr(salesDetailArray.Csafield1.GoodsKindCode);

     end
     //>>>2010/05/30
     //RC区分
     else if ((ACol = ctCol_RecycleDivNm) and ((ARow mod 2) = 0))  then
     begin
        cellValue := Value;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,IntToStr(RCHNB01003UADM.RecycleDiv[ARow div 2 - 1]),'RecycleDivNm');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

     end
     //PS管理番号
     else if ((ACol = ctCol_GoodsMngNo) and ((ARow mod 2) = 1))  then
     begin
        cellValue := Value;

        st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,cellValue,IntToStr(RCHNB01003UADM.GoodsMngNo[ARow div 2 - 1]),'GoodsMngNo');

        //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
        SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

        gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
     end
     //<<<2010/05/30
     else
     begin
       if (HNsGrid1.OriginalCellValue = Value) then
       begin
          Exit;
       end;
     end;

    xActiveCellButtonEnabledControl(xGridColIndexToName(ARow,ACol),salesRowNo);

    xSetDetailRowFormC(salesDetailArray, salesRowNo);

    // 明細部変更後発生イベント処理
    xSalesSlipDetailInput_DetailChanged(salesRowNo);

    xSlipMemoInfoFormSetting(salesRowNo);

    xSalesPriceChanged;

    xSettingGridRowFromInputChange();

    if (st = -1) then
    begin
       checkCodeFlg := True;
       vk_Down_Check := False; //ADD 2010/07/19
       vk_Up_Check := False;  //ADD 2010/07/19
       Valid := False;
    end
    else if (st <> 1) then   //ADD 2010/07/16
    begin
       stReturn := xReturnKeyDown;
       gridReturnFlg := stReturn;
    end;
  end;
// --- ADD 2010/07/20 ----------<<<<<

// *************************************************************************
//  明細グリッドエンターイベント
// *************************************************************************
procedure TForm4.HNsGrid1Enter(Sender: TObject);
var
  salesSlip: TSalesSlip;
  NextCtrl: TWinControl;
begin
// ---------DEL 2010/06/02--------->>>>>
//  gpxMAHNB01012B_GetSalesSlip(salesSlip);
//
//  if salesSlip.SalesGoodsCd = 0 then
//  begin
//    if i_searchPartsMode = ctGoodsNoSearch then
//    begin
//      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1] = False) then
//      begin
//         HNsGrid1.FocusCell(ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1);
//      end;
//    end else
//    begin
//      if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2] = False) then
//      begin
//        HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2);
//      end;
//    end;
//  end else
//  begin
//    HNsGrid1.FocusCell(xColNameToIndex('SalesMoneyDisplay'), HNsGrid1.LogicalRow * 2);
//  end;
//
//  xMoveNextAllowEditCell;
//
//  HNsGrid1.ShowInplaceEdit;

  // --- ADD 2011/12/21 tianjw Redmine#27290 ----------->>>>>
  dateUpdateBottun.Enabled := False;  //日付修正
  DateUpdatebtn.Enabled := False; //日付修正
  // --- ADD 2011/12/21 tianjw Redmine#27290 -----------<<<<<
  xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼
  // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
  //値引モード
  if (discountAllLineflag) then
  begin
    copySlipButton.Enabled := False;  //伝票複写(P)
    toolCopySlipButton.Enabled := False;  //伝票複写(P)
    shipmentAddUpButton.Enabled := False; // 貸出計上(I)
    toolMenu_shipmentAddUpButton.Enabled := False;  // 貸出計上(I)
    acceptAnOrderAddUpButton.Enabled := False;// 受注計上(H)
    toolMenu_acceptAnOrderAddUpButton.Enabled := False; // 受注計上(H)
    estimateAddUpButton.Enabled := False; // 見積計上(Q)
    toolMenu_estimateAddUpButton.Enabled := False; // 見積計上(Q)
  end;
  // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
end;

// *************************************************************************
//  明細グリッドリーヴイベント
// *************************************************************************
procedure TForm4.HNsGrid1Exit(Sender: TObject);
begin
   xStatusBarMessageSetting('');

   // --- DEL  30757 佐々木　貴英 K2015/10/05 ----------------->>>>>
   //// --- ADD K2015/09/17 紀飛 #Redmine47186障害一覧#53 「回答取込」ボタン活性状態の問題----->>>>>
   //UOEDataGet.Enabled := False;
   //toolMenu_UOEDataGet.Enabled := False;
   //// --- ADD K2015/09/17 紀飛 #Redmine47186障害一覧#53 「回答取込」ボタン活性状態の問題-----<<<<<
   // --- DEL  30757 佐々木　貴英 K2015/10/05 -----------------<<<<<

   // --- ADD 2011/12/21 tianjw Redmine#27290 ----------->>>>>
  dateUpdateBottun.Enabled := True;  //日付修正
  DateUpdatebtn.Enabled := True; //日付修正
  // --- ADD 2011/12/21 tianjw Redmine#27290 -----------<<<<<

  xAllSecStockInfoProc(HNsGrid1.LogicalRow, False, False); // ADD K2015/04/01 高騁 森川部品個別依頼
  // --- ADD 黄興貴 K2015/06/16 Redmine#46406 No.4の対応 ---------->>>>>
  // --- ADD  譚洪 2015/10/26 Redmine#47609 ---------->>>>>
  if(isOptPermitForFuJi)then
  begin
  // --- ADD  譚洪 2015/10/26 Redmine#47609 ----------<<<<<
  UOEDataGet.Enabled := False;
  toolMenu_UOEDataGet.Enabled := False;
  end; // ADD  譚洪 2015/10/26 Redmine#47609
  // --- ADD 黄興貴 K2015/06/16 Redmine#46406 No.4の対応 ----------<<<<<

  // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
  //値引モード
  if (discountAllLineflag) then
  begin
      copySlipButton.Enabled := True;  //伝票複写(P)
      toolCopySlipButton.Enabled := True;  //伝票複写(P)
      shipmentAddUpButton.Enabled := True; // 貸出計上(I)
      toolMenu_shipmentAddUpButton.Enabled := True;  // 貸出計上(I)
      acceptAnOrderAddUpButton.Enabled := True;// 受注計上(H)
      toolMenu_acceptAnOrderAddUpButton.Enabled := True; // 受注計上(H)
      estimateAddUpButton.Enabled := True; // 見積計上(Q)
      toolMenu_estimateAddUpButton.Enabled := True; // 見積計上(Q)
  end;
  // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
end;

// *************************************************************************
//  ステータスバーメッセージ表示イベント
// *************************************************************************
procedure TForm4.xStatusBarMessageSetting(barMessage : string);
begin
   StatusPaneMessage.Caption := barMessage;
end;

// *************************************************************************
// Returnキーダウン処理
// *************************************************************************
function TForm4.xReturnKeyDown(): Boolean;
var srResult : Boolean;
    OldRowLogic: Integer;
    OldCol, OldRow:Integer;// ADD 2010/06/02
begin
   srResult := True;
   OldRowLogic := HNsGrid1.LogicalRow;
   OldCol := HNsGrid1.Col;// ADD 2010/06/02
   OldRow := HNsGrid1.Row; // ADD 2010/06/02
   if (GetKeyState(VK_RETURN) and $8000 = $8000) then
   begin
     if (hNsGrid1EnterShow = True) then
     begin
        hNsGrid1EnterShow := False;
        Exit;
     end;
   end
   else if (GetKeyState(VK_TAB) and $8000 = $8000) then
   begin
     if (hNsGrid1EnterShow = True) then
     begin
        hNsGrid1EnterShow := False;
        Exit;
     end;
   end
   // ---------ADD 2010/07/01-------->>>>>
   else if isEnter then
   begin
     //
   end
   // ---------ADD 2010/07/01--------<<<<<
   else
   begin
        Exit;
   end;

   // --- UPD 2010/05/31 ---------->>>>>

//   //BLコード
//   if (HNsGrid1.Col = ctCol_BLGoodsCode) and ((HNsGrid1.Row mod 2) = 0) then
//   begin
//      if (i_searchPartsMode <> ctBLCodeSearch) then
//      begin
//         srResult := xMoveReturnCell(False);
//      end
//      else
//      begin
//         if (HNsGrid1.Cells[HNsGrid1.Col,HNsGrid1.Row] <> '') then
//         begin
//           if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Estimate) then
//           begin
//              HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay - 1, HNsGrid1.Row + 1);
//           end
//           else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_UnitPriceEstimate) then
//           begin
//             HNsGrid1.FocusCell(ctCol_SalesRate - 2, HNsGrid1.Row + 1);
//           end
//           else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Sales) then
//           begin
//              HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay - 1, HNsGrid1.Row + 1);
//           end
//           else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Shipment) then
//           begin
//              HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay - 1, HNsGrid1.Row + 1);
//           end;
//
//         end;
//      end;
//   end
//   //品番
//   else if ((HNsGrid1.Col = ctCol_GoodsNo) and ((HNsGrid1.Row mod 2) = 1)) then
//   begin
//       if (HNsGrid1.Cells[HNsGrid1.Col,HNsGrid1.Row] <> '') then
//       begin
//          // [品名＝空白]
//          // 品番⇒品名へ移動
//          if (HNsGrid1.Cells[ctCol_GoodsName,HNsGrid1.Row - 1] = '') then
//          begin
//            HNsGrid1.FocusCell(ctCol_GoodsName - 1, HNsGrid1.Row - 1);
//          end
//          else
//          begin
//            srResult := xMoveReturnCell(False);
//          end;
//
//       end
//       else
//       begin
//         srResult := xMoveReturnCell(False);
//       end;
//   end
//
//    // 売上金額
//    // --- ADD 2010/05/04 ---------->>>>>
////    if (this._isOverFlow)
////    {
////        this._isOverFlow = false;
////    }
////    else
////    {
////        // --- ADD 2010/05/04 ----------<<<<<
////
////        //-----------------------------------------------------
////        // 商品区分
////        //-----------------------------------------------------
////        switch ((SalesSlipInputAcs.SalesGoodsCd)this._salesSlipInputAcs.SalesSlip.SalesGoodsCd)
////        {
////            case SalesSlipInputAcs.SalesGoodsCd.Goods:
////                canMove = this.MoveReturnCell();
////                break;
////            default:
////                int afterRowIndex = cell.Row.Index + 1;
////                // 不正移動チェック
////                if (afterRowIndex > this.uGrid_Details.Rows.Count - 1) afterRowIndex = cell.Row.Index;
////
////                this.uGrid_Details.ActiveCell = this.uGrid_Details.Rows[afterRowIndex].Cells[this._salesDetailDataTable.SalesMoneyDisplayColumn.ColumnName];
////                canMove = this.MoveReturnCell(true);
////                break;
////        }
////    }// ADD 2010/05/04
//
//   //ＢＯ区分
//   else if ((HNsGrid1.Col = ctCol_BoCode) and ((HNsGrid1.Row mod 2) = 0)) then
//   begin
//       if (HNsGrid1.SelectedCells[ctCol_BoCode, HNsGrid1.Row] = True) then
//       begin
//         srResult := xMoveReturnCell(False);
//       end;
//
//   end
//   //発注先
//   else if ((HNsGrid1.Col = ctCol_SupplierCdForOrder) and ((HNsGrid1.Row mod 2) = 0)) then
//   begin
//       if (HNsGrid1.SelectedCells[ctCol_SupplierCdForOrder, HNsGrid1.Row] = True) then
//       begin
//         srResult := xMoveReturnCell(False);
//       end;
//
//   end
//   //発注数
//      else if ((HNsGrid1.Col = ctCol_AcceptAnOrderCntForOrder) and ((HNsGrid1.Row mod 2) = 0)) then
//   begin
//       if (HNsGrid1.SelectedCells[ctCol_AcceptAnOrderCntForOrder, HNsGrid1.Row] = True) then
//       begin
//         srResult := xMoveReturnCell(False);
//       end;
//
//   end
//   //品名
//   else if ((HNsGrid1.Col = ctCol_GoodsName) and ((HNsGrid1.Row mod 2) = 0)) then
//   begin
//      // 行値引の場合のみフォーカス直接指定
//      if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 1] = ctEDITSTATUS_RowDiscount) then
//      begin
//         if (HNsGrid1.LogicalReadOnly[ctCol_SalesCode, ctRow_SalesCode, HNsGrid1.LogicalRow] = False) then
//         begin
//            if (HNsGrid1.Cells[ctCol_GoodsName,HNsGrid1.Row] = '') then
//            begin
//              HNsGrid1.LogicalFocusCell(ctCol_SalesCode, ctRow_SalesCode, HNsGrid1.LogicalRow);
//            end
//            else
//            begin
//              HNsGrid1.LogicalFocusCell(ctCol_SalesCode - 1, ctRow_SalesCode, HNsGrid1.LogicalRow);
//            end;
//
//         end
//         else
//         begin
//            HNsGrid1.LogicalFocusCell(ctCol_SalesMoneyDisplay, ctRow_SalesMoneyDisplay, HNsGrid1.LogicalRow);
//         end;
//      end
//      else
//      begin
//        if (HNsGrid1.Cells[HNsGrid1.Col,HNsGrid1.Row] <> '') then
//        begin
//           srResult := xMoveReturnCell(False);
//        end;
//      end;
//   end
//   //販売区分
//   else if ((HNsGrid1.Col = ctCol_SalesCode) and ((HNsGrid1.Row mod 2) = 0)) then
//   begin
//     // 行値引の場合のみフォーカス直接指定
//     if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 1] = ctEDITSTATUS_RowDiscount) then
//     begin
//       HNsGrid1.LogicalFocusCell(ctCol_SalesMoneyDisplay - 1, ctRow_SalesMoneyDisplay, HNsGrid1.LogicalRow);
//     end
//     else
//     begin
//        srResult := xMoveReturnCell(False);
//     end;
//
//   end
//   //明細備考
//   else if ((HNsGrid1.Col = ctCol_DtlNote) and ((HNsGrid1.Row mod 2) = 0)) then
//   begin
//      if (HNsGrid1.LogicalReadOnly[ctCol_CmpltSalesRowNo, ctRow_CmpltSalesRowNo, HNsGrid1.LogicalRow] = False) then
//      begin
//         HNsGrid1.LogicalFocusCell(ctCol_CmpltSalesRowNo - 1, ctRow_CmpltSalesRowNo, HNsGrid1.LogicalRow);
//      end
//      else if (HNsGrid1.LogicalReadOnly[ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl, HNsGrid1.LogicalRow] = False) then
//      begin
//         HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl - 1, ctRow_PartySlipNumDtl, HNsGrid1.LogicalRow);
//      end
//      else if (HNsGrid1.LogicalReadOnly[xColNameToIndex('DeliGdsCmpltDueDate'), xRowNameToIndex('DeliGdsCmpltDueDate'), HNsGrid1.LogicalRow] = False) then
//      begin
//        HNsGrid1.LogicalFocusCell(xColNameToIndex('DeliGdsCmpltDueDate') - 1, xRowNameToIndex('DeliGdsCmpltDueDate'), HNsGrid1.LogicalRow);
//      end
//      else
//      begin
//         xMoveReturnCell(False);
//      end;
//
//   end
//   else
//   begin
//      srResult := xMoveReturnCell(False);
//   end;

  //有効行
  if (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow -1, -1, 9) = 1) then
  begin
     // --- ADD 2010/06/02 ---------->>>>>
     //有効行(行値引き)
     if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 1] = ctEDITSTATUS_RowDiscount) then
     begin
        //品名
        //販売区分
        //売上金額
        if ((HNsGrid1.Col = ctCol_SalesMoneyDisplay) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
        begin
          // 最終行
          if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
          begin
              srResult := False;
          end
          else
          begin
            // --- ADD 2014/12/18 Wakita ---------->>>>>
            //SHIFTキー押下時はBLコードや品番項目に移動しないので以下の処理を通らないように修正
            if not (GetKeyState(VK_SHIFT) < 0) then
            begin
            // --- ADD 2014/12/18 Wakita ----------<<<<<
            if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_enter)) then
            begin
               HNsGrid1.FocusCell(ctCol_GoodsName- 1, (HNsGrid1.LogicalRow + 1) * 2);  // 次行品名
            end;
            // --- ADD 2014/12/18 Wakita ---------->>>>>
            end;
            // --- ADD 2014/12/18 Wakita ----------<<<<<
          end;
        end;

     end
     //有効行(注釈)
     else if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 1] = ctEDITSTATUS_Annotation) then
     begin
        //品名
        if ((HNsGrid1.Col = ctCol_GoodsName) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
        begin
          // 最終行
          if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
          begin
              srResult := False;
          end
          //---ADD 2010/07/19---------->>>>>
          else
          begin
            // --- ADD 2013/06/05 Wakita ---------->>>>>
            //SHIFTキー押下時はBLコードや品番項目に移動しないので以下の処理を通らないように修正
            if not (GetKeyState(VK_SHIFT) < 0) then
            begin
            // --- ADD 2013/06/05 Wakita ----------<<<<<
            if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_enter)) then
            begin
              //品番検索
              if (i_searchPartsMode = ctGoodsNoSearch) then
              begin
                HNsGrid1.FocusCell(ctCol_GoodsNo - 1, (HNsGrid1.LogicalRow + 1) * 2 + 1);
              end else
              //BLコード検索
              begin
                HNsGrid1.FocusCell(ctCol_BLGoodsCode - 1, (HNsGrid1.LogicalRow + 1) * 2);
              end;
            end;
            // --- ADD 2013/06/05 Wakita ---------->>>>>
            end;
            // --- ADD 2013/06/05 Wakita ----------<<<<<
          end;
          //---ADD 2010/07/19----------<<<<<
        end;
     end
     else
     begin
       // --- ADD 2010/06/02 ----------<<<<<
       //新規登録
       if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and (RCHNB01003UADM.SalesSlipNum[HNsGrid1.LogicalRow - 1] = '0')then
       begin
          //品番検索
          if (i_searchPartsMode = ctGoodsNoSearch) then
          begin
             //BLコード
             //品名
             //品番
             //純優
             //メーカー
             //仕入先
             //受注数
             //出荷数
             //販売区分
             //標準価格
             //原価率
             //原単価
             //売価率
             //売単価
             //売上金額
             //倉庫
//             if not (GetKeyState(VK_SHIFT) < 0) then  // ADD 2013/03/14 Wakita DEL 2013/07/04 Wakita
             if not (GetKeyState(VK_SHIFT) < 0) then  // ADD 2014/09/01 Wakita
               srResult := xMoveReturnCell(False);
          end
          //BLコード検索
          else if (i_searchPartsMode = ctBLCodeSearch) then
          begin
//             //BLコード
//             if ((HNsGrid1.Col = ctCol_BLGoodsCode) and (HNsGrid1.Row mod 2 = 0)) then
//             begin
//                 // 何もしない
//             end else
             //BLコード 品名 品番 純優 メーカー 仕入先 受注数 出荷数 販売区分 標準価格 原価率 原単価 売価率 売単価 売上金額 倉庫
//             begin
//            if not (GetKeyState(VK_SHIFT) < 0) then  // ADD 2013/03/14 Wakita DEL 2013/07/04 Wakita
              if not (GetKeyState(VK_SHIFT) < 0) then  // ADD 2014/09/01 Wakita
                  srResult := xMoveReturnCell(False);  // フォーカス設定
//             end;

             //BLコード
             //品名
             //品番
             //純優
             //メーカー
             //仕入先
             //受注数
             //出荷数
             //販売区分
             //標準価格
             //原価率
             //原単価
             //売価率
             //売単価
             //売上金額
             //倉庫
          end;
       end
       // --- UPD 2010/06/02 ---------->>>>>
       //返品
       else if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Return) then
       begin
        //出荷数
        if ((HNsGrid1.Col = ctCol_ShipmentCntDisplay) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
        begin
          //----ADD 2011/09/21----->>>>>
          if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, OldRowLogic * 2 + 1] = False) then
          begin
             HNsGrid1.FocusCell(ctCol_SalesMoneyDisplay - 1, HNsGrid1.LogicalRow * 2 + 1);  // 売上金額
          end else
          begin
            //倉庫
            if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, OldRowLogic * 2] = False) then
            begin
               HNsGrid1.FocusCell(ctCol_WarehouseCode - 1, HNsGrid1.LogicalRow * 2);  // 倉庫
            end else
            begin
          //----ADD 2011/09/21-----<<<<<
              // 最終行
              if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
              begin
                  xSetFootControl();
              end
              else
              begin
                   HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay - 1, (HNsGrid1.LogicalRow + 1) * 2 + 1);  // 次行出荷数
              end;
            end;//ADD 2011/09/21
          end; //ADD 2011/09/21
        end
        //----ADD 2011/09/21----->>>>>
        //売上金額
        else if ((HNsGrid1.Col = ctCol_SalesMoneyDisplay) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
        begin
          if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, OldRowLogic * 2] = False) then
          begin
             HNsGrid1.FocusCell(ctCol_WarehouseCode - 1, HNsGrid1.LogicalRow * 2);  // 倉庫
          end else
          begin
            // 最終行
            if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
            begin
                xSetFootControl();
            end
            else
            begin
                 HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay - 1, (HNsGrid1.LogicalRow + 1) * 2 + 1);  // 次行出荷数
            end;
          end;
        end
        //倉庫
        else if ((HNsGrid1.Col = ctCol_WarehouseCode) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
        begin
          // 最終行
          if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
          begin
              xSetFootControl();
          end
          else
          begin
               HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay - 1, (HNsGrid1.LogicalRow + 1) * 2 + 1);  // 次行出荷数
          end;
        end;
        //----ADD 2011/09/21-----<<<<<
       end
       // --- UPD 2010/06/02 ----------<<<<<
       //修正呼出し
       else if (RCHNB01003UADM.SalesSlipNum[HNsGrid1.LogicalRow - 1] <> '0')
          or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ShipmentAddUp)
          or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp)
          or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp) then
       begin
          //品名、仕入先,受注数,出荷数,販売区分,標準価格,原価率,原単価,売価率.売単価
//         if not (GetKeyState(VK_SHIFT) < 0) then  // ADD 2013/03/14 Wakita DEL 2013/07/04 Wakita
         if not (GetKeyState(VK_SHIFT) < 0) then  // ADD 2014/09/01 Wakita
           srResult := xMoveReturnCell(False);  // フォーカス設定
       end;

       // --- ADD 2010/06/02 ---------->>>>>
       //明細備考
       if ((OldCol = ctCol_DtlNote) and (OldRow > 1) and (OldRow mod 2 = 0)) then
       begin
          // 最終行
          if (OldRowLogic = HNsGrid1.LogicalRowCount - 1) then
          begin
            if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, OldRowLogic * 2 + 1] = False) then
            begin
              srResult := True;
              // 同行得意先注番
              HNsGrid1.FocusCell(ctCol_PartySlipNumDtl - 1, OldRowLogic * 2 + 1);
            end
            else if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, OldRowLogic * 2 + 1] = False) then
            begin
              // 同行納品完了予定日
              HNsGrid1.FocusCell(ctCol_DeliGdsCmpltDueDate, OldRowLogic * 2 + 1);
            end else
            begin
              // フッタ部
              xSetFootControl();
            end;
          end else
          // 最終行以外
          begin
            if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, OldRowLogic * 2 + 1] = False) then
            begin
              // 同行得意先注番
              HNsGrid1.FocusCell(ctCol_PartySlipNumDtl - 1, OldRowLogic * 2 + 1);
            end
            else if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, OldRowLogic * 2 + 1] = False) then
            begin
              // 同行納品完了予定日
              HNsGrid1.FocusCell(ctCol_DeliGdsCmpltDueDate - 1, OldRowLogic * 2 + 1);
            end else
            begin
              // 次行明細備考
              // ---------UPD 2010/07/01--------->>>>>
              //HNsGrid1.FocusCell(ctCol_DtlNote - 1, (OldRowLogic + 1) * 2);
              if (xMoveRowCellAdJust(OldRowLogic + 1, actionType_Down, keyType_enter)) then
                HNsGrid1.FocusCell(ctCol_DtlNote - 1, (OldRowLogic + 1) * 2);
              // ---------UPD 2010/07/01---------<<<<<
            end;
          end;
       end
       //得意先注番号
       else if ((OldCol = ctCol_PartySlipNumDtl) and (OldRow > 1) and (OldRow mod 2 = 1)) then
       begin
          // 最終行
          if (OldRowLogic = HNsGrid1.LogicalRowCount - 1) then
          begin
            if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, OldRow] = False) then
            begin
              srResult := True;
              // 同行納品完了予定日
              HNsGrid1.FocusCell(ctCol_DeliGdsCmpltDueDate - 1, OldRow);
            end
            else
            begin
              HNsGrid1.FocusCell(ctCol_PartySlipNumDtl, OldRow);
              // フッタ部
              xSetFootControl();
            end;
          end else
          // 最終行以外
          begin
            if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, OldRow] = False) then
            begin
              // 同行納品完了予定日
              HNsGrid1.FocusCell(ctCol_DeliGdsCmpltDueDate - 1, OldRow);
            end
            else if (HNsGrid1.ReadOnly[ctCol_DtlNote, (OldRowLogic + 1) * 2] = False) then
            begin
              // 次行明細備考
              // ---------UPD 2010/07/01--------->>>>>
              //HNsGrid1.FocusCell(ctCol_DtlNote - 1, (OldRowLogic + 1) * 2);
              if (xMoveRowCellAdJust(OldRowLogic + 1, actionType_Down, keyType_enter)) then
                HNsGrid1.FocusCell(ctCol_DtlNote - 1, (OldRowLogic + 1) * 2);
              // ---------UPD 2010/07/01---------<<<<<
            end else
            begin
              // 次行得意先注番
              //HNsGrid1.FocusCell(ctCol_PartySlipNumDtl - 1, (OldRowLogic + 1) * 2 + 1);
              // ---------UPD 2010/07/01--------->>>>>
              if (xMoveRowCellAdJust(OldRowLogic + 1, actionType_Down, keyType_enter)) then
                HNsGrid1.FocusCell(ctCol_PartySlipNumDtl - 1, (OldRowLogic + 1) * 2 + 1);
              // ---------UPD 2010/07/01---------<<<<<
            end;
          end;
       end
       //納品完了予定日
       else if ((OldCol = ctCol_DeliGdsCmpltDueDate) and (OldRow > 1) and (OldRow mod 2 = 1)) then
       begin
         // 最終行
         if (OldRowLogic = HNsGrid1.LogicalRowCount - 1) then
         begin
            // フッタ部
            xSetFootControl();
         end else
         // 最終行以外
         begin
          // --- ADD 2013/06/05 Wakita ---------->>>>>
          //SHIFTキー押下時はBLコードや品番項目に移動しないので以下の処理を通らないように修正
          if not (GetKeyState(VK_SHIFT) < 0) then
          begin
          // --- ADD 2013/06/05 Wakita ----------<<<<<

            // ---------UPD 2010/07/01--------->>>>>
            if (xMoveRowCellAdJust(OldRowLogic + 1, actionType_Down, keyType_enter)) then
            begin
              if (HNsGrid1.ReadOnly[ctCol_DtlNote, (OldRowLogic + 1) * 2] = False) then
              begin
                // 次行明細備考
                HNsGrid1.FocusCell(ctCol_DtlNote - 1, (OldRowLogic + 1) * 2);
              end else if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, (OldRowLogic + 1) * 2 + 1] = False) then
              begin
                // 次行得意先注番
                HNsGrid1.FocusCell(ctCol_PartySlipNumDtl - 1, (OldRowLogic + 1) * 2 + 1);
              end else
              begin
                // 次行納品完了予定日
                HNsGrid1.FocusCell(ctCol_DeliGdsCmpltDueDate, (OldRowLogic + 1) * 2 + 1);
              end;
            end;
            // ---------UPD 2010/07/01---------<<<<<

          // --- ADD 2013/06/05 Wakita ---------->>>>>
          end;
          // --- ADD 2013/06/05 Wakita ----------<<<<<
         end;
       end else
       //仕入先
       if ((OldCol = ctCol_SupplierCdForStock) and (OldRow > 1) and (OldRow mod 2 = 0)) then
       begin
         // 最終行
        if (OldRowLogic = HNsGrid1.LogicalRowCount - 1) then
        begin
          if (HNsGrid1.ReadOnly[ctCol_StockDate - 1, OldRowLogic * 2] = False) then
          begin
             srResult := True;
             HNsGrid1.FocusCell(ctCol_StockDate - 1, OldRowLogic * 2);  // 同行仕入日
          end else
          begin
            if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, OldRowLogic * 2 + 1] = False) then
            begin
              HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, OldRowLogic * 2 + 1);  // 同行仕入伝票番号
            end else
            begin
              xSetFootControl();
            end;
          end;
        end else
        // 最終行以外
        begin
          if (HNsGrid1.ReadOnly[ctCol_StockDate - 1, OldRowLogic * 2] = False) then
          begin
            HNsGrid1.FocusCell(ctCol_StockDate - 1, OldRowLogic * 2);  // 同行仕入日
          end else
          begin
            if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, OldRowLogic * 2 + 1] = False) then
            begin
              HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, OldRowLogic * 2 + 1);  // 同行仕入伝票番号
            end else
            begin
              if (xMoveRowCellAdJust(OldRowLogic + 1, actionType_Down, keyType_other)) then
                HNsGrid1.FocusCell(ctCol_SupplierCdForStock, (OldRowLogic + 1) * 2);  // 次行仕入先
            end;
          end;
        end;
       end else
       //仕入日
       if ((OldCol = ctCol_StockDate) and (OldRow > 1) and (OldRow mod 2 = 0)) then
       begin
         // 最終行
        if (OldRowLogic = HNsGrid1.LogicalRowCount - 1) then
        begin
          if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, OldRowLogic * 2 + 1] = False) then
          begin
            //HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, OldRowLogic * 2 + 1);  // 同行仕入伝票番号    // DEL 2012/10/15
            HNsGrid1.FocusCell(ctCol_PartySalesSlipNum - 1, OldRowLogic * 2 + 1);  // 同行仕入伝票番号  // ADD 2012/10/15
          end else
          // フッタ部
          begin
            xSetFootControl();
          end;
        end else
        // 最終行以外
        begin
          if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, OldRowLogic * 2 + 1] = False) then
          begin
            //HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, OldRowLogic * 2 + 1);  // 同行仕入伝票番号    // DEL 2012/10/15
            HNsGrid1.FocusCell(ctCol_PartySalesSlipNum - 1, OldRowLogic * 2 + 1);  // 同行仕入伝票番号  // ADD 2012/10/15
          end else
          begin
            if (xMoveRowCellAdJust(OldRowLogic + 1, actionType_Down, keyType_other)) then
            begin
              if (HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, (OldRowLogic + 1) * 2] = False) then
              begin
                HNsGrid1.FocusCell(ctCol_SupplierCdForStock, (OldRowLogic + 1) * 2);  // 次行仕入先
              end else
              begin
                HNsGrid1.FocusCell(ctCol_StockDate, (OldRowLogic + 1) * 2);  // 次行仕入日
              end;
            end;
          end;
        end;
       end else
       //仕入伝票番号
       // ----------UPD 2010/06/26--------->>>>>
       //if ((HNsGrid1.Col = ctCol_PartySalesSlipNum) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
       if ((OldCol = ctCol_PartySalesSlipNum) and (OldRow> 1) and (OldRow mod 2 = 1)) then
       begin
        // --- ADD 2013/05/14 T.Nishi ---------->>>>>
        //SHIFTキー押下時はBLコードや品番項目に移動しないので以下の処理を通らないように修正
        if not (GetKeyState(VK_SHIFT) < 0) then begin  // ADD 2013/05/14 T.Nishi
        // --- ADD 2013/05/14 T.Nishi ----------<<<<<
         // 最終行
        //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
        if (OldRowLogic = HNsGrid1.LogicalRowCount - 1) then
        begin
          // フッタ部
          xSetFootControl();
        end else
        // 最終行以外
        begin
          //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
          //if (xMoveRowCellAdJust(OldRowLogic + 1, actionType_Down, keyType_other)) then  // DEL 2010/07/01
          if (xMoveRowCellAdJust(OldRowLogic + 1, actionType_Down, keyType_enter)) then  // ADD 2010/07/01
            //HNsGrid1.FocusCell(ctCol_SupplierCdForStock, (HNsGrid1.LogicalRow + 1) * 2);  // 次行仕入先
          begin
            srResult := True;
            // DEL 2013/02/14 T.Miyamoto ------------------------------>>>>>
            //HNsGrid1.FocusCell(ctCol_SupplierCdForStock - 1, (OldRowLogic + 1) * 2);  // 次行仕入先
            // DEL 2013/02/14 T.Miyamoto ------------------------------<<<<<
          end;
        end;
        // --- ADD 2013/05/14 T.Nishi ---------->>>>>
        end; 
        // --- ADD 2013/05/14 T.Nishi ----------<<<<<
        // ----------UPD 2010/06/26---------<<<<<
       end

       //BO
       //発注先
       //数量
       // ----------ADD 2010/06/26--------->>>>>
       else if ((OldCol = ctCol_AcceptAnOrderCntForOrder) and (OldRow > 1) and (OldRow mod 2 = 0)) then
       begin
         // 最終行
        if (OldRowLogic = HNsGrid1.LogicalRowCount - 1) then
        begin

        end else
        // 最終行以外
        begin
          if (gpxMAHNB01013B_GridJoinCheck(0, OldRowLogic, -1, 9) = 1) then
          begin
            if ((HNsGrid1.ReadOnly[ctCol_DeliveredGoodsDivNm, OldRow] = True) and
              (HNsGrid1.ReadOnly[ctCol_FollowDeliGoodsDivNm, OldRow] = True) and
              (HNsGrid1.ReadOnly[ctCol_UOEResvdSectionNm, OldRow] = True)) then
            begin
               srResult := True;
               HNsGrid1.FocusCell(ctCol_BoCode - 1, (OldRowLogic + 1) * 2);  // 次行BO
            end;
          end;
        end;
       end
       // ----------ADD 2010/06/26---------<<<<<
       //納品区分
       // ----------ADD 2010/06/26--------->>>>>
       else if ((OldCol = ctCol_DeliveredGoodsDivNm) and (OldRow > 1) and (OldRow mod 2 = 0)) then
       begin
         // 最終行
        if (OldRowLogic = HNsGrid1.LogicalRowCount - 1) then
        begin
          //
        end else
        // 最終行以外
        begin
          if (gpxMAHNB01013B_GridJoinCheck(0, OldRowLogic, -1, 9) = 1) then
          begin
            if ((HNsGrid1.ReadOnly[ctCol_FollowDeliGoodsDivNm, OldRow] = True) and
              (HNsGrid1.ReadOnly[ctCol_UOEResvdSectionNm, OldRow] = True)) then
            begin
               srResult := True;
               HNsGrid1.FocusCell(ctCol_BoCode - 1, (OldRowLogic + 1) * 2);  // 次行BO
            end;
          end;
        end;
       end
       // ----------ADD 2010/06/26---------<<<<<
       //H納品区分
       // ----------ADD 2010/06/26--------->>>>>
       else if ((OldCol = ctCol_FollowDeliGoodsDivNm) and (OldRow > 1) and (OldRow mod 2 = 0)) then
       begin
         // 最終行
        if (OldRowLogic = HNsGrid1.LogicalRowCount - 1) then
        begin
          // フッタ部
          xSetFootControl();

        end else
        // 最終行以外
        begin
          if (gpxMAHNB01013B_GridJoinCheck(0, OldRowLogic, -1, 9) = 1) then
          begin
            if (HNsGrid1.ReadOnly[ctCol_UOEResvdSectionNm, OldRow] = True) then
            begin
               srResult := True;
               HNsGrid1.FocusCell(ctCol_BoCode - 1, (OldRowLogic + 1) * 2);  // 次行BO
            end;
          end;
        end;
       end
       // ----------ADD 2010/06/26---------<<<<<
       //指定拠点
       else if ((OldCol = ctCol_UOEResvdSectionNm) and (OldRow > 1) and (OldRow mod 2 = 1)) then
       begin
         // 最終行
        if (OldRowLogic = HNsGrid1.LogicalRowCount - 1) then
        begin
          // フッタ部
          xSetFootControl();

        end else
        // 最終行以外
        begin
          if (gpxMAHNB01013B_GridJoinCheck(0, OldRowLogic, -1, 9) = 1) then
          begin
            srResult := True;
            HNsGrid1.FocusCell(ctCol_BoCode - 1, (OldRowLogic + 1) * 2);  // 次行BO
          end;
        end;
       end;
     end;
     // --- ADD 2010/06/02 ----------<<<<<
  end
  //無効行
  else
  begin
    //品番検索
    if (i_searchPartsMode = ctGoodsNoSearch) then
    begin
      //BLコード
      //品名
      //品番
      if ((HNsGrid1.Col = ctCol_GoodsNo) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
      begin
        // HNsGrid1.LogicalFocusCell(ctCol_GoodsName - 1,ctRow_GoodsName, HNsGrid1.LogicalRow); // DEL 2011/11/28
        //HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode - 1,ctCol_BLGoodsCode, HNsGrid1.LogicalRow); // ADD 2011/11/28 // DEL 2012/01/18 tianjw
        HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode - 1,ctCol_BLGoodsCode, HNsGrid1.LogicalRow); // ADD 2012/02/06 譚洪
        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName - 1,ctRow_GoodsName, HNsGrid1.LogicalRow); // ADD 2012/01/18 tianjw  DEL 2012/02/06 譚洪
      end;
    end
    //BLコード検索
    else if (i_searchPartsMode = ctBLCodeSearch) then
    begin
      //BLコード
    end;
  end;

   // --- UPD 2010/05/31 ----------<<<<<


   if (OldRowLogic <> HNsGrid1.LogicalRow) then
   begin
      checkDetailAction := True;

     // ----------UPD 2010/07/01----------->>>>>
     //gpxMAHNB01013B_CheckDetailAction(OldRowLogic - 1, HNsGrid1.LogicalRow -1 ,1);
     // 通常入力の場合、粗利チェックを行う。
//     if (i_InputType = 0) then
//     begin
//       gpxMAHNB01013B_CheckDetailAction(OldRowLogic - 1, HNsGrid1.LogicalRow -1 ,1);
//       gpxMAHNB01013B_CheckDetailAction(OldRowLogic - 1, HNsGrid1.LogicalRow -1,2);
//     end;
     // ----------UPD 2010/07/01-----------<<<<<


      xSlipMemoInfoFormSetting(HNsGrid1.LogicalRow);

      // 車両情報設定処理
      xCarInfoFormSetting(HNsGrid1.LogicalRow);
      xAllSecStockInfoProc(HNsGrid1.LogicalRow, False, False);    // ADD K2015/04/01 高騁 森川部品個別依頼


      // --- UPD 2010/05/31 ---------->>>>>

      // 明細部変更後発生イベント処理
      xSalesSlipDetailInput_DetailChanged(HNsGrid1.LogicalRow);

      // --- UPD 2010/05/31 ----------<<<<<

      checkDetailAction := False;
   end;


   Result := srResult;

end;

// *************************************************************************
// Returnキーセル移動処理
// *************************************************************************
function TForm4.xMoveReturnCell(activeCellCheck : Boolean): Boolean;
var i, beforeColIndex, beforeEditStatus, afterLogicalRowIndex, beforeLogicalRowIndex, beforeRowIndex, afterRowIndex, oldRowLogic, newRowLogic, status: Integer;
    endKeyNameStringList : TStringList;
    valueCheck : Boolean;
//    startKeyName, endKeyNameList, beforeColKeyName, afterColKeyName : WideString;   // DEL 2010/04/29 FOR #20933
    beforeColKeyName, afterColKeyName : WideString;   // ADD 2010/04/29 FOR #20933
    salesRowNo, iRow, enterInt : Integer;       // ADD 2010/09/14  // ADD 2012/01/11 Redmine#27388
    value : string;                   // ADD 2010/09/14
    salesDetailArray: TSalesSlipInputCustomArrayA2; // ADD 2010/09/14
    //flag : Boolean;  // ADD 2011/12/01 YANGMJ REDMINE#8344  // DEL 2012/01/18 YANGMJ ソースマージ
    invalidMoveCheck : Boolean; //ADD 2012/04/23
begin
  valueCheck := False;
  invalidMoveCheck := False;  //ADD 2012/04/23
  //---------------------------------------------
  // セル移動不可
  //---------------------------------------------
  if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly) or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp)) then
  begin
    Result := False;
    Exit;
  end;

  if (activeCellCheck = False) then
  begin
    //---------------------------------------------
    // 移動前位置保持
    //---------------------------------------------
    beforeLogicalRowIndex := HNsGrid1.LogicalRow;
    beforeRowIndex := HNsGrid1.Row;
    beforeColIndex := HNsGrid1.Col;
    beforeColKeyName := xGridColIndexToName(beforeRowIndex, beforeColIndex);
    beforeEditStatus := RCHNB01003UADM.EditStatus[beforeLogicalRowIndex];
    afterRowIndex := 0;
    afterLogicalRowIndex := 0;

    iRow :=  beforeRowIndex div 2 - 1;                 // ADD 2010/09/14
    salesRowNo := RCHNB01003UADM.SalesRowNo[iRow];     // ADD 2010/09/14
    value := HNsGrid1.CurrentCell;                     // ADD 2010/09/14

    // ---------- UPD 2010/04/29 FOR #20933 ---------->>>>>
//    gpxMAHNB01013B_GetParam(startKeyName, endKeyNameList);
    if ((startKeyName = '') and (endKeyNameList = '')) then
    begin
    gpxMAHNB01013B_GetParam(startKeyName, endKeyNameList);
    end;
    // ---------- UPD 2010/04/29 FOR #20933 ----------<<<<<
    afterColKeyName := startKeyName;
    endKeyNameStringList := TStringList.Create;
    endKeyNameStringList.Delimiter := '-';
    endKeyNameStringList.DelimitedText := string(endKeyNameList);

    if endKeyNameStringList.Count > 1 then
    begin
      //endKeyNameStringList[0] := 'GoodsName';
      for i := 0 to endKeyNameStringList.Count - 2 do
    begin
      if (endKeyNameStringList[i] = beforeColKeyName) then
      begin
        valueCheck := True;
        Break;
      end;
    end;
    end;

    //---------------------------------------------
    // 移動先Row取得
    //---------------------------------------------
    if ((valueCheck = True) or (('SalesMoneyDisplay' = beforeColKeyName) and (gpxMAHNB01013B_GetEffectiveJudgment(beforeColKeyName) = 1))) then
    begin
      afterLogicalRowIndex := beforeLogicalRowIndex + 1;
      afterRowIndex := beforeRowIndex + 2;

      // 不正移動チェック
      if (afterRowIndex > HNsGrid1.RowCount - 1) then
      begin
        Result := False;
        HNsGrid1.FocusCell(HNsGrid1.Col - 1,HNsGrid1.Row); // ADD 2010/07/01
        //Exit; //DEL 2012/04/23
        invalidMoveCheck := true;  //ADD 2012/04/23
      end;

    end
    else
    begin
      afterRowIndex := beforeRowIndex;
      afterLogicalRowIndex := beforeLogicalRowIndex;
    end;

    //---------------------------------------------
    // 移動先Col取得
    //---------------------------------------------
    gpxMAHNB01013B_GetNextMovePosition(beforeColKeyName, afterColKeyName);
    //---------------------------------------------
    // 移動先補正
    //---------------------------------------------
    if (beforeLogicalRowIndex <> afterLogicalRowIndex) then
    begin
      if ((beforeColKeyName <> 'WarehouseCode') and
        (beforeColKeyName <> 'WarehouseName') and
        (beforeColKeyName <> 'WarehouseShelfNo') and
        (beforeColKeyName <> 'PartySalesSlipNum')) then
      begin
        case i_InputType of
          0:  // 通常入力
          begin
            afterColKeyName := startKeyName;
          end;
          1:   // 切替
          begin

          end;
          2:   // 仕入
          begin
            // ---------UPD 2010/06/02--------->>>>>
//            if (((xGridColumnDisCheck(beforeRowIndex, ctCol_SupplierCdForStock, 0) = True) and ((beforeRowIndex mod 2) = 0)) and
//              (HNsGrid1.ColWidths[beforeColIndex] <> 0)) then
            if ((HNsGrid1.LogicalReadOnly[ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, beforeLogicalRowIndex] <> True) and
              (HNsGrid1.ColWidths[ctCol_SupplierCdForStock] <> 0)) then
            // ---------UPD 2010/06/02---------<<<<<
            begin
              afterRowIndex := beforeRowIndex;
              afterLogicalRowIndex := beforeLogicalRowIndex;
              afterColKeyName := 'SupplierCdForStock';
            end;
          end;
          3:  // 発注
          begin
            if ((HNsGrid1.LogicalReadOnly[ctCol_BoCode, ctRow_BoCode, beforeLogicalRowIndex] <> True) and
              (HNsGrid1.ColWidths[ctCol_BoCode] <> 0)) then
            begin
              afterRowIndex := beforeRowIndex;
              afterLogicalRowIndex := beforeLogicalRowIndex;
              afterColKeyName := 'BoCode';
            end;
          end;
          //>>>2010/05/30
          4: // SCM
          begin
            if (((xGridColumnDisCheck(beforeRowIndex, ctCol_RecycleDivNm, 0) = True) and ((beforeRowIndex mod 2) = 0)) and
              (HNsGrid1.ColWidths[beforeColIndex] <> 0)) then
            begin
              afterRowIndex := beforeRowIndex;
              afterLogicalRowIndex := beforeLogicalRowIndex;
              afterColKeyName := 'GoodsMngNoTP';
            end;
          end;
          //<<<2010/05/30
        end;
      end;
    end;

    // --- ADD 2012/01/11 Redmine#27388 --- >>>>>
    enterTwo := Now();
    enterInt := MinuteDiff(enterOne, enterTwo);

    if (enterInt < 100) then
    begin
        pnl_AcptAnOdrStatusTitle.SetFocus;
        exit;
    end;

    if (afterColKeyName = '') then
    begin
         pnl_AcptAnOdrStatusTitle.SetFocus;
         exit;
    end;
    // --- ADD 2012/01/11 Redmine#27388 --- <<<<<

      //---------------------------------------------
      // アクティブ位置セット
      //---------------------------------------------
      if ((HNsGrid1.LogicalReadOnly[xColNameToIndex(afterColKeyName + 'TP'), xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex] = True) or
        (HNsGrid1.ColWidths[xColNameToIndex(afterColKeyName + 'TP')] = 0)) then
      begin
        // ----------DEL 2010/09/06----------->>>>>
        //0:通常入力、且つ受注数が入力可
        // ----------UPD 2010/07/01------------>>>>>
        //if ((i_InputType = 0) and (salesTtlSt.AcpOdrInputDiv = 1) and (HNsGrid1.LogicalReadOnly[ctCol_BLGoodsCode, ctRow_BLGoodsCode, afterLogicalRowIndex] = False)) then
//        if ((i_InputType = 0) and (salesTtlSt.AcpOdrInputDiv = 1) and
//          (HNsGrid1.LogicalReadOnly[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, afterLogicalRowIndex] = False) and
//          (HNsGrid1.LogicalReadOnly[ctCol_BLGoodsCode, ctRow_BLGoodsCode, afterLogicalRowIndex] = False)) then
//        // ----------UPD 2010/07/01------------<<<<<
//          HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode - 1, ctRow_BLGoodsCode, afterLogicalRowIndex)
//        //1:切替入力
        //else if i_InputType = 1 then
        // ----------DEL 2010/09/06-----------<<<<<
        if i_InputType = 1 then
        begin
          //得意先注番は入力可、納品完了予定日は入力不可場合
          if ((afterRowIndex mod 2) = 1) then
          begin
            if ((HNsGrid1.SelectedCells[ctCol_PartySlipNumDtl, afterRowIndex] = True) and
            (HNsGrid1.LogicalReadOnly[ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl, afterLogicalRowIndex] = False) and
            (HNsGrid1.LogicalReadOnly[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, afterLogicalRowIndex] = True)) then
            begin
              //次行移動の場合
              afterLogicalRowIndex := beforeLogicalRowIndex + 1;
              afterRowIndex := beforeRowIndex + 2;
            end;
          end;

          //有効行のみ
          if (gpxMAHNB01013B_GridJoinCheck(0, afterLogicalRowIndex - 1 , -1, 9) = 1) then
          begin
            //明細備考
            HNsGrid1.LogicalFocusCell(ctCol_DtlNote - 1, ctRow_DtlNote, afterLogicalRowIndex);
          end
          else
          begin
            if (HNsGrid1.LogicalReadOnly[ctCol_GoodsNo, ctRow_GoodsNo, afterLogicalRowIndex] = False) then
              //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo -1, ctRow_GoodsNo, afterLogicalRowIndex)
              HNsGrid1.FocusCell(ctCol_GoodsNo - 1, afterLogicalRowIndex * 2 + ctRow_GoodsNo)
            else
            begin
              HNsGrid1.LogicalFocusCell(ctCol_GoodsNo, ctRow_GoodsNo, afterLogicalRowIndex);
              Result := xMoveReturnCell(False);// 再帰
              Exit;
            end;
          end;

        end
        //2:仕入、3:発注
        else if (i_InputType = 2) or  (i_InputType = 3) then
        begin
//>>>2012/05/17
//          HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP'), xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex);
//          if (afterColKeyName <> beforeColKeyName) then
//          begin
//            Result := xMoveReturnCell(False);// 再帰
//            Exit;
//          end;
          if (afterRowIndex > HNsGrid1.RowCount + 1) then begin
            HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP'), xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex);
            if (afterColKeyName <> beforeColKeyName) then
            begin
              Result := xMoveReturnCell(False);// 再帰
              Exit;
            end;
          // ADD 2013/02/26① T.Miyamoto ------------------------------>>>>>
          end else begin
            if ((beforeColKeyName = 'PartySalesSlipNum') and
                (afterColKeyName  = 'PartySalesSlipNum') and
                (afterRowIndex <= (HNsGrid1.RowCount - 1)) and // ADD 2013/02/28 T.Miyamoto
                (beforeLogicalRowIndex <> afterLogicalRowIndex)) then
            begin
              HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP'), xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex);
              Result := xMoveReturnCell(False);// 再帰
              Exit;
            end;
          // ADD 2013/02/26① T.Miyamoto ------------------------------<<<<<
          end;
//<<<2012/05/17
        end
        else if (i_InputType = 0) then
        begin
           //HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode - 1, ctRow_BLGoodsCode, afterLogicalRowIndex);

            oldRowLogic := (beforeRowIndex div 2) -1;
            newRowLogic := (afterRowIndex div 2) -1;

            if (OldRowLogic <> NewRowLogic) then
            begin
              if (i_InputType = 0) then
              begin
                KeyPreview := False;

                //xPriceCheckProc(beforeColIndex, beforeRowIndex, iRow, salesRowNo, value, flag);   // ADD 2010/09/14 // ADD 2011/12/01 YANGMJ REDMINE#8344  // DEL 2012/01/18 YANGMJ ソースマージ
                //xPriceCheckProc(beforeColIndex, beforeRowIndex, iRow, salesRowNo, value);   // ADD 2010/09/14 // DEL 2011/12/01 YANGMJ REDMINE#8344
                xPriceCheckProc(beforeColIndex, beforeRowIndex, iRow, salesRowNo, value); // ADD 2012/01/18 YANGMJ ソースマージ
                // MOD 2010/11/25 --- >>>>

                status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,4);
                if (status = -1) then
                begin
                   HNsGrid1.GotoCell(ctCol_SalesMoneyDisplay - 1, (beforeRowIndex div 2) * 2 + 1);
                   HNsGrid1.ShowInplaceEdit;

                   KeyPreview := True;
                end
                else
                begin
                   status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,3);
                   if (status = -1) then
                   begin
                     HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay - 1, (beforeRowIndex div 2) * 2 + 1);
                     HNsGrid1.ShowInplaceEdit;

                     KeyPreview := True;
                   end
                   else
                   begin
                    status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,1);
                    if (status = -1) then
                    begin
                      gpxMAHNB01013B_GetGrossProfitRateFlg(grossProfitRateFlg);
                      if (grossProfitRateFlg) then
                      begin
                        HNsGrid1.GotoCell(ctCol_SalesRate - 1, (beforeRowIndex div 2) * 2 + 1);

                        KeyPreview := True;  //ADD 2010/07/19
                      end
                      else
                      begin
                        // ----- ADD 2011/09/21 ----------------------------------->>>>>
                        if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
                        and (RCHNB01003UADM.SalesSlipDtlNumSrc[salesRowNo -1] <> 0)
                        and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))  then
                        begin
                        end
                        else
                        begin
                        // ----- ADD 2011/09/21 -----------------------------------<<<<<
                            status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,2);
                            if (status = -1) then
                            begin
                              HNsGrid1.GotoCell(ctCol_SalesRate - 1, (beforeRowIndex div 2) * 2 + 1);
                            end
                            else
                            begin
                              //HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName + 'TP') - 1, afterLogicalRowIndex * 2 + xRowNameToIndex(afterColKeyName + 'TP'));
                              //HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName+ 'TP') - 1 , afterLogicalRowIndex * 2);
                              HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode - 1, ctRow_BLGoodsCode, afterLogicalRowIndex);
                            end;
                        end;// ADD 2011/09/21
                      end;
                    end
                    // ADD 2010/09/14 -- >>>
                    else if (status = 3) then
                    begin
                      KeyPreview := True;
                      HNsGrid1.GotoCell(ctCol_SalesUnPrcDisplay, (beforeRowIndex div 2) * 2 + 1);
                      HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, (beforeRowIndex div 2) * 2 + 1);
                    end
                    // ADD 2010/09/14 -- <<<
// -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
//                    //add by liusy #26917 2011/12/16 ----->>>>
//                    else if(status = 9) then
//                    begin
//                      KeyPreview := True;
//                      HNsGrid1.GotoCell(ctCol_SalesRate -1, (beforeRowIndex div 2) * 2 + 1);
//                      HNsGrid1.FocusCell(ctCol_SalesRate -1,  (beforeRowIndex div 2) * 2 + 1);
//                      _isDoubleFlag := true;  // ADD 2012/01/17 Redmine27300
//                    end
//                    //add by liusy #26917 2011/12/16 -----<<<<
// -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
 // -----ADD 2012/01/18 YANGMJ ソースマージ ----->>>>>
                    else if(status = 9) then
                    begin
                      _isDoubleFlag := true;
                    end
  // -----ADD 2012/01/18 YANGMJ ソースマージ -----<<<<<
                    //add by liusy #26917 2011/12/16 -----<<<<
                    else
                    begin
                      // ----- ADD 2011/09/21 ----------------------------------->>>>>
                      if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
                      and (RCHNB01003UADM.SalesSlipDtlNumSrc[salesRowNo -1] <> 0)
                      and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))  then
                      begin
                        KeyPreview := True;
                      end
                      else
                      begin
                      // ----- ADD 2011/09/21 -----------------------------------<<<<<
                          status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,2);
                          if (status = -1) then
                          begin
                            HNsGrid1.GotoCell(ctCol_SalesRate - 1, (beforeRowIndex div 2) * 2 + 1);
                          end
                          else
                          begin
                            //HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName + 'TP') - 1, afterLogicalRowIndex * 2 + xRowNameToIndex(afterColKeyName + 'TP'));
                            //HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName+ 'TP') - 1 , afterLogicalRowIndex * 2);

                            //>>>2011/05/25
                            //HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode - 1, ctRow_BLGoodsCode, afterLogicalRowIndex);
                            if (salesTtlSt.SalesCdDspDivCd = 2) then begin
                              status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,5);
                              if (status = -1) then begin
                                HNsGrid1.GotoCell(ctCol_SalesCode - 1, (beforeRowIndex div 2) * 2);
                              end else begin
                                HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode - 1, ctRow_BLGoodsCode, afterLogicalRowIndex);
                              end;
                            end else begin
                              HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode - 1, ctRow_BLGoodsCode, afterLogicalRowIndex);
                            end;
                            //<<<2011/05/25
                          end;
                          KeyPreview := True; //ADD 2010/07/19
                      end; // ADD 2011/09/21

                    end;
                   end;
                end;

                // MOD 2010/11/25 --- <<<<
              end;
            end
            else
            begin
              // --- DEL 2013/07/04 Wakita ---------->>>>>
//              // --- ADD 2013/03/14 Wakita ---------->>>>>
//              if (HNsGrid1.LogicalReadOnly[xColNameToIndex(afterColKeyName + 'TP'), xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex] = True) then
//                Exit;
//              // --- ADD 2013/03/14 Wakita ----------<<<<<
              // --- DEL 2013/07/04 Wakita ----------<<<<<

              HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP'), xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex);
              if (afterColKeyName <> beforeColKeyName) then
              begin
                Result := xMoveReturnCell(False);// 再帰
                Exit;
              end;
            end;
        end;
      end
      else
      begin
        if (xRowNameToIndex(afterColKeyName + 'TP') = 0) then
        begin
           //一行目
           if (afterLogicalRowIndex = 1)then
           begin
              HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP') - 1, xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex);
           end
           else
           begin
              //BLコード
              if (xColNameToIndex(afterColKeyName + 'TP') = 1) then
              begin
                 //HNsGrid1.LogicalFocusCell(ctCol_WarehouseShelfNo - 1, 1, afterLogicalRowIndex -1);
                 HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName+ 'TP') - 1 , afterLogicalRowIndex * 2);
              end
              //BO
              else if (xColNameToIndex(afterColKeyName + 'TP') = 15) then
              begin
                //HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP') - 3 , xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex);
                HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName + 'TP') - 2 , afterLogicalRowIndex * 2);
              end
              else
              begin
                 HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP') - 1, xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex);
              end;

           end;
        end
        else
        begin
           // 売価率
           if (xColNameToIndex(afterColKeyName + 'TP')-1 = 8) then
           begin
             HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP') - 2, xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex);
           end
           else
           begin
             //品番
             if (xColNameToIndex(afterColKeyName + 'TP') = 1) then
             begin
//               if (gpxMAHNB01013B_GridJoinCheck(afterLogicalRowIndex, afterLogicalRowIndex - 1, -1, 9) = 0) then        // DEL 2010/11/25
//               begin                                                                                                    // DEL 2010/11/25
                  //HNsGrid1.LogicalFocusCell(ctCol_GoodsName, ctRow_WarehouseShelfNo, afterLogicalRowIndex);
                  //HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName + 'TP') - 1, afterLogicalRowIndex * 2 + xRowNameToIndex(afterColKeyName + 'TP'));
                  oldRowLogic := (beforeRowIndex div 2) -1;
                  newRowLogic := (afterRowIndex div 2) -1;

                  if (OldRowLogic <> NewRowLogic) then
                  begin
                    if (i_InputType = 0) then
                    begin
                      KeyPreview := False;

                      //xPriceCheckProc(beforeColIndex, beforeRowIndex, iRow, salesRowNo, value);      // ADD 2010/09/14  // DEL 2011/12/01 YANGMJ REDMINE#8344
                      //xPriceCheckProc(beforeColIndex, beforeRowIndex, iRow, salesRowNo, value, flag);// ADD 2011/12/01 YANGMJ REDMINE#8344   // DEL 2012/01/18 YANGMJ ソースマージ
                      xPriceCheckProc(beforeColIndex, beforeRowIndex, iRow, salesRowNo, value);// ADD 2012/01/18 YANGMJ ソースマージ
                      // MOD 2010/11/25 --- >>>>
                      status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,4);
                      if (status = -1) then
                      begin
                         HNsGrid1.GotoCell(ctCol_SalesMoneyDisplay - 1, (beforeRowIndex div 2) * 2 + 1);
                         HNsGrid1.ShowInplaceEdit;

                         KeyPreview := True;
                      end
                      else
                      begin
                         status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,3);
                         if (status = -1) then
                         begin
                            HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay - 1, (beforeRowIndex div 2) * 2 + 1);
                            HNsGrid1.ShowInplaceEdit;

                            KeyPreview := True;
                         end
                         else
                         begin
                            status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,1);

                            // ADD 2012/04/23  --- >>>>
                            if (invalidMoveCheck = true) and (status = 1) then
                            begin
                              // --- ADD 2012/06/13 Wakita ---------->>>>>
                              rowChangedFlg := True;
                              // --- ADD 2012/06/13 Wakita ----------<<<<<
                              KeyPreview := True;
                              Result := false;
                              SlipNoteCode.SetFocus;
                              Exit;
                            end;
                            // ADD 2012/04/23  --- <<<<

                            if (status = -1) then
                            begin
                              gpxMAHNB01013B_GetGrossProfitRateFlg(grossProfitRateFlg);
                              if (grossProfitRateFlg) then
                              begin
                                HNsGrid1.GotoCell(ctCol_SalesRate - 1, (beforeRowIndex div 2) * 2 + 1);

                                KeyPreview := True;  //ADD 2010/07/19
                              end
                              else
                              begin
                                // ----- ADD 2011/09/21 ----------------------------------->>>>>
                                if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
                                and (RCHNB01003UADM.SalesSlipDtlNumSrc[salesRowNo -1] <> 0)
                                and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))  then
                                begin
                                end
                                else
                                begin
                                // ----- ADD 2011/09/21 -----------------------------------<<<<<
                                    status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,2);
                                    if (status = -1) then
                                    begin
                                      HNsGrid1.GotoCell(ctCol_SalesRate - 1, (beforeRowIndex div 2) * 2 + 1);
                                    end
                                    else
                                    begin
                                      HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName + 'TP') - 1, afterLogicalRowIndex * 2 + xRowNameToIndex(afterColKeyName + 'TP'));
                                    end;
                                end;// ADD 2011/09/21
                              end;
                            end
                            // ADD 2010/09/14 -- >>
                            else if (status = 3) then
                            begin
                              KeyPreview := True;
                              HNsGrid1.GotoCell(ctCol_SalesUnPrcDisplay - 1, (beforeRowIndex div 2) * 2 + 1);
                              HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay - 1, (beforeRowIndex div 2) * 2 + 1);
                            end
                            // ADD 2010/09/14 -- <<
// -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
//                            //add by liusy #26917 2011/12/16 ----->>>>
//                            else if(status = 9) then
//                            begin
//                              KeyPreview := True;
//                              HNsGrid1.GotoCell(ctCol_SalesRate -1, (beforeRowIndex div 2) * 2 + 1);
//                              HNsGrid1.FocusCell(ctCol_SalesRate -1,  (beforeRowIndex div 2) * 2 + 1);
//                              _isDoubleFlag := true;  // ADD 2012/01/17 Redmine27300
//                            end
//                            //add by liusy #26917 2011/12/16 -----<<<<
// -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
// -----ADD 2012/01/18 YANGMJ ソースマージ ----->>>>>
                            else if(status = 9) then
                            begin
                              _isDoubleFlag := true;
                            end
// -----ADD 2012/01/18 YANGMJ ソースマージ -----<<<<<

                            else
                            begin
                              // ----- ADD 2011/09/21 ----------------------------------->>>>>
                              if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
                              and (RCHNB01003UADM.SalesSlipDtlNumSrc[salesRowNo -1] <> 0)
                              and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))  then
                              begin
                               KeyPreview := True;
                              end
                              else
                              begin
                              // ----- ADD 2011/09/21 -----------------------------------<<<<<
                                  status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,2);

                                  // ADD 2012/04/23  --- >>>>
                                  if (invalidMoveCheck = true) and (status = 1) then
                                  begin
                                    // --- ADD 2012/06/13 Wakita ---------->>>>>
                                    rowChangedFlg := True;
                                    // --- ADD 2012/06/13 Wakita ----------<<<<<
                                    KeyPreview := True;
                                    Result := false;
                                    SlipNoteCode.SetFocus;
                                    Exit;
                                  end;
                                  // ADD 2012/04/23  --- <<<<

                                  pnl_AcptAnOdrStatusTitle.SetFocus;  // ADD 2012/01/17 Redmine27300
                                  HNsGrid1.SetFocus;                 // ADD 2012/01/17 Redmine27300

                                  if (status = -1) then
                                  begin
                                    HNsGrid1.GotoCell(ctCol_SalesRate - 1, (beforeRowIndex div 2) * 2 + 1);
                                  end
                                  else
                                  begin
                                    //>>>2011/05/25
                                    //HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName + 'TP') - 1, afterLogicalRowIndex * 2 + xRowNameToIndex(afterColKeyName + 'TP'));

                                    if (salesTtlSt.SalesCdDspDivCd = 2) then begin
                                      status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,5);
                                      if (status = -1)then begin
                                        HNsGrid1.GotoCell(ctCol_SalesCode - 1, (beforeRowIndex div 2) * 2);
                                      end else begin
                                        HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName + 'TP') - 1, afterLogicalRowIndex * 2 + xRowNameToIndex(afterColKeyName + 'TP'));
                                      end;
                                    end else begin
                                    HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName + 'TP') - 1, afterLogicalRowIndex * 2 + xRowNameToIndex(afterColKeyName + 'TP'));
                                  end;
                                    //<<<2011/05/25
                                  end;
                                KeyPreview := True; //ADD 2010/07/19
                              end;// ADD 2011/09/21

                            end;
                         end;
                      end;
                      // MOD 2010/11/25 --- <<<<
                    end;
                  end;
                  // DEL 2010/11/25  --- >>>
//               end
//               else
//               begin
//                  //HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP')- 1, 1, afterLogicalRowIndex);
//                  HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName + 'TP') - 1, afterLogicalRowIndex * 2 + xRowNameToIndex(afterColKeyName + 'TP'));
//               end;
                // DEL 2010/11/25 --- <<<
             end
             else
             begin
               HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP') - 1 , xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex);
             end;


           end;

        end;


      end;

  //---------------------------------------------
  // 編集モードセット
  //---------------------------------------------
  //TODO;
  end;

  // ADD 2012/05/15  ----- >>>>>
  if (invalidMoveCheck) and (status <> -1) then
  begin
    // --- ADD 2012/06/13 Wakita ---------->>>>>
    rowChangedFlg := True;
    // --- ADD 2012/06/13 Wakita ----------<<<<<
    afterLogicalRowIndex := beforeLogicalRowIndex;
    afterRowIndex := beforeRowIndex;
    // UPD 2012/05/18  ----- >>>>>
    //HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName + 'TP') - 1, afterLogicalRowIndex * 2 + xRowNameToIndex(afterColKeyName + 'TP'));
    // 売価率へフォーカスする
    HNsGrid1.FocusCell(8, afterLogicalRowIndex * 2 + xRowNameToIndex(afterColKeyName + 'TP'));
    // UPD 2012/05/18  ----- <<<<<

    Exit;
  end;
  // ADD 2012/05/15  ----- <<<<<

  Result := True;

end;

// *************************************************************************
// Up/Downキーセル移動調整処理
// *************************************************************************
function TForm4.xMoveUpDownCellAdJust(activeCellCheck : Boolean; actionType: Integer): Boolean;
var i, beforeColIndex, beforeEditStatus, afterLogicalRowIndex, beforeLogicalRowIndex, beforeRowIndex, afterRowIndex: Integer;
    endKeyNameStringList : TStringList;
    valueCheck : Boolean;
//    startKeyName, endKeyNameList, beforeColKeyName, afterColKeyName : WideString; // DEL 2010/04/29 FOR #20933
    beforeColKeyName, afterColKeyName : WideString;     // ADD 2010/04/29 FOR #20933
begin
    valueCheck := False;

  //---------------------------------------------
  // セル移動不可
  //---------------------------------------------
  if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly) or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp)) then
  begin
    Result := False;
    Exit;
  end;

  if (activeCellCheck = False) then
  begin
    //---------------------------------------------
    // 移動前位置保持
    //---------------------------------------------
    beforeLogicalRowIndex := HNsGrid1.LogicalRow;
    beforeRowIndex := HNsGrid1.Row;
    beforeColIndex := HNsGrid1.Col;
    beforeColKeyName := xGridColIndexToName(beforeRowIndex, beforeColIndex);
    beforeEditStatus := RCHNB01003UADM.EditStatus[beforeLogicalRowIndex];
    afterRowIndex := 0;
    afterLogicalRowIndex := 0;

    // ---------- UPD 2010/04/29 FOR #20933 ---------->>>>>
//    gpxMAHNB01013B_GetParam(startKeyName, endKeyNameList);
    if ((startKeyName = '') and (endKeyNameList = '')) then
    begin
    gpxMAHNB01013B_GetParam(startKeyName, endKeyNameList);
    end;
    // ---------- UPD 2010/04/29 FOR #20933 ----------<<<<<
    afterColKeyName := startKeyName;
    endKeyNameStringList := TStringList.Create;
    endKeyNameStringList.Delimiter := '-';
    endKeyNameStringList.DelimitedText := string(endKeyNameList);

    if endKeyNameStringList.Count > 1 then
    begin
      //endKeyNameStringList[0] := 'GoodsName';
      for i := 0 to endKeyNameStringList.Count - 2 do
    begin
      if (endKeyNameStringList[i] = beforeColKeyName) then
      begin
        valueCheck := True;
        Break;
      end;
    end;
    end;

    //---------------------------------------------
    // 移動先Row取得
    //---------------------------------------------
    if ((valueCheck = True) or (('SalesMoneyDisplay' = beforeColKeyName) and (gpxMAHNB01013B_GetEffectiveJudgment(beforeColKeyName) = 1))) then
    begin
      if (actionType = actionType_Up) then
      begin
        afterLogicalRowIndex := beforeLogicalRowIndex - 1;
        afterRowIndex := beforeRowIndex - 2;
      end
      else
      begin
        afterLogicalRowIndex := beforeLogicalRowIndex + 1;
        afterRowIndex := beforeRowIndex + 2;
      end;

      // 不正移動チェック
      if (afterRowIndex > HNsGrid1.RowCount + 1) then
      begin
        if (actionType = actionType_Up) then
        begin

        end
        else
        begin
          xSetFootControl;
        end;
        Result := False;
        Exit;
      end;

      // --------ADD 2010/07/01--------->>>>>
      // 不正移動チェック
      if (afterRowIndex <= 1) then
      begin
        if (actionType = actionType_Up) then
        begin
          xSetHeaderControl;
        end
        else
        begin
          //
        end;
        Result := False;
        Exit;
      end;
      // --------ADD 2010/07/01---------<<<<<

    end
    else
    begin
      afterRowIndex := beforeRowIndex;
      afterLogicalRowIndex := beforeLogicalRowIndex;
    end;

    //---------------------------------------------
    // 移動先Col取得
    //---------------------------------------------
    if (actionType = actionType_Up) then
    begin
      gpxMAHNB01013B_GetPreMovePosition(beforeColKeyName, afterColKeyName);
    end
    else
    begin
      gpxMAHNB01013B_GetNextMovePosition(beforeColKeyName, afterColKeyName);
      // ADD 2013/02/14 T.Miyamoto ------------------------------>>>>>
      if (beforeColKeyName = 'PartySalesSlipNum') then
      begin
        afterColKeyName := startKeyName;
      end;
      // ADD 2013/02/14 T.Miyamoto ------------------------------<<<<<
    end;
    //---------------------------------------------
    // 移動先補正
    //---------------------------------------------
    if (beforeLogicalRowIndex <> afterLogicalRowIndex) then
    begin
      if ((beforeColKeyName <> 'WarehouseCode') and
        (beforeColKeyName <> 'WarehouseName') and
        (beforeColKeyName <> 'WarehouseShelfNo') and
        (beforeColKeyName <> 'PartySalesSlipNum')) then
      begin
        case i_InputType of
          0:  // 通常入力
          begin
            afterColKeyName := startKeyName;
          end;
          1:   // 切替
          begin

          end;
          2:   // 仕入
          begin
            // ---------UPD 2010/06/02--------->>>>>
//            if (((xGridColumnDisCheck(beforeRowIndex, ctCol_SupplierCdForStock, 0) = True) and ((beforeRowIndex mod 2) = 0)) and
//              (HNsGrid1.ColWidths[beforeColIndex] <> 0)) then
            if ((HNsGrid1.LogicalReadOnly[ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, beforeLogicalRowIndex] <> True) and
              (HNsGrid1.ColWidths[ctCol_SupplierCdForStock] <> 0)) then
            // ---------UPD 2010/06/02---------<<<<<
            begin
              if (actionType = actionType_Down) then
              begin
                afterRowIndex := beforeRowIndex;
                afterLogicalRowIndex := beforeLogicalRowIndex;
                // --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
                //afterColKeyName := 'SupplierCdForStock';
                if (optStockDateCtrl = 1) then // 仕入日付フォーカス制御オプション(OPT-CPM0060)がオンの場合
                begin
                  afterColKeyName := 'StockDate';
                end
                else
                begin
                  afterColKeyName := 'SupplierCdForStock';
                end;
                // --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
              end;
            end;
          end;
          3:  // 発注
          begin
            if ((HNsGrid1.LogicalReadOnly[ctCol_BoCode, ctRow_BoCode, beforeLogicalRowIndex] <> True) and
              (HNsGrid1.ColWidths[ctCol_BoCode] <> 0)) then
            begin
              afterRowIndex := beforeRowIndex;
              afterLogicalRowIndex := beforeLogicalRowIndex;
              afterColKeyName := 'BoCode';
            end;
          end;

        end;
      end;
    end;

      //---------------------------------------------
      // アクティブ位置セット
      //---------------------------------------------
      if ((HNsGrid1.LogicalReadOnly[xColNameToIndex(afterColKeyName + 'TP'), xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex] = True) or
        (HNsGrid1.ColWidths[xColNameToIndex(afterColKeyName + 'TP')] = 0)) then
      begin
        //0:通常入力、且つ受注数が入力可
        if ((i_InputType = 0) and (salesTtlSt.AcpOdrInputDiv = 1) and (HNsGrid1.LogicalReadOnly[ctCol_BLGoodsCode, ctRow_BLGoodsCode, afterLogicalRowIndex] = False)) then
          HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode - 1, ctRow_BLGoodsCode, afterLogicalRowIndex)
        //1:切替入力
        else if i_InputType = 1 then
        begin
          //得意先注番は入力可、納品完了予定日は入力不可場合
          if ((afterRowIndex mod 2) = 1) then
          begin
            if ((HNsGrid1.SelectedCells[ctCol_PartySlipNumDtl, afterRowIndex] = True) and
            (HNsGrid1.LogicalReadOnly[ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl, afterLogicalRowIndex] = False) and
            (HNsGrid1.LogicalReadOnly[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, afterLogicalRowIndex] = True)) then
            begin
              //次行移動の場合
              afterLogicalRowIndex := beforeLogicalRowIndex + 1;
              afterRowIndex := beforeRowIndex + 2;
            end;
          end;

          //有効行のみ
          if (gpxMAHNB01013B_GridJoinCheck(0, afterLogicalRowIndex - 1 , -1, 9) = 1) then
          begin
            //明細備考
            HNsGrid1.LogicalFocusCell(ctCol_DtlNote - 1, ctRow_DtlNote, afterLogicalRowIndex);
          end
          else
          begin
            if (HNsGrid1.LogicalReadOnly[ctCol_GoodsNo, ctRow_GoodsNo, afterLogicalRowIndex] = False) then
              //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo - 1, ctRow_GoodsNo, afterLogicalRowIndex)
              HNsGrid1.FocusCell(ctCol_GoodsNo - 1, afterLogicalRowIndex * 2 + ctRow_GoodsNo)
            else
            begin
              HNsGrid1.LogicalFocusCell(ctCol_GoodsNo, ctRow_GoodsNo, afterLogicalRowIndex);
              Result := xMoveUpDownCellAdJust(False, actionType);// 再帰
              Exit;
            end;
          end;

        end
        //2:仕入、3:発注
        else
        begin
            HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP'), xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex);
            //if (afterColKeyName <> beforeColKeyName)  then  // DEL 2011/12/13 鄧潘ハン REDMINE#27236
            if ((afterColKeyName <> beforeColKeyName) OR (afterLogicalRowIndex <> beforeLogicalRowIndex)) then // ADD 2011/12/13 鄧潘ハン REDMINE#27236
            begin
              Result := xMoveUpDownCellAdJust(False,actionType);// 再帰
              Exit;
            end;
        end;
      end
      else
      begin
        if (xRowNameToIndex(afterColKeyName + 'TP') = 0) then
        begin
           //一行目
           if (afterLogicalRowIndex = 1)then
           begin
              HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP'), xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex);
           end
           else
           begin
              //BLコード
              if (xColNameToIndex(afterColKeyName + 'TP') = 1) then
              begin
                 HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName+ 'TP') , afterLogicalRowIndex * 2);
              end
              //BO
              else if (xColNameToIndex(afterColKeyName + 'TP') = 15) then
              begin
                HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName + 'TP') - 2 , afterLogicalRowIndex * 2);
              end
              // --- ADD 2012/12/21 T.Miyamoto ------------------------------>>>>>
              // 仕入日
              else if (xColNameToIndex(afterColKeyName + 'TP') = 23) then
              begin
                HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex * 2);
              end
              // --- ADD 2012/12/21 T.Miyamoto ------------------------------<<<<<
              else
              begin
                 HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP'), xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex);
              end;

           end;
        end
        else
        begin
           // 売価率
           if (xColNameToIndex(afterColKeyName + 'TP')-1 = 8) then
           begin
             HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP') - 2, xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex);
           end
           else
           begin
             //品番
             if (xColNameToIndex(afterColKeyName + 'TP') = 1) then
             begin
               if (gpxMAHNB01013B_GridJoinCheck(afterLogicalRowIndex, afterLogicalRowIndex - 1, -1, 9) = 0) then
               begin
                  HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex * 2 + xRowNameToIndex(afterColKeyName + 'TP'));
               end
               else
               begin
                  HNsGrid1.FocusCell(xColNameToIndex(afterColKeyName + 'TP') , afterLogicalRowIndex * 2 + xRowNameToIndex(afterColKeyName + 'TP'));
               end;
             end
             else
             begin
                HNsGrid1.LogicalFocusCell(xColNameToIndex(afterColKeyName + 'TP'), xRowNameToIndex(afterColKeyName + 'TP'), afterLogicalRowIndex);
             end;


           end;

        end;


      end;
  end;
  Result := True;
end;

// *************************************************************************
// Up/Downキーセル移動設定処理
// *************************************************************************
procedure TForm4.xGotoCell(aCol: Integer; aLine: Integer; aRow: Integer);
begin
  HNsGrid1.GotoCell(aCol, aRow * 2 + aLine);
end;

// *************************************************************************
// Up/Downキーセル移動処理
// *************************************************************************
//function TForm4.xMoveUpDownCell(activeCellCheck : Boolean): Boolean;// DEL 2010/07/01
function TForm4.xMoveUpDownCell(activeCellCheck : Boolean; Sender : TObject): Boolean;
var
  //rowindex : Integer;
  //logicalRowIndex: Integer;
  rowIndex, colIndex, logicalRowIndex : Integer;
  st : Boolean;
  value : string;
  valid : Boolean;
  ix : Integer;  // ADD 2012/10/15
// --- DEL 2012/07/04 No.880 ---------->>>>>
//  iselLength, iSelStart: Integer;
// --- DEL 2012/07/04 No.880 ----------<<<<<
  canFocus : Boolean; // ADD 2013/03/07 Wakita
begin
   st := False;
   valid := True;  // ADD 2010/10/26
   //rowindex := HNsGrid1.LogicalRow;
   //logicalRowIndex := HNsGrid1.LogicalRow;
   rowIndex := HNsGrid1.Row;
   colIndex := HNsGrid1.Col;
   logicalRowIndex := HNsGrid1.LogicalRow;
   vk_Right_Check := False;
   vk_Left_Check := False;
   value := HNsGrid1.CurrentCell;

     // --- ADD 2012/05/24 No.849 ---------->>>>>
   if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp) then
   begin
     Exit;
   end;
   // --- ADD 2012/05/24 No.849 ----------<<<<<

   // ---------ADD 2010/07/01--------->>>>>
   if (GetKeyState(VK_RIGHT) and $8000 = $8000)  then
   begin
    // 販売区分
    if ((colIndex = ctCol_SalesCode) and (rowIndex > 1) and (rowIndex mod 2 = 0) and (value = '')) then
    begin
      value := '0';
    end;
   end;
// --- DEL 2012/07/04 No.880 ---------->>>>>
//    iselLength := HNsGrid1.NormalEdit.SelLength;
//    iSelStart := HNsGrid1.NormalEdit.SelStart;
// --- DEL 2012/07/04 No.880 ----------<<<<<
   if (GetKeyState(VK_RIGHT) and $8000 = $8000) and
     ((HNsGrid1.NormalEdit.SelLength <> 0) or
     (HNsGrid1.NormalEdit.SelStart <> Length(value))) then
     begin
      Result := st;
      Exit;
     end;
//>>>2012/03/29
//   if (GetKeyState(VK_LEFT) and $8000 = $8000) and
//     ((HNsGrid1.NormalEdit.SelLength <> 0) and
//     (HNsGrid1.NormalEdit.SelStart <> 0)) then
//     begin
//      Result := st;
//      Exit;
//     end;

   if (GetKeyState(VK_LEFT) and $8000 = $8000) then begin

     if not(GetKeyState(VK_SHIFT) < 0) then begin
       // shiftなし
       if ((HNsGrid1.NormalEdit.SelStart = 0) and
           (HNsGrid1.NormalEdit.SelLength = Length(value))) then begin

       end else begin

         if ((HNsGrid1.NormalEdit.SelLength <> 0) or
             (HNsGrid1.NormalEdit.SelStart <> 0)) then begin
           Result := st;
           Exit;
         end;
       end;
     end else begin
       // shiftあり
       if ((HNsGrid1.NormalEdit.SelStart = 0) and
           (HNsGrid1.NormalEdit.SelLength = Length(value))) then begin
         Result := st;
         Exit;
       end else begin
         if ((HNsGrid1.NormalEdit.SelLength <> 0) or
             (HNsGrid1.NormalEdit.SelStart <> 0)) then begin
           Result := st;
           Exit;
         end;
       end;
     end;
   end;
//<<<2012/03/29
   // ---------ADD 2010/07/01---------<<<<<

   if (GetKeyState(VK_DOWN) and $8000 = $8000) then
   begin
      // ---------DEL 2010/07/01--------->>>>>
//      if (rowindex > i_RowMaxCount - 1 ) then
//      begin
//         //
//      end
//      else
//      begin
//         rowindex := rowindex + 1;
//      end;
      // ---------DEL 2010/07/01---------<<<<<
      vk_Down_Check := True;
   end
   else if (GetKeyState(VK_UP) and $8000 = $8000) then
   begin
      // ---------DEL 2010/07/01--------->>>>>
//      if ((rowindex - 1) < 0) then
//      begin
//         //
//      end
//      else
//      begin
//        rowindex := rowindex - 1;
//      end;
      // ---------DEL 2010/07/01---------<<<<<
      vk_Up_Check := True;
   end
   else
   begin
     if (GetKeyState(VK_LEFT) and $8000 = $8000) then
     begin
       HNsGrid1CellValidate(Sender, colIndex, rowIndex, value, valid);
       vk_Left_Check := True;
     end
     else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
     begin
       HNsGrid1CellValidate(Sender, colIndex, rowIndex, value, valid);
       vk_Right_Check := True;
     end
     // ---------ADD 2010/07/01--------->>>>>
     else if ((vk_Up_Check) or (vk_Down_Check)) then
     begin

     end
     // ---------ADD 2010/07/01---------<<<<<
     else
     begin
       Result := st;
       Exit;
     end;
   end;

   // ---------ADD 2010/07/14--------->>>>>
   if (valid = False) then
   begin
       Result := True;
       Exit;
   end;
   // ---------ADD 2010/07/14---------<<<<<

   // --- UPD 2010/05/31 ---------->>>>>

//   //ＢＬコード 品番
//   if ((HNsGrid1.Col = ctCol_BLGoodsCode) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0))
//     or ((HNsGrid1.Col = ctCol_GoodsNo) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1))then
//   begin
//      //有効行のみ
//      if (gpxMAHNB01013B_GridJoinCheck(0, rowindex - 1 , -1, 9) = 1) then
//      begin
//         if (GetKeyState(VK_DOWN) and $8000 = $8000) then
//         begin
//            if (RCHNB01003UADM.SearchPartsModeState[rowIndex - 1] = 2) then
//            begin
//              HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, rowindex);
//            end
//            else
//            begin
//              HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, rowindex);
//            end;
//
//            st := True;
//
//         end
//         else if (GetKeyState(VK_UP) and $8000 = $8000) then
//         begin
//            if ((HNsGrid1.Col = ctCol_GoodsNo) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
//            begin
//              HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, rowindex + 1);
//            end
//            else
//            begin
//              if (RCHNB01003UADM.SearchPartsModeState[rowIndex - 1] = 2) then
//              begin
//                 HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, rowindex);
//              end
//              else
//              begin
//                 HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, rowindex);
//              end;
//            end;
//
//            st := True;
//
//         end;
//
//      end;
//   end
//   //品名
//   else if ((HNsGrid1.Col = ctCol_GoodsName) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
//   begin
//     HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
//
//     st := True;
//   end;

  // -----------UPD 2010/07/01--------->>>>>

  //有効行
  //if (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow -1, -1, 9) = 1) then
  if (gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex -1, -1, 9) = 1) then
  begin
     // --- ADD 2010/06/02 ---------->>>>>
     //有効行(行値引き)
     //if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 1] = ctEDITSTATUS_RowDiscount) then
     if (RCHNB01003UADM.EditStatus[logicalRowIndex - 1] = ctEDITSTATUS_RowDiscount) then
     begin
        //品名
        //if ((HNsGrid1.Col = ctCol_GoodsName) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
        if ((colIndex = ctCol_GoodsName) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
        begin
          //if (GetKeyState(VK_UP) and $8000 = $8000) then
          if vk_Up_Check then
          begin
            // 先頭行,ヘッダ部
            //if logicalRowIndex = 1 then
            if logicalRowIndex = 1 then
            begin
               if (FullModel.ReadOnly = False) then
               begin
                  FullModel.SetFocus;
               end
               else if (CustomerCode.ReadOnly = False) then
               begin
                 CustomerCode.SetFocus;
               end
               else if (SalesEmployeeCd.ReadOnly = False) then
               begin
                 SalesEmployeeCd.SetFocus;
               end;
            end
            else
            begin
              // 先頭行以外,前行品名
              //if (xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other)) then
              if (xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other)) then
              begin
                //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
              end;
            end;

            st := True;
          end
          //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
          else if vk_Left_Check then
          begin
            // 先頭行,ヘッダ部
            //if logicalRowIndex = 1 then
            if logicalRowIndex = 1 then
            begin

            end
            else
            begin
              // 先頭行以外,前行売上金額
              //if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 2] = ctEDITSTATUS_RowDiscount)
              //  or (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow - 2, -1, 9) = 1) then
              if (RCHNB01003UADM.EditStatus[logicalRowIndex - 2] = ctEDITSTATUS_RowDiscount)
                or (gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex - 2, -1, 9) = 1) then
              begin
                 //if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, (logicalRowIndex-1) * 2 + 1] = False) then
                 if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, (logicalRowIndex-1) * 2 + 1] = False) then
                 begin
                   //HNsGrid1.LogicalFocusCell(ctCol_SalesMoneyDisplay,ctRow_SalesMoneyDisplay, logicalRowIndex-1);
                   xGotoCell(ctCol_SalesMoneyDisplay,ctRow_SalesMoneyDisplay, logicalRowIndex-1);
                 end
                 else
                 begin
                   //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                   xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                 end;
              end
              else
              begin
                 //if (xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other)) then
                 if (xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other)) then
                 begin
                    //
                 end;
              end;

            end;

            st := True;
          end
          //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
          else if vk_Down_Check then
          begin
            // 最終行,フッタ部
            //if logicalRowIndex = i_RowMaxCount then
            if logicalRowIndex = i_RowMaxCount then
            begin
              xSetFootControl;
            end
            else
            begin
              //最終行以外.次行品名
              //if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_DOWN, keyType_other)) then
              if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_DOWN, keyType_other)) then
              begin
                //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
              end;
            end;

            st := True;
          end;
        end
        //販売区分
        //else if ((HNsGrid1.Col = ctCol_SalesCode) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
        else if ((colIndex = ctCol_SalesCode) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
        begin
           //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
           begin
              // 先頭行,ヘッダ部
              if logicalRowIndex = 1 then
              begin
                 if (FullModel.ReadOnly = False) then
                 begin
                    FullModel.SetFocus;
                 end
                 else if (CustomerCode.ReadOnly = False) then
                 begin
                   CustomerCode.SetFocus;
                 end
                 else if (SalesEmployeeCd.ReadOnly = False) then
                 begin
                   SalesEmployeeCd.SetFocus;
                 end;
              end
              else
              begin
                // 先頭行以外,前行販売区分
                //if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 2] = ctEDITSTATUS_RowDiscount)
                //  or (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow - 2, -1, 9) = 1) then
                if (RCHNB01003UADM.EditStatus[logicalRowIndex - 2] = ctEDITSTATUS_RowDiscount)
                  or (gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex - 2, -1, 9) = 1) then
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_SalesCode, (logicalRowIndex-1) * 2] = False) then
                  if (HNsGrid1.ReadOnly[ctCol_SalesCode, (logicalRowIndex-1) * 2] = False) then
                  begin
                     //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex-1);
//                     xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex-1);
                  end
                  else
                  begin
                     //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                     xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                  end;
                end
                else
                begin
                  //if (xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other)) then
                  begin
                    //
                  end;
                end;
              end;

              st := True;
           end
           //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
           else if vk_Down_Check then
           begin
              // 最終行,フッタ部
              //if logicalRowIndex = i_RowMaxCount then
              if logicalRowIndex = i_RowMaxCount then
              begin
                xSetFootControl;
              end
              else
              begin
                //最終行以外.次行販売区分
                //if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow] = ctEDITSTATUS_RowDiscount)
                //  or (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow, -1, 9) = 1) then
                if (RCHNB01003UADM.EditStatus[logicalRowIndex] = ctEDITSTATUS_RowDiscount)
                  or (gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex, -1, 9) = 1) then
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_SalesCode, (logicalRowIndex+1) * 2] = False) then
                  if (HNsGrid1.ReadOnly[ctCol_SalesCode, (logicalRowIndex+1) * 2] = False) then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex+1);
//                    xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex+1);
                  end
                  else
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                  end;
                end
                else
                begin
                  //if (xMoveRowCellAdJust(logicalRowIndex+1, actionType_Down, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex+1, actionType_Down, keyType_other)) then
                  begin

                  end;
                end;
              end;

              st := True;
           end;

        end
        //売上金額
        //else if ((HNsGrid1.Col = ctCol_SalesMoneyDisplay) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
        else if ((colIndex = ctCol_SalesMoneyDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
        begin
           //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
           begin
              // 先頭行,ヘッダ部
              //if logicalRowIndex = 1 then
              if logicalRowIndex = 1 then
              begin
                 if (FullModel.ReadOnly = False) then
                 begin
                    FullModel.SetFocus;
                 end
                 else if (CustomerCode.ReadOnly = False) then
                 begin
                   CustomerCode.SetFocus;
                 end
                 else if (SalesEmployeeCd.ReadOnly = False) then
                 begin
                   SalesEmployeeCd.SetFocus;
                 end;
              end
              else
              begin
                // 先頭行以外,前行売上金額
                //if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 2] = ctEDITSTATUS_RowDiscount)
                //  or (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow - 2, -1, 9) = 1) then
                if (RCHNB01003UADM.EditStatus[logicalRowIndex - 2] = ctEDITSTATUS_RowDiscount)
                  or (gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex - 2, -1, 9) = 1) then
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, (logicalRowIndex-1) * 2 + 1] = False) then
                  if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, (logicalRowIndex-1) * 2 + 1] = False) then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesMoneyDisplay,ctRow_SalesMoneyDisplay, logicalRowIndex-1);
                    xGotoCell(ctCol_SalesMoneyDisplay,ctRow_SalesMoneyDisplay, logicalRowIndex-1);
                  end
                  else
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                  end;
                end
                else
                begin
                  //if (xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other)) then
                  begin

                  end;
                end;
              end;

              st := True;
           end
           //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
           else if vk_Down_Check then
           begin
              // 最終行,フッタ部
              //if logicalRowIndex = i_RowMaxCount then
              if logicalRowIndex = i_RowMaxCount then
              begin
                xSetFootControl;
              end
              else
              begin
                //最終行以外.次行売上金額
                //if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow] = ctEDITSTATUS_RowDiscount)
                //or (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow, -1, 9) = 1) then
                if (RCHNB01003UADM.EditStatus[logicalRowIndex] = ctEDITSTATUS_RowDiscount)
                  or (gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex, -1, 9) = 1) then
                begin
                   //if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, (logicalRowIndex+1) * 2 + 1] = False) then
                   if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, (logicalRowIndex+1) * 2 + 1] = False) then
                   begin
                     //HNsGrid1.LogicalFocusCell(ctCol_SalesMoneyDisplay,ctRow_SalesMoneyDisplay, logicalRowIndex+1);
                     xGotoCell(ctCol_SalesMoneyDisplay,ctRow_SalesMoneyDisplay, logicalRowIndex+1);
                   end
                   else
                   begin
                     //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                     xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                   end
                end
                else
                begin
                  //if (xMoveRowCellAdJust(logicalRowIndex+1, actionType_Down, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex+1, actionType_Down, keyType_other)) then
                  begin

                  end;
                end;
              end;

              st := True;
           end
           //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
           else if vk_Right_Check then
           begin
              // 最終行,フッタ部
              //if logicalRowIndex = i_RowMaxCount then
              if logicalRowIndex = i_RowMaxCount then
              begin
                xSetFootControl;
              end
              else
              begin
                //最終行以外.次行品名
                //if (xMoveRowCellAdJust(logicalRowIndex+1, actionType_Down, keyType_other)) then
                if (xMoveRowCellAdJust(logicalRowIndex+1, actionType_Down, keyType_other)) then
                begin
                  //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                  xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                end;
              end;

              st := True;
           end;

        end;
     end
     //有効行(注釈)
     //else if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 1] = ctEDITSTATUS_Annotation) then
     else if (RCHNB01003UADM.EditStatus[logicalRowIndex - 1] = ctEDITSTATUS_Annotation) then
     begin
        //品名
          //if ((HNsGrid1.Col = ctCol_GoodsName) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
          if ((colIndex = ctCol_GoodsName) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
          begin
            //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
            begin
              //if HNsGrid1.LogicalRow = 1 then
              if logicalRowIndex = 1 then
              begin
                st := True;
                //ヘッダ部
                xSetHeaderControl();
              end
              else
              begin
                st := True;
                //if xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other) = True then
                if xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other) = True then
                begin
                //前行品名
                //HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2);
                HNsGrid1.GotoCell(ctCol_GoodsName, (logicalRowIndex - 1) * 2);
                end;
              end;
            end
            //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
            else if vk_Left_Check then
            begin
              //if HNsGrid1.LogicalRow = 1 then
              if logicalRowIndex = 1 then
              begin
                st := True;
              end
              else
              begin
                st := True;
                //if xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other) = True then
                if xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other) = True then
                begin
                //前行品名
                //HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2);
                HNsGrid1.GotoCell(ctCol_GoodsName, (logicalRowIndex - 1) * 2);
                end;
              end;
            end
            //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
            else if vk_Down_Check then
            begin
              //if HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1 then
              if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
              begin
                st := True;
                xSetFootControl();
              end
              else
              begin
                st := True;
                //if xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other) = True then
                if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                begin
                  //次行品名
                  //HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2)
                  HNsGrid1.GotoCell(ctCol_GoodsName, (logicalRowIndex + 1) * 2);
                end;
              end;
            end
            //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
            else if vk_Right_Check then
            begin
              //if HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1 then
              if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
              begin
                st := True;
                xSetFootControl();
              end
              else
              begin
                st := True;
                //if xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other) = True then
                if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                begin
                  //次行品名
                  //HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2)
                  HNsGrid1.GotoCell(ctCol_GoodsName, (logicalRowIndex+ 1) * 2);
                end;
              end;
            end;
          end;
     end
     else
     begin
       // --- ADD 2010/06/02 ----------<<<<<

       //新規登録
       if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal)
       //   and (RCHNB01003UADM.SalesSlipNum[HNsGrid1.LogicalRow - 1] = '0')then
          and (RCHNB01003UADM.SalesSlipNum[logicalRowIndex - 1] = '0')then
       begin
          //品番検索
          if (i_searchPartsMode = ctGoodsNoSearch) then
          begin
             //BLコード
             //if ((HNsGrid1.Col = ctCol_BLGoodsCode) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
             if ((colIndex = ctCol_BLGoodsCode) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行,ヘッダ部
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    xSetHeaderControl();
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //>>>2010/08/09
//                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row - 1]) then
//                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex - 1]) then
//                      begin
//                        // 前行品名
//                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
//                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
//                      end else
//                      begin
//                        // 前行品番
//                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
//                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
//                      end;

                      if (RCHNB01003UADM.SearchPartsModeState[logicalRowIndex-2] = ctSearchPartsModeState_BLCodeSearch) then begin
                        //-------------------------------------------
                        // BLコード検索行
                        //-------------------------------------------
                        if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowIndex - 2] = false) then begin
                          // 前行BLコード
                          xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex-1);
                        end else begin
                          // 前行品名
                          xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                        end;
                      end else begin
                        //-------------------------------------------
                        // 品番検索行、検索無し行
                        //-------------------------------------------
                        if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex - 2] = false) then begin
                          // 前行品番
                          xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                        end else begin
                          // 前行品名
                          xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                        end;
                      end;
                      //<<<2010/08/09
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行,移動無し
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, HNsGrid1.Row - 1]) then
                      if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, rowIndex - 1]) then
                      begin
                        // 前行標準価格
                        //HNsGrid1.LogicalFocusCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex-1);
                        xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex-1);
                      end else
                      begin
                        // 前行売単価
                        //HNsGrid1.LogicalFocusCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex-1);
                        xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex-1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行,同行品名
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    //>>>2010/08/09
                    // 最終行以外
//                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
//                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
//                    begin
//                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 3]) then
//                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 3]) then
//                      begin
//                        // 次行品名
//                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
//                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
//                      end else
//                      begin
//                        // 次行品番
//                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex + 1);
//                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex + 1);
//                      end;
//                    end;

                    // 同行品番
                    if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex] = false) then begin
                      xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                    end;
                    //<<<2010/08/09

                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行,同行品名
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 最終行以外,同行品名
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                    st := True;
                  end;
                end;
             end
             //品名
             //else if ((HNsGrid1.Col = ctCol_GoodsName) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
             else if ((colIndex = ctCol_GoodsName) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行,ヘッダ部
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    xSetHeaderControl();
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row - 1]) then
                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex - 1]) then
                      begin
                        // 前行品名
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                      end else
                      begin
                        // 前行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行,同行BLコード
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowIndex] = false) then
                    begin
                      //HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex);
                      xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex);
                    end;
                    st := True;
                  end else
                  begin
                    // 先頭行以外,同行BLコード
                    //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowIndex] = false) then
                    begin
                      //HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex);
                      xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex);
                    end;
                    st := True;
                  end;
                // end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 1] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 1] = false) then
                    begin
                      // 同行品番
                      //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                      xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                    end else
                    begin
                      // フッタ部
                      xSetHeaderControl();
                    end;

                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 1] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 1] = false) then
                    begin
                      // 同行品番
                      //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                      xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                    end
                    else if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 3] = false) then
                    begin
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                      begin
                        // 次行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex + 1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex + 1);
                      end;
                    end else
                    begin
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                      begin
                        // 次行品名
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, rowIndex] = false) then
                    begin
                      // 同行受注数
                      //HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);
                      xGotoCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);
                    end else
                    begin
                      // 販売区分
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                      xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    end;
                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, rowIndex] = false) then
                    begin
                      // 同行受注数
                      //HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);
                      xGotoCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);
                    end else
                    begin
                      // 販売区分
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                      xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    end;
                    st := True;
                  end;
                end;
             end
             //品番
             //else if ((HNsGrid1.Col = ctCol_GoodsNo) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
             else if ((colIndex = ctCol_GoodsNo) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  //>>>2010/08/09
//                  // 先頭行,移動無し
//                  //if logicalRowIndex = 1 then
//                  if logicalRowIndex = 1 then
//                  begin
//                    st := True;
//                    xSetHeaderControl;
//                  end else
//                  begin
//                    // 先頭行以外
//                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
//                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
//                    begin
//                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row - 2] = false) then
//                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex - 2] = false) then
//                      begin
//                        // 前行品番
//                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
//                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
//                      end else
//                      begin
//                        // 前行品名
//                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
//                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
//                      end;
//                    end;
//                    st := True;
//                  end;
                  // 同行BLコード
                  if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowIndex] = false) then begin
                    xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex);
                  end;
                  st := True;
                  //<<<2010/08/09

                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  //>>>2010/08/09
//                  // 先頭行,移動無し
//                  //if logicalRowIndex = 1 then
//                  if logicalRowIndex = 1 then
//                  begin
//                    st := True;
//                  end else
//                  begin
//                    // 先頭行以外
//                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
//                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
//                    begin
//                      //if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, HNsGrid1.Row - 2] = false) then
//                      if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, logicalRowIndex - 2] = false) then
//                      begin
//                        // 前行売単価
//                        //HNsGrid1.LogicalFocusCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex-1);
//                        xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex-1);
//                      end else
//                      begin
//                        // 前行標準価格
//                        //HNsGrid1.LogicalFocusCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex-1);
//                        xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex-1);
//                      end;
//                    end;
//                    st := True;
//                  end;
                  xGotoCell(ctCol_WarehouseCode,ctRow_WarehouseCode, logicalRowIndex);
                  //>>>2010/08/09
               // end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行,フッタ部
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    xSetFootControl();
                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //>>>2010/08/09
//                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 2] = false) then
//                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 2] = false) then
//                      begin
//                        // 次行品番
//                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
//                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
//                      end else
//                      begin
//                        // 次行品名
//                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
//                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
//                      end;

                      if (RCHNB01003UADM.SearchPartsModeState[logicalRowIndex] = ctSearchPartsModeState_BLCodeSearch) then begin
                        //-------------------------------------------
                        // BLコード検索行
                        //-------------------------------------------
                        if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowIndex + 2] = false) then begin
                          // 次行BLコード
                          xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex+1);
                        end else begin
                          // 次行品名
                          xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                        end;
                      end else begin
                        //-------------------------------------------
                        // 品番検索行、検索無し行
                        //-------------------------------------------
                        if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 2] = false) then begin
                          // 次行品番
                          xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        end else begin
                          // 次行品名
                          xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                        end;
                      end;
                      //<<<2010/08/09
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行,同行純優
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsKindCode,ctRow_GoodsKindCode, logicalRowIndex);
                    xGotoCell(ctCol_GoodsKindCode,ctRow_GoodsKindCode, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 最終行以外,同行純優
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsKindCode,ctRow_GoodsKindCode, logicalRowIndex);
                    xGotoCell(ctCol_GoodsKindCode,ctRow_GoodsKindCode, logicalRowIndex);
                    st := True;
                  end;
                end;
             end
             //純優
             //else if ((HNsGrid1.Col = ctCol_GoodsKindCode) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
             else if ((colIndex = ctCol_GoodsKindCode) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行,同行品番
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                    xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex - 2] = false) then
                      begin
                        // 前行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                      end else
                      begin
                        // 前行品名
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                      end;
                    st := True;
                    end;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行,同行品番
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                    xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 先頭行以外,同行品番
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                    xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                    st := True;
                  end;
                // end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行,フッタ部
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    xSetFootControl();
                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 2] = false) then
                      begin
                        // 次行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                      end else
                      begin
                        // 次行品名
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行,同行メーカー
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsMakerCd,ctRow_GoodsMakerCd, logicalRowIndex);
                    xGotoCell(ctCol_GoodsMakerCd,ctRow_GoodsMakerCd, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 最終行以外,同行メーカー
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsMakerCd,ctRow_GoodsMakerCd, logicalRowIndex);
                    xGotoCell(ctCol_GoodsMakerCd,ctRow_GoodsMakerCd, logicalRowIndex);
                    st := True;
                  end;
                end;
             end
             //メーカー
             //else if ((HNsGrid1.Col = ctCol_GoodsMakerCd) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
             else if ((colIndex = ctCol_GoodsMakerCd) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行,同行品番
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                    HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row - 2] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex - 2] = false) then
                      begin
                        // 前行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                      end else
                      begin
                        // 前行品名
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行,同行純優良
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsKindCode,ctRow_GoodsKindCode, logicalRowIndex);
                    xGotoCell(ctCol_GoodsKindCode,ctRow_GoodsKindCode, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 先頭行以外,同行純優良
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsKindCode,ctRow_GoodsKindCode, logicalRowIndex);
                    xGotoCell(ctCol_GoodsKindCode,ctRow_GoodsKindCode, logicalRowIndex);
                    st := True;
                  end;
                //end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行,フッタ部
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    xSetFootControl();
                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 2] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 2] = false) then
                      begin
                        // 次行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                      end else
                      begin
                        // 次行品名
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行,同行仕入先
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
                    xGotoCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 最終行以外,同行仕入先
                    //HNsGrid1.LogicalFocusCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
                    xGotoCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
                    st := True;
                  end;
                end;
             end
             //仕入先
             //else if ((HNsGrid1.Col = ctCol_SupplierCd) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
             else if ((colIndex = ctCol_SupplierCd) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex] = false) then
                    begin
                      // 同行品番
                      //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                      xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                    end else
                    begin
                      // 同行品名
                      //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                      xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                    end;
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row - 2] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex - 2] = false) then
                      begin
                        // 前行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                      end else
                      begin
                        // 前行品名
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_GoodsMakerCd, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_GoodsMakerCd, rowIndex] = false) then
                    begin
                      // 同行メーカー
                      //HNsGrid1.LogicalFocusCell(ctCol_GoodsMakerCd,ctRow_GoodsMakerCd, logicalRowIndex);
                      xGotoCell(ctCol_GoodsMakerCd,ctRow_GoodsMakerCd, logicalRowIndex);
                    end else
                    //if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, HNsGrid1.Row - 1] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, rowIndex - 1] = false) then
                    begin
                      // 同行原単価
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                      xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                    end else
                    begin
                      // 販売区分
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                      xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    end;
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (HNsGrid1.ReadOnly[ctCol_GoodsMakerCd, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_GoodsMakerCd, rowIndex] = false) then
                    begin
                      // 同行メーカー
                      //HNsGrid1.LogicalFocusCell(ctCol_GoodsMakerCd,ctRow_GoodsMakerCd, logicalRowIndex);
                      xGotoCell(ctCol_GoodsMakerCd,ctRow_GoodsMakerCd, logicalRowIndex);
                    end else
                    //if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, HNsGrid1.Row - 1] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, rowIndex - 1] = false) then
                    begin
                      // 同行原単価
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                      xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                    end else
                    begin
                      // 販売区分
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                      xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    end;
                    st := True;
                  end;
                // end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行,フッタ部
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    xSetFootControl();
                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 2] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 2] = false) then
                      begin
                        // 次行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                      end else
                      begin
                        // 次行品名
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行,同行出荷数
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
//                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
//                  begin
//                    //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
//                    xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
//                    st := True;
//                  end else
//                  begin
//                    // 最終行以外,同行出荷数
//                    //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
//                    xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
//                    st := True;
//                  end;
                  //同行出荷数
                  if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, rowIndex] = False) then
                  begin
                    xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
                  end
                  //同行標準価格
                  else if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, rowIndex] = False) then
                  begin
                    xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
                  end
                  //同行売価率
                  else if (HNsGrid1.ReadOnly[ctCol_SalesRate, rowIndex] = False) then
                  begin
                    xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                  end
                  else
                  begin
                    if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                    begin
                      //フッタ部
                      xSetFootControl();
                    end
                    else
                    begin
                      if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                      begin
                        //次行品番
                        if (HNsGrid1.ReadOnly[ctCol_GoodsNo, (logicalRowIndex + 1) * 2 + 1] = False) then
                        begin
                          xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex + 1);
                        end
                        //次行品名
                        else
                        begin
                          xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                        end
                      end;
                    end;
                  end;
                  st := True;
                end;
             end
             //受注数
             //else if ((HNsGrid1.Col = ctCol_AcceptAnOrderCntDisplay) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
             else if ((colIndex = ctCol_AcceptAnOrderCntDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行,ヘッダ部
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    xSetHeaderControl();
                    st := True;
                  end else
                  begin
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      // 先頭行以外,前行出荷数
                      //if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, HNsGrid1.Row - 1]) then
                      if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, rowIndex - 1] = False) then
                      begin
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                        xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex-1);
                      end
                      //前行受注数
                      else if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, (logicalRowIndex - 1) * 2] = False) then
                      begin
                        //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex-1);
                        xGotoCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex-1);
                      end
                      //前行品番
                      else
                      begin
                        //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行,同行品名
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 先頭行以外,同行品名
                    //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                    st := True;
                  end;
                //end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行,同行出荷数
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
                    if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, rowIndex + 1] = False) then
                    begin
                      xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
                    end
                    else
                    begin
                      xSetFootControl;
                    end;
                    st := True;
                  end else
                  begin
                    // 最終行以外,同行出荷数
                    //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
                    if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, rowIndex + 1] = False) then
                    begin
                      xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
                    end
                    else
                    begin
                      if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                      begin
                        //次行受注数
                        if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, (logicalRowIndex + 1) * 2] = False) then
                        begin
                          //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex-1);
                          xGotoCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex + 1);
                        end
                        //次行品番
                        else
                        begin
                          //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex-1);
                          xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex + 1);
                        end;
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行,同行販売区分
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 最終行以外,同行販売区分
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    st := True;
                  end;
                end;
             end
             //出荷数
             //else if ((HNsGrid1.Col = ctCol_ShipmentCntDisplay) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
             else if ((colIndex = ctCol_ShipmentCntDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                  if vk_Up_Check then
                begin
                  // 先頭行
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, HNsGrid1.Row - 1]) then
                    if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, rowIndex - 1]) then
                    begin
                      // ヘッダ部
                      xSetHeaderControl();
                    end else
                    begin
                      // 同行受注数
                      //HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);
                      xGotoCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);
                    end;
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, HNsGrid1.Row - 1]) then
                    if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, rowIndex - 1]) then
                    begin
                      // 前行出荷数
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                      begin
                        //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex-1);
                        xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex-1);
                      end;
                    end else
                    begin
                      // 同行受注数
                      //HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);
                      xGotoCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行,同行仕入先
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
                    xGotoCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 先頭行以外,同行仕入先
                    //HNsGrid1.LogicalFocusCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
                    xGotoCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
                    st := True;
                  end;
                // end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行,フッタ部
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    xSetFootControl();
                    st := True;
                  end else
                  begin
                    // 最終行以外,次行出荷数
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, HNsGrid1.Row + 2]) then
                      if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, rowIndex + 2]) then
                      begin
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                      end else
                      begin
                        //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex+1);
                        xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex+1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行,同行標準価格
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
//                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
//                  begin
//                    //HNsGrid1.LogicalFocusCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
//                    xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
//                    st := True;
//                  end else
//                  begin
//                    // 最終行以外,同行標準価格
//                    //HNsGrid1.LogicalFocusCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
//                    xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
//                    st := True;
//                  end;
                   st := True;
                  //同行標準価格
                  if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, logicalRowIndex * 2 + 1] = False) then
                  begin
                    xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
                  end
                  //同行売価率
                  else if (HNsGrid1.ReadOnly[ctCol_SalesRate, logicalRowIndex * 2 + 1] = False) then
                  begin
                    xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                  end
                  else
                  begin
                    //最終行
                    if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                    begin
                      xSetFootControl();
                    end
                    else
                    begin
                      //次行品名
                      if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                      begin
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                      end;
                    end;
                end;
                end;
             end
             //販売区分
             //else if ((HNsGrid1.Col = ctCol_SalesCode) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
             else if ((colIndex = ctCol_SalesCode) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行,ヘッダ部
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    xSetHeaderControl();
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, HNsGrid1.Row - 1] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, rowIndex - 1] = false) then
                      begin
                        // 前行標準価格
                        //HNsGrid1.LogicalFocusCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex-1);
                        xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex-1);
                      end else
                      if (HNsGrid1.ReadOnly[ctCol_SalesCode, (logicalRowIndex - 1) * 2] = false) then
                      begin
                        // 前行販売区分
                        xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex-1);
                      end else
                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex - 1] = false) then
                      begin
                        // 前行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                      end else
                      begin
                        // 前行品名
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, rowIndex] = false) then
                    begin
                      // 同行受注数
                      //HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);
                      xGotoCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);
                    end else
                    begin
                      // 同行品名
                      //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                      xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                    end;
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, rowIndex] = false) then
                    begin
                      // 同行受注数
                      //HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);
                      xGotoCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);
                    end else
                    begin
                      // 同行品名
                      //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                      xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                    end;
                    st := True;
                  end;
                // end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行,同行標準価格
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
//                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
//                  begin
//                    //HNsGrid1.LogicalFocusCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
//                    xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
//                    st := True;
//                  end else
//                  begin
//                    // 最終行以外,同行標準価格
//                    //HNsGrid1.LogicalFocusCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
//                    xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
//                    st := True;
//                  end;
                  st := True;
                  //同行標準価格
                  if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, logicalRowIndex * 2 + 1] = False) then
                  begin
                    xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
                  end
                  else
                  begin
                    //最終行
                    if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                    begin
                      xSetFootControl();
                    end
                    else
                    begin
                      if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                      begin
                        if (HNsGrid1.ReadOnly[ctCol_SalesCode, (logicalRowIndex + 1) * 2] = False) then
                        begin
                          //次行販売区分
                          xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex + 1);
                        end
                        else
                        begin
                          //次行品名
                          xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                        end;
                      end;
                    end;
                  end;

                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_CostRate, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_CostRate, rowIndex] = false) then
                    begin
                      // 同行原価率
                      //HNsGrid1.LogicalFocusCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex);
                      xGotoCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex);
                    end else
                    //if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, rowIndex] = false) then
                    begin
                      // 同行倉庫
                      //HNsGrid1.LogicalFocusCell(ctCol_WarehouseCode,ctRow_WarehouseCode, logicalRowIndex);
                      xGotoCell(ctCol_WarehouseCode,ctRow_WarehouseCode, logicalRowIndex);
                    end else
                    begin
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                      begin
                        //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 3] = false) then
                        if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 3] = false) then
                        begin
                          // 次行品番
                          //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                          xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        end else
                        begin
                          // 次行品名
                          //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                          xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                        end;
                      end;
                    end;

                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (HNsGrid1.ReadOnly[ctCol_CostRate, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_CostRate, rowIndex] = false) then
                    begin
                      // 同行原価率
                      //HNsGrid1.LogicalFocusCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex);
                      xGotoCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex);
                    end else
                    //if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, rowIndex] = false) then
                    begin
                      // 同行倉庫
                      //HNsGrid1.LogicalFocusCell(ctCol_WarehouseCode,ctRow_WarehouseCode, logicalRowIndex);
                      xGotoCell(ctCol_WarehouseCode,ctRow_WarehouseCode, logicalRowIndex);
                    end else
                    begin
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                      begin
                        if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 3] = false) then
                        begin
                          // 次行品番
                          //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                          xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        end else
                        begin
                          // 次行品名
                          //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                          xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                        end;
                      end;
                    end;
                    st := True;
                  end;
                end;
             end
             //標準価格
             //else if ((HNsGrid1.Col = ctCol_ListPriceDisplay) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
             else if ((colIndex = ctCol_ListPriceDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行,同行販売区分
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 先頭行以外,同行販売区分
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    st := True;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行,同行出荷数
                  //if logicalRowIndex = 1 then
//                  if logicalRowIndex = 1 then
//                  begin
//                    //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
//                    xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
//                    st := True;
//                  end else
//                  begin
//                    // 先頭行以外,同行出荷数
//                    //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
//                    xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
//                    st := True;
//                  end;
                  //同行出荷数
                  if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, rowIndex] = False) then
                  begin
                    xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
                  end
                  //同行仕入先
                  else
                  begin
                    xGotoCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
                  end;
                  st := True;
                //end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行,フッタ部
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    xSetFootControl();
                    st := True;
                  end else
                  begin
                    // 最終行以外,次行販売区分
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_SalesCode, HNsGrid1.Row + 1]) then
                      if (HNsGrid1.ReadOnly[ctCol_SalesCode, rowIndex + 1]) then
                      begin
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                      end else
                      begin
                        //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex+1);
                        xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex+1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行,同行売価率
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_SalesRate, HNsGrid1.Row]) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesRate, rowIndex]) then
                    begin
                      xSetFootControl();
                    end else
                    begin
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                      xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                    end;
                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (HNsGrid1.ReadOnly[ctCol_SalesRate, HNsGrid1.Row]) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesRate, rowIndex]) then
                    begin
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                      begin
                        //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 2]) then
                        if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 2]) then
                        begin
                          // 次行品番
                          //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex + 1);
                          xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex + 1);
                        end else
                        begin
                          // 次行品名
                          //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                          xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                        end;
                      end;
                    end else
                    begin
                      // 同行売価率
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                      xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                    end;
                    st := True;
                  end;
                end;
             end
             //原価率
             //else if ((HNsGrid1.Col = ctCol_CostRate) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
             else if ((colIndex = ctCol_CostRate) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行,ヘッダ部
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    xSetHeaderControl();
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_SalesRate, HNsGrid1.Row - 2] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_SalesRate, rowIndex - 2] = false) then
                      begin
                        // 前行売価率
                        //HNsGrid1.LogicalFocusCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex-1);
                        xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex-1);
                      //end else if (HNsGrid1.ReadOnly[ctCol_CostRate, HNsGrid1.Row - 2] = false) then
                      end else if (HNsGrid1.ReadOnly[ctCol_CostRate, rowIndex - 2] = false) then
                      begin
                        // 前行原価率
                        //HNsGrid1.LogicalFocusCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex-1);
                        xGotoCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex-1);
                      end else
                      begin
                        // 前行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行,同行販売区分
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 先頭行以外,同行販売区分
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    st := True;
                  end;
                // end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_SalesRate, HNsGrid1.Row + 1]) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesRate, rowIndex + 1]) then
                    begin
                      // フッタ部
                      xSetFootControl();
                    end else
                    begin
                      // 同行売価率
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                      xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                    end;
                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (HNsGrid1.ReadOnly[ctCol_SalesRate, HNsGrid1.Row + 1]) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesRate, rowIndex + 1]) then
                    begin
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                      begin
                        //if (HNsGrid1.ReadOnly[ctCol_CostRate, HNsGrid1.Row + 2] = false) then
                        if (HNsGrid1.ReadOnly[ctCol_CostRate, rowIndex + 2] = false) then
                        begin
                          // 次行原価率
                          //HNsGrid1.LogicalFocusCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex + 1);
                          xGotoCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex + 1);
                        end else
                        begin
                          // 次行品番
                          //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                          xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        end;
                      end;
                    end else
                    begin
                      // 同行売価率
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                      xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行,同行原単価
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                    xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 最終行以外,同行原単価
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                    xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                    st := True;
                  end;
                end;
             end
             //原単価
             //else if ((HNsGrid1.Col = ctCol_SalesUnitCost) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
             else if ((colIndex = ctCol_SalesUnitCost) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行,ヘッダ部
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    xSetHeaderControl();
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, HNsGrid1.Row - 2] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, rowIndex - 2] = false) then
                      begin
                        // 前行売単価
                        //HNsGrid1.LogicalFocusCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex-1);
                        xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex-1);
                      //end else if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, HNsGrid1.Row - 2] = false) then
                      end else if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, rowIndex - 2] = false) then
                      begin
                        // 前行原単価
                        //HNsGrid1.LogicalFocusCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex-1);
                        xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex-1);
                      end else
                      begin
                        // 前行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行,同行原価率
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex);
                    xGotoCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 先頭行以外,同行原価率
                    //HNsGrid1.LogicalFocusCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex);
                    xGotoCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex);
                    st := True;
                  end;
                // end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, HNsGrid1.Row + 1]) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, rowIndex + 1]) then
                    begin
                      // フッタ部
                      xSetFootControl();
                    end else
                    begin
                      // 同行売単価
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex);
                      xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex);
                    end;
                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, HNsGrid1.Row + 1]) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, rowIndex + 1]) then
                    begin
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                      begin
                        //if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, HNsGrid1.Row + 2]) then
                        if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, HNsGrid1.Row + 2]) then
                        begin
                          // 次行原単価
                          //HNsGrid1.LogicalFocusCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex + 1);
                          xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex + 1);
                        end else
                        begin
                          // 次行品番
                          //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                          xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        end;
                      end;
                    end else
                    begin
                      // 同行売単価
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex);
                      xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex);
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, rowIndex] = false) then
                    begin
                      // 同行倉庫
                      //HNsGrid1.LogicalFocusCell(ctCol_WarehouseCode,ctRow_WarehouseCode, logicalRowIndex);
                      xGotoCell(ctCol_WarehouseCode,ctRow_WarehouseCode, logicalRowIndex);
                    end else
                    begin
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                      begin
                        //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 3] = false) then
                        if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 3] = false) then
                        begin
                          // 次行品番
                          //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                          xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        end else
                        begin
                          // 次行品名
                          //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                          xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                        end;
                      end;
                    end;

                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, rowIndex] = false) then
                    begin
                      // 同行倉庫
                      //HNsGrid1.LogicalFocusCell(ctCol_WarehouseCode,ctRow_WarehouseCode, logicalRowIndex);
                      xGotoCell(ctCol_WarehouseCode,ctRow_WarehouseCode, logicalRowIndex);
                    end else
                    begin
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                      begin
                        //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 3] = false) then
                        if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 3] = false) then
                        begin
                          // 次行品番
                          //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                          xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        end else
                        begin
                          // 次行品名
                          //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                          xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                        end;
                      end;
                    end;
                    st := True;
                  end;
                end;
             end
             //売価率
             //else if ((HNsGrid1.Col = ctCol_SalesRate) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
             else if ((colIndex = ctCol_SalesRate) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_CostRate, HNsGrid1.Row - 1]) then
                    if (HNsGrid1.ReadOnly[ctCol_CostRate, rowIndex - 1]) then
                    begin
                      // ヘッダ部
                      xSetHeaderControl();
                    end else
                    begin
                      // 同行原価率
                      //HNsGrid1.LogicalFocusCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex);
                      xGotoCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex);
                    end;
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (HNsGrid1.ReadOnly[ctCol_CostRate, HNsGrid1.Row - 1] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_CostRate, rowIndex - 1] = false) then
                    begin
                      // 同行原価率
                      //HNsGrid1.LogicalFocusCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex);
                      xGotoCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex);
                    //end else if (HNsGrid1.ReadOnly[ctCol_SalesRate, HNsGrid1.Row - 2] = false) then
                    end else if (HNsGrid1.ReadOnly[ctCol_SalesRate, rowIndex - 2] = false) then
                    begin
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                      begin
                        // 前行売価率
                        //HNsGrid1.LogicalFocusCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex - 1);
                        xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex - 1);
                      end;
                    end else
                    begin
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                      begin
                        // 前行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex - 1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex - 1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行,同行標準価格
                  //if logicalRowIndex = 1 then
//                  if logicalRowIndex = 1 then
//                  begin
//                    //HNsGrid1.LogicalFocusCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
//                    xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
//                    st := True;
//                  end else
//                  begin
//                    // 先頭行以外,同行標準価格
//                    //HNsGrid1.LogicalFocusCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
//                    xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
//                    st := True;
//                  end;
                  if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, logicalRowIndex * 2 + 1] = False) then
                  begin
                    //同行標準価格
                    xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
                  end
                  else if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, logicalRowIndex * 2 + 1] = False) then
                  begin
                    //同行出荷数
                    xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
                  end
                  else
                  begin
                    //同行仕入先
                    xGotoCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
                  end;
                  st := True;
                //end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行,フッタ部
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    xSetFootControl();
                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_CostRate, HNsGrid1.Row + 1] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_CostRate, rowIndex + 1] = false) then
                      begin
                        // 次行原価率
                        //HNsGrid1.LogicalFocusCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex+1);
                        xGotoCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex+1);
                      end else
                      //if (HNsGrid1.ReadOnly[ctCol_SalesRate, HNsGrid1.Row + 2] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_SalesRate, rowIndex + 2] = false) then
                      begin
                        // 次行売価率
                        //HNsGrid1.LogicalFocusCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex+1);
                        xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex+1);
                      end else
                      begin
                        // 次行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行,同行売単価
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex);
                    xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 最終行以外,同行売単価
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex);
                    xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex);
                    st := True;
                  end;
                end;
             end
             //売単価
             //else if ((HNsGrid1.Col = ctCol_SalesUnPrcDisplay) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
             else if ((colIndex = ctCol_SalesUnPrcDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行,同行原単価
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, HNsGrid1.Row - 1]) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, rowIndex - 1]) then
                    begin
                      xSetHeaderControl();
                    end else
                    begin
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                      xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                    end;
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, HNsGrid1.Row - 1] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, rowIndex - 1] = false) then
                    begin
                      // 同行原単価
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                      xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                    //end else if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, HNsGrid1.Row - 2] = false) then
                    end else if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, rowIndex - 2] = false) then
                    begin
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                      begin
                        // 前行売単価
                        //HNsGrid1.LogicalFocusCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex - 1);
                        xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex - 1);
                      end;
                    end else
                    begin
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                      begin
                        // 前行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex - 1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex - 1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行,同行売価率
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                    xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 先頭行以外,同行売価率
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                    xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                    st := True;
                  end;
                // end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行,フッタ部
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    xSetFootControl();
                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, HNsGrid1.Row + 1] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, rowIndex + 1] = false) then
                      begin
                        // 次行原単価
                        //HNsGrid1.LogicalFocusCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex+1);
                        xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex+1);
                      end else
                      //if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, HNsGrid1.Row + 2] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, rowIndex + 2] = false) then
                      begin
                        // 次行売単価
                        //HNsGrid1.LogicalFocusCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex+1);
                        xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex+1);
                      end else
                      begin
                        // 次行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, rowIndex] = false) then
                    begin
                      // 同行売上金額
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesMoneyDisplay,ctRow_SalesMoneyDisplay, logicalRowIndex);
                      xGotoCell(ctCol_SalesMoneyDisplay,ctRow_SalesMoneyDisplay, logicalRowIndex);
                    end;
                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, HNsGrid1.Row] = false) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, rowIndex] = false) then
                    begin
                      // 同行売上金額
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesMoneyDisplay,ctRow_SalesMoneyDisplay, logicalRowIndex);
                      KeyPreview := False; //ADD 2010/07/16
                      xGotoCell(ctCol_SalesMoneyDisplay,ctRow_SalesMoneyDisplay, logicalRowIndex);
                    end else
                    begin
                      //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                      if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                      begin
                        //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 2] = false) then
                        if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 2] = false) then
                        begin
                          // 次行品番
                          //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex + 1);
                          xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex + 1);
                        end else
                        begin
                          // 次行品名
                          //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                          xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                        end;
                      end;
                    end;

                    st := True;
                  end;
                end;
             end
             //売上金額
             //else if ((HNsGrid1.Col = ctCol_SalesMoneyDisplay) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
             else if ((colIndex = ctCol_SalesMoneyDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    // ヘッダ部
                    xSetHeaderControl();
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, HNsGrid1.Row - 2] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, rowIndex - 2] = false) then
                      begin
                        // 前行売上金額
                        //HNsGrid1.LogicalFocusCell(ctCol_SalesMoneyDisplay,ctRow_SalesMoneyDisplay, logicalRowIndex-1);
                        xGotoCell(ctCol_SalesMoneyDisplay,ctRow_SalesMoneyDisplay, logicalRowIndex-1);
                      end else
                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row - 2] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex - 2] = false) then
                      begin
                        // 前行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                      end else
                      begin
                        // 前行品名
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行,同行売単価
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex);
                    xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex);
                    st := True;
                  end else
                  begin
                    // 先頭行以外,同行売単価
                    //HNsGrid1.LogicalFocusCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex);
                    xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex);
                    st := True;
                  end;
                //end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行,フッタ部
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    xSetFootControl();
                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, HNsGrid1.Row + 2] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, rowIndex + 2] = false) then
                      begin
                        // 次行売上金額
                        //HNsGrid1.LogicalFocusCell(ctCol_SalesMoneyDisplay,ctRow_SalesMoneyDisplay, logicalRowIndex+1);
                        xGotoCell(ctCol_SalesMoneyDisplay,ctRow_SalesMoneyDisplay, logicalRowIndex+1);
                      end else
                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 2] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 2] = false) then
                      begin
                        // 次行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                      end else
                      begin
                        // 次行品名
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行,移動無し
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //>>>2010/08/09
//                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 2] = false) then
//                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 2] = false) then
//                      begin
//                        // 次行品番
//                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
//                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
//                      end else
//                      begin
//                        // 次行品名
//                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);1
//                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
//                      end;

                      if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowIndex] = false) then begin
                        // 次行BLコード
                        xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex+1);
                      end else begin
                        // 次行品名
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                      end;
                      //<<<2010/08/09
                    end;
                    st := True;
                  end;
                end;
             end
             //倉庫
             //else if ((HNsGrid1.Col = ctCol_WarehouseCode) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
             else if ((colIndex = ctCol_WarehouseCode) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
             begin
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行,ヘッダ部
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    xSetHeaderControl();
                    st := True;
                  end else
                  begin
                    // 先頭行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, HNsGrid1.Row - 2] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, rowIndex - 2] = false) then
                      begin
                        // 前行倉庫
                        //HNsGrid1.LogicalFocusCell(ctCol_WarehouseCode,ctRow_WarehouseCode, logicalRowIndex-1);
                        xGotoCell(ctCol_WarehouseCode,ctRow_WarehouseCode, logicalRowIndex-1);
                      end else
                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row - 1] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex - 1] = false) then
                      begin
                        // 前行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                      end else
                      begin
                        // 前行品名
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                end else if vk_Left_Check then
                begin
                  // 先頭行,同行原単価
                  //if logicalRowIndex = 1 then
                  if logicalRowIndex = 1 then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, HNsGrid1.Row]) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, rowIndex]) then
                    begin
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                      xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    end else
                    begin
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                      xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                    end;
                    st := True;
                  end else
                  begin
                    // 先頭行以外,同行原単価
                    //if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, HNsGrid1.Row]) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, rowIndex]) then
                    begin
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                      xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
                    end else
                    begin
                      //HNsGrid1.LogicalFocusCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                      xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                end else if vk_Down_Check then
                begin
                  // 最終行,フッタ部
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    xSetFootControl();
                    st := True;
                  end else
                  begin
                    // 最終行以外
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, HNsGrid1.Row + 2] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, rowIndex + 2] = false) then
                      begin
                        // 次行倉庫
                        //HNsGrid1.LogicalFocusCell(ctCol_WarehouseCode,ctRow_WarehouseCode, logicalRowIndex+1);
                        xGotoCell(ctCol_WarehouseCode,ctRow_WarehouseCode, logicalRowIndex+1);
                      end else
                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 3] = false) then
                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 3] = false) then
                      begin
                        // 次行品番
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                      end else
                      begin
                        // 次行品名
                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                      end;
                    end;
                    st := True;
                  end;
                //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                end else if vk_Right_Check then
                begin
                  // 最終行,移動無し
                  //if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    st := True;
                  end else
                  begin
                    //>>>2010/08/09
//                    // 最終行以外,次行品番価
//                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
//                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
//                    begin
//                      //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.Row + 3] = false) then
//                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 3] = false) then
//                      begin
//                        // 次行品番
//                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
//                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
//                      end else
//                      begin
//                        // 次行品名
//                        //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
//                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
//                      end;
//                    end;

                    if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 1] = false) then begin
                      // 次行品番
                      xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                    end else begin
                      // 次行品名
                      xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                    end;

                    //<<<2010/08/09
                    st := True;
                  end;
                end;
             end;
          end
          //BLコード検索
          else if (i_searchPartsMode = ctBLCodeSearch) then
          begin
            //BLコード
            //if ((HNsGrid1.Col = ctCol_BLGoodsCode) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
            if ((colIndex = ctCol_BLGoodsCode) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
            begin
                // ↑キー
                //if (GetKeyState(VK_UP) and $8000 = $8000) then
                if vk_Up_Check then
                begin
                  // 先頭行
                  //if (HNsGrid1.LogicalRow = 1) then
                  if (logicalRowIndex = 1) then
                  begin
                    xSetHeaderControl;
                  end else
                  // 先頭行以外
                  begin
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //>>>2010/08/09
//                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2] = False) then
//                      if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex - 1) * 2] = False) then
//                      begin
////                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
//                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
//                      end else
//                      begin
////                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2); // 前行品名
//                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex - 1); // 前行品名
//                      end;

                      if (RCHNB01003UADM.SearchPartsModeState[logicalRowIndex-2] = ctSearchPartsModeState_BLCodeSearch) then begin
                        //-------------------------------------------
                        // BLコード検索行
                        //-------------------------------------------
                        if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowIndex - 2] = false) then begin
                          // 前行BLコード
                          xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex-1);
                        end else begin
                          // 前行品名
                          xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                        end;
                      end else begin
                        //-------------------------------------------
                        // 品番検索行、検索無し行
                        //-------------------------------------------
                        if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex - 2] = false) then begin
                          // 前行品番
                          xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                        end else begin
                          // 前行品名
                          xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
                        end;
                      end;
                      //<<<2010/08/09
                    end;

                  end;
                end
                // ←キー
                //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
                else if vk_Left_Check then
                begin
                  // 先頭行
                  //if (HNsGrid1.LogicalRow = 1) then
                  if (logicalRowIndex = 1) then
                  begin
                    st := True;  // 移動無し
                  end else
                  // 先頭行以外
                  begin
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1] = False) then
                      if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, (logicalRowIndex - 1) * 2 + 1] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行売単価
                        xGotoCell(ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay, logicalRowIndex - 1);  // 前行売単価
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_ListPriceDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行標準価格
                        xGotoCell(ctCol_ListPriceDisplay, ctRow_ListPriceDisplay, logicalRowIndex - 1);  // 前行標準価格
                      end;
                    end;
                  end;
                end
                // ↓キー
                //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
                else if vk_Down_Check then
                begin
                  // 最終行
                  //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
                  if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                  begin
                    st := True;  // 移動無し
                  end else
                  // 最終行以外
                  begin
                    //>>>2010/08/09
//                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
//                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
//                    begin
//                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
//                      if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
//                      begin
////                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
//                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
//                      end else
//                      begin
////                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2);  // 次行品名
//                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1);  // 次行品名
//                      end;
//                    end;

                    // 同行品番
                    if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex] = false) then begin
                      xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                    end;
                    //<<<2010/08/09
                  end;
                end
                // →キー
                //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
                else if vk_Right_Check then
                begin
//                  HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.LogicalRow * 2);  // 同行品名
                  xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex);  // 同行品名
                end
              end
            //品名
            //else if ((HNsGrid1.Col = ctCol_GoodsName) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
            else if ((colIndex = ctCol_GoodsName) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
            begin
              // ↑キー
              //if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
                // 先頭行
                //if (HNsGrid1.LogicalRow = 1) then
                if (logicalRowIndex = 1) then
                begin
                  xSetHeaderControl;
                end else
                // 先頭行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, (HNsGrid1.LogicalRow - 1) * 2 + 1] = False) then
                    if (HNsGrid1.ReadOnly[ctCol_GoodsNo, (logicalRowIndex - 1) * 2 + 1] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_GoodsNo, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行品番
                      xGotoCell(ctCol_GoodsNo, ctRow_GoodsNo, logicalRowIndex - 1);  // 前行品番
                    end else
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2] = False) then
                      if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex - 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2); // 前行品名
                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex - 1); // 前行品名
                      end;
                    end;
                  end;
                end;
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
                // 先頭行
                //if (HNsGrid1.LogicalRow = 1) then
                if (logicalRowIndex = 1) then
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2] = False) then
                  if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, logicalRowIndex * 2] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2);  // 同行BLコード
                    xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex);  // 同行BLコード
                  end else
                  begin
                    st := True;  // 移動無し
                  end;
                end else
                // 先頭行以外
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2] = False) then
                  if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, logicalRowIndex * 2] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2);  // 同行BLコード
                    xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex);  // 同行BLコード
                  end else
                  begin
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2] = False) then
                      if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex - 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2); // 前行品名
                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex - 1); // 前行品名
                      end;
                    end;
                  end;
                end;
              end
              // ↓キー
              //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
                if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1] = False) then
                  if (HNsGrid1.ReadOnly[ctCol_GoodsNo, logicalRowIndex * 2 + 1] = False) then
                  begin
//                  HNsGrid1.FocusCell(ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1);  // 同行品番
                    xGotoCell(ctCol_GoodsNo, ctRow_GoodsNo, logicalRowIndex);  // 同行品番
                  end else
                  begin
                    xSetFootControl();
                  end;
                end else
                // 最終行以外
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1] = False) then
                  if (HNsGrid1.ReadOnly[ctCol_GoodsNo, logicalRowIndex * 2 + 1] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1);  // 同行品番
                    xGotoCell(ctCol_GoodsNo, ctRow_GoodsNo, logicalRowIndex);  // 同行品番
                  end else
                  begin
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
                      if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2); // 次行品名
                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1); // 次行品名
                      end;
                    end;
                  end;
                end;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
                //if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, HNsGrid1.LogicalRow * 2] = False) then
                if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, logicalRowIndex * 2] = False) then
                begin
//                  HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntDisplay, HNsGrid1.LogicalRow * 2);  // 同行受注数
                  xGotoCell(ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);  // 同行受注数
                end else
                begin
//                  HNsGrid1.FocusCell(ctCol_SalesCode, HNsGrid1.LogicalRow * 2);  // 同行販売区分
                  xGotoCell(ctCol_SalesCode, ctRow_SalesCode, logicalRowIndex);  // 同行販売区分
                end;
              end;
            end
            //品番
            //else if ((HNsGrid1.Col = ctCol_GoodsNo) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
            else if ((colIndex = ctCol_GoodsNo) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
            begin
              // ↑キー
              //if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
                //>>>2010/08/09
//                // 先頭行
//                //if (HNsGrid1.LogicalRow = 1) then
//                if (logicalRowIndex = 1) then
//                begin
//                  st := True;  // 移動無し
//                  xSetHeaderControl;
//                end
//                else
//                // 先頭行以外
//                begin
//                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
//                  if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
//                  begin
//                    //if (HNsGrid1.ReadOnly[ctCol_GoodsNo, (HNsGrid1.LogicalRow - 1) * 2 + 1] = False) then
//                    if (HNsGrid1.ReadOnly[ctCol_GoodsNo, (logicalRowIndex - 1) * 2 + 1] = False) then
//                    begin
////                      HNsGrid1.FocusCell(ctCol_GoodsNo, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行品番
//                      xGotoCell(ctCol_GoodsNo, ctRow_GoodsNo, logicalRowIndex - 1);  // 前行品番
//                    end else
//                    begin
//                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2] = False) then
//                      if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex - 1) * 2] = False) then
//                      begin
////                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
//                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
//                      end else
//                      begin
////                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2); // 前行品名
//                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex - 1); // 前行品名
//                      end;
//                    end;
//                  end;
//                end;

                // 同行BLコード
                if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowIndex] = false) then begin
                  xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex);
                end;
                st := True;
                //<<<2010/08/09
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
                //>>>2010/08/09
////                HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.LogicalRow * 2);  // 同行品名
//                xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex);  // 同行品名
                xGotoCell(ctCol_WarehouseCode,ctRow_WarehouseCode, logicalRowIndex);
                //<<<2010/08/09
              end
              // ↓キー
              //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
                if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  xSetFootControl();
                end else
                // 最終行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                  begin
                    //>>>2010/08/09
//                    //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
//                    if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
//                    begin
////                      HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
//                      xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
//                    end else
//                    begin
////                      HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2); // 次行品名
//                      xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1); // 次行品名
//                    end;

                    if (RCHNB01003UADM.SearchPartsModeState[logicalRowIndex] = ctSearchPartsModeState_BLCodeSearch) then begin
                      //-------------------------------------------
                      // BLコード検索行
                      //-------------------------------------------
                      if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowIndex + 2] = false) then begin
                        // 次行BLコード
                        xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex+1);
                      end else begin
                        // 次行品名
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                      end;
                    end else begin
                      //-------------------------------------------
                      // 品番検索行、検索無し行
                      //-------------------------------------------
                      if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 2] = false) then begin
                        // 次行品番
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex+1);
                      end else begin
                        // 次行品名
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                      end;
                    end;
                    //<<<2010/08/09
                  end;
                end;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_GoodsKindCode, HNsGrid1.LogicalRow * 2 + 1);  // 同行純優良
                xGotoCell(ctCol_GoodsKindCode, ctRow_GoodsKindCode, logicalRowIndex);  // 同行純優良
              end;
            end
            //純優
            //else if ((HNsGrid1.Col = ctCol_GoodsKindCode) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
            else if ((colIndex = ctCol_GoodsKindCode) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
            begin
              // ↑キー
              //if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
                // 先頭行
                //if (HNsGrid1.LogicalRow = 1) then
                if (logicalRowIndex = 1) then
                begin
//                  HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2);  // 同行BLコード
                  xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex);  // 同行BLコード
                end else
                // 先頭行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2] = False) then
                    if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex - 1) * 2] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
                      xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
                    end else
                    begin
//                      HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2); // 前行品名
                      xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex - 1); // 前行品名
                    end;
                  end;
                end;
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1);  // 同行品番
                xGotoCell(ctCol_GoodsNo, ctRow_GoodsNo, logicalRowIndex);  // 同行品番
              end
              // ↓キー
              //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
                if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  xSetFootControl();
                end else
                // 最終行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
                    if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                      xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                    end else
                    begin
//                      HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2); // 次行品名
                      xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1); // 次行品名
                    end;
                  end;
                end;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_GoodsMakerCd, HNsGrid1.LogicalRow * 2 + 1);  // 同行メーカー
                xGotoCell(ctCol_GoodsMakerCd, ctRow_GoodsMakerCd, logicalRowIndex);  // 同行メーカー
              end;
            end
            //メーカー
            //else if ((HNsGrid1.Col = ctCol_GoodsMakerCd) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
            else if ((colIndex = ctCol_GoodsMakerCd) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
            begin
              // ↑キー
              //if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
                // 先頭行
                //if (HNsGrid1.LogicalRow = 1) then
                if (logicalRowIndex = 1) then
                begin
//                  HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2);  // 同行BLコード
                  xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex);  // 同行BLコード
                end else
                // 先頭行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2] = False) then
                    if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex - 1) * 2] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
                      xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
                    end else
                    begin
//                      HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2); // 前行品名
                      xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex - 1); // 前行品名
                    end;
                  end;
                end;
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_GoodsKindCode, HNsGrid1.LogicalRow * 2 + 1);  // 同行純優良
                xGotoCell(ctCol_GoodsKindCode, ctRow_GoodsKindCode, logicalRowIndex);  // 同行純優良
              end
              // ↓キー
             // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
                if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  xSetFootControl();
                end else
                // 最終行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
                    if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                      xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                    end else
                    begin
//                      HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2); // 次行品名
                      xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1); // 次行品名
                    end;
                  end;
                end;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_SupplierCd, HNsGrid1.LogicalRow * 2 + 1);  // 同行仕入先
                xGotoCell(ctCol_SupplierCd, ctRow_SupplierCd, logicalRowIndex);  // 同行仕入先
              end;
            end
            //仕入先
            //else if ((HNsGrid1.Col = ctCol_SupplierCd) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
            else if ((colIndex = ctCol_SupplierCd) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
            begin
              // ↑キー
              //if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
                // 先頭行
                //if (HNsGrid1.LogicalRow = 1) then
                if (logicalRowIndex = 1) then
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2] = False) then
                  if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, logicalRowIndex * 2] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2);  // 同行BLコード
                    xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex);  // 同行BLコード
                  end else
                  begin
//                    HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.LogicalRow * 2); // 同行品名
                    xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex); // 同行品名
                  end;
                end else
                // 先頭行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2] = False) then
                    if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex - 1) * 2] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
                      xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
                    end else
                    begin
//                      HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2); // 前行品名
                      xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex - 1); // 前行品名
                    end;
                  end;
                end;
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
                //if (HNsGrid1.ReadOnly[ctCol_GoodsMakerCd, HNsGrid1.LogicalRow * 2 + 1] = False) then
                if (HNsGrid1.ReadOnly[ctCol_GoodsMakerCd, logicalRowIndex * 2 + 1] = False) then
                begin
//                  HNsGrid1.FocusCell(ctCol_GoodsMakerCd, HNsGrid1.LogicalRow * 2 + 1);  // 同行メーカー
                  xGotoCell(ctCol_GoodsMakerCd, ctRow_GoodsMakerCd, logicalRowIndex);  // 同行メーカー
                end else
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, HNsGrid1.LogicalRow * 2] = False) then
                  if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, logicalRowIndex * 2] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_SalesUnitCost, HNsGrid1.LogicalRow * 2);  // 同行原単価
                    xGotoCell(ctCol_SalesUnitCost, ctRow_SalesUnitCost, logicalRowIndex);  // 同行原単価
                  end else
                  begin
//                    HNsGrid1.FocusCell(ctCol_SalesCode, HNsGrid1.LogicalRow * 2);  // 同行販売区分
                    xGotoCell(ctCol_SalesCode, ctRow_SalesCode, logicalRowIndex);  // 同行販売区分
                  end;
                end;
              end
              // ↓キー
              //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
                if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  xSetFootControl();
                end else
                // 最終行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
                    if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                      xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                    end else
                    begin
//                      HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2); // 次行品名
                      xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1); // 次行品名
                    end;
                  end;
                end;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, HNsGrid1.LogicalRow * 2 + 1);  // 同行出荷数
                  //xGotoCell(ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, logicalRowIndex);  // 同行出荷数
                  //同行出荷数
                  if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, rowIndex] = False) then
                  begin
                    xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
                  end
                  //同行標準価格
                  else if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, rowIndex] = False) then
                  begin
                    xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
                  end
                  //同行売価率
                  else if (HNsGrid1.ReadOnly[ctCol_SalesRate, rowIndex] = False) then
                  begin
                    xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                  end
                  else
                  begin
                    if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                    begin
                      //フッタ部
                      xSetFootControl();
                    end
                    else
                    begin
                      if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                      begin
                        //次行BLコード
                        xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex + 1);
                      end;
                    end;
                  end;
                  st := True;
                end;
            end
            //受注数
            //else if ((HNsGrid1.Col = ctCol_AcceptAnOrderCntDisplay) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
            else if ((colIndex = ctCol_AcceptAnOrderCntDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
            begin
              // ↑キー
              //if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
                // 先頭行
                //if (HNsGrid1.LogicalRow = 1) then
                if (logicalRowIndex = 1) then
                begin
                  xSetHeaderControl;
                end else
                // 先頭行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1] = False) then
                    if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, (logicalRowIndex - 1) * 2 + 1] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行出荷数
                      xGotoCell(ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, logicalRowIndex - 1);  // 前行出荷数
                    end
                    else if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, (logicalRowIndex - 1) * 2] = False) then
                    begin
                      xGotoCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex-1);
                    end
                    else
                    begin
//                      HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
                      xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
                    end;
                  end;
                end;
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.LogicalRow * 2);  // 同行品名
                xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex);  // 同行品名
              end
              // ↓キー
              //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, HNsGrid1.LogicalRow * 2 + 1);  // 同行出荷数
                if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, rowIndex + 1] = False) then
                begin
                  xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
                end
                else
                begin
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    xSetFootControl;
                  end
                  else
                  begin
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //次行受注数
                      if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, (logicalRowIndex + 1) * 2] = False) then
                      begin
                        xGotoCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex + 1);
                      end
                      //次行品番
                      else
                      begin
                        xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex + 1);
                      end;
                    end;
                  end;

                end;
                st := True;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_SalesCode, HNsGrid1.LogicalRow * 2);  // 同行販売区分
                xGotoCell(ctCol_SalesCode, ctRow_SalesCode, logicalRowIndex);  // 同行販売区分
              end;
            end
            //出荷数
            //else if ((HNsGrid1.Col = ctCol_ShipmentCntDisplay) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
            else if ((colIndex = ctCol_ShipmentCntDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
            begin
              // ↑キー
             // if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
                // 先頭行
                //if (HNsGrid1.LogicalRow = 1) then
                if (logicalRowIndex = 1) then
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, HNsGrid1.LogicalRow * 2] = False) then
                  if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, logicalRowIndex * 2] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntDisplay, HNsGrid1.LogicalRow * 2);  // 同行受注数
                    xGotoCell(ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);  // 同行受注数
                  end else
                  begin
                    xSetHeaderControl;
                  end;
                end else
                // 先頭行以外
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, HNsGrid1.LogicalRow * 2] = False) then
                  if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, logicalRowIndex * 2] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntDisplay, HNsGrid1.LogicalRow * 2);  // 同行受注数
                    xGotoCell(ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);  // 同行受注数
                  end else
                  begin
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1] = False) then
                      if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, (logicalRowIndex - 1) * 2 + 1] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行出荷数
                        xGotoCell(ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, logicalRowIndex - 1);  // 前行出荷数
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
                      end;
                    end;
                  end;
                end;
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_SupplierCd, HNsGrid1.LogicalRow * 2 + 1);  // 同行仕入先
                xGotoCell(ctCol_SupplierCd, ctRow_SupplierCd, logicalRowIndex);  // 同行仕入先
              end
              // ↓キー
              // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
                if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  xSetFootControl();
                end else
                // 最終行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, (HNsGrid1.LogicalRow + 1) * 2 + 1] = False) then
                    if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, (logicalRowIndex + 1) * 2 + 1] = False) then
                    begin
//                       HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, (HNsGrid1.LogicalRow + 1) * 2 + 1);  // 次行出荷数
                       xGotoCell(ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, logicalRowIndex + 1);  // 次行出荷数
                    end else
                    begin
//                       HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                       xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                    end;
                  end;
                end;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_ListPriceDisplay, HNsGrid1.LogicalRow * 2 + 1);  // 同行標準価格
                //xGotoCell(ctCol_ListPriceDisplay, ctRow_ListPriceDisplay, logicalRowIndex);  // 同行標準価格
                st := True;
                //同行標準価格
                if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, logicalRowIndex * 2 + 1] = False) then
                begin
                  xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
                end else
                if (HNsGrid1.ReadOnly[ctCol_SalesRate, logicalRowIndex * 2 + 1] = False) then
                begin
                  xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                end
                else
                begin
                  //最終行
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    xSetFootControl();
                  end
                  else
                  begin
                    if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                    begin
                      if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
                      begin
                        //次行BLコード
                        xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex + 1);
                      end
                      else
                      begin
                        //次行品名
                        xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                      end;
                    end;
                  end;
                end;
              end;
            end
            //販売区分
            //else if ((HNsGrid1.Col = ctCol_SalesCode) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
            else if ((colIndex = ctCol_SalesCode) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
            begin
              // ↑キー
              //if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
                // 先頭行
                if (logicalRowIndex = 1) then
                begin
                  xSetHeaderControl;
                end else
                // 先頭行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
		              if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1] = False) then
		                if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, (logicalRowIndex - 1) * 2 + 1] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_ListPriceDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行標準価格
                      xGotoCell(ctCol_ListPriceDisplay, ctRow_ListPriceDisplay, logicalRowIndex - 1);  // 前行標準価格
                    end else
                    if (HNsGrid1.ReadOnly[ctCol_SalesCode, (logicalRowIndex - 1) * 2] = False) then
                    begin
                      //前行販売区分
                      xGotoCell(ctCol_SalesCode, ctRow_SalesCode, logicalRowIndex - 1);
                    end else
                    begin
//                      HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
                      xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
                    end;
                  end;
                end;
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
                //if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, HNsGrid1.LogicalRow * 2] = False) then
		            if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, logicalRowIndex * 2] = False) then
                begin
//                  HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntDisplay, HNsGrid1.LogicalRow * 2);  // 同行受注数
                  xGotoCell(ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, logicalRowIndex);  // 同行受注数
                end else
                begin
//                  HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.LogicalRow * 2);  // 同行品名
                  xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex);  // 同行品名
                end;
              end
              // ↓キー
              // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_ListPriceDisplay, HNsGrid1.LogicalRow * 2 + 1);  // 同行標準価格
                //xGotoCell(ctCol_ListPriceDisplay, ctRow_ListPriceDisplay, logicalRowIndex);  // 同行標準価格
                st := True;
                //同行標準価格
                if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, logicalRowIndex * 2 + 1] = False) then
                begin
                  xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
                end
                else
                begin
                  //最終行
                  if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                  begin
                    xSetFootControl();
                  end
                  else
                  begin
                    if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                    begin
                      if (HNsGrid1.ReadOnly[ctCol_SalesCode, (logicalRowIndex + 1) * 2] = False) then
                      begin
                        //次行販売区分
                        xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex + 1);
                      end
                      else
                      begin
                        //次行BLコード
                        xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex + 1);
                      end;
                    end;
                  end;
                end;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
                //if (HNsGrid1.ReadOnly[ctCol_CostRate, HNsGrid1.LogicalRow * 2] = False) then
		            if (HNsGrid1.ReadOnly[ctCol_CostRate, logicalRowIndex * 2] = False) then
                begin
//                  HNsGrid1.FocusCell(ctCol_CostRate, HNsGrid1.LogicalRow * 2);  // 同行原価率
                  xGotoCell(ctCol_CostRate, ctRow_CostRate, logicalRowIndex);  // 同行原価率
                end else
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, HNsGrid1.LogicalRow * 2] = False) then
		            if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, logicalRowIndex * 2] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_WarehouseCode, HNsGrid1.LogicalRow * 2);  // 同行倉庫
                    xGotoCell(ctCol_WarehouseCode, ctRow_WarehouseCode, logicalRowIndex);  // 同行倉庫
                  end else
                  begin
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
		                if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
		                  if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2); // 次行品名
                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1); // 次行品名
                      end;
                    end;
                  end;
                end;
              end;
            end
            //標準価格
            //else if ((HNsGrid1.Col = ctCol_ListPriceDisplay) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
            else if ((colIndex = ctCol_ListPriceDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
            begin
              // ↑キー
              //if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_SalesCode, HNsGrid1.LogicalRow * 2);  // 同行販売区分
                xGotoCell(ctCol_SalesCode, ctRow_SalesCode, logicalRowIndex);  // 同行販売区分
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, HNsGrid1.LogicalRow * 2 + 1);  // 同行出荷数
                //xGotoCell(ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, logicalRowIndex);  // 同行出荷数
                //同行出荷数
                if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, rowIndex] = False) then
                begin
                  xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
                end
                else
                begin
                  //同行仕入先
                  xGotoCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
                end;
                st := True;
              end
              // ↓キー
              // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
                if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  xSetFootControl();
                end else
                // 最終行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
		              if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_SalesCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
		                if (HNsGrid1.ReadOnly[ctCol_SalesCode, (logicalRowIndex + 1) * 2] = False) then
                    begin
//                       HNsGrid1.FocusCell(ctCol_SalesCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行販売区分
                       xGotoCell(ctCol_SalesCode, ctRow_SalesCode, logicalRowIndex + 1);  // 次行販売区分
                    end else
                    begin
//                       HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                       xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                    end;
                  end;
                end;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
		            if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_SalesRate, HNsGrid1.LogicalRow * 2 + 1] = False) then
		              if (HNsGrid1.ReadOnly[ctCol_SalesRate, logicalRowIndex * 2 + 1] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_SalesRate, HNsGrid1.LogicalRow * 2 + 1);  // 同行売価率
                    xGotoCell(ctCol_SalesRate, ctRow_SalesRate, logicalRowIndex);  // 同行売価率
                  end else
                  // フッタ部
                  begin
                    xSetFootControl();
                  end;
                // 最終行以外
                end else
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_SalesRate, HNsGrid1.LogicalRow * 2 + 1] = False) then
		              if (HNsGrid1.ReadOnly[ctCol_SalesRate, logicalRowIndex * 2 + 1] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_SalesRate, HNsGrid1.LogicalRow * 2 + 1);  // 同行売価率
                    xGotoCell(ctCol_SalesRate, ctRow_SalesRate, logicalRowIndex);  // 同行売価率
                  end else
                  begin
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
                      if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2); // 次行品名
                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1); // 次行品名
                      end;
                    end;
                  end;
                end;
              end;
            end
            //原価率
            //else if ((HNsGrid1.Col = ctCol_CostRate) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
	          else if ((colIndex = ctCol_CostRate) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
            begin
              // ↑キー
              //if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
                // 先頭行
                //if (HNsGrid1.LogicalRow = 1) then
                if (logicalRowIndex = 1) then
                begin
                  xSetHeaderControl;
                end else
                // 先頭行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
		              if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_SalesRate, (HNsGrid1.LogicalRow - 1) * 2 + 1] = False) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesRate, (logicalRowIndex - 1) * 2 + 1] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_SalesRate, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行売価率
                      xGotoCell(ctCol_SalesRate, ctRow_SalesRate, logicalRowIndex - 1);  // 前行売価率
                    end else
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2] = False) then
		                  if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex - 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2); // 前行品名
                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex - 1); // 前行品名
                      end;
                    end;
                  end;
                end;
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_SalesCode, HNsGrid1.LogicalRow * 2);  // 同行販売区分
                xGotoCell(ctCol_SalesCode, ctRow_SalesCode, logicalRowIndex);  // 同行販売区分
              end
              // ↓キー
              //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
		            if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_SalesRate, HNsGrid1.LogicalRow * 2 + 1] = False) then
                  if (HNsGrid1.ReadOnly[ctCol_SalesRate, logicalRowIndex * 2 + 1] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_SalesRate, HNsGrid1.LogicalRow * 2 + 1);  // 同行売価率
                    xGotoCell(ctCol_SalesRate, ctRow_SalesRate, logicalRowIndex);  // 同行売価率
                  end else
                  // フッタ部
                  begin
                    xSetFootControl();
                  end;
                end else
                // 最終行以外
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_SalesRate, HNsGrid1.LogicalRow * 2 + 1] = False) then
	                if (HNsGrid1.ReadOnly[ctCol_SalesRate, logicalRowIndex * 2 + 1] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_SalesRate, HNsGrid1.LogicalRow * 2 + 1);  // 同行売価率
                    xGotoCell(ctCol_SalesRate, ctRow_SalesRate, logicalRowIndex);  // 同行売価率
                  end else
                  begin
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
		                if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_CostRate, (HNsGrid1.LogicalRow + 1) * 2] = False) then
		                  if (HNsGrid1.ReadOnly[ctCol_CostRate, (logicalRowIndex + 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_CostRate, (HNsGrid1.LogicalRow + 1) * 2);  // 次行原価率
                        xGotoCell(ctCol_CostRate, ctRow_CostRate, logicalRowIndex + 1);  // 次行原価率
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード1
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                      end;
                    end;
                  end;
                end;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_SalesUnitCost, HNsGrid1.LogicalRow * 2);  // 同行原単価
                xGotoCell(ctCol_SalesUnitCost, ctRow_SalesUnitCost, logicalRowIndex);  // 同行原単価
              end;
            end
            //原単価
            //else if ((HNsGrid1.Col = ctCol_SalesUnitCost) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
	          else if ((colIndex = ctCol_SalesUnitCost) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
            begin
              // ↑キー
              //if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
                // 先頭行
                //if (HNsGrid1.LogicalRow = 1) then
		            if (logicalRowIndex = 1) then
                begin
                  xSetHeaderControl;
                end else
                // 先頭行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
		              if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1] = False) then
		                if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, (logicalRowIndex - 1) * 2 + 1] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行売単価
                      xGotoCell(ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay, logicalRowIndex - 1);  // 前行売単価
                    end else
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2] = False) then
		                  if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex - 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2); // 前行品名
                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex - 1); // 前行品名
                      end;
                    end;
                  end;
                end;
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_CostRate, HNsGrid1.LogicalRow * 2);  // 同行原価率
                xGotoCell(ctCol_CostRate, ctRow_CostRate, logicalRowIndex);  // 同行原価率
              end
              // ↓キー
              //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
		            if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, HNsGrid1.LogicalRow * 2 + 1] = False) then
		              if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, logicalRowIndex * 2 + 1] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, HNsGrid1.LogicalRow * 2 + 1);  // 同行売単価
                    xGotoCell(ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay, logicalRowIndex);  // 同行売単価
                  end else
                  begin
                    // フッタ部
                    xSetFootControl();
                  end;
                end else
                // 最終行以外
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, HNsGrid1.LogicalRow * 2 + 1] = False) then
		              if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, logicalRowIndex * 2 + 1] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, HNsGrid1.LogicalRow * 2 + 1);  // 同行売単価
                    xGotoCell(ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay, logicalRowIndex);  // 同行売単価
                  end else
                  begin
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                    if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, (HNsGrid1.LogicalRow + 1) * 2] = False) then
		                  if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, (logicalRowIndex + 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_SalesUnitCost, (HNsGrid1.LogicalRow + 1) * 2);  // 次行原単価
                        xGotoCell(ctCol_SalesUnitCost, ctRow_SalesUnitCost, logicalRowIndex + 1);  // 次行原単価
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                      end;
                    end;
                  end;
                end;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
                //if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, HNsGrid1.LogicalRow * 2] = False) then
                if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, logicalRowIndex * 2] = False) then
                begin
//                  HNsGrid1.FocusCell(ctCol_WarehouseCode, HNsGrid1.LogicalRow * 2);  // 同行倉庫
                  xGotoCell(ctCol_WarehouseCode, ctRow_WarehouseCode, logicalRowIndex);  // 同行倉庫
                end else
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
		                if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                      xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                    end else
                    begin
//                      HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2); // 次行品名
                      xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1); // 次行品名
                    end;
                  end;
                end;
              end;
            end
            //売価率
           //else if ((HNsGrid1.Col = ctCol_SalesRate) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
	          else if ((colIndex = ctCol_SalesRate) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
            begin
              // ↑キー
              //if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
                // 先頭行
                //if (HNsGrid1.LogicalRow = 1) then
                if (logicalRowIndex = 1) then
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_CostRate, HNsGrid1.LogicalRow * 2] = False) then
                  if (HNsGrid1.ReadOnly[ctCol_CostRate, logicalRowIndex * 2] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_CostRate, HNsGrid1.LogicalRow * 2);  // 同行原価率
                    xGotoCell(ctCol_CostRate, ctRow_CostRate, logicalRowIndex);  // 同行原価率
                  end else
                  begin
                    xSetHeaderControl;
                  end;
                end else
                // 先頭行以外
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_CostRate, HNsGrid1.LogicalRow * 2] = False) then
		              if (HNsGrid1.ReadOnly[ctCol_CostRate, logicalRowIndex * 2] = False) then
                  begin
                    HNsGrid1.FocusCell(ctCol_CostRate, HNsGrid1.LogicalRow * 2);  // 同行原価率
                    xGotoCell(ctCol_CostRate, ctRow_CostRate, logicalRowIndex);  // 同行原価率
                  end else
                  begin
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
		                if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                     //if (HNsGrid1.ReadOnly[ctCol_SalesRate, (HNsGrid1.LogicalRow - 1) * 2 + 1] = False) then
		                  if (HNsGrid1.ReadOnly[ctCol_SalesRate, (logicalRowIndex - 1) * 2 + 1] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_SalesRate, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行売価率
                        xGotoCell(ctCol_SalesRate, ctRow_SalesRate, logicalRowIndex - 1);  // 前行売価率
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
                      end;
                    end;
                  end;
                end;
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_ListPriceDisplay, HNsGrid1.LogicalRow * 2 + 1);  // 同行標準価格
                //xGotoCell(ctCol_ListPriceDisplay, ctRow_ListPriceDisplay, logicalRowIndex);  // 同行標準価格
                if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, logicalRowIndex * 2 + 1] = False) then
                begin
                  xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
                end
                else if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, logicalRowIndex * 2 + 1] = False) then
                begin
                  //同行出荷数
                  xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
                end
                else
                begin
                  //同行仕入先
                  xGotoCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
                end;
              end
              // ↓キー
              // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
		            if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  xSetFootControl();
                end else
                // 最終行以外
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_CostRate, (HNsGrid1.LogicalRow + 1) * 2] = False) then
		              if (HNsGrid1.ReadOnly[ctCol_CostRate, (logicalRowIndex + 1) * 2] = False) then
                  begin
//                     HNsGrid1.FocusCell(ctCol_CostRate, (HNsGrid1.LogicalRow + 1) * 2);  // 次行原価率
                     xGotoCell(ctCol_CostRate, ctRow_CostRate, logicalRowIndex + 1);  // 次行原価率
                  end else
                  begin
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
		                if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                      xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                    end;
                  end;
                end;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, HNsGrid1.LogicalRow * 2 + 1);  // 同行売単価
                xGotoCell(ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay, logicalRowIndex);  // 同行売単価
              end;
            end
            //売単価
            //else if ((HNsGrid1.Col = ctCol_SalesUnPrcDisplay) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
	          else if ((colIndex = ctCol_SalesUnPrcDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
            begin
              // ↑キー
              //if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
                // 先頭行
                //if (HNsGrid1.LogicalRow = 1) then
		            if (logicalRowIndex = 1) then
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, HNsGrid1.LogicalRow * 2] = False) then
		              if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, logicalRowIndex * 2] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_SalesUnitCost, HNsGrid1.LogicalRow * 2);  // 同行原単価
                    xGotoCell(ctCol_SalesUnitCost, ctRow_SalesUnitCost, logicalRowIndex);  // 同行原単価
                  end else
                  begin
                    xSetHeaderControl;
                  end;
                end else
                // 先頭行以外
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, HNsGrid1.LogicalRow * 2] = False) then
		              if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, logicalRowIndex * 2] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_SalesUnitCost, HNsGrid1.LogicalRow * 2);  // 同行原単価
                    xGotoCell(ctCol_SalesUnitCost, ctRow_SalesUnitCost, logicalRowIndex);  // 同行原単価
                  end else
                  begin
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
		                if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1] = False) then
		                  if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, (logicalRowIndex - 1) * 2 + 1] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行売単価
                        xGotoCell(ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay, logicalRowIndex - 1);  // 前行売単価
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
                      end;
                    end;
                  end;
                end;
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
//                HNsGrid1.FocusCell(ctCol_SalesRate, HNsGrid1.LogicalRow * 2 + 1);  // 同行売価率
                xGotoCell(ctCol_SalesRate, ctRow_SalesRate, logicalRowIndex);  // 同行売価率
              end
              // ↓キー
              // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
		            if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  xSetFootControl();
                end else
                // 最終行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
		              if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, (HNsGrid1.LogicalRow + 1) * 2] = False) then
		                if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, (logicalRowIndex + 1) * 2] = False) then
                    begin
//                       HNsGrid1.FocusCell(ctCol_SalesUnitCost, (HNsGrid1.LogicalRow + 1) * 2);  // 次行原単価
                       xGotoCell(ctCol_SalesUnitCost, ctRow_SalesUnitCost, logicalRowIndex + 1);  // 次行原単価
                    end else
                    begin
                       //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
			                if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2); // 次行品名
                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1); // 次行品名
                      end;
                    end;
                  end;
                end;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
                // 最終行
               //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
		            if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, HNsGrid1.LogicalRow * 2 + 1] = False) then
		              if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, logicalRowIndex * 2 + 1] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_SalesMoneyDisplay, HNsGrid1.LogicalRow * 2 + 1);  // 同行売上金額
                    xGotoCell(ctCol_SalesMoneyDisplay, ctRow_SalesMoneyDisplay, logicalRowIndex);  // 同行売上金額
                  end else
                  begin
                    st := True;  // 移動無し
                  end;
                end else
                // 最終行以外
                begin
                  //if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, HNsGrid1.LogicalRow * 2 + 1] = False) then
		              if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, logicalRowIndex * 2 + 1] = False) then
                  begin
//                    HNsGrid1.FocusCell(ctCol_SalesMoneyDisplay, HNsGrid1.LogicalRow * 2 + 1);  // 同行売上金額
                    xGotoCell(ctCol_SalesMoneyDisplay, ctRow_SalesMoneyDisplay, logicalRowIndex);  // 同行売上金額
                  end else
                  begin
                    //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
		                if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
		                  if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2); // 次行品名
                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1); // 次行品名
                      end;
                    end;
                  end;
                end;
              end;
            end
            //売上金額
            //else if ((HNsGrid1.Col = ctCol_SalesMoneyDisplay) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
	          else if ((colIndex = ctCol_SalesMoneyDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
            begin
              // ↑キー
             // if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
                // 先頭行
                //if (HNsGrid1.LogicalRow = 1) then
                if (logicalRowIndex = 1) then
                begin
                  xSetHeaderControl;
                end else
                // 先頭行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
		              if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1] = False) then
		                if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, (logicalRowIndex - 1) * 2 + 1] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_SalesMoneyDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行売上金額
                      xGotoCell(ctCol_SalesMoneyDisplay, ctRow_SalesMoneyDisplay, logicalRowIndex - 1);  // 前行売上金額
                    end else
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2] = False) then
                      if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex - 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2); // 前行品名
                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex - 1); // 前行品名
                      end;
                    end;
                  end;
                end
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
                //if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, HNsGrid1.LogicalRow * 2 + 1] = False) then
                if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, logicalRowIndex * 2 + 1] = False) then
                begin
//                  HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, HNsGrid1.LogicalRow * 2 + 1);  // 同行売単価
                  xGotoCell(ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay, logicalRowIndex);  // 同行売単価
                end else
                begin
//                  HNsGrid1.FocusCell(ctCol_ListPriceDisplay, HNsGrid1.LogicalRow * 2 + 1);  // 同行標準価格
                  xGotoCell(ctCol_ListPriceDisplay, ctRow_ListPriceDisplay, logicalRowIndex);  // 同行標準価格
                end;
              end
              // ↓キー
              // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
                if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  xSetFootControl();
                end else
                // 最終行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                  if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, (HNsGrid1.LogicalRow + 1) * 2 + 1] = False) then
                    if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, (logicalRowIndex + 1) * 2 + 1] = False) then
                    begin
//                       HNsGrid1.FocusCell(ctCol_SalesMoneyDisplay, (HNsGrid1.LogicalRow + 1) * 2 + 1);  // 次行売上金額
                       xGotoCell(ctCol_SalesMoneyDisplay, ctRow_SalesMoneyDisplay, logicalRowIndex + 1);  // 次行売上金額
                    end else
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
                      if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2); // 次行品名
                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1); // 次行品名
                      end;
                    end;
                  end;
                end;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
                if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  st := True;  // 移動無し
                end else
                // 最終行以外
                begin
                  //>>>2010/08/09
//                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
//		              if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
//                  begin
//                    //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
//                    if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
//                    begin
////                      HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
//                      xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
//                    end else
//                    begin
////                      HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2); // 次行品名
//                      xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1); // 次行品名
//                    end;
//                  end;


                  if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowIndex] = false) then begin
                    // 次行BLコード
                    xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex+1);
                  end else begin
                    // 次行品名
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex+1);
                  end;
                  //<<<2010/08/09
                end;
              end;
            end
            //倉庫
            //else if ((HNsGrid1.Col = ctCol_WarehouseCode) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
	          else if ((colIndex = ctCol_WarehouseCode) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
            begin
              // ↑キー
              // if (GetKeyState(VK_UP) and $8000 = $8000) then
              if vk_Up_Check then
              begin
                // 先頭行
                //if (HNsGrid1.LogicalRow = 1) then
		            if (logicalRowIndex = 1) then
                begin
                  xSetHeaderControl;
                end else
                // 先頭行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
		              if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, (HNsGrid1.LogicalRow - 1) * 2] = False) then
                    if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, (logicalRowIndex - 1) * 2] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_WarehouseCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行倉庫
                      xGotoCell(ctCol_WarehouseCode, ctRow_WarehouseCode, logicalRowIndex - 1);  // 前行倉庫
                    end else
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2] = False) then
		                  if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex - 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow - 1) * 2);  // 前行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex - 1);  // 前行BLコード
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2); // 前行品名
                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex - 1); // 前行品名
                      end;
                    end;
                  end;
                end;
              end
              // ←キー
              //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
              else if vk_Left_Check then
              begin
                //if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, HNsGrid1.LogicalRow * 2] = False) then
		            if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, logicalRowIndex * 2] = False) then
                begin
//                  HNsGrid1.FocusCell(ctCol_SalesUnitCost, HNsGrid1.LogicalRow * 2);  // 同行原単価
                  xGotoCell(ctCol_SalesUnitCost, ctRow_SalesUnitCost, logicalRowIndex);  // 同行原単価
                end else
                begin
//                  HNsGrid1.FocusCell(ctCol_SalesCode, HNsGrid1.LogicalRow * 2);  // 同行販売区分
                  xGotoCell(ctCol_SalesCode, ctRow_SalesCode, logicalRowIndex);  // 同行販売区分
                end;
              end
              // ↓キー
              // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
              else if vk_Down_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
		            if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  xSetFootControl();
                end else
                // 最終行以外
                begin
                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
		              if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                  begin
                    //if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
		                if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, (logicalRowIndex + 1) * 2] = False) then
                    begin
//                      HNsGrid1.FocusCell(ctCol_WarehouseCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行倉庫
                      xGotoCell(ctCol_WarehouseCode, ctRow_WarehouseCode, logicalRowIndex + 1);  // 次行倉庫
                    end else
                    begin
                      //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
		                  if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
                      begin
//                        HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
                        xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
                      end else
                      begin
//                        HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2); // 次行品名
                        xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1); // 次行品名
                      end;
                    end;
                  end;
                end;
              end
              // →キー
              //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
              else if vk_Right_Check then
              begin
                // 最終行
                //if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
		            if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
                begin
                  st := True;  // 移動無し
                end else
                // 最終行以外
                begin
                  //>>>2010/08/09
//                  //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
//		              if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
//                  begin
//                    //if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2] = False) then
//		                if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, (logicalRowIndex + 1) * 2] = False) then
//                    begin
////                      HNsGrid1.FocusCell(ctCol_BLGoodsCode, (HNsGrid1.LogicalRow + 1) * 2);  // 次行BLコード
//                      xGotoCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, logicalRowIndex + 1);  // 次行BLコード
//                    end else
//                    begin
////                      HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2); // 次行品名
//                      xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex + 1); // 次行品名
//                    end;
//                  end;

                  if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + 1] = false) then begin
                    // 次行品番
                    xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
                  end else begin
                    // 次行品名
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
                  end;
                  //<<<2010/08/09
                end;
              end;
            end;
            st := True;
          end;
       end
       // --- UPD 2010/06/02 ---------->>>>>
       //返品
       else if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Return) then
       begin
           //出荷数
          if ((colIndex = ctCol_ShipmentCntDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
          begin
            //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
            begin
              if logicalRowIndex = 1 then
              begin
                st := True;
                xSetHeaderControl();
              end
              else
              begin
                st := True;
                //前行出荷数
               //HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1);
                HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay, (logicalRowIndex - 1) * 2 + 1);
              end;

            end
            //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
            else if vk_Left_Check then
            begin
            if logicalRowIndex = 1 then
              begin
                st := True;
              end
              else
              begin
                st := True;
                //前行倉庫
                //HNsGrid1.FocusCell(ctCol_WarehouseCode, (HNsGrid1.LogicalRow - 1) * 2);
                //-----UPD 2011/09/21----->>>>>
                //HNsGrid1.GotoCell(ctCol_WarehouseCode, (logicalRowIndex - 1) * 2);
                if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, (logicalRowIndex - 1) * 2] = False) then
                begin
                  HNsGrid1.GotoCell(ctCol_WarehouseCode, (logicalRowIndex - 1) * 2);//前行倉庫
                end else
                begin
                  if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, (logicalRowIndex - 1) * 2 + 1] = False) then
                  begin
                     HNsGrid1.GotoCell(ctCol_SalesMoneyDisplay, (logicalRowIndex - 1) * 2 + 1); //前行売上金額
                  end else
                  begin
                      HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay, (logicalRowIndex -  1) * 2 + 1);//前行出荷数
                  end;
                end;
                //-----UPD 2011/09/21-----<<<<<
              end;
            end
            //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
            else if vk_Down_Check then
            begin
              if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
              begin
                st := True;
                xSetFootControl();
              end
              else
              begin
                st := True;
                //次行出荷数
                //HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, (HNsGrid1.LogicalRow + 1) * 2 + 1)
                HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay, (logicalRowIndex + 1) * 2 + 1)
              end;
            end
            //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
            else if vk_Right_Check then
            begin
              if logicalRowIndex = 1 then
              begin
                st := True;
                //HNsGrid1.FocusCell(ctCol_WarehouseCode, (HNsGrid1.Row - 1));
                //-----ADD 2011/09/21 ----->>>>>
                if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, logicalRowIndex * 2 + 1] = False) then
                begin
                    xGotoCell(ctCol_SalesMoneyDisplay, ctRow_SalesMoneyDisplay, logicalRowIndex);  // 同行売上金額
                end else
                begin
                    HNsGrid1.GotoCell(ctCol_WarehouseCode, (rowIndex - 1));
                end;
                //-----ADD 2011/09/21 -----<<<<<
                //HNsGrid1.GotoCell(ctCol_WarehouseCode, (rowIndex - 1));//DEL 2011/09/21

              end
              else
              begin
                st := True;
                //同行倉庫
                //HNsGrid1.FocusCell(ctCol_WarehouseCode, (HNsGrid1.LogicalRow) * 2);
                //-----ADD 2011/09/21 ----->>>>>
                if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, logicalRowIndex * 2 + 1] = False) then
                begin
                    xGotoCell(ctCol_SalesMoneyDisplay, ctRow_SalesMoneyDisplay, logicalRowIndex);  // 同行売上金額
                end else
                begin
                  if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, (logicalRowIndex) * 2] = False) then
                  begin
                    HNsGrid1.GotoCell(ctCol_WarehouseCode, (logicalRowIndex) * 2);
                  end else
                  begin
                    if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                    begin
                      st := True;  // 移動無し
                    end else
                    begin
                      HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay, (logicalRowIndex +  1) * 2 + 1);//次行出荷数
                    end;

                  end;
                end;
                //-----ADD 2011/09/21 -----<<<<<

                //HNsGrid1.GotoCell(ctCol_WarehouseCode, (logicalRowIndex) * 2); //DEL 2011/09/21
              end;
            end;
          end
          //倉庫
          else if ((colIndex = ctCol_WarehouseCode) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
          begin
            //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
            begin
              if logicalRowIndex = 1 then
              begin
                st := True;
                //ヘッダ部
                xSetHeaderControl();
              end
              else
              begin
                st := True;
                //前行倉庫
                //HNsGrid1.FocusCell(ctCol_WarehouseCode, (HNsGrid1.LogicalRow - 1) * 2);
                HNsGrid1.GotoCell(ctCol_WarehouseCode, (logicalRowIndex - 1) * 2);
              end;
            end
            //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
            else if vk_Left_Check then
            begin
                st := True;
                //同行出荷数
                //HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, (HNsGrid1.LogicalRow + 1) * 2 - 1);
                //-----UPD 2011/09/21 ----->>>>>
                //HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay, (logicalRowIndex + 1) * 2 - 1);
                if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, logicalRowIndex * 2 + 1] = False) then
                begin
                    xGotoCell(ctCol_SalesMoneyDisplay, ctRow_SalesMoneyDisplay, logicalRowIndex);  // 同行売上金額
                end else
                begin
                    HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay, (logicalRowIndex + 1) * 2 - 1);
                end;
                //-----UPD 2011/09/21 -----<<<<<
            end
            //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
            else if vk_Down_Check then
            begin
              if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
              begin
                st := True;
                xSetFootControl();
              end
              else
              begin
                st := True;
                //次行倉庫
                //HNsGrid1.FocusCell(ctCol_WarehouseCode, (HNsGrid1.LogicalRow + 1) * 2);
                HNsGrid1.GotoCell(ctCol_WarehouseCode, (logicalRowIndex + 1) * 2);
              end;
            end
            //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
            else if vk_Right_Check then
            begin
              if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
              begin
                st := True;
                xSetFootControl();
              end
              else
              begin
                st := True;
                //次行倉庫
                //HNsGrid1.FocusCell(ctCol_WarehouseCode, (HNsGrid1.LogicalRow + 1) * 2);
                //HNsGrid1.FocusCell(ctCol_WarehouseCode, (logicalRowIndex + 1) * 2);  // DEL 2011/09/21
                HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay, (logicalRowIndex + 1) * 2 + 1)// ADD 2011/09/21
              end;
            end;
          end
          //-----ADD 2011/09/21 ----->>>>>
          //売上金額
          else if ((colIndex = ctCol_SalesMoneyDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
          begin
           if vk_Up_Check then
            begin
              if logicalRowIndex = 1 then
              begin
                st := True;
                xSetHeaderControl();
              end
              else
              begin
                st := True;

                if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, (logicalRowIndex - 1) * 2 + 1] = False) then
                begin
                   HNsGrid1.GotoCell(ctCol_SalesMoneyDisplay, (logicalRowIndex - 1) * 2 + 1); //前行売上金額
                end else
                begin
                    HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay, (logicalRowIndex -  1) * 2 + 1);//前行出荷数
                end;
              end;
            end
            else if vk_Left_Check then
            begin
                st := True;
                //同行出荷数
                HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay, (logicalRowIndex + 1) * 2 - 1);
            end
            else if vk_Down_Check then
            begin
              if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
              begin
                st := True;
                xSetFootControl();
              end
              else
              begin
                st := True;
                if (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, (logicalRowIndex + 1) * 2 + 1] = False) then
                begin
                   HNsGrid1.GotoCell(ctCol_SalesMoneyDisplay, (logicalRowIndex + 1) * 2 + 1); //次行売上金額
                end else
                begin
                    HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay, (logicalRowIndex +  1) * 2 + 1);//次行出荷数
                end;
              end;
            end
            else if vk_Right_Check then
            begin
              if (HNsGrid1.ReadOnly[ctCol_WarehouseCode, logicalRowIndex * 2] = false) then
              begin
                st := True;
                // 同行倉庫
                HNsGrid1.GotoCell(ctCol_WarehouseCode, (logicalRowIndex) * 2);
              end else
              begin
                if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                begin
                  st := True;
                end
                else
                begin
                  st := True;
                  //次行売上金額
                  HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay, (logicalRowIndex + 1) * 2 + 1)
                end;
              end;
            end;
          end;
          //-----ADD 2011/09/21 -----<<<<<
       end
       // --- UPD 2010/06/02 ----------<<<<<
       //修正呼出し、計上
        else if (RCHNB01003UADM.SalesSlipNum[logicalRowIndex - 1] <> '0')
          or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ShipmentAddUp)
          or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp)
          or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp) then
       begin
          //品名
          if ((colIndex = ctCol_GoodsName) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
          begin
          //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
            begin
              if logicalRowIndex = 1 then
              begin
                st := True;
                //ヘッダ部
                if (FullModel.ReadOnly = False) then
                 begin
                    FullModel.SetFocus;
                 end
                 else if (CustomerCode.ReadOnly = False) then
                 begin
                   CustomerCode.SetFocus;
                 end
                 else if (SalesEmployeeCd.ReadOnly = False) then
                 begin
                   SalesEmployeeCd.SetFocus;
                 end;
              end
              else
              begin
                st := True;
                if xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other) = True then
                begin
                //前行品名
                //HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2);
                xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex - 1);
                end;
              end;

            end
            //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
            else if vk_Left_Check then
            begin
                st := True;
            end
            //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
            else if vk_Down_Check then
            begin
              if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
              begin
                st := True;
                xSetFootControl();
              end
              else
              begin
                st := True;
                if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                begin
                  //次行品名
                  //HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2);
                  xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                end;
              end;
            end
            //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
            else if vk_Right_Check then
            begin
              st := True;
              if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, rowIndex] = False) then
                //同行受注数
                //HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntDisplay, HNsGrid1.Row)
                xGotoCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex)
              else
                //同行販売区分
                //HNsGrid1.FocusCell(ctCol_SalesCode, HNsGrid1.Row);
                xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex)
            end;
          end

          //仕入先
          else if ((colIndex = ctCol_SupplierCd) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
          begin
           // if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
            begin
              st := True;
              //同行品名
              //HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.Row - 1);
              xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
            end
            //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
            else if vk_Left_Check then
            begin
              st := True;
              if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, rowIndex - 1] = False) then
                //同行原単価
                //HNsGrid1.FocusCell(ctCol_SalesUnitCost, HNsGrid1.Row - 1)
                xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex)
              else
                //同行販売区分
                //HNsGrid1.FocusCell(ctCol_SalesCode, HNsGrid1.Row - 1);
                xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex)
            end
            //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
            else if vk_Down_Check then
            begin
              if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
              begin
                st := True;
                xSetFootControl();
              end
              else
              begin
                st := True;
                if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                begin
                  //次行品名
                  //HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2);
                  xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                end;
              end;
            end
            //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
            else if vk_Right_Check then
            begin
              //最終行
              if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
              begin
                st := True;
                xSetFootControl();
              end
              else
              begin
                //同行出荷数
                //HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, HNsGrid1.Row);
                //xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
                if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, rowIndex] = False) then
                begin
                  xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
                end
                else if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, rowIndex] = False) then
                begin
                  //同行標準価格
                  xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
                end
                else if (HNsGrid1.ReadOnly[ctCol_SalesRate, rowIndex] = False) then
                begin
                  //同行売価率
                  xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
                end
                else
                begin
                  if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                  begin
                    //次行品名
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                  end;
                end;
                st := True;
              end;
            end;
          end
          //受注数
          else if ((colIndex = ctCol_AcceptAnOrderCntDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
          begin
            //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
            begin
              if logicalRowIndex = 1 then
              begin
                st := True;
                //ヘッダ部
                if (FullModel.ReadOnly = False) then
                 begin
                    FullModel.SetFocus;
                 end
                 else if (CustomerCode.ReadOnly = False) then
                 begin
                   CustomerCode.SetFocus;
                 end
                 else if (SalesEmployeeCd.ReadOnly = False) then
                 begin
                   SalesEmployeeCd.SetFocus;
                 end;
              end
              else
              begin
                st := True;
                if xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other) = True then
                begin
                  if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, (logicalRowIndex - 1) * 2] = False) then
                    //前行受注数
                    //HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntDisplay, (HNsGrid1.LogicalRow - 1) * 2)
                    xGotoCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex - 1)
                  else
                    //前行品名
                    //HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2)
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex - 1);
                end;
              end;

            end
            //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
            else if vk_Left_Check then
            begin
                st := True;
                //同行品名
                //HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.Row);
                xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
            end
            // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
            else if vk_Down_Check then
            begin
              if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
              begin
                st := True;
                xSetFootControl();
              end
              else
              begin
                st := True;
                if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                begin
                  //次行受注数
                  //HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntDisplay, (HNsGrid1.LogicalRow + 1) * 2);
                  xGotoCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex + 1);
                end;
              end;
            end
            //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
            else if vk_Right_Check then
            begin
              st := True;
              //同行販売区分
              //HNsGrid1.FocusCell(ctCol_SalesCode, HNsGrid1.Row);
              xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
            end;
          end

          //出荷数
          else if ((colIndex = ctCol_ShipmentCntDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
          begin
           // if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
            begin
              if logicalRowIndex = 1 then
              begin
                st := True;
                //ヘッダ部
                if (FullModel.ReadOnly = False) then
                 begin
                    FullModel.SetFocus;
                 end
                 else if (CustomerCode.ReadOnly = False) then
                 begin
                   CustomerCode.SetFocus;
                 end
                 else if (SalesEmployeeCd.ReadOnly = False) then
                 begin
                   SalesEmployeeCd.SetFocus;
                 end;
              end
              else
              begin
                st := True;
                if xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other) = True then
                begin
                //前行出荷数
                //HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1);
                xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex - 1);
                end;
              end;

            end
            //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
            else if vk_Left_Check then
            begin
                st := True;
                //同行仕入先
                //HNsGrid1.FocusCell(ctCol_SupplierCd, HNsGrid1.Row);
                xGotoCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
            end
            // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
            else if vk_Down_Check then
            begin
              if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
              begin
                st := True;
                xSetFootControl();
              end
              else
              begin
                st := True;
                if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                begin
                  if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, (logicalRowIndex + 1) * 2 + 1] = False) then
                    //次行出荷数
                    //HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, (HNsGrid1.LogicalRow + 1) * 2 + 1)
                    xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex + 1)
                  else
                    //次行品名
                    //HNsGrid1.FocusCell(ctCol_GoodsName - 1, (HNsGrid1.LogicalRow + 1) * 2);
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                end;
              end;
            end
            //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
            else if vk_Right_Check then
            begin
              st := True;
              //同行標準価格
              //HNsGrid1.FocusCell(ctCol_ListPriceDisplay, HNsGrid1.Row);
              if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, logicalRowIndex * 2 + 1] = False) then
              begin
                xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
              end
              //同行売価率
              else if (HNsGrid1.ReadOnly[ctCol_SalesRate, logicalRowIndex * 2 + 1] = False) then
              begin
                xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
              end
              else
              begin
                //最終行
                if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                begin
                  xSetFootControl();
                end
                else
                begin
                  //次行品名
                  if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                  begin
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                  end;
                end;
              end;

            end;
          end

          //販売区分
          else if ((colIndex = ctCol_SalesCode) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
          begin
           // if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
            begin
              //先頭行
              if logicalRowIndex = 1 then
              begin
                st := True;
                //ヘッダ部
                if (FullModel.ReadOnly = False) then
                 begin
                    FullModel.SetFocus;
                 end
                else if (CustomerCode.ReadOnly = False) then
                begin
                   CustomerCode.SetFocus;
                end
                else if (SalesEmployeeCd.ReadOnly = False) then
                begin
                  SalesEmployeeCd.SetFocus;
                end;
              end
              else
              begin
                st := True;
                if xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other) = True then
                begin
                  if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, (logicalRowIndex - 1) * 2 + 1] = False) then
                    //前行標準価格
                    //HNsGrid1.FocusCell(ctCol_ListPriceDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1);
                    xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex - 1)
                  else if (HNsGrid1.ReadOnly[ctCol_SalesCode, (logicalRowIndex - 1) * 2] = False) then
                  begin
                    //前行販売区分
                    xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex - 1);
                  end
                  else
                    //前行品名
                    //HNsGrid1.FocusCell(ctCol_GoodsName - 1, (HNsGrid1.LogicalRow - 1) * 2);
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex - 1)
                end;
              end;

            end
            //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
            else if vk_Left_Check then
            begin
              //先頭行
              if logicalRowIndex = 1 then
              begin
                st := True;
                if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay, rowIndex] = False) then
                  //同行受注数
                  //HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntDisplay, HNsGrid1.Row)
                  xGotoCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay, logicalRowIndex)
                else
                  //同行品名
                  //HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.Row);
                  xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
              end
              else
              begin
                st := True;
               //同行品名
               //HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.Row);
               xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
              end;
            end
            //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
            else if vk_Down_Check then
            begin
              st := True;
              //同行標準価格
              //HNsGrid1.FocusCell(ctCol_ListPriceDisplay, HNsGrid1.Row + 1);
              if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, logicalRowIndex * 2 + 1] = False) then
              begin
                xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
              end
              else
              begin
                //最終行
                if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                begin
                  xSetFootControl();
                end
                else
                begin
                  if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                  begin
                    if (HNsGrid1.ReadOnly[ctCol_SalesCode, (logicalRowIndex + 1) * 2] = False) then
                    begin
                      //次行販売区分
                      xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex + 1);
                    end
                    else
                    begin
                      //次行品名
                      xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                    end;
                  end;
                end;
              end;
            end
            //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
            else if vk_Right_Check then
            begin
              st := True;
              if (HNsGrid1.ReadOnly[ctCol_CostRate, rowIndex] = False) then
                //同行原価率
                //HNsGrid1.FocusCell(ctCol_CostRate, HNsGrid1.Row);
                xGotoCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex)
              else
                //同行仕入先
                //HNsGrid1.FocusCell(ctCol_SupplierCd, HNsGrid1.Row + 1);
                xGotoCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex)
            end;
          end

          //標準価格
          else if ((colIndex = ctCol_ListPriceDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
          begin
            //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
            begin
              st := True;
              //同行販売区分
              //HNsGrid1.FocusCell(ctCol_SalesCode, HNsGrid1.Row - 1);
              xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
            end
            //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
            else if vk_Left_Check then
            begin
              st := True;
              //同行出荷数
              //HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, HNsGrid1.Row);
              //xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);

              //同行出荷数
              if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, rowIndex] = False) then
              begin
                xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
              end
              else
              begin
                //同行仕入先
                xGotoCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
              end;
            end
            // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
            else if vk_Down_Check then
            begin
              //最終行
              if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
              begin
                st := True;
                xSetFootControl();
              end
              else
              begin
                st := True;
                if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                begin
                  if (HNsGrid1.ReadOnly[ctCol_SalesCode, (logicalRowIndex + 1) * 2] = False) then
                    //次行販売区分
                    //HNsGrid1.FocusCell(ctCol_SalesCode, (HNsGrid1.LogicalRow + 1) * 2);
                    xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex + 1)
                  else
                    //次行品名
                    //HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2);
                    xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);

                end;
              end;
            end
            //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
            else if vk_Right_Check then
            begin

              st := True;
              if (HNsGrid1.ReadOnly[ctCol_SalesRate, rowIndex] = False) then
              begin
               //同行売価率
               //HNsGrid1.FocusCell(ctCol_SalesRate, HNsGrid1.Row);
                xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
              end
              else
              begin
                //最終行
                if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                begin
                  st := True;
                  xSetFootControl();
                end
                else
                begin
                  st := True;
                  if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                  begin
                     //次行品名
                     //HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2);
                     xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                  end;
                end;
              end;

            end;
          end

          //原価率
          else if ((colIndex = ctCol_CostRate) and (rowIndex > 1) and (rowIndex mod 2 = 0 )) then
          begin
            //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
            begin
              if logicalRowIndex = 1 then
              begin
                st := True;
                //ヘッダ部
                if (FullModel.ReadOnly = False) then
                 begin
                    FullModel.SetFocus;
                 end
                 else if (CustomerCode.ReadOnly = False) then
                 begin
                   CustomerCode.SetFocus;
                 end
                 else if (SalesEmployeeCd.ReadOnly = False) then
                 begin
                   SalesEmployeeCd.SetFocus;
                 end;
              end
              else
              begin
                st := True;
                if xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other) = True then
                begin
                  if (HNsGrid1.ReadOnly[ctCol_SalesRate, (logicalRowIndex - 1) * 2 + 1] = False) then
                  begin
                   //前行売価率
                    //HNsGrid1.FocusCell(ctCol_SalesRate, (HNsGrid1.LogicalRow - 1) * 2 + 1);
                    xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex - 1);
                  end
                  else
                   //前行品名
                   //HNsGrid1.FocusCell(ctCol_GoodsName - 1, (HNsGrid1.LogicalRow - 1) * 2);
                   xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex - 1);

                end;
              end;

            end
            //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
            else if vk_Left_Check then
            begin
                st := True;
                //同行販売区分
                //HNsGrid1.FocusCell(ctCol_SalesCode, HNsGrid1.Row);
                xGotoCell(ctCol_SalesCode,ctRow_SalesCode, logicalRowIndex);
            end
            // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
            else if vk_Down_Check then
            begin
              st := True;
              if (HNsGrid1.ReadOnly[ctCol_SalesRate, rowIndex + 1] = False) then
              begin
               //同行売価率
                //HNsGrid1.FocusCell(ctCol_SalesRate, HNsGrid1.Row + 1);
                xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
              end
              else
              begin
                //最終行
                if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                begin
                  st := True;
                  xSetFootControl();
                end
                else
                begin
                  st := True;
                  if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                  begin
                     //次行原価率
                     //HNsGrid1.FocusCell(ctCol_CostRate, (HNsGrid1.LogicalRow + 1) * 2);
                     xGotoCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex + 1);
                  end;
                end;
              end;

            end
            //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
            else if vk_Right_Check then
            begin
              st := True;
              //同行原単価
              //HNsGrid1.FocusCell(ctCol_SalesUnitCost, HNsGrid1.Row);
              xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
            end;
          end


          //原単価
          else if ((colIndex = ctCol_SalesUnitCost) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
          begin
            //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
            begin
              if logicalRowIndex = 1 then
              begin
                st := True;
                //ヘッダ部
                if (FullModel.ReadOnly = False) then
                 begin
                    FullModel.SetFocus;
                 end
                 else if (CustomerCode.ReadOnly = False) then
                 begin
                   CustomerCode.SetFocus;
                 end
                 else if (SalesEmployeeCd.ReadOnly = False) then
                 begin
                   SalesEmployeeCd.SetFocus;
                 end;
              end
              else
              begin
                st := True;
                if xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other) = True then
                begin
                  if (HNsGrid1.ReadOnly[ctCol_SalesRate, (logicalRowIndex - 1) * 2 + 1] = False) then
                  begin
                   //前行売単価
                    //HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1);
                    xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex - 1);
                  end
                  else
                   //前行品名
                   //HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow - 1) * 2);
                   xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex - 1);

                end;
              end;

            end
            //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
            else if vk_Left_Check then
            begin
                st := True;
                //同行原価率
                //HNsGrid1.FocusCell(ctCol_CostRate, HNsGrid1.Row);
                xGotoCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex);
            end
            // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
            else if vk_Down_Check then
            begin
              st := True;
              if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, rowIndex + 1] = False) then
              begin
               //同行売単価
                //HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, HNsGrid1.Row + 1);
                xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex);
              end
              else
              begin
                //最終行
                if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                begin
                  st := True;
                  xSetFootControl();
                end
                else
                begin
                  st := True;
                  if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                  begin
                     //次行原単価
                     //HNsGrid1.FocusCell(ctCol_SalesUnitCost, (HNsGrid1.LogicalRow + 1) * 2);
                     xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex + 1);
                  end;
                end;
              end;

            end
            //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
            else if vk_Right_Check then
            begin
              st := True;
              //同行仕入先
              //HNsGrid1.FocusCell(ctCol_SupplierCd, HNsGrid1.Row + 1);
              xGotoCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
            end;
          end


          //売価率
          else if ((colIndex = ctCol_SalesRate) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
          begin
           // if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
            begin
              if (HNsGrid1.ReadOnly[ctCol_CostRate, rowIndex - 1] = False) then
              begin
               //同行原価率
                st := True;
                //HNsGrid1.FocusCell(ctCol_CostRate, HNsGrid1.Row - 1);
                xGotoCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex);
              end
              else
              begin
                //先頭行
                if logicalRowIndex = 1 then
                begin
                  st := True;
                  //ヘッダ部
                  if (FullModel.ReadOnly = False) then
                  begin
                      FullModel.SetFocus;
                  end
                  else if (CustomerCode.ReadOnly = False) then
                  begin
                     CustomerCode.SetFocus;
                  end
                  else if (SalesEmployeeCd.ReadOnly = False) then
                  begin
                     SalesEmployeeCd.SetFocus;
                  end;
                end
                else
                begin
                  st := True;
                  if xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other) = True then
                  begin
                    //前行売価率
                    //HNsGrid1.FocusCell(ctCol_SalesRate, (HNsGrid1.LogicalRow - 1) * 2 + 1);
                    xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex - 1);
                  end;
                end;
              end;
            end
            //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
            else if vk_Left_Check then
            begin
                st := True;
                //同行標準価格
                //HNsGrid1.FocusCell(ctCol_ListPriceDisplay, HNsGrid1.Row);
                if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, logicalRowIndex * 2 + 1] = False) then
                begin
                  xGotoCell(ctCol_ListPriceDisplay,ctRow_ListPriceDisplay, logicalRowIndex);
                end
                else if (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, logicalRowIndex * 2 + 1] = False) then
                begin
                  //同行出荷数
                  xGotoCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay, logicalRowIndex);
                end
                else
                begin
                  //同行仕入先
                  xGotoCell(ctCol_SupplierCd,ctRow_SupplierCd, logicalRowIndex);
                end;
            end
            // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
            else if vk_Down_Check then
            begin
              //最終行
                if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                begin
                  st := True;
                  xSetFootControl();
                end
                else
                begin
                  st := True;
                  if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                  begin
                    if (HNsGrid1.ReadOnly[ctCol_CostRate, (logicalRowIndex + 1) * 2] = False) then
                     //次行原価率
                    //HNsGrid1.FocusCell(ctCol_CostRate, (HNsGrid1.LogicalRow + 1) * 2);
                     xGotoCell(ctCol_CostRate,ctRow_CostRate, logicalRowIndex + 1)
                    else
                     //次行品名
                     //HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2);
                     xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                  end;
                end;

            end
            //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
            else if vk_Right_Check then
            begin
              st := True;
              //同行売単価
              //HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, HNsGrid1.Row);
              xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex);
            end;
          end

          //売単価
          else if ((colIndex = ctCol_SalesUnPrcDisplay) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
          begin
           // if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
            begin
             if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, rowIndex - 1] = False) then
               begin
               //同行原単価
                st := True;
                //HNsGrid1.FocusCell(ctCol_SalesUnitCost, HNsGrid1.Row - 1);
                xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex);
              end
              else
              begin
                //先頭行
                if logicalRowIndex = 1 then
                begin
                  st := True;
                  //ヘッダ部
                 if (FullModel.ReadOnly = False) then
                 begin
                    FullModel.SetFocus;
                 end
                 else if (CustomerCode.ReadOnly = False) then
                 begin
                   CustomerCode.SetFocus;
                 end
                 else if (SalesEmployeeCd.ReadOnly = False) then
                 begin
                   SalesEmployeeCd.SetFocus;
                 end;
                end
                else
                begin
                  st := True;
                  if xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other) = True then
                  begin
                    //前行売単価
                    //HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, (HNsGrid1.LogicalRow - 1) * 2 + 1);
                    xGotoCell(ctCol_SalesUnPrcDisplay,ctRow_SalesUnPrcDisplay, logicalRowIndex - 1);
                  end;
                end;
              end;
            end
            //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
            else if vk_Left_Check then
            begin
                st := True;
                //同行売価率
                //HNsGrid1.FocusCell(ctCol_SalesRate, HNsGrid1.Row);
                xGotoCell(ctCol_SalesRate,ctRow_SalesRate, logicalRowIndex);
            end
            //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
            else if vk_Down_Check then
            begin
              //最終行
                if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
                begin
                  st := True;
                  xSetFootControl();
                end
                else
                begin
                  st := True;
                  if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                  begin
                    if (HNsGrid1.ReadOnly[ctCol_SalesUnitCost, (logicalRowIndex + 1) * 2] = False) then
                     //次行原単価
                     //HNsGrid1.FocusCell(ctCol_SalesUnitCost, (HNsGrid1.LogicalRow + 1) * 2);
                     xGotoCell(ctCol_SalesUnitCost,ctRow_SalesUnitCost, logicalRowIndex + 1)
                    else
                     //次行品名
                     //HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2);
                     xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                  end;
                end;

            end
            //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
            else if vk_Right_Check then
            begin
              //最終行
              if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
              begin
                //移動無し
                st := True;
              end
              else
              begin
                if xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other) = True then
                begin
                    st := True;
                   //次行品名
                   //HNsGrid1.FocusCell(ctCol_GoodsName, (HNsGrid1.LogicalRow + 1) * 2);
                   xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex + 1);
                end;
              end;
            end;
          end;
       end;

       // --- ADD 2010/06/02 ---------->>>>>
       //明細備考
       //if ((HNsGrid1.Col = ctCol_DtlNote) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
       if ((colIndex = ctCol_DtlNote) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
       begin
          //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
          begin
            // 先頭行,ヘッダ部
            if logicalRowIndex = 1 then
            begin
              xSetHeaderControl();
              st := True;
            end else
            begin
              // 先頭行以外
//              if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, HNsGrid1.Row - 1] = False) then
              if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, rowIndex - 1] = False) then
              begin
                //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                begin
                  // 前行得意先注番
                  HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, logicalRowIndex-1);
                end;
              end else
              begin
//                if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                begin
                  // 前行明細備考
                  HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex-1);
                end;
              end;
              st := True;
            end;
          //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
          end else if vk_Left_Check then
          begin
            // 先頭行,移動無し
            if logicalRowIndex = 1 then
            begin
              st := True;
            end else
            begin
//              if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
              if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
              begin
                // 先頭行以外
//                if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, HNsGrid1.Row - 1] = False) then
                if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, rowIndex - 1] = False) then
                begin
                  // 前行納品完了予定日
                  HNsGrid1.LogicalFocusCell(ctCol_DeliGdsCmpltDueDate,ctRow_DeliGdsCmpltDueDate, logicalRowIndex-1);
//               end else if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, HNsGrid1.Row - 1] = False) then
                end else if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, rowIndex - 1] = False) then
                begin
                  // 前行得意先注番
                  HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, logicalRowIndex-1);
                end else
                begin
                  // 前行明細備考
                  HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex-1);
                end;
              end;
              st := True;
            end;
          //end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
          end else if vk_Down_Check then
          begin
            // 最終行
            if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
            begin
//              if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, HNsGrid1.Row + 1] = False) then
              if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, rowIndex + 1] = False) then
              begin
                // 同行得意先注番
                HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, logicalRowIndex);
              end else
              begin
                // フッタ部
                xSetFootControl();
              end;
              st := True;
            end else
            begin
              // 最終行以外
//              if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, HNsGrid1.Row + 1] = False) then
              if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, rowIndex + 1] = False) then
              begin
                // 同行得意先注番
                HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, logicalRowIndex);
              end else
              begin
//                if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                begin
                  // 次行明細備考
                  HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex + 1);
                end;
              end;
              st := True;
            end;
           //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
          end else if vk_Right_Check then
          begin
            // 最終行
            if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
            begin
//              if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, HNsGrid1.Row + 1] = False) then
              if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, rowIndex + 1] = False) then
              begin
                // 同行得意先注番
                HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, logicalRowIndex);
//              end else if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, HNsGrid1.Row + 1] = False) then
              end else if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, rowIndex + 1] = False) then
              begin
                // 同行納品完了予定日
                HNsGrid1.LogicalFocusCell(ctCol_DeliGdsCmpltDueDate,ctRow_DeliGdsCmpltDueDate, logicalRowIndex);
              end else
              begin
                // フッタ部
                xSetFootControl();
              end;
              st := True;
            end else
            begin
              // 最終行以外
//             if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, HNsGrid1.Row + 1] = False) then
              if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, rowIndex + 1] = False) then
              begin
                // 同行得意先注番
                HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, logicalRowIndex);
//              end else if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, HNsGrid1.Row + 1] = False) then
              end else if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, rowIndex + 1] = False) then
              begin
                // 同行納品完了予定日
                HNsGrid1.LogicalFocusCell(ctCol_DeliGdsCmpltDueDate,ctRow_DeliGdsCmpltDueDate, logicalRowIndex);
              end else
              begin
//                if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                begin
                  // 次行明細備考
                  HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex + 1);
                end;
              end;
              st := True;
            end;
          end;
       end
       //得意先注番号
//      else if ((HNsGrid1.Col = ctCol_PartySlipNumDtl) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
       else if ((colIndex = ctCol_PartySlipNumDtl) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
       begin
          //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
          begin
            // 先頭行
            if logicalRowIndex = 1 then
            begin
//              if (HNsGrid1.ReadOnly[ctCol_DtlNote, HNsGrid1.Row - 1] = False) then
              if (HNsGrid1.ReadOnly[ctCol_DtlNote, rowIndex - 1] = False) then
              begin
                // 同行明細備考
                HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex);
              end else
              begin
                // ヘッダ部
                xSetHeaderControl();
              end;
              st := True;
            end else
            begin
              // 先頭行以外
//              if (HNsGrid1.ReadOnly[ctCol_DtlNote, HNsGrid1.Row - 1] = False) then
              if (HNsGrid1.ReadOnly[ctCol_DtlNote, rowIndex - 1] = False) then
              begin
                // 同行明細備考
                HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex);
              end else
              begin
//                if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                begin
                  // 前行得意先注番
                  HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, logicalRowIndex-1);
                end;
              end;
              st := True;
            end;
          //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
          end else if vk_Left_Check then
          begin
            // 先頭行
            if logicalRowIndex = 1 then
            begin
//              if (HNsGrid1.ReadOnly[ctCol_DtlNote, HNsGrid1.Row - 1] = False) then
              if (HNsGrid1.ReadOnly[ctCol_DtlNote, rowIndex - 1] = False) then
              begin
                // 同行明細備考
                HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex);
              end else
              begin
                // ヘッダ部
                xSetHeaderControl();
              end;
              st := True;
            end else
            begin
              // 先頭行以外
//              if (HNsGrid1.ReadOnly[ctCol_DtlNote, HNsGrid1.Row - 1] = False) then
              if (HNsGrid1.ReadOnly[ctCol_DtlNote, rowIndex - 1] = False) then
              begin
                // 同行明細備考
                HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex);
              end else
              begin
//                if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
                if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                begin
                  // 前行得意先注番
                  HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, logicalRowIndex-1);
                end;
              end;
              st := True;
            end;
          //end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
          end else if vk_Down_Check then
          begin
            // 最終行
            if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
            begin
              // フッタ部
              xSetFootControl();
              st := True;
            end else
            begin
//              if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
              if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
              begin
                // 最終行以外
//                if (HNsGrid1.ReadOnly[ctCol_DtlNote, HNsGrid1.Row + 1] = False) then
                if (HNsGrid1.ReadOnly[ctCol_DtlNote, rowIndex + 1] = False) then
                begin
                  // 次行明細備考
                  HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex + 1);
                end else
                begin
                  // 次行得意先注番
                  HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, logicalRowIndex + 1);
                end;
              end;
              st := True;
            end;
          //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
          end else if vk_Right_Check then
          begin
            // 最終行
            if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
            begin
//              if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, HNsGrid1.Row] = False) then
              if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, rowIndex] = False) then
              begin
                // 同行納品完了予定日
                HNsGrid1.LogicalFocusCell(ctCol_DeliGdsCmpltDueDate,ctRow_DeliGdsCmpltDueDate, logicalRowIndex);
              end else
              begin
                // フッタ部
                xSetFootControl();
              end;
              st := True;
            end else
            begin
              // 最終行以外
//              if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, HNsGrid1.Row] = False) then
              if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, rowIndex] = False) then
              begin
                // 同行納品完了予定日
                HNsGrid1.LogicalFocusCell(ctCol_DeliGdsCmpltDueDate,ctRow_DeliGdsCmpltDueDate, logicalRowIndex);
              end else
//              if (HNsGrid1.ReadOnly[ctCol_DtlNote, HNsGrid1.Row + 1] = False) then
              if (HNsGrid1.ReadOnly[ctCol_DtlNote, rowIndex + 1] = False) then
              begin
//                if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                begin
                  // 次行明細備考
                  HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex + 1);
                end;
              end else
              begin
//                if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
                begin
                  // 次行得意先注番
                  HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, logicalRowIndex + 1);
                end;
              end;
              st := True;
            end;
          end;
       end
       //納品完了予定日
//       else if ((HNsGrid1.Col = ctCol_DeliGdsCmpltDueDate) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
       else if ((colIndex = ctCol_DeliGdsCmpltDueDate) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
       begin
          //if (GetKeyState(VK_UP) and $8000 = $8000) then
          if vk_Up_Check then
          begin
            // 先頭行
            if logicalRowIndex = 1 then
            begin
              if (HNsGrid1.ReadOnly[ctCol_DtlNote, rowIndex - 1] = False) then
              begin
                // 同行明細備考
                //HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex);
                xGotoCell(ctCol_DtlNote, ctRow_DtlNote, logicalRowIndex);
              end else
              begin
                // ヘッダ部
                xSetHeaderControl();
              end;
              st := True;
            end else
            begin
              // 先頭行以外
//              if (HNsGrid1.ReadOnly[ctCol_DtlNote, HNsGrid1.Row - 1] = False) then
              if (HNsGrid1.ReadOnly[ctCol_DtlNote, rowIndex - 1] = False) then
              begin
                // 同行明細備考
                //HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex);
                xGotoCell(ctCol_DtlNote, ctRow_DtlNote, logicalRowIndex);
              end else
              begin
                if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
                begin
                  // 前行納品完了予定日
                  //HNsGrid1.LogicalFocusCell(ctCol_DeliGdsCmpltDueDate,ctRow_DeliGdsCmpltDueDate, logicalRowIndex-1);
                  xGotoCell(ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, logicalRowIndex - 1);
                end;
              end;
              st := True;
            end;
          //end else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
          end else if vk_Left_Check then
          begin
            // 先頭行
            if logicalRowIndex = 1 then
            begin
//              if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, HNsGrid1.Row] = False) then
              if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, rowIndex] = False) then
              begin
                // 同行得意先注番
//                xGotoCell(ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl, HNsGrid1.LogicalRow);
                xGotoCell(ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl, logicalRowIndex);
              end else
//              if (HNsGrid1.ReadOnly[ctCol_DtlNote, HNsGrid1.Row - 1] = False) then
              if (HNsGrid1.ReadOnly[ctCol_DtlNote, rowIndex - 1] = False) then
              begin
                // 同行明細備考
                //HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex);
                xGotoCell(ctCol_DtlNote, ctRow_DtlNote, logicalRowIndex);
              end else
              begin
                // ヘッダ部
                xSetHeaderControl();
              end;
              st := True;
            end else
            begin
              // 先頭行以外
//              if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, HNsGrid1.Row] = False) then
              if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, rowIndex] = False) then
              begin
                // 同行得意先注番
                //HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, logicalRowIndex);
                xGotoCell(ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl, logicalRowIndex);
//              end else if (HNsGrid1.ReadOnly[ctCol_DtlNote, HNsGrid1.Row - 1] = False) then
              end else if (HNsGrid1.ReadOnly[ctCol_DtlNote, rowIndex - 1] = False) then
              begin
                // 同行明細備考
                //HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex);
                xGotoCell(ctCol_DtlNote, ctRow_DtlNote, logicalRowIndex);
              end else
              begin
                // ヘッダ部
                xSetHeaderControl();
              end;
              st := True;
            end;
          //end else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
          end else if vk_Down_Check then
          begin
            // 最終行
            if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
            begin
              // フッタ部
              xSetFootControl();
              st := True;
            end else
            begin
              // 最終行以外
              //if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
              if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
              begin
                //if (HNsGrid1.ReadOnly[ctCol_DtlNote, HNsGrid1.Row + 1] = False) then
                if (HNsGrid1.ReadOnly[ctCol_DtlNote, rowIndex + 1] = False) then
                begin
                  // 次行明細備考
                  //HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex + 1);
                  xGotoCell(ctCol_DtlNote, ctRow_DtlNote, logicalRowIndex + 1);
                end else
                begin
                  // 次行得意先注番
                  //HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, logicalRowIndex + 1);
                  xGotoCell(ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl, logicalRowIndex + 1);
                end;
              end;
              st := True;
            end;
          //end else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
          end else if vk_Right_Check then
          begin
            // 最終行
            if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
            begin
              // フッタ部
              xSetFootControl();
              st := True;
            end else
            begin
              // 最終行以外
//              if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
              if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
              begin
//                if (HNsGrid1.ReadOnly[ctCol_DtlNote, HNsGrid1.Row + 1] = False) then
                if (HNsGrid1.ReadOnly[ctCol_DtlNote, rowIndex + 1] = False) then
                begin
                  // 次行明細備考
                  //HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, logicalRowIndex + 1);
                  xGotoCell(ctCol_DtlNote, ctRow_DtlNote, logicalRowIndex + 1);
//                end else if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, HNsGrid1.Row + 2] = False) then
                end else if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, rowIndex + 2] = False) then
                begin
                  // 次行得意先注番
                  //HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, logicalRowIndex + 1);
                  xGotoCell(ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl, logicalRowIndex + 1);
//                end else if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, HNsGrid1.Row + 2] = False) then
                end else if (HNsGrid1.ReadOnly[ctCol_DeliGdsCmpltDueDate, rowIndex + 2] = False) then
                begin
                  // 次行納品完了予定日
                  //HNsGrid1.LogicalFocusCell(ctCol_DeliGdsCmpltDueDate,ctRow_DeliGdsCmpltDueDate, logicalRowIndex + 1);
                  xGotoCell(ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, logicalRowIndex + 1);
                end;
              end;
              st := True;
            end;
          end;
       end else
       //仕入先
//       if ((HNsGrid1.Col = ctCol_SupplierCdForStock) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
       if ((colIndex = ctCol_SupplierCdForStock) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
       begin
         // ↑キー
         //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
         begin
          // 先頭行 ヘッダ部
//          if (HNsGrid1.LogicalRow = 1) then
          if (logicalRowIndex = 1) then
          begin
            xSetHeaderControl;
          end else
          // 先頭行以外
          begin
//            if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
//            begin
//              if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, (HNsGrid1.LogicalRow - 1) * 2 + 1] = False) then
//              begin
//                HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行仕入伝票番号
//              end else
//              begin
//                HNsGrid1.FocusCell(ctCol_SupplierCdForStock, (HNsGrid1.LogicalRow - 1) * 2);  // 前行仕入先
//              end;
//            end;
            // ADD 2012/10/15 --- >>>>
            for ix := HNsGrid1.Row - 1 downto 0 do
            begin
              if ix <= 1 then
              begin
                xSetHeaderControl;
              end
              else
              begin
                 if (xMoveRowCellAdJust((ix div 2), actionType_Up, keyType_other)) then
                  begin
                    // 前行仕入伝票番号
                    if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, ix] = False) then
                    begin
                      xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, (ix div 2));
                      break;
                    end
                  end;
              end;
            end;
            // ADD 2012/10/15 --- <<<<

               // DEL 2012/10/15 --- >>>>
//            if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
//            begin
//                //xMoveUpDownCellAdJust(False, actionType_Up);
//              // 前行仕入伝票番号
//              if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, (logicalRowIndex - 1) * 2 + 1] = False) then
//              begin
//                xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, logicalRowIndex - 1);
//              end
//              // 前行仕入先
//              else if (HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, (logicalRowIndex - 1) * 2] = False) then
//              begin
//                xGotoCell(ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, logicalRowIndex - 1);
//              end
//              else
//              begin
//                xSetHeaderControl;
//              end;
//            end;
             // DEL 2012/10/15 --- <<<<
          end;
         end
         // ←キー
         //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
         else if vk_Left_Check then
         begin
          // --- UPD 2013/03/07 Wakita ---------->>>>>
          //// 先頭行
          ////if (HNsGrid1.LogicalRow = 1) then
          //if (logicalRowIndex = 1) then
          //begin
          //  st := True;  // 移動無し
          //end else
          //// 先頭行以外
          //begin
          ////    if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
          ////    begin
          ////      if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, (HNsGrid1.LogicalRow - 1) * 2 + 1] = False) then
          ////      begin
          ////        HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行仕入伝票番号
          //////          xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, HNsGrid1.LogicalRow - 1);  // 前行仕入伝票番号
          ////      end else
          ////      begin
          ////        if (HNsGrid1.ReadOnly[ctCol_StockDate, (HNsGrid1.LogicalRow - 1) * 2] = False) then
          ////        begin
          ////          HNsGrid1.FocusCell(ctCol_StockDate, (HNsGrid1.LogicalRow - 1) * 2);  // 前行仕入日
          //////            xGotoCell(ctCol_StockDate, ctRow_StockDate, HNsGrid1.LogicalRow - 1);  // 前行仕入日
          ////        end else
          ////        begin
          ////          HNsGrid1.FocusCell(ctCol_SupplierCdForStock, (HNsGrid1.LogicalRow - 1) * 2);  // 前行仕入先
          //////            xGotoCell(ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, HNsGrid1.LogicalRow - 1);  // 前行仕入先
          ////        end;
          ////      end;
          ////    end;
          //  xMoveUpDownCellAdJust(False, actionType_Up);
          //end;
          canFocus := False;
          for ix := logicalRowIndex - 1 downto 1 do
          begin
            if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, ix * 2 + 1] = False) then
            begin
              canFocus := True;
              Break;
            end;
          end;
          if (canFocus) then
          begin
            xMoveUpDownCellAdJust(False, actionType_Up);
          end
          else
          begin
            st := True;  // 移動無し
          end;
          // --- UPD 2013/03/07 Wakita ----------<<<<<
         end
         // ↓キー
         //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
         else if vk_Down_Check then   // ADD 2010/07/0
         begin
          // 最終行
//          if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
          if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
          begin
//            if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1] = False) then
            if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, logicalRowIndex * 2 + 1] = False) then
            begin
//              HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1);  // 同行仕入伝票番号
              xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, logicalRowIndex);  // 同行仕入伝票番号
            end else
            // フッタ部
            begin
              xSetFootControl();
            end;
          end else
          // 最終行以外
          begin
//            if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1] = False) then
            if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, logicalRowIndex * 2 + 1] = False) then
            begin
//              HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1);  // 同行仕入伝票番号
              xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, logicalRowIndex);  // 同行仕入伝票番号
            end else
            begin
//              if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
              if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
//                HNsGrid1.FocusCell(ctCol_SupplierCdForStock, (HNsGrid1.LogicalRow + 1) * 2);  // 次行仕入先
                xGotoCell(ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, logicalRowIndex + 1);  // 次行仕入先
            end;
          end;
         end
         // →キー
         //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
         else if vk_Right_Check then
         begin
          // 最終行
//          if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
          if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
          begin
//            if (HNsGrid1.ReadOnly[ctCol_StockDate, HNsGrid1.LogicalRow * 2] = False) then
            if (HNsGrid1.ReadOnly[ctCol_StockDate, logicalRowIndex * 2] = False) then
            begin
//              HNsGrid1.FocusCell(ctCol_StockDate, HNsGrid1.LogicalRow * 2);  // 同行仕入日
              xGotoCell(ctCol_StockDate, ctRow_StockDate, logicalRowIndex);  // 同行仕入日
            end else
            begin
//              if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1] = False) then
              if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, logicalRowIndex * 2 + 1] = False) then
              begin
//                HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1);  // 同行仕入伝票番号
                xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, logicalRowIndex);  // 同行仕入伝票番号
              end else
              begin
                xSetFootControl();
              end;
            end;
          end else
          // 最終行以外
          begin
//            if (HNsGrid1.ReadOnly[ctCol_StockDate, HNsGrid1.LogicalRow * 2] = False) then
            if (HNsGrid1.ReadOnly[ctCol_StockDate, logicalRowIndex * 2] = False) then
            begin
//              HNsGrid1.FocusCell(ctCol_StockDate, HNsGrid1.LogicalRow * 2);  // 同行仕入日
              xGotoCell(ctCol_StockDate, ctRow_StockDate, logicalRowIndex);  // 同行仕入日
            end else
            begin
//              if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1] = False) then
              if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, logicalRowIndex * 2 + 1] = False) then
              begin
//                HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1);  // 同行仕入伝票番号
                xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, logicalRowIndex);  // 同行仕入伝票番号
              end else
              begin
//                if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
                if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
//                  HNsGrid1.FocusCell(ctCol_SupplierCdForStock, (HNsGrid1.LogicalRow + 1) * 2);  // 次行仕入先
                  xGotoCell(ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, logicalRowIndex + 1);  // 次行仕入先
              end;
            end;
          end;
         end;
         st := True;
       end else
       //仕入日
//       if ((HNsGrid1.Col = ctCol_StockDate) and (HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
       if ((colIndex = ctCol_StockDate) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
       begin
         // ↑キー
         //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
         begin
          // 先頭行 ヘッダ部
//          if (HNsGrid1.LogicalRow = 1) then
          if (logicalRowIndex = 1) then
          begin
            xSetHeaderControl;
          end else
          // 先頭行以外
          begin
            // ADD 2012/10/15 --- >>>>
            for ix := HNsGrid1.Row - 1 downto 0 do
            begin
              if ix <= 1 then
              begin
                xSetHeaderControl;
              end
              else
              begin
                 if (xMoveRowCellAdJust((ix div 2), actionType_Up, keyType_other)) then
                  begin
                    // 前行仕入伝票番号
                    if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, ix] = False) then
                    begin
                      xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, (ix div 2));
                      break;
                    end
                  end;
              end;
            end;
            // ADD 2012/10/15 --- <<<<
            // DEL 2012/10/15 --- >>>>
////            if (xMoveRowCellAdJust(HNsGrid1.LogicalRow - 1, actionType_Up, keyType_other)) then
//            if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
//            begin
////              if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, (HNsGrid1.LogicalRow - 1) * 2 + 1] = False) then
//              if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, (logicalRowIndex - 1) * 2 + 1] = False) then
//              begin
////                HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行仕入伝票番号
//                xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, logicalRowIndex - 1);  // 前行仕入伝票番号
//              end else
//              begin
////                HNsGrid1.FocusCell(ctCol_StockDate, (HNsGrid1.LogicalRow - 1) * 2);  // 前行仕入日
//                xGotoCell(ctCol_StockDate, ctRow_StockDate, logicalRowIndex - 1);  // 前行仕入日
//              end;
//            end;
            //  DEL 2012/10/15 --- <<<<
          end;
         end
         // ←キー
         //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
         else if vk_Left_Check then
         begin
//          HNsGrid1.FocusCell(ctCol_SupplierCdForStock, HNsGrid1.LogicalRow * 2);  // 同行仕入先
          xGotoCell(ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, logicalRowIndex);  // 同行仕入先
         end
         // ↓キー
         //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
         else if vk_Down_Check then   // ADD 2010/07/0
         begin
          // 最終行
//          if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
          if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
          begin
//            if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1] = False) then
            if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, logicalRowIndex * 2 + 1] = False) then
            begin
//              HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1);  // 同行仕入伝票番号
              xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, logicalRowIndex);  // 同行仕入伝票番号
            end else
            // フッタ部
            begin
              xSetFootControl();
            end;
          end else
          // 最終行以外
          begin
//            if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1] = False) then
            if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, logicalRowIndex * 2 + 1] = False) then
            begin
//              HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1);  // 同行仕入伝票番号
              xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, logicalRowIndex);  // 同行仕入伝票番号
            end else
            begin
//              if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
              if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
//                HNsGrid1.FocusCell(ctCol_StockDate, (HNsGrid1.LogicalRow + 1) * 2);  // 次行仕入日
                xGotoCell(ctCol_StockDate, ctRow_StockDate, logicalRowIndex + 1);  // 次行仕入日
            end;
          end;
         end
         // →キー
         //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
         else if vk_Right_Check then
         begin
          // 最終行
//          if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
          if (logicalRowIndex = HNsGrid1.LogicalRowCount - 1) then
          begin
//            if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1] = False) then
            if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, logicalRowIndex * 2 + 1] = False) then
            begin
//              HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1);  // 同行仕入伝票番号
              xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, logicalRowIndex);  // 同行仕入伝票番号
            end else
            // フッタ部
            begin
              xSetFootControl();
            end;
          end else
         // 最終行以外
          begin
            if (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, logicalRowIndex * 2 + 1] = False) then
            begin
//              HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, HNsGrid1.LogicalRow * 2 + 1);  // 同行仕入伝票番号
              xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, logicalRowIndex);  // 同行仕入伝票番号
            end else
            begin
              if (xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other)) then
              begin
                if (HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, (logicalRowIndex + 1) * 2] = False) then
                begin
//               	  HNsGrid1.FocusCell(ctCol_SupplierCdForStock, (HNsGrid1.LogicalRow + 1) * 2);  // 次行仕入先
                  xGotoCell(ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, logicalRowIndex + 1);  // 次行仕入先
                end else
                begin
//               	  HNsGrid1.FocusCell(ctCol_StockDate, (HNsGrid1.LogicalRow + 1) * 2);  // 次行仕入日
                  xGotoCell(ctCol_StockDate, ctRow_StockDate, logicalRowIndex + 1);  // 次行仕入日
                end;
              end;
            end;
          end;
         end;
         st := True;
       end else
       //仕入伝票番号
       if ((colIndex = ctCol_PartySalesSlipNum) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
       begin
         // ↑キー
         //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
         begin
          // 先頭行
          if (logicalRowIndex = 1) then
          begin
            if (HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, logicalRowIndex * 2] = False) then
            begin
//              HNsGrid1.FocusCell(ctCol_SupplierCdForStock, HNsGrid1.LogicalRow * 2);  // 同行仕入先
              // --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
              //xGotoCell(ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, logicalRowIndex);  // 同行仕入先
              if (optStockDateCtrl = 1) then // 仕入日付フォーカス制御オプション(OPT-CPM0060)がオンの場合
              begin
                xGotoCell(ctCol_StockDate, ctRow_StockDate, logicalRowIndex); // 同行仕入日
              end
              else
              begin
                xGotoCell(ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, logicalRowIndex); // 同行仕入先
              end;
              // --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
            end else
            begin
              xSetHeaderControl;
            end;
          end else
          // 先頭行以外
          begin
            if (HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, logicalRowIndex * 2] = False) then
            begin
//              HNsGrid1.FocusCell(ctCol_SupplierCdForStock, HNsGrid1.LogicalRow * 2);  // 同行仕入先
              // --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
              //xGotoCell(ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, logicalRowIndex);  // 同行仕入先
              if (optStockDateCtrl = 1) then // 仕入日付フォーカス制御オプション(OPT-CPM0060)がオンの場合
              begin
                xGotoCell(ctCol_StockDate, ctRow_StockDate, logicalRowIndex); // 同行仕入日
              end
              else
              begin
                xGotoCell(ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, logicalRowIndex); // 同行仕入先
              end;
              // --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
            end else
            begin
              if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
//                HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行仕入伝票番号
                xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, logicalRowIndex - 1);  // 前行仕入伝票番号
            end;
          end;
         end
         // ←キー
         //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
         else if vk_Left_Check then
         begin
          // --- UPD 2013/03/07 Wakita ---------->>>>>
          //// 先頭行
          //if (logicalRowIndex = 1) then
          //begin
          //  if (HNsGrid1.ReadOnly[ctCol_StockDate, logicalRowIndex * 2] = False) then
          //  begin
          ////        HNsGrid1.FocusCell(ctCol_StockDate, HNsGrid1.LogicalRow * 2);  // 同行仕入日
          //    // --- DEL 2012/07/26 Wakita ---------->>>>>
          //    //xGotoCell(ctCol_StockDate, ctRow_StockDate, logicalRowIndex);  // 同行仕入日
          //    // --- DEL 2012/07/26 Wakita ----------<<<<<
          //  end else
          //  begin
          //    if (HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, logicalRowIndex * 2] = False) then
          //    begin
          ////        HNsGrid1.FocusCell(ctCol_SupplierCdForStock, HNsGrid1.LogicalRow * 2);  // 同行仕入先
          //      xGotoCell(ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, logicalRowIndex);  // 同行仕入先
          //    end else
          //    begin
          //      xSetHeaderControl;
          //    end;
          //  end;
          //end else
          //// 先頭行以外
          //begin
          //  if (HNsGrid1.ReadOnly[ctCol_StockDate, logicalRowIndex * 2] = False) then
          //  begin
  	  ////          HNsGrid1.FocusCell(ctCol_StockDate, HNsGrid1.LogicalRow * 2);  // 同行仕入日
          //    // --- DEL 2012/07/26 Wakita ---------->>>>>
          //    //xGotoCell(ctCol_StockDate, ctRow_StockDate, logicalRowIndex);  // 同行仕入日
          //    // --- DEL 2012/07/26 Wakita ----------<<<<<
          //  end else
          //  begin
          //    if (HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, logicalRowIndex * 2] = False) then
          //    begin
          ////        HNsGrid1.FocusCell(ctCol_SupplierCdForStock, HNsGrid1.LogicalRow * 2);  // 同行仕入先
          //      xGotoCell(ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, logicalRowIndex);  // 同行仕入先
          //    end else
          //    begin
          //      if (xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other)) then
          ////          HNsGrid1.FocusCell(ctCol_PartySalesSlipNum, (HNsGrid1.LogicalRow - 1) * 2 + 1);  // 前行仕入伝票番号
          //        xGotoCell(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, logicalRowIndex - 1);  // 前行仕入伝票番号
          //    end;
          //  end;
          //end;
          xGotoCell(ctCol_StockDate, ctRow_StockDate, logicalRowIndex);  // 同行仕入日
          // --- UPD 2013/03/07 Wakita ----------<<<<<
         end
         // ↓キー
         //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
         else if vk_Down_Check then   // ADD 2010/07/0
         begin
          // 最終行
          if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
          begin
            // フッタ部
            xSetFootControl();
          end else
          // 最終行以外
          begin
//            if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
//              HNsGrid1.FocusCell(ctCol_SupplierCdForStock, (HNsGrid1.LogicalRow + 1) * 2);  // 次行仕入先
            xMoveUpDownCellAdJust(False, actionType_Down)
          end;
         end
         // →キー
         //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
         else if vk_Right_Check then
         begin
          // 最終行
          if (HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1) then
          begin
            // フッタ部
            xSetFootControl();
          end else
          // 最終行以外
          begin
//            if (xMoveRowCellAdJust(HNsGrid1.LogicalRow + 1, actionType_Down, keyType_other)) then
//              HNsGrid1.FocusCell(ctCol_SupplierCdForStock, (HNsGrid1.LogicalRow + 1) * 2);  // 次行仕入先
            xMoveUpDownCellAdJust(False, actionType_Down);
          end;
         end;
         st := True;
       end;

       //BO
       if ((colIndex = ctCol_BoCode) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
        begin
          //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
          begin
            //先頭行
            if logicalRowIndex = 1 then
            begin
              st := True;
              //ヘッダ部
              xSetHeaderControl();
            end
            else
            begin
              // 前行有効行
              if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex - 2, -1, 9) = 1 then
              begin
                //前行BO
                //HNsGrid1.FocusCell(ctCol_BoCode, (HNsGrid1.LogicalRow - 1) * 2);
                xGotoCell(ctCol_BoCode,ctRow_BoCode, (logicalRowIndex - 1));
              end
              else
              begin
                xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other);
              end;
              st := True;
            end;

          end
          //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
          else if vk_Left_Check then
          begin
            //先頭行
            if logicalRowIndex = 1 then
            begin
              st := True;
            end
            else
            begin
              if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex - 2, -1, 9) = 1 then
              begin
                if (HNsGrid1.ReadOnly[ctCol_UOEResvdSectionNm, (logicalRowIndex - 1) * 2 + 1] = False) then
                  //前行指定拠点
                  //HNsGrid1.FocusCell(ctCol_UOEResvdSectionNm, (HNsGrid1.LogicalRow - 1) * 2 + 1)
                  xGotoCell(ctCol_UOEResvdSectionNm,ctRow_UOEResvdSectionNm, (logicalRowIndex - 1))
                else
                if (HNsGrid1.ReadOnly[ctCol_FollowDeliGoodsDivNm, (logicalRowIndex - 1) * 2] = False) then
                  //前行H納品区分
                  //HNsGrid1.FocusCell(ctCol_FollowDeliGoodsDivNm, (HNsGrid1.LogicalRow - 1) * 2)
                  xGotoCell(ctCol_FollowDeliGoodsDivNm,ctRow_FollowDeliGoodsDivNm, (logicalRowIndex - 1))
                else
                if (HNsGrid1.ReadOnly[ctCol_DeliveredGoodsDivNm, (logicalRowIndex - 1) * 2] = False) then
                  //前行納品区分
                  //HNsGrid1.FocusCell(ctCol_DeliveredGoodsDivNm, (HNsGrid1.LogicalRow - 1) * 2)
                  xGotoCell(ctCol_DeliveredGoodsDivNm,ctRow_DeliveredGoodsDivNm, (logicalRowIndex - 1))
                else
                  //前行数量                                                       AcceptAnOrderCntForOrderTP
                  //HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntForOrder, (HNsGrid1.LogicalRow - 1) * 2);
                  xGotoCell(ctCol_AcceptAnOrderCntForOrder,ctRow_AcceptAnOrderCntForOrder, (logicalRowIndex - 1));
              end
              else
              begin
                xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other);
              end;
              st := True;
            end;
          end
          // else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
          else if vk_Down_Check then   // ADD 2010/07/0
          begin
            //最終行
            if HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1 then
            begin
              st := True;
              //フッタ部
              xSetFootControl();
            end
            else
            begin
              if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex, -1, 9) = 1 then
              begin
                //次行BO
                //HNsGrid1.FocusCell(ctCol_BoCode, (HNsGrid1.LogicalRow + 1) * 2);
                xGotoCell(ctCol_BoCode,ctRow_BoCode, (logicalRowIndex + 1));
              end
              else
              begin
                xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other);
              end;
              st := True;
            end;
          end
          //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
          else if vk_Right_Check then
          begin
            st := True;
            //同行発注先
            //HNsGrid1.FocusCell(ctCol_SupplierCdForOrder, HNsGrid1.Row);
            xGotoCell(ctCol_SupplierCdForOrder,ctRow_SupplierCdForOrder, logicalRowIndex);
          end;
        end

       //発注先
       else if ((colIndex = ctCol_SupplierCdForOrder) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
       begin
        //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
          begin
            //先頭行
            if logicalRowIndex = 1 then
            begin
              st := True;
              //ヘッダ部
              xSetHeaderControl();
            end
            else
            begin
              if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex - 2, -1, 9) = 1 then
              begin
                //前行発注先
                //HNsGrid1.FocusCell(ctCol_SupplierCdForOrder, (HNsGrid1.LogicalRow - 1) * 2); 1
                xGotoCell(ctCol_SupplierCdForOrder,ctRow_SupplierCdForOrder, (logicalRowIndex - 1));
              end
              else
              begin
                xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other);
              end;
              st := True;
            end;

          end
          //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
          else if vk_Left_Check then
          begin
            st := True;
            //同行BO
            //HNsGrid1.FocusCell(ctCol_BoCode, HNsGrid1.Row);
            xGotoCell(ctCol_BoCode,ctRow_BoCode, logicalRowIndex);
          end
          //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
          else if vk_Down_Check then   // ADD 2010/07/0
          begin
            //最終行
            if HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1 then
            begin
              st := True;
              //フッタ部
              xSetFootControl();
            end
            else
            begin
              if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex, -1, 9) = 1 then
              begin
                //次行発注先
                //HNsGrid1.FocusCell(ctCol_SupplierCdForOrder, (HNsGrid1.LogicalRow + 1) * 2);
                xGotoCell(ctCol_SupplierCdForOrder,ctRow_SupplierCdForOrder, (logicalRowIndex + 1));
              end
              else
              begin
                xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other);
              end;
              st := True;
            end;
          end
          //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
          else if vk_Right_Check then
          begin
            st := True;
            //同行数量
            // HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntForOrder, HNsGrid1.Row);
            xGotoCell(ctCol_AcceptAnOrderCntForOrder,ctRow_AcceptAnOrderCntForOrder,logicalRowIndex);
          end;
       end
       //数量
       else if ((colIndex = ctCol_AcceptAnOrderCntForOrder) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
       begin
        //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
          begin
            //先頭行
            if logicalRowIndex = 1 then
            begin
              st := True;
              //ヘッダ部
              xSetHeaderControl();
            end
            else
            begin
              if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex - 2, -1, 9) = 1 then
              begin
                //前行数量
                //HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntForOrder, (HNsGrid1.LogicalRow - 1) * 2);
                xGotoCell(ctCol_AcceptAnOrderCntForOrder,ctRow_AcceptAnOrderCntForOrder, (logicalRowIndex - 1));
              end
              else
              begin
                xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other);
              end;
              st := True;
            end;

          end
        //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
        else if vk_Left_Check then
          begin
            st := True;
            //同行発注先
            //HNsGrid1.FocusCell(ctCol_SupplierCdForOrder, HNsGrid1.Row);
            xGotoCell(ctCol_SupplierCdForOrder,ctRow_SupplierCdForOrder, logicalRowIndex);
          end
        //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
          else if vk_Down_Check then   // ADD 2010/07/0
          begin
            //最終行
            if HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1 then
            begin
              st := True;
              //フッタ部
              xSetFootControl();
            end
            else
            begin
              if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex, -1, 9) = 1 then
              begin
                //次行数量
                //HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntForOrder, (HNsGrid1.LogicalRow + 1) * 2);
                xGotoCell(ctCol_AcceptAnOrderCntForOrder,ctRow_AcceptAnOrderCntForOrder, (logicalRowIndex + 1));
              end
              else
              begin
                xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other);
              end;
              st := True;
            end;
          end
          //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
          else if vk_Right_Check then
          begin
            if (HNsGrid1.ReadOnly[ctCol_DeliveredGoodsDivNm, rowIndex] = False) then
            begin
              st := True;
              //同行納品区分
              //HNsGrid1.FocusCell(ctCol_DeliveredGoodsDivNm, HNsGrid1.Row);
              xGotoCell(ctCol_DeliveredGoodsDivNm,ctRow_DeliveredGoodsDivNm, logicalRowIndex);
            end
            else
            if (HNsGrid1.ReadOnly[ctCol_FollowDeliGoodsDivNm, rowIndex] = False) then
            begin
              st := True;
              //同行H納品区分
              //HNsGrid1.FocusCell(ctCol_FollowDeliGoodsDivNm, HNsGrid1.Row);
              xGotoCell(ctCol_FollowDeliGoodsDivNm,ctRow_FollowDeliGoodsDivNm, logicalRowIndex);
            end
            else
            if (HNsGrid1.ReadOnly[ctCol_UOEResvdSectionNm, rowIndex + 1] = False) then
            begin
              st := True;
              //同行指定拠点
              //HNsGrid1.FocusCell(ctCol_UOEResvdSectionNm, HNsGrid1.Row + 1);
              xGotoCell(ctCol_UOEResvdSectionNm,ctRow_UOEResvdSectionNm, logicalRowIndex);
            end
            else
            begin
              //最終行
              if HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1 then
              begin
                st := True;
                //フッタ部
                xSetFootControl();
              end;
            end;
          end;
       end

       //納品区分
       else if ((colIndex = ctCol_DeliveredGoodsDivNm) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
       begin
        //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
        begin
          //先頭行
          if logicalRowIndex = 1 then
          begin
            st := True;
            //ヘッダ部
            xSetHeaderControl();
          end
          else
          begin
            if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex - 2, -1, 9) = 1 then
            begin
             if (HNsGrid1.ReadOnly[ctCol_UOEResvdSectionNm, (logicalRowIndex - 1) * 2 + 1] = False) then
              //前行指定拠点
              //HNsGrid1.FocusCell(ctCol_UOEResvdSectionNm, (HNsGrid1.LogicalRow - 1) * 2 + 1)
              xGotoCell(ctCol_UOEResvdSectionNm,ctRow_UOEResvdSectionNm, (logicalRowIndex - 1))
             else if (HNsGrid1.ReadOnly[ctCol_FollowDeliGoodsDivNm, (logicalRowIndex - 1) * 2] = False) then
             begin
              //前行納品区分
              //HNsGrid1.FocusCell(ctCol_DeliveredGoodsDivNm, (HNsGrid1.LogicalRow - 1) * 2);
              xGotoCell(ctCol_DeliveredGoodsDivNm,ctRow_DeliveredGoodsDivNm, (logicalRowIndex - 1));
             end
             else
             begin
               xSetHeaderControl();
             end;
            end
            else
            begin
              xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other);
            end;
            st := True;
          end;

        end
        //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
        else if vk_Left_Check then
        begin
          st := True;
          //同行数量
          //HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntForOrder, HNsGrid1.Row);
          xGotoCell(ctCol_AcceptAnOrderCntForOrder,ctRow_AcceptAnOrderCntForOrder, logicalRowIndex);
        end
        //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
        else if vk_Down_Check then   // ADD 2010/07/0
        begin
          if (HNsGrid1.ReadOnly[ctCol_UOEResvdSectionNm, rowIndex + 1] = False) then
          begin
            st := True;
            //同行指定拠点
            //HNsGrid1.FocusCell(ctCol_UOEResvdSectionNm, HNsGrid1.Row + 1);
            xGotoCell(ctCol_UOEResvdSectionNm,ctRow_UOEResvdSectionNm, logicalRowIndex);
          end
          else
          begin
            //最終行
            if HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1 then
            begin
              st := True;
              //フッタ部
              xSetFootControl();
            end
            else
            begin
              if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex, -1, 9) = 1 then
              begin
                //次行納品区分
                //HNsGrid1.FocusCell(ctCol_DeliveredGoodsDivNm, (HNsGrid1.LogicalRow + 1) * 2);
                xGotoCell(ctCol_DeliveredGoodsDivNm,ctRow_DeliveredGoodsDivNm, (logicalRowIndex + 1));
              end
              else
              begin
                xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other);
              end;
              st := True;
            end;
          end;
        end
        //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
        else if vk_Right_Check then
        begin
          if (HNsGrid1.ReadOnly[ctCol_FollowDeliGoodsDivNm, rowIndex] = False) then
          begin
            st := True;
            //同行H納品区分
            //HNsGrid1.FocusCell(ctCol_FollowDeliGoodsDivNm, HNsGrid1.Row);
            xGotoCell(ctCol_FollowDeliGoodsDivNm,ctRow_FollowDeliGoodsDivNm, logicalRowIndex);
          end
          else if (HNsGrid1.ReadOnly[ctCol_UOEResvdSectionNm, rowIndex + 1] = False) then
          begin
            st := True;
            //同行指定拠点
            //HNsGrid1.FocusCell(ctCol_UOEResvdSectionNm, HNsGrid1.Row + 1);
            xGotoCell(ctCol_UOEResvdSectionNm,ctRow_UOEResvdSectionNm, logicalRowIndex);
          end
          else
          begin
            //最終行
            if HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1 then
            begin
              st := True;
              //フッタ部
              xSetFootControl();
            end
            else
            begin
              if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex, -1, 9) = 1 then
              begin
                //次行BO
                //HNsGrid1.FocusCell(ctCol_BoCode, (HNsGrid1.LogicalRow + 1) * 2);
                xGotoCell(ctCol_BoCode,ctRow_BoCode, (logicalRowIndex + 1));
              end
              else
              begin
                xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other);
              end;
              st := True;
            end;
          end;
        end;
       end

       //H納品区分
       else if ((colIndex = ctCol_FollowDeliGoodsDivNm) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
       begin
          //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
            begin
              //先頭行
              if logicalRowIndex = 1 then
              begin
                st := True;
                xSetHeaderControl();
              end
              else
              begin
                if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex - 2, -1, 9) = 1 then
                begin
                 if (HNsGrid1.ReadOnly[ctCol_UOEResvdSectionNm, (logicalRowIndex - 1) * 2 + 1] = False) then
                 begin
                   st := True;
                   //前行指定拠点
                   //HNsGrid1.FocusCell(ctCol_UOEResvdSectionNm, (HNsGrid1.LogicalRow - 1) * 2 + 1);
                   xGotoCell(ctCol_UOEResvdSectionNm,ctRow_UOEResvdSectionNm, (logicalRowIndex - 1));
                 end
                 else if (HNsGrid1.ReadOnly[ctCol_FollowDeliGoodsDivNm, (logicalRowIndex - 1) * 2] = False) then
                 begin
                   st := True;
                   //前行H納品区分
                   //HNsGrid1.FocusCell(ctCol_FollowDeliGoodsDivNm, (HNsGrid1.LogicalRow - 1) * 2);
                    xGotoCell(ctCol_FollowDeliGoodsDivNm,ctRow_FollowDeliGoodsDivNm, (logicalRowIndex - 1));
                 end
                 else
                 begin
                   //ヘッダ部
                   st := True;
                   xSetHeaderControl();
                 end;
                end
                else
                begin
                  st := True;
                  xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other);
                end;
              end;

            end
          //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
          else if vk_Left_Check then
            begin
              st := True;
              if (HNsGrid1.ReadOnly[ctCol_DeliveredGoodsDivNm, rowIndex] = False) then
                //同行納品区分
                //HNsGrid1.FocusCell(ctCol_DeliveredGoodsDivNm, HNsGrid1.Row)
                xGotoCell(ctCol_DeliveredGoodsDivNm,ctRow_DeliveredGoodsDivNm, logicalRowIndex)
            end
          //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
          else if vk_Down_Check then   // ADD 2010/07/0
            begin
              if (HNsGrid1.ReadOnly[ctCol_UOEResvdSectionNm, rowIndex + 1] = False) then
              begin
                st := True;
                //同行指定拠点
                //HNsGrid1.FocusCell(ctCol_UOEResvdSectionNm, HNsGrid1.Row + 1);
                xGotoCell(ctCol_UOEResvdSectionNm,ctRow_UOEResvdSectionNm, logicalRowIndex);
              end
              else
              begin
                //最終行
                if HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1 then
                begin
                  st := True;
                  //フッタ部
                  xSetFootControl();
                end
                else
                begin
                  if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex, -1, 9) = 1 then
                  begin
                    st := True;
                    //次行H納品区分
                    //HNsGrid1.FocusCell(ctCol_FollowDeliGoodsDivNm, (HNsGrid1.LogicalRow + 1) * 2);
                    xGotoCell(ctCol_FollowDeliGoodsDivNm,ctRow_FollowDeliGoodsDivNm, (logicalRowIndex + 1));
                  end
                  else
                  begin
                    st := True;
                    xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other);
                  end;
                end;
              end;
            end
            //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
            else if vk_Right_Check then
            begin

              if (HNsGrid1.ReadOnly[ctCol_UOEResvdSectionNm, rowIndex + 1] = False) then
              begin
                st := True;
                //同行指定拠点
                //HNsGrid1.FocusCell(ctCol_UOEResvdSectionNm, HNsGrid1.Row + 1);
                xGotoCell(ctCol_UOEResvdSectionNm,ctRow_UOEResvdSectionNm, logicalRowIndex);
              end
              else
              begin
                //最終行
                if HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1 then
                begin
                  st := True;
                  //フッタ部
                  xSetFootControl();
                end
                else
                begin
                  if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex, -1, 9) = 1 then
                  begin
                    st := True;
                    //次行BO
                    //HNsGrid1.FocusCell(ctCol_BoCode, (HNsGrid1.LogicalRow + 1) * 2);
                    xGotoCell(ctCol_BoCode,ctRow_BoCode, (logicalRowIndex + 1));
                  end
                  else
                  begin
                    st := True;
                    xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other);
                  end;
                end;
              end;
            end;
       end

       //指定拠点
       else if ((colIndex = ctCol_UOEResvdSectionNm) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
       begin
         //if (GetKeyState(VK_UP) and $8000 = $8000) then
           if vk_Up_Check then
         begin
            if (HNsGrid1.ReadOnly[ctCol_DeliveredGoodsDivNm, rowIndex - 1] = False) then
            begin
               st := True;
               //同行納品区分
               //HNsGrid1.FocusCell(ctCol_DeliveredGoodsDivNm, HNsGrid1.Row - 1);
               xGotoCell(ctCol_DeliveredGoodsDivNm,ctRow_DeliveredGoodsDivNm, logicalRowIndex);
            end
            else
            begin
              //先頭行
              if logicalRowIndex = 1 then
              begin
                st := True;
                xSetHeaderControl();
              end
              else
              begin
                if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex - 2, -1, 9) = 1 then
                begin
                  st := True;
                  //前行指定拠点
                  //HNsGrid1.FocusCell(ctCol_UOEResvdSectionNm, (HNsGrid1.LogicalRow - 1) * 2 + 1);
                  xGotoCell(ctCol_UOEResvdSectionNm,ctRow_UOEResvdSectionNm, (logicalRowIndex - 1));
                end
                else
                begin
                  st := True;
                  xMoveRowCellAdJust(logicalRowIndex - 1, actionType_Up, keyType_other);
                end;
              end;

            end;
         end
         //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
         else if vk_Left_Check then
         begin
            st := True;
            if (HNsGrid1.ReadOnly[ctCol_FollowDeliGoodsDivNm, rowIndex - 1] = False) then
              //同行H納品区分
              //HNsGrid1.FocusCell(ctCol_FollowDeliGoodsDivNm, HNsGrid1.Row - 1)
              xGotoCell(ctCol_FollowDeliGoodsDivNm,ctRow_FollowDeliGoodsDivNm, logicalRowIndex)
            else if (HNsGrid1.ReadOnly[ctCol_DeliveredGoodsDivNm, rowIndex - 1] = False) then
              //同行納品区分
              //HNsGrid1.FocusCell(ctCol_DeliveredGoodsDivNm, HNsGrid1.Row - 1)
              xGotoCell(ctCol_DeliveredGoodsDivNm,ctRow_DeliveredGoodsDivNm, logicalRowIndex)
            else
              //同行数量
              //HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntForOrder, HNsGrid1.Row - 1);
              xGotoCell(ctCol_AcceptAnOrderCntForOrder,ctRow_AcceptAnOrderCntForOrder, logicalRowIndex);
         end
         //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
          else if vk_Down_Check then   // ADD 2010/07/0
         begin
          //最終行
          if HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1 then
          begin
            st := True;
            //フッタ部
            xSetFootControl();
          end
          else
          begin
            if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex, -1, 9) = 1 then
            begin
              st := True;
              if (HNsGrid1.ReadOnly[ctCol_DeliveredGoodsDivNm, (logicalRowIndex + 1) * 2] = False) then
              begin
                //次行納品区分
                //HNsGrid1.FocusCell(ctCol_DeliveredGoodsDivNm, (HNsGrid1.LogicalRow + 1) * 2);
                xGotoCell(ctCol_DeliveredGoodsDivNm,ctRow_DeliveredGoodsDivNm, (logicalRowIndex + 1));
              end
              else
              begin
                //フッタ部
                xSetFootControl();
              end;
            end
            else
            begin
              st := True;
              xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other);
            end;
          end;
         end
         //else if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
         else if vk_Right_Check then
         begin
          //最終行
          if HNsGrid1.LogicalRow = HNsGrid1.LogicalRowCount - 1 then
          begin
            st := True;
            //フッタ部
            xSetFootControl();
          end
          else
          begin
            if gpxMAHNB01013B_GridJoinCheck(0, logicalRowIndex, -1, 9) = 1 then
            begin
              st := True;
              //次行BO
              //HNsGrid1.FocusCell(ctCol_BoCode, (HNsGrid1.LogicalRow + 1) * 2);
              xGotoCell(ctCol_BoCode,ctRow_BoCode, (logicalRowIndex + 1));
            end
            else
            begin
              st := True;
              xMoveRowCellAdJust(logicalRowIndex + 1, actionType_Down, keyType_other);
            end;
          end;
         end;
       end;
     end;
     // --- ADD 2010/06/02 ----------<<<<<
  end
  //無効行
  else
  begin
    //品番検索
    if (i_searchPartsMode = ctGoodsNoSearch) then
    begin
      //BLコード
      if ((colIndex = ctCol_BLGoodsCode) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
      begin
        //if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
        if vk_Right_Check then
        begin
           //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
           xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
           st := True;
        end
        //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
        else if vk_Down_Check then
        begin
           //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
           xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
           st := True;
        end
        //else if (GetKeyState(VK_UP) and $8000 = $8000) then
        else if vk_Up_Check then
        begin
           //明細一行目
           if (logicalRowIndex = 1) then
           begin
             st := True;

             //gpxMAHNB01013B_CheckDetailAction(logicalRowIndex - 1, logicalRowIndex -1 ,1);
             // 通常入力の場合、粗利チェックを行う。
             if (i_InputType = 0) then
             begin
               gpxMAHNB01013B_CheckDetailAction(logicalRowIndex - 1, HNsGrid1.LogicalRow -1 ,1);
               // ----- ADD 2011/09/21 ----------------------------------->>>>>
               if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
               and (RCHNB01003UADM.SalesSlipDtlNumSrc[logicalRowIndex -1] <> 0)
               and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))  then
               begin
               end
               else
               begin
               // ----- ADD 2011/09/21 -----------------------------------<<<<<
               gpxMAHNB01013B_CheckDetailAction(logicalRowIndex - 1, HNsGrid1.LogicalRow -1,2);
               end;// ADD 2011/09/21

             end;

             //グリッド最上位行キーダウンイベント
             if (FullModel.ReadOnly = False) then
             begin
                FullModel.SetFocus;
             end
             else if (CustomerCode.ReadOnly = False) then
             begin
               CustomerCode.SetFocus;
             end
             else if (SalesEmployeeCd.ReadOnly = False) then
             begin
               SalesEmployeeCd.SetFocus;
             end;
           end
           else
           begin
             st := True;

             //>>>2010/08/06
//             xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other);
             // --- ADD 2011/10/31 ---------->>>>>
             if((i_InputType=2) Or (i_InputType=3)) then
             begin
                  xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other);
             end;
             // --- ADD 2011/10/31 ----------<<<<<
             if (RCHNB01003UADM.SearchPartsModeState[logicalRowIndex-2] = ctSearchPartsModeState_BLCodeSearch) then begin
               //-------------------------------------------
               // BLコード検索行
               //-------------------------------------------
               if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowIndex - 2] = false) then begin
                 // 前行BLコード
                 xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex-1);
               end else begin
                 // 前行品名
                 xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
               end;
             end else begin
               //-------------------------------------------
               // 品番検索行、検索無し行
               //-------------------------------------------
               if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex - 2] = false) then begin
                 // 前行品番
                 xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
               end else begin
                 // 前行品名
                 xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
               end;
             end;
             //<<<2010/08/09
           end;
        end
        //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
        else if vk_Left_Check then
        begin
           //明細一行目
           if (logicalRowIndex = 1) then
           begin
             st := True;
           //end;
           end
           else
           begin
             //>>>2010/08/09
//             if (xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other)) then
//             begin
//               xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
//             end;
             // --- ADD 2011/10/31 ---------->>>>>
             if(i_InputType=2) then
             begin
                  if (xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other)) then
                  begin
                     xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                  end;
             end
             else
             begin
                if (i_InputType=3) then
                begin
                  if (HNsGrid1.ReadOnly[ctCol_UOEResvdSectionNm, (logicalRowIndex - 1) * 2 + 1] = False) then
                  begin
                      xGotoCell(ctCol_UOEResvdSectionNm,ctRow_UOEResvdSectionNm, logicalRowIndex-1);
                  end
                  else
                  begin
                      xGotoCell(ctCol_AcceptAnOrderCntForOrder,ctRow_AcceptAnOrderCntForOrder, logicalRowIndex-1);
                  end;
                end;
             end;
             // --- ADD 2011/10/31 ----------<<<<<
             if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, (logicalRowIndex - 1) * 2 + 1] = False) then begin
               xGotoCell(ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay, logicalRowIndex-1);  // 前行売単価
             end else if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, (logicalRowIndex-1) * 2 + 1] = False) then begin
               xGotoCell(ctCol_ListPriceDisplay, ctRow_ListPriceDisplay, logicalRowIndex-1);  // 前行標準価格
             end else begin
               xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex-1);  // 品名
             end;
             //<<<2010/08/09
             st := True;
           end;
        end;
      end
      //品名
      else if ((colIndex = ctCol_GoodsName) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
      begin
        //if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
        if vk_Right_Check then
        begin
           st := True;
        end
        //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
          else if vk_Down_Check then   // ADD 2010/07/0
        begin
           // 最終行,フッタ部
            if logicalRowIndex = HNsGrid1.LogicalRowCount - 1 then
            begin
              st := True;
            end else
            begin
              // 最終行以外,次行品番
              //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
              xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex);
              st := True;
            end;
        end
        //else if (GetKeyState(VK_UP) and $8000 = $8000) then
        else if vk_Up_Check then
        begin
           //明細一行目
           if (logicalRowIndex = 1) then
           begin
             st := True;
             //gpxMAHNB01013B_CheckDetailAction(logicalRowIndex - 1, logicalRowIndex -1 ,1);
             // 通常入力の場合、粗利チェックを行う。
             if (i_InputType = 0) then
             begin
               gpxMAHNB01013B_CheckDetailAction(logicalRowIndex - 1, HNsGrid1.LogicalRow -1 ,1);
               // ----- ADD 2011/09/21 ----------------------------------->>>>>
               if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
               and (RCHNB01003UADM.SalesSlipDtlNumSrc[logicalRowIndex -1] <> 0)
               and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))  then
               begin
               end
               else
               begin
               // ----- ADD 2011/09/21 -----------------------------------<<<<<
               gpxMAHNB01013B_CheckDetailAction(logicalRowIndex - 1, HNsGrid1.LogicalRow -1,2);
               end;// ADD 2011/09/21
             end;

             //グリッド最上位行キーダウンイベント
             if (FullModel.ReadOnly = False) then
             begin
                FullModel.SetFocus;
             end
             else if (CustomerCode.ReadOnly = False) then
             begin
               CustomerCode.SetFocus;
             end
             else if (SalesEmployeeCd.ReadOnly = False) then
             begin
               SalesEmployeeCd.SetFocus;
             end;
           end
           else
           begin
             // 明細一行目以外,上行品番
              xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other);
              st := True;
           end;
        end
        //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
        else if vk_Left_Check then
        begin
           //明細一行目
           //HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex);
           xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex);
           st := True;
        end;
      end
      //品番
      else if ((colIndex = ctCol_GoodsNo) and (rowIndex > 1) and (rowIndex mod 2 = 1)) then
      begin
        //if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
        if vk_Right_Check then
        begin
           //HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex);
           xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex);
           st := True;
        end
        //else if (GetKeyState(VK_DOWN) and $8000 = $8000) then
          else if vk_Down_Check then   // ADD 2010/07/0
        begin
           // 移動無し
           st := True;
        end
        //else if (GetKeyState(VK_UP) and $8000 = $8000) then
        else if vk_Up_Check then
        begin
           //明細一行目
           if (logicalRowIndex = 1) then
           begin
             // 移動無し
             st := True;

             // 通常入力の場合、粗利チェックを行う。
             if (i_InputType = 0) then
             begin
               gpxMAHNB01013B_CheckDetailAction(logicalRowIndex - 1, HNsGrid1.LogicalRow -1 ,1);
               // ----- ADD 2011/09/21 ----------------------------------->>>>>
               if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
               and (RCHNB01003UADM.SalesSlipDtlNumSrc[logicalRowIndex - 1] <> 0)
               and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))  then
               begin
               end
               else
               begin
               // ----- ADD 2011/09/21 -----------------------------------<<<<<
               gpxMAHNB01013B_CheckDetailAction(logicalRowIndex - 1, HNsGrid1.LogicalRow -1,2);
               end;// ADD 2011/09/21
             end;


             xSetHeaderControl;
           end
           else
           begin
             // 明細一行目以外,上行品番
              st := True;
              //>>>2010/08/09
              //xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other);
              xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex);
              //<<<2010/08/09
           end;
        end
        //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
        else if vk_Left_Check then
        begin
           //明細一行目
           //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
           xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex);
           st := True;
        end;
      end;
    end
    //BLコード検索
    else if (i_searchPartsMode = ctBLCodeSearch) then
    begin
      //BLコード
      if ((colIndex = ctCol_BLGoodsCode) and (rowIndex > 1) and (rowIndex mod 2 = 0)) then
      begin
        //if (GetKeyState(VK_RIGHT) and $8000 = $8000) then
        if vk_Right_Check then
        begin
           st := True;
        end
        else if vk_Down_Check then
        begin
           st := True;
        end
        //else if (GetKeyState(VK_UP) and $8000 = $8000) then
        else if vk_Up_Check then
        begin
           //明細一行目
           if (logicalRowIndex = 1) then
           begin
             st := True;

             //グリッド最上位行キーダウンイベント
             if (FullModel.ReadOnly = False) then
             begin
                FullModel.SetFocus;
             end
             else if (CustomerCode.ReadOnly = False) then
             begin
               CustomerCode.SetFocus;
             end
             else if (SalesEmployeeCd.ReadOnly = False) then
             begin
               SalesEmployeeCd.SetFocus;
             end;

           end
           else
           begin
             //>>>2010/08/09
//             st := True;
//             // 先頭行以外,前行BLコード
//             if (xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other)) then
//             begin
//               //HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex-1);
//               xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex-1);
//             end;
            // --- ADD 2011/10/31 ---------->>>>>
            if(i_InputType=2) then
             begin
                  if (xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other)) then
                  begin
                     xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                  end;
             end
             else
             begin
                if (i_InputType=3) then
                begin
                     xGotoCell(ctCol_BoCode,ctRow_BoCode, logicalRowIndex-1);
                end;
             end;
             // --- ADD 2011/10/31 ----------<<<<<
             st := True;
             if (RCHNB01003UADM.SearchPartsModeState[logicalRowIndex-2] = ctSearchPartsModeState_BLCodeSearch) then begin
               //-------------------------------------------
               // BLコード検索行
               //-------------------------------------------
               if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowIndex - 2] = false) then begin
                 // 前行BLコード
                 xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex-1);
               end else begin
                 // 前行品名
                 xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
               end;
             end else begin
               //-------------------------------------------
               // 品番検索行、検索無し行
               //-------------------------------------------
               if (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex - 2] = false) then begin
                 // 前行品番
                 xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
               end else begin
                 // 前行品名
                 xGotoCell(ctCol_GoodsName,ctRow_GoodsName, logicalRowIndex-1);
               end;
             end;
             //<<<2010/08/09

           end;
        end
        //else if (GetKeyState(VK_LEFT) and $8000 = $8000) then
        else if vk_Left_Check then
        begin
           //明細一行目
           if (logicalRowIndex = 1) then
           begin
             st := True;
           end
           else
           begin
//             if (xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other)) then
//             begin
//               //HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex-1);
//               xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, logicalRowIndex-1);
//             end;
             // --- ADD 2011/10/31 ---------->>>>>
             if(i_InputType=2) then
             begin
                  if (xMoveRowCellAdJust(logicalRowIndex-1, actionType_Up, keyType_other)) then
                  begin
                     xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, logicalRowIndex-1);
                  end;
             end
             else
             begin
                if (i_InputType=3) then
                begin
                  if (HNsGrid1.ReadOnly[ctCol_UOEResvdSectionNm, (logicalRowIndex - 1) * 2 + 1] = False) then
                  begin
                      xGotoCell(ctCol_UOEResvdSectionNm,ctRow_UOEResvdSectionNm, logicalRowIndex-1);
                  end
                  else
                  begin
                      xGotoCell(ctCol_AcceptAnOrderCntForOrder,ctRow_AcceptAnOrderCntForOrder, logicalRowIndex-1);
                  end;
                end;
             end;
             // --- ADD 2011/10/31 ----------<<<<<
             if (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, (logicalRowIndex - 1) * 2 + 1] = False) then begin
               xGotoCell(ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay, logicalRowIndex-1);  // 前行売単価
             end else if (HNsGrid1.ReadOnly[ctCol_ListPriceDisplay, (logicalRowIndex-1) * 2 + 1] = False) then begin
               xGotoCell(ctCol_ListPriceDisplay, ctRow_ListPriceDisplay, logicalRowIndex-1);  // 前行標準価格
             end else begin
               xGotoCell(ctCol_GoodsName, ctRow_GoodsName, logicalRowIndex-1);  // 品名
             end;

             st := True;
           end;
        end;

      end;
    end;
  end;

  HNsGrid1.ShowInplaceEdit; //ADD 2010/07/01

// --- UPD 2010/05/31 ----------<<<<<
// --- UPD 2010/07/01 ----------<<<<<

   Result := st;

end;

// --- UPD 2010/06/02 ---------->>>>>

// *************************************************************************
// 行移動キーセルフォーカス調整処理
// *************************************************************************
function TForm4.xMoveRowCellAdJust(afterLogicalRow : Integer ; actionType : Integer ; keyType :Integer ): Boolean;
var
   st : Boolean;
begin
   st := True;

   //有効行→無効行(入力切替、仕入、発注)
   //有効行(行値引き)→無効行／無効行
   //有効行(注釈)→無効行／無効行
   if (gpxMAHNB01013B_GridJoinCheck(0, afterLogicalRow -1, -1, 9) = 0)  then
   begin
      //品番検索
      if (i_searchPartsMode = ctGoodsNoSearch) then
      begin
        if (keyType = keyType_other) then
        begin
          if (HNsGrid1.ReadOnly[ctCol_GoodsNo,afterLogicalRow * 2 + 1] = False) then
          begin
            //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, afterLogicalRow);// DEL 2010/06/26
            //HNsGrid1.FocusCell(ctCol_GoodsNo - 1, afterLogicalRow * 2 + 1);// ADD 2010/06/26  // DEL 2010/07/01
            xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, afterLogicalRow); // ADD 2010/07/01
          end
          else
          begin
            //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, afterLogicalRow);  // DEL 2010/07/01
            xGotoCell(ctCol_GoodsName,ctRow_GoodsName, afterLogicalRow);// ADD 2010/07/01
          end;
        end
        else
        begin
          if (HNsGrid1.ReadOnly[ctCol_GoodsNo,afterLogicalRow * 2 + 1] = False) then
          begin
             HNsGrid1.FocusCell(ctCol_GoodsNo - 1, afterLogicalRow * 2 + 1);
          end
          else
          begin
             HNsGrid1.FocusCell(ctCol_GoodsName - 1, afterLogicalRow * 2);
          end;
        end;

      end
      //BLコード検索
      else if (i_searchPartsMode = ctBLCodeSearch) then
      begin
        if (keyType = keyType_other) then
        begin
          if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode,afterLogicalRow * 2] = False) then
          begin
            //HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, afterLogicalRow);  // DEL 2010/07/01
            xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, afterLogicalRow); // ADD 2010/07/01
          end
          else
          begin
            //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, afterLogicalRow);  // DEL 2010/07/01
            xGotoCell(ctCol_GoodsName,ctRow_GoodsName, afterLogicalRow); // ADD 2010/07/01
          end;
        end
        else
        begin
          if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode,afterLogicalRow * 2] = False) then
          begin
            HNsGrid1.FocusCell(ctCol_BLGoodsCode - 1, afterLogicalRow * 2);
          end
          else
          begin
            HNsGrid1.FocusCell(ctCol_GoodsName - 1, afterLogicalRow * 2);
          end;
        end;
      end;

      st := False;
   end
   //無効行→有効行(入力切替)
   //無効行→有効行(仕入)
   //無効行→有効行(発注)
   //無効行／有効行→有効行(行値引き)
   //無効行／有効行→有効行(注釈)
   else
   begin
      //行値引き
      if (RCHNB01003UADM.EditStatus[afterLogicalRow - 1] = ctEDITSTATUS_RowDiscount) then
      begin
        if (keyType = keyType_other) then
        begin
           //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, afterLogicalRow); // DEL 2010/07/01
           xGotoCell(ctCol_GoodsName,ctRow_GoodsName, afterLogicalRow);  // ADD 2010/07/01
        end
        else
        begin
           HNsGrid1.FocusCell(ctCol_GoodsName - 1, afterLogicalRow * 2);  // 次行品名
        end;

        st := False;
      end
      //注釈
      else if (RCHNB01003UADM.EditStatus[afterLogicalRow - 1] = ctEDITSTATUS_Annotation) then
      begin
         //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, afterLogicalRow);  // DEL 2010/07/01
         if (keyType = keyType_other) then
         begin
            xGotoCell(ctCol_GoodsName,ctRow_GoodsName, afterLogicalRow); // ADD 2010/07/01
         end
         else
         begin
            HNsGrid1.FocusCell(ctCol_GoodsName - 1, afterLogicalRow * 2);  // 次行品名
         end;

         st := False;
      end
      else
      begin

        if (actionType = actionType_Up) then
        begin
           if (gpxMAHNB01013B_GridJoinCheck(0, afterLogicalRow, -1, 9) = 1) then
           begin
               Result := true;
               Exit;
           end;
        end
        else
        begin
           if (gpxMAHNB01013B_GridJoinCheck(0, afterLogicalRow - 2, -1, 9) = 1) then
           begin
               Result := true;
               Exit;
           end;
        end;

         //入力切替
         if (i_InputType = 1) then
         begin
            //前行へ移動
            if (actionType = actionType_Up) then
            begin
              //前行得意先注文番号
              if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, afterLogicalRow * 2 + 1] = False) then
              begin
                 //HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, afterLogicalRow); // DEL 2010/07/01
                 xGotoCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, afterLogicalRow);  // ADD 2010/07/01
              end
              //前行明細備考
              else if (HNsGrid1.ReadOnly[ctCol_DtlNote, afterLogicalRow * 2] = False) then
              begin
                 //HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, afterLogicalRow);  // DEL 2010/07/01
                 xGotoCell(ctCol_DtlNote,ctRow_DtlNote, afterLogicalRow); // ADD 2010/07/01
              end
              //前行納品完了予定日
              else
              begin
                //HNsGrid1.LogicalFocusCell(ctCol_DeliGdsCmpltDueDate,ctRow_DeliGdsCmpltDueDate, afterLogicalRow);  // DEL 2010/07/01
                xGotoCell(ctCol_DeliGdsCmpltDueDate,ctRow_DeliGdsCmpltDueDate, afterLogicalRow); // ADD 2010/07/01
              end;
            end
            //次行へ移動
            else
            begin
              //前行明細備考
              if (HNsGrid1.ReadOnly[ctCol_DtlNote, afterLogicalRow * 2] = False) then
              begin
                 //HNsGrid1.LogicalFocusCell(ctCol_DtlNote,ctRow_DtlNote, afterLogicalRow);// DEL 2010/07/01
                 xGotoCell(ctCol_DtlNote,ctRow_DtlNote, afterLogicalRow); // ADD 2010/07/01
              end
              //前行得意先注文番号
              else if (HNsGrid1.ReadOnly[ctCol_PartySlipNumDtl, afterLogicalRow * 2 + 1] = False) then
              begin
                //HNsGrid1.LogicalFocusCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, afterLogicalRow);  // DEL 2010/07/01
                xGotoCell(ctCol_PartySlipNumDtl,ctRow_PartySlipNumDtl, afterLogicalRow); // ADD 2010/07/01
              end
              //前行納品完了予定日
              else
              begin
                //HNsGrid1.LogicalFocusCell(ctCol_DeliGdsCmpltDueDate,ctRow_DeliGdsCmpltDueDate, afterLogicalRow); // DEL 2010/07/01
                xGotoCell(ctCol_DeliGdsCmpltDueDate,ctRow_DeliGdsCmpltDueDate, afterLogicalRow); // ADD 2010/07/01
              end;

            end;

            st := False;

         end
         //仕入
         else if (i_InputType = 2) then
         begin
            //前行へ移動
            if (actionType = actionType_Up) then
            begin
              //前行仕入伝票番号
              //HNsGrid1.LogicalFocusCell(ctCol_PartySalesSlipNum,ctRow_PartySalesSlipNum, afterLogicalRow); // DEL 2010/07/01
              xGotoCell(ctCol_PartySalesSlipNum,ctRow_PartySalesSlipNum, afterLogicalRow); // ADD 2010/07/01
            end
            //次行へ移動
            else
            begin
              //前行仕入先
              //HNsGrid1.LogicalFocusCell(ctCol_SupplierCdForStock,ctRow_SupplierCdForStock, afterLogicalRow); // DEL 2010/07/01
              xGotoCell(ctCol_SupplierCdForStock,ctRow_SupplierCdForStock, afterLogicalRow); // ADD 2010/07/01
            end;

            st := False;

         end
         //発注
         else if (i_InputType = 3) then
         begin

           //HNsGrid1.LogicalFocusCell(ctCol_BoCode,ctRow_BoCode, afterLogicalRow); // DEL 2010/07/01
           xGotoCell(ctCol_BoCode,ctRow_BoCode, afterLogicalRow);  // ADD 2010/07/01

           st := False;
         end
         else
         begin

            //品番検索
            if(i_searchPartsMode = ctGoodsNoSearch) then
            begin
              if (keyType = keyType_other) then
              begin
                if (HNsGrid1.ReadOnly[ctCol_GoodsNo,afterLogicalRow * 2 + 1] = False) then
                begin

                  //HNsGrid1.LogicalFocusCell(ctCol_GoodsNo,ctRow_GoodsNo, afterLogicalRow);// DEL 2010/07/01
                  xGotoCell(ctCol_GoodsNo,ctRow_GoodsNo, afterLogicalRow); // ADD 2010/07/01
                end
                else
                begin
                  //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, afterLogicalRow); // DEL 2010/07/01
                  xGotoCell(ctCol_GoodsName,ctRow_GoodsName, afterLogicalRow);  // ADD 2010/07/01
                end;
              end
              else
              begin
                if (HNsGrid1.ReadOnly[ctCol_GoodsNo,afterLogicalRow * 2 + 1] = False) then
                begin
                   HNsGrid1.FocusCell(ctCol_GoodsNo - 1, afterLogicalRow * 2 + 1);
                end
                else
                begin
                   HNsGrid1.FocusCell(ctCol_GoodsName - 1, afterLogicalRow * 2);
                end;
              end;

            end
            //BLコード検索
            else if (i_searchPartsMode = ctBLCodeSearch) then
            begin
              if (keyType = keyType_other) then
              begin
                if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode,afterLogicalRow * 2] = False) then
                begin
                  //HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, afterLogicalRow); // DEL 2010/07/01
                  xGotoCell(ctCol_BLGoodsCode,ctRow_BLGoodsCode, afterLogicalRow); // ADD 2010/07/01
                end
                else
                begin
                  //HNsGrid1.LogicalFocusCell(ctCol_GoodsName,ctRow_GoodsName, afterLogicalRow); // DEL 2010/07/01
                  xGotoCell(ctCol_GoodsName,ctRow_GoodsName, afterLogicalRow);  // ADD 2010/07/01
                end;
              end
              else
              begin
                if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode,afterLogicalRow * 2] = False) then
                begin
                  HNsGrid1.FocusCell(ctCol_BLGoodsCode - 1, afterLogicalRow * 2);
                end
                else
                begin
                  HNsGrid1.FocusCell(ctCol_GoodsName - 1, afterLogicalRow * 2);
                end;
              end;
            end;

            st := False;
         end;

      end;

   end;

   Result := st;


end;

// --- UPD 2010/06/02 ----------<<<<<

// *************************************************************************
// 検索結果GridにセッルAlignment取得
// *************************************************************************
procedure TForm4.HNsGrid1GetAlignment(Sender: TObject; ARow, ACol: Integer;
  var HAlign: TAlignment; var VAlign: TVAlignment);
begin
  //売単価
  if ((ACol = ctCol_SalesUnPrcDisplay) and (ARow > 1)) then
  begin
    HAlign := taRightJustify;
  end;

  //売上金額
  if ((ACol = ctCol_SalesMoneyDisplay) and (ARow > 1)) then
  begin
     HAlign := taRightJustify;
  end;

  //倉庫コード
  if ((ACol = ctCol_WarehouseCode) and (ARow > 1) and (ARow  mod 2 = 0)) then
  begin
     HAlign := taRightJustify;
  end;

  //原価率
  if ((ACol = ctCol_CostRate) and (ARow > 1)) then
  begin
     HAlign := taRightJustify;
  end;

  //№
  if ((ACol = ctCol_RowNo) and (ARow > 1)) then
  begin
     HAlign := taRightJustify;
  end;

  //OP
  if ((ACol = ctCol_OpenPriceDivDisplay) and (ARow > 1) and (ARow  mod 2 = 1)) then
  begin
     HAlign := taCenter;
  end;

  //純優区分
  if ((ACol = ctCol_GoodsKindCode) and (ARow > 1) and (ARow  mod 2 = 1)) then
  begin
     HAlign := taCenter;
     VAlign := vtaCenter;

  end;

  //ＢＯ区分
  if ((ACol = ctCol_BoCode) and (ARow > 1) and (ARow  mod 2 = 0)) then
  begin
     HAlign := taCenter;
     VAlign := vtaCenter;
  end;

  //現在庫数
  if ((ACol = ctCol_SupplierStockDisplay) and (ARow > 1) and (ARow  mod 2 = 1)) then
  begin
     HAlign := taRightJustify;
  end;

  //BLコード
  if ((ACol = ctCol_BLGoodsCode) and (ARow > 1) and (ARow  mod 2 = 0)) then
  begin
     HAlign := taRightJustify;
  end;

  //メーカー
  if ((ACol = ctCol_GoodsMakerCd) and (ARow > 1) and (ARow  mod 2 = 1)) then
  begin
     HAlign := taRightJustify;
  end;

  // 仕入先
  if ((ACol = ctCol_SupplierCd) and (ARow > 1) and (ARow  mod 2 = 1)) then
  begin
     HAlign := taRightJustify;
  end;

  // 受注数
  if ((ACol = ctCol_AcceptAnOrderCntDisplay) and (ARow > 1) and (ARow  mod 2 = 0)) then
  begin
     HAlign := taRightJustify;
  end;

  // 出荷数
  if ((ACol = ctCol_ShipmentCntDisplay) and (ARow > 1) and (ARow  mod 2 = 1)) then
  begin
     HAlign := taRightJustify;
  end;

  // 販売区分
  if ((ACol = ctCol_SalesCode) and (ARow > 1) and (ARow  mod 2 = 0)) then
  begin
     HAlign := taRightJustify;
  end;

  // 定価
  if ((ACol = ctCol_ListPriceDisplay) and (ARow > 1) and (ARow  mod 2 = 1)) then
  begin
     HAlign := taRightJustify;
  end;

  // 発注先
  if ((ACol = ctCol_SupplierCdForOrder) and (ARow > 1) and (ARow  mod 2 = 0)) then
  begin
     HAlign := taRightJustify;
  end;

  // 仕入先
  if ((ACol = ctCol_SupplierCdForStock) and (ARow > 1) and (ARow  mod 2 = 0)) then
  begin
     HAlign := taRightJustify;
  end;

  // 発注数
  if ((ACol = ctCol_AcceptAnOrderCntForOrder) and (ARow > 1) and (ARow  mod 2 = 0)) then
  begin
     HAlign := taRightJustify;
  end;

end;

// *************************************************************************
// 編集タイプをセット用のイベント(入力形式の設置)
// *************************************************************************
procedure TForm4.HNsGrid1GetDisplText(Sender: TObject; ACol, ARow: Integer;
  var Value: string);
var
    editStatus : Integer;
    tempInt : Integer;  //ADD 呉元嘯 2021/05/20 BLINCIDENT-2980 小数点有で運用している場合、現在庫数の対応
begin
    editStatus := RCHNB01003UADM.EditStatus[ARow div 2 - 1];

     //売上金額
     if ((ACol = ctCol_SalesMoneyDisplay) and (Value <> '0')
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 <> 0)) then
     begin
         //Value := Format('%.n', [StrToIntDef(Value, 0) + 0.00]);
         Value := FormatFloat('#,##0',StrToFloatDef(Value, 0));
         if (Value = '0') then
         begin
              Value :='';
         end;
     end;

     //原価単価
     if ((ACol = ctCol_SalesUnitCost) and (Value <> '0')
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 = 0)) then
     begin
         Value := FormatFloat('#,##0.00',StrToFloatDef(Value, 0));
         if (Value = '0.00') then
         begin
              Value :='';
         end;
     end;

     //売単価
     if ((ACol = ctCol_SalesUnPrcDisplay) and (Value <> '0')
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 <> 0)) then
     begin
         // UPD 2010/08/13 ---->>>>
         if (smallPointFlg) then
         begin
           Value := FormatFloat('#,##0.00',StrToFloatDef(Value, 0));
           if (Value = '0.00') then
           begin
                Value :='';
           end;
         end
         else
         begin
         // UPD 2010/09/10 -- >>>>
//           Value := FormatFloat('#,##0',StrToFloatDef(Value, 0));
//           if (Value = '0') then
//           begin
//                Value :='';
//           end;
           Value := FormatFloat('#,##0   ',StrToFloatDef(Value, 0));
           if ((Value = '0   ') or (Value = '0')) then
           begin
                Value :='';
           end;
           // UPD 2010/09/10 -- <<<<
         end;
         // UPD 2010/08/13 ----<<<<
     end;

     //定価
     if ((ACol = ctCol_ListPriceDisplay) and (Value <> '0')
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 <> 0)) then
     begin
         Value := FormatFloat('#,##0',StrToIntDef(Value, 0));
         if (Value = '0') then
         begin
              Value :='';
         end;
     end;

     //現在庫数
     if ((ACol = ctCol_SupplierStockDisplay) and (Value <> '0')
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 <> 0)) then
     begin
         // ---UPD 呉元嘯 2021/05/20 BLINCIDENT-2980 小数点有で運用している場合、現在庫数の対応 ------>>>>>
         //Value := FormatFloat('#,##0',StrToIntDef(Value, 0));
         //if (Value = '0') then
         //begin
         //     Value :='';
         //end;
         if ((Value = '0') or (Value = '0.00')) then
         begin
              // 現在庫数がゼロの場合、設定しない
              Value :='';
         end
         else
         begin
            // 現在庫数が小数点有の場合、小数点の表示を可能とする。
            if (not smallPointFlg) then
            begin
              tempInt := Trunc(StrToFloatDef(Value,0) * 100);
              if ((tempInt mod 100) <> 0) then
              begin
                smallPointFlg := True;
              end;
            end;
            if (smallPointFlg) then
            begin
              // 小数点の表示可能の場合
              Value := FormatFloat('#,##0.00',StrToFloatDef(Value, 0));
              if (Value = '0.00') then
              begin
                   Value :='';
              end;
            end
            else
            begin
              // 小数点の表示なしの場合
         Value := FormatFloat('#,##0',StrToIntDef(Value, 0));
         if (Value = '0') then
         begin
              Value :='';
         end;
     end;
         end;
         // ---ADD 呉元嘯 2021/05/20 BLINCIDENT-2980 小数点有で運用している場合、現在庫数の対応 ------<<<<<
     end;

     //出荷数
     if ((ACol = ctCol_ShipmentCntDisplay)
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 <> 0)) then
     begin
         if ((Value = '0') or (Value = '')) then
         begin
           Value :='';
         end
         else
         begin
           // UPD 2010/08/13 ---->>>>
           if (smallPointFlg) then
           begin
             Value := FormatFloat('##0.00',StrToFloatDef(Value, 0));
             if (Value = '0.00') then
             begin
                  Value :='';
             end;
           end
           else
           begin
             Value := FormatFloat('##0',StrToFloatDef(Value, 0));
             if (Value = '0') then
             begin
                  Value :='';
             end;
           end;
         end;
         // UPD 2010/08/13 ----<<<<
     end;

     //受注数
     if ((ACol = ctCol_AcceptAnOrderCntDisplay)
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 = 0)) then
     begin
         if ((Value = '0') or (Value = '')) then
         begin
           Value :='';
         end
         else
         begin
           // ADD 2010/08/13 --->>>>
           if (smallPointFlg) then
           begin
             Value := FormatFloat('##0.00',StrToFloatDef(Value, 0));
             if (Value = '0.00') then
             begin
               Value :='';
             end;
           end
           else
           begin
             Value := FormatFloat('##0',StrToFloatDef(Value, 0));
             if (Value = '0') then
             begin
               Value :='';
             end;
           end;
         end;
         // ADD 2010/08/13 ---<<<<
     end;

     //原価率
     if ((ACol = ctCol_CostRate) and (Value <> '0')
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 = 0)) then
     begin
         Value := FormatFloat('##0.00',StrToFloatDef(Value, 0));
         if (Value = '0.00') then
         begin
              Value :='';
         end;
     end;

     //売価率
     if ((ACol = ctCol_SalesRate) and (Value <> '0')
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 <> 0)) then
     begin
         // ADD 2010/08/13 --->>>>
         if (smallPointFlg) then
         begin
           Value := FormatFloat('##0.00',StrToFloatDef(Value, 0));
           if (Value = '0.00') then
           begin
                Value :='';
           end;
         end
         else
         begin
         // UPD 2010/09/10 -- >>>>
//           Value := FormatFloat('##0',StrToFloatDef(Value, 0));
//           if (Value = '0') then
//           begin
//                Value :='';
//           end;
           Value := FormatFloat('##0   ',StrToFloatDef(Value, 0));
           if ((Value = '0   ') or (Value = '0')) then
           begin
                Value :='';
           end;
           // UPD 2010/09/10 -- <<<<
         end;
         // ADD 2010/08/13 ---<<<<
     end;

     //メーカー
     if ((ACol = ctCol_GoodsMakerCd) and (Value <> '0')
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 <> 0)) then
     begin

         if ((editStatus <> ctEDITSTATUS_RowDiscount) or (editStatus <> ctEDITSTATUS_Annotation)) then
         begin
            if ((salesTtlSt.MakerInpDiv = 1) AND (Value = '')) then
            begin
               Value := IntToStr(RCHNB01003UADM.GoodsMakerCd[ARow div 2 - 1]);
            end;
         end;

         Value := FormatFloat('#0000',StrToIntDef(Value, 0));
         if (Value = '0000') then
         begin
              Value :='';
         end;
     end;

     //仕入先
     if ((ACol = ctCol_SupplierCd) and (Value <> '0')
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 <> 0)) then
     begin

       if ((salesTtlSt.SupplierInpDiv = 1) AND (Value = '')) then
       begin
          Value := IntToStr(RCHNB01003UADM.SupplierCd[ARow div 2 - 1]);
       end;

       Value := FormatFloat('#000000',StrToIntDef(Value, 0));
       if (Value = '000000') then
       begin
            Value :='';
       end;
     end;

     if (ACol = ctCol_SupplierCd) and (Value = '0') and ((ARow > 1) and (ARow mod 2 <> 0))then
     begin
       Value := '';
     end;

     if ((ACol = ctCol_SupplierCdForStock) and (Value <> '0')
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 = 0)) then
     begin
         Value := FormatFloat('00000#',StrToIntDef(Value, 0));
         if (Value = '000000') then
         begin
              Value :='';
         end;
     end;

     //倉庫コード
     if ((ACol = ctCol_WarehouseCode) and (Value <> '0')
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 = 0)) then
     begin
       Value := FormatFloat('#0000',StrToIntDef(Trim(Value), 0));
       if (Value = '0000') then
       begin
            Value :='';
       end;
     end;


     //BLコード
     if ((ACol = ctCol_BLGoodsCode) and (Value <> '0')
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 = 0)) then
     begin
         if ((salesTtlSt.BLGoodsCdInpDiv = 1) AND (Value = '')) then
         begin
            Value := IntToStr(RCHNB01003UADM.BLGoodsCode[ARow div 2 - 1]);
         end;

         Value := FormatFloat('#00000',StrToIntDef(Value, 0));
         if (Value = '00000') then
         begin
              Value :='';
         end;
     end;

     //>>>2010/09/27
//     if (ACol = ctCol_BLGoodsCode) and (Value = '0') then
//     begin
//       Value := '';
//     end;

     if (ACol = ctCol_BLGoodsCode) and (ARow mod 2 = 0) and (Value = '0') then
     begin
       Value := '';
     end;
     //<<<2010/09/27

     //発注先
     if ((ACol = ctCol_SupplierCdForOrder) and (Value <> '0')
     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 = 0)) then
     begin
         Value := FormatFloat('00000#',StrToIntDef(Value, 0));
         if (Value = '000000') then
         begin
              Value :='';
         end;
     end;

     // 納品区分名称
     if ((ACol = ctCol_DeliveredGoodsDivNm) and (Value <> '0'))
     and ((ARow > 1) and (ARow mod 2 = 0)) then
     begin
        Value := RCHNB01003UADM.DeliveredGoodsDivNm[ARow div 2 - 1]
     end;

     //Ｈ納品区分名称
     if ((ACol = ctCol_FollowDeliGoodsDivNm) and (Value <> '0'))
     and ((ARow > 1) and (ARow mod 2 = 0)) then
     begin
        Value := RCHNB01003UADM.FollowDeliGoodsDivNm[ARow div 2 - 1]
     end;

     // 指定拠点名称
     if ((ACol = ctCol_UOEResvdSectionNm) and (Value <> '0'))
     and ((ARow > 1) and (ARow mod 2 = 1)) then
     begin
        Value := RCHNB01003UADM.UOEResvdSectionNm[ARow div 2 - 1]
     end;

     //>>>2010/05/30
     //RC区分
     if ((ACol = ctCol_RecycleDivNm) and (Value <> '0'))
     and ((ARow > 1) and (ARow mod 2 = 0)) then
     begin
        Value := RCHNB01003UADM.RecycleDivNm[ARow div 2 - 1]
     // ---ADD 2011/07/28----------->>>>>
     end
     else if ((ACol = ctCol_RecycleDivNm) and (Value = '0'))
     and ((ARow > 1) and (ARow mod 2 = 0)) then
     begin
       Value := '';
    // ---ADD 2011/07/28-----------<<<<<
     end;
     //<<<2010/05/30

     //販売区分
     if (ACol = ctCol_SalesCode) and (Value = '0') AND
       ((ARow > 1) and (ARow mod 2 = 0)) then
     begin
       Value := '';
     end;

     // DEL 譚洪 K2014/01/22 --- >>>
//     if ((ACol = ctCol_SalesCode) and (Value <> '0')
//     and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 = 0)) then
//     begin
//         Value := FormatFloat('000#',StrToIntDef(Value, 0));
//         if (Value = '0000') then
//         begin
//              Value :='';
//         end;
//     end;
     // DEL 譚洪 K2014/01/22 --- <<<
     // ADD 譚洪 K2014/01/22 --- >>>
     if (optNoBuTo <> 1) then
     begin
       if ((ACol = ctCol_SalesCode) and (Value <> '0')
       and (Pos(',',value) = 0)) and ((ARow > 1) and (ARow mod 2 = 0)) then
       begin
           Value := FormatFloat('000#',StrToIntDef(Value, 0));
           if (Value = '0000') then
           begin
                Value :='';
           end;
       end;
     end;
     // ADD 譚洪 K2014/01/22 --- <<<

//>>>2011/03/16
    // 回答納期
    if ((ACol = ctCol_DeliGdsCmpltDueDate) and (Value <> '') and
        (ARow > 1) and (ARow mod 2 = 1)) then begin
      if (Length(Trim(Value)) > 10) then begin
        Value := Copy(Value, 1, 10);
      end;
    end;
//<<<2011/03/16

end;

// *************************************************************************
// 編集タイプをセット用のイベント(入力形式の設置)
// *************************************************************************
procedure TForm4.HNsGrid1GetEditorType(Sender: TObject; ACol, ARow: Integer;
  var AEditor: TEditorType);
var maxLength : Integer;
begin
  AEditor := edNormal;
  HNsGrid1.MaxEditLength := 0;

  with HNsGrid1 do
  begin
    if (ARow mod 2) = 0 then
    begin
      case ACol of
        1: //BLコード
          begin
            AEditor := edPositiveNumeric;
            MaxEditLength := 5;

          end;
        2: //品名
          begin
            AEditor := edNormal;
            MaxEditLength := 40;

          end;
        6://受注数
          begin
            // UPD 2010/08/13 ---->>>>
            if (smallPointFlg) then
            begin
              AEditor := edFloat;
              gpxMAHNB01013B_GetSalesSlipInputConstructionData(maxLength,2);
              MaxEditLength := maxLength + 3;
            end
            else
            begin
              AEditor := edNumeric;
              gpxMAHNB01013B_GetSalesSlipInputConstructionData(maxLength,2);
            end;
            // UPD 2010/08/13 ----<<<<
          end;
        7://販売区分
          begin
            AEditor := edPositiveNumeric;
            //MaxEditLength := 4;   // DEL 譚洪 K2014/01/22
            // ADD 譚洪 K2014/01/22 --- >>>
            // 登戸個別専門用のキーが有効時、｢特販区分｣への入力は４桁から１桁に変更
            if (optNoBuTo = 1) then
            begin
              MaxEditLength := 1;
            end
            else
            begin
              MaxEditLength := 4;
            end;
            // ADD 譚洪 K2014/01/22 --- <<<

          end;
        9: //原価率
          begin
            AEditor := edFloat;
            MaxEditLength := 6;

          end;
        10: //原単価
          begin
            AEditor := edFloat;
            MaxEditLength := 7;

          end;
        20: //倉庫
          begin
            AEditor := edPositiveNumeric;
            MaxEditLength := 4;

          end;
        12://明細備考
          begin
            AEditor := edNormal;
            MaxEditLength := 40;

          end;
        22://仕入先コード
          begin
            AEditor := edPositiveNumeric;
            MaxEditLength := 6;

          end;
        23://仕入日
          begin
            //AEditor := edDateEdit;   // DEL 2012/10/15
            AEditor := edNormal;       // ADD 2012/10/15
            MaxEditLength := 10;       // ADD 2012/10/15

          end;
        15: //BO区分
          begin
            AEditor := edNormal;
            MaxEditLength := 1;

          end;
        16: //発注先
          begin
            AEditor := edPositiveNumeric;
            MaxEditLength := 6;

          end;
        17: //発注数
          begin
            AEditor := edPositiveNumeric;
            MaxEditLength := 3;

          end;
        18: //納品区分
          begin
            AEditor := edPositiveNumeric;
            MaxEditLength := 1;

          end;
        19: //H納品区分
          begin
            AEditor := edPositiveNumeric;
            MaxEditLength := 1;

          end;
      end;
    end
    else if (ARow mod 2) = 1 then
    begin
      case ACol of
        1: //品番
          begin
            AEditor := edNormal;
            MaxEditLength := 24

          end;
        2,3://純優
          begin
            AEditor := edNumeric;
            MaxEditLength := 1;

          end;
        4: //メーカー
          begin
            AEditor := edNumeric;
            MaxEditLength := 4;
          end;
        5: //仕入先
          begin
            AEditor := edNumeric;
            MaxEditLength := 6;

          end;
        6: //出荷数
          begin
            // UPD 2010/08/13 ---->>>>
            if (smallPointFlg) then
            begin
              AEditor := edFloat;
              gpxMAHNB01013B_GetSalesSlipInputConstructionData(maxLength,1);
              MaxEditLength := maxLength + 4;
            end
            else
            begin
              AEditor := edNumeric;
              gpxMAHNB01013B_GetSalesSlipInputConstructionData(maxLength,1);
            end;
            // UPD 2010/08/13 ----<<<<
          end;
        7: //標準価格
          begin
            AEditor := edNumeric;
            MaxEditLength := 7;

          end;
        8://OP
          begin
            AEditor := edNormal;
            MaxEditLength := 1;

          end;
        9: //売価率
          begin
            // UPD 2010/08/13 ---->>>>
            if (smallPointFlg) then
            begin
              AEditor := edFloat;
              MaxEditLength := 6;
            end
            else
            begin
              AEditor := edNumeric;
              MaxEditLength := 6;
            end;
            // UPD 2010/08/13 ----<<<<
          end;
        10://売単価
          begin
            // UPD 2010/08/13 ---->>>>
            if (smallPointFlg) then
            begin
              AEditor := edFloat;
              MaxEditLength := 7;
            end
            else
            begin
              AEditor := edNumeric;
              MaxEditLength := 7;
            end;
            // UPD 2010/08/13 ----<<<<
          end;
        11: //売上金額
          begin
            AEditor := edFloat;
            MaxEditLength := 12;
          end;
        12: //得意先注番
          begin
            // --- UPD 2010/05/31 -------------->>>>>
            // AEditor := edNumeric;
            AEditor := edNormal;
            // --- UPD 2010/05/31 -------------->>>>>
            MaxEditLength := 20;
          end;

        13: //納品完了予定日
          begin
            // --- UPD 2010/07/01 -------------->>>>>
            //AEditor := edDateEdit;
            AEditor := edNormal;
//>>>2011/03/16
//            MaxEditLength := 10;
            MaxEditLength := 20;
//<<<2011/03/16
            // --- UPD 2010/07/01 --------------<<<<<
          end;
        22: //仕入伝票番号
          begin
            // --- UPD 2010/05/31 -------------->>>>>
            // AEditor := edNumeric;
            AEditor := edNormal;
            // --- UPD 2010/05/31 -------------->>>>>
            // --- UPD 2012/09/10 Wakita ---------->>>>>
            //MaxEditLength := 19;
            MaxEditLength := 38;
            // --- UPD 2012/09/10 Wakita ----------<<<<<
          end;
        18: //指定拠点
          begin
            AEditor := edNormal;
            MaxEditLength := 3;
          end;
//>>>2011/02/01 PS管理番号入力制御
        ctCol_GoodsMngNo: // PS管理番号
          begin
            AEditor := edNumeric;
            MaxEditLength := 8;
          end;
//<<<2011/02/01 PS管理番号入力制御
      end;
    end;
  end;
end;

procedure TForm4.HNsGrid1GetEditText(Sender: TObject; ACol, ARow: Integer;
  var Value: string);
// 2011/08/18 XUJS ADD STA ------>>>>>>
var tempStd: string;
    s_Price: Double;
    salesRowNo: Integer;
// 2011/08/18 XUJS ADD END ------<<<<<<
begin

  //BL
  if (ACol = ctCol_BLGoodsCode) and (Value = '')
      and ((ARow > 1) and (ARow mod 2 = 0))then begin
    Value := '0';
  end;

  //仕入先
  if (ACol = ctCol_SupplierCd) and (Value = '')
      and ((ARow > 1) and (ARow mod 2 <> 0))then begin
    Value := '0';
  end;

  //販売区分
  if (ACol = ctCol_SalesCode) and (Value = '')
      and ((ARow > 1) and (ARow mod 2 = 0))then begin
    Value := '0';
  end;

  //受注数
  // --- UPD 2010/07/19 -------------->>>>>
  //if (ACol = ctCol_AcceptAnOrderCntDisplay) and (Value = '-0')
  if (ACol = ctCol_AcceptAnOrderCntDisplay) and ((Value = '') or (Value = '-0'))
  // --- UPD 2010/07/19 --------------<<<<<
  and ((HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
  begin
    Value := '0';
  end;

  //出荷数
  if (ACol = ctCol_ShipmentCntDisplay) and (Value = '-0')
  and ((HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
  begin
    Value := '0';
  end;

  //
  if (ACol = ctCol_SalesUnitCost) and (Value = '-0')
  and ((HNsGrid1.Row > 1)  and ((HNsGrid1.Row mod 2) = 0)) then
  begin
    Value := '0';
  end;

  // 売上金額
  if (ACol = ctCol_SalesMoneyDisplay) and (Value = '-0')
  and ((HNsGrid1.Row > 1)  and ((HNsGrid1.Row mod 2) = 1)) then
  begin
    Value := '0';
  end;

  // 納品区分
  if (ACol = ctCol_DeliveredGoodsDivNm)
    and ((ARow > 1) and (ARow mod 2 = 0))then begin
  Value := RCHNB01003UADM.UOEDeliGoodsDiv[ARow div 2 - 1];
  end;

  //Ｈ納品区分
  if (ACol = ctCol_FollowDeliGoodsDivNm)
    and ((ARow > 1) and (ARow mod 2 = 0))then begin
  Value := RCHNB01003UADM.FollowDeliGoodsDiv[ARow div 2 - 1];
  end;

  //指定拠点
  if (ACol = ctCol_UOEResvdSectionNm)
   and ((ARow > 1) and (ARow mod 2 = 1))then begin
  Value := RCHNB01003UADM.UOEResvdSection[ARow div 2 - 1];
  end;

  //>>>2010/05/30
  //RC区分
  if (ACol = ctCol_RecycleDivNm)
   and ((ARow > 1) and (ARow mod 2 = 0))then begin
  Value := IntToStr(RCHNB01003UADM.RecycleDiv[ARow div 2 - 1]);

  // ---ADD 2011/07/13----------->>>>>
    if (Value = '10') then
    begin
    // 10:NP = 3:NP
       Value := '3';
    end
    else if (Value = '20') then
    begin
      // 20:GP = 4:GP
       Value := '4';
    end
    else if (Value = '30') then
    begin
      // 30:RP = 2:RP
       Value := '2';
    end
    else if (Value = '40') then
    begin
      // 40:UP = 1:UP
       Value := '1';
    end;
  // ---ADD 2011/07/13-----------<<<<<
  end;
  //<<<2010/05/30

  //品番
  if (ACol = ctCol_GoodsNo)
  and ((ARow > 1) and (ARow mod 2 = 1)) then
  begin
     xStatusBarMessageSetting(MESSAGE_GoodsCode);
  end
  else
  begin
    xStatusBarMessageSetting('');
  end;

  //>>>2011/03/16
  // 回答納期
  if ((ACol = ctCol_DeliGdsCmpltDueDate) and (Value <> '') and
      (ARow > 1) and (ARow mod 2 = 1)) then begin
    if (Length(Trim(Value)) > 10) then begin
      Value := Copy(Value, 1, 10);
    end;
  end;
  //<<<2011/03/16

  // 2011/08/20 XUJS ADD STA ------>>>>>>
  if (
       (((ACol = ctCol_ListPriceDisplay) and  (ARow mod 2 = 1)) or
       (ACol = ctCol_CostRate) or
       (ACol = ctCol_SalesUnitCost)) and
       (ARow > 1)
     )then
  begin

    salesRowNo := RCHNB01003UADM.SalesRowNo[ARow div 2 - 1];
    s_Price := RCHNB01003UADM.StdUnPrcUnCst[ARow div 2 - 1];
    if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, ARow mod 2, -1, 19) = 0) then
    begin
      pkakaku_v.Caption := '';
      kakaku_Panel.Visible := False;
    end
    else
    begin
      if (smallPointFlg) then
      begin
      tempStd := FormatFloat('#,###,##0.00', s_Price);
        if (tempStd = '0.00') then
        begin
            tempStd :='';
        end;
      end
      else
      begin
        tempStd := FormatCurr(ctMoneyFormat, s_Price);
        if (tempStd = '0') then
        begin
            tempStd :='';
        end;
      end;
      if (Trim(tempStd) <> '') then
      begin
        pkakaku_v.Caption := tempStd;
        kakaku_Panel.Visible := True;
      end;
    end;
  end
  else
  begin
    if (kakaku_Panel.Visible) then
    begin
      pkakaku_v.Caption := '';
      kakaku_Panel.Visible := False;
    end;
  end;
  // 2011/08/20 XUJS ADD END ------<<<<<<

end;

procedure TForm4.HNsGrid1GetImeMode(Sender: TObject; ACol, ARow: Integer;
  var AImeMode: TImeMode);
begin
 // del by liusy #26911 2011/12/21  --------->>>>>
    //add 2011/12/09 ----->>>>
//    if(imeFlag = true) then
//    begin
//      imeFlag:= false;
//      exit;
//    end;
//    //add 2011/12/09 -----<<<<
//    // 明細備考
////>>>2011/03/16
////    if ((ACol = ctCol_DtlNote) and ((ARow mod 2) = 0)) then
//    if ((ACol = ctCol_DtlNote) and ((ARow mod 2) = 0))
//    or ((ACol = ctCol_DeliGdsCmpltDueDate) and ((ARow mod 2) = 1))
//    then
////<<<2011/03/16
//    begin
//        SetImeMode(Handle, imHira);                     // MOD 2011/12/0912/09
//    end
//    // 品名
//    else if ((ACol = ctCol_GoodsName) and ((ARow mod 2) = 0)) then
//    begin
//        //AImeMode := TImeMode.imHira;// DEL 2010/06/26
//        //AImeMode := imOpen;// ADD 2010/06/26  //DEL2011/12/09
//        SetImeMode(Handle, imSKata);// ADD 2010/06/26   // MOD 2011/12/09
//    end
//    else begin
//        //AImeMode := imClose;// ADD 2010/06/26  //DEL2011/12/09
//        SetImeMode(Handle, imClose);                    // MOD 2011/12/09
//    end;
//
//    // ADD 2010/08/13 ---->>>>
//    // BLｺｰﾄﾞ
//    if ((ACol = ctCol_BLGoodsCode) and ((ARow mod 2) = 0)
//
//       // 純優
//       or (ACol = ctCol_GoodsKindCode) and ((ARow mod 2) = 1)
//       // ﾒｰｶｰ
//       or (ACol = ctCol_GoodsMakerCd) and ((ARow mod 2) = 1)
//       // 仕入先
//       or (ACol = ctCol_SupplierCd) and ((ARow mod 2) = 1)
//       // 受注数
//       or (ACol = ctCol_AcceptAnOrderCntDisplay) and ((ARow mod 2) = 0)
//       // 出荷数
//       or (ACol = ctCol_ShipmentCntDisplay) and ((ARow mod 2) = 1)
//       // 標準価格
//       or (ACol = ctCol_ListPriceDisplay) and ((ARow mod 2) = 1)
//       // 販売区分
//       or (ACol = ctCol_SalesCode) and ((ARow mod 2) = 0)
//       // 原価率
//       or (ACol = ctCol_CostRate) and ((ARow mod 2) = 0)
//       // 原単価
//       or (ACol = ctCol_SalesUnitCost) and ((ARow mod 2) = 0)
//       // 売価率
//       or (ACol = ctCol_SalesRate) and ((ARow mod 2) = 1)
//       // 売単価
//       or (ACol = ctCol_SalesUnPrcDisplay) and ((ARow mod 2) = 1)
//       // 売上金額
//       or (ACol = ctCol_SalesMoneyDisplay) and ((ARow mod 2) = 1)
//       // 倉庫
//       or (ACol = ctCol_WarehouseCode) and ((ARow mod 2) = 0)
//       // 仕入先(仕入)
//       or (ACol = ctCol_SupplierCdForStock) and ((ARow mod 2) = 0)
//       // 仕入日(仕入)
//       or (ACol = ctCol_StockDate) and ((ARow mod 2) = 0)
//       // 発注先(発注)
//       or (ACol = ctCol_SupplierCdForOrder) and ((ARow mod 2) = 0)
//       // 数量(発注)
//       or (ACol = ctCol_AcceptAnOrderCntForOrder) and ((ARow mod 2) = 0)) then
//    begin
//         //AImeMode := imdisable;   //DEL2011/12/09
//         SetImeMode(Handle, imdisable);   // MOD 2011/12/09
//    end;
//
//
//    if ((ACol = ctCol_GoodsName) and ((ARow mod 2) = 0))
//    or ((ACol = ctCol_DtlNote) and ((ARow mod 2) = 0)) then
//    begin
//       AImeMode := imOpen;   // MOD 2011/12/09
//    end;
//    // ADD 2010/08/13 ----<<<<
 // del by liusy #26911 2011/12/21  -----<<<<<


  // add by liusy #26911 2011/12/21  --------->>>>>

  //ADD liusy 2011/12/31 Redmine#26911 ----->>>>>
  if ((Form4.ActiveControl <> nil) and (Form4.ActiveControl.Name <> 'HNsGrid1')) then
  begin
    Exit;
  end;
  //ADD liusy 2011/12/31 Redmine#26911 -----<<<<<
  // 明細備考
  // >>>2011/03/16
  // if ((ACol = ctCol_DtlNote) and ((ARow mod 2) = 0)) then
  if ((ACol = ctCol_DtlNote) and ((ARow mod 2) = 0)) or
    ((ACol = ctCol_DeliGdsCmpltDueDate) and ((ARow mod 2) = 1)) then
  // <<<2011/03/16
  begin
    //SetImeMode(HNsGrid1.Handle, imHira);   //ADD liusy 2011/12/31 Redmine#26911   //DEL 鄧潘ハン 2012/03/12 Redmine#28085
    SetImeMode(GetFocus, imHira);  //ADD 鄧潘ハン 2012/03/12 Redmine#28085
    AImeMode := TImeMode.imHira;
  end
  // 品名
  else if ((ACol = ctCol_GoodsName) and ((ARow mod 2) = 0)) then
  begin
    // AImeMode := TImeMode.imHira;// DEL 2010/06/26
    //SetImeMode(HNsGrid1.Handle, imSKata);  //ADD liusy 2011/12/31 Redmine#26911  //DEL 鄧潘ハン 2012/03/12 Redmine#28085
    SetImeMode(GetFocus, imSKata);  //ADD 鄧潘ハン 2012/03/12 Redmine#28085
    AImeMode := TImeMode.imSKata; // ADD 2010/06/26
  end
  else
  begin
    //SetImeMode(HNsGrid1.Handle, imClose);  //ADD liusy 2011/12/31 Redmine#26911 //DEL 鄧潘ハン 2012/03/12 Redmine#28085
    SetImeMode(GetFocus, imClose);  //ADD 鄧潘ハン 2012/03/12 Redmine#28085
    AImeMode := TImeMode.imClose;
  end;

  // ADD 2010/08/13 ---->>>>
  // BLｺｰﾄﾞ
  if ((ACol = ctCol_BLGoodsCode) and ((ARow mod 2) = 0)
    // 純優
      or (ACol = ctCol_GoodsKindCode) and ((ARow mod 2) = 1)
    // ﾒｰｶｰ
      or (ACol = ctCol_GoodsMakerCd) and ((ARow mod 2) = 1)
    // 仕入先
      or (ACol = ctCol_SupplierCd) and ((ARow mod 2) = 1)
    // 受注数
      or (ACol = ctCol_AcceptAnOrderCntDisplay) and ((ARow mod 2) = 0)
    // 出荷数
      or (ACol = ctCol_ShipmentCntDisplay) and ((ARow mod 2) = 1)
    // 標準価格
      or (ACol = ctCol_ListPriceDisplay) and ((ARow mod 2) = 1)
    // 販売区分
      or (ACol = ctCol_SalesCode) and ((ARow mod 2) = 0)
    // 原価率
      or (ACol = ctCol_CostRate) and ((ARow mod 2) = 0)
    // 原単価
      or (ACol = ctCol_SalesUnitCost) and ((ARow mod 2) = 0)
    // 売価率
      or (ACol = ctCol_SalesRate) and ((ARow mod 2) = 1)
    // 売単価
      or (ACol = ctCol_SalesUnPrcDisplay) and ((ARow mod 2) = 1)
    // 売上金額
      or (ACol = ctCol_SalesMoneyDisplay) and ((ARow mod 2) = 1)
    // 倉庫
      or (ACol = ctCol_WarehouseCode) and ((ARow mod 2) = 0)
    // 仕入先(仕入)
      or (ACol = ctCol_SupplierCdForStock) and ((ARow mod 2) = 0)
    // 仕入日(仕入)
      or (ACol = ctCol_StockDate) and ((ARow mod 2) = 0)
    // 発注先(発注)
      or (ACol = ctCol_SupplierCdForOrder) and ((ARow mod 2) = 0)
    // 数量(発注)
      or (ACol = ctCol_AcceptAnOrderCntForOrder) and ((ARow mod 2) = 0)) then
  begin
    //SetImeMode(HNsGrid1.Handle, imClose);  //ADD liusy 2011/12/31 Redmine#26911 //DEL 鄧潘ハン 2012/03/12 Redmine#28085
    SetImeMode(GetFocus, imClose); //ADD 鄧潘ハン 2012/03/12 Redmine#28085
    AImeMode := TImeMode.imDisable;
  end;
  // ADD 2010/08/13 ----<<<<
  // add by liusy #26911 2011/12/21  -----<<<<<
end;


//*************************************************************************
//  グリッドキーダウンイベント
//*************************************************************************
procedure TForm4.HNsGrid1KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var
  iCol, iRow: Integer; // 2010/07/19
  cellValue: string; // 2010/07/19
  iMoveRow :Integer; // ADD 2013/02/26② T.Miyamoto
  rowIndex :Integer; // ADD 2013/02/26② T.Miyamoto
begin
  //>>>2010/07/19
  iCol := HNsGrid1.Col;
  iRow := HNsGrid1.Row;


  // --- ADD 2010/10/27 ---------->>>>>
  // 先頭行なら強制的に制御
  if ((Key = VK_UP) and (iRow = 2)) then
  begin
    Key := 0;
    Form4.xSetHeaderControl;
    Exit;
  end;
  // --- ADD 2010/10/27 ----------<<<<<
  // 部品検索でBLコード未入力時は行移動不可とする
  // キーを押しっぱなしにした時の為
  if ((iCol = ctCol_BLGoodsCode) and ((iRow mod 2) = 0)) then begin
    cellValue := HNsGrid1.LogicalCells[ctCol_BLGoodsCode, 0, iRow + 1];
    // --- ADD 2012/10/11 T.Nishi ---------->>>>>
    //※参考　↑のソースはLogicalCellsを使用していますが、
    //        正しくはCellsです。(iRowの先頭値がLogicalCellsでは正しくない)
    //        障害ですが、現状問題ないのでソースの修正は行っていません。
    // --- ADD 2012/10/11 T.Nishi ----------<<<<<
    if (HNsGrid1.OriginalCellValue = cellValue) then begin
      // --- UPD 2012/10/11 T.Nishi ---------->>>>>
      //if (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow -1, -1, 9) = 0) then begin
      //  if (GetKeyState(VK_DOWN) and $8000 = $8000) Or (GetKeyState(VK_RETURN) and $8000 = $8000) Or (GetKeyState(VK_RIGHT) and $8000 = $8000) then begin
      // F1(終了)のタイミングでgpxMAHNB01013B_GridJoinCheckの処理を行うと、
      // 何故かエラーになるので、F1キーで入らないようにif文の順番を入れ替える
      if (Key = VK_DOWN) Or (Key = VK_RETURN) Or (Key = VK_RIGHT) then begin
        if (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow -1, -1, 9) = 0) then begin
      // --- UPD 2012/10/11 T.Nishi ----------<<<<<
          if (i_searchPartsMode = ctBLCodeSearch) then begin
            Key := 0;
            Exit;
          end;
        end;
      end;
    end;
  end;

  // 品番検索で品番未入力時は行移動不可とする
  // キーを押しっぱなしにした時の為
  if ((iCol = ctCol_GoodsNo) and ((iRow mod 2) = 1)) then begin
    cellValue := HNsGrid1.LogicalCells[ctCol_GoodsNo, 0, iRow + 1];
    // --- ADD 2012/10/11 T.Nishi ---------->>>>>
    //※参考　↑のソースはLogicalCellsを使用していますが、
    //        正しくはCellsです。(iRowの先頭値がLogicalCellsでは正しくない)
    //        障害ですが、現状問題ないのでソースの修正は行っていません。
    // --- ADD 2012/10/11 T.Nishi ----------<<<<<
    if (HNsGrid1.OriginalCellValue = cellValue) then begin
      // --- UPD 2012/10/11 T.Nishi ---------->>>>>
      //if (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow -1, -1, 9) = 0) then begin
      //  if (GetKeyState(VK_DOWN) and $8000 = $8000) Or (GetKeyState(VK_RETURN) and $8000 = $8000) Or (GetKeyState(VK_RIGHT) and $8000 = $8000)
      //     then begin
      // F1(終了)のタイミングでgpxMAHNB01013B_GridJoinCheckの処理を行うと、
      // 何故かエラーになるので、F1キーで入らないようにif文の順番を入れ替える
      if (Key = VK_DOWN) Or (Key = VK_RETURN) Or (Key = VK_RIGHT) then begin
        if (gpxMAHNB01013B_GridJoinCheck(0, HNsGrid1.LogicalRow -1, -1, 9) = 0) then begin
      // --- UPD 2012/10/11 T.Nishi ----------<<<<<
          if (i_searchPartsMode = ctGoodsNoSearch) then begin
            Key := 0;
            Exit;
          end;
        end;
      end;
    end;
  end;
  //<<<2010/07/19

  // ADD 2013/02/26② T.Miyamoto ------------------------------>>>>>
  if ((iCol = ctCol_SupplierCdForStock) and ((iRow mod 2) = 0))  then
  begin
    // [Shift+Tab]または[Shift+Enter]が押下された場合
    iMoveRow := 0;
    if ((Key = VK_TAB) or (Key = VK_RETURN)) and (ssShift in Shift) then
    begin
      for rowIndex := (HNsGrid1.LogicalRow - 1) downto 1 do // 現在行から先頭行まで
      begin
        if (gpxMAHNB01013B_GridJoinCheck(0, rowIndex -1, -1, 9) = 1) and
           (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, (rowIndex * 2 + 1)] = False) then
        begin
          // 有効行かつ仕入伝票番号に移動可能の場合はフォーカス移動
          iMoveRow := rowIndex;
          Break;
        end;
      end;
      // 現在行より前に移動可能行が存在しない場合
      if (iMoveRow = 0) then
      begin
        key := 0;
      end;
    end;
  end;
  // ADD 2013/02/26② T.Miyamoto ------------------------------<<<<<


  // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- >>>>>
  // 売単価or売価率の場合、
  if ((iCol = ctCol_SalesUnPrcDisplay) and ((iRow mod 2) = 1))
      or ((iCol = ctCol_SalesRate) and ((iRow mod 2) = 1)) then
  begin
    if isOptPermitForKoei then
    begin
      // Shift(+) 、（"+"(プラス)キー）の場合、
      if ((Key = VK_OEM_PLUS) and (ssShift in Shift)) or (Key = VK_ADD) then
      begin
          SalesUnPrcCalc(Sender);
          Exit;
      end;
    end;
  end;
  // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- <<<<<

   if (Key = VK_HOME) then
   begin
      if (_costDisplay = False) then
      begin
      gpxMAHNB01013B_SetHomeKeyFlg(_costDisplay);       // ADD 2010/09/14
        _costDisplay := True;
      end
      else
      begin
        gpxMAHNB01013B_SetHomeKeyFlg(_costDisplay);     // ADD 2010/09/14
        _costDisplay := False;
      end;

      // 明細再表示
      xSettingGrid;

      // ADD 2010/08/13 ---->>>>
      if (not _costDisplay) then
      begin
          if ( ((iCol = ctCol_CostRate) and ((iRow mod 2) = 0))
              or ((iCol = ctCol_SalesUnitCost) and ((iRow mod 2) = 0))) then
          begin
            HNsGrid1.GotoCell(ctCol_GoodsName, HNsGrid1.LogicalRow * 2 );
          end;
      end;
      // ADD 2010/08/13 ----<<<<
   end
   else if (Key = 0) then
   begin
      // --- DEL 2010/05/31 ---------->>>>>
//      // BLコード
//      if (detail_oldCol = ctCol_BLGoodsCode)
//      and ((detail_oldRow > 1) and (detail_oldRow mod 2 = 0)) then
//      begin
//         if ((HNsGrid1.Cells[detail_oldCol,detail_oldRow] = '') and (action_Key <> VK_UP)) then
//         begin
//            if (i_searchPartsMode = ctBLCodeSearch) and (HNsGrid1.ReadOnly[detail_oldCol,detail_oldRow] = False) then
//            begin
//              HNsGrid1.FocusCell(detail_oldCol, detail_oldRow);
//            end;
//         end;
//
//         if (action_Key = VK_LEFT) then
//         begin
//           HNsGrid1.FocusCell(detail_oldCol, detail_oldRow);
//         end;
//
//      end;

//      // 仕入伝票番号
//      if (detail_oldCol = ctCol_PartySalesSlipNum)
//      and ((detail_oldRow > 1) and (detail_oldRow mod 2 = 1)) then
//      begin
//         if (action_Key <> VK_LEFT) and (action_Key <> VK_RIGHT)
//         and (action_Key <> VK_UP) and (action_Key <> VK_DOWN) then
//         begin
//             HNsGrid1.FocusCell(ctCol_BLGoodsCode, detail_oldRow + 1);
//         end;
//      end;

      // --- DEL 2010/05/31 ----------<<<<<

   end;
end;

procedure TForm4.HNsGrid1KeyPress(Sender: TObject; var Key: Char);
var
   cellKey : string;
   result, maxLength, maxLengthVar : Integer;
begin

  cellKey := Key;
  result := 0;
   //原価率
   if (HNsGrid1.Col = ctCol_CostRate)
   and ((HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
   begin
      result := gpxMAHNB01013B_KeyPressNumCheck(6,2,HNsGrid1.GridCells[HNsGrid1.Col,HNsGrid1.Row],cellKey,HNsGrid1.NormalEdit.SelStart,HNsGrid1.NormalEdit.SelLength,False);
      if (result = 1) then
      begin
         HNsGrid1.MaxEditLength := 6;
      end
      else
      begin
         Key := #0;
      end;

   end;

   //売価率
   if (HNsGrid1.Col = ctCol_SalesRate)
   and ((HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
   begin
      result := gpxMAHNB01013B_KeyPressNumCheck(6,2,HNsGrid1.GridCells[HNsGrid1.Col,HNsGrid1.Row],cellKey,HNsGrid1.NormalEdit.SelStart,HNsGrid1.NormalEdit.SelLength,False);
      // UPD 2010/09/10 --- >>>>
      //if (result = 1 or result = -1) then
      if ((result = 1) or (result = -1)) then
      // UPD 2010/09/10 --- <<<<
      begin
         HNsGrid1.MaxEditLength := 6;
      end
      else
      begin
         Key := #0;
      end;

   end;

   //出荷数
   if (HNsGrid1.Col = ctCol_ShipmentCntDisplay)
   and ((HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
   begin
      gpxMAHNB01013B_GetSalesSlipInputConstructionData(maxLength,1);
      maxLengthVar :=  maxLength + 3;
      result := gpxMAHNB01013B_KeyPressNumCheck(maxLengthVar,2,HNsGrid1.GridCells[HNsGrid1.Col,HNsGrid1.Row],cellKey,HNsGrid1.NormalEdit.SelStart,HNsGrid1.NormalEdit.SelLength,True);
      if (result = 0) then
      begin
         Key := #0;
         Exit;
      end;

   end;

   //受注数
   if (HNsGrid1.Col = ctCol_AcceptAnOrderCntDisplay)
   and ((HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 0)) then
   begin
      gpxMAHNB01013B_GetSalesSlipInputConstructionData(maxLength,2);
      maxLengthVar :=  maxLength + 3;
      if (HNsGrid1.GridCells[HNsGrid1.Col,HNsGrid1.Row] = '') then
      begin
           HNsGrid1.GridCells[HNsGrid1.Col,HNsGrid1.Row] := '0';
      end;

      result := gpxMAHNB01013B_KeyPressNumCheck(maxLengthVar,2,HNsGrid1.GridCells[HNsGrid1.Col,HNsGrid1.Row],cellKey,HNsGrid1.NormalEdit.SelStart,HNsGrid1.NormalEdit.SelLength,True);
      if (result = 1) then
      begin
         HNsGrid1.MaxEditLength := maxLengthVar;
      end
      else
      begin
         Key := #0;
      end;

   end;

   // --- ADD 2010/05/31 ---------->>>>>
   //仕入伝票番号入力
   if (HNsGrid1.Col = ctCol_PartySalesSlipNum)
   and ((HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
   begin
	   // --- UPD 2012/09/10 Wakita ---------->>>>>
	   //  // --- UPD 2010/06/02 ---------->>>>>
	   ////  if (((ord(Key) >= 48) and (ord(Key) <= 57))
	   //  if (((ord(Key) >= 42) and (ord(Key) <= 57))
	   //      or (ord(Key) = 61)
	   //  // --- UPD 2010/06/02 ----------<<<<<
	   //      or ((ord(Key) >= 65) and (ord(Key) <= 90))
	   //      or ((ord(Key) >= 97) and (ord(Key) <= 122))
	   //      or ((ord(Key) = 8))) then
	   //  begin
	   //  //    ShowMessage('OK');
	   //  end
	   //  else
	   //  begin
	   //     Key := #0;
	   //  end;
     if (ord(Key) <> 8) then
     begin
        if Length(HNsGrid1.GridCells[HNsGrid1.Col, HNsGrid1.Row]) > 18 then
        begin
          Key := #0;
        end;
     end;
     // --- UPD 2012/09/10 Wakita ----------<<<<<
   end;

    //得意先注番
   if (HNsGrid1.Col = ctCol_PartySlipNumDtl)
   and ((HNsGrid1.Row > 1) and (HNsGrid1.Row mod 2 = 1)) then
   begin
      // --- UPD 2010/06/02 ---------->>>>>
//      if (((ord(Key) >= 48) and (ord(Key) <= 57))
      if (((ord(Key) >= 42) and (ord(Key) <= 57))
          or (ord(Key) = 61)
      // --- UPD 2010/06/02 ----------<<<<<
          or ((ord(Key) >= 65) and (ord(Key) <= 90))
          or ((ord(Key) >= 97) and (ord(Key) <= 122))
          or ((ord(Key) = 8))) then
      begin
      //    ShowMessage('OK');
      end
      else
      begin
         Key := #0;
      end;
    end;
   // --- ADD 2010/05/31 ----------<<<<<<
   // --- ADD 2010/11/25 ---------->>>>>>
   //原単価/売単価
   if (((HNsGrid1.Col = ctCol_SalesUnitCost) or (HNsGrid1.Col = ctCol_SalesUnPrcDisplay))
   and ((HNsGrid1.Row > 1))) then
   begin
      // --- UPD 2010/11/30 ---------->>>>>>
//      if (pnl_AcptAnOdrStatusTitle.Caption = '見積')
//      or (pnl_AcptAnOdrStatusTitle.Caption = '単価見積')
//      or (pnl_AcptAnOdrStatusTitle.Caption = '貸出') then
//      begin
//        result := gpxMAHNB01013B_KeyPressNumCheck(6,2,HNsGrid1.GridCells[HNsGrid1.Col,HNsGrid1.Row],cellKey,HNsGrid1.NormalEdit.SelStart,HNsGrid1.NormalEdit.SelLength,False);
//        if (result = 1) then
//        begin
//           HNsGrid1.MaxEditLength := 7;
//        end
//        else
//        begin
//           Key := #0;
//        end;
//      end;

      result := gpxMAHNB01013B_KeyPressNumCheck(10,2,HNsGrid1.GridCells[HNsGrid1.Col,HNsGrid1.Row],cellKey,HNsGrid1.NormalEdit.SelStart,HNsGrid1.NormalEdit.SelLength,False);
      if (result = 1) then
      begin
         HNsGrid1.MaxEditLength := 7;
      end
      else
      begin
         Key := #0;
      end;
      // --- UPD 2010/11/30 ----------<<<<<<
   end;

   //売上金額
   if ((HNsGrid1.Col = ctCol_SalesMoneyDisplay)
   and ((HNsGrid1.Row > 1)) and (HNsGrid1.Row mod 2 = 1)) then
   begin
      // --- UPD 2013/11/05 Wakita ---------->>>>>
      //if (pnl_AcptAnOdrStatusTitle.Caption = '見積')
      //or (pnl_AcptAnOdrStatusTitle.Caption = '単価見積')
      //or (pnl_AcptAnOdrStatusTitle.Caption = '貸出') then
	  if (pnl_AcptAnOdrStatusTitle.Caption = '貸出') then
      // --- UPD 2013/11/05 Wakita ----------<<<<<
      begin
        //result := gpxMAHNB01013B_KeyPressNumCheck(6,2,HNsGrid1.GridCells[HNsGrid1.Col,HNsGrid1.Row],cellKey,HNsGrid1.NormalEdit.SelStart,HNsGrid1.NormalEdit.SelLength,False); // DEL 2010/11/30
        result := gpxMAHNB01013B_KeyPressNumCheck(15,2,HNsGrid1.GridCells[HNsGrid1.Col,HNsGrid1.Row],cellKey,HNsGrid1.NormalEdit.SelStart,HNsGrid1.NormalEdit.SelLength,False); // ADD 2010/11/30
        if (result = 1) then
        begin
           HNsGrid1.MaxEditLength := 12;
        end
        else
        begin
           Key := #0;
        end;
      end;
   end;
   // --- ADD 2010/11/25 ----------<<<<<<

   // --- ADD 2010/11/30 ---------->>>>>>
   //標準価格
   if ((HNsGrid1.Col = ctCol_ListPriceDisplay)
   and ((HNsGrid1.Row > 1)) and (HNsGrid1.Row mod 2 = 1)) then
   begin
        result := gpxMAHNB01013B_KeyPressNumCheck(7,0,HNsGrid1.GridCells[HNsGrid1.Col,HNsGrid1.Row],cellKey,HNsGrid1.NormalEdit.SelStart,HNsGrid1.NormalEdit.SelLength,False);
        if (result = 1) then
        begin
           HNsGrid1.MaxEditLength := 7;
        end
        else
        begin
           Key := #0;
        end;
   end;
   // --- ADD 2010/11/30 ----------<<<<<<

   // ADD 2012/10/15 --- >>>>
   if ((HNsGrid1.Col = ctCol_StockDate)
   and ((HNsGrid1.Row > 1)) and (HNsGrid1.Row mod 2 = 0)) then
   begin
      if ((Key <> '0')
       and (Key <> '1')
       and (Key <> '2')
       and (Key <> '3')
       and (Key <> '4')
       and (Key <> '5')
       and (Key <> '6')
       and (Key <> '7')
       and (Key <> '8')
       and (Key <> '9')
       and (Key <> #8)
       and (Key <> '/')) then
       begin
         Key := #0;
       end
       else
       begin
          HNsGrid1.MaxEditLength := 10;
       end;
   end;
   // ADD 2012/10/15 --- <<<<


end;

procedure TForm4.FullModelBtnClick(Sender: TObject);
begin
  if i_searchCarMode=1 then
  begin
    i_searchCarMode := 2;
    FullModelBtn.Caption := ctSearchCarMode_ModelPlate;
  end else if i_searchCarMode=2 then
  begin
    i_searchCarMode := 1;
    FullModelBtn.Caption := ctSearchCarMode_FullModel;
  end;
end;
 // del by liusy #26911 2011/12/21  --------->>>>>
//// -----ADD 2011/12/09 --------------<<<<<<
//procedure TForm4.FullModelClick(Sender: TObject);
//begin
// SetImeMode(Handle, imClose);
// FullModel.ImeMode :=  imClose;
//end;
//
//procedure TForm4.FullModelKeyUp(Sender: TObject; var Key: Word;
//  Shift: TShiftState);
//begin
// SetImeMode(Handle, imClose);
// FullModel.ImeMode :=  imClose;
// imeFlag := false;
//end;
//// -----ADD 2011/12/09 -------------->>>>>>
 // del by liusy #26911 2011/12/21  -----<<<<<
procedure TForm4.guideButtonClick(Sender: TObject);
var
  salesDetailArray: TSalesSlipInputCustomArrayA2;
  st : Integer;
  // --- DEL 2012/05/21 ---------->>>>>
  //focusPositionAfterBLCodeSearch : Integer;   // ADD 2012/04/11 No.594
  // --- DEL 2012/05/21 ----------<<<<<
  // ADD 2012/10/15 --- >>>
  tempPoint:TPoint;
  vRect:   TRect;
  stockDateTime :TDateTime;
  sysDateTime : string;
  iRectWidth : integer ;
  iCalendarLeft : integer ;
  // ADD 2012/10/15 --- <<<
  CalendarForm : TCalendarForm; // ADD 2012/12/17
  cellValue : string;  // ADD 2012/12/18
  cellDateValue : TDateTime;  // ADD 2012/12/18
  valid : Boolean;            // ADD 2012/12/26
  iRow, salesRowNo, modalResult : integer;  // ADD 2012/12/26
  cellValueNew : string;                    // ADD 2012/12/26
  shipmentCntDisplay, acceptAnOrderCntDisplay: Double;  // ADD 2013/11/05 Wakita
  focusPositionAfterBLCodeSearch : Integer;   // ADD 2013/12/11 Wakita
  locationLeft,  locationTop  : Integer;   // ADD K2016/12/30 譚洪 水野商工㈱
  cellValueDtlNote : string;                   // ADD K2016/12/30 譚洪 水野商工㈱
begin
  st := 0;
  if (Form4.ActiveControl = HNsGrid1) then
  begin

     // --- ADD K2016/12/30 譚洪 水野商工㈱　第二売価 ---------->>>>>
     if (isOptPermitForMizuno2ndSellPriceCtl) then
     begin
        //水野商工㈱の場合、第二売価ガイドの位置を設定します。
        if (HNsGrid1.Col = ctCol_DtlNote) and ((HNsGrid1.Row mod 2) = 0) then
        begin
           GetWindowRect(GetFocus,   vRect);
           //第二売価ガイドの左位置
           locationLeft :=  vRect.Right;
           //第二売価ガイドの上位置
           locationTop := vRect.Top;
           st := gpxMAHNB01013B_SetSecondSalesUnPrcGideLocation(locationLeft, locationTop);

           valid := False;
           cellValueDtlNote := HNsGrid1.LogicalCells[ctCol_DtlNote, 0, HNsGrid1.Row div 2];
           HNsGrid1.OnCellValidate(Sender, HNsGrid1.Col, HNsGrid1.Row, cellValueDtlNote, valid);
        end;
     end;
     // --- ADD K2016/12/30 譚洪 水野商工㈱　第二売価 ----------<<<<<

     st := gpxMAHNB01013B_uButtonGuideClick(HNsGrid1.LogicalRow - 1,xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col));

     // --- ADD 2010/05/31 ---------->>>>>
     if (st = 0) and ((HNsGrid1.Col = ctCol_BLGoodsCode) and ((HNsGrid1.Row mod 2) = 0))then
     begin
        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        xSetDetailRowFormC(salesDetailArray,-1);

        xSettingGrid;

        // 明細部変更後発生イベント処理
        xSalesSlipDetailInput_DetailChanged(HNsGrid1.LogicalRow);

        xSlipMemoInfoFormSetting(HNsGrid1.LogicalRow);

        xSalesPriceChanged;

        // --- ADD 2013/11/05 Wakita ---------->>>>>
        // --- UPD 2013/12/11 Wakita ---------->>>>>
        //shipmentCntDisplay := RCHNB01003UADM.ShipmentCntDisplay[HNsGrid1.LogicalRow * 2 - 1];
        //acceptAnOrderCntDisplay := RCHNB01003UADM.AcceptAnOrderCntDisplay[HNsGrid1.LogicalRow * 2 - 1];
        shipmentCntDisplay := RCHNB01003UADM.ShipmentCntDisplay[HNsGrid1.LogicalRow - 1];
        acceptAnOrderCntDisplay := RCHNB01003UADM.AcceptAnOrderCntDisplay[HNsGrid1.LogicalRow - 1];
        // --- UPD 2013/12/11 Wakita ----------<<<<<
        // --- ADD 2013/11/05 Wakita ----------<<<<<

        // --- ADD 2013/12/11 Wakita ---------->>>>>
        gpxMAHNB01013B_GetSalesSlipInputConstructionData(focusPositionAfterBLCodeSearch, 9);
        // --- ADD 2013/12/11 Wakita ----------<<<<<

        // 商品情報取得成功
        if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Estimate) then
        begin
          HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);
        end
        else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_UnitPriceEstimate) then
        begin
           HNsGrid1.LogicalFocusCell(ctCol_SalesRate,ctRow_SalesRate,HNsGrid1.LogicalRow);
        end
        else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Sales) then
        begin
            //-----ADD BY 凌小青 on 2012/01/17 for Redmine#27977 ----->>>>>>
             if (salesSlip_disp.AcptAnOdrStatus = acptAnOdrStatusState_AcceptAnOrder) then
             begin
              HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay,HNsGrid1.LogicalRow);
             end
             else
             begin
            //-----ADD BY 凌小青 on 2012/01/17 for Redmine#27977 -----<<<<<<<
                // --- DEL 2012/05/21 ---------->>>>>
//                // --- ADD 2012/04/11 No.594 ---------->>>>>
//                gpxMAHNB01013B_GetSalesSlipInputConstructionData(focusPositionAfterBLCodeSearch, 9);
//                //新規伝票で且つ
//                //伝票種別「売上」、伝票区分「売上」又は伝票種別「貸出」、伝票区分「売上」で且つ
//                //売上全体設定「受注数入力：する」且つユーザ設定「商品検索後のカーソル位置：受注数」の場合
//                if  ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))
//                and (((AcptAnOdrStatusDisplayComBo.SelCode = 30) and (SalesSlipDisplayComBo.SelCode = 10))
//                or  ((AcptAnOdrStatusDisplayComBo.SelCode = 40) and (SalesSlipDisplayComBo.SelCode = 10)))
//                and (salesTtlSt.AcpOdrInputDiv = 1)
//                and (focusPositionAfterBLCodeSearch = 1) then
//                begin
//                  HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay,ctRow_AcceptAnOrderCntDisplay,HNsGrid1.LogicalRow);
//                end
//                else
//                begin
//                // --- ADD 2012/04/11 No.594 ----------<<<<<
                // --- DEL 2012/05/21 ----------<<<<<

                // --- UPD 2013/11/05 Wakita ---------->>>>>
                //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);

                // --- UPD 2013/12/11 Wakita ---------->>>>>
//                if ((shipmentCntDisplay <> 0) and (acceptAnOrderCntDisplay = 0)) then
//                begin
//                  // 出荷数
//                  HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, HNsGrid1.LogicalRow);
//                end
//                else if ((shipmentCntDisplay = 0) and (acceptAnOrderCntDisplay = 0)) then
//                begin
//                  // 受注数
//                  HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, HNsGrid1.LogicalRow);
//                end;

                // 売上全体設定「受注数入力：する」
                // ユーザー設定「商品検索後のカーソル位置：受注数」
                // 「出荷数：０」、「受注数：０」
                // 伝票区分「掛売上、現金売上」
                // 新規伝票の場合
                if ((salesTtlSt.AcpOdrInputDiv = 1) and
                    (focusPositionAfterBLCodeSearch = 1) and
                    ((shipmentCntDisplay = 0) and (acceptAnOrderCntDisplay = 0)) and
                    ((SalesSlipDisplayComBo.SelCode = 10) or (SalesSlipDisplayComBo.SelCode = 30)) and
                    ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))) then
                begin
                  // 受注数
                  HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, HNsGrid1.LogicalRow);
                end
                else
                begin
                  // 出荷数
              	  HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, HNsGrid1.LogicalRow);
                end;
                // --- UPD 2013/12/11 Wakita ----------<<<<<
                // --- UPD 2013/11/05 Wakita ----------<<<<<

               // --- DEL 2012/05/21 ---------->>>>>
//               // --- ADD 2012/04/11 No.594 ---------->>>>>
//               end
//               // --- ADD 2012/04/11 No.594 ----------<<<<<
               // --- DEL 2012/05/21 ----------<<<<<
             end //ADD ON 2012/01/17
        end
        else if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Shipment) then
        begin
          // --- UPD 2013/11/05 Wakita ---------->>>>>
          //HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay,ctRow_ShipmentCntDisplay,HNsGrid1.LogicalRow);

          // --- UPD 2013/12/11 Wakita ---------->>>>>
//          if ((shipmentCntDisplay <> 0) and (acceptAnOrderCntDisplay = 0)) then
//          begin
//            // 出荷数
//            HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, HNsGrid1.LogicalRow);
//          end
//          else if ((shipmentCntDisplay = 0) and (acceptAnOrderCntDisplay = 0)) then
//          begin
//            // 受注数
//            HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, HNsGrid1.LogicalRow);
//          end;

            // 売上全体設定「受注数入力：する」
            // ユーザー設定「商品検索後のカーソル位置：受注数」
            // 「出荷数：０」、「受注数：０」
            // 伝票区分「掛売上、現金売上」
            // 新規伝票の場合
            if ((salesTtlSt.AcpOdrInputDiv = 1) and
                (focusPositionAfterBLCodeSearch = 1) and
                ((shipmentCntDisplay = 0) and (acceptAnOrderCntDisplay = 0)) and
                ((SalesSlipDisplayComBo.SelCode = 10) or (SalesSlipDisplayComBo.SelCode = 30)) and
                ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))) then
            begin
              // 受注数
              HNsGrid1.LogicalFocusCell(ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, HNsGrid1.LogicalRow);
            end
            else
            begin
              // 出荷数
              HNsGrid1.LogicalFocusCell(ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, HNsGrid1.LogicalRow);
            end;
          // --- UPD 2013/12/11 Wakita ----------<<<<<
          // --- UPD 2013/11/05 Wakita ----------<<<<<
        end;

        xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼
        xActiveCellButtonEnabledControl(xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col),HNsGrid1.LogicalRow);
     end

     // ADD 2012/10/15 --- >>>
     else if ((st = 0) and (HNsGrid1.Col = ctCol_StockDate) and ((HNsGrid1.Row mod 2) = 0)) then
     begin
        // --- ADD 2012/12/17 ---------->>>>>
        CalendarForm := nil;
        CalendarForm := TCalendarForm.Create(Application);
        // --- ADD 2012/12/17 ----------<<<<<

        GetWindowRect(GetFocus,   vRect);
        //仕入日のセルの右端にカレンダーの右端を合わせる
        //①セルの長さを求める
        iRectWidth := vRect.Right - vRect.Left;
        //②カレンダーの長さによって表示位置を変える
        if CalendarForm.MonthCalendar.Width > iRectWidth then begin
          //カレンダーの長さの方がセルの長さより長い場合
          //長さの差分だけ左（マイナス方向）にずらす
          iCalendarLeft := vRect.Left - (CalendarForm.MonthCalendar.Width - iRectWidth);
        end else begin
          //セルの長さの方がカレンダーの長さより長い場合
          //長さの差分だけ左（プラス方向）にずらす
          iCalendarLeft := vRect.Left + (iRectWidth - CalendarForm.MonthCalendar.Width);
        end;
        CalendarForm.Left := iCalendarLeft;
        CalendarForm.Top := vRect.Bottom;

        CalendarForm.Col := HNsGrid1.Col;
        CalendarForm.Row := HNsGrid1.Row;
        
        // --- DEL 2012/12/18 --------- >>>>>>>>>>>>>>>
        //if (HNsGrid1.OriginalCellValue = '') then begin
        //  sysDateTime := FormatDateTime('yyyy/mm/dd',Now());
        //  CalendarForm.MonthCalendar.Date := StrToDateTime(sysDateTime);
        //end else begin
        //  CalendarForm.MonthCalendar.Date := StrToDateTime(HNsGrid1.OriginalCellValue);
        //end;
        // --- DEL 2012/12/18 --------- <<<<<<<<<<<<<<<<

        // --- ADD 2012/12/18 --------- >>>>>>>>>>>>>>>
        // 仕入日よりカレンダーの初期値設定
        cellValue := HNsGrid1.LogicalCells[ctCol_StockDate, 0, HNsGrid1.Row div 2];
        if (cellValue = '') then begin
          sysDateTime := FormatDateTime('yyyy/mm/dd',Now());
          CalendarForm.MonthCalendar.Date := StrToDateTime(sysDateTime);
        end else begin
          if (xCheckDateForStockDate(cellDateValue, cellValue)) then
          begin
            CalendarForm.MonthCalendar.Date := cellDateValue;
          end
          else
          begin
            sysDateTime := FormatDateTime('yyyy/mm/dd',Now());
            CalendarForm.MonthCalendar.Date := StrToDateTime(sysDateTime);
          end;
        end;
        CalendarForm.MonthCalendar.OnSelect := MonthCalendarSelect;
        // --- ADD 2012/12/18 --------- <<<<<<<<<<<<<<<<

        CalendarForm.ShowModal;

        // --- ADD 2012/12/26 ---- >>>>>>
        valid := False;
        iRow := HNsGrid1.Row div 2 - 1;
        salesRowNo := RCHNB01003UADM.SalesRowNo[iRow];
        cellValueNew := FormatDateTime('yyyy/mm/dd',CalendarForm.MonthCalendar.Date);
        HNsGrid1.OnCellValidate(Sender, HNsGrid1.Col, HNsGrid1.Row, cellValueNew, valid);
        // --- ADD 2012/12/26 ---- <<<<<<

        //フォーカス再セット
        HNsGrid1.FocusCell(ctCol_StockDate, CalendarForm.Row);

        CalendarForm.Release; // ADD 2012/12/17
     end
     // ADD 2012/10/15 --- <<<
     else if (st = 0) then
     begin
       gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, HNsGrid1.LogicalRow);

       xSetDetailRowFormC(salesDetailArray, HNsGrid1.LogicalRow);

       // --- ADD K2016/12/30 譚洪 水野商工㈱　第二売価 ---------->>>>>
       //水野商工㈱と明細備考の場合、グリッドのリフレッシュ処理しない
       if (isOptPermitForMizuno2ndSellPriceCtl) then
       begin
          if ((HNsGrid1.Col <> ctCol_SupplierCdForStock) and (HNsGrid1.Col <> ctCol_DtlNote)) then begin
             xSettingGrid;
          end;
       end
       //水野商工㈱以外の場合、既存そのまま。
       else
       begin
       // --- ADD K2016/12/30 譚洪 水野商工㈱　第二売価 ----------<<<<<

       // --- ADD 2013/01/18 T.Nishi ---------->>>>>
       if (HNsGrid1.Col <> ctCol_SupplierCdForStock) then begin
       // --- ADD 2013/01/18 T.Nishi ----------<<<<<
         xSettingGrid;// ADD 2011/09/13
       // --- ADD 2013/01/18 T.Nishi ---------->>>>>
       end;
       // --- ADD 2013/01/18 T.Nishi ----------<<<<<

       end; // ADD K2016/12/30 譚洪 水野商工㈱

       // ------  ADD K2015/04/01 高騁 森川部品個別依頼------->>>>>
       if (HNsGrid1.Col = ctCol_GoodsMakerCd) then begin
       xAllSecStockInfoProc(HNsGrid1.LogicalRow, False, False);
       end;
       // ------  ADD K2015/04/01 高騁 森川部品個別依頼-------<<<<<
     end
     // --- ADD ZHANGKAI 2010/07/01 ---------->>>>>
     else if (st = 1) then
     begin
       gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

       xSetDetailRowFormC(salesDetailArray,-1);

     end;

     // --- ADD ZHANGKAI 2010/07/01 ----------<<<<<


     // --- ADD 2010/05/31 ----------<<<<<

     // ---ADD 2011/05/30-------------->>>>>
     // -----UPD K2021/07/01 田建委 BLINCIDENT-2527対応----->>>>>
     //if (st = 0) and ((HNsGrid1.Col = ctCol_SupplierCd) or (HNsGrid1.Col = ctCol_SalesCode)) then
     // -----UPD K2021/07/22 陳艶丹 PMKOBETSU-4148対応----->>>>>
     //if (st = 0) and ((HNsGrid1.Col = ctCol_SupplierCd) or (HNsGrid1.Col = ctCol_SalesCode) or (HNsGrid1.Col = ctCol_GoodsMakerCd)) then
     if (st = 0) and ((HNsGrid1.Col = ctCol_SupplierCd) or (HNsGrid1.Col = ctCol_SalesCode) or (HNsGrid1.Col = ctCol_GoodsMakerCd)
                       or ((HNsGrid1.Col = ctCol_WarehouseCode) and (optSalesCostCtrl = 1))) then
     // -----UPD K2021/07/22 陳艶丹 PMKOBETSU-4148対応-----<<<<<
     // -----UPD K2021/07/01 田建委 BLINCIDENT-2527対応-----<<<<<
     begin
       gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

       xSetDetailRowFormC(salesDetailArray,-1);

       xSettingGrid;

       // 明細部変更後発生イベント処理
       xSalesSlipDetailInput_DetailChanged(HNsGrid1.LogicalRow);

       xSlipMemoInfoFormSetting(HNsGrid1.LogicalRow);

       xSalesPriceChanged;
       //画面項目名称設定処理
       xGetDisplayName();   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
     end;
     // ---ADD 2011/05/30--------------<<<<<
  end
  else
  begin
    if SectionCode.Focused then
    begin
      SectionCodeBtnClick(SectionCodeBtn);
    end else if subSectionCode.Focused then
    begin
      subSectionCodeBtnClick(subSectionCodeBtn);
    end else if CustomerCode.Focused then
    begin
      CustomerCodeBtnClick(CustomerCodeBtn);
    end else if SalesEmployeeCd.Focused then
    begin
      EmployeeCdBtnClick(SalesEmployeeCdBtn);
    end else if FrontEmployeeCd.Focused then
    begin
      EmployeeCdBtnClick(FrontEmployeeCdBtn);
    end else if SalesInputCode.Focused then
    begin
      EmployeeCdBtnClick(SalesInputCodeBtn);
    end else if SalesSlipNum.Focused then
    begin
      SalesSlipNumBtnClick(SalesSlipNumBtn);
    end else if CarMngCode.Focused then
    begin
      CarMngCodeBtnClick(CarMngCodeBtn);
    end else if (MakerCode.Focused or ModelCode.Focused or ModelSubCode.Focused) then
    begin
      ModelFullNameBtnClick(ModelFullNameBtn);
    end else if (SlipNoteCode.Focused or SlipNote.Focused) then
    begin
      SlipNoteCodeBtnClick(SlipNotecodeBtn);
    end else if (SlipNote2Code.Focused or SlipNote2.Focused) then
    begin
      SlipNoteCodeBtnClick(SlipNote2codeBtn);
    end else if (SlipNote3Code.Focused or SlipNote3.Focused) then
    begin
      SlipNoteCodeBtnClick(SlipNote3codeBtn);
    end else if (AddresseeCode.Focused or AddresseeName.Focused) then
    begin
      CustomerCodeBtnClick(AddresseeCodeBtn);
    end else if RetGoodsReason.Focused then
    begin
      RetGoodsReasonBtnClick(RetGoodsReasonBtn);
    // --- UPD 2014/05/28 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
    // 車輌備考コード・車輌備考の両方でガイドを有効にする
    //// --- UPD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
    ////end else if CarSlipNote.Focused then
    //end else if CarNoteCode.Focused then
    //// --- UPD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------<<<<<
    end else if (CarSlipNote.Focused or CarNoteCode.Focused) then
    // --- UPD 2014/05/28 T.Miyamoto 仕掛一覧№2218 ------------------------------<<<<<
    begin
      SlipNoteGuideBtnClick(SlipNoteGuideBtn);
    end;
  end;
end;
// ADD 2012/12/18 ---------- >>>>>>>>>>>>>>
//*************************************************************************
// カレンダーで選択された日付を仕入日に設定
//*************************************************************************
procedure TForm4.MonthCalendarSelect(Sender: TObject);
var
  MonthCalendar : TCustomMonthCalendar;
  tempStr : string;
  valid : Boolean;
begin
  MonthCalendar := Sender as TCustomMonthCalendar;
  tempStr := FormatDateTime('yyyy/mm/dd',MonthCalendar.Date);

  HNsGrid1.GridCells[HNsGrid1.Col,HNsGrid1.Row] := tempStr;
//  HNsGrid1.OnCellValidate(Sender, HNsGrid1.Col, HNsGrid1.Row, tempStr, valid);  // DEL 2012/12/26
end;
// ADD 2012/12/18 ---------- <<<<<<<<<<<<<<<<

//*************************************************************************
//  右クリック処理
//*************************************************************************

procedure TForm4.HNsGrid1MouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
var  icol ,iRow:Integer; //ADD 2010/07/16
ret:Boolean; // 2011/02/01
targetRow, grideEndRow, I: Integer; // 2011/04/04
m, n, startRowNo, endRowNo : Integer;  // 2011/05/18
begin


  //-----ADD START 2011/07/19---------->>>>
  if salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly then
  begin
    Exit;
  end;
  //-----ADD END 2011/07/19----------<<<<

  // --- DEL 2013/01/23 T.Nishi ---------->>>>>
  //// --- ADD 2012/10/29 Wakita ---------->>>>>
  //// 保存していたグリッドカラーを戻す
  //for I := 1 to HNsGrid1.RowCount do
  //begin
  //  if (HNsGrid1.Colors[0, I] = ctFixRowColor) then
  //  begin
  //    HNsGrid1.Colors[0, I] := guideColorsSaveArray[I];
  //    HNsGrid1.ColorsTo[0, I] := guideColorsToSaveArray[I];
  //  end;
  //end;
  //// --- ADD 2012/10/29 Wakita ----------<<<<<
  // --- DEL 2013/01/23 T.Nishi ---------->>>>>

   //>>>2011/04/04
  if (Button = mbLeft) then begin

    gMouseDownFlg := True;

    HNsGrid1.MouseToCell(X,Y,iCol_Mouse,iRow_Mouse);

    if  (iCol_Mouse = 0) then
    begin
      gridStartRow := iRow_Mouse div 2;
    end
    else
    begin
//      gridStartRow := -2; // DEL 2011/04/13
      gridStartRow := 0; // ADD 2011/04/13
      gMouseDownFlg := False;
// --- DEL 2013/02/01 Wakita ---------->>>>>
//  // --- UPD 2013/01/23 T.Nishi ---------->>>>>
//// --- DEL 2012/10/29 Wakita ---------->>>>>
//      for I := 0 to HNsGrid1.RowCount do
//      begin
//        HNsGrid1.Colors[0, I] := clNone;
//        HNsGrid1.ColorsTo[0, I] := clNone;
//      end;
//// --- DEL 2012/10/29 Wakita ----------<<<<<
//  // --- UPD 2013/01/23 T.Nishi ----------<<<<<
// --- DEL 2013/02/01 Wakita ----------<<<<<
  // --- ADD 2013/02/01 Wakita ---------->>>>>
    // 保存していたグリッドカラーを戻す
    for I := 1 to HNsGrid1.RowCount do
    begin
      if (HNsGrid1.Colors[0, I] = ctFixRowColor) then
      begin
        HNsGrid1.Colors[0, I] := guideColorsSaveArray[I];
        HNsGrid1.ColorsTo[0, I] := guideColorsToSaveArray[I];
      end;
    end;
    // --- ADD 2013/02/01 Wakita ----------<<<<<
    end;

//    if (iRow_Mouse = -1) then // DEL 2011/04/13
    if (iRow_Mouse < 2) then // ADD 2011/04/13
    begin
      grideEndRow := HNsGrid1.RowCount div 2;
    end
    else
    begin
      grideEndRow := iRow_Mouse div 2;
    end;

  // --- UPD 2013/01/23 T.Nishi ---------->>>>>
// --- DEL 2012/10/29 Wakita ---------->>>>>
    if (gridStartRow > grideEndRow) then
    begin
// --- DEL 2013/02/01 Wakita ---------->>>>>
//      for I := 1 to HNsGrid1.RowCount do
//      begin
//        HNsGrid1.Colors[0, I] := clNone;
//        HNsGrid1.ColorsTo[0, I] := clNone;
//      end;
// --- DEL 2013/02/01 Wakita ----------<<<<<
      // --- ADD 2013/02/01 Wakita ---------->>>>>
      // 保存していたグリッドカラーを戻す
      for I := 1 to HNsGrid1.RowCount do
      begin
        if (HNsGrid1.Colors[0, I] = ctFixRowColor) then
        begin
          HNsGrid1.Colors[0, I] := guideColorsSaveArray[I];
          HNsGrid1.ColorsTo[0, I] := guideColorsToSaveArray[I];
        end;
      end;
      // --- ADD 2013/02/01 Wakita ----------<<<<<
    end else if (gridStartRow = grideEndRow) then
    begin
// --- DEL 2013/02/01 Wakita ---------->>>>>
//      for I := 0 to HNsGrid1.RowCount do
//      begin
//        HNsGrid1.Colors[0, I] := clNone;
//        HNsGrid1.ColorsTo[0, I] := clNone;
//      end;
// --- DEL 2013/02/01 Wakita ----------<<<<<
      // --- ADD 2013/02/01 Wakita ---------->>>>>
      // 保存していたグリッドカラーを戻す
      for I := 1 to HNsGrid1.RowCount do
      begin
        if (HNsGrid1.Colors[0, I] = ctFixRowColor) then
        begin
          HNsGrid1.Colors[0, I] := guideColorsSaveArray[I];
          HNsGrid1.ColorsTo[0, I] := guideColorsToSaveArray[I];
        end;
      end;
      // --- ADD 2013/02/01 Wakita ----------<<<<<
    end else
    begin
// --- DEL 2013/02/01 Wakita ---------->>>>>
//      for I := 1 to HNsGrid1.RowCount do
//      begin
//        HNsGrid1.Colors[0, I] := clNone;
//        HNsGrid1.ColorsTo[0, I] := clNone;
//      end;
// --- DEL 2013/02/01 Wakita ----------<<<<<
      // --- ADD 2013/02/01 Wakita ---------->>>>>
      // 保存していたグリッドカラーを戻す
      for I := 1 to HNsGrid1.RowCount do
      begin
        if (HNsGrid1.Colors[0, I] = ctFixRowColor) then
        begin
          HNsGrid1.Colors[0, I] := guideColorsSaveArray[I];
          HNsGrid1.ColorsTo[0, I] := guideColorsToSaveArray[I];
        end;
      end;
      // --- ADD 2013/02/01 Wakita ----------<<<<<
    end;
// --- DEL 2012/10/29 Wakita ----------<<<<<
  // --- UPD 2013/01/23 T.Nishi ----------<<<<<

    if  (iCol_Mouse = 0) then begin
  // --- DEL 2013/01/23 T.Nishi ---------->>>>>
//// --- ADD 2012/10/29 Wakita ---------->>>>>
//      if (HNsGrid1.Colors[0, grideEndRow * 2] <> ctFixRowColor) then
//      begin
//        guideColorsSaveArray[grideEndRow * 2] := HNsGrid1.Colors[0, grideEndRow * 2];
//        guideColorsToSaveArray[grideEndRow * 2] := HNsGrid1.ColorsTo[0, grideEndRow * 2];
//      end;
//// --- ADD 2012/10/29 Wakita ----------<<<<<
  // --- DEL 2013/01/23 T.Nishi ---------->>>>>
// --- ADD 2013/02/01 Wakita ---------->>>>>
      if (HNsGrid1.Colors[0, grideEndRow * 2] <> ctFixRowColor) then
      begin
        guideColorsSaveArray[grideEndRow * 2] := HNsGrid1.Colors[0, grideEndRow * 2];
        guideColorsToSaveArray[grideEndRow * 2] := HNsGrid1.ColorsTo[0, grideEndRow * 2];
      end;
// --- ADD 2013/02/01 Wakita ----------<<<<<
      HNsGrid1.Colors[0, grideEndRow * 2] := ctFixRowColor;
      HNsGrid1.ColorsTo[0, grideEndRow * 2] := ctFixRowColorTo;
    end;
  end;

  if (Button = mbRight) then begin

    HNsGrid1.MouseToCell(X,Y,iCol_Mouse,iRow_Mouse);

    if (iRow_Mouse = -1) then
    begin
      targetRow := HNsGrid1.RowCount div 2;
    end else begin
      targetRow := iRow_Mouse div 2;
    end;

    if ((HNsGrid1.Colors[0, targetRow * 2]) <> ctFixRowColor) then begin
// --- DEL 2013/02/01 Wakita ---------->>>>>
//  // --- UPD 2013/01/23 T.Nishi ---------->>>>>
//// --- DEL 2012/10/29 Wakita ---------->>>>>
//      for I := 1 to HNsGrid1.RowCount do begin
//        HNsGrid1.Colors[0, I] := clNone;
//        HNsGrid1.ColorsTo[0, I] := clNone;
//      end;
//// --- DEL 2012/10/29 Wakita ----------<<<<<
//  // --- UPD 2013/01/23 T.Nishi ----------<<<<<
// --- DEL 2013/02/01 Wakita ----------<<<<<
      // --- ADD 2013/02/01 Wakita ---------->>>>>
      // 保存していたグリッドカラーを戻す
      for I := 1 to HNsGrid1.RowCount do
      begin
        if (HNsGrid1.Colors[0, I] = ctFixRowColor) then
        begin
          HNsGrid1.Colors[0, I] := guideColorsSaveArray[I];
          HNsGrid1.ColorsTo[0, I] := guideColorsToSaveArray[I];
        end;
      end;
      // --- ADD 2013/02/01 Wakita ----------<<<<<
//      if  (iCol_Mouse = 0) then begin // DEL 2011/04/13
      if ((iCol_Mouse = 0) and (targetRow > 0)) then begin // ADD 2011/04/13
  // --- DEL 2013/01/23 T.Nishi ---------->>>>>
//// --- ADD 2012/10/29 Wakita ---------->>>>>
//        if (HNsGrid1.Colors[0, grideEndRow * 2] <> ctFixRowColor) then
//        begin
//          guideColorsSaveArray[targetRow * 2] := HNsGrid1.Colors[0, targetRow * 2];
//          guideColorsToSaveArray[targetRow * 2] := HNsGrid1.ColorsTo[0, targetRow * 2];
//        end;
//// --- ADD 2012/10/29 Wakita ----------<<<<<
  // --- DEL 2013/01/23 T.Nishi ----------<<<<<
// --- ADD 2013/02/01 Wakita ---------->>>>>
        if (HNsGrid1.Colors[0, targetRow * 2] <> ctFixRowColor) then
        begin
          guideColorsSaveArray[targetRow * 2] := HNsGrid1.Colors[0, targetRow * 2];
          guideColorsToSaveArray[targetRow * 2] := HNsGrid1.ColorsTo[0, targetRow * 2];
        end;
// --- ADD 2013/02/01 Wakita ----------<<<<<
        HNsGrid1.Colors[0, targetRow * 2] := ctFixRowColor;
        HNsGrid1.ColorsTo[0, targetRow * 2] := ctFixRowColorTo;
      end;
    end;

  end;
  //<<<2011/04/04

   if (Button = mbRight ) then
   begin
     if (Y > 46) then
     begin
       // --- ADD 2010/07/16 ---------->>>>>
       HNsGrid1.MouseToCell(X,Y,iCol_Mouse,iRow_Mouse);

       //if iRow_Mouse > 0 then // DEL 2010/10/21
       if ((iRow_Mouse > 0) and (iCol_Mouse = 0)) then // ADD 2010/10/21
       begin
         iLogicalRow_Mouse := iRow_Mouse div 2;

         //>>>2011/02/01
        // SCM情報ありの伝票の場合、行操作不可
        if (salesSlip_disp.InquiryNumber <> 0) then begin
          if (salesSlip_disp.SalesSlipNum <> ctDefaultSalesSlipNum) then begin
// --- DEL 2014/10/03 Wakita 仕掛一覧№1912 システムテスト障害一覧No.19 ---------->>>>>
//            //>>>2011/03/09
////            rowInsert.Enabled := False; //挿入
////            rowDelete.Enabled := False; // 削除
////            rowCut.Enabled := False;   // 切取
////            rowCopy.Enabled := False;   // コピー
////
////            InSertPop.Enabled := False; //挿入
////            DeletePop.Enabled := False; // 削除
////            CutPop.Enabled := False;   // 切取
////            CopyPop.Enabled := False;   // コピー
//
//            gpxMAHNB01013B_ExistSCMInfo(ret, salesSlip_disp.SalesSlipNum, RCHNB01003UADM.SalesRowNo[iLogicalRow_Mouse-1]);
//            if (ret) then begin
//              rowInsert.Enabled := False; //挿入
//              rowDelete.Enabled := False; // 削除
//              rowCut.Enabled := False;   // 切取
//              rowCopy.Enabled := False;   // コピー
//
//              InSertPop.Enabled := False; //挿入
//              DeletePop.Enabled := False; // 削除
//              CutPop.Enabled := False;   // 切取
//              CopyPop.Enabled := False;   // コピー
//            end;
//            //<<<2011/03/09
// --- DEL 2014/10/03 Wakita 仕掛一覧№1912 システムテスト障害一覧No.19 ---------->>>>>

            // --- ADD 2014/10/03 Wakita 仕掛一覧№1912 システムテスト障害一覧No.19 ----------<<<<<
            startRowNo := -1;
            endRowNo := -1;

            // 初始行番号を取得
            for m := 0 to HNsGrid1.RowCount - 1 do
            begin
              if ((HNsGrid1.Colors[0, m] = ctFixRowColor) and
                  (HNsGrid1.ColorsTo[0, m] = ctFixRowColorTo)) then
              begin
                startRowNo := m div 2;
                Break;
              end;
            end;

            // 最終行番号を取得
            for n := HNsGrid1.RowCount - 1 downto 0 do
            begin
              if ((HNsGrid1.Colors[0, n] = ctFixRowColor) and
                 (HNsGrid1.ColorsTo[0, n] = ctFixRowColorTo)) then
              begin
                endRowNo := n div 2;
                Break;
              end;
            end;

            for i := startRowNo to endRowNo do
            begin
              // SCM情報存在チェック
              gpxMAHNB01013B_ExistSCMInfo(ret, salesSlip_disp.SalesSlipNum, i);
              if (ret) then begin
                Break;
              end;
            end;

            if (ret) then
            begin
              rowInsert.Enabled := False; // 挿入
              rowDelete.Enabled := False; // 削除
              rowCut.Enabled := False;    // 切取
              rowCopy.Enabled := False;   // コピー

              InSertPop.Enabled := False; // 挿入
              DeletePop.Enabled := False; // 削除
              CutPop.Enabled := False;    // 切取
              CopyPop.Enabled := False;   // コピー
            end
            else
            begin
              rowInsert.Enabled := True; // 挿入
              rowDelete.Enabled := True; // 削除
              rowCut.Enabled := True;    // 切取
              rowCopy.Enabled := True;   // コピー

              InSertPop.Enabled := True; // 挿入
              DeletePop.Enabled := True; // 削除
              CutPop.Enabled := True;    // 切取
              CopyPop.Enabled := True;   // コピー
            end;
            // --- ADD 2014/10/03 Wakita 仕掛一覧№1912 システムテスト障害一覧No.19 ----------<<<<<
          end else begin
            //>>>2011/03/5
//            gpxMAHNB01013B_ExistSCMInfo(ret, salesSlip_disp.SalesSlipNum, RCHNB01003UADM.SalesRowNo[iLogicalRow_Mouse-1]);
//            if (ret) then begin
//              rowInsert.Enabled := False; //挿入
//              rowDelete.Enabled := False; // 削除
//              rowCut.Enabled := False;   // 切取
//              rowCopy.Enabled := False;   // コピー
//
//              InSertPop.Enabled := False; //挿入
//              DeletePop.Enabled := False; // 削除
//              CutPop.Enabled := False;   // 切取
//              CopyPop.Enabled := False;   // コピー
//            end;
            //>>>2011/03/5

          end;
        end
        // ----ADD 2011/05/18----------->>>>>
        else
        begin
           startRowNo := -1;
           endRowNo := -1;
           // 初始行番号を取得
           for m := 0 to HNsGrid1.RowCount - 1 do
           begin
             if ((HNsGrid1.Colors[0, m] = ctFixRowColor) and
                (HNsGrid1.ColorsTo[0, m] = ctFixRowColorTo)) then
             begin
               startRowNo := m div 2;
               Break;
             end;
           end;

           // 最終行番号を取得
           for n := HNsGrid1.RowCount - 1 downto 0 do
           begin
             if ((HNsGrid1.Colors[0, n] = ctFixRowColor) and
                (HNsGrid1.ColorsTo[0, n] = ctFixRowColorTo)) then
             begin
               endRowNo := n div 2;
               Break;
             end;
           end;

           if (endRowNo > startRowNo) then
           begin
              rowInsert.Enabled := False; //挿入
              rowCut.Enabled := False;   // 切取
              rowCopy.Enabled := False;   // コピー
              rowPaste.Enabled := False;   // 貼り付け

              InSertPop.Enabled := False; //挿入
              CutPop.Enabled := False;   // 切取
              CopyPop.Enabled := False;   // コピー
              PastePop.Enabled := False;   // 貼り付け

              // --- ADD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ---------->>>>>
              rowDelete.Enabled := xRowDelChkFromTo(startRowNo, endRowNo);
              DeletePop.Enabled := xRowDelChkFromTo(startRowNo, endRowNo);
              // --- ADD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ----------<<<<<
           end
           else
           begin
              xActiveCellButtonEnabledControl('',startRowNo);
              // ----ADD 2011/05/18-----------<<<<<
          end;
        end;
         //<<<2011/02/01

         iFlag_Mouse := True;

         // ----ADD 2010/07/16----------->>>>>
         pm1.Popup(mouse.CursorPos.X,mouse.CursorPos.Y);
       end;

     end;
   end;

   // -------ADD 2010/11/01------->>>>>
   // 車両情報設定処理
    xCarInfoFormSetting(HNsGrid1.LogicalRow);
   // -------ADD 2010/11/01-------<<<<<
end;


//>>>2011/04/04
procedure TForm4.HNsGrid1MouseMove(Sender: TObject; Shift: TShiftState; X,
  Y: Integer);
var
  grideEndRow, I :Integer;

begin

  if (gMouseDownFlg) then begin

    HNsGrid1.MouseToCell(X,Y,iCol_Mouse,iRow_Mouse);

    if (gridStartRow = -2) then
    begin
      Exit;
    end;

    if  ((iCol_Mouse <> 0) and (iCol_Mouse <> -1)) then
    begin
      Exit;
    end;


    if (iRow_Mouse = -1) then
    begin
      grideEndRow := HNsGrid1.RowCount div 2;
    end
    else
    begin
      grideEndRow := iRow_Mouse div 2;
    end;

    if (gridStartRow > grideEndRow) then
    begin
// --- DEL 2013/02/01 Wakita ---------->>>>>
//  // --- UPD 2013/01/23 T.Nishi ---------->>>>>
//// --- DEL 2012/10/29 Wakita ---------->>>>>
//      for I := 1 to HNsGrid1.RowCount do
//      begin
//        HNsGrid1.Colors[0, I] := clNone;
//        HNsGrid1.ColorsTo[0, I] := clNone;
//      end;
//// --- DEL 2012/10/29 Wakita ----------<<<<<
//  // --- UPD 2013/01/23 T.Nishi ----------<<<<<
// --- DEL 2013/02/01 Wakita ----------<<<<<
      // --- ADD 2013/02/01 Wakita ---------->>>>>
      // 保存していたグリッドカラーを戻す
      for I := 1 to HNsGrid1.RowCount do
      begin
        if (HNsGrid1.Colors[0, I] = ctFixRowColor) then
        begin
          HNsGrid1.Colors[0, I] := guideColorsSaveArray[I];
          HNsGrid1.ColorsTo[0, I] := guideColorsToSaveArray[I];
        end;
      end;
      // --- ADD 2013/02/01 Wakita ----------<<<<<

      for I := grideEndRow to gridStartRow do
      begin

        if (I = 0) then
        begin
          Continue;
        end;
  // --- DEL 2013/01/23 T.Nishi ---------->>>>>
//// --- ADD 2012/10/29 Wakita ---------->>>>>
//        if (HNsGrid1.Colors[0, I * 2] <> ctFixRowColor) then
//        begin
//          guideColorsSaveArray[I * 2] := HNsGrid1.Colors[0, I * 2];
//          guideColorsToSaveArray[I * 2] := HNsGrid1.ColorsTo[0, I * 2];
//        end;
//// --- ADD 2012/10/29 Wakita ----------<<<<<
  // --- DEL 2013/01/23 T.Nishi ----------<<<<<
// --- ADD 2013/02/01 Wakita ---------->>>>>
        if (HNsGrid1.Colors[0, I * 2] <> ctFixRowColor) then
        begin
          guideColorsSaveArray[I * 2] := HNsGrid1.Colors[0, I * 2];
          guideColorsToSaveArray[I * 2] := HNsGrid1.ColorsTo[0, I * 2];
        end;
// --- ADD 2013/02/01 Wakita ----------<<<<<
        HNsGrid1.Colors[0, I * 2] := ctFixRowColor;
        HNsGrid1.ColorsTo[0, I * 2] := ctFixRowColorTo;

      end;
    end else if (gridStartRow = grideEndRow) then
    begin
// --- DEL 2013/02/01 Wakita ---------->>>>>
//  // --- UPD 2013/01/23 T.Nishi ---------->>>>>
//// --- DEL 2012/10/29 Wakita ---------->>>>>
//      for I := 0 to HNsGrid1.RowCount do
//      begin
//        HNsGrid1.Colors[0, I] := clNone;
//        HNsGrid1.ColorsTo[0, I] := clNone;
//      end;
//// --- DEL 2012/10/29 Wakita ----------<<<<<
//  // --- UPD 2013/01/23 T.Nishi ----------<<<<<
// --- DEL 2013/02/01 Wakita ----------<<<<<
      // --- ADD 2013/02/01 Wakita ---------->>>>>
      // 保存していたグリッドカラーを戻す
      for I := 1 to HNsGrid1.RowCount do
      begin
        if (HNsGrid1.Colors[0, I] = ctFixRowColor) then
        begin
          HNsGrid1.Colors[0, I] := guideColorsSaveArray[I];
          HNsGrid1.ColorsTo[0, I] := guideColorsToSaveArray[I];
        end;
      end;
      // --- ADD 2013/02/01 Wakita ----------<<<<<

      if (gridStartRow <> 0) then
      begin
  // --- DEL 2013/01/23 T.Nishi ---------->>>>>
//// --- ADD 2012/10/29 Wakita ---------->>>>>
//        if (HNsGrid1.Colors[0, gridStartRow * 2] <> ctFixRowColor) then
//        begin
//          guideColorsSaveArray[gridStartRow * 2] := HNsGrid1.Colors[0, gridStartRow * 2];
//          guideColorsToSaveArray[gridStartRow * 2] := HNsGrid1.ColorsTo[0, gridStartRow * 2];
//        end;
//// --- ADD 2012/10/29 Wakita ----------<<<<<
  // --- DEL 2013/01/23 T.Nishi ----------<<<<<
// --- ADD 2013/02/01 Wakita ---------->>>>>
        if (HNsGrid1.Colors[0, gridStartRow * 2] <> ctFixRowColor) then
        begin
          guideColorsSaveArray[gridStartRow * 2] := HNsGrid1.Colors[0, gridStartRow * 2];
          guideColorsToSaveArray[gridStartRow * 2] := HNsGrid1.ColorsTo[0, gridStartRow * 2];
        end;
// --- ADD 2013/02/01 Wakita ----------<<<<<
        HNsGrid1.Colors[0, gridStartRow * 2] := ctFixRowColor;
        HNsGrid1.ColorsTo[0, gridStartRow * 2] := ctFixRowColorTo;
      end;
    end else
    begin
// --- DEL 2013/02/01 Wakita ---------->>>>>
//  // --- UPD 2013/01/23 T.Nishi ---------->>>>>
//// --- DEL 2012/10/29 Wakita ---------->>>>>
//      for I := 1 to HNsGrid1.RowCount do
//      begin
//        HNsGrid1.Colors[0, I] := clNone;
//        HNsGrid1.ColorsTo[0, I] := clNone;
//      end;
//// --- DEL 2012/10/29 Wakita ----------<<<<<
//  // --- UPD 2013/01/23 T.Nishi ----------<<<<<
// --- DEL 2013/02/01 Wakita ----------<<<<<
      // --- ADD 2013/02/01 Wakita ---------->>>>>
      // 保存していたグリッドカラーを戻す
      for I := 1 to HNsGrid1.RowCount do
      begin
        if (HNsGrid1.Colors[0, I] = ctFixRowColor) then
        begin
          HNsGrid1.Colors[0, I] := guideColorsSaveArray[I];
          HNsGrid1.ColorsTo[0, I] := guideColorsToSaveArray[I];
        end;
      end;
      // --- ADD 2013/02/01 Wakita ----------<<<<<

      for I := gridStartRow to grideEndRow do
      begin

        if (I = 0) then
        begin
          Continue;
        end;
  // --- DEL 2013/01/23 T.Nishi ---------->>>>>
//// --- ADD 2012/10/29 Wakita ---------->>>>>
//        if (HNsGrid1.Colors[0, I * 2] <> ctFixRowColor) then
//        begin
//          guideColorsSaveArray[I * 2] := HNsGrid1.Colors[0, I * 2];
//          guideColorsToSaveArray[I * 2] := HNsGrid1.ColorsTo[0, I * 2];
//        end;
//// --- ADD 2012/10/29 Wakita ----------<<<<<
  // --- DEL 2013/01/23 T.Nishi ----------<<<<<
// --- ADD 2013/02/01 Wakita ---------->>>>>
        if (HNsGrid1.Colors[0, I * 2] <> ctFixRowColor) then
        begin
          guideColorsSaveArray[I * 2] := HNsGrid1.Colors[0, I * 2];
          guideColorsToSaveArray[I * 2] := HNsGrid1.ColorsTo[0, I * 2];
        end;
// --- ADD 2013/02/01 Wakita ----------<<<<<

        HNsGrid1.Colors[0, I * 2] := ctFixRowColor;
        HNsGrid1.ColorsTo[0, I * 2] := ctFixRowColorTo;
      end;
    end;
  end;

end;

procedure TForm4.HNsGrid1MouseUp(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
  var
  grideEndRow, I :Integer;
begin
  if (Button = mbLeft) then begin
    gMouseDownFlg := False;
  end;

end;

//<<<2011/04/04

// --- ADD K2019/07/31 陳艶丹　PMKOBETSU-539の対応 ---------->>>>>
procedure TForm4.HNsGrid1MouseWheel(Sender: TObject; Shift: TShiftState;
  MousePos: TPoint; var Handled: Boolean);
begin
  // 森川オプションありの場合、マウスホイール動作は無効化になる。
  if(isOptPermitForMoriKawa) then begin
    Handled := true;
  end;
end;
// --- ADD K2019/07/31 陳艶丹　PMKOBETSU-539の対応 ----------<<<<

procedure TForm4.HNsGrid1OnGridHint(Sender: TObject; ARow, ACol: Integer;
var hintstr: string);
var
   salesRowNo :Integer;
   StockCountInfo, tipString: WideString;
begin


    salesRowNo := RCHNB01003UADM.SalesRowNo[ARow div 2 - 1];
    // 倉庫
    if ((ACol = ctCol_WarehouseCode) and ((ARow mod 2) = 0)) then
    begin
      if Underlineflag = true then
      begin
          tipString := '倉庫情報' + '在庫移動が行われている為、編集できません。';
      end
    // 出荷数
    end else
    if ((ACol = ctCol_ShipmentCntDisplay) and ((ARow mod 2) = 1)) then
    begin
        if ((RCHNB01003UADM.AcptAnOdrStatus[salesRowNo -1] <> acptAnOdrStatusState_AcceptAnOrder)
            and (gpxMAHNB01013B_GridJoinCheck(salesRowNo, ARow, -1, 1) = 0)) then
        begin
            // --- ADD 2016/01/21 Wakita ---------->>>>>
            if ((RCHNB01003UADM.AcptAnOdrStatus[salesRowNo -1] = acptAnOdrStatusState_Shipment) and //受注ステータス＝40:貸出
                (RCHNB01003UADM.AcptAnOdrStatusSrc[salesRowNo -1] = 0) and                          //受注ステータス(元)＝0→元伝
                (RCHNB01003UADM.SalesSlipDtlNum[salesRowNo -1] <> 0)) then                          //売上明細通番≠0→新規明細以外
            begin
              //貸出伝票修正時のヒント表示はAppShowHint（※ApplicationのOnShowHintイベント）で行う
            end else begin
            // --- ADD 2016/01/21 Wakita ----------<<<<<
            gpxMAHNB01012B_CreateStockCountInfoString(salesRowNo, StockCountInfo);
            if StockCountInfo <> '' then
            begin
               hintstr := '数量情報' + StockCountInfo;
            end;
            // --- ADD 2016/01/21 Wakita ---------->>>>>
            end;
            // --- ADD 2016/01/21 Wakita ----------<<<<<
        end;


    // 受注数
    end else if ((ACol = ctCol_AcceptAnOrderCntDisplay) and ((ARow mod 2) = 0)) then
    begin
        if (((RCHNB01003UADM.AcptAnOdrStatus[salesRowNo -1] = acptAnOdrStatusState_AcceptAnOrder)
            or (RCHNB01003UADM.AcptAnOdrStatusSrc[salesRowNo -1] = acptAnOdrStatusState_Estimate))
            and (gpxMAHNB01013B_GridJoinCheck(salesRowNo, ARow, -1, 1) = 0)) then
        begin
            // --- ADD 2016/01/21 Wakita ---------->>>>>
            if ((RCHNB01003UADM.AcptAnOdrStatus[salesRowNo -1] = acptAnOdrStatusState_AcceptAnOrder) and  //受注ステータス＝20:受注
                (RCHNB01003UADM.AcptAnOdrStatusSrc[salesRowNo -1] = 0) and                                //受注ステータス(元)＝0→元伝
                (RCHNB01003UADM.SalesSlipDtlNum[salesRowNo -1] <> 0)) then                                //売上明細通番≠0→新規明細以外
            begin
              //受注伝票修正時のヒント表示はAppShowHint（※ApplicationのOnShowHintイベント）で行う
            end else begin
            // --- ADD 2016/01/21 Wakita ----------<<<<<
            gpxMAHNB01012B_CreateStockCountInfoString(salesRowNo, StockCountInfo);
            if StockCountInfo <> '' then
            begin
               hintstr := '数量情報' + StockCountInfo;
            end;
            // --- ADD 2016/01/21 Wakita ---------->>>>>
            end;
            // --- ADD 2016/01/21 Wakita ----------<<<<<
        end;
    end;
end;

//*************************************************************************
//  RowChanging処理
//*************************************************************************
procedure TForm4.HNsGrid1RowChanging(Sender: TObject; OldRow, NewRow: Integer;
  var Allow: Boolean);
var OldRowLogic,NewRowLogic:Integer;
    newRowNo : Integer;
    status : Integer; // ADD 2010/07/01
    //---ADD 2011/10/29---------->>>>
    salesRowNo : Integer;
    salesDetailArray: TSalesSlipInputCustomArrayA2;
    //---ADD 2011/10/29----------<<<<
begin
   OldRowLogic:= (OldRow div 2) -1;
   NewRowLogic := (NewRow div 2) -1;
   newRowNo := NewRowLogic + 1;
   salesRowNo := RCHNB01003UADM.SalesRowNo[OldRowLogic];  // ADD 2011/10/29

   // --- ADD 2014/09/01 Wakita ---------->>>>>
   // 品番検索
   if (i_searchPartsMode = ctGoodsNoSearch) then
   begin
     if (NewRowLogic = -1) then
     begin
       HNsGrid1.LogicalFocusCell(ctCol_BLGoodsCode, ctRow_BLGoodsCode, (OldRow div 2));
     end;
   end;
   // --- ADD 2014/09/01 Wakita ----------<<<<<

   if (OldRowLogic <> NewRowLogic) then
   begin
////      gpxMAHNB01012B_CheckDetailAction(OldRowLogic, NewRowLogic ,1);
////
////      gpxMAHNB01012B_CheckDetailAction(OldRowLogic, NewRowLogic ,2);
////
////      Allow :=  True;
////
////      xSlipMemoInfoFormSetting(NewRowLogic + 1);
////
////      // 車両情報設定処理
////      xCarInfoFormSetting(NewRowLogic + 1);
//
    rowChangedFlg := True;     // ADD 2011/07/20
     //---ADD 2011/10/29---------->>>>
    if rowChangedFlg then
    begin
       gpxMAHNB01013B_StockInfoAdjust();

       gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
       if (salesDetailArray.Csafield1Count <> 0) then // ADD 2012/01/20 Redmine28098
       begin
         xSetDetailRowFormC(salesDetailArray, salesRowNo);
       end;
       rowChangedFlg := False;
    end;
    //---ADD 2011/10/29----------<<<<
    // 明細部変更後発生イベント処理
    xSalesSlipDetailInput_DetailChanged(newRowNo);
//   OldRowLogic:= (OldRow div 2) -1;
//   NewRowLogic := (NewRow div 2) -1;
//
//   status := gpxMAHNB01013B_CheckDetailAction(OldRowLogic, NewRowLogic ,2);
//
//   if (status = -1) then
//   begin
//     HNsGrid1.GotoCell(ctCol_SalesRate, (OldRow div 2) * 2 + 1);
//     Allow := False;
//   end;
     Exit;        // ADD 2011/07/20
   end;
   rowChangedFlg := False;     // ADD 2011/07/20
end;

procedure TForm4.HNsGrid1SelectCell(Sender: TObject; ACol, ARow: Integer;
  var CanSelect: Boolean);
//var // 2011/01/13
//  stemp: string; // 2010/12/16 // 2011/01/13
begin

//>>>2011/01/13
////>>>2010/12/16
//  // 売上金額
//  if (ACol = ctCol_SalesMoneyDisplay) then begin
//    stemp := StringReplace(HNsGrid1.Cells[ACol, ARow], ',', '', [rfReplaceAll]);
//    beforeSalesMoney := strtofloatdef(stemp, 0);
//  end;
//
//  // 売単価
//  if (ACol = ctCol_SalesUnPrcDisplay) then begin
//    stemp := StringReplace(HNsGrid1.Cells[ACol, ARow], ',', '', [rfReplaceAll]);
//    beforeSalesUnPrc := strtofloatdef(stemp, 0);
//  end;
//
//  // 売価率
//  if (ACol = ctCol_SalesRate) then begin
//    stemp := StringReplace(HNsGrid1.Cells[ACol, ARow], ',', '', [rfReplaceAll]);
//    beforeSalesRate := strtofloatdef(stemp, 0);
//  end;
//
//  // 原価率
//  if (ACol = ctCol_CostRate) then begin
//    stemp := StringReplace(HNsGrid1.Cells[ACol, ARow], ',', '', [rfReplaceAll]);
//    beforeCostRate := strtofloatdef(stemp, 0);
//  end;
//
//  // 原単価
//  if (ACol = ctCol_SalesUnitCost) then begin
//    stemp := StringReplace(HNsGrid1.Cells[ACol, ARow], ',', '', [rfReplaceAll]);
//    beforeSalesUnitCost := strtofloatdef(stemp, 0);
//  end;
//
//  // 標準価格
//  if (ACol = ctCol_ListPriceDisplay) then begin
//    stemp := StringReplace(HNsGrid1.Cells[ACol, ARow], ',', '', [rfReplaceAll]);
//    beforeListPrice := strtofloatdef(stemp, 0);
//  end;
//
//  // 出荷数
//  if (ACol = ctCol_ShipmentCntDisplay) then begin
//    stemp := StringReplace(HNsGrid1.Cells[ACol, ARow], ',', '', [rfReplaceAll]);
//    beforeShipmentCnt := strtofloatdef(stemp, 0);
//  end;
//
//  // 受注数
//  if (ACol = ctCol_AcceptAnOrderCntDisplay) then begin
//    stemp := StringReplace(HNsGrid1.Cells[ACol, ARow], ',', '', [rfReplaceAll]);
//    beforeAcceptAnOrderCnt := strtofloatdef(stemp, 0);
//  end;
//<<<2010/12/16
//<<<2011/01/13


  //品番
//  if (ACol = ctCol_GoodsNo)
//  and ((ARow > 1) and (ARow mod 2 = 1)) then
//  begin
//     xStatusBarMessageSetting(MESSAGE_GoodsCode);
//  end
//  else
//  begin
//    xStatusBarMessageSetting('');
//  end;

end;

procedure TForm4.HNsGrid2CanEditCell(Sender: TObject; ARow, ACol: Integer;
  var CanEdit: Boolean);
begin
  with HNsGrid2 do
  begin
     if ARow <> 0 then
     begin
        case ACol of
        1, 2:
          begin
            CanEdit := false;
          end;
        3:
          begin
            CanEdit := true;
          end;
        end;
     end;
  end;
end;

procedure TForm4.HNsGrid2CheckBoxClick(Sender: TObject; ACol, ARow: Integer;
  State: Boolean);
begin
  setColorFlag := True;

  if ARow = 0 then
  begin
    setColorFlag := False;
    xSetGridSelColColor(HNsGrid4, ACol);
    Exit;
  end;

  xSetGridSelRowColor(HNsGrid2, ARow);

  if edtAcceptAnOrderNo.GetInt() <> 0 then
  begin
    if State then
    begin
      HNsGrid2.AddCheckBox(3, ARow, false, false);
    end else
    begin
      HNsGrid2.AddCheckBox(3, ARow, True, false);
    end;

    Exit;
  end;

  HNsGrid2ClickCell(Sender, ARow, ACol);
end;

procedure TForm4.HNsGrid2ClickCell(Sender: TObject; ARow, ACol: Integer);
var
  rowIndex : Integer;
  colorCD : string;
  State: Boolean;
begin
  if ARow = 0 then
  begin
    setColorFlag := False;
    xSetGridSelColColor(HNsGrid2, ACol);
    Exit;
  end;
  setColorFlag := True;

  if ACol = 0 then
  begin
    xSetGridSelRowColor(HNsGrid2, ARow);
  end;

  if edtAcceptAnOrderNo.GetInt() <> 0 then
  begin
    HNsGrid2.GetCheckBoxState(3, ARow, State);
    if State then
    begin
      HNsGrid2.AddCheckBox(3, ARow, True, false);
    end else
    begin
      HNsGrid2.AddCheckBox(3, ARow, false, false);
    end;

    Exit;
  end;

  HNsGrid2.AddCheckBox(3, ARow, true, false);

  for rowIndex := 1 to HNsGrid2.RowCount - 1 do
  begin
    if rowIndex <> ARow then
    begin
       HNsGrid2.AddCheckBox(3, rowIndex, false, false);
    end;
  end;

  HNsGrid2.RowSelect[ARow] := True;
  //HNsGrid2.RowColorTo[ARow] := $005EC1F1;

  // カラー情報設定処理
  colorCD := HNsGrid2.Cells[1, ARow];
  ColorNo.Text := colorCD;
  gpxMAHNB01012B_SelectColorInfo(i_StringCarRelationGuid, colorCD);
end;

procedure TForm4.HNsGrid2GetEditorType(Sender: TObject; ACol, ARow: Integer;
  var AEditor: TEditorType);
begin
    with HNsGrid2 do
    begin
       if ARow <> 0 then
       begin
          case ACol of
          1, 2:
            begin
              AEditor := edNormal;
              MaxEditLength := 40;
            end;
          3:
            begin
              AEditor := edCheckBox;
            end;
          end;
       end;
    end;
end;

procedure TForm4.HNsGrid2KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  setColorFlag := True;
end;

procedure TForm4.HNsGrid2RowChanging(Sender: TObject; OldRow, NewRow: Integer;
  var Allow: Boolean);
begin
  xSetGridSelRowColor(HNsGrid2, NewRow);
end;

procedure TForm4.HNsGrid2SelectionChanged(Sender: TObject; ALeft, ATop, ARight,
  ABottom: Integer);
begin
  xSetGridSelRowColor(HNsGrid2, ATop);
end;

procedure TForm4.HNsGrid3CanEditCell(Sender: TObject; ARow, ACol: Integer;
  var CanEdit: Boolean);
begin
  with HNsGrid3 do
  begin
     if ARow <> 0 then
     begin
        case ACol of
        1:
          begin
            CanEdit := false;
          end;
        2:
          begin
            if edtAcceptAnOrderNo.GetInt() <> 0 then
            begin
              CanEdit := False;
              Exit;
            end;

            CanEdit := true;
          end;
        end;
     end;
  end;
end;

procedure TForm4.HNsGrid3ClickCell(Sender: TObject; ARow, ACol: Integer);
begin
  if ARow = 0 then
  begin
    setColorFlag := False;
    xSetGridSelColColor(HNsGrid3, ACol);
    Exit;
  end;
  setColorFlag := True;

  if ACol = 0 then
  begin
    xSetGridSelRowColor(HNsGrid3, ARow);
  end;
end;

procedure TForm4.HNsGrid3ComboChange(Sender: TObject; ACol, ARow,
  AItemIndex: Integer; ASelection: string);
var
  equipmentGenreCd, equipmentName : string;
begin
  equipmentGenreCd := HNsGrid3.Cells[ACol-1, ARow];
  equipmentName := ASelection;

  gpxMAHNB01012B_SelectEquipInfo(i_StringCarRelationGuid, equipmentGenreCd, equipmentName);
end;

// *************************************************************************
// Grid3のタイプをセット用のイベント(入力形式の設置)
// *************************************************************************
procedure TForm4.HNsGrid3GetEditorType(Sender: TObject; ACol, ARow: Integer;
  var AEditor: TEditorType);
var
  index : Integer;
  key : string;
begin
    with HNsGrid3 do
    begin
       if ARow <> 0 then
       begin
          case ACol of
          1:
            begin
              AEditor := edNormal;
              MaxEditLength := 40;
            end;
          2:
            begin
              AEditor := edComboList;
              ClearComboString;

              key := HNsGrid3.Cells[ACol - 1, ARow];
              for index := 0 to cEqpDefDspInfoListTemp.Csafield1Count - 1 do
              begin
                if cEqpDefDspInfoListTemp.Csafield1.EquipmentGenreNm = key then
                begin
                  Combobox.Items.Add(cEqpDefDspInfoListTemp.Csafield1.EquipmentName);
                end;

                inc(cEqpDefDspInfoListTemp.Csafield1);
              end;

              dec(cEqpDefDspInfoListTemp.Csafield1, cEqpDefDspInfoListTemp.Csafield1Count);
            end;
          end;
       end;
    end;
end;

procedure TForm4.HNsGrid3SelectionChanged(Sender: TObject; ALeft, ATop, ARight,
  ABottom: Integer);
begin
  xSetGridSelRowColor(HNsGrid3, ATop);
end;

procedure TForm4.HNsGrid4CanEditCell(Sender: TObject; ARow, ACol: Integer;
  var CanEdit: Boolean);
begin
  with HNsGrid4 do
  begin
     if ARow <> 0 then
     begin
        case ACol of
        1:
          begin
            CanEdit := false;
          end;
        2:
          begin
            CanEdit := false;
          end;
        3:
          begin
            CanEdit := true;
          end;
        end;
     end;
  end;
end;

procedure TForm4.HNsGrid4CheckBoxClick(Sender: TObject; ACol, ARow: Integer;
  State: Boolean);
begin
  setColorFlag := True;

  if ARow = 0 then
  begin
    setColorFlag := False;
    xSetGridSelColColor(HNsGrid4, ACol);
    Exit;
  end;

  xSetGridSelRowColor(HNsGrid4, ARow);

  if edtAcceptAnOrderNo.GetInt() <> 0 then
  begin
    if State then
    begin
      HNsGrid4.AddCheckBox(3, ARow, False, false);
    end else
    begin
      HNsGrid4.AddCheckBox(3, ARow, True, false);
    end;

    Exit;
  end;

  HNsGrid4ClickCell(Sender, ARow, ACol);
end;

procedure TForm4.HNsGrid4ClickCell(Sender: TObject; ARow, ACol: Integer);
var
  rowIndex : Integer;
  trimCode : string;
  State: Boolean;
begin
  if ARow = 0 then
  begin
    setColorFlag := False;
    xSetGridSelColColor(HNsGrid4, ACol);
    Exit;
  end;
  setColorFlag := True;

  if ACol = 0 then
  begin
    xSetGridSelRowColor(HNsGrid4, ARow);
  end;

  if edtAcceptAnOrderNo.GetInt() <> 0 then
  begin
    HNsGrid4.GetCheckBoxState(3, ARow, State);
    if State then
    begin
      HNsGrid4.AddCheckBox(3, ARow, True, false);
    end else
    begin
      HNsGrid4.AddCheckBox(3, ARow, false, false);
    end;

    Exit;
  end;

  HNsGrid4.AddCheckBox(3, ARow, true, false);

  for rowIndex := 1 to HNsGrid4.RowCount - 1 do
  begin
    if rowIndex <> ARow then
    begin
       HNsGrid4.AddCheckBox(3, rowIndex, false, false);
    end;
  end;

  // トリム情報設定処理
  trimCode := HNsGrid4.Cells[1, ARow];
  TrimNo.Text:= trimCode;
  gpxMAHNB01012B_SelectTrimInfo(i_StringCarRelationGuid, trimCode);
end;

// *************************************************************************
// Grid4のタイプをセット用のイベント(入力形式の設置)
// *************************************************************************
procedure TForm4.HNsGrid4GetEditorType(Sender: TObject; ACol, ARow: Integer;
  var AEditor: TEditorType);
begin
     with HNsGrid4 do
      begin
         if ARow <> 0 then
         begin
            case ACol of
            1, 2:
              begin
                AEditor := edNormal;
                MaxEditLength := 40;
              end;
            3:
              begin
                AEditor := edCheckBox;
              end;
            end;
         end;
      end;
end;

procedure TForm4.HNsGrid4SelectionChanged(Sender: TObject; ALeft, ATop, ARight,
  ABottom: Integer);
begin
  xSetGridSelRowColor(HNsGrid4, ATop);
end;

procedure TForm4.HNsGrid5KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  try
    HNsGrid5.BeginUpdate();

    case Key of
    VK_UP:
      begin
        if (FullModel.Enabled) and (FullModel.ReadOnly = False) then
        begin
          FullModel.SetFocus();
        end;
      end;
    VK_RETURN, VK_TAB, VK_DOWN:
      begin
        if (HNsGrid1.Enabled) then
        begin
          //---ADD START 2011/07/19---------->>>>
          if salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly then
          begin
            Exit;
          end;
          //---ADD END 2011/07/19----------<<<<
          HNsGrid1.SetFocus();
        end;
      end;
    end;
  finally
    HNsGrid5.EndUpdate();
  end;
end;

procedure TForm4.MileageEnter(Sender: TObject);
begin
  Mileage.Text := StringReplace(Mileage.Text, ',', '', [rfReplaceAll]);
  Mileage.SelectAll();  // ADD 2010/07/16
end;

procedure TForm4.ModelDesignationNoChange(Sender: TObject);
begin
  if ActiveControl <> HNsGrid1 then
  begin
    if ((Trim(ModelDesignationNo.Text) <> '') and (ModelDesignationNo.ExtEdit.Column <= Length(ModelDesignationNo.Text))) then
    begin
    if (CategoryNo.Enabled) then
      begin
       CategoryNo.SetFocus();
      end;
    end;
  end;
end;

//*************************************************************************
//  車種ガイド処理
//*************************************************************************
procedure TForm4.ModelFullNameBtnClick(Sender: TObject);
var
  status, vk_code : Integer;
  control : TWinControl;
begin

    status := gpxMAHNB01012B_modelFullGuide(MakerCode.GetInt, ModelCode.GetInt, ModelSubCode.GetInt, HGetEnterpriseCode, xGetActiveRowSalesRowNo(), modelNameU);

// --- UPD 2010/07/06 ---------->>>>>
    if status = 0 then
    begin
//      MakerCode.SetInt(modelNameU.MakerCode);
//      ModelCode.SetInt(modelNameU.ModelCode);
//      ModelSubCode.SetInt(modelNameU.ModelSubCode);
//      ModelFullName.Text := modelNameU.ModelFullName;
      xSetDisplayCarInfo(xGetActiveRowSalesRowNo(), 0);

      gpxMAHNB01012B_GetSalesSlip(salesSlip_disp);
      gpxMAHNB01013B_GetDisplayHeaderFooterInfo(inputModeTitle, defaultSalesSlipNumDf, i_searchPartsMode, operationCodeFlg);
      SetDisplayHeaderFooterInfo(salesSlip_disp);

      // 次の項目へフォーカス移動
      control := ModelFullNameBtn;
      vk_code := VK_RETURN;
      xForwardNextFocus(control, vk_code);
    end;

//    gpxMAHNB01012B_GetSalesSlip(salesSlip_disp);
//    gpxMAHNB01013B_GetDisplayHeaderFooterInfo(inputModeTitle, defaultSalesSlipNumDf, i_searchPartsMode, operationCodeFlg);
//    SetDisplayHeaderFooterInfo(salesSlip_disp);
//
//    // 次の項目へフォーカス移動
//    control := ModelFullNameBtn;
//    vk_code := VK_RETURN;
//    xForwardNextFocus(control, vk_code);
// --- UPD 2010/07/06  ----------<<<<<

end;

//*************************************************************************
//  右クリック処理
//*************************************************************************
procedure TForm4.rowInsertClick(Sender: TObject);
var
   Key: Word;
begin
   if (iFlag_Mouse = False) then
   begin
     iLogicalRow_Mouse := HNsGrid1.LogicalRow;
   end
   else
   begin
     iFlag_Mouse := False;
   end;

  case TMenuItem (Sender).Tag of
    1: begin
        Key := VK_INSERT;  //挿入
        xInsert;
        xActiveCellButtonEnabledControl(xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col),HNsGrid1.LogicalRow);
       end;

    2: begin
        Key := VK_DELETE;  // 削除
        xDelete;
       end;

    3: begin
         // 切取
         xCut;
       end;

    4: begin
         // ｺﾋﾟｰ
         xCopy;
       end;

    5: begin
         // 貼付
         xPaste;
       end;

    6: begin
         // 入力切替
         BitBtn_InputChange(Sender);
       end;

    7: begin
         // 仕入
         BitBtn_InputStockInfo(Sender);
       end;

    8: begin
         // 発注
         BitBtn_InputOrderInfo(Sender);
       end;

    9: begin
         // 行値引
         iFlag_Mouse := True;
         BitBtn_LineDiscount(Sender);
       end;

    10:begin
         // 注釈
         iFlag_Mouse := True;
         BitBtn_Annotation(Sender);
       end;

   end;

   xSetSalesUnPrcBtnEnabled();   // ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ

end;

procedure   TForm4.New1DrawItem(Sender:   TObject;   ACanvas:   TCanvas;
      ARect:   TRect;   Selected:   Boolean);
  begin
//      acanvas.Font.Color:=clred;
//      acanvas.Brush.Color:=clred;
      SetBkColor(acanvas.handle,clgreen);
//      MainMenu1.
//      if   selected   then
//          SetBkColor(acanvas.handle,clgreen)
//      else
//          setBkcolor(acanvas.handle,clblue);
//      acanvas.TextRect(arect,0,0,'');
  end;

procedure TForm4.RetGoodsReasonBtnClick(Sender: TObject);
begin

  gpxMAHNB01013B_retGoodsReason(HGetEnterpriseCode, userGdHd, userGdBd, salesSlip_goodsReason);
  RetGoodsReason.Text := salesSlip_goodsReason.RetGoodsReason;

  // 売上データクラス→画面格納処理
  xSetDisplay();
  // todo
  // 次の項目へフォーカス移動


end;

procedure TForm4.returnSlipButtonClick(Sender: TObject);
var
isSave, salesRowNo, searchType, ctTabKeyAddInfo, settingAddInfoVisibleFlg, resultNum : Integer;
salesDetailArray: TSalesSlipInputCustomArrayA2;
// --- ADD m.suzuki 2010/06/12 ---------->>>>>
//isMakeQR: Boolean; // DEL 2011/02/11
isMakeQR, isErrorFlag: Boolean; // ADD 2011/02/11
// --- ADD m.suzuki 2010/06/12 ----------<<<<<
beforeSalesSlipNumText:  WideString;        // ADD 2013/02/20 Wakita ③
begin
     //データ保存確認
    // --- UPD m.suzuki 2010/06/12 ---------->>>>>
//    gpxMAHNB01013B_ShowSaveCheckDialog(true, resultNum, CarMngCode.Text) ;
    // --- ADD 2010/07/16 ---------->>>>>
    if checkBox_MakeQR.Visible then
    BEGIN
        isMakeQR := checkBox_MakeQR.Checked;
    END else begin
        isMakeQR := False;
    END;
    //isMakeQR := checkBox_MakeQR.Checked;
    // --- ADD 2010/07/16 ----------<<<<<
    gpxMAHNB01013B_ShowSaveCheckDialog(true, resultNum, CarMngCode.Text, isMakeQR) ;
    checkBox_MakeQR.Checked := isMakeQR;
    // --- UPD m.suzuki 2010/06/12 ----------<<<<<

    // ---ADD 2011/02/11------------->>>>
    gpxMAHNB01013B_GetErrorFlag(isErrorFlag);
    if isErrorFlag then
    begin
      _isErrorFlag := isErrorFlag;
      newButton.Visible := False; // 新規(F9)
      saveButton.Visible := False; // 確定(F10)
      deleteSlipButton.Visible := False; // 伝票削除(F12)
      returnButton.Visible := False; // 戻る(F2)
      forwardButton.Visible := False; // 進む(F3
      guideButton.Visible := False; // ガイド(F5)
      searchCarChangeButton.Visible := False; // 検索切替(F4)
      ReadSlipButton.Visible := False; // 伝票呼出(X)
      shipmentAddUpButton.Visible := False; // 貸出計上(I)
      acceptAnOrderAddUpButton.Visible := False; // 受注計上(H)
      estimateAddUpButton.Visible := False; // 見積計上(Q)
      SlipHeaderCopyButton.Visible := False; // 見出貼付(F6)
      updateButton.Visible := False; // 更新(V)
      toolRetryButton.Visible := False; // 元に戻す(U)
      toolRedSlipButton.Visible := False; // 赤伝(R)
      toolReturnSlipButton.Visible := False; // 返品(Y)
      toolCopySlipButton.Visible := False; // 伝票複写(P)
      toolSetupButton.Visible := False; // 設定(O)
      toolReNewalbtn.Visible := False; // 最新情報(A)
      toolReferenceListButton.Visible := False; // 問合せ一覧
      toolHisSearchButton.Visible := False; // 履歴検索 // ADD　2018/09/04 譚洪　履歴自動表示の対応
      toolGetTaxRateButton.Visible := False; // 税率入力 // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応
      toolEBooksButton.Visible := False; // 電帳.DX // ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応
      //toolReplyTransactionButton.Visible := False; // 回答処理
      toolMailButton.Visible := False; // メール
      dateUpdateBottun.Visible := False; // 日付修正  // ADD 2011/08/02
      detailCopyButton.Visible := False; // 明細貼付  // ADD 連番729 2011/08/18
      UOEDataGet.Visible := False;// ADD  黄興貴 K2015/04/29 回答取込パタン追加
      discountAllLineBottun.Visible := False; // 一括値引 //ADD 2013/01/24 鄧潘ハン REDMINE#34141
      allSecInfoButton.Visible := False; // 在庫情報 // ADD K2015/04/01 高騁 森川部品個別依頼
      DorpdownList.Visible := False;
      // ---UPD 2011/03/07------------->>>>
//        SalesSlipNum.Visible := False; // 伝票番号
//        SalesSlipNumBtn.Visible := False; // 伝票番号BTN
      pnl8.Visible := False;    //伝票番号
      // ---UPD 2011/03/07-------------<<<<
    end;
    // ---ADD 2011/02/11-------------<<<<
    //データ保存不要、「いいえ」、保存okの場合、出荷計上処理を行う
    if (resultNum = 0) or (resultNum = 1)  or (resultNum = 4) then
    begin
      if resultNum = 0 then
      begin
          // --- ADD 2013/02/20 Wakita ③ ---------->>>>>
          //前回伝票番行設定
          gpxMAHNB01013B_GetBeforeSalesSlipNumText(beforeSalesSlipNumText);
          pnl_BeforeSalesSlipNum.Caption := beforeSalesSlipNumText;
          // --- ADD 2013/02/20 Wakita ③ ----------<<<<<

          // --- ADD 2013/02/20 Wakita ② ---------->>>>>
          //値引モード
          if(discountAllLineflag)then
          begin
              //「一括値引」→「売上」
              xNotDiscountInitalSet();
          end;
          // --- ADD 2013/02/20 Wakita ② ----------<<<<<
         xDeatilClearDisplay();

         //>>> ADD  2012/05/17 SCM障害№162対応
         // データ取得・表示終了まで終了ボタン使用不可
         b_CloseFlg := True;
         //<<< ADD  2012/05/17 SCM障害№162対応

         //>>>2010/11/08
         xSetDisplay();
         xDeatilClearDisplay();
         xSetDisplayDetailInfo(salesRowNo);
         xChangeSearchModeReflect();
         xSettingAddInfoVisible();
         InitialSetFocusTick();
         //<<<2010/11/08

         //>>> ADD  2012/05/17 SCM障害№162対応
         // 終了ボタン使用可能
         b_CloseFlg := False;
         //<<< ADD  2012/05/17 SCM障害№162対応

      end;

      //返品処理
      gpxMAHNB01013B_ReturnSlip(False, isSave);

      if isSave = 1 then
      begin
        eventCancelFlg := True; // ADD 2013/02/25 Wakita
        //>>> ADD  2012/05/17 SCM障害№162対応
        // データ取得・表示終了まで終了ボタン使用不可
        b_CloseFlg := True;
        //<<< ADD  2012/05/17 SCM障害№162対応
        xSetDisplay();

        // 売上金額変更後発生イベント処理
        xSalesPriceChanged();

        // 車両情報画面表示処理
        salesRowNo := xGetActiveRowSalesRowNo();
        searchType := 0;
        xSetDisplayCarInfo(salesRowNo, searchType);
        //車両項目制御
        // --- UPD 2010/05/31 ---------->>>>>
        //xSetDisplayDetailInfo();
        xSetDisplayDetailInfo(salesRowNo);
        // --- UPD 2010/05/31 ----------<<<<<

        // 明細データ設定
        xDeatilClearDisplay();

        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        // --- ADD 2010/05/31 ---------->>>>>
        xInitialRow;
        // --- ADD 2010/05/31 ----------<<<<<
        // --- ADD 2010/07/14 ---------->>>>>
        if (salesDetailArray.Csafield1Count > i_RowMaxCount) then
        begin
          xInitialRow_AddUp(salesDetailArray);
        end;
        // --- ADD 2010/07/14 ---------->>>>>
        xSetDetailRowFormC(salesDetailArray,-1);
        xSettingGrid();
        xDeleteEmptyRow();

        HNsGrid1.HideInplaceEdit; // ADD 呉元嘯 2021/04/29 BLINCIDENT-2982の対応
        HNsGrid1.SetFocus;
        HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, HNsGrid1.LogicalRow * 2 + 1);
        HNsGrid1.ShowInplaceEdit; // ADD 呉元嘯 2021/04/29 BLINCIDENT-2982の対応

        xSlipMemoInfoFormSetting(salesRowNo);

        // ガイドボタンツール有効無効設定処理
        xSettingGuideButtonToolEnabled(OldCtrl);

        xSettingVisible();

        //追加情報タブ項目Visible設定
        xSettingAddInfoVisible();
        //伝票備考、伝票備考２、伝票備考３の入力桁数を制御する
        xSetNoteCharCnt();
        // xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);  //DEL 2011/09/20
        xActiveCellButtonEnabledControl(xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col),HNsGrid1.LogicalRow); //ADD 2011/09/20
        // --- DEL 2010/06/17 ---------->>>>>
        //OldCtrl := Form4.ActiveControl;
        // --- DEL 2010/06/17 ----------<<<<<

        // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
        //値引モード
        if(discountAllLineflag)then
        begin
            //「一括値引」→「売上」
            xNotDiscountInitalSet();
        end;
        // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<

        //>>> ADD  2012/05/17 SCM障害№162対応
        // 終了ボタン使用可能
        b_CloseFlg := False;
        //<<< ADD  2012/05/17 SCM障害№162対応
        eventCancelFlg := False; // ADD 2013/02/25 Wakita

      //保存確認ダイアログデータ保存失敗の場合、明細にFocus設定する
      end else begin
        if resultNum =3 then
        begin
            // HNsGrid1
            HNsGrid1.SetFocus;
        end;

      end;

   end;
   xAllSecStockInfoProc(HNsGrid1.LogicalRow, False, False); // ADD K2015/04/01 高騁 森川部品個別依頼


end;

//*************************************************************************
//  従業員ガイド処理
//*************************************************************************
procedure TForm4.EmployeeCdBtnClick(Sender: TObject);
var
buttonName: string;
status, vk_code : Integer;
control : TWinControl;
isReInputErr : Boolean;
begin

  if (Sender = SalesEmployeeCdBtn) then
  begin
    control := SalesEmployeeCdBtn;
    buttonName := 'SalesEmployeeCdBtn';
    gpxMAHNB01012B_employeeGuide(buttonName, HGetEnterpriseCode, trim(SalesInputName.Text), trim(SalesInputCode.Text), salesSlip_employee, isReInputErr);
//    SalesEmployeeCd.Text := salesSlip_employee.SalesEmployeeCd;
//    SalesEmployeeNm.Text := salesSlip_employee.SalesEmployeeNm;
  end;
  if (Sender = FrontEmployeeCdBtn) then
  begin
    control := FrontEmployeeCdBtn;
    buttonName := 'FrontEmployeeCdBtn';
    gpxMAHNB01012B_employeeGuide(buttonName, HGetEnterpriseCode, SalesInputName.Text, SalesInputCode.Text, salesSlip_employee, isReInputErr);
//    FrontEmployeeCd.Text := salesSlip_employee.FrontEmployeeCd;
//    FrontEmployeeNm.Text := salesSlip_employee.FrontEmployeeNm;
  end;
  if (Sender = SalesInputCodeBtn) then
  begin
    control := SalesInputCodeBtn;
    buttonName := 'SalesInputCodeBtn';
    gpxMAHNB01012B_employeeGuide(buttonName, HGetEnterpriseCode, SalesInputName.Text, SalesInputCode.Text, salesSlip_employee, isReInputErr);
//    SalesInputCode.Text := salesSlip_employee.SalesInputCode;
//    SalesInputName.Text := salesSlip_employee.SalesInputName;
  end;

  gpxMAHNB01013B_GetStatus(status);

  // --- UPD 2010/05/04 ---------->>>>>
  if status = 0 then
  // --- UPD 2010/05/04 ---------->>>>>
  begin
    // 売上データクラス→画面格納処理
    xSetDisplay();

    if (isReInputErr = True) and (Sender = SalesInputCodeBtn) then
    begin
         // 次の項目へフォーカス移動
        SalesInputCode.SetFocus;
    end else if (isReInputErr = False) and (Sender = SalesInputCodeBtn) then
    begin
        // 次の項目へフォーカス移動
        vk_code := VK_RETURN;
        xForwardNextFocus(control, vk_code);
    end else begin
        // 次の項目へフォーカス移動
        vk_code := VK_RETURN;
        xForwardNextFocus(control, vk_code);
    end;

  end;


end;

procedure TForm4.estimateAddUpButtonClick(Sender: TObject);
var
inputMode, salesRowNo, searchType, rowCount, isResult, ctTabKeyAddInfo, settingAddInfoVisibleFlg, resultNum, saveStatus, i: Integer;
salesDetailArray: TSalesSlipInputCustomArrayA2;
// --- ADD m.suzuki 2010/06/12 ---------->>>>>
//isMakeQR: Boolean; // DEL 2011/02/11
isMakeQR, isErrorFlag: Boolean; // ADD 2011/02/11
// --- ADD m.suzuki 2010/06/12 ----------<<<<<
begin

  if Form4.ActiveControl = HNsGrid1 then
  begin
      rowCount := 0;
      if HNsGrid1.RowSelectCount >= 0 then
      begin
          rowCount := HNsGrid1.RowSelectCount;
      end;

      gpxMAHNB01013B_EstimateReferenceSearch(rowCount, CustomerCode.Text);

      gpxMAHNB01013B_GetSaveStatus(saveStatus);

      if (saveStatus = 1)  then
      begin

        //>>> ADD  2012/05/17 SCM障害№162対応
        // データ取得・表示終了まで終了ボタン使用不可
        b_CloseFlg := True;
        //<<< ADD  2012/05/17 SCM障害№162対応

        xSetDisplay();
        // 売上金額変更後発生イベント処理
        xSalesPriceChanged();

        // 車両情報画面表示処理
        salesRowNo := xGetActiveRowSalesRowNo();
        searchType := 0;
        xSetDisplayCarInfo(salesRowNo, searchType);
        //画面表示処理（明細情報）
        // --- UPD 2010/05/31 ---------->>>>>
        //xSetDisplayDetailInfo();
        xSetDisplayDetailInfo(salesRowNo);
        // --- UPD 2010/05/31 ----------<<<<<

        xSlipMemoInfoFormSetting(salesRowNo);
        // 明細データ設定
        xDeatilClearDisplay();

        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        // --- ADD 2010/05/31 ---------->>>>>
        xInitialRow;
        // --- ADD 2010/05/31 ----------<<<<<
        // --- ADD 2010/07/14 ---------->>>>>
        if (salesDetailArray.Csafield1Count > i_RowMaxCount) then
        begin
          xInitialRow_AddUp(salesDetailArray);
        end;
        // --- ADD 2010/07/14 ---------->>>>>
        xSetDetailRowFormC(salesDetailArray,-1);
        xSettingGrid();

        HNsGrid1.SetFocus;

        //HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, HNsGrid1.LogicalRow * 2 + 1);// DEL 2010/07/16
        HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, 3); // ADD 2010/07/16
        // HNsGrid1.ActiveRowShow := true;
        // --- ADD K2021/07/21 譚洪 BLINCIDENT-3059対応 ----->>>>>
        salesRowNo := xGetActiveRowSalesRowNo();
        // 車両情報設定処理
        xCarInfoFormSetting(salesRowNo);
        // --- ADD K2021/07/21 譚洪 BLINCIDENT-3059対応 -----<<<<<

        xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

        //>>> ADD  2012/05/17 SCM障害№162対応
        // 終了ボタン使用可能
        b_CloseFlg := False;
        //<<< ADD  2012/05/17 SCM障害№162対応

      end;
  end else begin
      //データ保存確認
      // --- UPD m.suzuki 2010/06/12 ---------->>>>>
      //gpxMAHNB01013B_ShowSaveCheckDialog(true, resultNum, CarMngCode.Text) ;
      // --- ADD 2010/07/16 ---------->>>>>
      if checkBox_MakeQR.Visible then
      BEGIN
          isMakeQR := checkBox_MakeQR.Checked;
      END else begin
          isMakeQR := False;
      END;
      //isMakeQR := checkBox_MakeQR.Checked;
      // --- ADD 2010/07/16 ----------<<<<<
      gpxMAHNB01013B_ShowSaveCheckDialog(true, resultNum, CarMngCode.Text, isMakeQR) ;
      checkBox_MakeQR.Checked := isMakeQR;
      // --- UPD m.suzuki 2010/06/12 ----------<<<<<

      // ---ADD 2011/02/11------------->>>>
      gpxMAHNB01013B_GetErrorFlag(isErrorFlag);
      if isErrorFlag then
      begin
        _isErrorFlag := isErrorFlag;
        newButton.Visible := False; // 新規(F9)
        saveButton.Visible := False; // 確定(F10)
        deleteSlipButton.Visible := False; // 伝票削除(F12)
        returnButton.Visible := False; // 戻る(F2)
        forwardButton.Visible := False; // 進む(F3
        guideButton.Visible := False; // ガイド(F5)
        searchCarChangeButton.Visible := False; // 検索切替(F4)
        ReadSlipButton.Visible := False; // 伝票呼出(X)
        shipmentAddUpButton.Visible := False; // 貸出計上(I)
        acceptAnOrderAddUpButton.Visible := False; // 受注計上(H)
        estimateAddUpButton.Visible := False; // 見積計上(Q)
        SlipHeaderCopyButton.Visible := False; // 見出貼付(F6)
        updateButton.Visible := False; // 更新(V)
        toolRetryButton.Visible := False; // 元に戻す(U)
        toolRedSlipButton.Visible := False; // 赤伝(R)
        toolReturnSlipButton.Visible := False; // 返品(Y)
        toolCopySlipButton.Visible := False; // 伝票複写(P)
        toolSetupButton.Visible := False; // 設定(O)
        toolReNewalbtn.Visible := False; // 最新情報(A)
        toolReferenceListButton.Visible := False; // 問合せ一覧
        toolGetTaxRateButton.Visible := False; // 税率入力 // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応
        toolEBooksButton.Visible := False; // 電帳.DX // ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応
        toolHisSearchButton.Visible := False; // 履歴検索 // ADD　2018/09/04 譚洪　履歴自動表示の対応
        //toolReplyTransactionButton.Visible := False; // 回答処理
        toolMailButton.Visible := False; // メール
        dateUpdateBottun.Visible := False; // 日付修正  // ADD 2011/08/02
        detailCopyButton.Visible := False; // 明細貼付  // ADD 連番729 2011/08/18
        UOEDataGet.Visible := False;// ADD  黄興貴 K2015/04/29 回答取込パタン追加
        discountAllLineBottun.Visible := False; // 一括値引 //ADD 2013/01/24 鄧潘ハン REDMINE#34141
        allSecInfoButton.Visible := False; // 在庫情報 // ADD K2015/04/01 高騁 森川部品個別依頼
        DorpdownList.Visible := False;
        // ---UPD 2011/03/07------------->>>>
//        SalesSlipNum.Visible := False; // 伝票番号
//        SalesSlipNumBtn.Visible := False; // 伝票番号BTN
        pnl8.Visible := False;    //伝票番号
        // ---UPD 2011/03/07-------------<<<<
      end;
      // ---ADD 2011/02/11-------------<<<<
      //データ保存不要、「いいえ」、保存okの場合、出荷計上処理を行う
      if (resultNum = 0) or (resultNum = 1)  or (resultNum = 4) then
      begin
        if resultNum = 0 then
        begin
           xDeatilClearDisplay();

           // 保存状態取得
           gpxMAHNB01013B_GetSaveStatus(saveStatus);
           xdoSaveAfter(saveStatus);

           //>>> ADD  2012/05/17 SCM障害№162対応
           // データ取得・表示終了まで終了ボタン使用不可
           b_CloseFlg := True;
           //<<< ADD  2012/05/17 SCM障害№162対応

           //>>>2010/11/08
           xSetDisplay();
           xDeatilClearDisplay();
           xSetDisplayDetailInfo(salesRowNo);
           xChangeSearchModeReflect();
           xSettingAddInfoVisible();
           InitialSetFocusTick();
           //<<<2010/11/08

           //>>> ADD  2012/05/17 SCM障害№162対応
           // 終了ボタン使用可能
           b_CloseFlg := False;
           //<<< ADD  2012/05/17 SCM障害№162対応

        end;

        gpxMAHNB01013B_EstimateAddup(False, isResult);
  //    HNsGrid 設定前
        if isResult = 1 then
        begin
          //>>> ADD  2012/05/17 SCM障害№162対応
          // データ取得・表示終了まで終了ボタン使用不可
          b_CloseFlg := True;
          //<<< ADD  2012/05/17 SCM障害№162対応

          xSetDisplay();
          // 売上金額変更後発生イベント処理
          xSalesPriceChanged();

          // 車両情報画面表示処理
          salesRowNo := xGetActiveRowSalesRowNo();
          searchType := 0;
          xSetDisplayCarInfo(salesRowNo, searchType);
          //画面表示処理（明細情報）
          // --- UPD 2010/05/31 ---------->>>>>
          //xSetDisplayDetailInfo();
          xSetDisplayDetailInfo(salesRowNo);
          // --- UPD 2010/05/31 ----------<<<<<

          // 明細データ設定
          xDeatilClearDisplay();
          gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

          // --- ADD 2010/05/31 ---------->>>>>
          xInitialRow;
          // --- ADD 2010/05/31 ----------<<<<<

          // --- ADD 2010/07/14 ---------->>>>>
          if (salesDetailArray.Csafield1Count > i_RowMaxCount) then
          begin
            xInitialRow_AddUp(salesDetailArray);
          end;
          // --- ADD 2010/07/14 ---------->>>>>

          xSetDetailRowFormC(salesDetailArray,-1);
          xSettingGrid();
          xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

          // ガイドボタンツール有効無効設定処理
          xSettingGuideButtonToolEnabled(OldCtrl);
          xSettingVisible();

          xDeleteEmptyRow();

          HNsGrid1.SetFocus;

          //HNsGrid1.FocusCell(ctCol_SupplierCd, HNsGrid1.LogicalRow * 2 + 1);// DEL 2010/07/16
          // --- UPD 2013/11/18 Wakita ---------->>>>>
          //HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, 3); // ADD 2010/07/16
          //出荷数が有効な場合は、出荷数
          if ((HNsGrid1.CanFocus) and (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, 3] = False)) then
          begin
            HNsGrid1.HideInplaceEdit; // ADD 呉元嘯 2021/04/29 BLINCIDENT-2982の対応
            HNsGrid1.SetFocus;
            HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, 3);
            HNsGrid1.ShowInplaceEdit; // ADD 呉元嘯 2021/04/29 BLINCIDENT-2982の対応
          end
          else
          //出荷数が無効な場合は、売上金額
          if ((HNsGrid1.CanFocus) and (HNsGrid1.ReadOnly[ctCol_SalesMoneyDisplay, 3] = False)) then
          begin
            HNsGrid1.SetFocus;
            HNsGrid1.FocusCell(ctCol_SalesMoneyDisplay, 3);
          end;
          // --- UPD 2013/11/18 Wakita ----------<<<<<

          // HNsGrid1.ActiveRowShow := true;

          // 車両情報設定処理
          salesRowNo := xGetActiveRowSalesRowNo();

          xSlipMemoInfoFormSetting(salesRowNo);
          //追加情報タブ項目Visible設定
          xSettingAddInfoVisible();
          //伝票備考、伝票備考２、伝票備考３の入力桁数を制御する
          xSetNoteCharCnt();

          // --- DEL 2010/06/17 ---------->>>>>
          //OldCtrl := Form4.ActiveControl;
          // --- DEL 2010/06/17 ----------<<<<<
          // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
          //値引モード
          if(discountAllLineflag)then
          begin
              //「一括値引」→「売上」
              xNotDiscountInitalSet();
          end;
          // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<

          //>>> ADD  2012/05/17 SCM障害№162対応
          // 終了ボタン使用可能
          b_CloseFlg := False;
          //<<< ADD  2012/05/17 SCM障害№162対応

        end;
      //保存確認ダイアログデータ保存失敗の場合、明細にFocus設定する
      end else begin
        if resultNum =3 then
        begin
            // HNsGrid1
            HNsGrid1.SetFocus;
        end;

      end;

   end;
      // フッタタブ位置セット
      uTabControl_Footer.ActivePage := ts1;
      xAllSecStockInfoProc(HNsGrid1.LogicalRow, False, False); // ADD K2015/04/01 高騁 森川部品個別依頼
end;

procedure TForm4.SalesSlipDisplayComBoChange(Sender: TObject);
var
  changeSalesSlip, clearDetailInput, clearCarInfo : Boolean;
  salesSlip : TSalesSlip;
begin

  if (not settingGridFlg) then
  begin

    gpxMAHNB01012B_GetSalesSlip(salesSlip);
    gpxMAHNB01012B_ChangeSalesSlip(salesSlip, True, SalesSlipDisplayComBo.SelCode, changeSalesSlip, clearDetailInput, clearCarInfo);

    if clearDetailInput then
    begin
      xDeatilClearTable();    // ADD 2012/04/25 gaofeng Redmine#29612
      xDeatilClearDisplay();
      //xDeatilClearTable();    // DEL 2012/04/25 gaofeng Redmine#29612
      // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141-->>>>>
      //値引モード
      if (discountAllLineflag) then
      begin
            //一括値引Grid初期化
            xDiscountGridInitial();
      end;
      // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141--<<<<<
    end;

    if clearCarInfo then
    begin
      // 画面クリア処理（車両情報）
      xClearDisplayCarInfo();
    end;

    // 売上データクラス→画面格納処理
    SetDisplayHeaderFooterInfo(salesSlip);

    //画面表示処理（売上金額合計情報）
    //xSetDisplayTotalPriceInfo(salesSlip);  // DEL 2012/04/25 gaofeng Redmine#29612
    xSalesPriceChanged();   // ADD 2012/04/25 gaofeng Redmine#29612

    xSetDisplayDetailInfo(xGetActiveRowSalesRowNo());   // ADD 2012/04/25 gaofeng Redmine#29612

    // 明細グリッドセル設定処理
    xSettingGrid();
    xActiveCellButtonEnabledControl('', HNsGrid1.LogicalRow);

    xToolButtonSettingDetail();
  end;

end;

// --- ADD 2010/06/26 ---------->>>>>
procedure TForm4.SalesSlipDisplayComBoEnter(Sender: TObject);
begin
  // --- ADD 2010/07/01 ---------->>>>>
  //SalesSlipDisplayComBo.DroppedDown := True;
  if ((GetKeyState(VK_RETURN) and $8000 = $8000) or
    (GetKeyState(VK_TAB) and $8000 = $8000) or
    (GetKeyState(VK_RIGHT) and $8000 = $8000) or
    (GetKeyState(VK_LEFT) and $8000 = $8000) or
    (GetKeyState(VK_DOWN) and $8000 = $8000) or
    (GetKeyState(VK_UP) and $8000 = $8000)) then
  begin
  SalesSlipDisplayComBo.DroppedDown := True;
end;
  // --- ADD 2010/07/01 ----------<<<<<
end;
// --- ADD 2010/06/26 ----------<<<<<

//*************************************************************************
//  伝票番号ガイド処理
//*************************************************************************
procedure TForm4.SalesSlipNumBtnClick(Sender: TObject);

var acptAnOdrStatus, estimateDivide, salesRowNo,searchType  : Integer;
salesDetailArray: TSalesSlipInputCustomArrayA2;
outDialogResult, outStatus, consTaxLayMethodChangedFlg: Boolean;
isPCCUOESaleSlip : Boolean; //ADD 2011/11/18
begin

  //>>> ADD 2012/09/12 10/17配信システムテスト障害№1対応
  // データ取得・表示終了まで終了ボタン使用不可
  b_CloseFlg := True;
  //<<< ADD 2012/09/12 10/17配信システムテスト障害№1対応

  isSalesSlipSearch := True;  // ADD 2013/02/20 ①

  gpxMAHNB01013B_salesSlipGuide(Form4.Name, HGetEnterpriseCode, AcptAnOdrStatusDisplayComBo.SelCode,
          acptAnOdrStatus, estimateDivide, searchResult, salesSlip, outDialogResult,
          //outStatus, consTaxLayMethodChangedFlg);  //DEL 2011/11/18
          outStatus, consTaxLayMethodChangedFlg,isPCCUOESaleSlip); //ADD 2011/11/18


//  SalesSlipNum.DataText := searchResult.SalesSlipNum;

  if outDialogResult then
  begin
    eventCancelFlg := True; // ADD 2013/02/25 Wakita
    //>>> DEL 2012/09/12 10/17配信システムテスト障害№1対応
    ////>>> ADD  2012/05/17 SCM障害№162対応
    // データ取得・表示終了まで終了ボタン使用不可
    //b_CloseFlg := True;
    ////<<< ADD  2012/05/17 SCM障害№162対応
    //<<< DEL 2012/09/12 10/17配信システムテスト障害№1対応

    // 明細データ設定
    xDeatilClearDisplay();
    gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

    // --- ADD 2010/05/31 ---------->>>>>
    xInitialRow;
    // --- ADD 2010/05/31 ----------<<<<<
    // --- ADD 2010/07/14 ---------->>>>>
    if (salesDetailArray.Csafield1Count > i_RowMaxCount) then
    begin
      xInitialRow_AddUp(salesDetailArray);
    end;
    // --- ADD 2010/07/14 ---------->>>>>
    xSetDetailRowFormC(salesDetailArray,-1);

    // --- DEL 2012/08/07 Wakita ---------->>>>>
    ////追加情報タブ項目Visible設定
    //xSettingAddInfoVisible();
    // --- DEL 2012/08/07 Wakita ----------<<<<<
    // 車両情報画面表示処理
    // --- UPD 2013/06/19 Wakita ---------->>>>>
    //salesRowNo := xGetActiveRowSalesRowNo();
    salesRowNo := 1;
    // --- UPD 2013/06/19 Wakita ----------<<<<<
    searchType := 0;
    xSetDisplayCarInfo(salesRowNo, searchType);

    // 部品検索切替反映処理
    xChangeSearchModeReflect();

    xSlipMemoInfoFormSetting(salesRowNo);

    if outStatus then
    begin
      // 伝票区分コンボエディタアイテム設定処理
      xSetItemtSalesSlipCd(salesSlip, salesSlip_disp.AcptAnOdrStatusDisplay, False);
      // 売上データクラス→画面格納処理
      xSetDisplay();
      // --- ADD 2011/11/18 ---------->>>>>
      if isPCCUOESaleSlip then
      begin
         SalesSlipNum.DataText := Trim(salesSlip.SalesSlipNum);
      end;
      // --- ADD 2011/11/18 --------<<<<<
      if consTaxLayMethodChangedFlg then
      begin
        // 売上金額計算処理
//        this._salesSlipDetailInput.CalculationSalesPrice();

        // 売上金額変更後発生イベント処理
        xSalesPriceChanged();
      end;

      if ((salesSlip_disp.InputMode = 3) or (salesSlip_disp.InputMode = 4) or (salesSlip_disp.InputMode = 5)) then
      xDeleteEmptyRow();

//>>>2011/03/09
////>>>2011/02/01
//      if ((salesSlip_disp.InquiryNumber <> 0) and (salesSlip_disp.SalesSlipNum <> ctDefaultSalesSlipNum)) then begin
//        xDeleteEmptyRow();
//      end;
////<<<2011/02/01
//<<<2011/03/09

      // 明細グリッド設定処理
      xSettingGrid();

      xSettingSalesDetailRowInputRowCount(salesSlip_disp.DetailRowCountForReadSlip);

      xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);  // ADD 2013/02/15 Wakita

      xSettingVisible();

      //gpxMAHNB01013B_BeginControllingByOperationAuthority(b_revisionVisible, b_deleteVisible, b_redSlipVisible); // ADD 2010/07/13// DEL 2013/01/24 鄧潘ハン REDMINE#34141
      gpxMAHNB01013B_BeginControllingByOperationAuthority(b_revisionVisible, b_deleteVisible, b_redSlipVisible, b_slipDiscountVisible); // ADD 2013/01/24 鄧潘ハン REDMINE#34141

      //xSetItemsDictionary();    // ADD 2010/07/13    // DEL 2011/10/20

      // --- ADD 2010/07/13 ---------->>>>>
      xLoadToolManagerCustomizeInfo();
      //伝票削除（Ｘ）
      if (b_deleteVisible and tToolButtonsVisible[3]) then
      begin
        deleteSlipButton.Visible := True;
      end else
      begin
        deleteSlipButton.Visible := False;
      end;
     // --- ADD 2010/07/13 ----------<<<<<

      // ツールバーボタン有効無効設定処理
      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(nil); // ADD 2011/12/21 tianjw Redmine#27290

//      // セルアクティブ時ボタン有効無効コントロール処理
//      xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

      if Panel15.Enabled then
      begin
        Panel15.SetFocus;
        // --- DEL 2010/06/02 ---------->>>>>
//        HNsGrid1.SetFocus;
        // --- DEL 2010/06/02 ----------<<<<<
      end else
      begin
        // todo
        // GetFooterFirstControl().Focus();
      end;

      xSettingAddInfoVisible();

      // フッタタブ位置セット
      uTabControl_Footer.ActivePageIndex := 0;

      if salesSlip_disp.DepositAllowanceTtl <> 0 then
      //伝票備考、伝票備考２、伝票備考３の入力桁数を制御する
      xSetNoteCharCnt();


    end;

     // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
     //値引モード
     if(discountAllLineflag)then
     begin
      //「一括値引」→「売上」
      xNotDiscountInitalSet();
     end;
     // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<

    // 車両項目制御
    // --- UPD 2010/05/31 ---------->>>>>
    //xSetDisplayDetailInfo();
    xSetDisplayDetailInfo(salesRowNo);

    // --- ADD 2010/06/02 ----------<<<<<
//    if ((HNsGrid1.CanFocus) and (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, HNsGrid1.LogicalRow * 2 + 1] = False)) then  // DEL 2010/07/15
//    if ((HNsGrid1.CanFocus) and (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, 3] = False)) then    // ADD 2010/07/15
//    begin
//      HNsGrid1.SetFocus;
////      HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, HNsGrid1.LogicalRow * 2 + 1);  // DEL 2010/07/15
//      HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, 3);       // ADD 2010/07/15
//    end;
    // ----- ADD K2011/08/12 --------------------------->>>>>
    //if not outStatus then // DEL K2011/12/14
    if (not outStatus) AND (loginEnterpriseCode = login_EnterpriseCode) then // ADD K2011/12/14
    begin
      SalesSlipNum.SetFocus;
      xSettingGuideButtonToolEnabled(SalesSlipNum);// ADD K2011/09/15
    end
    else
    // ----- ADD K2011/08/12 ---------------------------<<<<<
    if salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Red then
    begin
      SlipNoteCode.SetFocus;
    end
    else
    //受注伝票
    if ((salesSlip_disp.AcptAnOdrStatus = acptAnOdrStatusState_AcceptAnOrder) and (HNsGrid1.CanFocus)) then
    begin
      HNsGrid1.HideInplaceEdit; // ADD 呉元嘯 2021/04/29 BLINCIDENT-2982の対応
      HNsGrid1.SetFocus;
      HNsGrid1.FocusCell(ctCol_AcceptAnOrderCntDisplay, 2);
      HNsGrid1.ShowInplaceEdit; // ADD 呉元嘯 2021/04/29 BLINCIDENT-2982の対応
    end
    else
    begin
      //出荷数が有効な場合は、出荷数とし
      if ((HNsGrid1.CanFocus) and (HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, 3] = False)) then    // ADD 2010/07/15
      begin
        HNsGrid1.HideInplaceEdit; // ADD 呉元嘯 2021/04/29 BLINCIDENT-2982の対応
        HNsGrid1.SetFocus;
        HNsGrid1.FocusCell(ctCol_ShipmentCntDisplay, 3);
        HNsGrid1.ShowInplaceEdit; // ADD 呉元嘯 2021/04/29 BLINCIDENT-2982の対応
      end
      else
      //出荷数が無効な場合は、品名として下さい
      if ((HNsGrid1.CanFocus) and (HNsGrid1.ReadOnly[ctCol_GoodsName, 2] = False)) then    // ADD 2010/07/15
      begin
        HNsGrid1.SetFocus;
        HNsGrid1.FocusCell(ctCol_GoodsName, 2);
      end;
    end;

    // --- ADD 2010/06/02 ----------<<<<<
    eventCancelFlg := False; // ADD 2013/02/25 Wakita

  end;

  // --- ADD 2012/05/24 No.849 ---------->>>>>
  if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp) then
  begin
    //明細備考に一時的にフォーカスを当てる
    HNsGrid1.FocusCell(26, 2);

    SalesSlipNum.setFocus;
    Form4.ActiveControl := SalesSlipNum;
  end;
  // --- ADD 2012/05/24 No.849 ----------<<<<<

  //>>> ADD  2012/05/17 SCM障害№162対応
  // 終了ボタン使用可能
  b_CloseFlg := False;
  //<<< ADD  2012/05/17 SCM障害№162対応
  //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.3の①対応----->>>>>
  if((HNsGrid1.Col <> ctCol_GoodsName) or (HNsGrid1.Col <> ctCol_BLGoodsCode)) then begin
     detailCopyButton.Enabled := False;
     toolMenu_detailCopyBtn.Enabled := False;
  end;
  //---ADD BY 凌小青 on 2013/01/14 for Redmine#33793の9＃既存バグNo.3の①対応-----<<<<<

  isSalesSlipSearch := False;  // ADD 2013/02/20 ①
  xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False);    // ADD K2015/04/01 高騁 森川部品個別依頼

end;

procedure TForm4.SectionCodeBtnClick(Sender: TObject);
var
  reCalcSalesUnitPrice : Boolean;
  nextCtrl : TWinControl;
  salesDetailArray: TSalesSlipInputCustomArrayA2; // ADD 2011/05/30
begin

  gpxMAHNB01012B_sectionGuide(HGetEnterpriseCode, Form4.Name, salesSlip_section);
//  SectionCode.DataText := salesSlip_section.ResultsAddUpSecCd;
//  SectionName.DataText := salesSlip_section.ResultsAddUpSecNm;

  // ---ADD 2011/05/30------------>>>>>
  xDeatilClearDisplay();
  gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);
  xSetDetailRowFormC(salesDetailArray,-1);
  // ---ADD 2011/05/30------------<<<<<

  // 売上データクラス→画面格納処理
  xSetDisplay();

  if (Trim(SectionCode.Text) = null) or (Trim(SectionCode.Text) = '') then
  begin
    nextCtrl := SectionCodeBtn;
  end else
  begin
    //    nextCtrl = this.GetNextControl(this.tEdit_SectionCode, SalesSlipInputAcs.MoveMethod.NextMove);
    // --- ADD 2010/05/31 ---------->>>>>
    // 次の項目へフォーカス移動
    xForwardNextFocus(SectionCode, VK_RETURN);
    // --- ADD 2010/05/31 ----------<<<<<
  end;

//  if (nextCtrl <> nil) then nextCtrl.setFocus;

end;

// ---ADD 2011/05/30------------>>>>>
//*************************************************************************
//  画面の拠点コード変化時イベント
//*************************************************************************
procedure TForm4.SectionCodeChange(Sender: TObject);
begin
  gpxMAHNB01013B_SetSectionCode(SectionCode.Text);
end;
// ---ADD 2011/05/30------------<<<<<

//*************************************************************************
//  備考ガイド処理
//*************************************************************************
procedure TForm4.SlipNoteExit(Sender: TObject);
var
 SlipNoteBak : WideString;
begin
   // --- UPD 2012/09/12 Wakita ---------->>>>>
   //SlipNoteBak := SlipNote.Text;
   SlipNoteBak := TrimRight(SlipNote.Text);
   // --- UPD 2012/09/12 Wakita ----------<<<<<
   SlipNote.Text := '';
   SlipNote.Text := SlipNoteBak;
end;

//*************************************************************************
//  備考ガイド処理
//*************************************************************************
procedure TForm4.SlipNote2Exit(Sender: TObject);
var
 SlipNote2Bak : WideString;
begin
   // --- UPD 2012/09/12 Wakita ---------->>>>>
   //SlipNote2Bak := SlipNote2.Text;
   SlipNote2Bak := TrimRight(SlipNote2.Text);
   // --- UPD 2012/09/12 Wakita ----------<<<<<
   SlipNote2.Text := '';
   SlipNote2.Text := SlipNote2Bak;
end;

//*************************************************************************
//  備考ガイド処理
//*************************************************************************
procedure TForm4.SlipNote3Exit(Sender: TObject);
var
 SlipNote3Bak : WideString;
begin
   // --- UPD 2012/09/12 Wakita ---------->>>>>
   //SlipNote3Bak := SlipNote3.Text;
   SlipNote3Bak := TrimRight(SlipNote3.Text);
   // --- UPD 2012/09/12 Wakita ----------<<<<<
   SlipNote3.Text := '';
   SlipNote3.Text := SlipNote3Bak;
end;

//*************************************************************************
//  納品区分ガイド処理
//*************************************************************************
procedure TForm4.AddresseeNameExit(Sender: TObject);
var
 AddresseeNameBak : WideString;
begin
   AddresseeNameBak := AddresseeName.Text;
   AddresseeName.Text := '';
   AddresseeName.Text := AddresseeNameBak;
end;

procedure TForm4.aplctnvnts1Message(var Msg: tagMSG; var Handled: Boolean);
var
  mPoint : TPoint;
begin
// --------DEL 2010/10/21-------->>>>>>
//  if IsChild(HNsGrid1.Handle, Msg.Hwnd) and
//     ((Msg.Message = WM_RBUTTONDOWN) or (Msg.Message = WM_RBUTTONUP)) then
//  begin
//    GetCursorPos(mPoint);
//
//    pm1.Popup(mouse.CursorPos.X,mouse.CursorPos.Y);
//
//    Handled:=True;
//
//  end;
// --------DEL 2010/10/21--------<<<<<
end;

procedure TForm4.SlipNoteCodeBtnClick(Sender: TObject);
var
  control : TWinControl;
  vk_code : Integer;
  status : Integer; // ADD 2010/07/12
begin

  if (Sender = SlipNoteCodeBtn) then
  begin
    control := SlipNoteCodeBtn;
    // --- UPD 2010/07/12 ---------->>>>>
    //gpxMAHNB01012B_slipNote('SlipNoteCodeBtn', HGetEnterpriseCode, salesSlip_note);
    status := gpxMAHNB01012B_slipNote('SlipNoteCodeBtn', HGetEnterpriseCode, salesSlip_note);
    // --- UPD 2010/07/12 ----------<<<<
    SlipNoteCode.SetInt(salesSlip_note.SlipNoteCode);
    // --- UPD 2012/09/12 Wakita ---------->>>>>
    //SlipNote.Text := salesSlip_note.SlipNote;
    SlipNote.Text := TrimRight(salesSlip_note.SlipNote);
    // --- UPD 2012/09/12 Wakita ----------<<<<<
  end;

  if (Sender = SlipNote2CodeBtn) then
  begin
    control := SlipNote2CodeBtn;
    // --- UPD 2010/07/12 ---------->>>>>
    //gpxMAHNB01012B_slipNote('SlipNote2CodeBtn', HGetEnterpriseCode, salesSlip_note);
    status := gpxMAHNB01012B_slipNote('SlipNote2CodeBtn', HGetEnterpriseCode, salesSlip_note);
    // --- UPD 2010/07/12 ----------<<<<
    SlipNote2Code.SetInt(salesSlip_note.SlipNote2Code);
    // --- UPD 2012/09/12 Wakita ---------->>>>>
    //SlipNote2.Text := salesSlip_note.SlipNote2;
    SlipNote2.Text := TrimRight(salesSlip_note.SlipNote2);
    // --- UPD 2012/09/12 Wakita ----------<<<<<
  end;

  if (Sender = SlipNote3CodeBtn) then
  begin
    control := SlipNote3CodeBtn;
    // --- UPD 2010/07/12 ---------->>>>>
    //gpxMAHNB01012B_slipNote('SlipNote3CodeBtn', HGetEnterpriseCode, salesSlip_note);
    status := gpxMAHNB01012B_slipNote('SlipNote3CodeBtn', HGetEnterpriseCode, salesSlip_note);
    // --- UPD 2010/07/12 ----------<<<<
    SlipNote3Code.SetInt(salesSlip_note.SlipNote3Code);
    // --- UPD 2012/09/12 Wakita ---------->>>>>
    //SlipNote3.Text := salesSlip_note.SlipNote3;
    SlipNote3.Text := TrimRight(salesSlip_note.SlipNote3);
    // --- UPD 2012/09/12 Wakita ----------<<<<<
  end;

  // --- UPD 2010/07/12 ---------->>>>>
//  // 売上データクラス→画面格納処理
//  xSetDisplay();
//  // 次の項目へフォーカス移動
//  vk_code := VK_RETURN;
//  xForwardNextFocus(control, vk_code);

  if status = 0 then
  begin
    isSlipNoteBtnClick := True; // ADD 2010/07/12
    // 売上データクラス→画面格納処理
    xSetDisplay();
    // 次の項目へフォーカス移動
    vk_code := VK_RETURN;
    //xForwardNextFocus(control, vk_code); //DEL 2011/07/19
    //----ADD START 2011/07/19------>>>>
    if salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly then
    begin
      Sectioncode.setFocus;
    end
    else
    begin
      xForwardNextFocus(control, vk_code);
    end;
    //----ADD START 2011/07/19------>>>>
  end;
  // --- UPD 2010/07/12 ----------<<<<

end;

procedure TForm4.SlipNoteGuideBtnClick(Sender: TObject);
var
  status, salesRowNo, searchType: Integer;
  control : TWinControl;
  vk_code : Integer;
begin
  salesRowNo := xGetActiveRowSalesRowNo();
  searchType := 0;
  status := gpxMAHNB01013B_SlipNoteGuide(salesRowNo);

  if status = 0 then
  begin
    xSetDisplayCarInfo(salesRowNo, searchType);

    // 次の項目へフォーカス移動
    control := SlipNoteGuideBtn;
    vk_code := VK_RETURN;
    xForwardNextFocus(control, vk_code);
  end;
end;

//*************************************************************************
//  部門ガイド処理
//*************************************************************************
procedure TForm4.SubSectionCodeBtnClick(Sender: TObject);
var
  control : TWinControl;
  vk_code : Integer;
begin

  gpxMAHNB01012B_subSectionGuide(HGetEnterpriseCode, salesSlip_subSection);
  SubSectionCode.SetInt(salesSlip_subSection.SubSectionCode);
  SubSectionName.Text := salesSlip_subSection.SubSectionName;

  // 売上データクラス→画面格納処理
  xSetDisplay();

  // 次の項目へフォーカス移動
  control := SubSectionCodeBtn;
  vk_code := VK_RETURN;
  xForwardNextFocus(control, vk_code);

end;

//*************************************************************************
//  ファンクションコントロール
//*************************************************************************
// --- UPD 2012/05/31 No.282---------->>>>>
//procedure TForm4.XFuncKeyButton1FuncKey(PrevCtrl: TWinControl;
//  var NextCtrl: TWinControl; UsrCode: Word);
procedure TForm4.XFuncKeyButton1FuncKey(Sender: TObject; PrevCtrl: TWinControl;
  var NextCtrl: TWinControl; UsrCode: Word);
// --- UPD 2012/05/31 No.282----------<<<<<
begin
  if (PrevCtrl <> nil) then NextCtrl := PrevCtrl;
//  xOnExit(PrevCtrl);
// --- UPD 2012/05/31 No.282---------->>>>>
//  xFuncKey(PrevCtrl,NextCtrl,UsrCode);
  xFuncKey(Sender,PrevCtrl,NextCtrl,UsrCode);
// --- UPD 2012/05/31 No.282----------<<<<<
//  RCHNB01003UAF.Repaint;
  xOnEnter(PrevCtrl,NextCtrl);
//  xSetNextFocus(NextCtrl);
end;

//*************************************************************************
//  ファンクションコントロール  メイン
//*************************************************************************
// --- UPD 2012/05/31 No.282---------->>>>>
//procedure TForm4.xFuncKey(PrevCtrl: TWinControl; var NextCtrl: TWinControl; UsrCode: Word);
procedure TForm4.xFuncKey(Sender: TObject; PrevCtrl: TWinControl; var NextCtrl: TWinControl; UsrCode: Word);
// --- UPD 2012/05/31 No.282----------<<<<<
var
  canCloseFlg : Boolean;
  // --- ADD m.suzuki 2010/06/12 ---------->>>>>
//  isMakeQR: Boolean;  // DEL 2011/02/11
  isMakeQR, isErrorFlag: Boolean; // DEL 2011/02/11
  // --- ADD m.suzuki 2010/06/12 ----------<<<<<
  senderObj: TObject;  // ADD 2010/10/08
  rowEffectiveIndex, rowIndex: Integer;  // ADD 2010/10/08
//  flag : Boolean;  // ADD 2011/12/01 YANGMJ REDMINE#8344 // DEL 2012/01/18 YANGMJ ソースマージ
//  colIndex, rowIdx, iRow,salesRowNo: Integer;// ADD 2011/12/01 YANGMJ REDMINE#8344 // DEL 2012/01/18 YANGMJ ソースマージ
//  value : string; // ADD 2011/12/01 YANGMJ REDMINE#8344 // DEL 2012/01/18 YANGMJ ソースマージ
  srResult : Boolean; //ADD 2012/05/10
begin
  i_InputType_bk := i_InputType; //2012/05/10

  case UsrCode of
   1: begin  //終了
//         i_ChangeFlg := bkChangeFlg;
         // --- UPD m.suzuki 2010/06/12 ---------->>>>>
         //gpxMAHNB01013B_Close(True, canCloseFlg);
          // --- ADD 2010/07/16 ---------->>>>>

          //>>>  ADD 2012/05/17 SCM障害№162対応
          // 終了フラグ使用不可の時
          if b_CloseFlg then
          begin
            exit;
          end;
          //<<<  ADD 2012/05/17 SCM障害№162対応
        //>>>  ADD 2012/09/12 10/17配信システムテスト障害№1対応
        b_CloseFlg := True;
        try
        //<<<  ADD 2012/09/12 10/17配信システムテスト障害№1対応

          if checkBox_MakeQR.Visible then
          BEGIN
              isMakeQR := checkBox_MakeQR.Checked;
          END else begin
              isMakeQR := False;
          END;
          //isMakeQR := checkBox_MakeQR.Checked;
          // --- ADD 2010/07/16 ----------<<<<<
         gpxMAHNB01013B_Close(True, canCloseFlg,isMakeQR);
          // ---ADD 2011/02/11------------->>>>
          gpxMAHNB01013B_GetErrorFlag(isErrorFlag);
          if isErrorFlag then
          begin
            _isErrorFlag := isErrorFlag;
            newButton.Visible := False; // 新規(F9)
            saveButton.Visible := False; // 確定(F10)
            deleteSlipButton.Visible := False; // 伝票削除(F12)
            returnButton.Visible := False; // 戻る(F2)
            forwardButton.Visible := False; // 進む(F3
            guideButton.Visible := False; // ガイド(F5)
            searchCarChangeButton.Visible := False; // 検索切替(F4)
            ReadSlipButton.Visible := False; // 伝票呼出(X)
            shipmentAddUpButton.Visible := False; // 貸出計上(I)
            acceptAnOrderAddUpButton.Visible := False; // 受注計上(H)
            estimateAddUpButton.Visible := False; // 見積計上(Q)
            SlipHeaderCopyButton.Visible := False; // 見出貼付(F6)
            updateButton.Visible := False; // 更新(V)
            toolRetryButton.Visible := False; // 元に戻す(U)
            toolRedSlipButton.Visible := False; // 赤伝(R)
            toolReturnSlipButton.Visible := False; // 返品(Y)
            toolCopySlipButton.Visible := False; // 伝票複写(P)
            toolSetupButton.Visible := False; // 設定(O)
            toolReNewalbtn.Visible := False; // 最新情報(A)
            toolReferenceListButton.Visible := False; // 問合せ一覧
            toolGetTaxRateButton.Visible := False; // 税率入力 // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応
            toolEBooksButton.Visible := False; // 電帳.DX // ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応
            toolHisSearchButton.Visible := False; // 履歴検索 // ADD　2018/09/04 譚洪　履歴自動表示の対応
            //toolReplyTransactionButton.Visible := False; // 回答処理
            toolMailButton.Visible := False; // メール
            dateUpdateBottun.Visible := False; // 日付修正  // ADD 2011/08/02
            detailCopyButton.Visible := False; // 明細貼付  // ADD 連番729 2011/08/18
            UOEDataGet.Visible := False;// ADD  黄興貴 K2015/04/29 回答取込パタン追加
            discountAllLineBottun.Visible := False; // 一括値引 //ADD 2013/01/24 鄧潘ハン REDMINE#34141
            allSecInfoButton.Visible := False; // 在庫情報 // ADD K2015/04/01 高騁 森川部品個別依頼
            DorpdownList.Visible := False;
            // ---UPD 2011/03/07------------->>>>
//            SalesSlipNum.Visible := False; // 伝票番号
//            Sa    lesSlipNumBtn.Visible := False; // 伝票番号BTN
            pnl8.Visible := False;    //伝票番号
            // ---UPD 2011/03/07-------------<<<<
          end;
          // ---ADD 2011/02/11-------------<<<<
         checkBox_MakeQR.Checked := isMakeQR;
         // --- UPD m.suzuki 2010/06/12 ----------<<<<<
        //>>>  UPD 2012/09/12 10/17配信システムテスト障害№1対応
        // if (canCloseFlg) then
        // begin
        //   Close;
        // end;
          if (canCloseFlg) then
          begin
           b_CloseFlg := False;
           Close;
          end else
          begin
           b_CloseFlg := False;
          end;
        except
         exit;
        end;
        //>>>  UPD 2012/09/12 10/17配信システムテスト障害№1対応
      end;
   2: begin  //新規
       xNew();
      end;

   5:  begin  //戻るボタン

           // --- ADD 2012/05/24 No.849 ---------->>>>>
           //締済み伝票の場合
           if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp) then
           begin
            SalesSlipNum.setFocus;
            Form4.ActiveControl := SalesSlipNum;
            Exit;
           end;
           // --- ADD 2012/05/24 No.849 ----------<<<<<

           if (xTabFooterContainsFocus()) then
           begin
            if (HNsGrid1.Enabled = True) then
            begin
               HNsGrid1.SetFocus;
               if i_searchPartsMode = 1 then
               begin
               // --- UPD 2010/07/07 ---------->>>>>
                 //HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2);
                 if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2]) then
                 begin
                    //HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.LogicalRow * 2);//DEL 2011/07/27
                    //add 2011/07/27
                    if (HNsGrid1.ReadOnly[ctCol_GoodsName, HNsGrid1.LogicalRow * 2] = False) then
                       begin
                          HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.LogicalRow * 2);
                       end else
                       begin
                          // --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
                          //xSetNextFocus(NextCtrl);
                          // 仕入の場合
                          if ((HNsGrid1.ColWidths[ctCol_StockDate] <> 0) and
                              (HNsGrid1.ColWidths[ctCol_SupplierCdForOrder] = 0) and
                              (HNsGrid1.ColWidths[ctCol_DtlNote] = 0)) then
                          begin
                            if (optStockDateCtrl = 1) then // 仕入日付フォーカス制御オプション(OPT-CPM0060)がオンの場合
                            begin
                              HNsGrid1.GotoCell(ctCol_StockDate, HNsGrid1.Row);
                            end
                            else
                            begin
                              HNsGrid1.GotoCell(ctCol_PartySalesSlipNum, HNsGrid1.Row);
                            end;
                            HNsGrid1.ShowInplaceEdit;
                          end;
                          // --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
                       end;
                     //add 2011/07/27
                 end else
                 begin
                    HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2);
                 end;
               end
               else
               begin
                 //HNsGrid1.FocusCell(ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1);
                 if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1]) then
                 begin
                    //HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.LogicalRow * 2);//DEL 2011/07/27
                    //add 2011/07/27
                    if (HNsGrid1.ReadOnly[ctCol_GoodsName, HNsGrid1.LogicalRow * 2] = False) then
                       begin
                          HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.LogicalRow * 2);
                       end else
                       begin
                          // --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
                          //xSetNextFocus(NextCtrl);
                          // 仕入の場合
                          if ((HNsGrid1.ColWidths[ctCol_StockDate] <> 0) and
                              (HNsGrid1.ColWidths[ctCol_SupplierCdForOrder] = 0) and
                              (HNsGrid1.ColWidths[ctCol_DtlNote] = 0)) then
                          begin
                            if (optStockDateCtrl = 1) then // 仕入日付フォーカス制御オプション(OPT-CPM0060)がオンの場合
                            begin
                              HNsGrid1.GotoCell(ctCol_StockDate, HNsGrid1.Row);
                            end
                            else
                            begin
                              HNsGrid1.GotoCell(ctCol_PartySalesSlipNum, HNsGrid1.Row);
                            end;
                            HNsGrid1.ShowInplaceEdit;
                          end;
                          // --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
                       end;
                    // add 2011/07/27
                 end else
                 begin
                    HNsGrid1.FocusCell(ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1);
                    // --- ADD 2016/02/17 Wakita ---------->>>>>
                    // 編集モードへ切り替える
                    HNsGrid1.ShowInplaceEdit;
                    // --- ADD 2016/02/17 Wakita ----------<<<<<
                 end;
               // --- UPD 2010/07/07 ----------<<<<<
               end;
            end
            else
            begin
               if (CarMngCode.ReadOnly = True) then
               begin
                 InitialSetFocusTick();
               end
               else
               begin
                 CarMngCode.SetFocus;
               end;
            end;
           end else if (CarMngCode.Focused or CarMngCodeBtn.Focused or ModelDesignationNo.Focused
           or CategoryNo.Focused or EngineModelNm.Focused
           or FullModelBtn.Focused or FullModel.Focused
           or MakerCode.Focused or ModelCode.Focused
           or ModelSubCode.Focused or ModelFullName.Focused
           or ProduceFrameNo.Focused or ColorNo.Focused or TrimNo.Focused
           or FirstEntryDate.Focused
           or (Form4.ActiveControl.Name = 'FirstEntryDateJpn')
                    or (Form4.ActiveControl.Name = 'FirstEntryDateYear')
                    or (Form4.ActiveControl.Name = 'FirstEntryDateMonth')
           ) then
           begin

           // ADD 2010/08/13 ---->>>>
             // BL検索モード
//             if (i_searchPartsMode = 1) then
//             begin
//                if (FullModel.Focused) then
//                begin
//                   PrevCtrl := FullModel;
//                   NextCtrl := HNsGrid1;
//                   xArrowKeyMain(PrevCtrl,NextCtrl,VK_UP);
//
//                   if (not fullModeFlg) then
//                   begin
//                      Exit;
//                   end;
//                end;
//             end;
             // ADD 2010/08/13 ----<<<<

           // --- DEL 2013/03/21 ---------->>>>>
           //InitialSetFocusTick();
           // --- DEL 2013/03/21 ----------<<<<<
           // --- ADD 2013/03/21 ---------->>>>>
           // ハンドル位置チェックでエラーとなった場合、
           // フォーカスを車台番号のままとする
           if (PrevCtrl = nil) or (NextCtrl = nil) or (NextCtrl.Name <> 'ProduceFrameNo') or (PrevCtrl.Name <> 'ProduceFrameNo') then
           begin
             InitialSetFocusTick();
           end;
           // --- ADD 2013/03/21 ----------<<<<<
           // --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
           //end else if (Form4.ActiveControl = HNsGrid1) then
           end else if ((Form4.ActiveControl = HNsGrid1) or
                        (Form4.ActiveControl.Name = '')) then
           // --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
           begin
             // --- UPD 2010/07/07 ---------->>>>>
             //if (CarMngCode.ReadOnly = True) then
             if ((not CarMngCode.CanFocus()) or (CarMngCode.ReadOnly = True)) then
             begin
               //InitialSetFocusTick();
               if ((not ModelDesignationNo.CanFocus()) or (ModelDesignationNo.ReadOnly = True)) then
               begin
                  InitialSetFocusTick();
               end else
               begin
                  ModelDesignationNo.SetFocus;
               end;
             // --- UPD 2010/07/07 ----------<<<<<
             end
             else
             begin
               CarMngCode.SetFocus;
             end;
           end;

           // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- >>>>>
           xSetSalesUnPrcBtnEnabled();
           // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- <<<<<

       end;

   6:  begin  //進むボタン

           // --- ADD 2012/05/24 No.849 ---------->>>>>
           //締済み伝票の場合
           if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp) then
           begin
            SalesSlipNum.setFocus;
            Form4.ActiveControl := SalesSlipNum;
            Exit;
           end;
           // --- ADD 2012/05/24 No.849 ----------<<<<<

           // ----- ADD K2011/09/01 --------------------------->>>>>
           // ----- ADD K2011/12/09 --------------------------->>>>>
           // ----- UPD T.Miyamoto 2012/11/13 ------------------------------>>>>>
           //if (loginEnterpriseCode = login_EnterpriseCode) then
           if (loginEnterpriseCode = login_EnterpriseCode) or (optDateCtrl <> 0) then
           // ----- UPD T.Miyamoto 2012/11/13 ------------------------------<<<<<
           begin
           // ----- ADD K2011/12/09 ---------------------------<<<<<
               if (PrevCtrl = SalesDate) then
               begin
                 preSalesDate := salesSlip_disp.SalesDate;
                 //salesSlip_disp.SalesDate := SalesDate.LongDate; // DEL K2011/09/02
                 salesSlip_disp.SalesDate := TDateTimeToTicks(StrToDateTime(FormatFloat('0000/00/00', SalesDate.LongDate))); // ADD K2011/09/02
                 // 売上データキャッシュ処理
                 gpxMAHNB01012B_CacheForChange(salesSlip_disp);
               end;
           end;// ADD K2011/12/09
           // ----- ADD K2011/09/01 ---------------------------<<<<<
           // --- UPD 2012/05/10 ---------->>>>>
           //xSetNextControl();
           srResult := xSetNextControl();
           // --- UPD 2012/05/10 ----------<<<<<
           // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- >>>>>
           xSetSalesUnPrcBtnEnabled();
           // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- <<<<<
       end;

//   11: begin  //仕入
//           SectionCode.DataText := '';
//           SectionCode.SetFocus;
//       end;

   3:  begin  //確定

         setSaveFlag := -1;

         f3_enableFlg := False;   // ADD 2010/11/25

         // ADD 2010/10/11 --- >>>>
         // ADD 2010/10/08 --- >>>>
         if ((Form4.ActiveControl = HNsGrid1)
             and (btnInputStockInfo.Visible = True)
             and (btnInputStockInfo.Enabled = True)
             and (HNsGrid1.ColWidths[ctCol_StockDate] = 0)
             and (HNsGrid1.ColWidths[ctCol_SupplierCdForOrder] = 0)
             and (HNsGrid1.ColWidths[ctCol_DtlNote] = 0)) then
         begin
//           rowIdx := HNsGrid1.Row;// ADD 2011/12/01 LIUZY REDMINE#8379   // DEL 2012/01/18 YANGMJ ソースマージ
//           colIndex := HNsGrid1.Col; // ADD 2011/12/01 LIUZY REDMINE#8379 // DEL 2012/01/18 YANGMJ ソースマージ

            //BitBtn_InputStockInfo(senderObj);

           //xSettingGridColVisible(0, 0);
           if (i_InputType <> 2) then
           begin
              // --- ADD 2012/05/10 ---------->>>>>
              gpxMAHNB01013B_DoAddLine(4,0,0);
              srResult := xSetNextControl();
              if (srResult = False) then
              begin
                NextCtrl := CustomerCode;
                ArrowKeyControl1ChangeFocus(PrevCtrl, NextCtrl, VK_F10);
                Exit;
              end;
              // --- ADD 2012/05/10 ----------<<<<<
              i_InputType := 2;
           end
           else
           begin
              i_InputType := 0;
           end;

           //-----ADD 2011/11/30 YANGMJ REDMINE#8353----->>>>>
           if (pnl1.Visible = True) then
           begin
               BitBtn_Action.SetFocus;
           // -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
//           end
//           //-----ADD 2011/12/01 YANGMJ REDMINE#8344----->>>>>
//           else begin
//             //-----ADD 2011/12/22 李小路 REDMINE#27451 ----->>>>>
//             if rowIndex mod 2 = 0 then
//             begin
//             //-----ADD 2011/12/22 李小路 REDMINE#27451 -----<<<<<
//               iRow := rowIdx div 2 - 1;
//               salesRowNo := RCHNB01003UADM.SalesRowNo[iRow];
//               value := HNsGrid1.CurrentCell;
//               xPriceCheckProc(colIndex, rowIdx, iRow, salesRowNo, value, flag);
//               if flag then
//               begin
//                 i_InputType := 0;
//                 exit;
//               end;
//             end; // ADD 2011/12/22 李小路 REDMINE#27451
           //-----ADD 2011/12/01 YANGMJ REDMINE#8344-----<<<<<
           // -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
           end;
           // -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
           //-----ADD 2011/11/30 YANGMJ REDMINE#8353-----<<<<<
           //BitBtn_Action.SetFocus;//DEL 2011/11/30 YANGMJ REDMINE#8353
           //-----ADD 2011/12/01 YANGMJ REDMINE#8344----->>>>>
//           if checkSaleCd then
//           begin
//              checkSaleCd := False;
//              dateTimeEigth := Now();
//              i_InputType := 0;
//              exit;
//           end;
           //-----ADD 2011/12/01 YANGMJ REDMINE#8344-----<<<<<
           // -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
           xSettingGridColVisible(0, i_InputType);
           HNsGrid1.SetFocus;
           rowEffectiveIndex := xSettingGridRowFromInputChange();

           Form4.Width := Form4.Width + 1;
           Form4.Width := Form4.Width - 1;

           if rowEffectiveIndex >= 0 then
           begin
             if (i_InputType = 2) then
             begin

                for rowIndex := 2 to HNsGrid1.RowCount - 1 do
                begin
                  //有効行のみ
                  if (gpxMAHNB01013B_GridJoinCheck(0, rowIndex div 2 -1 , -1, 9) = 1) then
                  begin
                    // UPD 2013/04/10 T.Miyamoto ------------------------------>>>>>
                    //// --- UPD 2012/04/10 No.607 ---------->>>>>
                    ////if HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, rowIndex] = False then
                    //if HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, rowIndex + 1] = False then
                    //// --- UPD 2012/04/10 No.607 ----------<<<<<
                    if ((rowIndex mod 2) = 0) and
                       (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, rowIndex + 1] = False) then
                    // UPD 2013/04/10 T.Miyamoto ------------------------------<<<<<
                    begin
//                      NextCtrl := HNsGrid1;
//                      FocusCellReserve.Col := ctCol_SupplierCdForStock;
//                      FocusCellReserve.Row := rowIndex div 2;
//                      FocusCellReserve.Line := 0;
//                      xSetNextFocus(NextCtrl);
// -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
                      // -----ADD 2011/12/01 LIUZY REDMINE#8379 ----->>>>>
//                      if (rowIdx -1 <> rowIndex) then
//                      begin
//                        iRow := HNsGrid1.Row div 2 - 1;
//                        if (gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,6) = 9) then
//                        begin
//                          HNsGrid1.GotoCell(ctCol_SalesRate, (HNsGrid1.Row div 2) * 2 + 1);
//                          HNsGrid1.FocusCell(9,  (HNsGrid1.Row div 2) * 2 + 1);
//                          HNsGrid1.ShowInplaceEdit;
//                          i_InputType := 0;
//                          xSettingGridColVisible(0, i_InputType);
//                          HNsGrid1.SetFocus;
//                          rowEffectiveIndex := xSettingGridRowFromInputChange();
//                          Exit;
//                        end;
//                      end;
                      // -----ADD 2011/12/01 LIUZY REDMINE#8379 -----<<<<<
// -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
                      // --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
                      //// --- UPD 2012/04/10 No.607 ---------->>>>>
                      ////HNsGrid1.GotoCell(ctCol_SupplierCdForStock, rowIndex);
                      //HNsGrid1.GotoCell(ctCol_PartySalesSlipNum, rowIndex + 1);
                      //// --- UPD 2012/04/10 No.607 ----------<<<<<
                      if (optStockDateCtrl = 1) then // 仕入日付フォーカス制御オプション(OPT-CPM0060)がオンの場合
                      begin
                        HNsGrid1.GotoCell(ctCol_StockDate, rowIndex);
                      end
                      else
                      begin
                        HNsGrid1.GotoCell(ctCol_PartySalesSlipNum, rowIndex + 1);
                      end;
                      HNsGrid1.ShowInplaceEdit;
                      // --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
                      //HNsGrid1.ShowInplaceEdit; // ADD 2011/12/01 LIUZY REDMINE#8379  // DEL 2012/01/18 YANGMJ ソースマージ
                      gpxMAHNB01013B_DoAddLine(4,0,0); // ADD 2011/02/11
                      Exit;
                    end;
                  end
                  else
                  begin
                    // --- ADD 2012/04/10 No.801 ---------->>>>>
                    HNsGrid1.SetFocus;
                    // --- ADD 2012/04/10 No.801 ----------<<<<<
                    if i_searchPartsMode = ctGoodsNoSearch then
                    begin
//                      NextCtrl := HNsGrid1;
//                      FocusCellReserve.Col := ctCol_GoodsNo;
//                      FocusCellReserve.Row := rowIndex div 2;
//                      FocusCellReserve.Line := 1;
//                      xSetNextFocus(NextCtrl);
// -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
                      // -----ADD 2011/12/01 LIUZY REDMINE#8379 ----->>>>>
//                      iRow := HNsGrid1.Row div 2 - 1;
//                      if (gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,6) = 9) then
//                      begin
//                        HNsGrid1.GotoCell(ctCol_SalesRate, (HNsGrid1.Row div 2) * 2 + 1);
//                        HNsGrid1.FocusCell(9,  (HNsGrid1.Row div 2) * 2 + 1);
//                        HNsGrid1.ShowInplaceEdit;
//                        i_InputType := 0;
//                        xSettingGridColVisible(0, i_InputType);
//                        HNsGrid1.SetFocus;
//                        rowEffectiveIndex := xSettingGridRowFromInputChange();
//                        Exit;
//                      end;
                      // -----ADD 2011/12/01 LIUZY REDMINE#8379 -----<<<<<
// -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
                      HNsGrid1.GotoCell(ctCol_GoodsNo, rowIndex);

                    end
                    else if i_searchPartsMode = ctBLCodeSearch then
                    begin
//                      NextCtrl := HNsGrid1;
//                      FocusCellReserve.Col := ctCol_BLGoodsCode;
//                      FocusCellReserve.Row := rowIndex div 2;
//                      FocusCellReserve.Line := 0;
//                      xSetNextFocus(NextCtrl);
// -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
                    // -----ADD 2011/12/01 LIUZY REDMINE#8379 ----->>>>>
//                    iRow := HNsGrid1.Row div 2 - 1;
//                    if (gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,6) = 9) then
//                    begin
//                      HNsGrid1.GotoCell(ctCol_SalesRate, (HNsGrid1.Row div 2) * 2 + 1);
//                      HNsGrid1.FocusCell(9, (HNsGrid1.Row div 2) * 2 + 1);
//                      i_InputType := 0;
//                      xSettingGridColVisible(0, i_InputType);
//                      HNsGrid1.SetFocus;
//                      rowEffectiveIndex := xSettingGridRowFromInputChange();
//                      Exit;
//                    end;
                    // -----ADD 2011/12/01 LIUZY REDMINE#8379 -----<<<<<
// -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
                        HNsGrid1.GotoCell(ctCol_BLGoodsCode, rowIndex);
                    end;
                    gpxMAHNB01013B_DoAddLine(4,0,0); // ADD 2011/02/11
                    Exit;
                  end;
                end;
             end
           end;
            gpxMAHNB01013B_DoAddLine(4,0,0); // ADD 2011/02/11
            exit;
         end
         else
         // --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
         //if ((Form4.ActiveControl = HNsGrid1)
         if (((Form4.ActiveControl = HNsGrid1) or
              (Form4.ActiveControl.Name = ''))
         // --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
             and (btnInputStockInfo.Visible = True)
             and (btnInputStockInfo.Enabled = True)
             and (HNsGrid1.ColWidths[ctCol_StockDate] <> 0)) then
         begin

           //xSettingGridColVisible(0, 0);

           if (i_InputType <> 2) then
           begin
              // --- ADD 2012/05/10 ---------->>>>>
              gpxMAHNB01013B_DoAddLine(4,0,0);
              srResult := xSetNextControl();
              if (srResult = False) then
              begin
                NextCtrl := CustomerCode;
                ArrowKeyControl1ChangeFocus(PrevCtrl, NextCtrl, VK_F10);
                Exit;
              end;
              // --- ADD 2012/05/10 ----------<<<<<
              i_InputType := 2;
           end
           else
           begin
              i_InputType := 0;
           end;
           //-----ADD 2011/11/30 YANGMJ REDMINE#8353----->>>>>
           if (pnl1.Visible = True) then
           begin
               BitBtn_Action.SetFocus;
           end;
           //-----ADD 2011/11/30 YANGMJ REDMINE#8353-----<<<<<
           //BitBtn_Action.SetFocus; //DEL 2011/11/30 YANGMJ REDMINE#8353
           xSettingGridColVisible(0, i_InputType);
           HNsGrid1.SetFocus;
           rowEffectiveIndex := xSettingGridRowFromInputChange();

         end;
         // ADD 2010/10/08 --- <<<<
         // ADD 2010/10/11 --- <<<<

         if xTabFooterContainsFocus <> true then
//
//         if ((pgc1.ActivePageIndex = 0) and (SlipNoteCode.Focused) = false)
//            and ((pgc1.ActivePageIndex = 1) and (SlipMemo1.Focused) = false)
//            and ((pgc1.ActivePageIndex = 2) and (CarSlipNote.Focused) = false) then
         begin
            gpxMAHNB01013B_DoAddLine(4,0,0); // ADD 2011/02/11

            // --- UPD 2012/05/10 ---------->>>>>
            //xSetNextControl();
            srResult := xSetNextControl();
            // --- UPD 2012/05/10 ----------<<<<<

// -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
//            // -----ADD 2011/12/01 LIUZY REDMINE#8379 ----->>>>>
//            if checkPrice then
//            begin
//              checkPrice := false;
//            end else begin
//            // -----ADD 2011/12/01 LIUZY REDMINE#8379 -----<<<<<
// -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
            // UPD 2010/10/08  --- >>>
            NextCtrl := CustomerCode;
            ArrowKeyControl1ChangeFocus(PrevCtrl, NextCtrl, VK_F10);
            // UPD 2010/10/08  --- <<<
            //end;// ADD 2011/12/01 LIUZY REDMINE#8379  // DEL 2012/01/18 YANGMJ ソースマージ
//            xSettingToolBarButtonCaption;

            // --- ADD 2012/04/10 No.607 ---------->>>>>
            KeyPreview := True;
            // --- ADD 2012/04/10 No.607 ----------<<<<<

            exit;
           // UPD 2011/09/08  --- >>>
//         end;
          end else
          begin
              ArrowKeyControl1ChangeFocus(PrevCtrl, PrevCtrl, VK_F10);
          end;
          // UPD 2011/09/08  --- <<<
          // ----- ADD K2011/09/20 --------------------------->>>>>
          // ----- ADD K2011/12/09 --------------------------->>>>>
          if (loginEnterpriseCode = login_EnterpriseCode) then
          begin
               if noSaveFlg then
               begin
                  noSaveFlg := False;
                  exit;
               end;
          end;// ADD K2011/12/09
          // ----- ADD K2011/09/20 ---------------------------<<<<<
         xdoSave(true);
       end;

//   6:  begin  //伝票呼出
//         //検索開始
//         xPaste();
//       end;

   7:  begin  //元に戻す
         xRetry();
       end;
//
//   8:  begin  //削除
//         xDelete();
//       end;

//   9:  begin  //貼り付け
//         //xCopy();
//       end;
// --- ADD 2010/05/31 ---------->>>>>
   29:  begin  //ESC
// --- UPD 2012/05/31 No.282---------->>>>>
//         xdoEsc();
        xdoEsc(Sender);
// --- UPD 2012/05/31 No.282----------<<<<<
       end;
// --- ADD 2010/05/31 ----------<<<<<

  end;
end;

 procedure   TForm4.PageControl1DrawTab(Control:   TCustomTabControl;
      TabIndex:   Integer;   const   Rect:   TRect;   Active:   Boolean);
  var
      AText:   string;
      APoint:   TPoint;
      TmpRect:   TRect;
      i: Integer;
  begin

      if (Active) then
      begin
         with   uTabControl_Footer.Canvas   do
         begin
          Brush.Color   := RGB(255, 219, 219);

          AText   := TPageControl(Control).Pages[TabIndex].Caption;

          FillRect(Rect);

          with   Control.Canvas   do
          begin
              APoint.x   :=   (Rect.Right   -   Rect.Left)   div   2   -   TextWidth(AText)   div   2;
              APoint.y   :=   (Rect.Bottom   -   Rect.Top)   div   2   -   TextHeight(AText)   div   2;
              TextRect(Rect,   Rect.Left   +   APoint.x,   Rect.Top   +   APoint.y,  AText);
          end;
          end;
      end
      else
      begin
         with   uTabControl_Footer.Canvas   do
         begin
          Brush.Color   := RGB(155, 192, 255);
          FillRect(Rect);
          AText   := TPageControl(Control).Pages[TabIndex].Caption;
          with   Control.Canvas   do
          begin
              APoint.x   :=   (Rect.Right   -   Rect.Left)   div   2   -   TextWidth(AText)   div   2;
              APoint.y   :=   (Rect.Bottom   -   Rect.Top)   div   2   -   TextHeight(AText)   div   2;
              TextRect(Rect,   Rect.Left   +   APoint.x,   Rect.Top   +   APoint.y,  AText);
          end;
          end;
      end;
  end;

procedure TForm4.redSlipButtonClick(Sender: TObject);
var
  canRed, afterSaveClearFlg : Boolean;
  redDialogResult, salesRowNo, searchType : Integer;
  salesDetailArray: TSalesSlipInputCustomArrayA2;
  // --- ADD m.suzuki 2010/06/12 ---------->>>>>
//  isMakeQR: Boolean; // DEL 2011/02/11
  isMakeQR, isErrorFlag: Boolean; // ADD 2011/02/11
  // --- ADD m.suzuki 2010/06/12 ----------<<<<<
  beforeSalesSlipNumText:  WideString;  // ADD 2013/02/20 Wakita ③
begin
  // --- UPD m.suzuki 2010/06/12 ---------->>>>>
  //gpxMAHNB01013B_ShowRedSaveCheckDialog(True, afterSaveClearFlg);
  // --- ADD 2010/07/16 ---------->>>>>
  if checkBox_MakeQR.Visible then
  BEGIN
      isMakeQR := checkBox_MakeQR.Checked;
  END else begin
      isMakeQR := False;
  END;
  //isMakeQR := checkBox_MakeQR.Checked;
  // --- ADD 2010/07/16 ----------<<<<<
  gpxMAHNB01013B_ShowRedSaveCheckDialog(True, afterSaveClearFlg, isMakeQR);
  checkBox_MakeQR.Checked := isMakeQR;
  // --- UPD m.suzuki 2010/06/12 ----------<<<<<
  // ---ADD 2011/02/11------------->>>>
  gpxMAHNB01013B_GetErrorFlag(isErrorFlag);
  if isErrorFlag then
  begin
    _isErrorFlag := isErrorFlag;
    newButton.Visible := False; // 新規(F9)
    saveButton.Visible := False; // 確定(F10)
    deleteSlipButton.Visible := False; // 伝票削除(F12)
    returnButton.Visible := False; // 戻る(F2)
    forwardButton.Visible := False; // 進む(F3
    guideButton.Visible := False; // ガイド(F5)
    searchCarChangeButton.Visible := False; // 検索切替(F4)
    ReadSlipButton.Visible := False; // 伝票呼出(X)
    shipmentAddUpButton.Visible := False; // 貸出計上(I)
    acceptAnOrderAddUpButton.Visible := False; // 受注計上(H)
    estimateAddUpButton.Visible := False; // 見積計上(Q)
    SlipHeaderCopyButton.Visible := False; // 見出貼付(F6)
    updateButton.Visible := False; // 更新(V)
    toolRetryButton.Visible := False; // 元に戻す(U)
    toolRedSlipButton.Visible := False; // 赤伝(R)
    toolReturnSlipButton.Visible := False; // 返品(Y)
    toolCopySlipButton.Visible := False; // 伝票複写(P)
    toolSetupButton.Visible := False; // 設定(O)
    toolReNewalbtn.Visible := False; // 最新情報(A)
    toolReferenceListButton.Visible := False; // 問合せ一覧
    toolGetTaxRateButton.Visible := False; // 税率入力 // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応
    toolEBooksButton.Visible := False; // 電帳.DX // ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応
    toolHisSearchButton.Visible := False; // 履歴検索 // ADD　2018/09/04 譚洪　履歴自動表示の対応
    //toolReplyTransactionButton.Visible := False; // 回答処理
    toolMailButton.Visible := False; // メール
    dateUpdateBottun.Visible := False; // 日付修正  // ADD 2011/08/02
    detailCopyButton.Visible := False; // 明細貼付  // ADD 連番729 2011/08/18
    UOEDataGet.Visible := False;// ADD  黄興貴 K2015/04/29 回答取込パタン追加
    discountAllLineBottun.Visible := False; // 一括値引 //ADD 2013/01/24 鄧潘ハン REDMINE#34141
    allSecInfoButton.Visible := False; // ADD K2015/04/01 高騁 森川部品個別依頼
    DorpdownList.Visible := False;
    // ---UPD 2011/03/07------------->>>>
//    SalesSlipNum.Visible := False; // 伝票番号
//    SalesSlipNumBtn.Visible := False; // 伝票番号BTN
    pnl8.Visible := False;    //伝票番号
    // ---UPD 2011/03/07-------------<<<<
  end;
  // ---ADD 2011/02/11-------------<<<<
  if afterSaveClearFlg then
  begin
    // --- ADD 2013/02/20 Wakita ③ ---------->>>>>
    //前回伝票番行設定
    gpxMAHNB01013B_GetBeforeSalesSlipNumText(beforeSalesSlipNumText);
    pnl_BeforeSalesSlipNum.Caption := beforeSalesSlipNumText;
    // --- ADD 2013/02/20 Wakita ③ ----------<<<<<

    // --- ADD 2013/02/20 Wakita ② ---------->>>>>
    //値引モード
    if(discountAllLineflag)then
    begin
        //「一括値引」→「売上」
        xNotDiscountInitalSet();
    end;
    // --- ADD 2013/02/20 Wakita ② ----------<<<<<

    xClearDisplayCarInfo;
    xDeatilClearDisplay;

    //>>> ADD  2012/05/17 SCM障害№162対応
    // データ取得・表示終了まで終了ボタン使用不可
    b_CloseFlg := True;
    //<<< ADD  2012/05/17 SCM障害№162対応

    //>>>2010/11/08
    xSetDisplay();
    xDeatilClearDisplay();
    xSetDisplayDetailInfo(salesRowNo);
    xChangeSearchModeReflect();
    xSettingAddInfoVisible();
    InitialSetFocusTick();
    //<<<2010/11/08

    //>>> ADD  2012/05/17 SCM障害№162対応
    // 終了ボタン使用可能
    b_CloseFlg := False;
    //<<< ADD  2012/05/17 SCM障害№162対応

  end;

  gpxMAHNB01013B_GetCanRed(canRed);
  gpxMAHNB01013B_RedSlip(True, canRed);

  // --- UPD 2010/06/02 ---------->>>>>
  gpxMAHNB01013B_GetCanRed(canRed);
  // --- UPD 2010/06/02 ----------<<<<<
  if canRed then
  begin
    eventCancelFlg := True; // ADD 2013/02/25 Wakita
    salesEmployeeCd.setFocus;
    Form4.ActiveControl := salesEmployeeCd;

    gpxMAHNB01013B_GetRedDialogResult(redDialogResult);
    if redDialogResult = 1 then
    begin

      //>>> ADD  2012/05/17 SCM障害№162対応
      // データ取得・表示終了まで終了ボタン使用不可
      b_CloseFlg := True;
      //<<< ADD  2012/05/17 SCM障害№162対応

      // 売上情報
      xSetDisplay();
      // 売上金額変更後発生イベント処理
      xSalesPriceChanged();

      // 車両情報画面表示処理
      salesRowNo := xGetActiveRowSalesRowNo();
      searchType := 0;
      xSetDisplayCarInfo(salesRowNo, searchType);

      // 車両項目制御
      // --- UPD 2010/05/31 ---------->>>>>
      //xSetDisplayDetailInfo();
      xSetDisplayDetailInfo(salesRowNo);
      // --- UPD 2010/05/31 ----------<<<<<

      // 明細データ設定
      xDeatilClearDisplay();
      gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

      // --- ADD 2010/05/31 ---------->>>>>
      xInitialRow;
      // --- ADD 2010/05/31 ----------<<<<<
      // --- ADD 2010/07/14 ---------->>>>>
      if (salesDetailArray.Csafield1Count > i_RowMaxCount) then
      begin
        xInitialRow_AddUp(salesDetailArray);
      end;
      // --- ADD 2010/07/14 ---------->>>>>
      xSetDetailRowFormC(salesDetailArray,-1);

      // 空白行削除処理
      xDeleteEmptyRow();

      // 明細グリッド設定処理
      xSettingGrid();

      // 返品理由コードにフォーカスをセット
      if (pnl46.CanFocus) then
      begin
        if (RetGoodsReason.CanFocus) then RetGoodsReason.setFocus;
      end;

      // ガイドボタンツール有効無効設定処理
      xSettingGuideButtonToolEnabled(OldCtrl);

      // Visible設定
      xSettingVisible();

      //追加情報タブ項目Visible設定
      xSettingAddInfoVisible();

      // 車両情報設定処理
      salesRowNo := xGetActiveRowSalesRowNo();

      // xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

      xSlipMemoInfoFormSetting(salesRowNo);
      // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
      //値引モード
      if(discountAllLineflag)then
      begin
          //「一括値引」→「売上」
          xNotDiscountInitalSet();
      end;
      // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<

      //>>> ADD  2012/05/17 SCM障害№162対応
      // 終了ボタン使用可能
      b_CloseFlg := False;
      //<<< ADD  2012/05/17 SCM障害№162対応

    end;
      SalesEmployeeCd.SetFocus;
//    OldCtrl := Form4.ActiveControl;
      eventCancelFlg := False; // ADD 2013/02/25 Wakita
  end;
end;

// *************************************************************************
// 画面項目Visible設定
// *************************************************************************
procedure TForm4.xSettingVisible();
var
  salesSlip : TSalesSlip;
begin

  // 年式
  if allDefSet.EraNameDispCd1 = 0 then
  begin
    // 西暦
    FirstEntryDate.DateFormat := HDedit.df4Y2M;
  end else
  begin
    // 和歴
    FirstEntryDate.DateFormat := HDedit.dfG2Y2M;
  end;

  gpxMAHNB01012B_GetSalesSlip(salesSlip);


  // -------ADD 2010/07/01-------->>>>>
  // 原価情報、粗利情報
  if (((salesSlip.SalesSlipCd <> 1) and (salesTtlSt.SlipChngDivCost = 2))
    or ((salesSlip.SalesSlipCd = 1) and (salesTtlSt.RetSlipChngDivCost = 2))) then
  begin
    // 修正呼出、計上
    if ((salesSlip.InputMode = ctINPUTMODE_SalesSlip_ShipmentAddUp) or
        (salesSlip.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp) or
        (salesSlip.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp) or
        (salesSlip.SalesSlipNum <> ctDefaultSalesSlipNum)) then
    begin
      TotalCost.Visible := False;
      TotalCostTitle.Visible := False;
      AddTotalCost.Visible := False;
      AddTotalCostTitle.Visible := False;
      totalGrossProfit.Visible := False;
      totalGrossProfitTitle.Visible := False;
      detailGrossProfitRateTitle.Visible := False;
      detailGrossProfitRate.Visible := False;
      totalGrossProfitRate.Visible := False;
      totalGrossProfitRateTitle.Visible := False;
      addTotalGrossProfit.Visible := False;
      addTotalGrossProfitTitle.Visible := False;
      addDetailGrossProfitRate.Visible := False;
      addDetailGrossProfitRateTitle.Visible := False;
      addTotalGrossProfitRate.Visible := False;
      addTotalGrossProfitRateTitle.Visible := False;
    end
    else
    begin
      totalGrossProfit.Visible := True;
      totalGrossProfitTitle.Visible := True;
      detailGrossProfitRateTitle.Visible := True;
      detailGrossProfitRate.Visible := True;
      totalGrossProfitRate.Visible := True;
      totalGrossProfitRateTitle.Visible := True;
      addTotalGrossProfit.Visible := True;
      addTotalGrossProfitTitle.Visible := True;
      addDetailGrossProfitRate.Visible := True;
      addDetailGrossProfitRateTitle.Visible := True;
      addTotalGrossProfitRate.Visible := True;
      addTotalGrossProfitRateTitle.Visible := True;
    end;
  end
  else
  begin
    totalGrossProfit.Visible := True;
    totalGrossProfitTitle.Visible := True;
    detailGrossProfitRateTitle.Visible := True;
    detailGrossProfitRate.Visible := True;
    totalGrossProfitRate.Visible := True;
    totalGrossProfitRateTitle.Visible := True;
    addTotalGrossProfit.Visible := True;
    addTotalGrossProfitTitle.Visible := True;
    addDetailGrossProfitRate.Visible := True;
    addDetailGrossProfitRateTitle.Visible := True;
    addTotalGrossProfitRate.Visible := True;
    addTotalGrossProfitRateTitle.Visible := True;
  end;

  // -------ADD 2010/07/01--------<<<<<
  // 粗利情報
  if ((salesTtlSt.GrsProfitDspCd = 1) or (salesTtlSt.CostDspDivCd = 0)
//      or ((salesSlip.SalesSlipCd <> 1) and (salesTtlSt.SlipChngDivCost = 2)) // DEL 2010/07/01
//      or ((salesSlip.SalesSlipCd = 1) and (salesTtlSt.RetSlipChngDivCost = 2))  // DEL 2010/07/01
      or (not _costDisplay)) then
  begin
    totalGrossProfit.Visible := False;
    totalGrossProfitTitle.Visible := False;
    detailGrossProfitRateTitle.Visible := False;
    detailGrossProfitRate.Visible := False;
    totalGrossProfitRate.Visible := False;
    totalGrossProfitRateTitle.Visible := False;
    addTotalGrossProfit.Visible := False;
    addTotalGrossProfitTitle.Visible := False;
    addDetailGrossProfitRate.Visible := False;
    addDetailGrossProfitRateTitle.Visible := False;
    addTotalGrossProfitRate.Visible := False;
    addTotalGrossProfitRateTitle.Visible := False;
    // ---------DEL 2010/07/01--------->>>>>
//  end else
//  begin
//    totalGrossProfit.Visible := True;
//    totalGrossProfitTitle.Visible := True;
//    detailGrossProfitRateTitle.Visible := True;
//    detailGrossProfitRate.Visible := True;
//    totalGrossProfitRate.Visible := True;
//    totalGrossProfitRateTitle.Visible := True;
//    addTotalGrossProfit.Visible := True;
//    addTotalGrossProfitTitle.Visible := True;
//    addDetailGrossProfitRate.Visible := True;
//    addDetailGrossProfitRateTitle.Visible := True;
//    addTotalGrossProfitRate.Visible := True;
//    addTotalGrossProfitRateTitle.Visible := True;
    // ---------DEL 2010/07/01---------<<<<<
  end;

  // 原価情報
  if ((salesTtlSt.CostDspDivCd = 0)
  //    or ((salesSlip.SalesSlipCd <> 1) and (salesTtlSt.SlipChngDivCost = 2)) // DEL 2010/07/01
  //    or ((salesSlip.SalesSlipCd = 1) and (salesTtlSt.RetSlipChngDivCost = 2)) // DEL 2010/07/01
      or (not _costDisplay)) then
  begin
      TotalCost.Visible := False;
      TotalCostTitle.Visible := False;
      AddTotalCost.Visible := False;
      AddTotalCostTitle.Visible := False;
  // ---------DEL 2010/07/01--------->>>>>
//  end else
//  begin
//    TotalCost.Visible := True;
//    TotalCostTitle.Visible := True;
//    AddTotalCost.Visible := True;
//    AddTotalCostTitle.Visible := True;
  // ---------DEL 2010/07/01---------<<<<<
  end;

  // 得意先注番
  case salesSlip.CustOrderNoDispDiv of
  0: //しない
    begin
      pnl_PartySaleSlipNum.Visible := false;
    end;
  1: //する
    begin
      pnl_PartySaleSlipNum.Visible := true;
    end;
  end;

  // 車両管理番号
  case salesTtlSt.CarMngNoDispDiv of
  0: //しない
    begin
      carMngNo.Visible := false;
    end;
  1: //する
    begin
      carMngNo.Visible := true;
    end;
  end;

  // 受注者
  case salesTtlSt.AcpOdrAgentDispDiv of
  0: //しない
    begin
      pnl_FrontEmployee.Visible:= true;
    end;
  1: //する
    begin
      pnl_FrontEmployee.Visible:= false;
    end;
  2: //必須
    begin
      pnl_FrontEmployee.Visible:= true;
    end;
  end;

  // 発行者
  case salesTtlSt.InpAgentDispDiv of
  0: //しない
    begin
      pnl_SalesInputCode.Visible:= true;
    end;
  1: //する
    begin
      pnl_SalesInputCode.Visible:= false;
    end;
  2: //必須
    begin
      pnl_SalesInputCode.Visible:= true;
    end;
  end;

  // 伝票備考２
  case salesTtlSt.BrSlipNote2DispDiv of
  0: //あり
    begin
      pnl_SlipNote2.Visible:= true;
    end;
  1: //なし
    begin
      pnl_SlipNote2.Visible:= false;
    end;
  end;

  // 伝票備考３
  case salesTtlSt.BrSlipNote3DispDiv of
  0: //あり
    begin
      pnl_SlipNote3.Visible:= true;
    end;
  1: //なし
    begin
      pnl_SlipNote3.Visible:= false;
    end;
  end;

  // 車輌管理オプション
  gpxMAHNB01013B_GetOptCarMng(optCarMng);

  if optCarMng = 1 then
  begin
    CarMngCodeBtn.Visible := True;

    if salesTtlSt.CarMngNoDispDiv = 1 then
    begin
      AddInfoTabSheet.TabVisible := true;
    end;
  end else
  begin
    CarMngCodeBtn.Visible := false;
    AddInfoTabSheet.TabVisible := false;
  end;
end;

// *************************************************************************
// Gridの初期設定
// *************************************************************************
procedure TForm4.xInitialSettingGridCol();
var
  i: Integer;
  j: Integer;
  iRow: Integer;
  maxLength : Integer;

begin
  // ヘッダー値の設定
  HNsGrid1.Cells[ctCol_RowNo, ctRow_RowNo] := 'No.';
  HNsGrid1.Cells[ctCol_BLGoodsCode, ctRow_BLGoodsCode] := 'BLｺｰﾄﾞ';
  HNsGrid1.Cells[ctCol_GoodsName, ctRow_GoodsName] := '品名';
  HNsGrid1.Cells[ctCol_GoodsNo, ctRow_GoodsNo] := '品番';
  HNsGrid1.Cells[ctCol_GoodsKindCode, ctRow_GoodsKindCode] := '純優';
  HNsGrid1.Cells[ctCol_GoodsMakerCd, ctRow_GoodsMakerCd] := 'ﾒｰｶｰ';
  HNsGrid1.Cells[ctCol_SupplierCd, ctRow_SupplierCd] := '仕入先';
  HNsGrid1.Cells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay] := '受注数';
  HNsGrid1.Cells[ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay] := '出荷数';
  //HNsGrid1.Cells[ctCol_SalesCode, ctRow_SalesCode] := '販売区分';   // DEL 譚洪 K2014/01/22
  // ADD 譚洪 K2014/01/22 --- >>>
  if (optNoBuTo = 1) then
  begin
    HNsGrid1.Cells[ctCol_SalesCode, ctRow_SalesCode] := '特販区分';
  end
  else
  begin
    HNsGrid1.Cells[ctCol_SalesCode, ctRow_SalesCode] := '販売区分';
  end;
  // ADD 譚洪 K2014/01/22 --- <<<

  HNsGrid1.Cells[ctCol_ListPriceDisplay, ctRow_ListPriceDisplay] := '標準価格';
  HNsGrid1.Cells[ctCol_OpenPriceDivDisplay, ctRow_OpenPriceDivDisplay] := 'OP';
  HNsGrid1.Cells[ctCol_CostRate, ctRow_CostRate] := '原価率';
  HNsGrid1.Cells[ctCol_SalesUnitCost, ctRow_SalesUnitCost] := '原単価';
  HNsGrid1.Cells[ctCol_SalesRate, ctRow_SalesRate] := '売価率';
  HNsGrid1.Cells[ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay] := '売単価';
  HNsGrid1.Cells[ctCol_SalesMoneyDisplay, ctRow_SalesUnitCost] := '';
  HNsGrid1.Cells[ctCol_SalesMoneyDisplay, ctRow_SalesMoneyDisplay] := '売上金額';
  HNsGrid1.Cells[ctCol_DtlNote, ctRow_DtlNote] := '明細備考';
  HNsGrid1.Cells[ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl] := '得意先注番';
  HNsGrid1.Cells[ctCol_CmpltSalesRowNo, ctRow_CmpltSalesRowNo] := ''; //一式番号
  //HNsGrid1.Cells[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate] := '納品完了予定日';// DEL 2010/07/01
  HNsGrid1.Cells[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate] := '回答納期';// ADD 2010/07/01
  HNsGrid1.Cells[ctCol_WarehouseCode, ctRow_WarehouseCode] := '倉庫';
  HNsGrid1.Cells[ctCol_WarehouseShelfNo, ctRow_WarehouseShelfNo] := '棚番';
  HNsGrid1.Cells[ctCol_SupplierStockDisplay, ctRow_SupplierStockDisplay] := '現在庫数';
  HNsGrid1.Cells[ctCol_SupplierCdForStock, ctRow_SupplierCdForStock] := '仕入先';
  HNsGrid1.Cells[ctCol_StockDate, ctRow_StockDate] := '仕入日';
  HNsGrid1.Cells[ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum] := '仕入伝票番号';
  HNsGrid1.Cells[ctCol_SlipMemoExist, ctRow_SlipMemoExist] := 'ﾒﾓ';
  HNsGrid1.Cells[ctCol_SlipMemoExist, ctRow_PartySalesSlipNum] := '';
//  HNsGrid1.Cells[xColNameToIndex('SupplierSlipExistTP'), xRowNameToIndex('SupplierSlipExistTP')] := '仕入情報存在イメージ';
  HNsGrid1.Cells[ctCol_BoCode, ctRow_BoCode] := 'BO';
  HNsGrid1.Cells[ctCol_SupplierCdForOrder, ctRow_SupplierCdForOrder] := '発注先';
  HNsGrid1.Cells[ctCol_AcceptAnOrderCntForOrder, ctRow_AcceptAnOrderCntForOrder] := '数量';
  HNsGrid1.Cells[ctCol_SupplierSnmForOrder, ctRow_SupplierSnmForOrder] := '発注先名称';
  HNsGrid1.Cells[ctCol_DeliveredGoodsDivNm, ctRow_DeliveredGoodsDivNm] := '納品区分';
  HNsGrid1.Cells[ctCol_FollowDeliGoodsDivNm, ctRow_FollowDeliGoodsDivNm] := 'H納品区分';
  HNsGrid1.Cells[ctCol_UOEResvdSectionNm, ctRow_UOEResvdSectionNm] := '指定拠点';
  HNsGrid1.Cells[ctCol_RecycleDivNm, ctRow_RecycleDivNm] := 'RC区分'; // 2010/05/30
  HNsGrid1.Cells[ctCol_GoodsMngNo, ctRow_GoodsMngNo] := 'PS管理番号'; // 2010/05/30

// ヘッダーCellのマージ
HNsGrid1.MergeCells(ctCol_GoodsName, ctRow_GoodsName, 4, 1); // 品名
HNsGrid1.MergeCells(ctCol_GoodsNo, ctRow_GoodsNo, 2, 1); // 品番
HNsGrid1.MergeCells(ctCol_SalesCode, ctRow_SalesCode, 2, 1); // 販売区分
HNsGrid1.MergeCells(ctCol_SupplierStockDisplay, ctRow_SupplierStockDisplay, 2, 1); // 現在庫数
HNsGrid1.MergeCells(ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, 2, 1); // 仕入伝票番号
HNsGrid1.MergeCells(ctCol_SupplierSnmForOrder, ctRow_SupplierSnmForOrder, 3, 1); // 発注先名称
HNsGrid1.MergeCells(ctCol_UOEResvdSectionNm, ctRow_UOEResvdSectionNm, 2, 1); // 指定拠点
HNsGrid1.MergeCells(ctCol_DtlNote, ctRow_DtlNote, 2, 1); // 明細備考
HNsGrid1.MergeCells(ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, 2, 1); // 納品完了予定日

HNsGrid1.Alignments[ctCol_RowNo, ctRow_RowNo] := taCenter;
HNsGrid1.Alignments[ctCol_GoodsName, ctRow_GoodsName] := taCenter;
HNsGrid1.Alignments[ctCol_GoodsNo, ctRow_GoodsNo] := taCenter;
HNsGrid1.Alignments[ctCol_GoodsKindCode, ctRow_GoodsKindCode] := taCenter;
HNsGrid1.Alignments[ctCol_GoodsMakerCd, ctRow_GoodsMakerCd] := taCenter;
HNsGrid1.Alignments[ctCol_SupplierCd, ctRow_SupplierCd] := taCenter;
HNsGrid1.Alignments[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay] := taCenter;
HNsGrid1.Alignments[ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay] := taCenter;
HNsGrid1.Alignments[ctCol_SalesCode, ctRow_SalesCode] := taCenter;
HNsGrid1.Alignments[ctCol_ListPriceDisplay, ctRow_ListPriceDisplay] := taCenter;
HNsGrid1.Alignments[ctCol_OpenPriceDivDisplay, ctRow_OpenPriceDivDisplay] := taCenter;
HNsGrid1.Alignments[ctCol_CostRate, ctRow_CostRate] := taCenter;
HNsGrid1.Alignments[ctCol_SalesUnitCost, ctRow_SalesUnitCost] := taCenter;
HNsGrid1.Alignments[ctCol_SalesRate, ctRow_SalesRate] := taCenter;
HNsGrid1.Alignments[ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay] := taCenter;
HNsGrid1.Alignments[ctCol_SalesMoneyDisplay, ctRow_SalesMoneyDisplay] := taCenter;
HNsGrid1.Alignments[ctCol_WarehouseCode, ctRow_WarehouseCode] := taCenter;
HNsGrid1.Alignments[ctCol_WarehouseShelfNo, ctRow_WarehouseShelfNo] := taCenter;
HNsGrid1.Alignments[ctCol_SupplierStockDisplay, ctRow_SupplierStockDisplay] := taCenter;
HNsGrid1.Alignments[ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum] := taCenter;
HNsGrid1.Alignments[ctCol_StockDate, ctRow_StockDate] := taCenter;
HNsGrid1.Alignments[ctCol_SupplierCdForStock, ctRow_SupplierCdForStock] := taCenter;

HNsGrid1.Alignments[ctCol_BoCode, ctRow_BoCode] := taCenter;
HNsGrid1.Alignments[ctCol_SupplierCdForOrder, ctRow_SupplierCdForOrder] := taCenter;
HNsGrid1.Alignments[ctCol_AcceptAnOrderCntForOrder, ctRow_AcceptAnOrderCntForOrder] := taCenter;
HNsGrid1.Alignments[ctCol_SupplierSnmForOrder, ctRow_SupplierSnmForOrder] := taCenter;
HNsGrid1.Alignments[ctCol_DeliveredGoodsDivNm, ctRow_DeliveredGoodsDivNm] := taCenter;
HNsGrid1.Alignments[ctCol_FollowDeliGoodsDivNm, ctRow_FollowDeliGoodsDivNm] := taCenter;
HNsGrid1.Alignments[ctCol_UOEResvdSectionNm, ctRow_UOEResvdSectionNm] := taCenter;
HNsGrid1.Alignments[ctCol_DtlNote, ctRow_DtlNote] := taCenter;
HNsGrid1.Alignments[ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl] := taCenter;
HNsGrid1.Alignments[ctCol_CmpltSalesRowNo, ctRow_CmpltSalesRowNo] := taCenter;
HNsGrid1.Alignments[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate] := taCenter;

HNsGrid1.Alignments[ctCol_RecycleDivNm, ctRow_RecycleDivNm] := taCenter; // 2010/05/30
HNsGrid1.Alignments[ctCol_GoodsMngNo, ctRow_GoodsMngNo] := taCenter; // 2010/05/30

// 明細Cellのマージ
gpxMAHNB01013B_GetSalesSlipInputConstructionData(maxLength,5);
for i := 0 to maxLength - 1 do
begin
  HNsGrid1.MergeCells(ctCol_GoodsName, (i + 1) * 2 + ctRow_GoodsName, 4, 1); // 品名
  HNsGrid1.MergeCells(ctCol_GoodsNo, (i + 1) * 2 + ctRow_GoodsNo, 2, 1); // 品番
  HNsGrid1.MergeCells(ctCol_SalesCode, (i + 1) * 2 + ctRow_SalesCode, 2, 1); // 販売区分
  HNsGrid1.MergeCells(ctCol_SupplierStockDisplay, (i + 1) * 2 + ctRow_SupplierStockDisplay, 2, 1); // 現在庫数
  HNsGrid1.MergeCells(ctCol_PartySalesSlipNum, (i + 1) * 2 + ctRow_PartySalesSlipNum, 2, 1); // 仕入伝票番号

  HNsGrid1.MergeCells(ctCol_SupplierSnmForOrder, (i + 1) * 2 + ctRow_SupplierSnmForOrder, 3, 1); // 発注先名称
  HNsGrid1.MergeCells(ctCol_UOEResvdSectionNm, (i + 1) * 2 + ctRow_UOEResvdSectionNm, 2, 1); // 指定拠点

  HNsGrid1.MergeCells(ctCol_DtlNote, (i + 1) * 2 + ctRow_DtlNote, 2, 1); // 明細備考
  HNsGrid1.MergeCells(ctCol_DeliGdsCmpltDueDate, (i + 1) * 2 + ctRow_DeliGdsCmpltDueDate, 2, 1); // 納品完了予定日
end;


// 明細カラー
for i := 2 to HNsGrid1.RowCount do
begin
   for j := 1 to HNsGrid1.ColCount - 1 do
   begin
     if ((j = 1) and ((i mod 2) = 0)) then
     begin
     // 2010/10/26 Sasaki >>>
//          HNsGrid1.Colors[j, i] := clNone;
//          HNsGrid1.ColorsTo[j, i] := clNone;
        if (HNsGrid1.Colors[j, i] <> clNone) then
          HNsGrid1.Colors[j, i] := clNone;

        if (HNsGrid1.ColorsTo[j, i] <> clNone) then
          HNsGrid1.ColorsTo[j, i] := clNone;
     // 2010/10/26 Sasaki <<<
     end
     else
     begin
     // 2010/10/26 Sasaki >>>
//          HNsGrid1.ColorsTo[j, i] := $DEDFDE;
//          HNsGrid1.Colors[j, i] := $DEDFDE;
         if (HNsGrid1.ColorsTo[j, i] <> $DEDFDE) then
          HNsGrid1.ColorsTo[j, i] := $DEDFDE;
         if (HNsGrid1.Colors[j, i] <> $DEDFDE) then
          HNsGrid1.Colors[j, i] := $DEDFDE;
     // 2010/10/26 Sasaki <<<
          HNsGrid1.ReadOnly[j, i] := true;
     end;
   end;
end;

//行番号付番
xGyoNoSet(1);

i_InputType := 0;  //通常入力

xInitialSettingGridColWidths;

// 仕入情報
HNsGrid1.Colors[ctCol_SupplierCdForStock, ctRow_SupplierCdForStock] := $52AE29;
HNsGrid1.ColorsTo[ctCol_SupplierCdForStock, ctRow_SupplierCdForStock] := clGreen;
HNsGrid1.FontColors[ctCol_SupplierCdForStock, ctRow_SupplierCdForStock] := clWhite;
HNsGrid1.Colors[ctCol_StockDate, ctRow_StockDate] := $52AE29;
HNsGrid1.ColorsTo[ctCol_StockDate, ctRow_StockDate] := clGreen;
HNsGrid1.FontColors[ctCol_StockDate, ctRow_StockDate] := clWhite;
HNsGrid1.Colors[ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum] := $52AE29;
HNsGrid1.ColorsTo[ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum] := clGreen;
HNsGrid1.FontColors[ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum] := clWhite;

// 発注情報
HNsGrid1.Colors[ctCol_BoCode, ctRow_BoCode] := $00D472BC;
HNsGrid1.ColorsTo[ctCol_BoCode, ctRow_BoCode] := $00AC3A8C;
HNsGrid1.FontColors[ctCol_BoCode, ctRow_BoCode] := clWhite;
HNsGrid1.Colors[ctCol_SupplierCdForOrder, ctRow_SupplierCdForOrder] := $00D472BC;
HNsGrid1.ColorsTo[ctCol_SupplierCdForOrder, ctRow_SupplierCdForOrder] := $00AC3A8C;
HNsGrid1.FontColors[ctCol_SupplierCdForOrder, ctRow_SupplierCdForOrder] := clWhite;
HNsGrid1.Colors[ctCol_AcceptAnOrderCntForOrder, ctRow_AcceptAnOrderCntForOrder] := $00D472BC;
HNsGrid1.ColorsTo[ctCol_AcceptAnOrderCntForOrder, ctRow_AcceptAnOrderCntForOrder] := $00AC3A8C;
HNsGrid1.FontColors[ctCol_AcceptAnOrderCntForOrder, ctRow_AcceptAnOrderCntForOrder] := clWhite;
HNsGrid1.Colors[ctCol_SupplierSnmForOrder, ctRow_SupplierSnmForOrder] := $00D472BC;
HNsGrid1.ColorsTo[ctCol_SupplierSnmForOrder, ctRow_SupplierSnmForOrder] := $00AC3A8C;
HNsGrid1.FontColors[ctCol_SupplierSnmForOrder, ctRow_SupplierSnmForOrder] := clWhite;
HNsGrid1.Colors[ctCol_DeliveredGoodsDivNm, ctRow_DeliveredGoodsDivNm] := $00D472BC;
HNsGrid1.ColorsTo[ctCol_DeliveredGoodsDivNm, ctRow_DeliveredGoodsDivNm] := $00AC3A8C;
HNsGrid1.FontColors[ctCol_DeliveredGoodsDivNm, ctRow_DeliveredGoodsDivNm] := clWhite;
HNsGrid1.Colors[ctCol_FollowDeliGoodsDivNm, ctRow_FollowDeliGoodsDivNm] := $00D472BC;
HNsGrid1.ColorsTo[ctCol_FollowDeliGoodsDivNm, ctRow_FollowDeliGoodsDivNm] := $00AC3A8C;
HNsGrid1.FontColors[ctCol_FollowDeliGoodsDivNm, ctRow_FollowDeliGoodsDivNm] := clWhite;
HNsGrid1.Colors[ctCol_UOEResvdSectionNm, ctRow_UOEResvdSectionNm] := $00D472BC;
HNsGrid1.ColorsTo[ctCol_UOEResvdSectionNm, ctRow_UOEResvdSectionNm] := $00AC3A8C;
HNsGrid1.FontColors[ctCol_UOEResvdSectionNm, ctRow_UOEResvdSectionNm] := clWhite;

//>>>2010/05/30
HNsGrid1.Colors[ctCol_RecycleDivNm, ctRow_RecycleDivNm] := $00db7093;
HNsGrid1.ColorsTo[ctCol_RecycleDivNm, ctRow_RecycleDivNm] := $00dc143c;
HNsGrid1.FontColors[ctCol_RecycleDivNm, ctRow_RecycleDivNm] := clWhite;
HNsGrid1.Colors[ctCol_GoodsMngNo, ctRow_GoodsMngNo] := $00db7093;
HNsGrid1.ColorsTo[ctCol_GoodsMngNo, ctRow_GoodsMngNo] := $00dc143c;
HNsGrid1.FontColors[ctCol_GoodsMngNo, ctRow_GoodsMngNo] := clWhite;
//<<<2010/05/30

end;

// *************************************************************************
// Gridの初期列の幅を設定
// *************************************************************************
procedure TForm4.xInitialSettingGridColWidths();
var
   i ,j ,col: Integer;
begin
    if (Form4.ClientWidth > 1024) then
    begin
      HNsGrid1.ColWidths[0] := 40;
      for j := 1 to HNsGrid1.ColCount - 1 do
      begin
         HNsGrid1.ColWidths[j] := 64;
      end;
    end;
    HNsGrid1.ColWidths[ctCol_GoodsKindCode] := 40;  //純優
    HNsGrid1.ColWidths[ctCol_OpenPriceDivDisplay] := 30;  //OP
    HNsGrid1.ColWidths[ctCol_SlipMemoExist] := 27;  //メモ
    HNsGrid1.ColWidths[ctCol_BoCode] := 40;  //BO
    HNsGrid1.ColWidths[ctCol_GoodsName] := 157;  //品番
    HNsGrid1.ColWidths[ctCol_BLGoodsCode] := 55;  //BLコード
    HNsGrid1.ColWidths[ctCol_SalesUnitCost] := 95;  //原単価
    HNsGrid1.ColWidths[ctCol_SalesMoneyDisplay] := 94;  //売上金額
    HNsGrid1.ColWidths[ctCol_SalesCode] := 90;  //販売区分
    HNsGrid1.ColWidths[ctCol_CostRate] := 64; //原価率
    HNsGrid1.ColWidths[ctCol_WarehouseCode] := 58; //倉庫
    HNsGrid1.ColWidths[ctCol_WarehouseShelfNo] := 70; //棚番

    // 発注情報
    HNsGrid1.ColWidths[ctCol_BoCode] := 0;
    HNsGrid1.ColWidths[ctCol_SupplierCdForOrder] := 0;
    HNsGrid1.ColWidths[ctCol_AcceptAnOrderCntForOrder] := 0;
    HNsGrid1.ColWidths[ctCol_DeliveredGoodsDivNm] := 0;
    HNsGrid1.ColWidths[ctCol_FollowDeliGoodsDivNm] := 0;

    //入力切替
    HNsGrid1.ColWidths[ctCol_DtlNote] := 0;
    HNsGrid1.ColWidths[ctCol_CmpltSalesRowNo] := 0;
    HNsGrid1.ColWidths[ctCol_DeliGdsCmpltDueDate] := 0;

    //仕入情報
    HNsGrid1.ColWidths[ctCol_PartySalesSlipNum] := 0;
    HNsGrid1.ColWidths[ctCol_StockDate] := 0;

    //>>>2010/05/30
    HNsGrid1.ColWidths[ctCol_RecycleDivNm] := 0;
    HNsGrid1.ColWidths[ctCol_GoodsMngNo] := 0;
    //<<<2010/05/30

//    ShowMessage(IntToStr(Form4.ClientWidth));

    if (Form4.ClientWidth > 1024) then
    begin
      for i := 0 to HNsGrid1.ColCount - 1 do
      begin
         col := HNsGrid1.ColWidths[i];
         HNsGrid1.ColWidths[i] := longint(col)*longint(Form4.ClientWidth) div 1024;
         if (i > 25) then
         begin
            HNsGrid1.ColWidths[i] := 0;
         end;
      end;
    end;


end;

// *************************************************************************
// Gridの列序号生成
// *************************************************************************
function TForm4.xColNameToIndex(Name: string): Integer;
var
  index: Integer;
  begin
    index := 1;
    Result := 0;

    // 行番号
    if (Name = 'RowNoTP') then
    begin
    Result := index - 1;

    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // BLコード　品番
    if (Name = 'BLGoodsCodeTP') or (Name = 'GoodsNoTP') then
    begin
    Result := index;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 品名
    if (Name = 'GoodsNameTP') then
    begin
    Result := index + 1;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 商品属性(純正優良)
    if (Name = 'GoodsKindCodeTP') then
    begin
    Result := index + 2;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // メーカー
    if (Name = 'GoodsMakerCdTP') then
    begin
    Result := index + 3;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 仕入先
    if (Name = 'SupplierCdTP') then
    begin
    Result := index + 4;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 受注数 出荷数
    if (Name = 'AcceptAnOrderCntDisplayTP') or (Name = 'ShipmentCntDisplayTP') then
    begin
    Result := index + 5;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 販売区分 定価
    if (Name = 'SalesCodeTP') or (Name = 'ListPriceDisplayTP') then
    begin
    Result := index + 6;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // オープン価格区分イメージ
    if (Name = 'OpenPriceDivDisplayTP') then
    begin
    Result := index + 7;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 原価率 売価率
    if (Name = 'CostRateTP') or (Name = 'SalesRateTP') then
    begin
    Result := index + 8;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 原価単価 売上単価
    if (Name = 'SalesUnitCostTP') or (Name = 'SalesUnPrcDisplayTP') then
    begin
    Result := index + 9;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 売上金額
    if (Name = 'SalesMoneyDisplayTP') then
    begin
    Result := index + 10;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    ///////////////////////////
    // 明細備考 得意先注番
    if (Name = 'DtlNoteTP') or (Name = 'PartySlipNumDtlTP') then
    begin
    Result := index + 11;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 納品完了予定日
    if (Name = 'DeliGdsCmpltDueDateTP') then
    begin
    Result := index + 12;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 一式番号
    if (Name = 'CmpltSalesRowNoTP') then
    begin
    Result := index + 13;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<


    // BO 発注先名称
    if (Name = 'BoCodeTP') or (Name = 'SupplierSnmForOrderTP') then
    begin
    Result := index + 14;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 発注先
    if (Name = 'SupplierCdForOrderTP') then
    begin
    Result := index + 15;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 発注数
    if (Name = 'AcceptAnOrderCntForOrderTP') then
    begin
    Result := index + 16;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 納品区分 指定拠点
    if (Name = 'DeliveredGoodsDivNmTP') or (Name = 'UOEResvdSectionNmTP')then
    begin
    Result := index + 17;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // H納品区分
    if (Name = 'FollowDeliGoodsDivNmTP') then
    begin
    Result := index + 18;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<
    ///////////////////////////

    // 倉庫 現在庫数
    if (Name = 'WarehouseCodeTP') or (Name = 'SupplierStockDisplayTP') then
    begin
    Result := index + 19;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 棚番
    if (Name = 'WarehouseShelfNoTP') then
    begin
    Result := index + 20;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 仕入伝票番号  仕入先
    if (Name = 'PartySalesSlipNumTP') or (Name = 'SupplierCdForStockTP') then
    begin
    Result := index + 21;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // 仕入日
    if (Name = 'StockDateTP') then
    begin
    Result := index + 22;
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    // メモ存在イメージ
    if (Name = 'SlipMemoExistTP') then
    begin
//    Result := index + 23; // 2010/05/30
    Result := index + 24;  //2010/05/30
    // 2010/10/26 Sasaki >>>
    //end;
    end else
    // 2010/10/26 Sasaki <<<

    //>>>2010/05/30
    // RC区分　PS管理番号
    if (Name = 'RecycleDivNmTP') or (Name = 'GoodsMngNoTP') then
    begin
    Result := index + 23;
    end;
    //<<<2010/05/30

  end;

// *************************************************************************
// Gridの行序号生成
// *************************************************************************
function TForm4.xRowNameToIndex(Name: string): Integer;
var
  index: Integer;
begin
  Result := 0;

  // 明細の一行目
  if (Name = 'RowNoTP') or (Name = 'BLGoodsCodeTP') or (Name = 'GoodsNameTP') or (Name = 'AcceptAnOrderCntDisplayTP') or (Name = 'SalesCodeTP')
     or (Name = 'CostRateTP') or (Name = 'SalesUnitCostTP') or (Name = 'WarehouseCodeTP') or (Name = 'WarehouseShelfNoTP') or (Name = 'SlipMemoExistTP')
     or (Name = 'SupplierCdForStockTP') or (Name = 'StockDateTP') or (Name = 'BoCodeTP') or (Name = 'SupplierCdForOrderTP')
     or (Name = 'RecycleDivNmTP') // 2010/05/30
     or (Name = 'AcceptAnOrderCntForOrderTP') or (Name = 'DeliveredGoodsDivNmTP') or (Name = 'FollowDeliGoodsDivNmTP') or (Name = 'DtlNoteTP') or (Name = 'CmpltSalesRowNoTP') then
  begin
    Result := 0;
  end;

  // 明細の二行目
  if (Name = 'GoodsNoTP') or (Name = 'GoodsKindCodeTP') or (Name = 'GoodsMakerCdTP') or (Name = 'SupplierCdTP') or (Name = 'ShipmentCntDisplayTP') or (Name = 'ListPriceDisplayTP') or (Name = 'OpenPriceDivDisplayTP')
     or (Name = 'SalesRateTP') or (Name = 'SalesUnPrcDisplayTP') or (Name = 'SalesMoneyDisplayTP') or (Name = 'SupplierStockDisplayTP') or (Name = 'PartySalesSlipNumTP')
     or (Name = 'GoodsMngNoTP') // 2010/05/30
     or (Name = 'SupplierSnmForOrderTP') or (Name = 'UOEResvdSectionNmTP') or (Name = 'PartySlipNumDtlTP') or (Name = 'DeliGdsCmpltDueDateTP') then

  begin
    Result := 1;
  end;

end;


// *************************************************************************
// Gridの行番号付番
// *************************************************************************
procedure TForm4.xGyoNoSet(iRowNo: Integer);
var
  ix: Integer;
  iRow: Integer;
  iCnt: Integer;
begin
  iCnt := 0;
  iRow := iRowNo;
  for ix := 1 to HNsGrid1.LogicalRowCount do
  begin
    HNsGrid1.LogicalCells[ctCol_RowNo, ctRow_RowNo, iCnt + 1] := IntToStr(iRow);

  Inc(iRow);
  Inc(iCnt);
  end;
end;

// --------------------------------------------------------------------------
// Gridのデータセット生成
// --------------------------------------------------------------------------
function TForm4.xCreateCD: Boolean;
begin
   cd := TClientDataSet.Create(nil);
   // クライアントデータセット生成
   cd.FieldDefs.Add('ID', ftInteger, 0);             // ID
   cd.FieldDefs.Add('BLGoodsCode', ftInteger, 0);   // BLコード
   cd.FieldDefs.Add('GoodsName', ftString, 30);    // 品名
   cd.FieldDefs.Add('GoodsNo', ftString, 30);      // 品番
   cd.CreateDataSet;
  Result := True;
end;

// *************************************************************************
// Gridのクリア
// *************************************************************************
procedure TForm4.xDeatilClearDisplay();
var
   iRow: Integer;
   i: Integer;
   j: Integer;
begin


  for iRow := 0 to HNsGrid1.LogicalRowCount - 1 do
  begin
    HNsGrid1.LogicalCells[ctCol_GoodsNo, ctRow_GoodsNo, iRow + 1] := '';
    // --- UPD 2012/08/06 Wakita ---------->>>>>
    //HNsGrid1.LogicalCells[ctCol_BLGoodsCode, ctRow_BLGoodsCode, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_BLGoodsCode, ctRow_BLGoodsCode, iRow + 1] := '0';
    // --- UPD 2012/08/06 Wakita ----------<<<<<
    HNsGrid1.LogicalCells[ctCol_GoodsName, ctRow_GoodsName, iRow + 1] := '';

    HNsGrid1.LogicalCells[ctCol_GoodsKindCode, ctRow_GoodsKindCode, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_GoodsMakerCd, ctRow_GoodsMakerCd, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SupplierCd, ctRow_SupplierCd, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_ListPriceDisplay, ctRow_ListPriceDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SalesUnitCost, ctRow_SalesUnitCost, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_WarehouseCode, ctRow_WarehouseCode, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SupplierStockDisplay, ctRow_SupplierStockDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_CostRate, ctRow_CostRate, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SalesRate, ctRow_SalesRate, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SalesMoneyDisplay, ctRow_SalesMoneyDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_StockDate, ctRow_StockDate, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_BoCode, ctRow_BoCode, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SupplierCdForOrder, ctRow_SupplierCdForOrder, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SupplierSnmForOrder, ctRow_SupplierSnmForOrder, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_DeliveredGoodsDivNm, ctRow_DeliveredGoodsDivNm, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SalesCode, ctRow_SalesCode, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SalesMoneyDisplay, ctRow_AcceptAnOrderCntDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntForOrder, ctRow_AcceptAnOrderCntForOrder, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_FollowDeliGoodsDivNm, ctRow_FollowDeliGoodsDivNm, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_UOEResvdSectionNm, ctRow_UOEResvdSectionNm, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_WarehouseShelfNo, ctRow_WarehouseShelfNo, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SlipMemoExist, ctRow_SlipMemoExist, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_OpenPriceDivDisplay, ctRow_OpenPriceDivDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_RecycleDivNm, ctRow_RecycleDivNm, iRow + 1] := ''; // 2010/05/30
    HNsGrid1.LogicalCells[ctCol_GoodsMngNo, ctRow_GoodsMngNo, iRow + 1] := ''; // 2010/05/30
    HNsGrid1.LogicalCells[ctCol_AddUpInfo, ctRow_AddUpInfo, iRow + 1] :='';   // ADD 2016/01/21 Wakita
  end;

  //行番号付番
  xGyoNoSet(1);

// 明細カラー
for i := 2 to HNsGrid1.RowCount do
begin
   for j := 1 to HNsGrid1.ColCount + 1 do
   begin
     if ((j = 1) and ((i mod 2) = 0)) then
     begin
          //なし
     end
     else
     begin
       // 2010/10/26 Sasaki >>>
       //   HNsGrid1.ColorsTo[j, i] := $DEDFDE;
       //   HNsGrid1.Colors[j, i] := $DEDFDE;
       if (HNsGrid1.ColorsTo[j, i] <> $DEDFDE) then
          HNsGrid1.ColorsTo[j, i] := $DEDFDE;
       if (HNsGrid1.Colors[j, i] <> $DEDFDE) then
          HNsGrid1.Colors[j, i] := $DEDFDE;
       // 2010/10/26 Sasaki <<<
     end;
   end;
end;

// --- ADD 2010/07/14 ---------->>>>>
if (HNsGrid1.LogicalRowCount > i_RowMaxCount) then
begin
  for iRow := 0 to HNsGrid1.LogicalRowCount - 1 do
  begin
      RCHNB01003UADM.ClrData(iRow);
  end;
end
else begin
// --- ADD 2010/07/14 ----------<<<<<
  for iRow := 0 to i_RowMaxCount - 1 do
  begin
      RCHNB01003UADM.ClrData(iRow);
  end;
// --- ADD 2010/07/14 ---------->>>>>
end;
// --- ADD 2010/07/14 ----------<<<<<


xSalesDetailRowInitialSetting(i_RowMaxCount);

// --- ADD 2012/04/10 No.801 ---------->>>>>
//HNsGrid1.SetFocus;
// --- ADD 2012/04/10 No.801 ----------<<<<<
//Focusをセット
//HNsGrid1.FocusCell(ctCol_BLGoodsCode, 2);  // DEL 2010/07/01
HNsGrid1.GotoCell(ctCol_BLGoodsCode, 2); // ADD 2010/07/01
// --- UPD m.kishi 2020/03/30 ---------->>>>>
//HNsGrid1.SetFocus;
if Form4.ActiveControl = HNsGrid1 then
begin
HNsGrid1.ShowInplaceEdit;
end;
// --- UPD m.kishi 2020/03/30 ----------<<<<<

end;

// *************************************************************************
// Gridのクリア
// *************************************************************************
procedure TForm4.xDeatilClearTable();
begin
   gpxMAHNB01013B_DeatilActionTable(-1,'DEL');
end;

// *************************************************************************
// Gridの入力切替
// *************************************************************************
procedure TForm4.BitBtn_InputChange(Sender: TObject);
var rowEffectiveIndex : Integer;
    NextCtrl: TWinControl;
    status,rowIndex: Integer;
begin
   gpxMAHNB01013B_DoAddLine(28,0,0); // ADD 2011/02/11
   // --- ADD 2010/08/13  --->>>>
   // --- UPD 2012/05/22 No.526 ---------->>>>>
   ////if ((i_searchPartsMode = 1) and (FullModel.DataText = '')) then     //DEL 2012/04/05 liusy Redmine #29226
   //if ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) and (i_searchPartsMode = 1) and (FullModel.DataText = '')) then  //ADD 2012/04/05 liusy Redmine #29226
   //通常モードで新規伝票で部品検索で型式が未設定の場合
   if (((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and
        (StrToIntDef(SalesSlipNum.Text, 0) = 0)) and
       ((i_searchPartsMode = 1) and
        (FullModel.DataText = ''))) then
   // --- UPD 2012/05/22 No.526 ----------<<<<<
   begin
     Exit;
   end;
   // --- ADD 2010/08/13  ----<<<<
   xSettingGridColVisible(0, 0);

   if (i_InputType = 0) then
   begin
      i_InputType := 1;
   end
   else if (i_InputType = 1) then
   begin
      i_InputType := 0;
   end
   else if (i_InputType = 2) then
   begin
      i_InputType := 0;
   end
   else if (i_InputType = 3) then
   begin
      i_InputType := 0;
//>>>2010/05/30
   end
   else if (i_InputType = 4) then
   begin
      i_InputType := 0;
//<<<2010/05/30
   end;

   xSettingGridColVisible(0, i_InputType);

   rowEffectiveIndex := xSettingGridRowFromInputChange();

   if rowEffectiveIndex >= 0 then
   begin
     if (i_InputType = 1) then
     begin
        if HNsGrid1.ReadOnly[ctCol_DtlNote, rowEffectiveIndex] = False then
        begin
          NextCtrl := HNsGrid1;
          FocusCellReserve.Col := ctCol_DtlNote;
          FocusCellReserve.Row := rowEffectiveIndex - 1;
          FocusCellReserve.Line := 0;
          xSetNextFocus(NextCtrl);
        end
     end
     // --- ADD 2010/07/01 ---------->>>>>
     else if (i_InputType = 0) then
     begin
        // --- ADD 2012/04/10 No.801 ---------->>>>>
        //HNsGrid1.GotoCell(ctCol_BLGoodsCode,rowEffectiveIndex);
        HNsGrid1.SetFocus;
        if i_searchPartsMode = ctGoodsNoSearch then
        begin
          HNsGrid1.GotoCell(ctCol_GoodsNo, rowEffectiveIndex + 1);
        end
        else if i_searchPartsMode = ctBLCodeSearch then
        begin
          HNsGrid1.GotoCell(ctCol_BLGoodsCode,rowEffectiveIndex);
        end;

        // --- ADD 2012/05/22 No.526 ---------->>>>>
        if ((HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowEffectiveIndex] = True) and
            (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowEffectiveIndex + 1] = True)) then
        begin
          HNsGrid1.GotoCell(ctCol_GoodsName, rowEffectiveIndex);
        end;
        // --- ADD 2012/05/22 No.526 ----------<<<<<

        // --- ADD K2016/12/30 譚洪 水野商工㈱  --- >>>>>
        // 既存障害の対応、返品する時、フォーカスは出荷数セルに設定します。
        if (HNsGrid1.ReadOnly[ctCol_GoodsName, rowEffectiveIndex] = True) then
        begin
          HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay, rowEffectiveIndex + 1);
        end;
        // --- ADD K2016/12/30 譚洪 水野商工㈱  --- <<<<<

        HNsGrid1.ShowInplaceEdit;
        // --- ADD 2012/04/10 No.801 ----------<<<<<
     end;
     // --- ADD 2010/07/01 ----------<<<<<
   end;

   // 既存障害の対応、入力切替後、ボタン有効無効の判断
   xActiveCellButtonEnabledControl(xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col),HNsGrid1.LogicalRow);   // ADD K2016/12/30 譚洪 水野商工㈱

   xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼
end;


// *************************************************************************
// 操作ボタン
// *************************************************************************
procedure TForm4.BitBtn_ActionClick(Sender: TObject);
var
m, n, startRowNo, endRowNo : Integer;  // 2011/05/18
begin
   // --- ADD 2010/08/13 --- >>>>
   // --- UPD 2012/05/22 No.526 ---------->>>>>
   ////if ((i_searchPartsMode = 1) and (FullModel.DataText = '')) then     //DEL 2012/04/05 liusy Redmine #29226
   //if ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum)and (i_searchPartsMode = 1) and (FullModel.DataText = '')) then  //ADD 2012/04/05 liusy Redmine #29226
   //通常モードで新規伝票で部品検索で型式が未設定の場合
   if (((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and
        (StrToIntDef(SalesSlipNum.Text, 0) = 0)) and
       ((i_searchPartsMode = 1) and
        (FullModel.DataText = ''))) then
   // --- UPD 2012/05/22 No.526 ----------<<<<<

   // --- ADD 2011/05/18 --- >>>>
   startRowNo := -1;
   endRowNo := -1;
   // 初始行番号を取得
   for m := 0 to HNsGrid1.RowCount - 1 do
   begin
     if ((HNsGrid1.Colors[0, m] = ctFixRowColor) and
        (HNsGrid1.ColorsTo[0, m] = ctFixRowColorTo)) then
     begin
       startRowNo := m div 2;
       Break;
     end;
   end;

   // 最終行番号を取得
   for n := HNsGrid1.RowCount - 1 downto 0 do
   begin
     if ((HNsGrid1.Colors[0, n] = ctFixRowColor) and
        (HNsGrid1.ColorsTo[0, n] = ctFixRowColorTo)) then
     begin
       endRowNo := n div 2;
       Break;
     end;
   end;

   if (endRowNo > startRowNo) then
   begin
      rowInsert.Enabled := False; //挿入
      rowCut.Enabled := False;   // 切取
      rowCopy.Enabled := False;   // コピー
      rowPaste.Enabled := False;   // 貼り付け

      InSertPop.Enabled := False; //挿入
      CutPop.Enabled := False;   // 切取
      CopyPop.Enabled := False;   // コピー
      PastePop.Enabled := False;   // 貼り付け

      // --- ADD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ---------->>>>>
      rowDelete.Enabled := xRowDelChkFromTo(startRowNo, endRowNo);
      DeletePop.Enabled := xRowDelChkFromTo(startRowNo, endRowNo);
      // --- ADD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ----------<<<<<
   end
   else if (endRowNo = -1) then
   begin
      xActiveCellButtonEnabledControl('', HNsGrid1.LogicalRow);
   end
   else
   begin
      xActiveCellButtonEnabledControl('', startRowNo);
   end;
   // --- ADD 2011/05/18 --- <<<<

   // --- ADD 2010/08/13 --- <<<<
   pm2.Popup(5,386);
   //pm2.Popup(mouse.CursorPos.X,mouse.CursorPos.Y);
end;

// *************************************************************************
// Gridの発注情報
// *************************************************************************
procedure TForm4.BitBtn_InputOrderInfo(Sender: TObject);
var rowEffectiveIndex : Integer;
  NextCtrl: TWinControl;
  //i ,j ,col: Integer;  DEL 2011/10/26
  i ,j ,col, inputType,status: Integer; // ADD 2011/10/26
  rowIndex: Integer; // 2011/02/01 // 発注明細表示時のフォーカス制御
  salesDetailArray: TSalesSlipInputCustomArrayA2; // ADD 2011/10/26
// --- ADD 2012/05/31 No.282---------->>>>>

  // UPD 譚洪 2020/02/24 PMKOBETSU-2912の対応 ------>>>>>
  //escFlg: Boolean;
  escFlg, orderFlg: Boolean;
  // UPD 譚洪 2020/02/24 PMKOBETSU-2912の対応 ------<<<<<
// --- ADD 2012/05/31 No.282----------<<<<<
begin
// --- ADD 2012/05/31 No.282---------->>>>>
   if (i_InputType <> 3) then
   begin
     // 発注保存メッセージ
     gpxMAHNB01013B_SaveOrderInfo(escFlg);
   end;
// --- ADD 2012/05/31 No.282----------<<<<<

   // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応 ------>>>>>
   gpxMAHNB01013B_OrderCheck(0,orderFlg);
   if (orderFlg = True) then
   begin
     Exit;
   end;
   // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応 ------<<<<<
   gpxMAHNB01013B_DoAddLine(30,0,0); // ADD 2011/02/11
    // --- ADD 2011/10/26 --- >>>>>
    inputType :=  i_InputType;
    gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);
    xSetDetailRowFormC(salesDetailArray,-1);
    xSettingGrid();
    // 明細部変更後発生イベント処理
    xSalesSlipDetailInput_DetailChanged(HNsGrid1.LogicalRow); //ADD 2011/11/01

    xSlipMemoInfoFormSetting(HNsGrid1.LogicalRow); //ADD 2011/11/01

    xSalesPriceChanged;//ADD 2011/11/01
    i_InputType :=  inputType;
    // --- ADD 2011/10/26--- <<<<<

   xSettingGridColVisible(0, 0);

   if (i_InputType <> 3) then
   begin
      i_InputType := 3;
   end
   else
   begin
      i_InputType := 0;
   end;

   xSettingGridColVisible(0, i_InputType);

   xSettingGridColVisible(0, i_InputType);

   rowEffectiveIndex := xSettingGridRowFromInputChange();

   if rowEffectiveIndex >= 0 then
   begin
     if (i_InputType = 3) then
     begin
//>>>2011/02/01 発注明細表示時のフォーカス制御
//        if HNsGrid1.ReadOnly[ctCol_BoCode, rowEffectiveIndex-1] = False then
//        begin
//          NextCtrl := HNsGrid1;
//          FocusCellReserve.Col := ctCol_BoCode;
//          FocusCellReserve.Row := rowEffectiveIndex - 1;
//          FocusCellReserve.Line := 0;
//          xSetNextFocus(NextCtrl);
//        end
//        else
//        begin
//          if (i_searchPartsMode = ctBLCodeSearch) then
//          begin
//            NextCtrl := HNsGrid1;
//            FocusCellReserve.Col := ctCol_BLGoodsCode;
//            FocusCellReserve.Row := rowEffectiveIndex;
//            FocusCellReserve.Line := 0;
//            xSetNextFocus(NextCtrl);
//          end
//          else
//          begin
//            NextCtrl := HNsGrid1;
//            FocusCellReserve.Col := ctCol_GoodsNo;
//            FocusCellReserve.Row := rowEffectiveIndex;
//            FocusCellReserve.Line := 1;
//            xSetNextFocus(NextCtrl);
//          end;
//        end;


        for rowIndex := 2 to HNsGrid1.RowCount - 1 do begin
          //----------------------------------------
          // 有効行判定
          //----------------------------------------
          if (gpxMAHNB01013B_GridJoinCheck(0, rowIndex div 2 -1 , -1, 9) = 1) then begin
            //----------------------------------------
            // 有効行：BO区分へ移動
            //----------------------------------------
            if HNsGrid1.ReadOnly[ctCol_BoCode, rowIndex] = False then begin
              HNsGrid1.GotoCell(ctCol_BoCode, rowIndex);
              NextCtrl := HNsGrid1;
              xSetNextFocus(NextCtrl);
              Exit;
            end;
          end else begin
            //----------------------------------------
            // 無効行
            //----------------------------------------
            if (i_searchPartsMode = ctBLCodeSearch) then begin
              if HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowIndex] = False then begin
                // --- ADD 2012/04/10 No.801 ---------->>>>>
                HNsGrid1.SetFocus;
                // --- ADD 2012/04/10 No.801 ----------<<<<<
                // BLコード検索：BLコードへ移動
                HNsGrid1.GotoCell(ctCol_BLGoodsCode, rowIndex);
                NextCtrl := HNsGrid1;
                xSetNextFocus(NextCtrl);
                Exit;
              end else begin
                // BLコードが入力不可：発注ボタンのまま
                NextCtrl := ActiveControl;
                xSetNextFocus(NextCtrl);
                Exit;
              end;
            end else begin
              if HNsGrid1.ReadOnly[ctCol_GoodsNo, rowIndex + ctRow_GoodsNo] = False then begin
                // 品番検索：品番へ移動
                HNsGrid1.GotoCell(ctCol_GoodsNo, rowIndex + ctRow_GoodsNo);
                NextCtrl := HNsGrid1;
                xSetNextFocus(NextCtrl);
                Exit;
              end else begin
                // 品番が入力不可：発注ボタンのまま
                NextCtrl := ActiveControl;
                xSetNextFocus(NextCtrl);
                Exit;
              end;
            end;
          end;
        end;

        NextCtrl := btnInputOrderInfo;
        xSetNextFocus(NextCtrl);
        Exit;
//<<<2011/02/01 発注明細表示時のフォーカス制御

     end
     // --- ADD 2010/07/01 ---------->>>>>
     else if (i_InputType = 0) then
     begin
      // --- ADD 2012/04/10 No.801 ---------->>>>>
      HNsGrid1.SetFocus;
      // --- ADD 2012/04/10 No.801 ----------<<<<<
//>>>2011/02/01 発注明細表示時のフォーカス制御
//        HNsGrid1.GotoCell(ctCol_BLGoodsCode,rowEffectiveIndex);

          if (i_searchPartsMode = ctBLCodeSearch) then begin
            if HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowEffectiveIndex] = False then begin
              // BLコード検索：BLコードへ移動
              HNsGrid1.GotoCell(ctCol_BLGoodsCode, rowEffectiveIndex);
              Exit;
            end else begin
              // BLコードが入力不可：発注ボタンのまま
              NextCtrl := ActiveControl;
              xSetNextFocus(NextCtrl);
              Exit;
            end;
          end else begin
            if HNsGrid1.ReadOnly[ctCol_GoodsNo, rowEffectiveIndex + 1] = False then begin
              // 品番検索：品番へ移動
              HNsGrid1.GotoCell(ctCol_GoodsNo, rowEffectiveIndex + 1);
            end else begin
              // 品番が入力不可：発注ボタンのまま
              NextCtrl := ActiveControl;
              xSetNextFocus(NextCtrl);
              Exit;
            end;
          end;
//<<<2011/02/01 発注明細表示時のフォーカス制御
     end;
     // --- ADD 2010/07/01 ----------<<<<<
   end;

//   if (Form4.ClientWidth > 1024) then
//    begin
//      for i := 0 to HNsGrid1.ColCount - 1 do
//      begin
//         col := HNsGrid1.ColWidths[i];
//         HNsGrid1.ColWidths[i] := longint(col)*longint(Form4.ClientWidth) div 1024;
//      end;
//    end;
    xSetSalesUnPrcBtnEnabled();   // ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ
end;

// --- ADD 2012/05/31 No.282---------->>>>>
// *************************************************************************
// Gridの発注情報（発注キャンセル時）
// *************************************************************************
procedure TForm4.BitBtn_InputOrderInfoEsc(Sender: TObject);
var rowEffectiveIndex : Integer;
    NextCtrl: TWinControl;
    salesDetailArray: TSalesSlipInputCustomArrayA2;
begin
  i_InputType := 0;

  gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

  xSetDetailRowFormC(salesDetailArray,-1);

  // --- ADD 2012/06/13 Wakita №282 ---------->>>>>
  HNsGrid1.FocusCell(ctCol_BoCode, 2);
  HNsGrid1.LogicalCells[ctCol_BoCode, 0, 1] := HNsGrid1.OriginalCellValue;
  // --- ADD 2012/06/13 Wakita №282 ----------<<<<<

  xSettingGrid();

  // 明細部変更後発生イベント処理
  xSalesSlipDetailInput_DetailChanged(HNsGrid1.LogicalRow);

  xSlipMemoInfoFormSetting(HNsGrid1.LogicalRow);

  xSalesPriceChanged;

  xSettingGridColVisible(0, 0);

  xSettingGridColVisible(0, i_InputType);

  rowEffectiveIndex := xSettingGridRowFromInputChange();

  if rowEffectiveIndex >= 0 then
  begin

    HNsGrid1.SetFocus;

    if (i_searchPartsMode = ctBLCodeSearch) then
    begin
      if HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowEffectiveIndex] = False then
      begin
        // BLコード検索：BLコードへ移動
        HNsGrid1.GotoCell(ctCol_BLGoodsCode, rowEffectiveIndex);
        Exit;
      end
      else
      begin
        // BLコードが入力不可：発注ボタンのまま
        NextCtrl := ActiveControl;
        xSetNextFocus(NextCtrl);
        Exit;
      end;
    end
    else
    begin
      if HNsGrid1.ReadOnly[ctCol_GoodsNo, rowEffectiveIndex + 1] = False then
      begin
        // 品番検索：品番へ移動
        HNsGrid1.GotoCell(ctCol_GoodsNo, rowEffectiveIndex + 1);
      end
      else
      begin
        // 品番が入力不可：発注ボタンのまま
        NextCtrl := ActiveControl;
        xSetNextFocus(NextCtrl);
        Exit;
      end;
    end;
  end;
end;
// --- ADD 2012/05/31 No.282----------<<<<<

//>>>2010/05/30
procedure TForm4.btnSCMClick(Sender: TObject);
var rowEffectiveIndex : Integer;
  NextCtrl: TWinControl;
  i ,j ,col: Integer;
begin

  xSettingGridColVisible(0, 0);

  if (i_InputType <> 4) then
  begin
     i_InputType := 4;
  end
  else
  begin
     i_InputType := 0;
  end;

  xSettingGridColVisible(0, i_InputType);

  rowEffectiveIndex := xSettingGridRowFromInputChange();

  if rowEffectiveIndex >= 0 then
  begin
    if (i_InputType = 4) then
    begin
       if HNsGrid1.ReadOnly[ctCol_RecycleDivNm, rowEffectiveIndex] = False then
       begin
         NextCtrl := HNsGrid1;
         FocusCellReserve.Col := ctCol_RecycleDivNm;
         FocusCellReserve.Row := rowEffectiveIndex - 1;
         FocusCellReserve.Line := 0;
        //----ADD START 2011/08/03------------>>>>
        if salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly then
        begin
             NextCtrl := btnScm;
        end;
        //----ADD END 2011/08/03------------<<<<
         xSetNextFocus(NextCtrl);
       end
       else
       begin
         NextCtrl := HNsGrid1;
         FocusCellReserve.Col := ctCol_GoodsMngNo;
         // --- UPD 2015/04/14 Wakita ---------->>>>>
         //FocusCellReserve.Row := rowEffectiveIndex;
         FocusCellReserve.Row := rowEffectiveIndex - 1;
         // --- UPD 2015/04/14 Wakita ----------<<<<<
         FocusCellReserve.Line := 0;
        //----ADD START 2011/08/03------------>>>>
        if salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly then
        begin
             NextCtrl := btnScm;
        end;
        //----ADD END 2011/08/03------------<<<<
         xSetNextFocus(NextCtrl);
       end;
    end;
  end;
end;
//<<<2010/05/30

// *************************************************************************
// xSetNextFocus
// *************************************************************************
procedure TForm4.xSetNextFocus(var NextCtrl: TWinControl);
var  AGridCoord : TGridCoord;
begin
  if (NextCtrl <> nil) and (NextCtrl is THNsGrid) then
  begin
    HNsGrid1.HideInplaceEdit;
    HNsGrid1.SetFocus;
    if (FocusCellReserve.Col = 0) And (FocusCellReserve.Row = 0) then
    begin
      FocusCellReserve.Col := 1;
      FocusCellReserve.Row := 1;
    end;
    if HNsGrid1.AutoLayoutSet then
    begin
      // ｎ行１明細 としている場合
      AGridCoord := HNsGrid1.LogicalToPhysicalCell(FocusCellReserve.Col, FocusCellReserve.Line, FocusCellReserve.Row);
      THNsGrid(NextCtrl).GotoCell(AGridCoord.X, AGridCoord.Y);
    end
    else
    begin
      // １行１明細 としている場合
      HNsGrid1.FocusCell(FocusCellReserve.Col, FocusCellReserve.Row);
    end;
    // 編集モードへ切り替える
    HNsGrid1.ShowInplaceEdit;
//    NextCtrl := nil; // DEL 2010/07/12
  end
  else
  begin
    if (NextCtrl <> nil) then
    begin
      NextCtrl.SetFocus;
    end;
  end;
  xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼

end;

// *************************************************************************
// Gridの仕入情報
// *************************************************************************
procedure TForm4.BitBtn_InputStockInfo(Sender: TObject);
var rowEffectiveIndex : Integer;
    NextCtrl: TWinControl;
    rowIndex : Integer;
    // UPD 譚洪 2020/02/24 PMKOBETSU-2912の対応 ------>>>>>
    //srResult : Boolean; //ADD 2012/05/10
    srResult, orderFlg : Boolean;
    // UPD 譚洪 2020/02/24 PMKOBETSU-2912の対応 ------<<<<<
begin
   // UPD 2010/10/12 --- >>>>>>
   //xSettingGridColVisible(0, 0);
   // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応 ------>>>>>
   gpxMAHNB01013B_OrderCheck(1,orderFlg);
   if (orderFlg = True) then
   begin
     Exit;
   end;
   // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応 ------<<<<<
   gpxMAHNB01013B_DoAddLine(29,0,0); // ADD 2011/02/11

   if (i_InputType <> 2) then
   begin

      // --- ADD 2012/05/10 ---------->>>>>
      srResult := xSetNextControl();
      if (srResult = False) then
      begin
        Exit;
      end;
      // --- ADD 2012/05/10 ----------<<<<<
      i_InputType := 2;
   end
   else
   begin
      i_InputType := 0;
   end;

   //-----ADD 2011/11/30 YANGMJ REDMINE#8353----->>>>>
   if (pnl1.Visible = True) then
   begin
   BitBtn_Action.SetFocus;
   end;
   //-----ADD 2011/11/30 YANGMJ REDMINE#8353-----<<<<<
   xSettingGridColVisible(0, i_InputType);
   HNsGrid1.SetFocus;

   rowEffectiveIndex := xSettingGridRowFromInputChange();

   Form4.Width := Form4.Width + 1;
   Form4.Width := Form4.Width - 1;

   if rowEffectiveIndex >= 0 then
   begin
     if (i_InputType = 2) then
     begin
     // --- UPD 2010/05/31 ---------->>>>>
//        HNsGrid1.SetFocus;
//        if HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, rowEffectiveIndex] = False then
//          HNsGrid1.FocusCell(ctCol_SupplierCdForStock, rowEffectiveIndex);

//        if HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, rowEffectiveIndex] = False then
//        begin
//          NextCtrl := HNsGrid1;
//          FocusCellReserve.Col := ctCol_SupplierCdForStock;
//          FocusCellReserve.Row := rowEffectiveIndex - 1;
//          FocusCellReserve.Line := 0;
//          xSetNextFocus(NextCtrl);
//        end

        for rowIndex := 2 to HNsGrid1.RowCount - 1 do
        begin
          //有効行のみ
          if (gpxMAHNB01013B_GridJoinCheck(0, rowIndex div 2 -1 , -1, 9) = 1) then
          begin
            // UPD 2013/04/10 T.Miyamoto ------------------------------>>>>>
            //// --- UPD START 2012/04/10 No.607 ---------->>>>>
            ////if HNsGrid1.ReadOnly[ctCol_SupplierCdForStock, rowIndex] = False then
            //if HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, rowIndex + 1] = False then
            //// --- UPD END   2012/04/10 No.607 ----------<<<<<
            if ((rowIndex mod 2) = 0) and
               (HNsGrid1.ReadOnly[ctCol_PartySalesSlipNum, rowIndex + 1] = False) then
            // UPD 2013/04/10 T.Miyamoto ------------------------------<<<<<
            begin
//              NextCtrl := HNsGrid1;
//              FocusCellReserve.Col := ctCol_SupplierCdForStock;
//              FocusCellReserve.Row := rowIndex div 2;
//              FocusCellReserve.Line := 0;
//              xSetNextFocus(NextCtrl);
              // --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
              //// --- UPD START 2012/04/10 No.607 ---------->>>>>
              ////HNsGrid1.GotoCell(ctCol_SupplierCdForStock, rowIndex);
              //HNsGrid1.GotoCell(ctCol_PartySalesSlipNum, rowIndex + 1);
              //// --- UPD END   2012/04/10 No.607 ----------<<<<<
              if (optStockDateCtrl = 1) then // 仕入日付フォーカス制御オプション(OPT-CPM0060)がオンの場合
              begin
                HNsGrid1.GotoCell(ctCol_StockDate, rowIndex);
              end
              else
              begin
                HNsGrid1.GotoCell(ctCol_PartySalesSlipNum, rowIndex + 1);
              end;
              HNsGrid1.ShowInplaceEdit;
              // --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
              Exit;
            end;
          end
          else
          begin
            // --- ADD 2012/04/10 No.801 ---------->>>>>
            HNsGrid1.SetFocus;
            // --- ADD 2012/04/10 No.801 ----------<<<<<
            if i_searchPartsMode = ctGoodsNoSearch then
            begin
//              NextCtrl := HNsGrid1;
//              FocusCellReserve.Col := ctCol_GoodsNo;
//              FocusCellReserve.Row := rowIndex div 2;
//              FocusCellReserve.Line := 1;
//              xSetNextFocus(NextCtrl);
              HNsGrid1.GotoCell(ctCol_GoodsNo, rowIndex);
            end
            else if i_searchPartsMode = ctBLCodeSearch then
            begin
//              NextCtrl := HNsGrid1;
//              FocusCellReserve.Col := ctCol_BLGoodsCode;
//              FocusCellReserve.Row := rowIndex div 2;
//              FocusCellReserve.Line := 0;
//              xSetNextFocus(NextCtrl);
              HNsGrid1.GotoCell(ctCol_BLGoodsCode, rowIndex);
            end;
            Exit;
          end;
        end;
     // --- UPD 2010/05/31 ----------<<<<<
     end
     // --- ADD 2010/07/01 ---------->>>>>
     else if (i_InputType = 0) then
     begin
        // --- UPD 2012/04/10 No.801 ---------->>>>>
        //HNsGrid1.GotoCell(ctCol_BLGoodsCode, rowEffectiveIndex);
        HNsGrid1.SetFocus;
        if i_searchPartsMode = ctGoodsNoSearch then
        begin
          HNsGrid1.GotoCell(ctCol_GoodsNo, rowEffectiveIndex + 1);
        end
        else if i_searchPartsMode = ctBLCodeSearch then
        begin
        HNsGrid1.GotoCell(ctCol_BLGoodsCode,rowEffectiveIndex);
     end;
        // --- UPD 2012/04/10 No.801 ----------<<<<<
        // --- ADD 2012/05/18 No.87 ---------->>>>>
        if ((HNsGrid1.ReadOnly[ctCol_BLGoodsCode, rowEffectiveIndex] = True) and
            (HNsGrid1.ReadOnly[ctCol_GoodsNo, rowEffectiveIndex + 1] = True)) then
        begin
          HNsGrid1.GotoCell(ctCol_GoodsName, rowEffectiveIndex);
        end;
        // --- ADD 2012/05/18 No.87 ----------<<<<<
     end;
     // --- ADD 2010/07/01 ----------<<<<<
   end;
   // UPD 2010/10/12 --- <<<<<
end;

// *************************************************************************
// 行値引き
// *************************************************************************
procedure TForm4.BitBtn_LineDiscount(Sender: TObject);
var
   salesDetailArray: TSalesSlipInputCustomArrayA2;
   parDetailGrossProfitRate, parAddDetailGrossProfitRate : WideString; //ADD 2021/07/01 田建委 BLINCIDENT-2527対応
begin
   gpxMAHNB01013B_DoAddLine(31,0,0); // ADD 2011/02/11

   // --- UPD 2012/05/22 No.526 ---------->>>>>
   ////if ((i_searchPartsMode = 1) and (FullModel.DataText = '')) then     //DEL 2012/04/05 liusy Redmine #29226
   //if ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum)and (i_searchPartsMode = 1) and (FullModel.DataText = '')) then  //ADD 2012/04/05 liusy Redmine #29226
   //通常モードで新規伝票で部品検索で型式が未設定の場合
   if (((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and
        (StrToIntDef(SalesSlipNum.Text, 0) = 0)) and
       ((i_searchPartsMode = 1) and
        (FullModel.DataText = ''))) then
   // --- UPD 2012/05/22 No.526 ----------<<<<<
   begin
     Exit;
   end;

   if (iFlag_Mouse = False) then
   begin
     iLogicalRow_Mouse := HNsGrid1.LogicalRow;
   end
   else
   begin
     iFlag_Mouse := False;
   end;

   gpxMAHNB01013B_uButtonLineDiscountClick(iLogicalRow_Mouse - 1);

   salesDetailArray.Csafield1 := nil;
   salesDetailArray.Csafield1Count := 0;

   gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, iLogicalRow_Mouse);

   xSetDetailRowFormC(salesDetailArray,iLogicalRow_Mouse);

   xSettingGrid;

   //xMoveNextAllowEditCell;

   // 品名へ移動
   //xSettingFocus('GoodsNameTP');
   HNsGrid1.SetFocus;
   HNsGrid1.FocusCell(ctCol_GoodsName, iLogicalRow_Mouse * 2);

   btnCopyToRC.Enabled := False;

   // --- ADD 2021/07/01 田建委 BLINCIDENT-2527対応 ----->>>>>
   // 明細粗利率
   gpxMAHNB01013B_GetDetailGrossProfitRate(HNsGrid1.LogicalRow, parDetailGrossProfitRate, parAddDetailGrossProfitRate);
   detailGrossProfitRate.Caption := string(parDetailGrossProfitRate);
   addDetailGrossProfitRate.Caption := string(parAddDetailGrossProfitRate);
   // 売上金額変更後発生イベント処理
   xSalesPriceChanged();
   // --- ADD 2021/07/01 田建委 BLINCIDENT-2527対応 <<<<<---->

   xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼

   xSetSalesUnPrcBtnEnabled();   // ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ

end;

// *************************************************************************
//  在庫検索
// *************************************************************************
procedure TForm4.BitBtn_StockSearch(Sender: TObject);
var
   rowIndex: Integer;
   salesDetailArray: TSalesSlipInputCustomArrayA2;
   parDetailGrossProfitRate, parAddDetailGrossProfitRate : WideString; //ADD 2021/07/01 田建委 BLINCIDENT-2527対応
begin
   gpxMAHNB01013B_DoAddLine(35,0,0); // ADD 2011/02/11

   // --- ADD 2010/08/13 --- >>>>
   // --- UPD 2012/05/22 No.526 ---------->>>>>
   ////if ((i_searchPartsMode = 1) and (FullModel.DataText = '')) then     //DEL 2012/04/05 liusy Redmine #29226
   //if ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum)and (i_searchPartsMode = 1) and (FullModel.DataText = '')) then  //ADD 2012/04/05 liusy Redmine #29226
   //通常モードで新規伝票で部品検索で型式が未設定の場合
   if (((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and
        (StrToIntDef(SalesSlipNum.Text, 0) = 0)) and
       ((i_searchPartsMode = 1) and
        (FullModel.DataText = ''))) then
   // --- UPD 2012/05/22 No.526 ----------<<<<<
   begin
     Exit;
   end;
   // --- ADD 2010/08/13 --- <<<<
   rowIndex := HNsGrid1.LogicalRow - 1;

   gpxMAHNB01013B_uButtonStockSearchClick(rowIndex);

   gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

   xSetDetailRowFormC(salesDetailArray,-1);

   xSettingGrid;

   // --- ADD 2021/07/01 田建委 BLINCIDENT-2527対応 ----->>>>>
   // 明細粗利率
   gpxMAHNB01013B_GetDetailGrossProfitRate(HNsGrid1.LogicalRow, parDetailGrossProfitRate, parAddDetailGrossProfitRate);
   detailGrossProfitRate.Caption := string(parDetailGrossProfitRate);
   addDetailGrossProfitRate.Caption := string(parAddDetailGrossProfitRate);
   // 売上金額変更後発生イベント処理
   xSalesPriceChanged();
   // --- ADD 2021/07/01 田建委 BLINCIDENT-2527対応 -----<<<<<

   xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼

end;

// *************************************************************************
//  ＴＢＯ
// *************************************************************************
procedure TForm4.BitBtn_TBO(Sender: TObject);
var
   rowIndex: Integer;
   salesDetailArray: TSalesSlipInputCustomArrayA2;
   NextCtrl  : TWinControl; //ADD 2010/07/01
begin
   gpxMAHNB01013B_DoAddLine(37,0,0); // ADD 2011/02/11
   // --- UPD 2012/05/22 No.526 ---------->>>>>
   ////if ((i_searchPartsMode = 1) and (FullModel.DataText = '')) then     //DEL 2012/04/05 liusy Redmine #29226
   //if ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum)and (i_searchPartsMode = 1) and (FullModel.DataText = '')) then  //ADD 2012/04/05 liusy Redmine #29226
   //通常モードで新規伝票で部品検索で型式が未設定の場合
   if (((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and
        (StrToIntDef(SalesSlipNum.Text, 0) = 0)) and
       ((i_searchPartsMode = 1) and
        (FullModel.DataText = ''))) then
   // --- UPD 2012/05/22 No.526 ----------<<<<<
   begin
     Exit;
   end;

   rowIndex := HNsGrid1.LogicalRow - 1;

   gpxMAHNB01013B_uButtonTBOClick(rowIndex);

   gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

   xSetDetailRowFormC(salesDetailArray,-1);

   xSettingGrid;

   // 売上金額変更後発生イベント処理
   xSalesPriceChanged();

   // ------ADD 2010/07/01------>>>>>
   // 対象行のＢＬコードにフォーカスを移動する
   if HNsGrid1.ReadOnly[ctCol_BLGoodsCode, HNsGrid1.Row] = False then
   begin
      NextCtrl := HNsGrid1;
      FocusCellReserve.Col := ctCol_BLGoodsCode;
      FocusCellReserve.Row := HNsGrid1.LogicalRow;
      FocusCellReserve.Line := 0;
      xSetNextFocus(NextCtrl);
   end;

   xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼
   // ------ADD 2010/07/01------<<<<<

   xSetSalesUnPrcBtnEnabled();   // ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ
end;

//2010/06/15 yamaji ADD >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
// *************************************************************************
// RC連携
// *************************************************************************
procedure TForm4.btnCopyToRCClick(Sender: TObject);
const
  cERR1_1 = 'RC連携用に指定されたフォルダが存在しません。'+ #13 + #10;
  //cERR1_2 = '[ %s ]' + #13 + #10;// DEL 2010/06/24
  cERR1_3 = '設定画面より、CSV出力先を設定して下さい。';
  cERR2   = '有効行でない為、コピーできません';
  cERR3   = '商品名が入力されていません。';
  cERR4   = 'RC連携によるその他の例外エラー';
  cOK     = 'コピーしました。';
var
  res        ,
  rowIndex   ,
  salesRowNo : integer;
  linkDir    : WideString;// ADD 2010/06/24
  cERR1_2      : string;  // ADD 2010/06/24
begin
  rowIndex := HNsGrid1.LogicalRow - 1;
  salesRowNo := RCHNB01003UADM.SalesRowNo[rowIndex];
  // ---------ADD 2010/06/24--------->>>>>
  // CSV出力先が設定され、フォルダが存在しているかチェックする。
  if gpxMAHNB01013B_CsvPassCheck(linkDir) = -1 then
  begin
    cERR1_2 := '[ ' + string(linkDir) + ' ]' + #13 + #10 + #13 + #10;
    Application.MessageBox(
        PChar(cERR1_1 + cERR1_2 + cERR1_3),
        PChar(Caption),
        MB_OK + MB_ICONINFORMATION);
    Exit;
  end;
  // ---------ADD 2010/06/24---------<<<<<
  if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 9) = 0) then
  begin
      Application.MessageBox(
        PChar(cERR2),
        PChar(Caption),
        MB_OK + MB_ICONINFORMATION);
      exit;
  end;
  res := gpxMAHNB01012B_CopyToRC(salesRowNo);
  case res of
  0 :  begin
         Application.MessageBox(PChar(cOK), PChar(Caption), MB_OK + MB_ICONINFORMATION);
         exit;
       end;
  5 :  begin
         Application.MessageBox(PChar(cERR3), PChar(Caption), MB_OK + MB_ICONINFORMATION);
         exit;
       end;
  else begin
         Application.MessageBox(PChar(cERR4), PChar(Caption), MB_OK + MB_ICONINFORMATION);
         exit;
       end;
  end //end of case

end;
//2010/06/15 yamaji ADD <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

// *************************************************************************
// 注釈
// *************************************************************************
procedure TForm4.BitBtn_Annotation(Sender: TObject);
var
   rowIndex ,salesRowNo ,pasteCheck: Integer;
   salesDetailArray: TSalesSlipInputCustomArrayA2;
   parDetailGrossProfitRate, parAddDetailGrossProfitRate : WideString; //ADD 2021/07/01 田建委 BLINCIDENT-2527対応
begin
   gpxMAHNB01013B_DoAddLine(33,0,0); // ADD 2011/02/11

   // --- DEL 2011/08/10 ---------->>>>>>>>
   // --- ADD 2010/08/13 --- >>>>
    //   if ((i_searchPartsMode = 1) and (FullModel.DataText = '')) then
    //   begin
    //     Exit;
    //   end;
   // --- ADD 2010/08/13 --- <<<<
   // --- DEL 2011/08/10 -----------<<<<<<<<

   // --- ADD 2012/05/22 No.526 ---------->>>>>
   //通常モードで新規伝票で部品検索で型式が未設定の場合
   if (((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and
        (StrToIntDef(SalesSlipNum.Text, 0) = 0)) and
       ((i_searchPartsMode = 1) and
        (FullModel.DataText = ''))) then
   begin
     Exit;
   end;
   // --- ADD 2012/05/22 No.526 ----------<<<<<
   if (iFlag_Mouse = False) then
   begin
     iLogicalRow_Mouse := HNsGrid1.LogicalRow;
   end
   else
   begin
     iFlag_Mouse := False;
   end;

   rowIndex := iLogicalRow_Mouse - 1;
   salesRowNo := RCHNB01003UADM.SalesRowNo[rowIndex];

   gpxMAHNB01013B_uButtonAnnotationClick(rowIndex);

   // 車両情報設定処理
   xCarInfoFormSetting(salesRowNo);

   gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, iLogicalRow_Mouse);

   xSetDetailRowFormC(salesDetailArray,iLogicalRow_Mouse);

   // 品名へ移動
   HNsGrid1.SetFocus;
   HNsGrid1.FocusCell(ctCol_GoodsName, iLogicalRow_Mouse * 2);

   xSettingGrid;

   btnCopyToRC.Enabled := False;
   // --- ADD 2021/07/01 田建委 BLINCIDENT-2527対応 ----->>>>>
   // 明細粗利率
   gpxMAHNB01013B_GetDetailGrossProfitRate(HNsGrid1.LogicalRow, parDetailGrossProfitRate, parAddDetailGrossProfitRate);
   detailGrossProfitRate.Caption := string(parDetailGrossProfitRate);
   addDetailGrossProfitRate.Caption := string(parAddDetailGrossProfitRate);
   // 売上金額変更後発生イベント処理
   xSalesPriceChanged();
   // --- ADD 2021/07/01 田建委 BLINCIDENT-2527対応 -----<<<<<

   xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼

   xSetSalesUnPrcBtnEnabled();   // ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ

end;

// *************************************************************************
// 車種変更
// *************************************************************************
procedure TForm4.BitBtn_ChangeCarInfo(Sender: TObject);
var
   searchType, salesRowNo : Integer;
   carInfo :TCarInfo;
begin
   gpxMAHNB01013B_DoAddLine(34,0,0); // ADD 2011/02/11

   // --- ADD 2010/08/13 --- >>>>
   // --- UPD 2012/05/22 No.526 ---------->>>>>
   ////if ((i_searchPartsMode = 1) and (FullModel.DataText = '')) then     //DEL 2012/04/05 liusy Redmine #29226
   //if ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum)and (i_searchPartsMode = 1) and (FullModel.DataText = '')) then  //ADD 2012/04/05 liusy Redmine #29226
   //通常モードで新規伝票で部品検索で型式が未設定の場合
   if (((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and
        (StrToIntDef(SalesSlipNum.Text, 0) = 0)) and
       ((i_searchPartsMode = 1) and
        (FullModel.DataText = ''))) then
   // --- UPD 2012/05/22 No.526 ----------<<<<<
   begin
     Exit;
   end;

   if (Form4.ActiveControl = HNsGrid1) then
    begin
       logicalRowInt := HNsGrid1.LogicalRow;
    end;
   // --- ADD 2010/08/13 --- <<<<
   salesRowNo := xGetActiveRowSalesRowNo();

   gpxMAHNB01012B_GetCarInfoRow(salesRowNo, 0, carInfo);

   // 車両情報設定処理
   xCarInfoFormSetting(salesRowNo);

   if (carMngNo.Visible) then
   begin
      CarMngCode.SetFocus;
   end
   else
   begin
      ModelDesignationNo.SetFocus;
   end;

end;

// *************************************************************************
// 倉庫切替
// *************************************************************************
procedure TForm4.BitBtn_ChangeWarehouse(Sender: TObject);
var
   salesDetailArray: TSalesSlipInputCustomArrayA2;
   parDetailGrossProfitRate, parAddDetailGrossProfitRate : WideString; //ADD K2021/07/22 陳艶丹 PMKOBETSU-4148対応
begin
   gpxMAHNB01013B_DoAddLine(36,0,0); // ADD 2011/02/11

   gpxMAHNB01013B_uButtonChangeWarehouseClick(HNsGrid1.LogicalRow);

   gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

   xSetDetailRowFormC(salesDetailArray,-1);

   xSettingGrid;
   // --- ADD K2021/07/22 陳艶丹 PMKOBETSU-4148対応 ----->>>>>
   if (optSalesCostCtrl = 1) then // 原価修正制御オプション(OPT-CPM0070)がオンの場合
   begin
       // 売上金額変更後発生イベント処理
       xSalesPriceChanged();
       // 明細粗利率
       gpxMAHNB01013B_GetDetailGrossProfitRate(HNsGrid1.LogicalRow, parDetailGrossProfitRate, parAddDetailGrossProfitRate);
       detailGrossProfitRate.Caption := string(parDetailGrossProfitRate);
       addDetailGrossProfitRate.Caption := string(parAddDetailGrossProfitRate);
   end;
   // --- ADD K2021/07/22 陳艶丹 PMKOBETSU-4148対応 -----<<<<<

   //画面項目名称設定処理
　 xGetDisplayName();   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
end;

// *************************************************************************
// 前行複写
// *************************************************************************
procedure TForm4.BitBtn_CopyStockBefLine(Sender: TObject);
var
   salesDetailArray: TSalesSlipInputCustomArrayA2;
   st : Integer;
begin
   gpxMAHNB01013B_DoAddLine(38,0,0); // ADD 2011/02/11

   st := gpxMAHNB01013B_uButtonCopyStockBefLineClick(HNsGrid1.LogicalRow - 1);

   if(st = 0) then
   begin
      gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, HNsGrid1.LogicalRow);

      xSetDetailRowFormC(salesDetailArray,HNsGrid1.LogicalRow);

      // 明細グリッド・行単位でのセル設定
      //TODO:
   end;
   // -----ADD 2010/10/08------>>>>>
   if HNsGrid1.ReadOnly[HNsGrid1.Col, HNsGrid1.Row] = False then
   begin
     HNsGrid1.SetFocus;
     HNsGrid1.FocusCell(HNsGrid1.Col, HNsGrid1.Row);
     OldCtrl := Form4.ActiveControl;  // ADD 2012/09/21 Wakita　
   end;
   // -----ADD 2010/10/08------<<<<<
   xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False);    // ADD K2015/04/01 高騁 森川部品個別依頼
end;

// *************************************************************************
// 一括複写
// *************************************************************************
procedure TForm4.BitBtn_CopyStockAllLine(Sender: TObject);
var
   salesDetailArray: TSalesSlipInputCustomArrayA2;
   st : Integer;
begin
   gpxMAHNB01013B_DoAddLine(39,0,0); // ADD 2011/02/11

   st := gpxMAHNB01013B_uButtonCopyStockAllLineClick(HNsGrid1.LogicalRow - 1);

   gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

   xSetDetailRowFormC(salesDetailArray,-1);

   // -----ADD 2010/05/31------>>>>>
   if HNsGrid1.ReadOnly[HNsGrid1.Col, HNsGrid1.Row] = False then
   begin
     HNsGrid1.SetFocus;
     HNsGrid1.FocusCell(HNsGrid1.Col, HNsGrid1.Row);
     OldCtrl := Form4.ActiveControl;  // ADD 2012/09/21 Wakita　
   end;
   // -----ADD 2010/05/31------<<<<<
   xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False);    // ADD K2015/04/01 高騁 森川部品個別依頼
end;

// --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- >>>>>
// *************************************************************************
// 売価ボタンEnableの設定
// *************************************************************************
procedure TForm4.xSetSalesUnPrcBtnEnabled();
begin
  if isOptPermitForKoei then
  begin
    if (Form4.ActiveControl.Name = 'HNsGrid1') and (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, HNsGrid1.LogicalRow * 2] <> True) then
    begin
     btnSalesUnPrcCalc.Enabled := True;
    end
    else
    begin
     btnSalesUnPrcCalc.Enabled := False;
    end;
  end;
end;
// *************************************************************************
// 売価算出
// *************************************************************************
procedure TForm4.BitBtn_SalesUnPrcCalc(Sender: TObject);
begin

   SalesUnPrcCalc(Sender);

end;


// *************************************************************************
// 売価算出
// *************************************************************************
procedure TForm4.SalesUnPrcCalc(Sender: TObject);
var
   st : Integer;
   salesUnPrice : WideString;
   bkSalesUnPrice : string;
   NextCtrl  : TWinControl;
   valid : Boolean;
begin

   st := gpxMAHNB01013B_SalesUnPrcCalc(HNsGrid1.LogicalRow, salesUnPrice);

   if st = 0 then
   begin
     valid := False;
     bkSalesUnPrice :=  salesUnPrice;

     HNsGrid1.OnCellValidate(Sender, ctCol_SalesUnPrcDisplay, HNsGrid1.Row div 2 * 2 + 1, bkSalesUnPrice, valid);

     NextCtrl := HNsGrid1;
     FocusCellReserve.Col := ctCol_SalesUnPrcDisplay;
     FocusCellReserve.Row := HNsGrid1.LogicalRow;
     FocusCellReserve.Line := 1;
     xSetNextFocus(NextCtrl);

   end;



end;
// --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- <<<<<

// *************************************************************************
// 商品値引き
// *************************************************************************
procedure TForm4.BitBtn_GoodsDiscount(Sender: TObject);
var
   salesDetailArray: TSalesSlipInputCustomArrayA2;
   parDetailGrossProfitRate, parAddDetailGrossProfitRate : WideString; //ADD 2021/07/01 田建委 BLINCIDENT-2527対応
begin
   gpxMAHNB01013B_DoAddLine(32,0,0); // ADD 2011/02/11

    // --- ADD 2010/08/13 --- >>>>
   // --- UPD 2012/05/22 No.526 ---------->>>>>
   ////if ((i_searchPartsMode = 1) and (FullModel.DataText = '')) then     //DEL 2012/04/05 liusy Redmine #29226
   //if ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum)and (i_searchPartsMode = 1) and (FullModel.DataText = '')) then  //ADD 2012/04/05 liusy Redmine #29226
   //通常モードで新規伝票で部品検索で型式が未設定の場合
   if (((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and
        (StrToIntDef(SalesSlipNum.Text, 0) = 0)) and
       ((i_searchPartsMode = 1) and
        (FullModel.DataText = ''))) then
   // --- UPD 2012/05/22 No.526 ----------<<<<<
   begin
     Exit;
   end;
   // --- ADD 2010/08/13 --- <<<<
   gpxMAHNB01013B_uButtonGoodsDiscountClick(HNsGrid1.LogicalRow - 1);

   salesDetailArray.Csafield1 := nil;
   salesDetailArray.Csafield1Count := 0;

   gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, HNsGrid1.LogicalRow);

   xSetDetailRowFormC(salesDetailArray,HNsGrid1.LogicalRow);

   xSettingGrid;

   xActiveCellButtonEnabledControl(xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col),HNsGrid1.LogicalRow);

  if (HNsGrid1.LogicalRow <> 0) then
  begin
     if (i_searchPartsMode = 2) then
     begin
         if (HNsGrid1.ActiveCellShow <> true) then
         begin
            xSettingFocus('GoodsNoTP');
            HNsGrid1.ShowInplaceEdit;   // ADD 2010/10/29
         end;
     end else
     if (i_searchPartsMode = 1) then
     begin
         if (HNsGrid1.ActiveCellShow <> true) then
         begin
            xSettingFocus('BLGoodsCodeTP');
            HNsGrid1.ShowInplaceEdit;  // ADD 2010/10/29
         end;

     end;
  end;
  // --- ADD 2021/07/01 田建委 BLINCIDENT-2527対応 ----->>>>>
  // 明細粗利率
  gpxMAHNB01013B_GetDetailGrossProfitRate(HNsGrid1.LogicalRow, parDetailGrossProfitRate, parAddDetailGrossProfitRate);
  detailGrossProfitRate.Caption := string(parDetailGrossProfitRate);
  addDetailGrossProfitRate.Caption := string(parAddDetailGrossProfitRate);
  // 売上金額変更後発生イベント処理
  xSalesPriceChanged();
  // --- ADD 2021/07/01 田建委 BLINCIDENT-2527対応 -----<<<<<
  xAllSecStockInfoProc(HNsGrid1.LogicalRow,False,False); // ADD K2015/04/01 高騁 森川部品個別依頼

  xSetSalesUnPrcBtnEnabled();   // ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ
end;

// *************************************************************************
// 次入力可能セル移動処理
// *************************************************************************
procedure TForm4.xMoveNextAllowEditCell();
var
   colIndex : Integer;
begin

   if ((salesSlip.InputMode = ctINPUTMODE_SalesSlip_ReadOnly)
       or (salesSlip.InputMode = ctINPUTMODE_SalesSlip_AddUp)) then
   begin
      Exit;
   end;

   if (HNsGrid1.ReadOnly[HNsGrid1.Col,HNsGrid1.row] = false) then
   begin
       Exit;
   end;

   //仕入先
   if (HNsGrid1.ReadOnly[ctCol_SupplierCd,HNsGrid1.LogicalRow * 2 + ctRow_SupplierCd] = false) then
   begin
      HNsGrid1.LogicalFocusCell(ctCol_SupplierCd, ctRow_SupplierCd,HNsGrid1.LogicalRow);
   end
   else if (HNsGrid1.ReadOnly[ctCol_GoodsName,HNsGrid1.LogicalRow * 2 + ctRow_GoodsName] = false) then
   begin
      xSettingFocus('GoodsNameTP');
   end;

end;
// MOD 2010/11/25 --- >>>>
//procedure TForm4.xPriceCheckProc(OldCol : Integer; OldRow : Integer; iRow : Integer; salesRowNo : Integer; value : string); // DEL 2011/12/01 YANGMJ REDMINE#8344
//procedure TForm4.xPriceCheckProc(OldCol : Integer; OldRow : Integer; iRow : Integer; salesRowNo : Integer; value : string; var flag : Boolean); // ADD 2011/12/01 YANGMJ REDMINE#8344   // DEL 2012/01/18 YANGMJ ソースマージ
procedure TForm4.xPriceCheckProc(OldCol : Integer; OldRow : Integer; iRow : Integer; salesRowNo : Integer; value : string);// ADD 2012/01/18 YANGMJ ソースマージ
var
status : Integer;
salesDetailArray: TSalesSlipInputCustomArrayA2;
tempStr : string;
begin

//>>>2011/01/27
{$region}
//  // ADD 2010/11/25 -- >>>>
//  tempStr := '';
//  // 売価率
//  if ((OldCol = ctCol_SalesRate) and ((OldRow mod 2) = 1)) then
//  begin
//    if ((value <> '') AND (Pos('.', value) = 0)) then
//    begin
//       value := value + '.00';
//    end;
//
////>>>2011/01/13
//////>>>2010/12/16
//////    if (value <> HNsGrid1.OriginalCellValue) then
//////    begin
//////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesRate');
//////    end
//////    else
//////    begin
//////      Exit;
//////    end;
////
////    if (StrToFloatDef(value, 0) <> beforeSalesRate) then begin
////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesRate');
////    end;
//////<<<2010/12/16
//
//    if (value <> HNsGrid1.OriginalCellValue) then
//    begin
//      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesRate');
//    end
//    else
//    begin
//      Exit;
//    end;
////<<<2011/01/13
//  end
//  // 原価率
//  else if ((OldCol = ctCol_CostRate) and ((OldRow mod 2) = 0)) then
//  begin
//    if ((value <> '') AND (Pos('.', value) = 0)) then
//    begin
//       value := value + '.00';
//    end;
//
////>>>2011/01/13
//////>>>2010/12/16
//////    if (value <> HNsGrid1.OriginalCellValue) then
//////    begin
//////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','CostRate');
//////    end
//////    else
//////    begin
//////      Exit;
//////    end;
////
////    if (StrToFloatDef(value, 0) <> beforeCostRate) then begin
////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','CostRate');
////    end;
//////<<<2010/12/16
//
//    if (value <> HNsGrid1.OriginalCellValue) then
//    begin
//      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','CostRate');
//    end
//    else
//    begin
//      Exit;
//    end;
////<<<2011/01/13
//  end
//  // 定価
//  else if ((OldCol = ctCol_ListPriceDisplay) and ((OldRow mod 2) = 1)) then
//  begin
//    if (HNsGrid1.OriginalCellValue <> '') then
//    begin
//       tempStr := StringReplace(HNsGrid1.OriginalCellValue, ',', '', [rfReplaceAll])
//    end;
//
////>>>2011/01/13
//////>>>2010/12/16
//////    if (value <> tempStr) then
//////    begin
//////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','ListPriceDisplay');
//////    end
//////    else
//////    begin
//////      Exit;
//////    end;
////
////    if (StrToFloatDef(value, 0) <> beforeListPrice) then begin
////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','ListPriceDisplay');
////    end;
//////<<<2010/12/16
//
//    if (value <> tempStr) then
//    begin
//      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','ListPriceDisplay');
//    end
//    else
//    begin
//      Exit;
//    end;
////<<<2011/01/13
//  end
//  // 原単価
//  else if ((OldCol = ctCol_SalesUnitCost) and ((OldRow mod 2) = 0)) then
//  begin
//
//    if ((value <> '') AND (Pos('.', value) = 0)) then
//    begin
//       value := value + '.00';
//    end;
//
//    if (HNsGrid1.OriginalCellValue <> '') then
//    begin
//       tempStr := StringReplace(HNsGrid1.OriginalCellValue, ',', '', [rfReplaceAll])
//    end;
//
////>>>2011/01/13
//////>>>2010/12/16
//////    if (value <> tempStr) then
//////    begin
//////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesUnitCost');
//////    end
//////    else
//////    begin
//////      Exit;
//////    end;
////
////    if (StrToFloatDef(value, 0) <> beforeSalesUnitCost) then begin
////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesUnitCost');
////    end;
//////<<<2010/12/16
//
//    if (value <> tempStr) then
//    begin
//      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesUnitCost');
//    end
//    else
//    begin
//      Exit;
//    end;
////<<<2011/01/13
//  end
//  // 売単価
//  else if ((OldCol = ctCol_SalesUnPrcDisplay) and ((OldRow mod 2) = 1)) then
//  begin
//    if ((value <> '') AND (Pos('.', value) = 0)) then
//    begin
//       value := value + '.00';
//    end;
//
//    if (HNsGrid1.OriginalCellValue <> '') then
//    begin
//       tempStr := StringReplace(HNsGrid1.OriginalCellValue, ',', '', [rfReplaceAll])
//    end;
//
////>>>2011/01/13
//////>>>2010/12/16
//////    if (value <> tempStr) then
//////    begin
//////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesUnPrcDisplay');
//////    end
//////    else
//////    begin
//////      Exit;
//////    end;
////    if (StrToFloatDef(value, 0) <> beforeSalesUnPrc) then begin
////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesUnPrcDisplay');
////    end;
//////<<<2010/12/16
//
//    if (value <> tempStr) then
//    begin
//      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesUnPrcDisplay');
//    end
//    else
//    begin
//      Exit;
//    end;
////<<<2011/01/13
//  end
//  // 売上金額
//  else if ((OldCol = ctCol_SalesMoneyDisplay) and ((OldRow mod 2) = 1)) then
//  begin
////>>>2010/12/10
////    status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesMoneyDisplay');
//
////>>>2011/01/13
//////>>>2010/12/16
//////    tempStr := StringReplace(HNsGrid1.OriginalCellValue, ',', '', [rfReplaceAll]);
//////    if (value <> tempStr) then begin // 2010/12/16
////    if (StrToFloatDef(value, 0) <> beforeSalesMoney) then begin
////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesMoneyDisplay');
////    end;
//////<<<2010/12/16
//
//    tempStr := StringReplace(HNsGrid1.OriginalCellValue, ',', '', [rfReplaceAll]);
//    if (value <> tempStr) then begin
//      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesMoneyDisplay');
//    end;
////<<<2011/01/13
////<<<2010/12/10
//    if (status = 0) then
//      begin
//         status := 3;
//      end;
//  end
//  // 出荷数
//  else if ((OldCol = ctCol_ShipmentCntDisplay) and ((OldRow mod 2) = 1)) then
//  begin
//    if (value = '0') then
//    begin
//       value := '';
//    end;
//
//    if ((value <> '') AND (Pos('.', value) = 0)) then
//    begin
//       value := value + '.00';
//    end;
//
////>>>2011/01/13
//////>>>2010/12/16
//////    if (value <> HNsGrid1.OriginalCellValue) then
//////    begin
//////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','ShipmentCntDisplay');
//////      if (status = 0) then
//////      begin
//////         status := 3;
//////      end;
//////    end
//////    else
//////    begin
//////      Exit;
//////    end;
////
////    if (StrToFloatDef(value, 0) <> beforeShipmentCnt) then begin
////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','ShipmentCntDisplay');
////      if (status = 0) then begin
////        status := 3;
////      end;
////    end;
//////<<<2010/12/16
//
//    if (value <> HNsGrid1.OriginalCellValue) then
//    begin
//      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','ShipmentCntDisplay');
//      if (status = 0) then
//      begin
//         status := 3;
//      end;
//    end
//    else
//    begin
//      Exit;
//    end;
////<<<2011/01/13
//  end
//  // 受注数
//  else if ((OldCol = ctCol_AcceptAnOrderCntDisplay) and ((OldRow mod 2) = 0)) then
//  begin
//    if (value = '0') then
//    begin
//       value := '';
//    end;
//
//    if ((value <> '') AND (Pos('.', value) = 0)) then
//    begin
//       value := value + '.00';
//    end;
//
////>>>2011/01/13
//////>>>2010/12/16
//////    if (value <> HNsGrid1.OriginalCellValue) then
//////    begin
//////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','AcceptAnOrderCntDisplay');
//////      if (status = 0) then
//////      begin
//////         status := 3;
//////      end;
//////    end
//////    else
//////    begin
//////      Exit;
//////    end;
////
////    if (StrToFloatDef(value, 0) <> beforeAcceptAnOrderCnt) then begin
////      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','AcceptAnOrderCntDisplay');
////      if (status = 0) then begin
////        status := 3;
////      end;
////    end;
//////<<<2010/12/16
//
//    if (value <> HNsGrid1.OriginalCellValue) then
//    begin
//      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','AcceptAnOrderCntDisplay');
//      if (status = 0) then
//      begin
//         status := 3;
//      end;
//    end
//    else
//    begin
//      Exit;
//    end;
////<<<2011/01/13
//  end;
//  // MOD 2010/11/25 --- <<<<
//
//
////  if (status = 3) then      // DEL 2010/11/25 --- >>>>
////  begin                     // DEL 2010/11/25 --- >>>>
//    if (not smallPointFlg) then
//    begin
//       gpxMAHNB01013B_SmallPointProc(iRow);
//    end;
//
//    SettingToolBarButtonEnabled();
//
//    gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
//
//    //Value := FloatToStr(salesDetailArray.Csafield1.SalesRate);
//
//    xActiveCellButtonEnabledControl(xGridColIndexToName(OldRow,OldCol),salesRowNo);
//
//    xSetDetailRowFormC(salesDetailArray, salesRowNo);
//
//    // 明細部変更後発生イベント処理
//    xSalesSlipDetailInput_DetailChanged(salesRowNo);
//
//    xSlipMemoInfoFormSetting(salesRowNo);
//
//    xSalesPriceChanged;
//
//    xSettingGridRowFromInputChange();
////  end;                       // DEL 2010/11/25 --- >>>>
{$endregion}
  //flag := False; // ADD 2011/12/01 YANGMJ REDMINE#8344  // DEL 2012/01/18 YANGMJ ソースマージ
  tempStr := '';
  //-------------------------------------
  // 売価率
  //-------------------------------------
  if ((OldCol = ctCol_SalesRate) and ((OldRow mod 2) = 1)) then begin
    if ((value <> '') and (Pos('.', value) = 0)) then begin
      value := value + '.00';
    // --- ADD m.suzuki 2011/02/10 ---------->>>>>
    end else if (Pos('.', value) = Length(value)-1) then begin
      value := value + '0';
    // --- ADD m.suzuki 2011/02/10 ----------<<<<<
    end;
    // --- ADD m.suzuki 2011/02/10 ---------->>>>>
    tempStr := HNsGrid1.OriginalCellValue;
//    tempStr := Trim(tempStr); // ADD 2013/03/14 Wakita DEL 2013/07/04 Wakita
    if ((tempStr <> '') and (Pos('.', tempStr) = 0)) then begin
      tempStr := tempStr + '.00';
    end else if (Pos('.', tempStr) = Length(tempStr)-1) then begin
      tempStr := tempStr + '0';
    end;
    // --- ADD m.suzuki 2011/02/10 ----------<<<<<

    // --- UPD m.suzuki 2011/02/10 ---------->>>>>
    //if (value <> HNsGrid1.OriginalCellValue) then begin
    if (value <> tempStr) then begin
    // --- UPD m.suzuki 2011/02/10 ----------<<<<<
      // --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
      //status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesRate');
      if (HNsGrid1.ReadOnly[ctCol_SalesRate, OldRow] = False) then
      begin
        status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, Value, '', 'SalesRate');
      end;
      // --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
    end else begin
      Exit;
    end;
  end

  //-------------------------------------
  // 原価率
  //-------------------------------------
  else if ((OldCol = ctCol_CostRate) and ((OldRow mod 2) = 0)) then begin
    if ((value <> '') and (Pos('.', value) = 0)) then begin
      value := value + '.00';
    end;

    if (value <> HNsGrid1.OriginalCellValue) then begin
      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','CostRate');
    end else begin
      Exit;
    end;
  end

  //-------------------------------------
  // 定価
  //-------------------------------------
  else if ((OldCol = ctCol_ListPriceDisplay) and ((OldRow mod 2) = 1)) then begin
    if (HNsGrid1.OriginalCellValue <> '') then begin
       tempStr := StringReplace(HNsGrid1.OriginalCellValue, ',', '', [rfReplaceAll])
    end;

    if (value <> tempStr) then begin
      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','ListPriceDisplay');
    end else begin
      Exit;
    end;
  end

  //-------------------------------------
  // 原単価
  //-------------------------------------
  else if ((OldCol = ctCol_SalesUnitCost) and ((OldRow mod 2) = 0)) then begin
    if ((value <> '') and (Pos('.', value) = 0)) then begin
      value := value + '.00';
    end;

    if (HNsGrid1.OriginalCellValue <> '') then begin
      tempStr := StringReplace(HNsGrid1.OriginalCellValue, ',', '', [rfReplaceAll])
    end;

    if (value <> tempStr) then begin
      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesUnitCost');
    end else begin
      Exit;
    end;
  end

  //-------------------------------------
  // 売単価
  //-------------------------------------
  else if ((OldCol = ctCol_SalesUnPrcDisplay) and ((OldRow mod 2) = 1)) then begin
    if ((value <> '') and (Pos('.', value) = 0)) then begin
      value := value + '.00';
    // --- ADD m.suzuki 2011/02/10 ---------->>>>>
    end else if (Pos('.', value) = Length(value)-1) then begin
      value := value + '0';
    // --- ADD m.suzuki 2011/02/10 ----------<<<<<
    end;

    if (HNsGrid1.OriginalCellValue <> '') then begin
      tempStr := StringReplace(HNsGrid1.OriginalCellValue, ',', '', [rfReplaceAll]);
//      tempStr := Trim(tempStr); // ADD 2013/03/14 Wakita DEL 2013/07/04 Wakita
      // --- ADD m.suzuki 2011/02/10 ---------->>>>>
      if (Pos('.', tempStr) = 0) then begin
        tempStr := tempStr + '.00';
      end else if (Pos('.', tempStr) = Length(tempStr)-1) then begin
        tempStr := tempStr + '0';
      end;
      // --- ADD m.suzuki 2011/02/10 ----------<<<<<
    end;

    if (value <> tempStr) then begin
      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesUnPrcDisplay');
// -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
//      //----- ADD 2011/12/01 LIUZY REDMINE#8379 ----->>>>>
//      if (status = 0) then begin
//        status := 3;
//      end;
//      //----- ADD 2011/12/01 LIUZY REDMINE#8379 -----<<<<<
// -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
    end else begin
      Exit;
    end;
  end

  //-------------------------------------
  // 売上金額
  //-------------------------------------
  else if ((OldCol = ctCol_SalesMoneyDisplay) and ((OldRow mod 2) = 1)) then begin
    tempStr := StringReplace(HNsGrid1.OriginalCellValue, ',', '', [rfReplaceAll]);
//    tempStr := Trim(tempStr); // ADD 2013/03/14 Wakita DEL 2013/07/04 Wakita
    if (value <> tempStr) then begin
      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesMoneyDisplay');
    end;

    if (status = 0) then begin
      status := 3;
    end
    else  // ADD 2012/01/17 Redmine27300
    begin
      Exit;
    end;
  end

  //-------------------------------------
  // 出荷数
  //-------------------------------------
  else if ((OldCol = ctCol_ShipmentCntDisplay) and ((OldRow mod 2) = 1)) then begin
    if (value = '0') then begin
       value := '';
    end;

    if ((value <> '') and (Pos('.', value) = 0)) then begin
      value := value + '.00';
    // --- ADD m.suzuki 2011/02/10 ---------->>>>>
    end else if (Pos('.', value) = Length(value)-1) then begin
      value := value + '0';
    // --- ADD m.suzuki 2011/02/10 ----------<<<<<
    end;
    // --- ADD m.suzuki 2011/02/10 ---------->>>>>
    tempStr := HNsGrid1.OriginalCellValue;
    if ((tempStr <> '') and (Pos('.', tempStr) = 0)) then begin
      tempStr := tempStr + '.00';
    end else if (Pos('.', tempStr) = Length(tempStr)-1) then begin
      tempStr := tempStr + '0';
    end;
    // --- ADD m.suzuki 2011/02/10 ----------<<<<<

    // --- UPD m.suzuki 2011/02/10 ---------->>>>>
    //if (value <> HNsGrid1.OriginalCellValue) then begin
    if (value <> tempStr) then begin
    // --- UPD m.suzuki 2011/02/10 ----------<<<<<
      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','ShipmentCntDisplay');
      if (status = 0) then begin
         status := 3;
         isShipmentCntError := False;// ADD 2011/07/27
      //end; // DEL 2011/07/27
      // ADD 2011/07/27
      end else
      begin
         isShipmentCntError := True;
      end;
      // ADD 2011/07/27
    end else begin
      Exit;
    end;
  end
// -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
//   //----- ADD 2011/12/01 YANGMJ REDMINE#8344 ----->>>>>
//   //販売区分
//   else if ((OldCol = ctCol_SalesCode) and ((OldRow mod 2) = 0))  then
//   begin
//      tempStr := HNsGrid1.OriginalCellValue;
//      if (value <> tempStr) then
//      begin
//         status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','SalesCode');
//         if (status = 0) then begin
//           status := 3;
//         end else if (status = -1) then
//         begin
//           gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);
//
//           HNsGrid1.Cells[OldCol, OldRow] := IntToStr(salesDetailArray.Csafield1.GoodsKindCode);
//           flag := true;
//         end;
//
//      end
//      else begin
//         Exit;
//      end;
//   end
////----- ADD 2011/12/01 YANGMJ REDMINE#8344 -----<<<<<
// -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
  //-------------------------------------
  // 受注数
  //-------------------------------------
  else if ((OldCol = ctCol_AcceptAnOrderCntDisplay) and ((OldRow mod 2) = 0)) then begin
    if (value = '0') then begin
      value := '';
    end;

    if ((value <> '') and (Pos('.', value) = 0)) then begin
      value := value + '.00';
    // --- ADD m.suzuki 2011/02/10 ---------->>>>>
    end else if (Pos('.', value) = Length(value)-1) then begin
      value := value + '0';
    // --- ADD m.suzuki 2011/02/10 ----------<<<<<
    end;
    // --- ADD m.suzuki 2011/02/10 ---------->>>>>
    tempStr := HNsGrid1.OriginalCellValue;
    if ((tempStr <> '') and (Pos('.', tempStr) = 0)) then begin
      tempStr := tempStr + '.00';
    end else if (Pos('.', tempStr) = Length(tempStr)-1) then begin
      tempStr := tempStr + '0';
    end;
    // --- ADD m.suzuki 2011/02/10 ----------<<<<<

    // --- UPD m.suzuki 2011/02/10 ---------->>>>>
    //if (value <> HNsGrid1.OriginalCellValue) then begin
    if (value <> tempStr) then begin
    // --- UPD m.suzuki 2011/02/10 ----------<<<<<
      status := gpxMAHNB01013B_uGridDetailsAfterCellUpdateProc(iRow, value, '','AcceptAnOrderCntDisplay');
      if (status = 0) then begin
        status := 3;
      end;
    end else begin
      Exit;
    end;
  end;

  if (status = 3) then begin
    if (not smallPointFlg) then begin
      gpxMAHNB01013B_SmallPointProc(iRow);
    end;

    //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
    SettingToolBarButtonEnabled(HNsGrid1); // ADD 2011/12/21 tianjw Redmine#27290

    gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

    xActiveCellButtonEnabledControl(xGridColIndexToName(OldRow,OldCol),salesRowNo);

    xSetDetailRowFormC(salesDetailArray, salesRowNo);

    xSalesSlipDetailInput_DetailChanged(salesRowNo);

    xSlipMemoInfoFormSetting(salesRowNo);

    xSalesPriceChanged;

    xSettingGridRowFromInputChange();
  end;
//<<<2011/01/27

end;
// ADD 2010/09/14 --- <<<<
// *************************************************************************
// Gridの列表示非表示設定処理
// *************************************************************************
procedure TForm4.xSettingGridColVisible(statusType:Integer ; value: Integer);
var
    i, j ,col: Integer;
begin
    // -----UPD 2010/06/02------>>>>>
    //入力切替
    if (value = 1) then
    begin

      if (Form4.ClientWidth > 1024) then
      begin
        HNsGrid1.ColWidths[0] := 40;
        for j := 1 to HNsGrid1.ColCount - 1 do
        begin
           HNsGrid1.ColWidths[j] := 64;
        end;
      end;

      HNsGrid1.ColWidths[ctCol_GoodsKindCode] := 40;  //純優
      HNsGrid1.ColWidths[ctCol_SlipMemoExist] := 27;  //メモ
      HNsGrid1.ColWidths[ctCol_GoodsName] := 157;  //品番
      HNsGrid1.ColWidths[ctCol_BLGoodsCode] := 55;  //BLコード
      HNsGrid1.ColWidths[ctCol_WarehouseCode] := 58; //倉庫
      HNsGrid1.ColWidths[ctCol_WarehouseShelfNo] := 70; //棚番


      HNsGrid1.ColWidths[ctCol_SalesCode] := 0;
      HNsGrid1.ColWidths[ctCol_OpenPriceDivDisplay] := 0;
      HNsGrid1.ColWidths[ctCol_CostRate] := 0;
      HNsGrid1.ColWidths[ctCol_SalesUnitCost] := 0;
      HNsGrid1.ColWidths[ctCol_SalesMoneyDisplay] := 0;

      HNsGrid1.ColWidths[ctCol_PartySlipNumDtl] := 229;
      HNsGrid1.ColWidths[ctCol_DeliGdsCmpltDueDate] := 80;
      HNsGrid1.ColWidths[ctCol_CmpltSalesRowNo] := 64;

      // 発注情報
      HNsGrid1.ColWidths[ctCol_BoCode] := 0;
      HNsGrid1.ColWidths[ctCol_SupplierCdForOrder] := 0;
      HNsGrid1.ColWidths[ctCol_AcceptAnOrderCntForOrder] := 0;
      HNsGrid1.ColWidths[ctCol_DeliveredGoodsDivNm] := 0;
      HNsGrid1.ColWidths[ctCol_FollowDeliGoodsDivNm] := 0;

      //仕入情報
      HNsGrid1.ColWidths[ctCol_PartySalesSlipNum] := 0;
      HNsGrid1.ColWidths[ctCol_StockDate] := 0;

      //RC
      HNsGrid1.ColWidths[ctCol_RecycleDivNm] := 0;
      HNsGrid1.ColWidths[ctCol_GoodsMngNo] := 0;

      if (Form4.ClientWidth > 1024) then
      begin
        for i := 0 to HNsGrid1.ColCount - 1 do
        begin
           col := HNsGrid1.ColWidths[i];
           HNsGrid1.ColWidths[i] := longint(col)*longint(Form4.ClientWidth) div 1024;
           if (i > 25) then
           begin
              HNsGrid1.ColWidths[i] := 0;
           end;
        end;
      end;
    end
    //仕入
    else if (value = 2) then
    begin
      if (Form4.ClientWidth > 1024) then
      begin
        HNsGrid1.ColWidths[0] := 40;
        for j := 1 to HNsGrid1.ColCount - 1 do
        begin
           HNsGrid1.ColWidths[j] := 64;
        end;
      end;
      HNsGrid1.ColWidths[ctCol_GoodsKindCode] := 40;  //純優
      HNsGrid1.ColWidths[ctCol_OpenPriceDivDisplay] := 30;  //OP
      HNsGrid1.ColWidths[ctCol_SlipMemoExist] := 27;  //メモ
      HNsGrid1.ColWidths[ctCol_BoCode] := 40;  //BO
      HNsGrid1.ColWidths[ctCol_GoodsName] := 157;  //品番
      HNsGrid1.ColWidths[ctCol_BLGoodsCode] := 55;  //BLコード
      HNsGrid1.ColWidths[ctCol_SalesUnitCost] := 95;  //原単価
      HNsGrid1.ColWidths[ctCol_SalesCode] := 90;  //販売区分
      HNsGrid1.ColWidths[ctCol_CostRate] := 64; //原価率

      HNsGrid1.ColWidths[ctCol_SalesMoneyDisplay] := 0;  //売上金額
      HNsGrid1.ColWidths[ctCol_WarehouseCode] := 0; //倉庫
      HNsGrid1.ColWidths[ctCol_WarehouseShelfNo] := 0; //棚番

      HNsGrid1.ColWidths[ctCol_PartySalesSlipNum] := 111;
      HNsGrid1.ColWidths[ctCol_StockDate] := 111;

      // 発注情報
      HNsGrid1.ColWidths[ctCol_BoCode] := 0;
      HNsGrid1.ColWidths[ctCol_SupplierCdForOrder] := 0;
      HNsGrid1.ColWidths[ctCol_AcceptAnOrderCntForOrder] := 0;
      HNsGrid1.ColWidths[ctCol_DeliveredGoodsDivNm] := 0;
      HNsGrid1.ColWidths[ctCol_FollowDeliGoodsDivNm] := 0;

      //入力切替
      HNsGrid1.ColWidths[ctCol_DtlNote] := 0;
      HNsGrid1.ColWidths[ctCol_CmpltSalesRowNo] := 0;
      HNsGrid1.ColWidths[ctCol_DeliGdsCmpltDueDate] := 0;

      //RC
      HNsGrid1.ColWidths[ctCol_RecycleDivNm] := 0;
      HNsGrid1.ColWidths[ctCol_GoodsMngNo] := 0;

      if (Form4.ClientWidth > 1024) then
      begin
        for i := 0 to HNsGrid1.ColCount - 1 do
        begin
           col := HNsGrid1.ColWidths[i];
           HNsGrid1.ColWidths[i] := longint(col)*longint(Form4.ClientWidth) div 1024;
           if (i > 25) then
           begin
              HNsGrid1.ColWidths[i] := 0;
           end;
        end;
      end;

    end
    //発注
    else if (value = 3) then
    begin

      if (Form4.ClientWidth > 1024) then
      begin
        HNsGrid1.ColWidths[0] := 40;
        for j := 1 to HNsGrid1.ColCount - 1 do
        begin
           HNsGrid1.ColWidths[j] := 64;
        end;
      end;
      HNsGrid1.ColWidths[ctCol_GoodsKindCode] := 40;  //純優
      HNsGrid1.ColWidths[ctCol_SlipMemoExist] := 27;  //メモ
      HNsGrid1.ColWidths[ctCol_BoCode] := 40;  //BO
      HNsGrid1.ColWidths[ctCol_GoodsName] := 157;  //品番
      HNsGrid1.ColWidths[ctCol_BLGoodsCode] := 55;  //BLコード
      HNsGrid1.ColWidths[ctCol_SalesCode] := 90;  //販売区分
      HNsGrid1.ColWidths[ctCol_WarehouseCode] := 58; //倉庫
      HNsGrid1.ColWidths[ctCol_WarehouseShelfNo] := 70; //棚番

      HNsGrid1.ColWidths[ctCol_ListPriceDisplay] := 0;
      HNsGrid1.ColWidths[ctCol_OpenPriceDivDisplay] := 0;
      HNsGrid1.ColWidths[ctCol_CostRate] := 0;
      HNsGrid1.ColWidths[ctCol_SalesUnitCost] := 0;
      HNsGrid1.ColWidths[ctCol_SalesMoneyDisplay] := 0;

      HNsGrid1.ColWidths[ctCol_BoCode] := 30;
      HNsGrid1.ColWidths[ctCol_SupplierCdForOrder] := 93;
      HNsGrid1.ColWidths[ctCol_AcceptAnOrderCntForOrder] := 40;
      HNsGrid1.ColWidths[ctCol_DeliveredGoodsDivNm] := 105;
      HNsGrid1.ColWidths[ctCol_FollowDeliGoodsDivNm] := 105;


      //入力切替
      HNsGrid1.ColWidths[ctCol_DtlNote] := 0;
      HNsGrid1.ColWidths[ctCol_CmpltSalesRowNo] := 0;
      HNsGrid1.ColWidths[ctCol_DeliGdsCmpltDueDate] := 0;

      //仕入情報
      HNsGrid1.ColWidths[ctCol_PartySalesSlipNum] := 0;
      HNsGrid1.ColWidths[ctCol_StockDate] := 0;

      //RC
      HNsGrid1.ColWidths[ctCol_RecycleDivNm] := 0;
      HNsGrid1.ColWidths[ctCol_GoodsMngNo] := 0;

      if (Form4.ClientWidth > 1024) then
      begin
        for i := 0 to HNsGrid1.ColCount - 1 do
        begin
           col := HNsGrid1.ColWidths[i];
           HNsGrid1.ColWidths[i] := longint(col)*longint(Form4.ClientWidth) div 1024;
           if (i > 25) then
           begin
              HNsGrid1.ColWidths[i] := 0;
           end;
        end;
      end;

    end
    //>>>2010/05/30
    else if (value = 4) then
    begin
      if (Form4.ClientWidth > 1024) then
      begin
        HNsGrid1.ColWidths[0] := 40;
        for j := 1 to HNsGrid1.ColCount - 1 do
        begin
           HNsGrid1.ColWidths[j] := 64;
        end;
      end;
      HNsGrid1.ColWidths[ctCol_GoodsKindCode] := 40;  //純優
      HNsGrid1.ColWidths[ctCol_OpenPriceDivDisplay] := 30;  //OP
      HNsGrid1.ColWidths[ctCol_SlipMemoExist] := 27;  //メモ
      HNsGrid1.ColWidths[ctCol_BoCode] := 40;  //BO
      HNsGrid1.ColWidths[ctCol_GoodsName] := 157;  //品番
      HNsGrid1.ColWidths[ctCol_BLGoodsCode] := 55;  //BLコード
      HNsGrid1.ColWidths[ctCol_SalesUnitCost] := 95;  //原単価
      HNsGrid1.ColWidths[ctCol_SalesCode] := 90;  //販売区分
      HNsGrid1.ColWidths[ctCol_CostRate] := 64; //原価率
      HNsGrid1.ColWidths[ctCol_RecycleDivNm] := 225;

      HNsGrid1.ColWidths[ctCol_WarehouseCode] := 0;
      HNsGrid1.ColWidths[ctCol_WarehouseShelfNo] := 0;
      HNsGrid1.ColWidths[ctCol_SalesMoneyDisplay] := 0;

      // 発注情報
      HNsGrid1.ColWidths[ctCol_BoCode] := 0;
      HNsGrid1.ColWidths[ctCol_SupplierCdForOrder] := 0;
      HNsGrid1.ColWidths[ctCol_AcceptAnOrderCntForOrder] := 0;
      HNsGrid1.ColWidths[ctCol_DeliveredGoodsDivNm] := 0;
      HNsGrid1.ColWidths[ctCol_FollowDeliGoodsDivNm] := 0;

      //入力切替
      HNsGrid1.ColWidths[ctCol_DtlNote] := 0;
      HNsGrid1.ColWidths[ctCol_CmpltSalesRowNo] := 0;
      HNsGrid1.ColWidths[ctCol_DeliGdsCmpltDueDate] := 0;

      //仕入情報
      HNsGrid1.ColWidths[ctCol_PartySalesSlipNum] := 0;
      HNsGrid1.ColWidths[ctCol_StockDate] := 0;

      if (Form4.ClientWidth > 1024) then
      begin
        for i := 0 to HNsGrid1.ColCount - 1 do
        begin
           col := HNsGrid1.ColWidths[i];
           HNsGrid1.ColWidths[i] := longint(col)*longint(Form4.ClientWidth) div 1024;
           if (i > 25) then
           begin
              HNsGrid1.ColWidths[i] := 0;
           end;
        end;
      end;
    end
   //<<<2010/05/30
   else if (value = 0) then
   begin
    xInitialSettingGridColWidths;
   end;
    // -----UPD 2010/06/02------<<<<<
end;


// *************************************************************************
// 挿入
// *************************************************************************
procedure TForm4.xInsert();
var
   salesDetailArray: TSalesSlipInputCustomArrayA2;
   st : Integer;
   logicRowNo : Integer; // ADD 2010/07/01
begin
   gpxMAHNB01013B_DoAddLine(25,0,0); // ADD 2011/02/11

   // ---ADD 2011/04/13--------------->>>>>
   //>>>2011/05/24
   //CustomerClaimConfirmationBtn.SetFocus;
   SalesEmployeeCdBtn.SetFocus;
   //<<<2011/05/24
   HNsGrid1.SetFocus;
   // ---ADD 2011/04/13---------------<<<<<

   //st := gpxMAHNB01013B_DeatilActionTable(HNsGrid1.LogicalRow,'INSERT');
   st := gpxMAHNB01013B_DeatilActionTable(iLogicalRow_Mouse,'INSERT');// ADD 2010/07/16

   gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

   xSetDetailRowFormC(salesDetailArray,-1);

   if (st = 0) then
   begin
     //明細グリッドセル設定処理
      xSettingGrid;
   end;

   // --- ADD 2010/07/01 ---------->>>>>
   //logicRowNo := HNsGrid1.LogicalRow;
   logicRowNo := iLogicalRow_Mouse; //ADD 2010/07/16

   if(i_searchPartsMode = ctBLCodeSearch) then
   begin
       if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode,logicRowNo * 2] = False) then
       begin
          HNsGrid1.FocusCell(ctCol_BLGoodsCode, logicRowNo * 2);
       end
       else
       begin
          HNsGrid1.FocusCell(ctCol_GoodsName, logicRowNo * 2)
       end;
   end else
   begin
       if (HNsGrid1.ReadOnly[ctCol_GoodsNo,logicRowNo * 2 + 1] = False) then
       begin
          HNsGrid1.FocusCell(ctCol_GoodsNo, logicRowNo * 2 + 1);
       end
       else
       begin
          HNsGrid1.FocusCell(ctCol_GoodsName, logicRowNo * 2)
       end;
   end;
   xAllSecStockInfoProc(HNsGrid1.LogicalRow, False, False); // ADD K2015/04/01 高騁 森川部品個別依頼
   // --- ADD 2010/07/01 ----------<<<<<
   // --- ADD 2010/09/19 ---------->>>>>
   // セルアクティブ時ボタン有効無効コントロール処理
    xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);
   // --- ADD 2010/09/19 ----------<<<<<
end;

// *************************************************************************
// 削除
// *************************************************************************
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 徐錦山
// 作 成 日  2011/08/08  修正内容 : 連番994
//                                  明細部からの計上時は品番検索へ切り替え可能です
//----------------------------------------------------------------------------//
procedure TForm4.xDelete();
var
   salesDetailArray: TSalesSlipInputCustomArrayA2;
   st : Integer;
   logicRowNo : Integer;    // ADD 2010/06/26
   i, j, startRowNo, endRowNo : Integer; // ADD 2011/04/13
begin
   //logicRowNo := HNsGrid1.LogicalRow;   // ADD 2010/06/26
   //st := gpxMAHNB01013B_DeatilActionTable(HNsGrid1.LogicalRow,'DEL');
   gpxMAHNB01013B_DoAddLine(26,0,0); // ADD 2011/02/11


   // ---ADD 2011/04/13--------------->>>>>
   //>>>2011/05/24
   //CustomerClaimConfirmationBtn.SetFocus;
   SalesEmployeeCdBtn.SetFocus;
   //<<<2011/05/24
   HNsGrid1.SetFocus;
   // ---ADD 2011/04/13---------------<<<<<

   // ---UPD 2011/04/13------------>>>>>
   //logicRowNo := iLogicalRow_Mouse; //ADD 2010/07/16
   //st := gpxMAHNB01013B_DeatilActionTable(iLogicalRow_Mouse,'DEL');//ADD 2010/07/16

   startRowNo := -1;
   endRowNo := -1;
   // 初始行番号を取得
   for i := 0 to HNsGrid1.RowCount - 1 do
   begin
     if ((HNsGrid1.Colors[0, i] = ctFixRowColor) and
        (HNsGrid1.ColorsTo[0, i] = ctFixRowColorTo)) then
     begin
       startRowNo := i div 2;
       Break;
     end;
   end;

   // 最終行番号を取得
   for j := HNsGrid1.RowCount - 1 downto 0 do
   begin
     if ((HNsGrid1.Colors[0, j] = ctFixRowColor) and
        (HNsGrid1.ColorsTo[0, j] = ctFixRowColorTo)) then
     begin
       endRowNo := j div 2;
       Break;
     end;
   end;

   // --- ADD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ---------->>>>>
   if (startRowNo = -1) then
   begin
    if (xRowDelChkFromTo(iLogicalRow_Mouse, iLogicalRow_Mouse) = False) then
    begin
      Exit;
    end
   end
   else
   begin
    if (xRowDelChkFromTo(startRowNo, endRowNo) = False) then
    begin
      Exit;
    end
   end;
   // --- ADD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ----------<<<<<

   if startRowNo = endRowNo then
   begin
     if (startRowNo = -1) then
     begin
       logicRowNo := iLogicalRow_Mouse;
       // 単行削除
       st := gpxMAHNB01013B_DeatilActionTable(iLogicalRow_Mouse,'DEL');
     end
     else
     begin
       logicRowNo := startRowNo;
       // 単行削除
       st := gpxMAHNB01013B_DeatilActionTable(startRowNo,'DEL');
     end;
   end
   else
   begin
     logicRowNo := startRowNo;
     // 多行削除
     st := gpxMAHNB01013B_DetailDeleteActionTable(startRowNo, endRowNo);
   end;
   // ---UPD 2011/04/13------------<<<<<

  // --- ADD 2013/04/18 Wakita ---------->>>>>
  // 車両情報設定処理
  xCarInfoFormSetting(startRowNo);
  // --- ADD 2013/04/18 Wakita ----------<<<<<
   gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

   xSetDetailRowFormC(salesDetailArray,-1);

   if (st = 0) then
   begin
      copyLogicRow := 0;// ADD 2010/07/01
     //明細グリッドセル設定処理
      xSettingGrid;
   end;

   xSalesPriceChanged;//ADD 2010/07/01
   xSetDisplayDetailInfo(logicRowNo);//ADD 2010/07/01

   // --- ADD 2010/06/26 ---------->>>>>
   if(i_searchPartsMode = ctBLCodeSearch) then
   begin
       // --- UPD 2010/07/01 ---------->>>>>
       //HNsGrid1.FocusCell(ctCol_BLGoodsCode, logicRowNo * 2); //DEL 2010/07/01
       if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode,logicRowNo * 2] = False) then
       begin
          //HNsGrid1.FocusCell(ctCol_BLGoodsCode, logicRowNo * 2);//DEL 2012/04/10 朱宝軍 Redmine #29218
          HNsGrid1.FocusCell(ctCol_BLGoodsCode, logicRowNo * 2); // 2012/05/17
          HNsGrid1.GotoCell(ctCol_BLGoodsCode, logicRowNo * 2);//ADD 2012/04/10 朱宝軍 Redmine #29218
       end
       else
       begin
          //HNsGrid1.FocusCell(ctCol_GoodsName, logicRowNo * 2);//DEL 2012/04/10 朱宝軍 Redmine #29218
          HNsGrid1.FocusCell(ctCol_GoodsName, logicRowNo * 2);//2012/05/17
          HNsGrid1.GotoCell(ctCol_GoodsName, logicRowNo * 2);//ADD 2012/04/10 朱宝軍 Redmine #29218
       end;

       // --- UPD 2010/07/01 ----------<<<<<
   end else
   begin
       // --- UPD 2010/07/01 ---------->>>>>
       //HNsGrid1.FocusCell(ctCol_GoodsNo, logicRowNo * 2 + 1); //DEL 2010/07/01
       if (HNsGrid1.ReadOnly[ctCol_GoodsNo,logicRowNo * 2 + 1] = False) then
       begin
          //HNsGrid1.FocusCell(ctCol_GoodsNo, logicRowNo * 2 + 1);//DEL 2012/04/10 朱宝軍 Redmine #29218
          HNsGrid1.FocusCell(ctCol_GoodsNo, logicRowNo * 2 + 1);//2012/05/17
          HNsGrid1.GotoCell(ctCol_GoodsNo, logicRowNo * 2 + 1);//ADD 2012/04/10 朱宝軍 Redmine #29218
       end
       else
       begin
          //HNsGrid1.FocusCell(ctCol_GoodsName, logicRowNo * 2);//DEL 2012/04/10 朱宝軍 Redmine #29218
          HNsGrid1.FocusCell(ctCol_GoodsName, logicRowNo * 2);//2012/05/17
          HNsGrid1.GotoCell(ctCol_GoodsName, logicRowNo * 2);//ADD 2012/04/10 朱宝軍 Redmine #29218
       end;

       // --- UPD 2010/07/01 ----------<<<<<
   end;
   // --- ADD 2010/06/26 ----------<<<<<

   HNsGrid1.ShowInplaceEdit; // 2012/05/17
   xAllSecStockInfoProc(HNsGrid1.LogicalRow, False, False); // ADD K2015/04/01 高騁 森川部品個別依頼
   // --- 2011/08/08 XUJS ADD STA --->>>>>>
   xActiveCellButtonEnabledControl(xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col),HNsGrid1.LogicalRow);
   //xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);
   // --- 2011/08/08 XUJS ADD END ---<<<<<<
end;

// *************************************************************************
// 明細入力判定  画面DSLで判定を行う
// *************************************************************************
function TForm4.xRowChk(iRow: Integer): Boolean;
begin
   Result := false;
   if (StrToIntDef(Trim(HNsGrid1.LogicalCells[ctCol_BLGoodsCode, ctRow_BLGoodsCode, iRow + 1]), 0) <> 0) then
   begin
      Result := True;
   end;
end;

function TForm4.xTabFooterContainsFocus(): Boolean;
begin
   Result := false;
   if (SlipNoteCode.Focused or SlipNote2Code.Focused or SlipNote3Code.Focused
   or SlipNote.Focused or SlipNote2.Focused or SlipNote3.Focused
   or AddresseeCode.Focused or AddresseeName.Focused or DeliveredGoodsDivComBo.Focused
   or SlipNoteCodeBtn.Focused or SlipNote2CodeBtn.Focused or SlipNote3CodeBtn.Focused
   or AddresseeCodeBtn.Focused or AddresseeConfirmationBtn.Focused or RetGoodsReason.Focused
   or RetGoodsReasonBtn.Focused or RetGoodsReasonBtn.Focused or PartySaleSlipNum.Focused
   or SlipMemo1.Focused or SlipMemo2.Focused or SlipMemo3.Focused
   or InsideMemo1.Focused or InsideMemo2.Focused or InsideMemo3.Focused
   or CarNoteCode.Focused // ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218
   or CarSlipNote.Focused or SlipNoteGuideBtn.Focused or Mileage.Focused
   // --- ADD m.suzuki 2010/06/12 ---------->>>>>
   or checkBox_MakeQR.Focused
   // --- ADD m.suzuki 2010/06/12 ----------<<<<<
   or HEdit_PartySalesSlipNum.Focused // 2011/05/25
   or uTabControl_Footer.Focused) then
   begin
      Result := True;
   end;
end;

function TForm4.xHeaderContainsFocus(): Boolean;
begin
   Result := false;
   if (SectionCode.Focused or SubSectionCode.Focused or CustomerCode.Focused
   or SalesEmployeeCd.Focused or FrontEmployeeCd.Focused or SalesInputCode.Focused
   or SalesSlipNum.Focused or AcptAnOdrStatusDisplayComBo.Focused or SalesSlipDisplayComBo.Focused
   or SalesDate.Focused or SectionCodeBtn.Focused or SubSectionCodeBtn.Focused
   //>>>2010/07/14
   or (ActiveControl.Name = SalesDate.Name+'Year')
   or (ActiveControl.Name = SalesDate.Name+'Month')
   or (ActiveControl.Name = SalesDate.Name+'Day')
    //<<<2010/07/14
   or CustomerCodeBtn.Focused or SalesEmployeeCdBtn.Focused or FrontEmployeeCdBtn.Focused
   or SalesInputCodeBtn.Focused or SalesSlipNumBtn.Focused or CustomerClaimConfirmationBtn.Focused
   or CustomerName.Focused  // ADD 2010/11/02
   ) then
   begin
      Result := True;
   end;
end;

// *************************************************************************
// コピー
// *************************************************************************
procedure TForm4.xCopy();
var salesDetailArray: TSalesSlipInputCustomArrayA2;
begin
   gpxMAHNB01013B_DoAddLine(23,0,0); // ADD 2011/02/11

   // ---ADD 2011/04/13--------------->>>>>
   //>>>2011/05/24
   //CustomerClaimConfirmationBtn.SetFocus;
   SalesEmployeeCdBtn.SetFocus;
   //<<<2011/05/24
   HNsGrid1.SetFocus;
   // ---ADD 2011/04/13---------------<<<<<

   gpxMAHNB01013B_DeatilActionTable(iLogicalRow_Mouse,'COPY');

   gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, iLogicalRow_Mouse);
   xSetDetailRowFormC(salesDetailArray, iLogicalRow_Mouse);
   xSettingGrid;

end;

// *************************************************************************
// 元に戻す処理
// *************************************************************************
procedure TForm4.xRetry();
var
  dialogResultFlg, statusFlg: Boolean;
  salesDetailArray: TSalesSlipInputCustomArrayA2;
  readSlipFlg:Boolean; //ADD 2010/06/02
begin
  gpxMAHNB01013B_Retry(True, dialogResultFlg);
  if (dialogResultFlg) then
  begin
    // ----- UPD 2010/05/21 ------------>>>>>
    //xClear(False, False, False, False, False);
    //xClear(False, False, False, False, False, False);
    //xClear(False, False, False, False, False, False, True);//ADD 2010/06/02
    // ----- UPD 2010/05/21 ------------>>>>>
    // --- UPD 2010/05/31 ---------->>>>>
    // --- UPD 2013/05/07 Wakita ---------->>>>>
//    // --- UPD 2013/04/22 Wakita ---------->>>>>
////    xClear(False, False, False, False, False, False, True, 0);
//    xClear(False, True, False, False, False, False, True, 0);
//    // --- UPD 2013/04/22 Wakita ----------<<<<<
    // --- UPD 2013/05/10 Wakita ---------->>>>>
    //xClear(False, False, False, False, False, False, True, 0);
    xClear(False, True, False, False, False, False, True, 0);
    // --- UPD 2013/05/10 Wakita ----------<<<<<
    // --- UPD 2013/05/07 Wakita ----------<<<<<
//<<<2010/05/30
    //xSetDisplayDetailInfo();
    xSetDisplayDetailInfo(HNsGrid1.LogicalRow);
    // --- UPD 2010/05/31 ----------<<<<<
    InitialSetFocusTick();

    // --- DEL 2013/04/22 Wakita ---------->>>>>
//    // --- UPD 2010/06/02 ---------->>>>>
//    gpxMAHNB01013B_GetReadSlipFlg(readSlipFlg);
//    if (readSlipFlg) then
//    begin
//      xSettingSalesDetailRowInputRowCount(salesSlip_disp.DetailRowCountForReadSlip);
//    end;
//    // --- UPD 2010/06/02 ----------<<<<<
    // --- DEL 2013/04/22 Wakita ----------<<<<<

    gpxMAHNB01013B_RetryResult(statusFlg);
    if (statusFlg) then
    begin
      // --- ADD 2013/04/22 Wakita ---------->>>>>
      gpxMAHNB01012B_GetSalesSlip(salesSlip_disp);
      gpxMAHNB01013B_GetReadSlipFlg(readSlipFlg);
      if (readSlipFlg) then
      begin
        xSettingSalesDetailRowInputRowCount(salesSlip_disp.DetailRowCountForReadSlip);
      end;
      // --- ADD 2013/04/22 Wakita ----------<<<<<

      //>>> ADD  2012/05/17 SCM障害№162対応
      // データ取得・表示終了まで終了ボタン使用不可
      b_CloseFlg := True;
      //<<< ADD  2012/05/17 SCM障害№162対応
      // --- ADD 2010/06/02 ---------->>>>>
      xSetDisplayCarInfo(1, 0);
      xSetDisplayDetailInfo(1);
      // --- ADD 2010/06/02 ----------<<<<<
      xSetDisplay();
      gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);
      xSetDetailRowFormC(salesDetailArray,-1);
      xSettingGrid();
      SalesEmployeeCd.SetFocus;      // --- ADD 2010/06/02
      //>>> ADD  2012/05/17 SCM障害№162対応
      // 終了ボタン使用可能
      b_CloseFlg := False;
      //<<< ADD  2012/05/17 SCM障害№162対応
    end;
  end;
end;

// 新規
// *************************************************************************
//Update Note: 2010/06/02 譚洪 PM.NS障害・改良対応（７月リリース案件）
//『Ｆ９新規』時に入力中の内容が初期状態に戻るがその時に検索モードも売上全体設定マスタ：「部品検索区分」の値に戻すように変更する。
//Update Note: 2011/08/08 許雁波 連番1002
procedure TForm4.xNew;
var
keepDate : Boolean;
maxLength : Integer;
cursorPos : Integer;    // ADD 連番1002 2011/08/08
acptAnOdrStatusMemory : Integer;   // ADD 2014/02/24 Wakita
begin
  copyLogicRow := 0;     // ADD 2010/08/13
  logicalRowInt := 0;     // ADD 2010/08/13
  strCarMngCode := '';   // ADD 2011/08/04

  if (salesTtlSt.SlipDateClrDivCd = 1) then
  begin
     keepDate := True;
  end
  else
  begin
     keepDate := False;
  end;

  // ADD 2010/08/25 ---->>>>
    // 小数点表示区分しないの場合、
    if (salesTtlSt.DwnPLCdSpDivCd = 0) then
    begin
        smallPointFlg := False;
    end
    // 小数点表示区分するの場合、
    else
    begin
        smallPointFlg := True;
    end;
    // ADD 2010/08/25 ----<<<<

    // --- ADD 2014/02/24 Wakita ---------->>>>>
    gpxMAHNB01013B_GetSalesSlipInputConstructionData(acptAnOdrStatusMemory, 10);
    // --- ADD 2014/02/24 Wakita ----------<<<<<

    // --- ADD 2014/03/05 Wakita ---------->>>>>
    xClear(True, True, keepDate, False, False, True, False, 0);

    // ユーザー設定「伝票種別の記憶：しない」の場合
    if (acptAnOdrStatusMemory = 1) then
    begin
      if (bClearResultFlg) then // ADD 2014/03/20 Wakita
       //伝票種別  →　30:売上
       AcptAnOdrStatusDisplayComBo.SelCode := acptAnOdrStatusState_Sales;
    end;
    // --- ADD 2014/03/05 Wakita ----------<<<<<

    // --- UPD 2013/04/26 Wakita ---------->>>>>
//    // --- UPD 2013/04/22 Wakita ---------->>>>>
////    // ----- UPD 2010/05/21 ------------>>>>>
////    //xClear(True, True, keepDate, False, False);
////    //xClear(True, True, keepDate, False, False, True);
////    //xClear(True, True, keepDate, False, False, True, False); //ADD 2010/06/02
////    // ----- UPD 2010/05/21 ------------>>>>>
////    xClear(True, True, keepDate, False, False, True, False, 0);
//    xClear(True, False, keepDate, False, False, True, False, 0);
//    // --- UPD 2013/04/22 Wakita ----------<<<<<
//    xClear(True, True, keepDate, False, False, True, False, 0); // DEL 2014/02/24 Wakita
    // --- UPD 2013/04/26 Wakita ----------<<<<<
    //<<<2010/05/30

  // --- DEL 2014/03/05 Wakita ---------->>>>>
//  // --- ADD 2014/02/24 Wakita ---------->>>>>
//  if (acptAnOdrStatusMemory = 0) then
//  begin
//      xClear(True, True, keepDate, False, False, True, False, 0);
//  end
//  else
//  begin
//      xClear(True, False, keepDate, False, False, True, False, 0);
//  end;
//  // --- ADD 2014/02/24 Wakita ----------<<<<<
  // --- DEL 2014/03/05 Wakita ----------<<<<<

  // ADD 2010/07/19 --- >>>>
  if (CustomerCode.GetInt() = 0) then
  begin
    TotalDay.Caption := '';
    CollectMoney.Caption := '';
  end;
  // ADD 2010/07/19 --- <<<<

  if (bClearResultFlg) then
  begin

    InitialSetFocusTick();

    xSettingAddUpButtonToolEnabled(nil);
    //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
    SettingToolBarButtonEnabled(nil); // ADD 2011/12/21 tianjw Redmine#27290

    // --- UPD 2010/05/31 ---------->>>>>
    //xSetDisplayDetailInfo();
    xSetDisplayDetailInfo(HNsGrid1.LogicalRow);

    // --- UPD 2010/05/31 ----------<<<<<

    // --- ADD 2010/06/02 ---------->>>>>
    gpxMAHNB01013B_GetSalesSlipInputConstructionData(cursorPos, 8);   // ADD 連番1002 2011/08/08
    // --- UPD 2013/04/23 Wakita ---------->>>>>
//    //--- UPD licb 2013/03/08 Redmine#34831 ------>>>>>
//    //if cursorPos = 1 then begin              // ADD 連番1002 2011/08/08
//    if cursorPos = 0 then begin
//    //--- UPD licb 2013/03/08 Redmine#34831 ------<<<<<
    if cursorPos = 1 then begin
    // --- UPD 2013/04/23 Wakita ----------<<<<<
    if (salesTtlSt.PartsSearchDivCd = 0) then
    begin
       if (i_searchPartsMode <> 1) then
       begin
         xChangeSearchMode(1);
       end;
    end
    else
    begin
       if (i_searchPartsMode <> 2) then
       begin
         xChangeSearchMode(1);
       end;
    end;
    end;                                   // ADD 連番1002 2011/08/08
    // --- ADD 2010/06/02 ----------<<<<<
//>>>2010/08/06
//    // --- ADD 2010/06/02 ---------->>>>>
//    if (CustomerCode.DataText = '') then
//    begin
//      SalesEmployeeCd.DataText := '';
//      SalesEmployeeNm.DataText := '';
//    end;
//    // --- ADD 2010/06/02 ----------<<<<<
//<<<2010/08/06

    gpxMAHNB01013B_GetSalesSlipInputConstructionData(maxLength,5);
    i_RowMaxCount := maxLength;
    HNsGrid1.LogicalRowCount := i_RowMaxCount + 1;

    xSalesDetailRowInitialSetting(i_RowMaxCount);

    xSettingGrid;
    // ----------- ADD 連番729 2011/08/18 ------------->>>>>
    if Form4.ActiveControl <> HNsGrid1 then begin
      detailCopyButton.Enabled := False;
      toolMenu_detailCopyBtn.Enabled := False;
      // --- DEL  30757 佐々木　貴英 K2015/10/05 ----------------->>>>>
      //// ---- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 -------->>>>>
      //UOEDataGet.Enabled := False;
      //toolMenu_UOEDataGet.Enabled := False;
      //// ---- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 --------<<<<<
      // --- DEL  30757 佐々木　貴英 K2015/10/05 -----------------<<<<<
      // ---- ADD  黄興貴 K2015/04/29 回答取込パタン追加 -------->>>>>
      // --- ADD  譚洪 2015/10/26 Redmine#47609 ---------->>>>>
      if(isOptPermitForFuJi)then
      begin
      // --- ADD  譚洪 2015/10/26 Redmine#47609 ----------<<<<<
      UOEDataGet.Enabled := False;
      toolMenu_UOEDataGet.Enabled := False;
      end; // ADD  譚洪 2015/10/26 Redmine#47609
      // ---- ADD  黄興貴 K2015/04/29 回答取込パタン追加 --------<<<<<
    end;
    // ----------- ADD 連番729 2011/08/18 -------------<<<<<

  end;
end;

// --- ADD 2010/05/31 ---------->>>>>
// *************************************************************************
// 新規
// *************************************************************************
// --- UPD 2012/05/31 No.282---------->>>>>
//procedure TForm4.xdoEsc();
procedure TForm4.xdoEsc(Sender: TObject);
// --- UPD 2012/05/31 No.282----------<<<<<
var
//escFlg: Boolean;// DEL 2011/02/11
escFlg, isErrorFlag: Boolean;// ADD 2011/02/11
begin
  // --- ADD 2012/05/31 No.282---------->>>>>
  // 発注モード
  if ((Form4.ActiveControl = HNsGrid1) and (i_InputType = 3)) then
  begin
      // 発注解除メッセージ
      gpxMAHNB01013B_uButtonEscClick2(escFlg);
      if (escFlg) then
      begin
        // 画面発注情報を戻す
        BitBtn_InputOrderInfoEsc(Sender);
      end;
      // 処理を抜ける
      Exit;
  end;
  // --- ADD 2012/05/31 No.282----------<<<<<
   // ---ADD 2011/02/11--------------->>>>
   gpxMAHNB01013B_GetErrorFlag(isErrorFlag);
   if isErrorFlag then
   begin
     gpxMAHNB01013B_uButtonEscClick(escFlg);

     if (escFlg) then
     begin
        Close;
     end
     else
     begin
       Exit;
     end;
   end;
   // ---ADD 2011/02/11---------------<<<<
   // UPD 2010/08/13 ---->>>>
   if (Form4.ActiveControl <> HNsGrid1 ) then
   begin

     gpxMAHNB01013B_uButtonEscClick(escFlg);

     if (escFlg) then
     begin
        Close;
     end;

   end
   else
   begin
      xNew();
   end;
   // UPD 2010/08/13 ----<<<<
end;
// --- ADD 2010/05/31 ----------<<<<<

// *************************************************************************
// 切り取り
// *************************************************************************
procedure TForm4.xCut();
var  salesDetailArray: TSalesSlipInputCustomArrayA2;
begin
   gpxMAHNB01013B_DoAddLine(27,0,0); // ADD 2011/02/11

   // ---ADD 2011/04/13--------------->>>>>
   //>>>2011/05/24
   //CustomerClaimConfirmationBtn.SetFocus;
   SalesEmployeeCdBtn.SetFocus;
   //<<<2011/05/24
   HNsGrid1.SetFocus;
   // ---ADD 2011/04/13---------------<<<<<

   gpxMAHNB01013B_DeatilActionTable(iLogicalRow_Mouse,'CUT');

   gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, iLogicalRow_Mouse);
   xSetDetailRowFormC(salesDetailArray, iLogicalRow_Mouse);
   xSettingGrid;

   copyLogicRow := iLogicalRow_Mouse;
end;

procedure TForm4.xWrite(tempStr : string);
var
//mytime: TDateTime;
caption: string;
begin

  AssignFile(F,FileName);

  Append(F);
//  mytime:=Now;
  caption:=FormatDateTime('yyyy-mm-dd   hh:mm:ss   zzz',now) + '-----------' + tempStr;

  Writeln(F, caption);

  CloseFile(F);
end;


// *************************************************************************
// コピー
// *************************************************************************
procedure TForm4.SetDisplayHeaderFooterInfo(salesSlip: TSalesSlip);
var
  tDate      : TDateTime;
  name : WideString;
begin
    //売上情報
    //拠点
    SectionCode.DataText := Trim(salesSlip.ResultsAddUpSecCd);
    //拠点名称
    if Trim(salesSlip.ResultsAddUpSecNm) = '' then
    begin
      gpxMAHNB01012B_GetSectionNm(SectionCode.DataText, name);
      SectionName.DataText := name;
    end else
    begin
      SectionName.DataText := Trim(salesSlip.ResultsAddUpSecNm);
    end;
    //部門
    SubSectionCode.DataText := IntToStr(salesSlip.SubSectionCode);
    //部門名称
    if Trim(salesSlip.SubSectionName) = '' then
    begin
      gpxMAHNB01012B_GetNameFromSubSection(SubSectionCode.GetInt(), name);
      if name = '' then
      begin
        SubSectionCode.SetInt(0);
        SubSectionName.DataText := '';
      end else
      begin
        SubSectionName.DataText := Trim(name);
      end;
    end else
    begin
      SubSectionName.DataText := Trim(salesSlip.SubSectionName);
    end;

    //伝票番号
    if (salesSlip.SalesSlipNum <> '000000000') then
    begin
      //SalesSlipNum.DataText := Trim(salesSlip.SalesSlipNum); //DEL 2011/07/19
      //-----ADD START 2011/07/19----------->>>>
      if salesSlip_disp.InputMode <> ctINPUTMODE_SalesSlip_ReadOnly then
      begin
         SalesSlipNum.DataText := Trim(salesSlip.SalesSlipNum);
      end;
      //-----ADD END 2011/07/19-----------<<<<
    end
    else
    begin
      SalesSlipNum.DataText := '';
    end;

    //担当者
    SalesEmployeeCd.DataText := Trim(salesSlip.SalesEmployeeCd);
    //担当者名称
    SalesEmployeeNm.DataText := salesSlip.SalesEmployeeNm;
    //受注者
    FrontEmployeeCd.DataText := Trim(salesSlip.FrontEmployeeCd);
    //受注者名称
    FrontEmployeeNm.DataText := salesSlip.FrontEmployeeNm;
    //発行者
    SalesInputCode.DataText := Trim(salesSlip.SalesInputCode);
    //発行者名称
    SalesInputName.DataText := Trim(salesSlip.SalesInputName);
    //得意先
    if salesSlip.CustomerCode <> 0 then
    begin
      CustomerCode.DataText := IntToStr(salesSlip.CustomerCode);
    end else
    begin
      CustomerCode.DataText := '';
    end;
    //得意先名称
    CustomerName.DataText := salesSlip.CustomerSnm;


    //納入先
    if salesSlip.AddresseeCode <> 0 then
    begin
      AddresseeCode.DataText := IntToStr(salesSlip.AddresseeCode);
    end else
    begin
      AddresseeCode.DataText := '';
    end;
    //納入先名称
    AddresseeName.DataText := salesSlip.AddresseeName + salesSlip.AddresseeName2;
    //売上形式(表示用)
    AcptAnOdrStatusDisplayComBo.SelCode := salesSlip.AcptAnOdrStatusDisplay;
    //売上形式
    AcptAnOdrStatusComBo.SelCode := salesSlip.AcptAnOdrStatus;
    //伝票区分(表示用)
    SalesSlipDisplayComBo.SelCode := salesSlip.SalesSlipDisplay;
    //商品区分
    SalesGoodsCdComBo.SelCode := salesSlip.SalesGoodsCd;
    //納品区分
    DeliveredGoodsDivComBo.SelCode := salesSlip.DeliveredGoodsDiv;

    //入力日
    tDate := TicksToTDateTime(salesSlip.SalesDate);
    SalesDate.SetDate(StrToInt(FormatDateTime('yyyy', tDate)),
    StrToInt(FormatDateTime('mm', tDate)),
    StrToInt(FormatDateTime('dd', tDate)));
//    SalesDate.Date :=  tDate;
    //売上日
    tDate := TicksToTDateTime(salesSlip.SearchSlipDate);
//    SalesDate.Date :=  tDate;
    SearchSlipDate.SetDate(StrToInt(FormatDateTime('yyyy', tDate)),
    StrToInt(FormatDateTime('mm', tDate)),
    StrToInt(FormatDateTime('dd', tDate)));

    //得意先注番
    PartySaleSlipNum.DataText := salesSlip.PartySaleSlipNum;
    // --- UPD 2012/09/12 Wakita ---------->>>>>
    ////備考１
    //SlipNote.DataText := salesSlip.SlipNote;
    ////備考２
    //SlipNote2.DataText := salesSlip.SlipNote2;
    ////備考３
    //SlipNote3.DataText := salesSlip.SlipNote3;
    //
    ////----ADD 20011/08/30----->>>>>
    //beSlipNote := salesSlip.SlipNote;
    //beSlipNote2 := salesSlip.SlipNote2;
    //beSlipNote3 := salesSlip.SlipNote3;
    ////----ADD 20011/08/30-----<<<<<
    //備考１
    SlipNote.DataText := TrimRight(salesSlip.SlipNote);
    //備考２
    SlipNote2.DataText := TrimRight(salesSlip.SlipNote2);
    //備考３
    SlipNote3.DataText := TrimRight(salesSlip.SlipNote3);

    beSlipNote := TrimRight(salesSlip.SlipNote);
    beSlipNote2 := TrimRight(salesSlip.SlipNote2);
    beSlipNote3 := TrimRight(salesSlip.SlipNote3);
    // --- UPD 2012/09/12 Wakita ----------<<<<<

    //備考１コード
    SlipNoteCode.DataText := IntToStr(salesSlip.SlipNoteCode);
    //備考２コード
    SlipNote2Code.DataText := IntToStr(salesSlip.SlipNote2Code);
    //備考３コード
    SlipNote3Code.DataText := IntToStr(salesSlip.SlipNote3Code);
    //返品理由
    RetGoodsReason.DataText := salesSlip.RetGoodsReason;
    //入力モード
    pnl_InputModeTitle.Caption := inputModeTitle;

    //>>>2010/05/30
    //>>>2010/06/26
    if salesSlip.InquiryNumber <> 0 then
    begin
         HEdit_InquiryNumber.DataText := IntToStr(salesSlip.InquiryNumber);
    end;
    //HEdit_InquiryNumber.DataText := IntToStr(salesSlip.InquiryNumber);
    //>>>2010/06/26
    //<<<2010/05/30

    //>>>2011/05/25
    HEdit_PartySalesSlipNum.DataText := salesSlip.PartySaleSlipNum;
    //<<<2011/05/25

    //伝票区分が返品の場合は返品理由を表示する＆金額文字色設定
    if (salesSlip.SalesSlipCd = 1) then
    begin
      pnl46.Visible := True;
      salesPriceTotal.Font.Color := clRed;
      salesPriceConsTaxTotal.Font.Color := clRed;
      totalGrossProfit.Font.Color := clRed;
      totalCost.Font.Color := clRed;
      totalPrice.Font.Color := clRed;
      detailGrossProfitRate.Font.Color := clRed;
      totalGrossProfitRate.Font.Color := clRed;
      addSalesPriceTotal.Font.Color := clRed;
      addSalesPriceConsTaxTotal.Font.Color := clRed;
      addTotalGrossProfit.Font.Color := clRed;
      addTotalCost.Font.Color := clRed;
      addTotalPrice.Font.Color := clRed;
      addDetailGrossProfitRate.Font.Color := clRed;
      addTotalGrossProfitRate.Font.Color := clRed;
      // --- ADD 2012/08/21 Wakita ---------->>>>>
      pnl41.Width := 290;
      SlipNote.Width := 168;
      SlipNoteCodeBtn.Left := 262;
      pnl_AddresseeCode.Top := 2;
      pnl_DeliveredGoodsDiv.Top := 25;
      AddresseeConfirmationBtn.Top := 25;
      // --- ADD 2012/08/21 Wakita ----------<<<<<
    end
    else
    begin
      pnl46.Visible := False;
      salesPriceTotal.Font.Color := clBlack;
      salesPriceConsTaxTotal.Font.Color := clBlack;
      totalGrossProfit.Font.Color := clBlack;
      totalCost.Font.Color := clBlack;
      totalPrice.Font.Color := clBlack;
      detailGrossProfitRate.Font.Color := clBlack;
      totalGrossProfitRate.Font.Color := clBlack;
      addSalesPriceTotal.Font.Color := clBlack;
      addSalesPriceConsTaxTotal.Font.Color := clBlack;
      addTotalGrossProfit.Font.Color := clBlack;
      addTotalCost.Font.Color := clBlack;
      addTotalPrice.Font.Color := clBlack;
      addDetailGrossProfitRate.Font.Color := clBlack;
      addTotalGrossProfitRate.Font.Color := clBlack;
      // --- ADD 2012/08/21 Wakita ---------->>>>>
      pnl41.Width := 450;
      SlipNote.Width := 328;
      SlipNoteCodeBtn.Left := 422;
      pnl_AddresseeCode.Top := 25;
      pnl_DeliveredGoodsDiv.Top := 48;
      AddresseeConfirmationBtn.Top := 48;
      // --- ADD 2012/08/21 Wakita ----------<<<<<
    end;
    //伝票種別タイトルの再表示
    case salesSlip.AcptAnOdrStatusDisplay of
    //見積
    10:
    begin
      pnl_AcptAnOdrStatusTitle.Caption := '見積';
      pnl_AcptAnOdrStatusTitle.Color := RGB(255,128,0);
    end;
    15:
    begin
      pnl_AcptAnOdrStatusTitle.Caption := '単価見積';
      pnl_AcptAnOdrStatusTitle.Color := RGB(255,178,5);
    end;
    30:
    begin
      pnl_AcptAnOdrStatusTitle.Caption := '売上';
      pnl_AcptAnOdrStatusTitle.Color := RGB(96,142,232);
    end;
    40:
    begin
      pnl_AcptAnOdrStatusTitle.Caption := '貸出';
      pnl_AcptAnOdrStatusTitle.Color := RGB(0,192,192);
    end;
    // --- DEL 2013/04/18 T.Nishi ---------->>>>>
    //// ADD 2013/02/05 T.Miyamoto ------------------------------>>>>>
    //20:
    //begin
    //  pnl_AcptAnOdrStatusTitle.Caption := '受注';
    //  pnl_AcptAnOdrStatusTitle.Color := RGB(255,96,96);
    //end;
    //// ADD 2013/02/05 T.Miyamoto ------------------------------<<<<<
    // --- DEL 2013/04/18 T.Nishi ----------<<<<<
    end;
    //画面項目Enabled設定

    uTabControl_Footer.Enabled := True;
    xEnableControl(SectionCode, True);
    SectionCode.Color := $00D0C895;
    SectionCodeBtn.Enabled := True;
    xEnableControl(SubSectionCode, True);
    SubSectionCodeBtn.Enabled := True;
    xEnableControl(CustomerCode, True);
    CustomerCode.Color := $00D0C895;
    CustomerCodeBtn.Enabled := True;
    CustomerClaimConfirmationBtn.Enabled := True;
    xEnableControl(SalesEmployeeCd, True);
    SalesEmployeeCd.Color := $00D0C895;
    SalesEmployeeCdBtn.Enabled := True;
    xEnableControl(FrontEmployeeCd, True);
    FrontEmployeeCdBtn.Enabled := True;
    xEnableControl(SalesInputCode, True);
    SalesInputCodeBtn.Enabled := True;
    xEnableControl(SalesSlipNum, True);
    SalesSlipNumBtn.Enabled := True;
    //AcptAnOdrStatusDisplayComBo.Enabled := True;
    xEnableControl(pnl9, True);
    AcptAnOdrStatusDisplayComBo.Color := $00D0C895;
    //SalesSlipDisplayComBo.Enabled := True;
    xEnableControl(pnl10, True);
    SalesSlipDisplayComBo.Color := $00D0C895;
    SalesDate.Enabled := True;
    // --- DEL 2010/06/02 ---------->>>>>
//    xEnableControl(carMngNo, True);
//    xEnableControl(ModelDesignationNo, True);
//    xEnableControl(CategoryNo, True);
//    xEnableControl(CarMngCode, True);
    xEnableControl(CarMngCodeBtn, True);
//    xEnableControl(EngineModelNm, True);
//    xEnableControl(FullModel, True);
//    xEnableControl(pnl23, True);
//    xEnableControl(MakerCode, True);
//    xEnableControl(ModelCode, True);
//    xEnableControl(ModelSubCode, True);
//    xEnableControl(ModelFullName, True);
//    xEnableControl(ModelFullNameBtn, True);
//    xEnableControl(FirstEntryDate, True);
//    xEnableControl(ProduceFrameNo, True);
//    xEnableControl(ColorNo, True);
//    xEnableControl(TrimNo, True);
//    HNsGrid5.Enabled := True;
//    ExpandableGroupBox.Enabled := False;
    // --- DEL 2010/06/02 ---------->>>>>
    pnl_DisableInfo.Enabled := True;
    xEnableControl(SlipNoteCode, True);
    xEnableControl(SlipNote, True);
    SlipNoteCodeBtn.Enabled := True;
    xEnableControl(SlipNote2Code, True);
    xEnableControl(SlipNote2, True);
    SlipNote2CodeBtn.Enabled := True;
    xEnableControl(SlipNote3Code, True);
    xEnableControl(SlipNote3, True);
    SlipNote3CodeBtn.Enabled := True;
    pnl_AddresseeCode.Enabled := True;
    AddresseeCode.Enabled := True;
    AddresseeName.Enabled := True;
    AddresseeCodeBtn.Enabled := True;
    xEnableControl(DeliveredGoodsDivComBo, True);
    DeliveredGoodsDivComBo.Color := $00D0C895;
    AddresseeConfirmationBtn.Enabled := True;
    xEnableControl(RetGoodsReason, True);
    RetGoodsReasonBtn.Enabled := True;
    PartySaleSlipNum.Enabled := True;
    xEnableControl(Mileage, True);
    HNsGrid1.Enabled := True;
    GroupBox1.Enabled := True;
//    btnCopyToRC.Enabled := False;        // RCへコピー   2010/06/15 Add    2010/06/26 DEL

    //xCarInfoFormSettingForColor(True);

    // 入力モードが「参照モード」の場合は、全て入力不可とする
    // 入力モードが「締済みモード」の場合は、赤伝以外入力不可とする
    if ((salesSlip.InputMode = 6) or (salesSlip.InputMode = 7)) then
    begin
      uTabControl_Footer.Enabled := False;
      xEnableControl(SectionCode, False);
      SectionCodeBtn.Enabled := False;
      xEnableControl(SubSectionCode, False);
      SubSectionCodeBtn.Enabled := False;
      xEnableControl(CustomerCode, False);
      CustomerCodeBtn.Enabled := False;
      CustomerClaimConfirmationBtn.Enabled := False;
      SalesEmployeeCd.Enabled := False;
      SalesEmployeeCdBtn.Enabled := False;
      FrontEmployeeCd.Enabled := False;
      FrontEmployeeCdBtn.Enabled := False;
      SalesInputCode.Enabled := False;
      SalesInputCodeBtn.Enabled := False;
      // --- DELL 2012/05/24 No.849 ---------->>>>>
//      //xEnableControl(SalesSlipNum, False);   //DEL 2011/07/19
//      //-----ADD START 2011/07/19------>>>>
//      if salesSlip.InputMode <> ctINPUTMODE_SalesSlip_ReadOnly then
//      begin
//         xEnableControl(SalesSlipNum, False);
//      end;
//      //-----ADD END 2011/07/19------<<<<
      // --- DEL 2012/05/24 No.849 ----------<<<<<

//      SalesSlipNumBtn.Enabled := False;
      xEnableControl(pnl9, False);
      AcptAnOdrStatusDisplayComBo.Color := clBtnFace;
      xEnableControl(pnl10, False);
      SalesSlipDisplayComBo.Color := clBtnFace;
      SalesDate.Enabled := False;
      SlipNoteCode.Enabled := False;
      SlipNote.Enabled := False;
      SlipNoteCodeBtn.Enabled := False;
      SlipNote2Code.Enabled := False;
      SlipNote2.Enabled := False;
      SlipNote2CodeBtn.Enabled := False;
      SlipNote3Code.Enabled := False;
      SlipNote3.Enabled := False;
      SlipNote3CodeBtn.Enabled := False;
      AddresseeCode.Enabled := False;
      AddresseeName.Enabled := False;
      AddresseeCodeBtn.Enabled := False;
      DeliveredGoodsDivComBo.Enabled := False;
      AddresseeConfirmationBtn.Enabled := False;
      btnCopyToRC.Enabled := False;        // RCへコピー   2010/06/15 Add
      //----- ADD　2018/09/04 譚洪　履歴自動表示の対応------->>>>>
      HisSearchButton.Enabled := False;
      toolHisSearchButton.Enabled := False;
      //----- ADD　2018/09/04 譚洪　履歴自動表示の対応-------<<<<<

      //-----ADD START 2011/07/19------>>>>
      if salesSlip.InputMode = ctINPUTMODE_SalesSlip_ReadOnly then
      begin
        xEnableControl(carMngNo, False);
        xEnableControl(ModelDesignationNo, False);
        xEnableControl(CategoryNo, False);
        xEnableControl(CarMngCode, False);
        xEnableControl(EngineModelNm, False);
        xEnableControl(FullModel, False);
        xEnableControl(pnl23, False);
        xEnableControl(MakerCode, False);
        xEnableControl(ModelCode, False);
        xEnableControl(ModelSubCode, False);
        xEnableControl(ModelFullName, False);
        xEnableControl(ModelFullNameBtn, False);
        xEnableControl(FirstEntryDate, False);
        xEnableControl(ProduceFrameNo, False);
        xEnableControl(ColorNo, False);
        xEnableControl(TrimNo, False);
        HNsGrid5.Enabled := False;
        ExpandableGroupBox.Enabled := False;
      end;
      //-----ADD END 2011/07/19------<<<<
    end
    // 入力モードが「返品入力モード」
    else if (salesSlip.InputMode = 1) then
    begin
      xEnableControl(SectionCode, False);
      SectionCodeBtn.Enabled := False;
      xEnableControl(SubSectionCode, False);
      SubSectionCodeBtn.Enabled := False;
      xEnableControl(pnl9, False);
      AcptAnOdrStatusDisplayComBo.Color := clBtnFace;
      xEnableControl(pnl10, False);
      SalesSlipDisplayComBo.Color := clBtnFace;
      CustomerCode.ReadOnly := True;
      CustomerCodeBtn.Enabled := False;
      CustomerClaimConfirmationBtn.Enabled := False;
      AddresseeCode.Enabled := False;
      AddresseeName.Enabled := False;
      AddresseeCodeBtn.Enabled := False;
      CustomerClaimConfirmationBtn.Enabled := False;
      AddresseeConfirmationBtn.Enabled := False;
      btnCopyToRC.Enabled := False;        // RCへコピー   2010/06/15 Add
      xEnableControl(Mileage, False);

      if (salesTtlSt.SlipChngDivDate = 1) then
      begin
        SalesDate.Enabled := False;
      end;
    end
    // 入力モードが「赤伝入力モード」
    else if (salesSlip.InputMode = 2) then
    begin
      xEnableControl(SectionCode, False);
      SectionCodeBtn.Enabled := False;
      xEnableControl(SubSectionCode, False);
      SubSectionCodeBtn.Enabled := False;
      xEnableControl(pnl9, False);
      AcptAnOdrStatusDisplayComBo.Color := clBtnFace;
      xEnableControl(pnl10, False);
      SalesSlipDisplayComBo.Color := clBtnFace;
      xEnableControl(CustomerCode, False);
      CustomerCodeBtn.Enabled := False;
      CustomerClaimConfirmationBtn.Enabled := False;
      AddresseeCode.Enabled := False;
      AddresseeName.Enabled := False;
      AddresseeCodeBtn.Enabled := False;
      CustomerClaimConfirmationBtn.Enabled := False;
      AddresseeConfirmationBtn.Enabled := False;
      HNsGrid1.Enabled := False;

      // panel15のブタンのEnabledを設定する
      BitBtn_Action.Enabled := False; //操作
      btnInputChange.Enabled := False; // 入力切替
      btnInputStockInfo.Enabled := False; // 仕入入力
      btnInputOrderInfo.Enabled := False; // 発注入力
      btnLineDiscount.Enabled := False; // 行値引
      btnGoodsDiscount.Enabled := False; // 商品値引
      btnAnnotation.Enabled := False; // 注釈
      btnChangeCarInfo.Enabled := False; // 車種変更
      btnStockSearch.Enabled := False; // 在庫検索
      btnChangeWarehouse.Enabled := False; // 倉庫切替
      btnTBO.Enabled := False; // TBO
      btnCopyToRC.Enabled := False;        // RCへコピー   2010/06/15 Add
      //----- ADD　2018/09/04 譚洪　履歴自動表示の対応------->>>>>
      HisSearchButton.Enabled := False;
      toolHisSearchButton.Enabled := False;
      //----- ADD　2018/09/04 譚洪　履歴自動表示の対応-------<<<<<
      GroupBox1.Enabled := False;
      xEnableControl(Mileage, False);
      if (salesTtlSt.SlipChngDivDate = 1) then
      begin
        SalesDate.Enabled := False;
      end;
    end
    // 入力モード「（見積計上）」
    // 入力モード（出荷計上）
    // 入力モード（受注計上）
    else if ((salesSlip.InputMode = 3) or (salesSlip.InputMode = 4)
              or (salesSlip.InputMode = 5)) then
    begin
      xEnableControl(pnl9, False);
      AcptAnOdrStatusDisplayComBo.Color := clBtnFace;
      xEnableControl(pnl10, False);
      SalesSlipDisplayComBo.Color := clBtnFace;
      xEnableControl(SectionCode, False);
      SectionCodeBtn.Enabled := False;
      xEnableControl(SubSectionCode, False);
      SubSectionCodeBtn.Enabled := False;
      xEnableControl(CustomerCode, False);
      xEnableControl(CustomerName, False);
      CustomerCodeBtn.Enabled := False;
      btnCopyToRC.Enabled := True;        // RCへコピー   2010/06/15 Add
      if (salesSlip.SalesSlipNum <> defaultSalesSlipNumDf) then
      begin
          if (salesTtlSt.SlipChngDivDate = 1) then
          begin
            SalesDate.Enabled := False;
          end;
      end;
    end
    else
    begin
      if (salesSlip.SalesSlipNum <> defaultSalesSlipNumDf) then
      begin
          xEnableControl(pnl9, False);
          AcptAnOdrStatusDisplayComBo.Color := clBtnFace;
          xEnableControl(pnl10, False);
          SalesSlipDisplayComBo.Color := clBtnFace;
          SalesGoodsCdComBo.Enabled := False;
          xEnableControl(SectionCode, False);
          SectionCodeBtn.Enabled := False;
          xEnableControl(SubSectionCode, False);
          SubSectionCodeBtn.Enabled := False;
          xEnableControl(CustomerCode, False);
          xEnableControl(CustomerName, False);
          CustomerCodeBtn.Enabled := False;

//          if (StrToInt(salesSlip_disp.SalesSlipNum) <> defaultSalesSlipNumDf) then
          if (salesSlip.SalesSlipNum <> defaultSalesSlipNumDf) then
          begin
              if (salesTtlSt.SlipChngDivDate = 1) then
              begin
                SalesDate.Enabled := False;
              end;
          end;
      end;
    end;

    case salesSlip.AcptAnOdrStatus of
    // 単価見積
    10, 15:
      begin
        pnl_SalesDate.Caption := '見積日';
        DeliveredGoodsDivComBo.Visible := False; // 納品区分
        pnl_DeliveredGoodsDiv.Visible := False;  // 納品区分ラベル
        AddresseeConfirmationBtn.Enabled := False;
        AddresseeCode.Enabled := False;
        AddresseeName.Enabled := False;
        AddresseeCodeBtn.Enabled := False;
        pnl_AddresseeCode.Enabled := False;
        CustomerClaimConfirmationBtn.Enabled := False;
        pnl_PartySaleSlipNum.Enabled := False;
        PartySaleSlipNum.Enabled := False;
      end;
    // 売上
    30:
      begin
        pnl_SalesDate.Caption := '売上日';
        DeliveredGoodsDivComBo.Visible := True;
        DeliveredGoodsDivComBo.Enabled := True;
        pnl_DeliveredGoodsDiv.Visible := True;
        pnl_DeliveredGoodsDiv.Enabled := True;
        pnl_PartySaleSlipNum.Enabled := True;
      end;
    // 貸出
    40:
      begin
        pnl_SalesDate.Caption := '売上日';
        DeliveredGoodsDivComBo.Visible := True;
        DeliveredGoodsDivComBo.Enabled := True;
        pnl_DeliveredGoodsDiv.Visible := True;
        pnl_DeliveredGoodsDiv.Enabled := True;
        CustomerClaimConfirmationBtn.Enabled := False;
        pnl_PartySaleSlipNum.Enabled := True;
      end;
    // --- DEL 2013/04/18 T.Nishi ---------->>>>>
    //// ADD 2013/02/05 T.Miyamoto ------------------------------>>>>>
    //// 受注
    //20:
    //  begin
    //    pnl_SalesDate.Caption := '受注日';
    //    DeliveredGoodsDivComBo.Visible := False; // 納品区分
    //    pnl_DeliveredGoodsDiv.Visible := False;  // 納品区分ラベル
    //    AddresseeConfirmationBtn.Enabled := False;
    //    AddresseeCode.Enabled := False;
    //    AddresseeName.Enabled := False;
    //    AddresseeCodeBtn.Enabled := False;
    //    pnl_AddresseeCode.Enabled := False;
    //    // UPD 2013/04/11 T.Miyamoto №26 ------------------------------>>>>>
    //    //CustomerClaimConfirmationBtn.Enabled := False;
    //    CustomerClaimConfirmationBtn.Enabled := True;
    //    // UPD 2013/04/11 T.Miyamoto №26 ------------------------------<<<<<
    //    pnl_PartySaleSlipNum.Enabled := False;
    //    PartySaleSlipNum.Enabled := False;
    //  end;
    //// ADD 2013/02/05 T.Miyamoto ------------------------------<<<<<
    // --- DEL 2013/04/18 T.Nishi ----------<<<<<
    end;

    //カラー・トリム・装備情報
  if ((HNsGrid2.RowCount > 1) and (HNsGrid2.Cells[1, 1] <> ''))
    or ((HNsGrid4.RowCount > 1) and (HNsGrid4.Cells[1, 1] <> ''))
    or ((HNsGrid3.RowCount > 1) and (HNsGrid3.Cells[1, 1] <> '')) then
    begin
       ExpandableGroupBox.Enabled := True;
    end
    else
    begin
       ExpandableGroupBox.Enabled := False;
    end;

    //売上全体設定マスタ「拠点表示区分」が「2:表示無し」の場合は拠点入力不可
    if (salesTtlSt.SectDspDivCd = 2) then
    begin
      SectionCode.Enabled := False;
      SectionCodeBtn.Enabled := False;
    end;

    //自社情報設定マスタで「部署管理区分」が「0:拠点」の場合は部門非表示
    if (companyInf.SecMngDiv = 0) then
    begin
      pnl_SubSection.Enabled := False;
    end;

    //既存修正時は、売上伝票番号入力不可
//    if (StrToInt(salesSlip_disp.SalesSlipNum) <> defaultSalesSlipNumDf) then
    if (salesSlip.SalesSlipNum <> defaultSalesSlipNumDf) then
    begin
      //xEnableControl(SalesSlipNum, False); //DEL 2011/07/19
      //----ADD START 2011/07/19------>>>>
      if salesSlip_disp.InputMode <> ctINPUTMODE_SalesSlip_ReadOnly then
      begin
         xEnableControl(SalesSlipNum, False);
        // --- ADD 2012/05/24 No.849 ---------->>>>>
        // 入力モードが「締済みモード」の場合
        if (salesSlip.InputMode = ctINPUTMODE_SalesSlip_AddUp) then
        begin
          xEnableControl(SalesSlipNum, True);	//伝票番号活性
        end;
        // --- ADD 2012/05/24 No.849 ----------<<<<<
      end;
      //----ADD END 2011/07/19------<<<<
    end;

    pnl_BeforeSalesSlipNum.Enabled := True;

    //セキュリティ対応
    if (operationCodeFlg = 11) then
    begin
      xEnableControl(SalesSlipNum, False);
      SalesSlipNumBtn.Enabled := False;
    end;

    //管理番号でガイドVisible設定
    if (CustomerCode.GetInt() <> 0) then
    begin
       case salesSlip.CarMngDivCd of
       0: CarMngCodeBtn.Enabled := False;
       //3: CarMngCodeBtn.Enabled := False; //DEL 2013/04/30 T.Miyamoto
       end;
    end;

    //車種名称 品番／ＢＬコード検索の切替に連動
    if (i_searchPartsMode = ctBLCodeSearch) then
    begin
       xEnableControl(ModelFullName, False);
    end
    // ---ADD 2010/11/25 -------------->>>
    // 貸出計上、受注計上、見積計上の場合
    else if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ShipmentAddUp) or
    (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp) or
    (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp)) then
    begin
        xEnableControl(ModelFullName, False);
    end
    // 新規場合
    else if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum) and ModelFullNameBtn.Enabled then
    begin
        xEnableControl(ModelFullName, True);
    end
    // 既存修正の時は、車種名称入力不可
    else if ((salesSlip.SalesSlipNum <> '') and (salesSlip.SalesSlipNum <> defaultSalesSlipNumDf)) then
    begin
      xEnableControl(ModelFullName, False);
    end
    // ---ADD 2010/11/25 --------------<<<
    else
    Begin
       //xEnableControl(ModelFullName, True); // DEL 2010/11/25
    end;

    // 車種コード、車種サブコード
    if (MakerCode.GetInt() = 0) then
    begin
      xEnableControl(ModelCode, False);
      xEnableControl(ModelSubCode, False);
    end
    else if (ModelCode.GetInt() = 0) then
    begin
      xEnableControl(ModelSubCode, False);
    end;

    //>>>2010/06/30
//    //>>>2010/05/30
//    if (salesSlip.OnlineKindDiv = 10) then
//    begin
//      panel_InquiryNumber.Visible := true;
//      btnscm.Enabled := true;
//    end else begin
//      panel_InquiryNumber.Visible := false;
//      btnscm.Enabled := false;
//    end;
//    //<<<2010/05/30

//>>>2010/07/15
//    if (gi_Opt_Scm = 1) then
//    begin
//    if (salesSlip.OnlineKindDiv = 10) then
//    begin
//      panel_InquiryNumber.Visible := true;
//      btnscm.Enabled := true;
//    end else begin
//      panel_InquiryNumber.Visible := false;
//      btnscm.Enabled := false;
//    end;
//      xSetReplyTransactionButtonEnable(); // ADD 2010/07/08
//    end;

    if (gi_Opt_Scm = 1) then begin
      if (salesSlip.OnlineKindDiv = 10) then begin
      panel_InquiryNumber.Visible := true;
      btnscm.Enabled := true;
//>>>2011/05/25
        pnl47.Visible := false;
        TotalDay.Visible := false;
        Label4.Visible := false;
        CollectMoney.Visible := false;
        Label6.Visible := false;
        HEdit_PartySalesSlipNum.Visible := true;
        Label_PartySalesSLipNum.Visible := true;
//<<<2011/05/25
      // ADD 2013/02/12 SCM障害№10280対応------------------------>>>>>
        pnl_PartySaleSlipNum.Visible := false;
      // ADD 2013/02/12 SCM障害№10280対応------------------------<<<<<
    end else begin
      panel_InquiryNumber.Visible := false;
      btnscm.Enabled := false;
//>>>2011/05/25
        pnl47.Visible := true;
        TotalDay.Visible := true;
        Label4.Visible := true;
        CollectMoney.Visible := true;
        Label6.Visible := true;
        HEdit_PartySalesSlipNum.Visible := false;
        Label_PartySalesSLipNum.Visible := false;
//<<<2011/05/25
      // ADD 2013/02/12 SCM障害№10280対応------------------------>>>>>
        // UPD 2013/02/25 2013/03/13配信 システムテスト障害対応 ---------------->>>>>
        //  pnl_PartySaleSlipNum.Visible := true;
        case salesSlip_disp.CustOrderNoDispDiv of
        0: //しない
          begin
            pnl_PartySaleSlipNum.Visible := false;
          end;
        1: //する
          begin
            pnl_PartySaleSlipNum.Visible := true;
          end;
        end;
        // UPD 2013/02/25 2013/03/13配信 システムテスト障害対応 ----------------<<<<<
      // ADD 2013/02/12 SCM障害№10280対応------------------------<<<<<
    end;
// 2011/01/31 Del >>>
//      xSetReplyTransactionButtonEnable(); // ADD 2010/07/08
// 2011/01/31 Del <<<
    end else begin
      panel_InquiryNumber.Visible := false;
      btnscm.Enabled := false;
//>>>2011/05/25
        pnl47.Visible := true;
        TotalDay.Visible := true;
        Label4.Visible := true;
        CollectMoney.Visible := true;
        Label6.Visible := true;
        HEdit_PartySalesSlipNum.Visible := false;
        Label_PartySalesSLipNum.Visible := false;
//<<<2011/05/25
    end;

//<<<2010/07/15

    //<<<2010/06/30

    //>>>2010/06/30
//    // --- ADD m.suzuki 2010/06/12 ---------->>>>>
//    // QRｺｰﾄﾞ作成ﾁｪｯｸﾎﾞｯｸｽの制御
//    if (salesSlip.AcptAnOdrStatusDisplay = 30) then
//    begin
//      checkBox_MakeQR.Visible := true;
//    end else begin
//      checkBox_MakeQR.Visible := false;
//    end;
//    // --- ADD m.suzuki 2010/06/12 ----------<<<<<

    // QRｺｰﾄﾞ作成ﾁｪｯｸﾎﾞｯｸｽの制御
    if (checkBox_MakeQR.Visible = true) then
    begin
    if (salesSlip.AcptAnOdrStatusDisplay = 30) then
    begin
        checkBox_MakeQR.Enabled := true
    end else begin
        checkBox_MakeQR.Enabled := false
      end;
    end;
    //<<<2010/06/30

    //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
    // ----- ADD 2011/12/21 tianjw Redmine#27290 ------------------>>>>>
    if Form4.ActiveControl = HNsGrid1 then
    begin
      SettingToolBarButtonEnabled(HNsGrid1);
    end
    else
    begin
      SettingToolBarButtonEnabled(nil);
    end;
    // ----- ADD 2011/12/21 tianjw Redmine#27290 ------------------<<<<<

    // --- ADD 2012/05/24 No.849 ---------->>>>>
    // 入力モードが「締済みモード」の場合
    if (salesSlip.InputMode = ctINPUTMODE_SalesSlip_AddUp) then
    begin
      btnInputChange.Enabled := True; // 入力切替
      btnInputStockInfo.Enabled := True; // 仕入
      btnInputOrderInfo.Enabled := True; // 発注
      btnCopyToRC.Enabled := False; // RCへコピー
    end;
    // --- ADD 2012/05/24 No.849 ----------<<<<<

end;

//procedure TForm4.SettingAddUpButtonToolEnabled();
//begin
//   //入力モード（読み取り専用）入力モード（締め済み）
//   if ((salesSlip_disp.InputMode = 6) or (salesSlip_disp.InputMode = 7)) then
//   begin
//     shipmentAddUpButton.Enabled := False;
//     acceptAnOrderAddUpButton.Enabled := False;
//     estimateAddUpButton.Enabled := False;
//   end
//   else
//   begin
//     gpxMAHNB01012B_GetSalesSlip(salesSlip_disp);
//     case (salesSlip_disp.AcptAnOdrStatusDisplay) of
//       //見積
//       10:
//       begin
//         shipmentAddUpButton.Enabled := False;
//         acceptAnOrderAddUpButton.Enabled := False;
//         estimateAddUpButton.Enabled := False;
//       end;
//       //単価見積
//       15:
//       begin
//         shipmentAddUpButton.Enabled := False;
//         acceptAnOrderAddUpButton.Enabled := False;
//         estimateAddUpButton.Enabled := False;
//       end;
//       //売上
//       30:
//       begin
//         shipmentAddUpButton.Enabled := True;
//         acceptAnOrderAddUpButton.Enabled := True;
//         estimateAddUpButton.Enabled := True;
//       end;
//       //貸出
//       40:
//       begin
//         shipmentAddUpButton.Enabled := False;
//         acceptAnOrderAddUpButton.Enabled := True;
//         estimateAddUpButton.Enabled := True;
//       end;
//     end;
//   end;
//end;
// *************************************************************************
// ツールバーボタン有効無効設定処理
// *************************************************************************
//procedure TForm4.SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
procedure TForm4.SettingToolBarButtonEnabled(NextCtrl: TWinControl); // ADD 2011/12/21 tianjw Redmine#27290
var
//isDataChanged : Boolean;// DEL 2011/02/11
isDataChanged, isErrorFlag : Boolean;// ADD 2011/02/11
begin
//   closeButton.Enabled := True;
//   newButton.Enabled := True;
//   saveButton.Enabled := True;
//   deleteSlipButton.Enabled := True;
//   returnButton.Enabled := True;
//   forwardButton.Enabled := True;
//   retryButton.Enabled := True;
//   searchCarChangeButton.Enabled := True;
//   //guideButton.Enabled := True;
//   shipmentAddUpButton.Enabled := True;
//   acceptAnOrderAddUpButton.Enabled := True;
//   estimateAddUpButton.Enabled := True;
//   updateButton.Enabled := True;
//   redSlipButton.Enabled := True;
//   returnSlipButton.Enabled := True;
//   copySlipButton.Enabled := True;
//   ReadSlipButton.Enabled := True;
//   SlipHeaderCopyButton.Enabled := True;
//   SetupButton.Enabled := True;
//   ReNewalbtn.Enabled := True;

   try    // 2011/01/31 Add
     //入力モード（読み取り専用）入力モード（締め済み）
     if ((salesSlip_disp.InputMode = 6) or (salesSlip_disp.InputMode = 7)) then
     begin
        saveButton.Enabled := False;
        retryButton.Enabled := False;
        toolRetryButton.Enabled := False;
        deleteSlipButton.Enabled := False;  //ADD 2011/07/19
  //      deleteSlipButton.Enabled := False; // 2010/09/28
        // ---UPD 2011/03/28------------>>>>>
        //deleteSlipButton.Enabled := True; // 2010/09/28
        // 月次／締次以前の伝票を修正呼出しすると、伝票削除ボタンが無効になる
        {-------DEL START 2011/07/19----->>>>
        if salesSlip_disp.InputMode = 6 then
        begin
          deleteSlipButton.Enabled := False;
        end
        else
        begin
          deleteSlipButton.Enabled := True;
        end;
        -------DEL END 2011/07/19----->>>>}
        // ---UPD 2011/03/28------------<<<<<
        redSlipButton.Enabled := False;
        toolRedSlipButton.Enabled := False;
        returnSlipButton.Enabled := False;
        toolReturnSlipButton.Enabled := False;
        shipmentAddUpButton.Enabled := False; // 貸出計上
        acceptAnOrderAddUpButton.Enabled := False; // 受注計上
        estimateAddUpButton.Enabled := False;
        updateButton.Enabled := False;
        dateUpdateBottun.Enabled := False;  //日付修正  //ADD 2011/08/02
        DateUpdatebtn.Enabled := False; //日付修正  // ADD 2011/08/02
        detailCopyButton.Enabled := False; // 明細貼付  // ADD 連番729 2011/08/18
        UOEDataGet.Enabled := False;// ADD  黄興貴 K2015/04/29 回答取込パタン追加
        // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
        discountAllLineBottun.Enabled := False; //一括値引
        toolMenu_discountAllLineBtn.Enabled := False; //一括値引
        // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
        // ----ADD　2018/09/04 譚洪　履歴自動表示の対応---- >>>>>
        HisSearchButton.Enabled := False;
        toolHisSearchButton.Enabled := False;
        // ----ADD　2018/09/04 譚洪　履歴自動表示の対応---- <<<<<
     end
     else
     begin
        gpxMAHNB01012B_SetGetIsDataChanged(2, isDataChanged);
        saveButton.Enabled := True;
        retryButton.Enabled := isDataChanged;
        toolRetryButton.Enabled := isDataChanged;
        redSlipButton.Enabled := True;
        // --- ADD 2013/02/18 Wakita ---------->>>>>
        if (b_redSlipVisible) then
        begin
        // --- ADD 2013/02/18 Wakita ----------<<<<<
        toolRedSlipButton.Enabled := True;
        returnSlipButton.Enabled := True;
        toolReturnSlipButton.Enabled := True;
        // --- ADD 2013/02/18 Wakita ---------->>>>>
        end
        else
        begin
        toolRedSlipButton.Enabled := False;
        returnSlipButton.Enabled := False;
        toolReturnSlipButton.Enabled := False;
        end;
        // --- ADD 2013/02/18 Wakita ----------<<<<<
        copySlipButton.Enabled := True; // 伝票複写
        toolCopySlipButton.Enabled := True;
        searchCarChangeButton.Enabled := True;
        dateUpdateBottun.Enabled := True;  //日付修正  //ADD 2011/08/02
        DateUpdatebtn.Enabled := True; //日付修正  // ADD 2011/08/02
        detailCopyButton.Enabled := True; // 明細貼付  // ADD 連番729 2011/08/18
        UOEDataGet.Enabled := True;// ADD  黄興貴 K2015/04/29 回答取込パタン追加
        // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
        discountAllLineBottun.Enabled := True; //一括値引
        toolMenu_discountAllLineBtn.Enabled := True; //一括値引
        // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
        // ----ADD　2018/09/04 譚洪　履歴自動表示の対応---- >>>>>
        HisSearchButton.Enabled := True;
        toolHisSearchButton.Enabled := True;
        // ----ADD　2018/09/04 譚洪　履歴自動表示の対応---- <<<<<
        if (salesSlip_disp.SalesSlipNum = defaultSalesSlipNumDf) then
        begin
           deleteSlipButton.Enabled := False;
           updateButton.Enabled := False;
        end
        else
        begin
           if (salesSlip_disp.DebitNoteDiv = 2) then
           begin
             deleteSlipButton.Enabled := False;
           end
           else
           begin
             deleteSlipButton.Enabled := True;
           end;
           updateButton.Enabled := True;
        end;

        if (i_searchPartsMode = 1) then
        begin
            //FullModelBtn.Enabled := True; // DEL 2010/11/25
            // ---ADD 2010/11/25 -------------->>>
            // 貸出計上、受注計上、見積計上の場合
            if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ShipmentAddUp) or
            (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp) or
            (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp)) then
            begin
                FullModelBtn.Enabled := False;
            end
            // 新規場合
            else if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum) and ModelFullNameBtn.Enabled then
            begin
                FullModelBtn.Enabled := True;
            end
            // 既存修正の時は、型式ボタン押下不可
            else if ((salesSlip.SalesSlipNum <> '') and (salesSlip.SalesSlipNum <> defaultSalesSlipNumDf)) then
            begin
                FullModelBtn.Enabled := False;
            end
            // ---ADD 2010/11/25 --------------<<<
        end
        else
        begin
           FullModelBtn.Enabled := False;
           if (i_searchCarMode = 2) then FullModelBtnClick(nil);
        end;
     end;

     //>>>2011/12/12
     if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Red) and
         (salesSlip_disp.SalesSlipNum <> ctDefaultSalesSlipNum)) then begin
       saveButton.Enabled := False;
       retryButton.Enabled := False;
       toolRetryButton.Enabled := False;
       redSlipButton.Enabled := False;
       toolRedSlipButton.Enabled := False;
       returnSlipButton.Enabled := False;
       toolReturnSlipButton.Enabled := False;
       shipmentAddUpButton.Enabled := False; // 貸出計上
       acceptAnOrderAddUpButton.Enabled := False; // 受注計上
       estimateAddUpButton.Enabled := False;
       updateButton.Enabled := False;
       dateUpdateBottun.Enabled := False;  //日付修正
       DateUpdatebtn.Enabled := False; //日付修正
       detailCopyButton.Enabled := False; // 明細貼付
       UOEDataGet.Enabled := False;// ADD  黄興貴 K2015/04/29 回答取込パタン追加
       copySlipButton.Enabled := False; // 伝票複写
       toolCopySlipButton.Enabled := False;
       // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
       discountAllLineBottun.Enabled := False; //一括値引
       toolMenu_discountAllLineBtn.Enabled := False; //一括値引
       // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
       // ----ADD　2018/09/04 譚洪　履歴自動表示の対応---- >>>>>
       HisSearchButton.Enabled := False;
       toolHisSearchButton.Enabled := False;
       // ----ADD　2018/09/04 譚洪　履歴自動表示の対応---- <<<<<
     end;
     //<<<2011/12/12
     // ----ADD　2018/09/04 譚洪　履歴自動表示の対応---- >>>>>
     if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Red) and
        (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum)) then begin
        HisSearchButton.Enabled := False;
        toolHisSearchButton.Enabled := False;
     end;
     // ----ADD　2018/09/04 譚洪　履歴自動表示の対応---- <<<<<

     // --- ADD m.suzuki 2010/06/16 ---------->>>>>
     if ( bOnlineFlag = False ) then
     begin
       //オフライン時は入力切り替え不可とする（品番検索固定）
       searchCarChangeButton.Enabled := False;
     end;
     // --- ADD m.suzuki 2010/06/16 ----------<<<<<
// 2011/01/31 >>>
  finally
    // ツールバーオプション側のボタンは、最後にEnabledをオリジナルからコピーする
    toolMenu_closeButton.Enabled := closeButton.Enabled;
    toolMenu_newButton.Enabled := newButton.Enabled;
    toolMenu_saveButton.Enabled := saveButton.Enabled;
    toolMenu_deleteSlipButton.Enabled := deleteSlipButton.Enabled;
    toolMenu_returnButton.Enabled := returnButton.Enabled;
    toolMenu_forwardButton.Enabled := forwardButton.Enabled;
    toolMenu_searchCarChangeButton.Enabled := searchCarChangeButton.Enabled;
    toolMenu_guideButton.Enabled := guideButton.Enabled;
    toolMenu_ReadSlipButton.Enabled := ReadSlipButton.Enabled;
    toolMenu_shipmentAddUpButton.Enabled := shipmentAddUpButton.Enabled;
    toolMenu_acceptAnOrderAddUpButton.Enabled := acceptAnOrderAddUpButton.Enabled;
    toolMenu_estimateAddUpButton.Enabled := estimateAddUpButton.Enabled;
    toolMenu_SlipHeaderCopyButton.Enabled := SlipHeaderCopyButton.Enabled;
    toolMenu_UpdateButton.Enabled := updateButton.Enabled;
    toolMenu_detailCopyBtn.Enabled := detailCopyButton.Enabled;   // ADD 連番729 2011/08/18
    toolMenu_UOEDataGet.Enabled := UOEDataGet.Enabled;// ADD  黄興貴 K2015/04/29 回答取込パタン追加
    toolMenu_allSecInfoBtn.Enabled := allSecInfoButton.Enabled // ADD K2015/04/01 高騁 森川部品個別依頼
  end;
// 2011/01/31 <<<

  // ----- ADD 2011/12/21 tianjw Redmine#27290 ------------------>>>>>
  if ((NextCtrl <> nil) and (NextCtrl.Name = 'HNsGrid1')) then
  begin
     dateUpdateBottun.Enabled := False;  //日付修正
     DateUpdatebtn.Enabled := False; //日付修正
     // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
     //値引モード
     if (discountAllLineflag) then
     begin
       copySlipButton.Enabled := False;  //伝票複写(P)
       toolCopySlipButton.Enabled := False;  //伝票複写(P)
       shipmentAddUpButton.Enabled := False; // 貸出計上(I)
       toolMenu_shipmentAddUpButton.Enabled := False;  // 貸出計上(I)
       acceptAnOrderAddUpButton.Enabled := False;// 受注計上(H)
       toolMenu_acceptAnOrderAddUpButton.Enabled := False; // 受注計上(H)
       estimateAddUpButton.Enabled := False; // 見積計上(Q)
       toolMenu_estimateAddUpButton.Enabled := False; // 見積計上(Q)
     end;
     // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
  end
  else
  begin
     dateUpdateBottun.Enabled := True;  //日付修正
     DateUpdatebtn.Enabled := True; //日付修正
     // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
     if (discountAllLineflag) then
     begin
       copySlipButton.Enabled := True;  //伝票複写(P)
       toolCopySlipButton.Enabled := True;  //伝票複写(P)
       shipmentAddUpButton.Enabled := True; // 貸出計上(I)
       toolMenu_shipmentAddUpButton.Enabled := True;  // 貸出計上(I)
       acceptAnOrderAddUpButton.Enabled := True;// 受注計上(H)
       toolMenu_acceptAnOrderAddUpButton.Enabled := True; // 受注計上(H)
       estimateAddUpButton.Enabled := True; // 見積計上(Q)
       toolMenu_estimateAddUpButton.Enabled := True; // 見積計上(Q)
     end;
     // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
  end;
  // ----- ADD 2011/12/21 tianjw Redmine#27290 ------------------<<<<<

end;



// *************************************************************************
// 貼り付け
// *************************************************************************
procedure TForm4.xPaste();
var
   salesDetailArray: TSalesSlipInputCustomArrayA2;
   st : Integer;
begin
   gpxMAHNB01013B_DoAddLine(24,0,0); // ADD 2011/02/11

   // ---ADD 2011/04/13--------------->>>>>
   //>>>2011/05/24
   //CustomerClaimConfirmationBtn.SetFocus;
   SalesEmployeeCdBtn.SetFocus;
   //<<<2011/05/24
   HNsGrid1.SetFocus;
   // ---ADD 2011/04/13---------------<<<<<

   st := gpxMAHNB01013B_DeatilActionTable(iLogicalRow_Mouse,'PASTE');

//   gpxMAHNB01012B_GetSalesDetailDataTable(salesDetailArray, HNsGrid1.LogicalRow);
//
//   xSetDetailRowFormC(salesDetailArray,HNsGrid1.LogicalRow);

      gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

      xSetDetailRowFormC(salesDetailArray,-1);

   if (st = 0) then
   begin
     //明細グリッドセル設定処理
      xSettingGrid;

      copyLogicRow := 0;

      xSalesPriceChanged;// ADD 2013/04/16 T.Miyamoto
   end;
   xAllSecStockInfoProc(HNsGrid1.LogicalRow, False, False); // ADD K2015/04/01 高騁 森川部品個別依頼
end;


// *************************************************************************
// Grid2の初期設定
// *************************************************************************
procedure TForm4.xInitialSettingGridCol2();
var i: Integer;
begin
  // ヘッダー値の設定
  HNsGrid2.MergeCells(0, 0, 2, 1); // カラーコード
  HNsGrid2.Cells[0, 0] := 'カラーコード';

  HNsGrid2.MergeCells(2, 0, 1, 1); // カラー名称
  HNsGrid2.Cells[2, 0] := 'カラー名称';

  HNsGrid2.MergeCells(3, 0, 1, 1); // 選択状態
  HNsGrid2.Cells[3, 0] := '選択状態';
  // 文字列のレイアウト
  HNsGrid2.Alignments[0, 0] := taCenter; // カラーコード
  HNsGrid2.Alignments[2, 0] := taCenter; // カラー名称
  HNsGrid2.Alignments[3, 0] := taCenter; // 選択状態
  HNsGrid2.AddCheckBoxColumn(3, False, False);

  for i := 0 to HNsGrid2.RowCount - 1 do
  begin
    HNsGrid2.ColorsTo[0, i] := $DEDFDE;
    HNsGrid2.Alignments[3, i] := taCenter;
  end;

end;

// *************************************************************************
// Grid5の初期設定
// *************************************************************************
procedure TForm4.xInitialSettingGridCol5();
var i: Integer;
begin
  // ヘッダー値の設定
  HNsGrid5.MergeCells(0, 0, 2, 1); // グレード
  HNsGrid5.Cells[0, 0] := 'グレード';

  HNsGrid5.Cells[2, 0] := 'ボディ';
  HNsGrid5.Cells[3, 0] := 'ドア';
  HNsGrid5.Cells[4, 0] := 'エンジン';
  HNsGrid5.Cells[5, 0] := '排気量';
  HNsGrid5.Cells[6, 0] := 'Ｅ区分';
  HNsGrid5.Cells[7, 0] := 'ミッション';
  HNsGrid5.Cells[8, 0] := '駆動方式';
  HNsGrid5.Cells[9, 0] := 'シフト';
  HNsGrid5.Cells[10, 0] := '';
  HNsGrid5.Cells[11, 0] := '';
  HNsGrid5.Cells[12, 0] := '';
  HNsGrid5.Cells[13, 0] := '';
  HNsGrid5.Cells[14, 0] := '';
  HNsGrid5.Cells[15, 0] := '';
  HNsGrid5.Cells[16, 0] := '';
  // 文字列のレイアウト
  for i := 0 to HNsGrid5.ColCount - 1 do
  begin
    HNsGrid5.Alignments[i, 0] := taCenter;
  end;

end;

// *************************************************************************
// Grid4の初期設定
// *************************************************************************
procedure TForm4.xInitialSettingGridCol4();
var
  i: Integer;
begin
  // ヘッダー値の設定
  HNsGrid4.MergeCells(0, 0, 2, 1); // トリムコード
  HNsGrid4.Cells[0, 0] := 'トリムコード';

  HNsGrid4.MergeCells(2, 0, 1, 1); // トリム名称
  HNsGrid4.Cells[2, 0] := 'トリム名称';

  HNsGrid4.MergeCells(3, 0, 1, 1); // 選択状態
  HNsGrid4.Cells[3, 0] := '選択状態';
  HNsGrid4.AddCheckBoxColumn(3, false, false);

  // 文字列のレイアウト
  HNsGrid4.Alignments[0, 0] := taCenter; // トリムコード
  HNsGrid4.Alignments[2, 0] := taCenter; // トリム名称
  HNsGrid4.Alignments[3, 0] := taCenter; // 選択状態

  for i := 0 to HNsGrid4.RowCount - 1 do
  begin
    //HNsGrid4.ColorsTo[0, i] := $DEDFDE;
    HNsGrid4.Alignments[3, i] := taCenter;
  end;
end;


// *************************************************************************
// Grid3の初期設定
// *************************************************************************
procedure TForm4.xInitialSettingGridCol3();
var
  itemsTest :TStrings;
begin
  // ヘッダー値の設定
  HNsGrid3.MergeCells(0, 0, 2, 1); // 装備名称
  HNsGrid3.Cells[0, 0] := '装備名称';

  HNsGrid3.MergeCells(2, 0, 1, 1); // 装備有無
  HNsGrid3.Cells[2, 0] := '装備有無';

  HNsGrid3.MergeCells(3, 0, 1, 1); // 装備Code
  HNsGrid3.Cells[3, 0] := '装備Code';
  HNsGrid3.HideColumn(3);

  // 文字列のレイアウト
  HNsGrid3.Alignments[0, 0] := taCenter; // 装備名称
  HNsGrid3.Alignments[2, 0] := taCenter; // 装備有無
end;

// *************************************************************************
// 部品検索切替処理
// *************************************************************************
procedure TForm4.xChangeSearchMode(clearCarFlag : Integer);
var
   iRow, salesRowNo, rowNo, rowIndex, cnt, colCnt: Integer;
   carMngCodeMode, checkRowEffectiveFlg, containsFocusFlg: boolean;
   salesDetailArray: TSalesSlipInputCustomArrayA2;

   name: WideString;
begin
//xWrite('begin部品検索切替処理');

   if ((Form4.ActiveControl <> HNsGrid1)) then
   begin
       containsFocusFlg := false;
   end else begin
       containsFocusFlg := true;
   end;

   rowNo := xGetActiveRowSalesRowNo();

   //gpxMAHNB01013B_ChangeSearchMode(clearCarFlag, checkRowEffectiveFlg, rowNo, containsFocusFlg, carMngCodeMode);  // DEL 2013/01/24 鄧潘ハン REDMINE#34141
   // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
   //値引モード
   if(discountAllLineflag) then
   begin
      gpxMAHNB01013B_ChangeSearchMode(0, checkRowEffectiveFlg, rowNo, containsFocusFlg, carMngCodeMode);
   end
   else
   begin
      gpxMAHNB01013B_ChangeSearchMode(clearCarFlag, checkRowEffectiveFlg, rowNo, containsFocusFlg, carMngCodeMode);
   end;
   // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
   gpxMAHNB01013B_GetSearchPartsModeProperty(searchPartsModeProperty);
   i_searchPartsMode := searchPartsModeProperty;

   if (i_searchPartsMode = ctGoodsNoSearch) then
   begin
      categoryNoDisp := categoryNo.GetInt;
      modelDesignationNoDisp := modelDesignationNo.GetInt;
      carMngCodeDisp := carMngCode.Text;
      fullModelDisp := fullModel.Text;
      engineModelNmDisp := engineModelNm.Text;
   end
   else begin
     if (i_searchPartsMode = ctBLCodeSearch) then
     begin
//        xDeatilClearDisplay();
        if (clearCarFlag = 1) then
        begin
            gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

            xSetDetailRowFormC(salesDetailArray,-1);
            xSettingGrid();
        end;
//        xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);
     end;

    end;

//   xSettingGrid();
   if (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 1] = ctEDITSTATUS_RowDiscount) then
  begin
     HNsGrid1.FocusCell(ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1);
  end;

   xChangeSearchModeReflect();

   if (clearCarFlag = 1) then
   begin
     if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum) then
     begin
        if containsFocusFlg <> True then
        begin
          if i_searchPartsMode = ctGoodsNoSearch then
          begin
              // 車両情報画面表示処理
              salesRowNo := xGetActiveRowSalesRowNo();
              xSetDisplayCarInfo(salesRowNo, 0);
          end;

        end;

        if (i_searchPartsMode = ctBLCodeSearch) then
        begin
            if (Form4.ActiveControl <> HNsGrid1) then
            begin
               if (CarMngCode.Text <> '') and (carMngCodeMode) then
               begin
                   CarMngCode.SetFocus;
               end else
               if (CategoryNo.GetInt <> 0) then
               begin
                   CategoryNo.SetFocus;
               end else
               if (ModelDesignationNo.GetInt <> 0) then
               begin
                   ModelDesignationNo.SetFocus;
               end else
               if FullModel.Text <> '' then
               begin
                  FullModel.SetFocus;
               end else
               if EngineModelNm.Text <> '' then
               begin
                 EngineModelNm.SetFocus;
                 // --- ADD 2010/08/13 --- >>>>
               end
               else
               if ((Form4.ActiveControl <> tlb1)
                and (Form4.ActiveControl <> SectionCode)
                and (Form4.ActiveControl <> SubSectionCode)
                and (Form4.ActiveControl <> CustomerCode)
                and (Form4.ActiveControl <> SalesEmployeeCd)
                and (Form4.ActiveControl <> FrontEmployeeCd)
                and (Form4.ActiveControl <> SalesInputCode)
                and (Form4.ActiveControl <> SalesSlipNum)
                and (Form4.ActiveControl <> AcptAnOdrStatusDisplayComBo)
                and (Form4.ActiveControl <> SalesSlipDisplayComBo)
                and (Form4.ActiveControl <> SalesDate)
                and (Form4.ActiveControl <> SectionCodeBtn)
                and (Form4.ActiveControl <> SubSectionCodeBtn)
                and (Form4.ActiveControl <> CustomerCodeBtn)
                and (Form4.ActiveControl <> SalesEmployeeCdBtn)
                and (Form4.ActiveControl <> FrontEmployeeCdBtn)
                and (Form4.ActiveControl <> SalesInputCodeBtn)
                and (Form4.ActiveControl <> SalesSlipNumBtn)
                and (Form4.ActiveControl <> CustomerClaimConfirmationBtn)
                and (Form4.ActiveControl <> CarMngCodeBtn)
                and (Form4.ActiveControl <> ModelDesignationNo)
                and (Form4.ActiveControl <> CategoryNo)
                and (Form4.ActiveControl <> EngineModelNm)
                and (Form4.ActiveControl <> FullModelBtn)
                and (Form4.ActiveControl <> FullModel)
                and (Form4.ActiveControl <> MakerCode)
                and (Form4.ActiveControl <> ModelCode)
                and (Form4.ActiveControl <> ModelSubCode)
                and (Form4.ActiveControl <> ModelFullName)
                and (Form4.ActiveControl <> ProduceFrameNo)
                and (Form4.ActiveControl <> ColorNo)
                and (Form4.ActiveControl <> TrimNo)
                and (Form4.ActiveControl <> FirstEntryDate)
                and (Form4.ActiveControl <> CarMngCode)
                and (Form4.ActiveControl <> ModelFullNameBtn)) then
               begin
                  if (FullModel.DataText = '') then
                  begin
                    SendMessage(DeliveredGoodsDivComBo.Handle, CB_SHOWDROPDOWN, INTEGER(False), 0);
                    SendMessage(DeliveredGoodsDivComBo.Handle, CB_SHOWDROPDOWN, INTEGER(False), 0);
                    FullModel.SetFocus;
                    Timer3.Enabled := True;
                  end;
                  // --- ADD 2010/08/13 --- <<<<
               end;
            end else begin
               if (carMngCodeDisp <> carMngCode.Text)
                 or (categoryNoDisp <> categoryNo.GetInt)
                 or (modelDesignationNoDisp <> modelDesignationNo.GetInt)
                 or (fullModelDisp <> fullModel.Text)
                 or (engineModelNmDisp <> engineModelNm .Text) then
               begin
                   if (CarMngCode.Text <> '') and (carMngCodeMode) then
                   begin
                       CarMngCode.SetFocus;
                   end else
                   if (CategoryNo.GetInt <> 0) then
                   begin
                       CategoryNo.SetFocus;
                   end else
                   if (ModelDesignationNo.GetInt <> 0) then
                   begin
                       ModelDesignationNo.SetFocus;
                   end else
                   if FullModel.Text <> '' then
                   begin
                      FullModel.SetFocus;
                   end else
                   if EngineModelNm.Text <> '' then
                   begin
                     EngineModelNm.SetFocus;
                   end;
                   // --- ADD 2010/08/13 --- >>>>
               end
               else
               begin
                  //if (FullModel.DataText = '') then // DEL 2010/11/25
                  if (FullModel.DataText = '') and  ModelFullNameBtn.Enabled then // ADD 2010/11/25
                  begin
                    FullModel.SetFocus;
                  end;
               end;
               // --- ADD 2010/08/13 --- <<<<
            end;
        end;
     end;
   end;
//   xWrite('end');

  // --- ADD 2010/06/02 ---------->>>>>
  cnt := HNsGrid1.RowCount;
  colCnt := HNsGrid1.ColCount;
  for rowIndex := 2 to cnt - 1 do
  begin
    xSetDetailGridForModel(rowIndex, colCnt);
  end;
  // --- ADD 2010/06/02 ----------<<<<<

  if (i_searchPartsMode = ctGoodsNoSearch) then
  begin

    //ModelFullName.Text := '';  // DEL 2010/07/07

    //xEnableControl(ModelFullName, True); // DEL 2010/11/25
    // ---ADD 2010/11/25 -------------->>>
    // 貸出計上、受注計上、見積計上の場合
    if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ShipmentAddUp) or
    (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp) or
    (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp)) then
    begin
        xEnableControl(ModelFullName, False);
    end
    // 新規場合
    else if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum) and ModelFullNameBtn.Enabled then
    begin
        xEnableControl(ModelFullName, True);
    end
    // 既存修正の時は、車種名称入力不可
    else if ((salesSlip.SalesSlipNum <> '') and (salesSlip.SalesSlipNum <> defaultSalesSlipNumDf)) then
    begin
        xEnableControl(ModelFullName, False);
    end
    // ---ADD 2010/11/25 --------------<<<
  end
  else
  begin
    if (ModelFullName.Focused) then
    begin
      MakerCode.SetFocus;
    end;

    //ModelFullName.Text := ''; // DEL 2010/07/07

    xEnableControl(ModelFullName, False);
  end;

  // ADD 2010/10/22 ---- >>>>
  //if(form4.ActiveControl.Name = 'FirstEntryDateMonth')then     // DEL 2010/10/29
  if((form4.ActiveControl <> nil) and (form4.ActiveControl.Name = 'FirstEntryDateMonth'))then       // ADD 2010/10/29
  begin
    if ((xGetNextControl(FirstEntryDate, 0) = FirstEntryDate)) then
    begin
       if (
        ((Trim(FullModel.Text) <> '') and (i_searchPartsMode = ctBLCodeSearch))
        or (i_searchPartsMode = ctGoodsNoSearch)) then
       begin
         FirstEntryDate.ExtCase.RetKey := True;
       end
       else
       begin
         FirstEntryDate.ExtCase.RetKey := False;
       end;
    end
    else
    begin
       FirstEntryDate.ExtCase.RetKey := True;
    end;
  end
//  else if (form4.ActiveControl = CategoryNo)then
//  begin
//     if ((xGetNextControl(CategoryNo, 0) = CategoryNo)
//        and (
//        ((Trim(FullModel.Text) <> '') and (i_searchPartsMode = ctBLCodeSearch))
//        or (i_searchPartsMode = ctGoodsNoSearch))
//     ) then
//    begin
//       CategoryNo.ExtCase.RetKey := True;
//    end
//    else
//    begin
//      CategoryNo.ExtCase.RetKey := False;
//    end;
//  end
  //else if (form4.ActiveControl.Name = 'SalesDateDay')then      // DEL 2010/10/29
  else if ((form4.ActiveControl <> nil) and (form4.ActiveControl.Name = 'SalesDateDay'))then        // ADD 2010/10/29
  begin
//     if ((xGetNextControl(SalesDate, 0) = HNsGrid1)
//       and (
//        ((Trim(FullModel.Text) <> '') and (i_searchPartsMode = ctBLCodeSearch))
//        or (i_searchPartsMode = ctGoodsNoSearch))
//     ) then
//    begin
//       SalesDate.ExtCase.RetKey := True;
//    end
//    else if (xGetNextControl(SalesDate, 0) = HNsGrid1) then
//    begin
//       SalesDate.ExtCase.RetKey := False;
//    end;
     if ((xGetNextControl(SalesDate, 0) = HNsGrid1)) then
    begin
       if ((
        ((Trim(FullModel.Text) <> '') and (i_searchPartsMode = ctBLCodeSearch))
        or (i_searchPartsMode = ctGoodsNoSearch))) then
       begin
          SalesDate.ExtCase.RetKey := True;
       end
       else
       begin
          SalesDate.ExtCase.RetKey := False;
       end;
    end
    else
    begin
       SalesDate.ExtCase.RetKey := True;
    end;
  end;
  // ADD 2010/10/22 ---- <<<<<
// ------------- ADD 連番729 2011/08/18 ------------------- >>>>>
  if Form4.ActiveControl <> HNsGrid1 then
  begin
    detailCopyButton.Enabled := False;
    toolMenu_detailCopyBtn.Enabled := False;
    // --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 --->>>>>
    // --- ADD  譚洪 2015/10/26 Redmine#47609 ---------->>>>>
    if(isOptPermitForFuJi)then
    begin
    // --- ADD  譚洪 2015/10/26 Redmine#47609 ----------<<<<<
    UOEDataGet.Enabled := False;
    toolMenu_UOEDataGet.Enabled := False;
    end;// ADD  譚洪 2015/10/26 Redmine#47609
    // --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ---<<<<<
    // --- DEL  30757 佐々木　貴英 K2015/10/05 ----------------->>>>>
    //// --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 --->>>>>
    //UOEDataGet.Enabled := False;
    //toolMenu_UOEDataGet.Enabled := False;
    //// --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 ---<<<<<
    // --- DEL  30757 佐々木　貴英 K2015/10/05 -----------------<<<<<

    // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- >>>>>
    if isOptPermitForKoei then
    begin
      btnSalesUnPrcCalc.Enabled := False;
    end;
    // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- <<<<<

  end;
// ------------- ADD 連番729 2011/08/18 ------------------- <<<<<

end;

// *************************************************************************
// 明細部フォーカス位置設定処理
// *************************************************************************
procedure TForm4.xSettingFocus(ColumnName: WideString);
var
index, editStatus, colIndex : Integer;
begin
    colIndex := xColNameToIndex(ColumnName);
    index := xGetActiveRowSalesRowNo();
//    editStatus := RCHNB01003UADM.EditStatus[index div 2 -1 ];
    editStatus := RCHNB01003UADM.EditStatus[index];
    if (editStatus <> ctEDITSTATUS_RowDiscount)
       and (editStatus <> ctEDITSTATUS_Annotation) then
    begin
        HNsGrid1.SetFocus;
        if (ColumnName = 'GoodsNoTP') then
        begin
        // HNsGrid1.FocusCell(colIndex, HNsGrid1.LogicalRow * 2 + 1);
        HNsGrid1.GotoCell(colIndex, HNsGrid1.LogicalRow * 2 + 1);
        end else begin
        //HNsGrid1.FocusCell(colIndex, HNsGrid1.LogicalRow * 2);
        HNsGrid1.GotoCell(colIndex, HNsGrid1.LogicalRow * 2);
        end;
    end else begin
        HNsGrid1.SetFocus;
        //HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.LogicalRow * 2);
        HNsGrid1.GotoCell(ctCol_GoodsName, HNsGrid1.LogicalRow * 2);
    end;


  // 明細グリッド設定処理
  //this.uGrid_Details.PerformAction(Infragistics.Win.UltraWinGrid.UltraGridAction.EnterEditMode);

end;

// *************************************************************************
// 明細部フォーカス位置設定処理2
// *************************************************************************
procedure TForm4.xSettingFocus2(ColumnName: WideString);
var
index, editStatus, colIndex : Integer;
begin
    colIndex := xColNameToIndex(ColumnName);
    // --- ADD 2010/07/08 ---------->>>>>
//    index := xGetActiveRowSalesRowNo();
    index := xGetActiveRowSalesRowNo() - 1;
    // --- ADD 2010/07/08 ----------<<<<<

    editStatus := RCHNB01003UADM.EditStatus[index];
    if (editStatus <> ctEDITSTATUS_RowDiscount)
       and (editStatus <> ctEDITSTATUS_Annotation)
       and (editStatus <> salesSlipCdDtl_RetGoods) then
    begin
        HNsGrid1.SetFocus;
        if (ColumnName = 'GoodsNoTP') then
        begin
           HNsGrid1.FocusCell(colIndex, 3);
        end else begin
           // --- UPD 2010/07/01 ---------->>>>>
           //HNsGrid1.FocusCell(colIndex, 2);  //DEL 2010/07/01
           if (HNsGrid1.ReadOnly[colIndex,2] = False) then
           begin
             HNsGrid1.FocusCell(colIndex, 2);
           end
           else
           begin
             HNsGrid1.FocusCell(colIndex + 1, 2);
           end;
           // --- UPD 2010/07/01 ---------->>>>>
        end;
    end
    else if (editStatus = salesSlipCdDtl_RetGoods) then
    begin
     HNsGrid1.SetFocus;
     // --- ADD 2010/07/08 ---------->>>>>
//     HNsGrid1.GotoCell(colIndex, 2);
     HNsGrid1.GotoCell(colIndex, 3);
     // --- ADD 2010/07/08 ----------<<<<<
    end else begin
      HNsGrid1.SetFocus;
      HNsGrid1.FocusCell(ctCol_GoodsName, 2);
    end;

end;

// UPD 2010/08/26   ----------->>>>
// --- ADD 2010/08/13 --- >>>>
// *************************************************************************
// 明細部フォーカス位置設定処理3
// *************************************************************************
procedure TForm4.xSettingFocus3(ColumnName: WideString);
var
index, editStatus, colIndex : Integer;
begin
    colIndex := xColNameToIndex(ColumnName);

    index := xGetActiveRowSalesRowNo() - 1;

    editStatus := RCHNB01003UADM.EditStatus[index];
    if (editStatus <> ctEDITSTATUS_RowDiscount)
       and (editStatus <> ctEDITSTATUS_Annotation)
       and (editStatus <> salesSlipCdDtl_RetGoods) then
    begin
        HNsGrid1.SetFocus;
        if (ColumnName = 'GoodsNoTP') then
        begin
           HNsGrid1.GotoCell(colIndex, logicalRowInt * 2 + 1);
        end else begin
           if (HNsGrid1.ReadOnly[colIndex,logicalRowInt * 2] = False) then
           begin
             HNsGrid1.GotoCell(colIndex, logicalRowInt * 2);
           end
           else
           begin
             HNsGrid1.GotoCell(colIndex + 1, logicalRowInt * 2);
           end;
        end;
    end
    else if (editStatus = salesSlipCdDtl_RetGoods) then
    begin
     HNsGrid1.SetFocus;

     HNsGrid1.GotoCell(colIndex, logicalRowInt * 2 + 1);

    end else begin
      HNsGrid1.SetFocus;
      HNsGrid1.GotoCell(ctCol_GoodsName, logicalRowInt * 2);
    end;

end;
// --- ADD 2010/08/13 --- <<<<

// *************************************************************************
// 明細部フォーカス位置設定処理4
// *************************************************************************
procedure TForm4.xSettingFocus4(ColumnName: WideString);
var
index, editStatus, colIndex : Integer;
begin
    colIndex := xColNameToIndex(ColumnName);
    // --- ADD 2010/07/08 ---------->>>>>
//    index := xGetActiveRowSalesRowNo();
    index := xGetActiveRowSalesRowNo() - 1;
    // --- ADD 2010/07/08 ----------<<<<<

    editStatus := RCHNB01003UADM.EditStatus[index];
    if (editStatus <> ctEDITSTATUS_RowDiscount)
       and (editStatus <> ctEDITSTATUS_Annotation)
       and (editStatus <> salesSlipCdDtl_RetGoods) then
    begin
        HNsGrid1.SetFocus;
        if (ColumnName = 'GoodsNoTP') then
        begin
           HNsGrid1.FocusCell(colIndex, logicalRowInt * 2 + 1);
        end else begin
           // --- UPD 2010/07/01 ---------->>>>>
           //HNsGrid1.FocusCell(colIndex, 2);  //DEL 2010/07/01
           if (HNsGrid1.ReadOnly[colIndex,logicalRowInt * 2] = False) then
           begin
             HNsGrid1.FocusCell(colIndex, logicalRowInt * 2);
           end
           else
           begin
             HNsGrid1.FocusCell(colIndex + 1, logicalRowInt * 2);
           end;
           // --- UPD 2010/07/01 ---------->>>>>
        end;
    end
    else if (editStatus = salesSlipCdDtl_RetGoods) then
    begin
     HNsGrid1.SetFocus;
     // --- ADD 2010/07/08 ---------->>>>>
//     HNsGrid1.GotoCell(colIndex, 2);
     HNsGrid1.GotoCell(colIndex, logicalRowInt * 2 + 1);
     // --- ADD 2010/07/08 ----------<<<<<
    end else begin
      HNsGrid1.SetFocus;
      HNsGrid1.FocusCell(ctCol_GoodsName, logicalRowInt * 2);
    end;

end;
// UPD 2010/08/26   -----------<<<<

// *************************************************************************
// 部品検索切替反映処理
// *************************************************************************
procedure TForm4.xChangeSearchModeReflect();
begin

  if (i_searchPartsMode = 1) then
  begin
      SearchMode.Caption := ctSearchMode_BLSearch;
      if (Form4.ActiveControl <> HNsGrid1) then  // ADD 2013/04/16 Wakita
      searchCarDiv := True;
      gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv); // ADD 2010/07/19
  end else
  if (i_searchPartsMode = 2)  then
  begin
      SearchMode.Caption := ctSearchMode_GoodsNoSearch;
      searchCarDiv := False;
      gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv); // ADD 2010/07/19
  end;

  xSetDisplay();

  if (not settingGridFlg) then
  begin
     xSettingGrid();
  end;

  try   // 2011/01/31
  if (Form4.ActiveControl = HNsGrid1) then
  begin
     if (i_searchPartsMode = 2) then
     begin
         if (HNsGrid1.ActiveCellShow <> true) then
         begin
            HNsGrid1.MaxEditLength := 40;
            if ((RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 1] = ctEDITSTATUS_RowDiscount)
              or (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 1] = ctEDITSTATUS_Annotation)) then
            begin
             xSettingFocus('GoodsNameTP');
             guideButton.Enabled := False;
            end
            else
            begin
             xSettingFocus('GoodsNoTP');
             guideButton.Enabled := False;
            end;
         end;
     end else
     if (i_searchPartsMode = 1) then
     begin
         if (HNsGrid1.ActiveCellShow <> true) then
         begin
            HNsGrid1.MaxEditLength := 5;
            if ((RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 1] = ctEDITSTATUS_RowDiscount)
              or (RCHNB01003UADM.EditStatus[HNsGrid1.LogicalRow - 1] = ctEDITSTATUS_Annotation)) then
            begin
             xSettingFocus('GoodsNameTP');
             guideButton.Enabled := False;
            end
            else
            begin
             xSettingFocus('BLGoodsCodeTP');
             guideButton.Enabled := True;
            end;
         end;

     end;
  end;
// 2011/01/31 >>>
  finally
    // ツールバーオプション側のボタンは、最後にEnabledをオリジナルからコピーする
    toolMenu_guideButton.Enabled := guideButton.Enabled;
  end;
// 2011/01/31 <<<
end;

// *************************************************************************
// 明細グリッド設定処理
// *************************************************************************
procedure TForm4.xSettingGrid();
var rowIndex, colIndex, colCnt: Integer ;
    cnt: Integer;
begin
   gpxMAHNB01012B_GetSalesSlip(salesSlip_disp);

//   // 読取専用、締済
//   if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly) or
//   (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp)) then
//   begin
//      BitBtn_Action.Enabled := False; // 操作
//      btnInputChange.Enabled := False; // 入力切替
//      btnInputStockInfo.Enabled := False; // 仕入入力
//      btnInputOrderInfo.Enabled := False; // 発注入力
//
//      btnLineDiscount.Enabled := False; // 行値引
//      btnGoodsDiscount.Enabled := False; // 商品値引
//      btnAnnotation.Enabled := False; // 注釈
//      btnChangeCarInfo.Enabled := False; // 車種変更
//      btnStockSearch.Enabled := False; // 在庫検索
//      btnChangeWarehouse.Enabled := False; // 倉庫切替
//      btnTBO.Enabled := False; // TBO
//      btnCopyStockBefLine.Enabled := False; // 前行複写
//      btnCopyStockAllLine.Enabled := False; // 一括複写
//   end else
//   begin
//      BitBtn_Action.Enabled := True; // 操作
//      btnInputChange.Enabled := True; // 入力切替
//      btnInputStockInfo.Enabled := True; // 仕入入力
//      btnInputOrderInfo.Enabled := True; // 発注入力
//
//      btnLineDiscount.Enabled := True; // 行値引
//      btnGoodsDiscount.Enabled := True; // 商品値引
//      btnAnnotation.Enabled := True; // 注釈
//      btnChangeCarInfo.Enabled := True; // 車種変更
//      btnStockSearch.Enabled := True; // 在庫検索
//      btnChangeWarehouse.Enabled := True; // 倉庫切替
//      btnTBO.Enabled := True; // TBO
//      btnCopyStockBefLine.Enabled := True; // 前行複写
//      btnCopyStockAllLine.Enabled := True; // 一括複写
//   end;

  // グリッド列表示非表示設定処理
  xSettingGridColVisible(0, 0);
  // グリッドヘッダ情報設定処理
  xSettingGridHeader();

  i_InputType := 0;  //通常入力 // ADD ZHANGKAI 2010/07/01

  // 各行ごとの設定
  cnt := HNsGrid1.RowCount;
  // --- ADD 2010/06/02 ---------->>>>>
  colCnt := HNsGrid1.ColCount;
  // --- ADD 2010/06/02 ----------<<<<<
  for rowIndex := 2 to cnt - 1 do
  begin
    xSettingGridRow(rowIndex);
    // --- ADD 2010/06/02 ---------->>>>>
    xSetDetailGridForModel(rowIndex, colCnt);
    // --- ADD 2010/06/02 ----------<<<<<
  end;

  xGridDetailTransparentColorCellSet();
end;

// *************************************************************************
// 明細グリッドTransparentColorCell設定処理
// *************************************************************************
procedure TForm4.xGridDetailTransparentColorCellSet();
var iRow : Integer;
begin
  for iRow := 1 to HNsGrid1.LogicalRowCount - 1 do
  begin
    //納品完了予定日
    if ((HNsGrid1.LogicalFontColors[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, iRow] = $DEDFDE)
      or (HNsGrid1.LogicalFontColors[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, iRow] = clBtnHighlight)) then
     begin
        HNsGrid1.LogicalCells[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, iRow] := '';
     end;

     //原単価
     if ((HNsGrid1.LogicalFontColors[ctCol_SalesUnitCost, ctRow_SalesUnitCost, iRow] = $DEDFDE)
      or (HNsGrid1.LogicalFontColors[ctCol_SalesUnitCost, ctRow_SalesUnitCost, iRow] = clBtnHighlight)) then
     begin
        HNsGrid1.LogicalCells[ctCol_SalesUnitCost, ctRow_SalesUnitCost, iRow] := '';
     end
     else
     begin
        if RCHNB01003UADM.SalesUnitCost[iRow - 1] <> 0 then
          HNsGrid1.LogicalCells[ctCol_SalesUnitCost, ctRow_SalesUnitCost, iRow] := FloatToStr(RCHNB01003UADM.SalesUnitCost[iRow - 1]);
     end;

     //原価率
     if ((HNsGrid1.LogicalFontColors[ctCol_CostRate, ctRow_CostRate, iRow] = $DEDFDE)
      or (HNsGrid1.LogicalFontColors[ctCol_CostRate, ctRow_CostRate, iRow] = clBtnHighlight)) then
     begin
        HNsGrid1.LogicalCells[ctCol_CostRate, ctRow_CostRate, iRow] := '';
     end
     else
     begin
        if RCHNB01003UADM.CostRate[iRow - 1] <> 0 then
          HNsGrid1.LogicalCells[ctCol_CostRate, ctRow_CostRate, iRow] := FloatToStr(RCHNB01003UADM.CostRate[iRow - 1]);
     end;

     //現在庫数
     if ((HNsGrid1.LogicalFontColors[ctCol_SupplierStockDisplay, ctRow_SupplierStockDisplay, iRow] = $DEDFDE)
      or (HNsGrid1.LogicalFontColors[ctCol_SupplierStockDisplay, ctRow_SupplierStockDisplay, iRow] = clBtnHighlight)) then
     begin
        HNsGrid1.LogicalCells[ctCol_SupplierStockDisplay, ctRow_SupplierStockDisplay, iRow] := '';
     end;

  end;

end;

// *************************************************************************
// グリッドヘッダ情報設定処理
// *************************************************************************
procedure TForm4.xSettingGridHeader();
var i: Integer ;
    cnt: Integer;
begin
  case salesSlip_disp.AcptAnOdrStatusDisplay of
    //----------------------------------------------
    // 見積
    //----------------------------------------------
    acptAnOdrStatusState_Estimate, acptAnOdrStatusState_UnitPriceEstimate:
    begin
      if salesSlip_disp.EstimateDivide = 1 then
      begin
        // 通常見積
        HNsGrid1.Cells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay] := '';
        HNsGrid1.Cells[ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay] := '見積数';
      end
      else
      begin
        // 単価見積
        HNsGrid1.Cells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay] := '';
        HNsGrid1.Cells[ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay] := '';
      end;
    end;

    //----------------------------------------------
    // 売上、出荷
    //----------------------------------------------
    acptAnOdrStatusState_Sales, acptAnOdrStatusState_Shipment:
    begin
      case salesSlip_disp.SalesSlipCd of
        salesSlipCd_Sales:
        begin
          HNsGrid1.Cells[ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay] := '出荷数';
          if salesTtlSt.AcpOdrInputDiv = 1 then //売上全体設定マスタ 受注数入力 0:しない　1:する
            HNsGrid1.Cells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay] := '受注数'
          else
            HNsGrid1.Cells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay] := '';
        end;
        salesSlipCd_RetGoods:
        begin
          HNsGrid1.Cells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay] := '';
          HNsGrid1.Cells[ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay] := '出荷数';
        end;
      end;
    end;
    // --- DEL 2013/04/18 T.Nishi ---------->>>>>
    //// ADD 2013/02/05 T.Miyamoto ------------------------------>>>>>
    ////----------------------------------------------
    //// 受注
    ////----------------------------------------------
    //acptAnOdrStatusState_AcceptAnOrder:
    //begin
    //  HNsGrid1.Cells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay] := '受注数';
    //  HNsGrid1.Cells[ctCol_ShipmentCntDisplay     , ctRow_ShipmentCntDisplay     ] := '';
    //end;
    //// ADD 2013/02/05 T.Miyamoto ------------------------------<<<<<
    // --- DEL 2013/04/18 T.Nishi ----------<<<<<
  end;

  // 原単価、原価率
  case salesTtlSt.CostDspDivCd of
    // しない
    0:
    begin
      HNsGrid1.Cells[ctCol_CostRate, ctRow_CostRate] := '';
      HNsGrid1.Cells[ctCol_SalesUnitCost, ctRow_SalesUnitCost] := '';
      xSetMoneyVisible(False);
    end;

    // する
    1:
    begin
      if _costDisplay = False then // HOMEキーによる制御
      begin
        HNsGrid1.Cells[ctCol_CostRate, ctRow_CostRate] := '';
        HNsGrid1.Cells[ctCol_SalesUnitCost, ctRow_SalesUnitCost] := '';
        xSetMoneyVisible(False);
      end
      else
      begin
        if salesSlip_disp.SalesSlipCd <> salesSlipCd_RetGoods then
        begin
          case salesTtlSt.SlipChngDivCost of
            // 未使用
            2:
            begin
            // ----------UPD 2010/07/01--------->>>>>
//              HNsGrid1.Cells[ctCol_CostRate, ctRow_CostRate] := '';
//              HNsGrid1.Cells[ctCol_SalesUnitCost, ctRow_SalesUnitCost] := '';
//              xSetMoneyVisible(False);
                //修正呼出、計上
                if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ShipmentAddUp) or
                    (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp) or
                    (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp) or
                    (salesSlip_disp.SalesSlipNum <> ctDefaultSalesSlipNum)) then
                begin
                  HNsGrid1.Cells[ctCol_CostRate, ctRow_CostRate] := '';
                  HNsGrid1.Cells[ctCol_SalesUnitCost, ctRow_SalesUnitCost] := '';
                  xSetMoneyVisible(False);
                end
                else
                begin
                  // --- ADD 2012/12/21 T.Miyamoto ------------------------------>>>>>
                  if ((salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum) and
                      (optSalesCostCtrl = 1)) then // 原価修正制御オプション(OPT-CPM0070)がオンの場合
                  begin
                    HNsGrid1.Cells[ctCol_CostRate     , ctRow_CostRate     ] := '';
                    HNsGrid1.Cells[ctCol_SalesUnitCost, ctRow_SalesUnitCost] := '';
                  end;
                  // --- ADD 2012/12/21 T.Miyamoto ------------------------------<<<<<
                  xSetMoneyVisible(True);
                end;
             // ----------UPD 2010/07/01---------<<<<<
            end
          else
            begin
              HNsGrid1.Cells[ctCol_CostRate, ctRow_CostRate] := '原価率';
              HNsGrid1.Cells[ctCol_SalesUnitCost, ctRow_SalesUnitCost] := '原単価';
              xSetMoneyVisible(True);
            end
          end;
        end
        else
        begin
          case salesTtlSt.RetSlipChngDivCost of
            // 未使用
            2:
            begin
            // ----------UPD 2010/07/01--------->>>>>
//              HNsGrid1.Cells[ctCol_CostRate, ctRow_CostRate] := '';
//              HNsGrid1.Cells[ctCol_SalesUnitCost, ctRow_SalesUnitCost] := '';
//              xSetMoneyVisible(False);
                //修正呼出、計上
                if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ShipmentAddUp) or
                    (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp) or
                    (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp) or
                    (salesSlip_disp.SalesSlipNum <> ctDefaultSalesSlipNum)) then
                begin
                  HNsGrid1.Cells[ctCol_CostRate, ctRow_CostRate] := '';
                  HNsGrid1.Cells[ctCol_SalesUnitCost, ctRow_SalesUnitCost] := '';
                  xSetMoneyVisible(False);
                end
                else
                begin
                  // --- ADD 2012/12/21 T.Miyamoto ------------------------------>>>>>
                  if ((salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum) and
                      (optSalesCostCtrl = 1)) then // 原価修正制御オプション(OPT-CPM0070)がオンの場合
                  begin
                    HNsGrid1.Cells[ctCol_CostRate     , ctRow_CostRate     ] := '';
                    HNsGrid1.Cells[ctCol_SalesUnitCost, ctRow_SalesUnitCost] := '';
                  end;
                  // --- ADD 2012/12/21 T.Miyamoto ------------------------------<<<<<
                  xSetMoneyVisible(True);
                end;
            // ----------UPD 2010/07/01---------<<<<<
            end
          else
            begin
              HNsGrid1.Cells[ctCol_CostRate, ctRow_CostRate] := '原価率';
              HNsGrid1.Cells[ctCol_SalesUnitCost, ctRow_SalesUnitCost] := '原単価';
              xSetMoneyVisible(True);
            end
          end;
        end;

      end;

    end;

  end;

  // 明細備考
  case salesTtlSt.DtlNoteDispDiv of
    // 入力あり
    0:
      HNsGrid1.Cells[ctCol_DtlNote, ctRow_DtlNote] := '明細備考';
    // 非表示
    1:
      HNsGrid1.Cells[ctCol_DtlNote, ctRow_DtlNote] := '';
  else
    HNsGrid1.Cells[ctCol_DtlNote, ctRow_DtlNote] := '明細備考';
  end;

  // 得意先注番
  case salesSlip_disp.CustOrderNoDispDiv of
    // 表示しない
    0:
      HNsGrid1.Cells[ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl] := '';
    // 表示する
    1:
      HNsGrid1.Cells[ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl] := '得意先注番';
  else
    HNsGrid1.Cells[ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl] := '得意先注番';
  end;

  //>>>2011/05/25
  case salesTtlSt.SalesCdDspDivCd of
    0: // する
      //HNsGrid1.Cells[ctCol_SalesCode, ctRow_SalesCode] := '販売区分';  // DEL 譚洪 K2014/01/22
      // ADD 譚洪 K2014/01/22 --- >>>
      if (optNoBuTo = 1) then
      begin
        HNsGrid1.Cells[ctCol_SalesCode, ctRow_SalesCode] := '特販区分';
      end
      else
      begin
        HNsGrid1.Cells[ctCol_SalesCode, ctRow_SalesCode] := '販売区分';
      end;
      // ADD 譚洪 K2014/01/22 --- <<<
    1: // しない
      HNsGrid1.Cells[ctCol_SalesCode, ctRow_SalesCode] := '';
    2: // 必須
      //HNsGrid1.Cells[ctCol_SalesCode, ctRow_SalesCode] := '販売区分';  // DEL 譚洪 K2014/01/22
      // ADD 譚洪 K2014/01/22 --- >>>
      if (optNoBuTo = 1) then
      begin
        HNsGrid1.Cells[ctCol_SalesCode, ctRow_SalesCode] := '特販区分';
      end
      else
      begin
        HNsGrid1.Cells[ctCol_SalesCode, ctRow_SalesCode] := '販売区分';
      end;
      // ADD 譚洪 K2014/01/22 --- <<<
    else
      //HNsGrid1.Cells[ctCol_SalesCode, ctRow_SalesCode] := '販売区分';  // DEL 譚洪 K2014/01/22
      // ADD 譚洪 K2014/01/22 --- >>>
      if (optNoBuTo = 1) then
      begin
        HNsGrid1.Cells[ctCol_SalesCode, ctRow_SalesCode] := '特販区分';
      end
      else
      begin
        HNsGrid1.Cells[ctCol_SalesCode, ctRow_SalesCode] := '販売区分';
      end;
      // ADD 譚洪 K2014/01/22 --- <<<
  end;
  //<<<2011/05/25

end;

// *************************************************************************
// セルアクティブ時ボタン有効無効コントロール処理
// *************************************************************************
//Update Note: 2010/06/02 呉元嘯 PM.NS障害・改良対応（７月リリース案件）
//No.11 「車種変更」機能の動作変更対応
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 徐錦山
// 作 成 日  2011/08/08  修正内容 : 連番994
//                                  明細部からの計上時は品番検索へ切り替え可能です
//----------------------------------------------------------------------------//
procedure TForm4.xActiveCellButtonEnabledControl(colKey: string ; salesRowNo: Integer);
var
   rowIndex,editStatus :Integer;
   goodsCode, goodsName : string;
   ret : Boolean;
begin

   editStatus := RCHNB01003UADM.EditStatus[salesRowNo -1 ];
   goodsCode  := RCHNB01003UADM.GoodsNo[salesRowNo -1 ];
   goodsName  := RCHNB01003UADM.GoodsName[salesRowNo -1 ];

   gpxMAHNB01012B_GetSalesSlip(salesSlip_disp);

   btnCopyToRC.Enabled := True;        // RCへコピー(通常入力時はTrue)   2010/06/15 Add

   // --- ADD 2011/09/20 ---------->>>>>
   W1.Enabled := True; // 仕入
   G1.Enabled := True; // 発注
   M1.Enabled := True; // 行値引
   L1.Enabled := True; // 注釈
   // --- ADD 2011/09/20 ----------<<<<<

   try  // 2011/01/31

     // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- >>>>>
     if isOptPermitForKoei then
     begin
       if (salesUnPrcCalcFlg <> True)
            and ((Form4.ActiveControl = HNsGrid1) and (HNsGrid1.ReadOnly[ctCol_SalesUnPrcDisplay, HNsGrid1.LogicalRow * 2 + 1] <> True)
            or (Form4.ActiveControl = btnSalesUnPrcCalc)) then
         begin
           btnSalesUnPrcCalc.Enabled := True;
         end
         else
         begin
           btnSalesUnPrcCalc.Enabled := False;
         end;
     end;
     // --- ADD 譚洪 K2016/11/01 外部PG売価算出対応_㈱コーエイ --- <<<<<


     // 読取専用、締済
     if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly) or
     (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp)) then
     begin

        // --- ADD 2012/05/24 No.849 ---------->>>>>
        if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly) then
        // --- ADD 2012/05/24 No.849 ----------<<<<<
        guideButton.Enabled := False; // ガイド

        rowInsert.Enabled := False; // 挿入
        rowDelete.Enabled := False; // 削除
        rowCut.Enabled := False;   // 切取
        rowCopy.Enabled := False;   // コピー

        InSertPop.Enabled := False; // 挿入
        DeletePop.Enabled := False; // 削除
        CutPop.Enabled := False;   // 切取
        CopyPop.Enabled := False;   // コピー

        btnInputChange.Enabled := True; // 入力切替
        btnInputStockInfo.Enabled := False; // 仕入入力
        btnInputOrderInfo.Enabled := False; // 発注入力
        btnSCM.Enabled := false; // SCM // 2010/05/30

        btnLineDiscount.Enabled := False; // 行値引
        btnGoodsDiscount.Enabled := False; // 商品値引
        btnAnnotation.Enabled := False; // 注釈
        btnChangeCarInfo.Enabled := False; // 車種変更
        btnStockSearch.Enabled := False; // 在庫検索
        btnChangeWarehouse.Enabled := False; // 倉庫切替
        btnTBO.Enabled := False; // TBO
        btnCopyToRC.Enabled := True; // RC  2010/06/26

        copySlipButton.Enabled := False; // 伝票複写
        toolCopySlipButton.Enabled := False;
        shipmentAddUpButton.Enabled := False; // 貸出計上
        acceptAnOrderAddUpButton.Enabled := False; // 受注計上
        estimateAddUpButton.Enabled := False; // 見積計上
        searchCarChangeButton.Enabled := False; // 検索切替

        // --- ADD 2012/05/24 No.849 ---------->>>>>
        // 入力モードが「締済みモード」の場合
        if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp) then
        begin
          btnInputStockInfo.Enabled := True; // 仕入入力
          btnInputOrderInfo.Enabled := True; // 発注入力
          btnCopyToRC.Enabled := False; // RC

          M1.Enabled := False; // 行値引
          L1.Enabled := False; // 注釈
        end;
        // --- ADD 2012/05/24 No.849 ----------<<<<<

     end
     //計上
     else if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ShipmentAddUp) or
     (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp) or
     (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp)) then
     begin

        guideButton.Enabled := False; // ガイド

        rowInsert.Enabled := False; // 挿入
        rowDelete.Enabled := True; // 削除
        rowCut.Enabled := False;   // 切取
        rowCopy.Enabled := False;   // コピー

        InSertPop.Enabled := False; // 挿入
        DeletePop.Enabled := True; // 削除
        CutPop.Enabled := False;   // 切取
        CopyPop.Enabled := False;   // コピー

        btnInputChange.Enabled := True; // 入力切替
//        btnInputStockInfo.Enabled := True; // 仕入入力     // DEL 連番962 2011/08/08
// ------------- ADD 連番962 2011/08/08 -------------------------- >>>>>
//>>>2012/05/02
//        //売上全体設定マスタ 売上仕入区分 0:しない 1:する 2:必須入力
//        if (salesTtlSt.SalesStockDiv = 0) then
//          btnInputStockInfo.Enabled := False //仕入
//        else
//          btnInputStockInfo.Enabled := True; //仕入

        if salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Shipment then begin
          //売上全体設定マスタ 貸出仕入区分 0:しない 1:する 2:必須入力
          if (salesTtlSt.RentStockDiv = 0) then
            btnInputStockInfo.Enabled := False //仕入
          else
            btnInputStockInfo.Enabled := True; //仕入
        end else begin
        //売上全体設定マスタ 売上仕入区分 0:しない 1:する 2:必須入力
        if (salesTtlSt.SalesStockDiv = 0) then
          btnInputStockInfo.Enabled := False //仕入
        else
          btnInputStockInfo.Enabled := True; //仕入
        end;
//<<<2012/05/02
// ------------- ADD 連番962 2011/08/08 -------------------------- <<<<<

        // --- UPD 2013/01/15 Wakita ---------->>>>>
        //if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp) then
        if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp) or
            (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp)) then
        // --- UPD 2013/01/15 Wakita ----------<<<<<
        begin
            btnInputOrderInfo.Enabled := True; // 発注入力
        end
        else
        begin
            btnInputOrderInfo.Enabled := False; // 発注入力
        end;
        btnSCM.Enabled := true; // SCM // 2010/05/30

        btnLineDiscount.Enabled := False; // 行値引
        btnGoodsDiscount.Enabled := False; // 商品値引
        btnAnnotation.Enabled := False; // 注釈
        btnChangeCarInfo.Enabled := False; // 車種変更
        btnStockSearch.Enabled := False; // 在庫検索
        btnChangeWarehouse.Enabled := False; // 倉庫切替
        btnTBO.Enabled := False; // TBO
        btnCopyToRC.Enabled := True; // RC  2010/06/26

        copySlipButton.Enabled := False; // 伝票複写
        toolCopySlipButton.Enabled := False;
        shipmentAddUpButton.Enabled := False; // 貸出計上
        acceptAnOrderAddUpButton.Enabled := False; // 受注計上
        estimateAddUpButton.Enabled := False; // 見積計上

        // --- 2011/08/08 XUJS ADD STA --->>>>>>
        if (editStatus = ctEDITSTATUS_AllOK) then
          searchCarChangeButton.Enabled := True   // 検索切替
        else
        // --- 2011/08/08 XUJS ADD END ---<<<<<<
        searchCarChangeButton.Enabled := False; // 検索切替

        // ガイドボタンの有効無効を設定する
        if ((colKey <> '') and
            //(colKey = 'SalesCode') or   // DEL 譚洪 K2014/01/22
            ((colKey = 'SalesCode') and (optNoBuTo <> 1)) or // ADD 譚洪 K2014/01/22
            (colKey = 'SupplierCd') or
            (colKey = 'SupplierSnm') or
            (colKey = 'SalesUnPrcDisplay') or
            (colKey = 'SalesUnitCost' ) or
            (colKey = 'ListPriceDisplay') or
            (colKey = 'BoCode') or
            (colKey = 'SupplierCdForOrder') or
            (colKey = 'DeliveredGoodsDivNm') or
            (colKey = 'FollowDeliGoodsDivNm') or
            (colKey = 'SalesRate') or           // ADD 2010/08/13
            (colKey = 'CostRate') or            // ADD 2010/08/13
            // --- 2011/08/08 XUJS ADD STA --->>>>>>
            (colKey = 'BLGoodsCode') or
            (colKey = 'WarehouseCode') or
            (colKey = 'WarehouseName') or
            (colKey = 'GoodsMakerCd') or
            (colKey = 'MakerName') or
            ((colKey = 'DtlNote') and (isOptPermitForMizuno2ndSellPriceCtl)) or    // ADD K2016/12/30 譚洪 水野商工㈱
            // --- 2011/08/08 XUJS ADD END ---<<<<<<
            (colKey = 'StockDate') or // ADD 2012/10/15
            (colKey = 'UOEResvdSectionNm')
            ) then
        begin
            guideButton.Enabled := true; // ガイド
            //guideButton.Tag := colKey;
        end
        else
        begin
            guideButton.Enabled := False; // ガイド
        end;

     end
     //返品
     else if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Return) then
     begin
        guideButton.Enabled := False; // ガイド
        rowInsert.Enabled := False; // 挿入
        rowDelete.Enabled := False; // 削除
        rowCut.Enabled := False;   // 切取
        rowCopy.Enabled := False;   // コピー

        InSertPop.Enabled := False; // 挿入
        DeletePop.Enabled := False; // 削除
        CutPop.Enabled := False;   // 切取
        CopyPop.Enabled := False;   // コピー

        // --- ADD 2011/09/20 ---------->>>>>
        W1.Enabled := False; // 仕入
        G1.Enabled := False; // 発注
        M1.Enabled := False; // 行値引
        L1.Enabled := False; // 注釈
        // --- ADD 2011/09/20 ----------<<<<<

        btnInputChange.Enabled := True; // 入力切替
        btnInputStockInfo.Enabled := False; // 仕入入力
        btnInputOrderInfo.Enabled := False; // 発注入力
        btnSCM.Enabled := false; // SCM // 2010/05/30

        btnLineDiscount.Enabled := False; // 行値引
        btnGoodsDiscount.Enabled := False; // 商品値引
        btnAnnotation.Enabled := False; // 注釈
        btnChangeCarInfo.Enabled := False; // 車種変更
        btnStockSearch.Enabled := False; // 在庫検索
        btnChangeWarehouse.Enabled := False; // 倉庫切替
        btnTBO.Enabled := False; // TBO
        btnCopyToRC.Enabled := False; // RC  2010/06/26

        copySlipButton.Enabled := False; // 伝票複写
        toolCopySlipButton.Enabled := False;
        shipmentAddUpButton.Enabled := False; // 貸出計上
        acceptAnOrderAddUpButton.Enabled := False; // 受注計上
        estimateAddUpButton.Enabled := False; // 見積計上
        searchCarChangeButton.Enabled := False; // 検索切替

        // 返品時在庫登録時、倉庫切替有効
        if ((salesTtlSt.RetGoodsStockEtyDiv = 0 ) and // 返品時在庫登録区分(0:する 1:しない)
            (salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods) and // 返品
            (RCHNB01003UADM.SalesSlipDtlNumSrc[salesRowNo -1] <> 0) // 元データあり
            and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum)) then  // 新規登録
        begin
           btnChangeWarehouse.Enabled := true; // 倉庫切替
        end;

        // ガイドボタンの有効無効を設定する
        if ((colKey <> '') and
          (colKey = 'SalesUnPrcDisplay') or
          (colKey = 'SalesUnitCost') or
          (colKey = 'SalesRate') or              // ADD 2010/08/13
          (colKey = 'CostRate') or               // ADD 2010/08/13
          ((colKey = 'DtlNote') and (isOptPermitForMizuno2ndSellPriceCtl)) or    // ADD K2016/12/30 譚洪 水野商工㈱
          (colKey = 'ListPriceDisplay'))  then
        begin
            guideButton.Enabled := true; // ガイド
            //this.uButton_Guide.Tag = colKey;
        end
        else
        begin
           guideButton.Enabled := False; // ガイド
        end;

     end
     //赤伝
     else if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Red) then
     begin
        BitBtn_Action.Enabled := false;
        guideButton.Enabled := False; // ガイド
        rowInsert.Enabled := False; // 挿入
        rowDelete.Enabled := False; // 削除
        rowCut.Enabled := False;   // 切取
        rowCopy.Enabled := False;   // コピー

        InSertPop.Enabled := False; // 挿入
        DeletePop.Enabled := False; // 削除
        CutPop.Enabled := False;   // 切取
        CopyPop.Enabled := False;   // コピー

        btnInputChange.Enabled := True; // 入力切替
        btnInputStockInfo.Enabled := False; // 仕入入力
        btnInputOrderInfo.Enabled := False; // 発注入力
        btnSCM.Enabled := false; // SCM // 2010/05/30

        btnLineDiscount.Enabled := False; // 行値引
        btnGoodsDiscount.Enabled := False; // 商品値引
        btnAnnotation.Enabled := False; // 注釈
        btnChangeCarInfo.Enabled := False; // 車種変更
        btnStockSearch.Enabled := False; // 在庫検索
        btnChangeWarehouse.Enabled := False; // 倉庫切替
        btnTBO.Enabled := False; // TBO
        btnCopyToRC.Enabled := False; // RC  2010/06/26

        copySlipButton.Enabled := False; // 伝票複写
        toolCopySlipButton.Enabled := False;
        shipmentAddUpButton.Enabled := False; // 貸出計上
        acceptAnOrderAddUpButton.Enabled := False; // 受注計上
        estimateAddUpButton.Enabled := False; // 見積計上
        searchCarChangeButton.Enabled := False; // 検索切替

        // ガイドボタンの有効無効を設定する
        if ((colKey <> '') and
          (colKey = 'SalesUnPrcDisplay') or
          (colKey = 'SalesUnitCost') or
          (colKey = 'SalesRate') or               // ADD 2010/08/13
          (colKey = 'CostRate') or                // ADD 2010/08/13
          ((colKey = 'DtlNote') and (isOptPermitForMizuno2ndSellPriceCtl)) or    // ADD K2016/12/30 譚洪 水野商工㈱
          (colKey = 'ListPriceDisplay'))  then
        begin
            guideButton.Enabled := true; // ガイド
            //this.uButton_Guide.Tag = colKey;
        end
        else
        begin
           guideButton.Enabled := False; // ガイド
        end;
     end
     else
     begin
        // ----------ADD 2010/06/02----------->>>>>
        if (Form4.ActiveControl = HNsGrid1) then
        begin
          //新規登録
          if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum)then
          begin
             //有効行のみ
             if (gpxMAHNB01013B_GridJoinCheck(0, salesRowNo - 1 , -1, 9) = 1) then
             begin
                btnChangeCarInfo.Enabled := False; // 車種変更
             end
             else
                btnChangeCarInfo.Enabled := True; // 車種変更
          end;
        end;
        // ----------ADD 2010/06/02-----------<<<<<

        // 行操作ボタンの有効無効チェック
        if (Trim(goodsName) = '') then
        begin
          rowInsert.Enabled := True; //挿入
          rowDelete.Enabled := True; // 削除
          rowCut.Enabled := False;   // 切取
          rowCopy.Enabled := False;   // コピー

          InSertPop.Enabled := True; //挿入
          DeletePop.Enabled := True; // 削除
          CutPop.Enabled := False;   // 切取
          CopyPop.Enabled := False;   // コピー
        end
        else if (editStatus = ctEDITSTATUS_AllReadOnly) then
        begin
          rowInsert.Enabled := True; //挿入
          rowDelete.Enabled := False; // 削除
          rowCut.Enabled := False;   // 切取
          rowCopy.Enabled := False;   // コピー

          InSertPop.Enabled := True; //挿入
          DeletePop.Enabled := False; // 削除
          CutPop.Enabled := False;   // 切取
          CopyPop.Enabled := False;   // コピー
        end
        else
        begin
          rowInsert.Enabled := True; //挿入
          //rowDelete.Enabled := True; // 削除 //DEL 2014/07/15 T.Miyamoto 仕掛一覧№1912
          rowCut.Enabled := True;   // 切取
          rowCopy.Enabled := True;   // コピー

          InSertPop.Enabled := True; //挿入
          //DeletePop.Enabled := True; // 削除 //DEL 2014/07/15 T.Miyamoto 仕掛一覧№1912
          CutPop.Enabled := True;   // 切取
          CopyPop.Enabled := True;   // コピー

          // --- ADD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ---------->>>>>
          rowDelete.Enabled := xRowDelChk(salesRowNo);
          DeletePop.Enabled := xRowDelChk(salesRowNo);
          // --- ADD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ----------<<<<<
        end;

        // コピー仕入明細行存在チェック処理
        if ((gpxMAHNB01013B_GridJoinCheck(salesRowNo, 0, -1, 17) = 1)
          and (editStatus <> ctEDITSTATUS_AllReadOnly))then
        begin
           rowPaste.Enabled := True;
           PastePop.Enabled := True;
        end
        else
        begin
           rowPaste.Enabled := False;
           PastePop.Enabled := False;
        end;

        // 入力補助ボタンの有効無効チェック
        case salesSlip_disp.SalesGoodsCd of
           salesGoodsCd_Goods:
           begin

             if (editStatus = ctEDITSTATUS_AllDisable) then
             begin
                guideButton.Enabled := False; // ガイド

                btnInputChange.Enabled := True; // 入力切替
                btnInputStockInfo.Enabled := True; // 仕入入力
                btnInputOrderInfo.Enabled := True; // 発注入力
                btnSCM.Enabled := true; // SCM // 2010/05/30

                btnLineDiscount.Enabled := False; // 行値引
                btnGoodsDiscount.Enabled := False; // 商品値引
                btnAnnotation.Enabled := False; // 注釈
                btnChangeCarInfo.Enabled := False; // 車種変更
                btnStockSearch.Enabled := False; // 在庫検索
                btnChangeWarehouse.Enabled := False; // 倉庫切替
                btnTBO.Enabled := False; // TBO
                btnCopyToRC.Enabled := False;        // RCへコピー   2010/06/15 Add

                copySlipButton.Enabled := False; // 伝票複写
                toolCopySlipButton.Enabled := False;
                shipmentAddUpButton.Enabled := False; // 貸出計上
                acceptAnOrderAddUpButton.Enabled := False; // 受注計上
                estimateAddUpButton.Enabled := False; // 見積計上
                searchCarChangeButton.Enabled := False; // 検索切替
             end
             else if (editStatus = ctEDITSTATUS_AllReadOnly) then
             begin
                guideButton.Enabled := False; // ガイド
                btnInputChange.Enabled := True; // 入力切替
                btnInputStockInfo.Enabled := True; // 仕入入力
                btnInputOrderInfo.Enabled := True; // 発注入力
                btnSCM.Enabled := true; // SCM // 2010/05/30

                btnLineDiscount.Enabled := False; // 行値引
                btnGoodsDiscount.Enabled := False; // 商品値引
                btnAnnotation.Enabled := False; // 注釈
                btnChangeCarInfo.Enabled := False; // 車種変更
                btnStockSearch.Enabled := False; // 在庫検索
                btnChangeWarehouse.Enabled := False; // 倉庫切替
                btnTBO.Enabled := False; // TBO
                btnCopyToRC.Enabled := True;        // RCへコピー   2010/06/15 Add

                copySlipButton.Enabled := False; // 伝票複写
          toolCopySlipButton.Enabled := False;
                shipmentAddUpButton.Enabled := False; // 貸出計上
                acceptAnOrderAddUpButton.Enabled := False; // 受注計上
                estimateAddUpButton.Enabled := False; // 見積計上
                searchCarChangeButton.Enabled := False; // 検索切替
             end
             else if (editStatus = ctEDITSTATUS_ShipmentCountOnly) then
             begin
                guideButton.Enabled := False; // ガイド
                btnInputChange.Enabled := True; // 入力切替
                btnInputStockInfo.Enabled := True; // 仕入入力
                btnInputOrderInfo.Enabled := True; // 発注入力
                btnSCM.Enabled := true; // SCM // 2010/05/30

                btnLineDiscount.Enabled := False; // 行値引
                btnGoodsDiscount.Enabled := False; // 商品値引
                btnAnnotation.Enabled := False; // 注釈
                btnChangeCarInfo.Enabled := False; // 車種変更
                btnStockSearch.Enabled := False; // 在庫検索
                btnChangeWarehouse.Enabled := False; // 倉庫切替
                btnTBO.Enabled := False; // TBO
                btnCopyToRC.Enabled := True;        // RCへコピー   2010/06/15 Add


                copySlipButton.Enabled := False; // 伝票複写
          toolCopySlipButton.Enabled := False;
                shipmentAddUpButton.Enabled := False; // 貸出計上
                acceptAnOrderAddUpButton.Enabled := False; // 受注計上
                estimateAddUpButton.Enabled := False; // 見積計上
                searchCarChangeButton.Enabled := False; // 検索切替
             end
             else if (editStatus = ctEDITSTATUS_AddUpNew) then
             begin
                guideButton.Enabled := False; // ガイド
                btnInputChange.Enabled := True; // 入力切替
                btnInputStockInfo.Enabled := True; // 仕入入力
                btnCopyToRC.Enabled := True;        // RCへコピー   2010/06/15 Add

                //>>> 2012/05/15 SCM障害№126
                //if ((RCHNB01003UADM.AcptAnOdrStatusSrc[salesRowNo -1] <> 0)
                //and (RCHNB01003UADM.AcptAnOdrStatusSrc[salesRowNo -1] <> acptAnOdrStatusState_AcceptAnOrder)) then
                if ((RCHNB01003UADM.AcptAnOdrStatusSrc[salesRowNo -1] <> 0)
                and ((RCHNB01003UADM.AcptAnOdrStatusSrc[salesRowNo -1] <> acptAnOdrStatusState_AcceptAnOrder) and
                     (RCHNB01003UADM.AcptAnOdrStatusSrc[salesRowNo -1] <> acptAnOdrStatusState_Estimate))) then
                //<<< 2012/05/15 SCM障害№126
                begin
                   btnInputOrderInfo.Enabled := False; // 発注入力
                end
                else
                begin
                   btnInputOrderInfo.Enabled := True; // 発注入力
                end;
                btnSCM.Enabled := true; // SCM // 2010/05/30

                btnLineDiscount.Enabled := False; // 行値引
                btnGoodsDiscount.Enabled := False; // 商品値引
                btnAnnotation.Enabled := False; // 注釈
                btnChangeCarInfo.Enabled := False; // 車種変更
                btnStockSearch.Enabled := False; // 在庫検索
                btnChangeWarehouse.Enabled := False; // 倉庫切替
                btnTBO.Enabled := False; // TBO

                copySlipButton.Enabled := False; // 伝票複写
          toolCopySlipButton.Enabled := False;
                shipmentAddUpButton.Enabled := False; // 貸出計上
                acceptAnOrderAddUpButton.Enabled := False; // 受注計上
                estimateAddUpButton.Enabled := False; // 見積計上
                searchCarChangeButton.Enabled := False; // 検索切替

                // ガイドボタンの有効無効を設定する
                if ((colKey <> '') and
                  //(colKey = 'SalesCode') or  // DEL 譚洪 K2014/01/22
                  ((colKey = 'SalesCode') and (optNoBuTo <> 1)) or // ADD 譚洪 K2014/01/22
                  (colKey = 'WarehouseCode') or
                  (colKey = 'WarehouseName') or
                  (colKey = 'BLGoodsCode') or
                  (colKey = 'SupplierCd') or
                  (colKey = 'SupplierSnm') or
                  (colKey = 'GoodsMakerCd') or
                  (colKey = 'MakerName') or
                  (colKey = 'SalesUnPrcDisplay') or
                  (colKey = 'SalesUnitCost') or
                  (colKey = 'ListPriceDisplay') or
                  (colKey = 'SupplierCdForStock') or
                  (colKey = 'BoCode') or
                  (colKey = 'SupplierCdForOrder') or
                  (colKey = 'DeliveredGoodsDivNm') or
                  (colKey = 'FollowDeliGoodsDivNm') or
                  ((colKey = 'DtlNote') and (isOptPermitForMizuno2ndSellPriceCtl)) or    // ADD K2016/12/30 譚洪 水野商工㈱
                  (colKey = 'SalesRate') or                // ADD 2010/08/13
                  (colKey = 'CostRate') or                 // ADD 2010/08/13
                  (colKey = 'StockDate') or // ADD 2012/10/15
                  (colKey = 'UOEResvdSectionNm'))  then
                begin
                    guideButton.Enabled := true; // ガイド
                    //this.uButton_Guide.Tag = colKey;
                end;

             end
             else if ((editStatus = ctEDITSTATUS_ExistSlip) or
               (editStatus = ctEDITSTATUS_AddUpEdit) ) then
             begin
                guideButton.Enabled := False; // ガイド
                btnInputChange.Enabled := True; // 入力切替
                btnInputStockInfo.Enabled := True; // 仕入入力
                btnInputOrderInfo.Enabled := True; // 発注入力
                btnSCM.Enabled := true; // SCM // 2010/05/30
                btnCopyToRC.Enabled := True;        // RCへコピー   2010/06/15 Add

                btnLineDiscount.Enabled := False; // 行値引
                btnGoodsDiscount.Enabled := False; // 商品値引
                btnAnnotation.Enabled := False; // 注釈
                btnChangeCarInfo.Enabled := False; // 車種変更
                btnStockSearch.Enabled := False; // 在庫検索
                btnChangeWarehouse.Enabled := False; // 倉庫切替
                btnTBO.Enabled := False; // TBO

                copySlipButton.Enabled := False; // 伝票複写
                toolCopySlipButton.Enabled := False;
                shipmentAddUpButton.Enabled := False; // 貸出計上
                acceptAnOrderAddUpButton.Enabled := False; // 受注計上
                estimateAddUpButton.Enabled := False; // 見積計上
                searchCarChangeButton.Enabled := False; // 検索切替

                // ガイドボタンの有効無効を設定する
                if ((colKey <> '') and
                  //(colKey = 'SalesCode') or   // DEL 譚洪 K2014/01/22
                  ((colKey = 'SalesCode') and (optNoBuTo <> 1)) or // ADD 譚洪 K2014/01/22
                  (colKey = 'SupplierCd') or
                  (colKey = 'SupplierSnm') or
                  (colKey = 'SalesUnPrcDisplay') or
                  (colKey = 'SalesUnitCost') or
                  (colKey = 'ListPriceDisplay') or
                  (colKey = 'BoCode') or
                  (colKey = 'SupplierCdForOrder') or
                  (colKey = 'DeliveredGoodsDivNm') or
                  (colKey = 'FollowDeliGoodsDivNm') or
                  ((colKey = 'DtlNote') and (isOptPermitForMizuno2ndSellPriceCtl)) or    // ADD K2016/12/30 譚洪 水野商工㈱
                  (colKey = 'SalesRate') or                   // ADD 2010/08/13
                  (colKey = 'CostRate') or                    // ADD 2010/08/13
                  (colKey = 'StockDate') or // ADD 2012/10/15
                  (colKey = 'UOEResvdSectionNm'))  then
                begin
                    guideButton.Enabled := true; // ガイド
                    //this.uButton_Guide.Tag = colKey;
                end
                else
                begin
                   guideButton.Enabled := False; // ガイド
                end;

                if (salesSlip_disp.AcptAnOdrStatus = acptAnOdrStatusState_AcceptAnOrder) then
                begin
                     // 行値引
                      btnLineDiscount.Enabled := false;
                     // 商品値引
                      btnGoodsDiscount.Enabled := false;
                     // 注釈
                     btnAnnotation.Enabled := false;
                     // --- DEL 2013/04/18 T.Nishi ---------->>>>>
                     //// ADD 2013/04/11 T.Miyamoto №12 ------------------------------>>>>>
                     //btnInputStockInfo.Enabled := False; // 仕入入力
                     //btnInputOrderInfo.Enabled := False; // 発注入力
                     //// ADD 2013/04/11 T.Miyamoto №12 ------------------------------<<<<<
                     // --- DEL 2013/04/18 T.Nishi ----------<<<<<
                end;
                // 2010/06/15 Add >>>
                // RCへコピーボタン
                btnCopyToRC.Enabled :=
                    ( ( salesSlip.SalesSlipCd = salesSlipCd_Sales ) and
                     ( editStatus <> ctEDITSTATUS_GoodsDiscount) and
                     ( editStatus <> ctEDITSTATUS_RowDiscount  ) and
                     ( editStatus <> ctEDITSTATUS_Annotation   ) );
                // 2010/06/15 Add <<<

             end
             else
             begin
                case salesSlip_disp.AcptAnOdrStatusDisplay of

                   AcptAnOdrStatusState_Estimate,AcptAnOdrStatusState_UnitPriceEstimate:// 見積 単価見積
                   begin
                      guideButton.Enabled := False; // ガイド
                      btnInputChange.Enabled := True; // 入力切替
                      btnInputStockInfo.Enabled := False; // 仕入入力
                      btnInputOrderInfo.Enabled := False; // 発注入力
                      btnSCM.Enabled := true; // SCM // 2010/05/30
                      btnCopyToRC.Enabled := False;        // RCへコピー   2010/06/15 Add

                      // --- UPD 2013/11/05 Wakita ---------->>>>>
                      //btnLineDiscount.Enabled := False; // 行値引
                      //btnGoodsDiscount.Enabled := False; // 商品値引
                      if (panel_InquiryNumber.Visible = false) then
                      begin
                        if (salesSlip_disp.AcptAnOdrStatusDisplay = AcptAnOdrStatusState_Estimate) then
                        begin
                          btnLineDiscount.Enabled := True; // 行値引
                          if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, 16, 13) = 1) then
                          begin
                              btnGoodsDiscount.Enabled := False; // 商品値引
                          end
                          else begin
                              btnGoodsDiscount.Enabled := True; // 商品値引
                          end;
                        end
                        else
                        begin
                          btnLineDiscount.Enabled := True; // 行値引
                          btnGoodsDiscount.Enabled := False; // 商品値引
                        end;
                      end
                      else
                      begin
                          btnLineDiscount.Enabled := False; // 行値引
                      	  btnGoodsDiscount.Enabled := False; // 商品値引
                      end;
                      // --- UPD 2013/11/05 Wakita ----------<<<<<
                      btnAnnotation.Enabled := False; // 注釈

                      btnStockSearch.Enabled := True; // 在庫検索
                      btnChangeWarehouse.Enabled := True; // 倉庫切替
                      btnTBO.Enabled := True; // TBO

                      copySlipButton.Enabled := True; // 伝票複写
                      toolCopySlipButton.Enabled := True;
                      shipmentAddUpButton.Enabled := False; // 貸出計上
                      acceptAnOrderAddUpButton.Enabled := False; // 受注計上
                      estimateAddUpButton.Enabled := False; // 見積計上
                      searchCarChangeButton.Enabled := True; // 検索切替
                   end;

                   acptAnOdrStatusState_Sales: //売上
                   begin
                      BitBtn_Action.Enabled := True;
                      guideButton.Enabled := False; // ガイド
                      btnInputChange.Enabled := True; // 入力切替
                      btnInputStockInfo.Enabled := True; // 仕入入力

                      if ((salesSlip_disp.SalesSlipCd = SalesSlipCd_Sales) and
                        (editStatus <> ctEDITSTATUS_GoodsDiscount)) then
                      begin
                         btnInputOrderInfo.Enabled := True; // 発注入力
                      end
                      else
                      begin
                        btnInputOrderInfo.Enabled := False; // 発注入力
                      end;
                      btnSCM.Enabled := true; // SCM // 2010/05/30

                      btnLineDiscount.Enabled := True; // 行値引
                      // --- UPD 2010/05/04 ---------->>>>>
                      //this.uButton_GoodsDiscount.Enabled = true; // 商品値引
                      // if (MyOpeCtrl.Disabled((int)SalesSlipInputAcs.OperationCode.SlipDiscount))
                      //{
                      //    this.uButton_GoodsDiscount.Enabled = false; // 商品値引
                      //}
                      //    if (MyOpeCtrl.Disabled((int)SalesSlipInputAcs.OperationCode.CountChange))

                      //{
                      //    this.uButton_GoodsDiscount.Enabled = true; // 商品値引
                      //}
                      if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, 16, 13) = 1) then
                      begin
                          btnGoodsDiscount.Enabled := False; // 商品値引
                      end
                      else begin
                          btnGoodsDiscount.Enabled := True; // 商品値引
                      end;

                      //btnGoodsDiscount.Enabled := True; // 商品値引
                      // --- UPD 2010/05/04 ----------<<<<<

                      btnAnnotation.Enabled := True; // 注釈
                      btnStockSearch.Enabled := True; // 在庫検索
                      btnChangeWarehouse.Enabled := True; // 倉庫切替
                      btnTBO.Enabled := True; // TBO

                      // 売上で出荷数ありのときのみ一式操作可能(行値引、注釈は対象外)
                      // ----UPD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
                      //copySlipButton.Enabled := True; // 伝票複写
                      //toolCopySlipButton.Enabled := True;
                      //shipmentAddUpButton.Enabled := True; // 貸出計上
                      //acceptAnOrderAddUpButton.Enabled := True; // 受注計上
                      //estimateAddUpButton.Enabled := True; // 見積計上
                      //非値引モード
                      if (not discountAllLineflag) then
                      begin
                      copySlipButton.Enabled := True; // 伝票複写
                      toolCopySlipButton.Enabled := True;
                      shipmentAddUpButton.Enabled := True; // 貸出計上
                      acceptAnOrderAddUpButton.Enabled := True; // 受注計上
                      estimateAddUpButton.Enabled := True; // 見積計上
                      end;
                      // ----UPD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
                      searchCarChangeButton.Enabled := True; // 検索切替
                      // ---------2010/09/19--------->>>>>
                      if salesSlip_disp.AcptAnOdrStatus = acptAnOdrStatusState_AcceptAnOrder then
                      begin
                        // ----UPD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
                        //shipmentAddUpButton.Enabled := False; // 貸出計上
                        //acceptAnOrderAddUpButton.Enabled := False; // 受注計上
                        //estimateAddUpButton.Enabled := True; // 見積計上
                        //非値引モード
                        if (not discountAllLineflag) then
                        begin
                        shipmentAddUpButton.Enabled := False; // 貸出計上
                        acceptAnOrderAddUpButton.Enabled := False; // 受注計上
                        estimateAddUpButton.Enabled := True; // 見積計上
                        end;
                        // ----UPD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
                        searchCarChangeButton.Enabled := True; // 検索切替
                      end;
                      // ---------2010/09/19---------<<<<<
                      // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
                      //値引モード
                      if (discountAllLineflag) then
                      begin
                         btnInputStockInfo.Enabled := False; // 仕入入力
                         btnLineDiscount.Enabled := False; // 行値引
                         btnAnnotation.Enabled := False; // 注釈
                         btnGoodsDiscount.Enabled := False; // 商品値引
                         btnInputOrderInfo.Enabled := False; // 発注入力
                         W1.Enabled := False; // 仕入
                         G1.Enabled := False; // 発注
                         M1.Enabled := False; // 行値引
                         L1.Enabled := False; // 注釈
                   end;
                      // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
                   end;

                   AcptAnOdrStatusState_Shipment: //出荷
                   begin
                      guideButton.Enabled := False; // ガイド
                      btnInputChange.Enabled := True; // 入力切替
//>>>2012/05/02
//                      btnInputStockInfo.Enabled := False; // 仕入入力
                      if (salesTtlSt.RentStockDiv = 0) then
                        btnInputStockInfo.Enabled := False //仕入
                      else
                        btnInputStockInfo.Enabled := True; //仕入
//<<<2012/05/02
                      btnInputOrderInfo.Enabled := False; // 発注入力
                      btnSCM.Enabled := true; // SCM // 2010/05/30

                      btnLineDiscount.Enabled := False; // 行値引
                      btnGoodsDiscount.Enabled := False; // 商品値引
                      btnAnnotation.Enabled := False; // 注釈

                      btnStockSearch.Enabled := True; // 在庫検索
                      btnChangeWarehouse.Enabled := True; // 倉庫切替
                      btnTBO.Enabled := True; // TBO

                      copySlipButton.Enabled := True; // 伝票複写
          toolCopySlipButton.Enabled := True;
                      shipmentAddUpButton.Enabled := False; // 貸出計上
                      acceptAnOrderAddUpButton.Enabled := False; // 受注計上
                      estimateAddUpButton.Enabled := True; // 見積計上
                      searchCarChangeButton.Enabled := True; // 検索切替
                   end;

                   // --- DEL 2013/04/18 T.Nishi ---------->>>>>
                   //// ADD 2013/02/05 T.Miyamoto ------------------------------>>>>>
                   //acptAnOdrStatusState_AcceptAnOrder: // 受注
                   //begin
                   //   guideButton.Enabled := False;       // ガイド
                   //   btnInputChange.Enabled := True;     // 入力切替
                   //   btnInputStockInfo.Enabled := False; // 仕入入力
                   //   btnInputOrderInfo.Enabled := False; // 発注入力
                   //   btnSCM.Enabled := true;             // SCM
                   //   btnCopyToRC.Enabled := False;       // RCへコピー
                   //
                   //   btnLineDiscount.Enabled := False;   // 行値引
                   //   btnGoodsDiscount.Enabled := False;  // 商品値引
                   //   btnAnnotation.Enabled := False;     // 注釈
                   //
                   //   btnStockSearch.Enabled := True;     // 在庫検索
                   //   btnChangeWarehouse.Enabled := True; // 倉庫切替
                   //   btnTBO.Enabled := True;             // TBO
                   //
                   //   copySlipButton.Enabled := True;             // 伝票複写
                   //   toolCopySlipButton.Enabled := True;
                   //   shipmentAddUpButton.Enabled := False;       // 貸出計上
                   //   acceptAnOrderAddUpButton.Enabled := False;  // 受注計上
                   //   estimateAddUpButton.Enabled := False;       // 見積計上
                   //   searchCarChangeButton.Enabled := True;      // 検索切替
                   //end;
                   //// ADD 2013/02/05 T.Miyamoto ------------------------------<<<<<
                   // --- DEL 2013/04/18 T.Nishi ----------<<<<<
                end;

                if ((editStatus = ctEDITSTATUS_Annotation)
                   or (editStatus = ctEDITSTATUS_GoodsDiscount)
                   or (editStatus = ctEDITSTATUS_RowDiscount)) then
                begin
                   btnCopyToRC.Enabled := False;
                end
                else
                begin
                   btnCopyToRC.Enabled := True;
                end;


                // ガイドボタンの有効無効を設定する
                if ((colKey <> '') and
                  //(colKey = 'SalesCode') or   // DEL 譚洪 K2014/01/22
                  ((colKey = 'SalesCode') and (optNoBuTo <> 1)) or // ADD 譚洪 K2014/01/22
                  (colKey = 'WarehouseCode') or
                  (colKey = 'WarehouseName') or
                  (colKey = 'BLGoodsCode') or
                  (colKey = 'SupplierCd') or
                  (colKey = 'SupplierSnm') or
                  (colKey = 'GoodsMakerCd') or
                  (colKey = 'MakerName') or
                  (colKey = 'SalesUnPrcDisplay') or
                  (colKey = 'SalesUnitCost') or
                  (colKey = 'ListPriceDisplay') or
                  (colKey = 'SupplierCdForStock') or
                  (colKey = 'BoCode') or
                  (colKey = 'SupplierCdForOrder') or
                  (colKey = 'DeliveredGoodsDivNm') or
                  (colKey = 'FollowDeliGoodsDivNm') or
                  ((colKey = 'DtlNote') and (isOptPermitForMizuno2ndSellPriceCtl)) or    // ADD K2016/12/30 譚洪 水野商工㈱
                  (colKey = 'SalesRate') or                // ADD 2010/08/13
                  (colKey = 'CostRate') or                 // ADD 2010/08/13
                  (colKey = 'StockDate') or // ADD 2012/10/15
                  (colKey = 'UOEResvdSectionNm'))  then
                begin
                    guideButton.Enabled := true; // ガイド
                    //this.uButton_Guide.Tag = colKey;
                end
                else
                begin
                   guideButton.Enabled := False; // ガイド
                end;

                //修正明細
                if (RCHNB01003UADM.SalesSlipDtlNum[salesRowNo -1] <> 0) then
                begin
                   btnLineDiscount.Enabled := False; // 行値引
                   btnGoodsDiscount.Enabled := False; // 商品値引
                   btnAnnotation.Enabled := False; // 注釈
                   btnChangeCarInfo.Enabled := False; // 車種変更
                   btnChangeWarehouse.Enabled := False; // 倉庫切替
                end;

                if (salesSlip_disp.AcptAnOdrStatus = AcptAnOdrStatusState_AcceptAnOrder) then
                begin
                   btnLineDiscount.Enabled := False; // 行値引
                   btnGoodsDiscount.Enabled := False; // 商品値引
                   btnAnnotation.Enabled := False; // 注釈
                end;

             end;

           end;

        else
          begin
             guideButton.Enabled := False; // ガイド
             btnInputChange.Enabled := False; // 入力切替
             btnInputStockInfo.Enabled := False; // 仕入入力
             btnInputOrderInfo.Enabled := False; // 発注入力
             btnSCM.Enabled := false; // SCM // 2010/05/30

             btnLineDiscount.Enabled := False; // 行値引
             btnGoodsDiscount.Enabled := False; // 商品値引
             btnAnnotation.Enabled := False; // 注釈
             btnChangeCarInfo.Enabled := False; // 車種変更
             btnStockSearch.Enabled := False; // 在庫検索
             btnChangeWarehouse.Enabled := False; // 倉庫切替
             btnTBO.Enabled := False; // TBO

             copySlipButton.Enabled := False; // 伝票複写
       toolCopySlipButton.Enabled := False;
             shipmentAddUpButton.Enabled := False; // 貸出計上
             acceptAnOrderAddUpButton.Enabled := False; // 受注計上
             estimateAddUpButton.Enabled := False; // 見積計上
             searchCarChangeButton.Enabled := False; // 検索切替
          end;

        end;

//>>>2012/05/02
//        // 仕入入力
//        if (salesTtlSt.SalesStockDiv = 0) then //売上全体設定マスタ 売上仕入区分 0:しない 1:する 2:必須入力
//        begin
//           btnInputStockInfo.Enabled := False; //仕入
//        end;

        if salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_Shipment then begin
          // 仕入入力
          if (salesTtlSt.RentStockDiv = 0) then //売上全体設定マスタ 貸出仕入区分 0:しない 1:する 2:必須入力
          begin
             btnInputStockInfo.Enabled := False; //仕入
          end;
        end else begin
        // 仕入入力
        if (salesTtlSt.SalesStockDiv = 0) then //売上全体設定マスタ 売上仕入区分 0:しない 1:する 2:必須入力
        begin
           btnInputStockInfo.Enabled := False; //仕入
        end;
        end;

//<<<2012/05/02

        // 車種変更
        if ((gpxMAHNB01013B_GridJoinCheck(salesRowNo, 0, -1, 18) = 1) and
          (RCHNB01003UADM.AcceptAnOrderNo[salesRowNo -1] <> 0)) then
        begin
           btnChangeCarInfo.Enabled := False;
        end;
        //>>>2010/05/30
        if salesSlip_disp.OnlineKindDiv <> 10 then
        begin
          btnscm.Enabled := false;
//>>>2011/05/25
//        end;
          pnl47.Visible := true;
          TotalDay.Visible := true;
          Label4.Visible := true;
          CollectMoney.Visible := true;
          Label6.Visible := true;
          HEdit_PartySalesSlipNum.Visible := false;
          Label_PartySalesSLipNum.Visible := false;
          // ADD 2013/02/12 SCM障害№10280対応------------------------>>>>>
          // UPD 2013/02/25 2013/03/13配信 システムテスト障害対応 ------------->>>>>
          //pnl_PartySaleSlipNum.Visible := true;
          case salesSlip_disp.CustOrderNoDispDiv of
          0: //しない
            begin
              pnl_PartySaleSlipNum.Visible := false;
            end;
          1: //する
            begin
              pnl_PartySaleSlipNum.Visible := true;
            end;
          end;
          // UPD 2013/02/25 2013/03/13配信 システムテスト障害対応 -------------<<<<<
          // ADD 2013/02/12 SCM障害№10280対応------------------------<<<<<
       end else begin
          pnl47.Visible := false;
          TotalDay.Visible := false;
          Label4.Visible := false;
          CollectMoney.Visible := false;
          Label6.Visible := false;
          HEdit_PartySalesSlipNum.Visible := true;
          Label_PartySalesSLipNum.Visible := true;
           // ADD 2013/02/12 SCM障害№10280対応------------------------>>>>>
          pnl_PartySaleSlipNum.Visible := false;
          // ADD 2013/02/12 SCM障害№10280対応------------------------<<<<<
       end;
//<<<2011/05/25
        //<<<2010/05/30

        //>>>2011/02/01
        // SCM情報ありの伝票の場合、行操作不可
        if (salesSlip_disp.InquiryNumber <> 0) then begin
          //>>>2012/05/15 SCM障害№126
          //btnInputOrderInfo.Enabled := False; // 発注入力 // 2012/01/20 // SF連携伝票のUOE発注は不可
          //<<<2012/05/15 SCM障害№126
          // ADD 2013/04/16 SCM障害№10515対応 ----------------------->>>>>
          // 車種変更使用不可
           btnChangeCarInfo.Enabled := False;
          // ADD 2013/04/16 SCM障害№10515対応 -----------------------<<<<<
          if (salesSlip_disp.SalesSlipNum <> ctDefaultSalesSlipNum) then begin
            //>>>2011/03/09
//            rowInsert.Enabled := False; //挿入
//            rowDelete.Enabled := False; // 削除
//            rowCut.Enabled := False;   // 切取
//            rowCopy.Enabled := False;   // コピー
//
//            InSertPop.Enabled := False; //挿入
//            DeletePop.Enabled := False; // 削除
//            CutPop.Enabled := False;   // 切取
//            CopyPop.Enabled := False;   // コピー

            gpxMAHNB01013B_ExistSCMInfo(ret, salesSlip_disp.SalesSlipNum, salesRowNo);
            if (ret) then begin
              rowInsert.Enabled := False; //挿入
              rowDelete.Enabled := False; // 削除
              rowCut.Enabled := False;   // 切取
              rowCopy.Enabled := False;   // コピー

              InSertPop.Enabled := False; //挿入
              DeletePop.Enabled := False; // 削除
              CutPop.Enabled := False;   // 切取
              CopyPop.Enabled := False;   // コピー
            end;
            //<<<2011/03/09
          end else begin
            //>>>2011/03/05
//            gpxMAHNB01013B_ExistSCMInfo(ret, salesSlip_disp.SalesSlipNum, salesRowNo);
//            if (ret) then begin
//              rowInsert.Enabled := False; //挿入
//              rowDelete.Enabled := False; // 削除
//              rowCut.Enabled := False;   // 切取
//              rowCopy.Enabled := False;   // コピー
//
//              InSertPop.Enabled := False; //挿入
//              DeletePop.Enabled := False; // 削除
//              CutPop.Enabled := False;   // 切取
//              CopyPop.Enabled := False;   // コピー
//            end;
            //<<<2011/03/05
          end;
        end;
        //<<<2011/02/01
     end;

     // --- ADD 2012/12/21 T.Miyamoto ------------------------------>>>>>
     if (optStockEntCtrl = 1) then // 売仕入同時入力制御オプション(OPT-CPM0050)がオンの場合
     begin
       if (btnInputStockInfo.Enabled = True) then
       begin
         if (salesSlip_disp.SalesSlipCd = salesSlipCd_Sales) then
         begin
           btnInputStockInfo.Enabled := True;
         end
         else
         begin // 伝票区分が『掛返品／現金返品』の場合、仕入ボタン操作不可
           btnInputStockInfo.Enabled := False;
         end;
       end;
     end;
     // --- ADD 2012/12/21 T.Miyamoto ------------------------------<<<<<

     // 前行複写、一括複写
     if ((gpxMAHNB01013B_GridJoinCheck(salesRowNo, 0, -1, 1) = 1) or
     (gpxMAHNB01013B_GridJoinCheck(salesRowNo, 0, -1, 6) = 1) or
     (gpxMAHNB01013B_GridJoinCheck(salesRowNo, 0, -1, 16) = 0) or
     (editStatus = ctEDITSTATUS_GoodsDiscount) or
     (btnInputStockInfo.Enabled = False)) then
     begin
        btnCopyStockBefLine.Enabled := False;
        btnCopyStockAllLine.Enabled := False;
     end
     else
     begin
        if (salesRowNo = 1) then
        begin
           btnCopyStockBefLine.Enabled := False;
           btnCopyStockAllLine.Enabled := False;
        end
        else
        begin
           btnCopyStockBefLine.Enabled := True;
           btnCopyStockAllLine.Enabled := True;
        end;
     end;

     // --- ADD 2010/06/02 ---------->>>>>
     //「受注数」「出荷数」にフォーカスが位置付いている時のみ、「倉庫切替（F8）」を有効とする。
     // --- ADD 2010/07/01 ---------->>>>>
     //if ((colKey <> 'AcceptAnOrderCntDisplay') and (colKey <> 'ShipmentCntDisplay')) then //DEL 2010/07/01
     if ((colKey <> 'AcceptAnOrderCntDisplay') and (colKey <> 'ShipmentCntDisplay') and (colKey <> 'WarehouseCode')) then
     // --- ADD 2010/07/01 ----------<<<<<
     begin
        btnChangeWarehouse.Enabled := False; // 倉庫切替
     end;
     // --- ADD 2010/06/02 ----------<<<<<
     // ----------- ADD 連番729 2011/08/18 --------------- >>>>>
     // 明細貼付
     //---UPD BY 凌小青 on 2013/01/14 for Redmine#33793 ------>>>>>
     //if IsGoodsNoFromXMLExist and ((colKey = 'BLGoodsCode') or (colKey = 'GoodsNo')) then
     if ((colKey = 'BLGoodsCode') or (colKey = 'GoodsNo')) then 
     //---UPD BY 凌小青 on 2013/01/14 for Redmine#33793 ------<<<<<
     begin
        detailCopyButton.Enabled := True;
        toolMenu_detailCopyBtn.Enabled := True;
     end else begin
        detailCopyButton.Enabled := False;
        toolMenu_detailCopyBtn.Enabled := False;
     end;
     // ----------- ADD 連番729 2011/08/18 --------------- <<<<<
     // --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ----------------->>>>>
     // --- ADD  譚洪 2015/10/26 Redmine#47609 ---------->>>>>
     if(isOptPermitForFuJi)then
     begin
     // --- ADD  譚洪 2015/10/26 Redmine#47609 ----------<<<<<
     if (Form4.ActiveControl = HNsGrid1) then
     begin
        // --- UPD 呉元嘯 2020/11/09 PMKOBETSU-4085対応 -------->>>>>
        //UOEDataGet.Enabled := True;
        //toolMenu_UOEDataGet.Enabled := True;
        //一括値引と返品の場合、「回答取込」ボタンが非活性
        if (discountAllLineflag = False) and (salesSlip_disp.SalesSlipCd <> salesSlipCd_RetGoods)then
        begin
          UOEDataGet.Enabled := True;
          toolMenu_UOEDataGet.Enabled := True;
        end
        else
        begin
          UOEDataGet.Enabled := False;
          toolMenu_UOEDataGet.Enabled := False;
        end;
        // --- UPD 呉元嘯 2020/11/09 PMKOBETSU-4085対応 --------<<<<<
     end else
     begin
        UOEDataGet.Enabled := False;
        toolMenu_UOEDataGet.Enabled := False;
     end;
     end;// ADD  譚洪 2015/10/26 Redmine#47609
     // --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 -----------------<<<<<

     // --- DEL K2015/09/15 紀飛 #Redmine47186障害一覧#38 売上伝票入力でF10キーにて明細に移動した場合、「回答取込」ボタンが非活性となる----->>>>>
     // --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 ----------------->>>>>
     //if (Form4.ActiveControl = HNsGrid1) then
     //begin
     //   UOEDataGet.Enabled := True;
     //   toolMenu_UOEDataGet.Enabled := True;
     //end else
     //begin
     //   UOEDataGet.Enabled := False;
     //   toolMenu_UOEDataGet.Enabled := False;
     //end;
     // --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 -----------------<<<<<
     // --- DEL K2015/09/15 紀飛 #Redmine47186障害一覧#38 売上伝票入力でF10キーにて明細に移動した場合、「回答取込」ボタンが非活性となる-----<<<<<

     // --- DEL  30757 佐々木　貴英 K2015/10/05 ----------------->>>>>
     //// --- ADD K2015/09/17 紀飛 #Redmine47186障害一覧#53 「回答取込」ボタン活性状態の問題----->>>>>
     //if (Form4.ActiveControl = HNsGrid1) then
     //begin
     //   UOEDataGet.Enabled := True;
     //   toolMenu_UOEDataGet.Enabled := True;
     //end else
     //begin
     //   UOEDataGet.Enabled := False;
     //   toolMenu_UOEDataGet.Enabled := False;
     //end;
     //// --- ADD K2015/09/17 紀飛 #Redmine47186障害一覧#53 「回答取込」ボタン活性状態の問題-----<<<<<
     // --- DEL  30757 佐々木　貴英 K2015/10/05 -----------------<<<<<

     // --- ADD m.suzuki 2010/06/16 ---------->>>>>
     if ( bOnlineFlag = False ) then
     begin
       //オフライン時は入力切り替え不可とする（品番検索固定）
       searchCarChangeButton.Enabled := False;
     end;
     // --- ADD m.suzuki 2010/06/16 ----------<<<<<

     // --------ADD 2010/06/26-------->>>>>
     // 伝票区分が「返品」の場合は【RCへコピー】を無効にする。
     if (SalesSlipDisplayComBo.SelCode = 20) or (SalesSlipDisplayComBo.SelCode = 40) then
     begin
        btnCopyToRC.Enabled := False;
     end;
     //出荷数＝マイナスの場合は赤伝として【RCへコピー】のボタンを無効にする。
     if ((HNsGrid1.Row > 2) and (RCHNB01003UADM.ShipmentCntDisplay[salesRowNo -1 ] < 0)) then
     begin
        btnCopyToRC.Enabled := False;
     end;
     // --------ADD 2010/06/26--------<<<<<
     // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
     //値引モード
     if (discountAllLineflag) then
     begin
       btnCopyToRC.Enabled := False; // RCへコピー
     end;
     // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
// 2011/01/31 >>>
  finally
    // ツールバーオプション側のボタンは、最後にEnabledをオリジナルからコピーする
    toolMenu_closeButton.Enabled := closeButton.Enabled;
    toolMenu_newButton.Enabled := newButton.Enabled;
    toolMenu_saveButton.Enabled := saveButton.Enabled;
    toolMenu_deleteSlipButton.Enabled := deleteSlipButton.Enabled;
    toolMenu_returnButton.Enabled := returnButton.Enabled;
    toolMenu_forwardButton.Enabled := forwardButton.Enabled;
    toolMenu_searchCarChangeButton.Enabled := searchCarChangeButton.Enabled;
    toolMenu_guideButton.Enabled := guideButton.Enabled;
    toolMenu_ReadSlipButton.Enabled := ReadSlipButton.Enabled;
    toolMenu_shipmentAddUpButton.Enabled := shipmentAddUpButton.Enabled;
    toolMenu_acceptAnOrderAddUpButton.Enabled := acceptAnOrderAddUpButton.Enabled;
    toolMenu_estimateAddUpButton.Enabled := estimateAddUpButton.Enabled;
    toolMenu_SlipHeaderCopyButton.Enabled := SlipHeaderCopyButton.Enabled;
    toolMenu_UpdateButton.Enabled := updateButton.Enabled;

    // ADD 2013/04/11 T.Miyamoto №11 ------------------------------>>>>>
    // 2013/04/16 2013/05/15配信SCM障害№10516対応も同じ対応ですのでコメントのみ記載--------->>>>>
    W1.Enabled := btnInputStockInfo.Enabled; // 仕入入力
    G1.Enabled := btnInputOrderInfo.Enabled; // 発注入力
    M1.Enabled := btnLineDiscount.Enabled;   // 行値引
    L1.Enabled := btnAnnotation.Enabled;     // 注釈
    //// ADD 2013/04/11 T.Miyamoto №11 ------------------------------<<<<<
  end;
// 2011/01/31 <<<
end;

// *************************************************************************
// 0埋め処理
// *************************************************************************
function TForm4.xStringZeroAdd(str: string; count: Integer):string;
var i, num : Integer;
begin
  if (str <> '') then
  begin
    num := count - Length(str);
    if (num > 0) then
    begin
      for i:=0 to num - 1 do
      begin
        str := '0' + str;
      end;
    end;
  end;

  Result := str;
end;

// *************************************************************************
// メモ入力設定処理
// *************************************************************************
procedure TForm4.xIsAllowEditSlipMemoExistColumn(rowIndex: Integer; colIndex: Integer; salesRowNo: Integer);
begin
  if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 0) = 1) then
    //TODO:this.uGrid_Details.DisplayLayout.Rows[rowIndex].Cells[this._salesDetailDataTable.SlipMemoExistColumn.ColumnName].Appearance.Image = this._guideButtonImage;
    HNsGrid1.Cells[colIndex, rowIndex] := '☆'
  else
    //TODO:this.uGrid_Details.DisplayLayout.Rows[rowIndex].Cells[this._salesDetailDataTable.SlipMemoExistColumn.ColumnName].Appearance.Image = null;;
    HNsGrid1.Cells[colIndex, rowIndex] := '';
end;

// *************************************************************************
// GridCloum制御処理
// *************************************************************************
function TForm4.xGridColumnDisCheck(rowIndex: Integer; colIndex: Integer; mode:Integer): Boolean;
var checkResult : Boolean;
begin
  case mode of
  // 編集可能
  0:
    begin
      if (HNsGrid1.ReadOnly[colIndex, rowIndex] = False) then
        checkResult := True
      else
        checkResult := False;
    end;
  // 編集不可:NoEdit
  1:
    begin
      if ((HNsGrid1.ReadOnly[colIndex, rowIndex] = True) and (HNsGrid1.ColorsTo[colIndex, rowIndex] = clNone)) then
        checkResult := True
      else
        checkResult := False;
    end;
  // 使用不可:Disable
  2:
    begin
      if ((HNsGrid1.ReadOnly[colIndex, rowIndex] = True) and (HNsGrid1.ColorsTo[colIndex, rowIndex] = $DEDFDE)) then
        checkResult := True
      else
        checkResult := False;
    end;
  end;

  Result := checkResult;
end;

// *************************************************************************
// GridColIndexToName処理
// *************************************************************************
function TForm4.xGridColIndexToName(rowIndex: Integer; colIndex: Integer): string;
begin
  Result := '';
  // 行番号
  if (colIndex = 0) then
  begin
  Result := 'SalesRowNoDisplay';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // BLコード
  if ((colIndex = ctCol_BLGoodsCode) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'BLGoodsCode';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  //品番
  if ((colIndex = ctCol_GoodsNo) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'GoodsNo';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 品名
  if ((colIndex = ctCol_GoodsName) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'GoodsName';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 純優
  if ((colIndex = ctCol_GoodsKindCode) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'GoodsKindCode';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // メーカー
  if ((colIndex = ctCol_GoodsMakerCd) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'GoodsMakerCd';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 仕入先
  if ((colIndex = ctCol_SupplierCd) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'SupplierCd';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 受注数
  if ((colIndex = ctCol_AcceptAnOrderCntDisplay) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'AcceptAnOrderCntDisplay';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  //出荷数
  if ((colIndex = ctCol_ShipmentCntDisplay) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'ShipmentCntDisplay';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 販売区分
  if ((colIndex = ctCol_SalesCode) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'SalesCode';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 定価
  if ((colIndex = ctCol_ListPriceDisplay) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'ListPriceDisplay';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // オープン価格区分イメージ OP
  if ((colIndex = ctCol_OpenPriceDivDisplay) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'OpenPriceDivDisplay';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 原価率
  if ((colIndex = ctCol_CostRate) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'CostRate';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  //売価率
  if ((colIndex = ctCol_SalesRate) and ((rowIndex mod 2) = 1 )) then
  begin
  Result := 'SalesRate';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 原価単価
  if ((colIndex = ctCol_SalesUnitCost) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'SalesUnitCost';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  //売上単価
  if ((colIndex = ctCol_SalesUnPrcDisplay) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'SalesUnPrcDisplay';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  //原価金額
  if ((colIndex = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'SalesMoneyDisplay';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 売上金額
  if ((colIndex = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'SalesMoneyDisplay';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 明細備考
  if ((colIndex = ctCol_DtlNote) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'DtlNote';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  //得意先注番
  if ((colIndex = ctCol_PartySlipNumDtl) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'PartySlipNumDtl';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 納品完了予定日
  if ((colIndex = ctCol_DeliGdsCmpltDueDate) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'DeliGdsCmpltDueDate';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 一式番号
  if ((colIndex = ctCol_CmpltSalesRowNo) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'CmpltSalesRowNo';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // BO
  if ((colIndex = ctCol_BoCode) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'BoCode';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  //発注先名称
  if ((colIndex = ctCol_SupplierSnmForOrder) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'SupplierSnmForOrder';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 発注先
  if ((colIndex = ctCol_SupplierCdForOrder) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'SupplierCdForOrder';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 発注数
  if ((colIndex = ctCol_AcceptAnOrderCntForOrder) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'AcceptAnOrderCntForOrder';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 納品区分
  if ((colIndex = ctCol_DeliveredGoodsDivNm) and ((rowIndex mod 2) = 0))then
  begin
  Result := 'DeliveredGoodsDivNm';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  //指定拠点
  if ((colIndex = ctCol_UOEResvdSectionNm) and ((rowIndex mod 2) = 1))then
  begin
  Result := 'UOEResvdSectionNm';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // H納品区分
  if ((colIndex = ctCol_FollowDeliGoodsDivNm) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'FollowDeliGoodsDivNm';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 倉庫
  if ((colIndex = ctCol_WarehouseCode) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'WarehouseCode';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  //現在庫数
  if ((colIndex = ctCol_SupplierStockDisplay) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'SupplierStockDisplay';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 棚番
  if ((colIndex = ctCol_WarehouseShelfNo) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'WarehouseShelfNo';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 仕入伝票番号
  if ((colIndex = ctCol_PartySalesSlipNum) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'PartySalesSlipNum';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  //仕入先
  if ((colIndex = ctCol_SupplierCdForStock) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'SupplierCdForStock';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // 仕入日
  if ((colIndex = ctCol_StockDate) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'StockDate';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // メモ存在イメージ
  if ((colIndex = ctCol_SlipMemoExist) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'SlipMemoExist';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  //>>>2010/05/30
  // RC区分
  if ((colIndex = ctCol_RecycleDivNm) and ((rowIndex mod 2) = 0)) then
  begin
  Result := 'RecycleDivNm';
  // 2010/10/26 Sasaki >>>
  //end;
  end else
  // 2010/10/26 Sasaki <<<

  // PS管理番号
  if ((colIndex = ctCol_GoodsMngNo) and ((rowIndex mod 2) = 1)) then
  begin
  Result := 'GoodsMngNo';
  end;
  //<<<2010/05/30

end;

// *************************************************************************
// GridCloum設定処理
// *************************************************************************
procedure TForm4.xGridColumnDisSet(rowIndex: Integer; colIndex: Integer; mode:Integer);
begin
  case mode of
  // 編集可能
  0:
    begin
      // 2010/10/26 Sasaki >>>
//      HNsGrid1.ReadOnly[colIndex, rowIndex] := False;
//      HNsGrid1.ColorsTo[colIndex, rowIndex] := clNone;
//      HNsGrid1.Colors[colIndex, rowIndex] := clNone;
//      HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;

      if (HNsGrid1.ReadOnly[colIndex, rowIndex] <> False) then
      HNsGrid1.ReadOnly[colIndex, rowIndex] := False;
      if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> clNone) then
      HNsGrid1.ColorsTo[colIndex, rowIndex] := clNone;
      if (HNsGrid1.Colors[colIndex, rowIndex] <> clNone) then
      HNsGrid1.Colors[colIndex, rowIndex] := clNone;
      if (HNsGrid1.FontColors[colIndex, rowIndex] <> clBlack) then
      HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;
      // 2010/10/26 Sasaki <<<
    end;
  // 編集不可
  1:
    begin
      // 2010/10/26 Sasaki >>>
//      HNsGrid1.ReadOnly[colIndex, rowIndex] := True;
//      HNsGrid1.ColorsTo[colIndex, rowIndex] := clNone;
//      HNsGrid1.Colors[colIndex, rowIndex] := clNone;
//      HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;
      if (HNsGrid1.ReadOnly[colIndex, rowIndex] <> True) then
      HNsGrid1.ReadOnly[colIndex, rowIndex] := True;
      if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> clNone) then
      HNsGrid1.ColorsTo[colIndex, rowIndex] := clNone;
      if (HNsGrid1.Colors[colIndex, rowIndex] <> clNone) then
      HNsGrid1.Colors[colIndex, rowIndex] := clNone;
      if (HNsGrid1.FontColors[colIndex, rowIndex] <> clBlack) then
      HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;
      // 2010/10/26 Sasaki <<<
    end;
  // 使用不可
  2:
    begin
      // 2010/10/26 Sasaki >>>
//      HNsGrid1.ReadOnly[colIndex, rowIndex] := True;
//      HNsGrid1.ColorsTo[colIndex, rowIndex] := $DEDFDE;
//      HNsGrid1.Colors[colIndex, rowIndex] := $DEDFDE;
      if (HNsGrid1.ReadOnly[colIndex, rowIndex] <> True) then
      HNsGrid1.ReadOnly[colIndex, rowIndex] := True;
      if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> $DEDFDE) then
      HNsGrid1.ColorsTo[colIndex, rowIndex] := $DEDFDE;
      if (HNsGrid1.Colors[colIndex, rowIndex] <> $DEDFDE) then
      HNsGrid1.Colors[colIndex, rowIndex] := $DEDFDE;
      // 2010/10/26 Sasaki <<<
    end;
  end;
end;

// *************************************************************************
// TransparentFontColor設定処理
// *************************************************************************
procedure TForm4.xTransparentFontColorSet(rowIndex: Integer; colIndex: Integer; mode:Integer);
begin
  case mode of
  // ForColor =  Color.Transparent
  0:
  begin
    if xGridColumnDisCheck(rowIndex, colIndex, 2) = False then
    begin
      // disable
      if (HNsGrid1.ColorsTo[colIndex, rowIndex] = $DEDFDE) then
        HNsGrid1.FontColors[colIndex, rowIndex] := $DEDFDE
      // NoEdit
      else HNsGrid1.FontColors[colIndex, rowIndex] := clBtnHighlight;
    end;

  end;

  // ForeColorDisabled =  Color.Transparent
  1:
  begin
    // disable
    if xGridColumnDisCheck(rowIndex, colIndex, 2) = True then
      HNsGrid1.FontColors[colIndex, rowIndex] := $DEDFDE
  end;
  end;
end;

// *************************************************************************
// FontColor設定処理
// *************************************************************************
procedure TForm4.xAllowEditorFontColorSet(rowIndex: Integer; colIndex: Integer; fontColor: Integer);
begin
  // AllowEdit
  if xGridColumnDisCheck(rowIndex, colIndex, 2) = False then
    HNsGrid1.FontColors[colIndex, rowIndex] := fontColor;
end;

// *************************************************************************
// TransparentFontColorCheck設定処理
// *************************************************************************
function TForm4.xTransparentFontColorCheck(rowIndex: Integer; colIndex: Integer):Boolean;
var checkResult: Boolean;
begin
  checkResult := False;
  // disable
  if (HNsGrid1.FontColors[colIndex, rowIndex] = $DEDFDE) then
    checkResult := True
  // NoEdit
  else if (HNsGrid1.FontColors[colIndex, rowIndex] = clBtnHighlight) then
    checkResult := True;

  Result := checkResult;
end;

// *************************************************************************
// AcceptAnOrderCntDisplayCheck設定処理
// *************************************************************************
function TForm4.xAcceptAnOrderCntDisplayCheck(rowIndex: Integer; colIndex: Integer):Boolean;
var checkResult: Boolean;
    editStatus:  Integer;
begin
  editStatus := RCHNB01003UADM.EditStatus[rowIndex div 2 -1 ];
  checkResult := False;
  // 通常入力の受注数
  if ((colIndex = ctCol_AcceptAnOrderCntDisplay) and ((rowIndex mod 2) = 0)) then
  begin
    if ((editStatus <> ctEDITSTATUS_AllDisable)  //全項目無効
      and (editStatus <> ctEDITSTATUS_AllReadOnly)  //参照のみ
      and (editStatus <> ctEDITSTATUS_ShipmentCountOnly) //数量のみ編集可
      and (editStatus <> ctEDITSTATUS_AddUpNew)     //計上新規
      and (editStatus <> ctEDITSTATUS_ExistSlip)     //通常修正
      and (editStatus <> ctEDITSTATUS_AddUpEdit)     //計上編集
      and (editStatus <> ctEDITSTATUS_RowDiscount)   //行値引
      and (editStatus <> ctEDITSTATUS_Annotation)   //注釈
      and (salesSlip_disp.AcptAnOdrStatusDisplay <> AcptAnOdrStatusState_UnitPriceEstimate)) then //単価見積
      checkResult := True;
  end;

  Result := checkResult;
end;

// *************************************************************************
// 各InputTypeにより、明細グリッド・行単位でのセル設定
// *************************************************************************
function TForm4.xSettingGridRowFromInputChange(): Integer;
var rowEffectiveIndex, rowIndex, colIndex : Integer;
begin
  rowEffectiveIndex := -1;
  for rowIndex := 2 to HNsGrid1.RowCount - 1 do
  begin
    //有効行のみif (!CheckRowEffective(row.Index))
    if (gpxMAHNB01013B_GridJoinCheck(0, rowIndex div 2 -1 , -1, 9) = 0) then
    begin
      Result := rowEffectiveIndex;
      Exit;
    end;

    // -- Add 2012/07/30 30182 R.Tachiya -->>>>>
    //明細グリッド・行単位でのセル設定、共通処理
    xSettingGridRowFromInputChangeProc(rowIndex);
    // -- Add 2012/07/30 30182 R.Tachiya --<<<<<

    // --- DEL 2012/08/22 Wakita ---------->>>>>
    ////0:通常入力
    //xSettingGridRow(rowIndex);
    // --- DEL 2012/08/22 Wakita ----------<<<<<

    // -- DEL 2012/07/30 30182 R.Tachiya -->>>>>
    {$region '-- Del 2012/07/30 30182 R.Tachiya --'}
    //// 指定行の全ての列に対して設定を行う
    //for colIndex := 1 to HNsGrid1.ColCount do
    //begin
    //  //1:切替入力
    //  if i_InputType = 1 then
    //  begin
    //    // 明細備考、得意先注番、納品完了予定日以外、入力不可
    //    if (((colIndex <> ctCol_DtlNote) or ((rowIndex mod 2) <> 0))
    //      and ((colIndex <> ctCol_PartySlipNumDtl) or ((rowIndex mod 2) <> 1))
    //      and ((colIndex <> ctCol_DeliGdsCmpltDueDate) or ((rowIndex mod 2) <> 1))) then
    //    begin
    //      if (xGridColumnDisCheck(rowIndex, colIndex, 2) = False) then
    //        HNsGrid1.ReadOnly[colIndex, rowIndex] := True;
    //    end;
    //  end
    //
    //  //2:仕入
    //  else if i_InputType = 2 then
    //  begin
    //    // 仕入先、仕入日、仕入伝票番号以外、入力不可
    //    if (((colIndex <> ctCol_SupplierCdForStock) or ((rowIndex mod 2) <> 0))
    //      and ((colIndex <> ctCol_StockDate) or ((rowIndex mod 2) <> 0))
    //      and ((colIndex <> ctCol_PartySalesSlipNum) or ((rowIndex mod 2) <> 1))) then
    //    begin
    //      if (xGridColumnDisCheck(rowIndex, colIndex, 2) = False) then
    //        HNsGrid1.ReadOnly[colIndex, rowIndex] := True;
    //    end;
    //  end
    //
    //  //3:発注
    //  else if i_InputType = 3 then
    //  begin
    //    // BO、発注先、数量(発注数)、納品区分、H納品区分、指定拠点以外、入力不可
    //    if (((colIndex <> ctCol_BoCode) or ((rowIndex mod 2) <> 0))
    //      and ((colIndex <> ctCol_SupplierCdForOrder) or ((rowIndex mod 2) <> 0))
    //      and ((colIndex <> ctCol_AcceptAnOrderCntForOrder) or ((rowIndex mod 2) <> 0))
    //      and ((colIndex <> ctCol_DeliveredGoodsDivNm) or ((rowIndex mod 2) <> 0))
    //      and ((colIndex <> ctCol_FollowDeliGoodsDivNm) or ((rowIndex mod 2) <> 0))
    //      and ((colIndex <> ctCol_UOEResvdSectionNm) or ((rowIndex mod 2) <> 1))) then
    //    begin
    //      if (xGridColumnDisCheck(rowIndex, colIndex, 2) = False) then
    //        HNsGrid1.ReadOnly[colIndex, rowIndex] := True;
    //    end;
    //  //>>>2010/05/30
    //  end
    //  else if i_InputType = 4 then
    //  begin
    //    // RC区分、PS管理番号以外、入力不可
    //    if (((colIndex <> ctCol_RecycleDivNm) or ((rowIndex mod 2) <> 0))
    //      and ((colIndex <> ctCol_GoodsMngNo) or ((rowIndex mod 2) <> 1))) then
    //    begin
    //      if (xGridColumnDisCheck(rowIndex, colIndex, 2) = False) then
    //        HNsGrid1.ReadOnly[colIndex, rowIndex] := True;
    //    end;
    //  //<<<2010/05/30
    //  end;
    //end;
    {$endregion}
    // -- DEL 2012/07/30 30182 R.Tachiya --<<<<<

    if rowEffectiveIndex < 0 then
      rowEffectiveIndex := rowIndex;
  end;
  Result := rowEffectiveIndex;
end;
// -- Add 2012/07/30 30182 R.Tachiya -->>>>>
// *************************************************************************
// 各InputTypeにより、明細グリッド・行単位でのセル設定、指定行のみ
// *************************************************************************
function TForm4.xSettingGridRowFromInputChangeBySalesRowNo(salesRowNo: Integer):Integer;
var rowIndex, colIndex : Integer;
begin

  //指定された行(salesRowNo)の上行と下行をそれぞれ更新する
  for rowIndex := salesRowNo * 2 to salesRowNo * 2 + 1 do
  begin

    //有効行のみif (!CheckRowEffective(row.Index))
    if (gpxMAHNB01013B_GridJoinCheck(0, rowIndex div 2 -1 , -1, 9) = 0) then
    begin
      Result := rowIndex;
      Exit;
    end;

    //明細グリッド・行単位でのセル設定、共通処理
    xSettingGridRowFromInputChangeProc(rowIndex);

  end;

  Result := rowIndex;

end;

// *************************************************************************
// 各InputTypeにより、明細グリッド・行単位でのセル設定、共通処理
// *************************************************************************
function TForm4.xSettingGridRowFromInputChangeProc(rowIndex: Integer):Integer;
var colIndex : Integer;
begin

  //0:通常入力
  xSettingGridRow(rowIndex);

  // 指定行の全ての列に対して設定を行う
  for colIndex := 1 to HNsGrid1.ColCount do
  begin

    {$region '1:切替入力'}
    //1:切替入力
    if i_InputType = 1 then
    begin
      // 明細備考、得意先注番、納品完了予定日以外、入力不可
      if (((colIndex <> ctCol_DtlNote) or ((rowIndex mod 2) <> 0))
        and ((colIndex <> ctCol_PartySlipNumDtl) or ((rowIndex mod 2) <> 1))
        and ((colIndex <> ctCol_DeliGdsCmpltDueDate) or ((rowIndex mod 2) <> 1))) then
      begin
        if (xGridColumnDisCheck(rowIndex, colIndex, 2) = False) then
          HNsGrid1.ReadOnly[colIndex, rowIndex] := True;
      end;
    end
    {$endregion}

    {$region '2:仕入'}
    //2:仕入
    else if i_InputType = 2 then
    begin
      // 仕入先、仕入日、仕入伝票番号以外、入力不可
      if (((colIndex <> ctCol_SupplierCdForStock) or ((rowIndex mod 2) <> 0))
        and ((colIndex <> ctCol_StockDate) or ((rowIndex mod 2) <> 0))
        and ((colIndex <> ctCol_PartySalesSlipNum) or ((rowIndex mod 2) <> 1))) then
      begin
        if (xGridColumnDisCheck(rowIndex, colIndex, 2) = False) then
          HNsGrid1.ReadOnly[colIndex, rowIndex] := True;
      end;
    end
    {$endregion}

    {$region '3:発注'}
    //3:発注
    else if i_InputType = 3 then
    begin
      // BO、発注先、数量(発注数)、納品区分、H納品区分、指定拠点以外、入力不可
      if (((colIndex <> ctCol_BoCode) or ((rowIndex mod 2) <> 0))
        and ((colIndex <> ctCol_SupplierCdForOrder) or ((rowIndex mod 2) <> 0))
        and ((colIndex <> ctCol_AcceptAnOrderCntForOrder) or ((rowIndex mod 2) <> 0))
        and ((colIndex <> ctCol_DeliveredGoodsDivNm) or ((rowIndex mod 2) <> 0))
        and ((colIndex <> ctCol_FollowDeliGoodsDivNm) or ((rowIndex mod 2) <> 0))
        and ((colIndex <> ctCol_UOEResvdSectionNm) or ((rowIndex mod 2) <> 1))) then
      begin
        if (xGridColumnDisCheck(rowIndex, colIndex, 2) = False) then
          HNsGrid1.ReadOnly[colIndex, rowIndex] := True;
      end;
    //>>>2010/05/30
    end
    {$endregion}

    {$region '4:'}
    else if i_InputType = 4 then
    begin
      // RC区分、PS管理番号以外、入力不可
      if (((colIndex <> ctCol_RecycleDivNm) or ((rowIndex mod 2) <> 0))
        and ((colIndex <> ctCol_GoodsMngNo) or ((rowIndex mod 2) <> 1))) then
      begin
        if (xGridColumnDisCheck(rowIndex, colIndex, 2) = False) then
          HNsGrid1.ReadOnly[colIndex, rowIndex] := True;
      end;
    //<<<2010/05/30
    end;
    {$endregion}

  end;

  Result := rowIndex;

end;
// -- Add 2012/07/30 30182 R.Tachiya --<<<<<

// *************************************************************************
// 行値引、注釈以外の無効要素のテキストカラー設定処理
// *************************************************************************
procedure TForm4.xIsAllowEditTextColorChild(rowIndex: Integer; colIndex: Integer; mode:Integer);
var goodsName : string;
    acceptAnOrderCntDisplay : Double;
begin
  goodsName := RCHNB01003UADM.GoodsName[rowIndex div 2 -1 ];
  acceptAnOrderCntDisplay := RCHNB01003UADM.AcceptAnOrderCntDisplay[rowIndex div 2 -1 ];
  // 商品の場合
  case mode of
    0:
    begin
      // 課税・非課税 単位 BLコード 仕入先コード 受注数 メーカーコード 商品属性 現在庫数 販売区分
      if (((colIndex = ctCol_BLGoodsCode) and ((rowIndex mod 2) = 0))
        or ((colIndex = ctCol_SupplierCd) and ((rowIndex mod 2) = 1))
        or ((colIndex = ctCol_AcceptAnOrderCntDisplay) and ((rowIndex mod 2) = 0))
        or ((colIndex = ctCol_CmpltSalesRowNo) and ((rowIndex mod 2) = 0))
        or ((colIndex = ctCol_GoodsMakerCd) and ((rowIndex mod 2) = 1))
        or ((colIndex = ctCol_GoodsKindCode) and ((rowIndex mod 2) = 1))
        or ((colIndex = ctCol_SupplierStockDisplay) and ((rowIndex mod 2) = 1))
        or ((colIndex = ctCol_StockDate) and ((rowIndex mod 2) = 0))
        or ((colIndex = ctCol_SupplierCdForOrder) and ((rowIndex mod 2) = 0))
        or ((colIndex = ctCol_ShipmentCntDisplay) and ((rowIndex mod 2) = 1))
        or ((colIndex = ctCol_SalesUnPrcDisplay) and ((rowIndex mod 2) = 1))
        or ((colIndex = ctCol_SalesRate) and ((rowIndex mod 2) = 1))
        or ((colIndex = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 1))
        or ((colIndex = ctCol_SalesCode) and ((rowIndex mod 2) = 0))
        or ((colIndex = ctCol_ListPriceDisplay) and ((rowIndex mod 2) = 1))) then
      begin
        //cell.Activation == Infragistics.Win.UltraWinGrid.Activation.Disabled)
        if ((xGridColumnDisCheck(rowIndex, colIndex, 2) = True)
          and (salesSlip_disp.InputMode <> ctINPUTMODE_SalesSlip_Red)) then
        begin
          //cell.Appearance.ForeColorDisabled = Color.Transparent;
          xTransparentFontColorSet(rowIndex, colIndex, 1);
        end else
        begin
          if (goodsName = '') then
          begin
            //cell.Appearance.ForeColorDisabled = Color.Transparent;
            xTransparentFontColorSet(rowIndex, colIndex, 1);
          end else
          begin
            if xGridColumnDisCheck(rowIndex, colIndex, 2) = True then
              HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;
            if (xGridColumnDisCheck(rowIndex, colIndex, 2) = True) then
              HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;
          end;
        end;
      end;
    end;

    //消費税調整、残高調整、売掛消費税調整、売掛残高調整の場合
    1:
    begin
      // 課税・非課税 単位 BLコード 仕入先コード 受注数 メーカーコード 商品属性 現在庫数 販売区分
      if (((colIndex = ctCol_BLGoodsCode) and ((rowIndex mod 2) = 0))
        or ((colIndex = ctCol_SupplierCd) and ((rowIndex mod 2) = 1))
        or ((colIndex = ctCol_AcceptAnOrderCntDisplay) and ((rowIndex mod 2) = 0))
        or ((colIndex = ctCol_CmpltSalesRowNo) and ((rowIndex mod 2) = 0))
        or ((colIndex = ctCol_GoodsMakerCd) and ((rowIndex mod 2) = 1))
        or ((colIndex = ctCol_GoodsKindCode) and ((rowIndex mod 2) = 1))
        or ((colIndex = ctCol_SupplierStockDisplay) and ((rowIndex mod 2) = 1))
        or ((colIndex = ctCol_StockDate) and ((rowIndex mod 2) = 0))
        or ((colIndex = ctCol_DeliGdsCmpltDueDate) and ((rowIndex mod 2) = 1))
        or ((colIndex = ctCol_SupplierCdForOrder) and ((rowIndex mod 2) = 0))
        or ((colIndex = ctCol_ShipmentCntDisplay) and ((rowIndex mod 2) = 1))
        or ((colIndex = ctCol_SalesCode) and ((rowIndex mod 2) = 0))) then
      begin
        //cell.Appearance.ForeColorDisabled = Color.Transparent;
        xTransparentFontColorSet(rowIndex, colIndex, 1);
      end;
    end;
  end;

  // 商品の場合
  if mode = 0 then
  begin
    // 現在庫数
    if ((colIndex = ctCol_SupplierStockDisplay) and ((rowIndex mod 2) = 1)) then
    begin
      if (RCHNB01003UADM.WarehouseCode[rowIndex div 2 -1 ]= '')  then
        //cell.Appearance.ForeColor = Color.Transparent;
        xTransparentFontColorSet(rowIndex, colIndex, 0)
      else
      begin
        xAllowEditorFontColorSet(rowIndex, colIndex, clBlack);
      end;

    end;
  end;

  // 納品完了予定日
  if ((colIndex = ctCol_DeliGdsCmpltDueDate) and ((rowIndex mod 2) = 1)) then
  begin
    case mode of
      // 商品の場合
      0:
      begin
        //cell.Activation == Infragistics.Win.UltraWinGrid.Activation.Disabled
        if (xGridColumnDisCheck(rowIndex, colIndex, 2) = True) then
        begin
          //cell.Appearance.ForeColor = Color.Transparent;
          //cell.Appearance.ForeColorDisabled = Color.Transparent;
          xTransparentFontColorSet(rowIndex, colIndex, 1);
        end
        else
        begin
// 2011/01/31 >>>
//          if (acceptAnOrderCntDisplay = 0) then
//          begin
//            //cell.Appearance.ForeColor = Color.Transparent;
//            //cell.Appearance.ForeColorDisabled = Color.Transparent;
//            xTransparentFontColorSet(rowIndex, colIndex, 0);
//          end
//          else
//          begin
//             //cell.Appearance.ForeColor = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled;
//             //cell.Appearance.ForeColorDisabled = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled; ;
//             HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;
//          end;
          if (( salesSlip_disp.AcptAnOdrStatusDisplay = AcptAnOdrStatusState_Estimate) or
              ( salesSlip_disp.AcptAnOdrStatusDisplay = AcptAnOdrStatusState_Sales)) then begin
            HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;
          end
          else begin
            xTransparentFontColorSet(rowIndex, colIndex, 0);
          end;
// 2011/01/31 <<<
        end;
      end;

      //消費税調整、残高調整、売掛消費税調整、売掛残高調整の場合
      1:
      begin
        if (acceptAnOrderCntDisplay = 0) then
          begin
            //cell.Appearance.ForeColor = Color.Transparent;
            //cell.Appearance.ForeColorDisabled = Color.Transparent;
            xTransparentFontColorSet(rowIndex, colIndex, 0);
          end
        else
        begin
             //cell.Appearance.ForeColor = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled;
             //cell.Appearance.ForeColorDisabled = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled; ;
             xAllowEditorFontColorSet(rowIndex, colIndex, clBlack);
        end;
      end;
    end;
  end;

  // 明細備考
  if ((colIndex = ctCol_DtlNote) and ((rowIndex mod 2) = 0)) then
  begin
    case mode of
      0:
      begin
        //cell.Activation == Infragistics.Win.UltraWinGrid.Activation.Disabled
        if (xGridColumnDisCheck(rowIndex, colIndex, 2) = True) then
        begin
          //cell.Appearance.ForeColorDisabled = Color.Transparent;
          xTransparentFontColorSet(rowIndex, colIndex, 1);
        end
        else
        begin
          case salesTtlSt.DtlNoteDispDiv of
          // 入力あり
            0:
              //cell.Appearance.ForeColor = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled;
              HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;
            // 非表示
            1:
              //cell.Appearance.ForeColor = Color.Transparent;
              xTransparentFontColorSet(rowIndex, colIndex, 0);
          else
            //cell.Appearance.ForeColor = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled;
            HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;
          end;

        end;
      end;
      1:
      begin
        case salesTtlSt.DtlNoteDispDiv of
          // 入力あり
          0:
            //cell.Appearance.ForeColor = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled;
            xAllowEditorFontColorSet(rowIndex, colIndex, clBlack);
          // 非表示
          1:
            //cell.Appearance.ForeColor = Color.Transparent;
            xTransparentFontColorSet(rowIndex, colIndex, 0);
        else
          //cell.Appearance.ForeColor = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled;
          xAllowEditorFontColorSet(rowIndex, colIndex, clBlack);
        end;
      end;
    end;
  end;

  // 得意先注番
  if ((colIndex = ctCol_PartySlipNumDtl) and ((rowIndex mod 2) = 1)) then
  begin
      case salesSlip_disp.CustOrderNoDispDiv of
      // 表示しない
      0:
        //cell.Appearance.ForeColor = Color.Transparent;
        xTransparentFontColorSet(rowIndex, colIndex, 0);
      // 表示する
      1:
        //cell.Appearance.ForeColor = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled;
        xAllowEditorFontColorSet(rowIndex, colIndex, clBlack);
      else
        //cell.Appearance.ForeColor = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled;
        xAllowEditorFontColorSet(rowIndex, colIndex, clBlack);
      end;
  end;

  //>>>2011/05/25
  // 販売区分
  if ((colIndex = ctCol_SalesCode) and ((rowIndex mod 2) = 0)) then
  begin
    case salesTtlSt.SalesCdDspDivCd of
      0: // する
        xAllowEditorFontColorSet(rowIndex, colIndex, clBlack);
      1: // しない
        xTransparentFontColorSet(rowIndex, colIndex, 0);
      2: // 必須
        xAllowEditorFontColorSet(rowIndex, colIndex, clBlack);
      else
        xAllowEditorFontColorSet(rowIndex, colIndex, clBlack);
      end;
  end;
  //<<<2011/05/25

  // 原単価、原価率 (通常入力以外)
  //if (((colIndex = ctCol_SalesUnitCost) and ((rowIndex mod 2) = 0))
  //  or ((colIndex = ctCol_CostRate) and ((rowIndex mod 2) = 0))) then
  if ((((colIndex = ctCol_SalesUnitCost) and ((rowIndex mod 2) = 0))
    //or ((colIndex = ctCol_CostRate) and ((rowIndex mod 2) = 0))) and (normalInputFlg = False)) then // DEL 2010/07/21
    or ((colIndex = ctCol_CostRate) and ((rowIndex mod 2) = 0)))) then // ADD 2010/07/21
  begin
      case salesTtlSt.CostDspDivCd of
        // 表示しない
        0:
          //cell.Appearance.ForeColor = Color.Transparent;
          //cell.Appearance.ForeColorDisabled = Color.Transparent;
          xTransparentFontColorSet(rowIndex, colIndex, 0);
        // 表示する
        1:
          begin
            if (_costDisplay = False) then // HOMEキーによる制御
            begin
              //cell.Appearance.ForeColor = Color.Transparent;
              //cell.Appearance.ForeColorDisabled = Color.Transparent;
              xTransparentFontColorSet(rowIndex, colIndex, 0);
            end else
            begin
              //cell.Appearance.ForeColorDisabled = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColor;
              // -----UPD 2010/07/21------>>>>>
              if (salesSlip_disp.SalesSlipCd <> salesSlipCd_RetGoods) then
              begin
                if normalInputFlg = False then
                begin
                  case salesTtlSt.SlipChngDivCost of
                  // 未使用
                  2:
                    //cell.Appearance.ForeColor = Color.Transparent;
                    xTransparentFontColorSet(rowIndex, colIndex, 0);
                  // 在庫時不可
                  0,1,3:
                    //cell.Appearance.ForeColor = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled;
                    xAllowEditorFontColorSet(rowIndex, colIndex, clBlack);
                  else
                  //cell.Appearance.ForeColor = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled;
                  xAllowEditorFontColorSet(rowIndex, colIndex, clBlack);
                  end;
                end;
              end
              else
              begin
                if normalInputFlg = False then
                begin
                  case salesTtlSt.RetSlipChngDivCost of
                  // 未使用
                  2:
                    //cell.Appearance.ForeColor = Color.Transparent;
                    xTransparentFontColorSet(rowIndex, colIndex, 0);
                  // 在庫時不可
                  0,1,3:
                    //cell.Appearance.ForeColor = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled;
                    xAllowEditorFontColorSet(rowIndex, colIndex, clBlack);
                  else
                  //cell.Appearance.ForeColor = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled;
                  xAllowEditorFontColorSet(rowIndex, colIndex, clBlack);
                  end;
                end;

              end;
              // -----UPD 2010/07/21------<<<<<
            end;
          end;
      end;

      if (mode = 0) then
      begin
        if (goodsName = '') then
        begin
          //cell.Appearance.ForeColor = Color.Transparent;
          //cell.Appearance.ForeColorDisabled = Color.Transparent;
          xTransparentFontColorSet(rowIndex, colIndex, 0);
        end;
      end;

  end;

  if mode = 0 then
  begin
    // 発注情報入力不可
    if (((colIndex = ctCol_BoCode) and ((rowIndex mod 2) = 0))
      or ((colIndex = ctCol_SupplierCdForOrder) and ((rowIndex mod 2) = 0))
      or ((colIndex = ctCol_AcceptAnOrderCntForOrder) and ((rowIndex mod 2) = 0))
      or ((colIndex = ctCol_SupplierSnmForOrder) and ((rowIndex mod 2) = 1))
      or ((colIndex = ctCol_DeliveredGoodsDivNm) and ((rowIndex mod 2) = 0))
      or ((colIndex = ctCol_FollowDeliGoodsDivNm) and ((rowIndex mod 2) = 0))
      or ((colIndex = ctCol_UOEResvdSectionNm) and ((rowIndex mod 2) = 1))) then
    begin
      //cell.Activation == Infragistics.Win.UltraWinGrid.Activation.Disabled
      if (xGridColumnDisCheck(rowIndex, colIndex, 2) = True) then
      begin
        //cell.Appearance.ForeColorDisabled = Color.Transparent;
        xTransparentFontColorSet(rowIndex, colIndex, 1);
      end else
      begin
        //cell.Appearance.ForeColorDisabled = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled;
      end;
    end;

    // 仕入情報入力不可
    if (((colIndex = ctCol_SupplierCdForStock) and ((rowIndex mod 2) = 0))
       or ((colIndex = ctCol_PartySalesSlipNum) and ((rowIndex mod 2) = 1))
       or ((colIndex = ctCol_StockDate) and ((rowIndex mod 2) = 0))) then
    begin
      //cell.Activation == Infragistics.Win.UltraWinGrid.Activation.Disabled
      if (xGridColumnDisCheck(rowIndex, colIndex, 2) = True) then
      begin
        //cell.Appearance.ForeColorDisabled = Color.Transparent;
        xTransparentFontColorSet(rowIndex, colIndex, 1);
      end else
      begin
        //cell.Appearance.ForeColorDisabled = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColorDisabled;
      end;
    end;

  end;
end;

// *************************************************************************
// 発注情報入力設定処理
// *************************************************************************
procedure TForm4.xIsAllowEditUOE(rowIndex: Integer; colIndex: Integer; mode:Integer);
var  editStatus, salesRowNo : Integer;
begin
  editStatus := RCHNB01003UADM.EditStatus[rowIndex div 2 -1 ];
  salesRowNo := RCHNB01003UADM.SalesRowNo[rowIndex div 2 -1 ];
  case mode of
  // 計上新規の発注情報入力設定
  0:
    begin
       // 納品区分
       if ((colIndex = ctCol_DeliveredGoodsDivNm) and ((rowIndex mod 2) = 0)) then                 //or (col = xColNameToIndex('DeliveredGoodsDivTP') and ((rowIndex mod 2) = 0))) then
       begin
          //!this._salesSlipInputAcs.ExistOrderInfo(salesRowNo)
          if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 1) = 0) then
            xGridColumnDisSet(rowIndex, colIndex, 2)
          else
          begin
            //!this._salesSlipInputAcs.CheckEnabledDeliveredGoodsDiv(salesRowNo)
            if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 2) = 0) then
              xGridColumnDisSet(rowIndex, colIndex, 2);
          end;
       end;

       // Ｈ納品区分
       if ((colIndex = ctCol_FollowDeliGoodsDivNm) and ((rowIndex mod 2) = 0)) then                 //or (col = xColNameToIndex('DeliveredGoodsDivTP') and ((rowIndex mod 2) = 0))) then
       begin
          //!this._salesSlipInputAcs.ExistOrderInfo(salesRowNo)
          if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 1) = 0) then
            xGridColumnDisSet(rowIndex, colIndex, 2)
          else
          begin
            //!this._salesSlipInputAcs.CheckEnabledFollowDeliGoodsDiv(salesRowNo)
            if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 14) = 0) then
              xGridColumnDisSet(rowIndex, colIndex, 2);
          end;
       end;

       // 指定拠点
       if ((colIndex = ctCol_UOEResvdSectionNm) and ((rowIndex mod 2) = 1)) then                 //or (col = xColNameToIndex('DeliveredGoodsDivTP') and ((rowIndex mod 2) = 0))) then
       begin
          //!this._salesSlipInputAcs.ExistOrderInfo(salesRowNo)
          if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 1) = 0) then
            xGridColumnDisSet(rowIndex, colIndex, 2)
          else
          begin
            //!this._salesSlipInputAcs.CheckEnabledUOEResvdSection(salesRowNo)
            if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 15) = 0) then
              xGridColumnDisSet(rowIndex, colIndex, 2);
          end;
       end;

       // ＢＯ区分、発注先、発注数
       if (((colIndex = ctCol_BoCode) and ((rowIndex mod 2) = 0))
         or ((colIndex = ctCol_SupplierCdForOrder) and ((rowIndex mod 2) = 0))
         or ((colIndex = ctCol_SupplierSnmForOrder) and ((rowIndex mod 2) = 1))
         or ((colIndex = ctCol_AcceptAnOrderCntForOrder) and ((rowIndex mod 2) = 0))) then
       begin
         if ((editStatus = ctEDITSTATUS_GoodsDiscount)
          or (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 3) = 1)
          or (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 4) = 0)
          or (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 5) = 0)) then
           xGridColumnDisSet(rowIndex, colIndex, 2);
       end;
    end;
  1:
    begin

    end;
  end;
end;

// *************************************************************************
// 無効要素のテキストカラー設定処理
// *************************************************************************
procedure TForm4.xIsAllowEditTextColor(rowIndex: Integer; colIndex: Integer; mode:Integer);
var editStatus, rowStatus, salesSlipCdDtl, goodsKindCode, salesRowNo : Integer;
    shipmentCnt, acceptAnOrderCntDisplay : Double;
    goodsName : string;

begin
  salesRowNo := RCHNB01003UADM.SalesRowNo[rowIndex div 2 -1 ];
  goodsName := RCHNB01003UADM.GoodsName[rowIndex div 2 -1 ];
  editStatus := RCHNB01003UADM.EditStatus[rowIndex div 2 -1 ];
  goodsKindCode := RCHNB01003UADM.GoodsKindCode[rowIndex div 2 -1 ];
  rowStatus := RCHNB01003UADM.RowStatus[rowIndex div 2 -1 ];
  salesSlipCdDtl := RCHNB01003UADM.SalesSlipCdDtl[rowIndex div 2 -1 ];
  shipmentCnt := RCHNB01003UADM.ShipmentCnt[rowIndex div 2 -1 ];
  acceptAnOrderCntDisplay := RCHNB01003UADM.AcceptAnOrderCntDisplay[rowIndex div 2 -1 ];
  case mode of
  // 商品
  0:
  begin
    // 行値引、注釈以外
    if ((editStatus <> ctEDITSTATUS_RowDiscount)
        and (editStatus <> ctEDITSTATUS_Annotation)) then
    begin
      xIsAllowEditTextColorChild(rowIndex, colIndex, mode);
    end
    else if (editStatus = ctEDITSTATUS_AllDisable) then
    begin
      HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;
    end
    else
    begin
      // 行値引、注釈
      if (((colIndex <> ctCol_GoodsName) or ((rowIndex mod 2) <> 0))
        and ((colIndex <> ctCol_SalesMoneyDisplay) or ((rowIndex mod 2) = 1))) then
      begin
        //cell.Appearance.ForeColorDisabled = Color.Transparent;
        xTransparentFontColorSet(rowIndex, colIndex, 1);
      end;
    end;


    //cell.Column.CellActivation != Infragistics.Win.UltraWinGrid.Activation.Disabled
    //(cell.Activation != Infragistics.Win.UltraWinGrid.Activation.Disabled
    if ((xGridColumnDisCheck(rowIndex, colIndex, 2) = False)
      and (colIndex <> ctCol_RowNo)) then
    begin
      // コピー対象行
      if (rowStatus = ctROWSTATUS_COPY) then
      begin
        // 2010/10/26 Sasaki >>>
//        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
//        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(255,   192,   203));

        if (HNsGrid1.Colors[colIndex, rowIndex] <> TColor(RGB(255,   192,   203))) then
        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   192,   203));

        if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> TColor(RGB(255,   192,   203))) then
        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
        // 2010/10/26 Sasaki <<<
        //if (cell.Appearance.ForeColor != Color.Transparent) cell.Appearance.ForeColor = this.uGrid_Details.DisplayLayout.Override.RowAppearance.ForeColor;
        if (xTransparentFontColorCheck(rowIndex, colIndex) = False) then
        begin
          HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;
        end;
      end
      // 切り取り対象行
      else if (rowStatus = ctROWSTATUS_CUT) then
      begin
        // 2010/10/26 Sasaki >>>
        //HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
        if (HNsGrid1.Colors[colIndex, rowIndex] <> TColor(RGB(255,   192,   203))) then
        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
        // 2010/10/26 Sasaki <<<
        //TODO:if (cell.Appearance.ForeColor != Color.Transparent) cell.Appearance.ForeColor = Color.Gray;
        if (xTransparentFontColorCheck(rowIndex, colIndex) = False) then
        begin
          HNsGrid1.FontColors[colIndex, rowIndex] := clGray;
        end;
      end
      else
      begin
        //(cell.Activation == Infragistics.Win.UltraWinGrid.Activation.NoEdit)
        //cell.Column.CellActivation == Infragistics.Win.UltraWinGrid.Activation.NoEdit
        if ((xGridColumnDisCheck(rowIndex, colIndex, 1) = True)
          or ((colIndex = ctCol_CmpltSalesRowNo) and ((rowIndex mod 2) = 0))
          or ((colIndex = ctCol_WarehouseShelfNo) and ((rowIndex mod 2) = 0))
          or ((colIndex = ctCol_OpenPriceDivDisplay) and ((rowIndex mod 2) = 1))
          or ((colIndex = ctCol_SupplierSnmForOrder) and ((rowIndex mod 2) = 1))
          or ((colIndex = ctCol_SupplierStockDisplay) and ((rowIndex mod 2) = 1))
          or ((colIndex = ctCol_SlipMemoExist) and ((rowIndex mod 2) = 1))
          or ((colIndex = ctCol_SlipMemoExist) and ((rowIndex mod 2) = 0))) then
        begin
          HNsGrid1.ReadOnly[colIndex, rowIndex] := True;
        //TODO:Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(220)))));
          if ((xTransparentFontColorCheck(rowIndex, colIndex) = False)
          and (xAcceptAnOrderCntDisplayCheck(rowIndex, colIndex) = False)) then
          begin
            // 2010/10/26 Sasaki >>>
//            HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   255,   220));
//            HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(255,   255,   220));
            if (HNsGrid1.Colors[colIndex, rowIndex] <> TColor(RGB(255,   255,   220))) then
            HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   255,   220));

            if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> TColor(RGB(255,   255,   220))) then
            HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(255,   255,   220));
            // 2010/10/26 Sasaki <<<
          end;
        end
        else
        begin
          if (copyLogicRow * 2 = rowIndex) or (copyLogicRow * 2 + 1 = rowIndex)then
          begin
              // 2010/10/26 Sasaki >>>
              //HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
              if (HNsGrid1.Colors[colIndex, rowIndex] <> TColor(RGB(255,   192,   203))) then
              HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
              // 2010/10/26 Sasaki <<<
          end
          else
          begin
            // 2010/10/26 Sasaki >>>
//            HNsGrid1.Colors[colIndex, rowIndex] := clNone;
            if (HNsGrid1.Colors[colIndex, rowIndex] <> clNone) then
            HNsGrid1.Colors[colIndex, rowIndex] := clNone;
            // 2010/10/26 Sasaki <<<
          end;
        end;

      end;

    end;

    // 行番号の色変更
    if (colIndex = ctCol_RowNo) then
    begin
      if ((salesSlipCdDtl = salesSlipCdDtl_Discount) and (shipmentCnt <> 0)) then
      begin
        // 商品値引行
        // 2010/10/26 Sasaki >>>
//        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
//        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
//        HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;

        if (HNsGrid1.Colors[colIndex, rowIndex] <> TColor(RGB(255,   192,   203))) then
        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   192,   203));

        if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> TColor(RGB(255,   192,   203))) then
        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(255,   192,   203));

        if (HNsGrid1.FontColors[colIndex, rowIndex] <> clBlack) then
        HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;
        // 2010/10/26 Sasaki <<<
        //TODO:cell.Appearance.BackGradientStyle = this.uGrid_Details.DisplayLayout.Override.HeaderAppearance.BackGradientStyle;
      end
      else if ((gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 3) = 1)
        and (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 8) = 1)) then
      begin
        // 2010/10/26 Sasaki >>>
//        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(99,   192,   48));
//        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(51,   97,   25));
//        HNsGrid1.FontColors[colIndex, rowIndex] := clWhite;

        if (HNsGrid1.Colors[colIndex, rowIndex] <> TColor(RGB(99,   192,   48))) then
        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(99,   192,   48));

        if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> TColor(RGB(51,   97,   25))) then
        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(51,   97,   25));

        if (HNsGrid1.FontColors[colIndex, rowIndex] <> clWhite) then
        HNsGrid1.FontColors[colIndex, rowIndex] := clWhite;
        // 2010/10/26 Sasaki <<<
      end
      else if ((gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 1) = 1)
        and (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 8) = 1)) then
      begin
        // 2010/10/26 Sasaki >>>
//        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(194, 120, 216));
//        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(141, 49, 168));
//        HNsGrid1.FontColors[colIndex, rowIndex] := clWhite;
        if (HNsGrid1.Colors[colIndex, rowIndex] <> TColor(RGB(194, 120, 216))) then
        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(194, 120, 216));

        if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> TColor(RGB(141, 49, 168))) then
        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(141, 49, 168));

        if (HNsGrid1.FontColors[colIndex, rowIndex] <> clWhite) then
        HNsGrid1.FontColors[colIndex, rowIndex] := clWhite;
        // 2010/10/26 Sasaki <<<
      end
      else
      begin
        // 2010/10/26 Sasaki >>>
//        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(89, 135, 214));
//        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(7, 59, 150));
//        HNsGrid1.FontColors[colIndex, rowIndex] := clWhite;

        if (HNsGrid1.Colors[colIndex, rowIndex] <> TColor(RGB(89, 135, 214))) then
        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(89, 135, 214));
        if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> TColor(RGB(7, 59, 150))) then
        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(7, 59, 150));
        if (HNsGrid1.FontColors[colIndex, rowIndex] <> clWhite) then
        HNsGrid1.FontColors[colIndex, rowIndex] := clWhite;
        // 2010/10/26 Sasaki <<<
      end;
    end;
  end;

  // 消費税調整、残高調整、売掛消費税調整、売掛残高調整
  1:
  begin
    // 行値引、注釈以外
    if ((editStatus <> ctEDITSTATUS_RowDiscount)
        and (editStatus <> ctEDITSTATUS_Annotation)) then
    begin
      xIsAllowEditTextColorChild(rowIndex, colIndex, mode);
    end
    else
    begin
      // 行値引、注釈
      if (((colIndex <> ctCol_GoodsName) or ((rowIndex mod 2) <> 0))
        and ((colIndex <> ctCol_SalesMoneyDisplay) or ((rowIndex mod 2) <> 1))) then
      begin
        //cell.Appearance.ForeColorDisabled = Color.Transparent;
        xTransparentFontColorSet(rowIndex, colIndex, 1);
      end;
    end;

    //cell.Column.CellActivation != Infragistics.Win.UltraWinGrid.Activation.Disabled
    //(cell.Activation != Infragistics.Win.UltraWinGrid.Activation.Disabled
    if ((xGridColumnDisCheck(rowIndex, colIndex, 2) = False)
      and (colIndex <> ctCol_RowNo)) then
    begin
      // コピー対象行
      if (rowStatus = ctROWSTATUS_COPY) then
      begin
        // 2010/10/26 Sasaki >>>
//        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
//        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
//        HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;

        if (HNsGrid1.Colors[colIndex, rowIndex] <> TColor(RGB(255,   192,   203))) then
        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
        if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> TColor(RGB(255,   192,   203))) then
        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
        if (HNsGrid1.FontColors[colIndex, rowIndex] <> clBlack) then
        HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;
        // 2010/10/26 Sasaki <<<
      end
      // 切り取り対象行
      else if (rowStatus = ctROWSTATUS_CUT) then
      begin
        // 2010/10/26 Sasaki >>>
//        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
//        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
//        HNsGrid1.FontColors[colIndex, rowIndex] := clGray;

        if (HNsGrid1.Colors[colIndex, rowIndex] <> TColor(RGB(255,   192,   203))) then
        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   192,   203));

        if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> TColor(RGB(255,   192,   203))) then
        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(255,   192,   203));

        if (HNsGrid1.FontColors[colIndex, rowIndex] <> clGray) then
        HNsGrid1.FontColors[colIndex, rowIndex] := clGray;
        // 2010/10/26 Sasaki <<<
      end
      else
      begin
        // 2010/10/26 Sasaki >>>
//        HNsGrid1.Colors[colIndex, rowIndex] := clNone;
//        HNsGrid1.ColorsTo[colIndex, rowIndex] := clNone;

        if (HNsGrid1.Colors[colIndex, rowIndex] <> clNone) then
        HNsGrid1.Colors[colIndex, rowIndex] := clNone;

        if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> clNone) then
        HNsGrid1.ColorsTo[colIndex, rowIndex] := clNone;
        // 2010/10/26 Sasaki <<<

        if ((goodsKindCode = 38) or (goodsKindCode = 39)) then
        begin
          // 2010/10/26 Sasaki >>>
          //HNsGrid1.FontColors[colIndex, rowIndex] := clGreen;
          if (HNsGrid1.FontColors[colIndex, rowIndex] <> clGreen) then
            HNsGrid1.FontColors[colIndex, rowIndex] := clGreen
          // 2010/10/26 Sasaki <<<
        end;

        //(cell.Activation == Infragistics.Win.UltraWinGrid.Activation.NoEdit)
        //cell.Column.CellActivation == Infragistics.Win.UltraWinGrid.Activation.NoEdit
        if ((xGridColumnDisCheck(rowIndex, colIndex, 1) = True)
          or ((colIndex = ctCol_CmpltSalesRowNo) and ((rowIndex mod 2) = 0))
          or ((colIndex = ctCol_WarehouseShelfNo) and ((rowIndex mod 2) = 0))
          or ((colIndex = ctCol_OpenPriceDivDisplay) and ((rowIndex mod 2) = 1))
          or ((colIndex = ctCol_SupplierSnmForOrder) and ((rowIndex mod 2) = 1))
          or ((colIndex = ctCol_SupplierStockDisplay) and ((rowIndex mod 2) = 1))
          or ((colIndex = ctCol_SlipMemoExist) and ((rowIndex mod 2) = 1))
          or ((colIndex = ctCol_SlipMemoExist) and ((rowIndex mod 2) = 0))) then
        begin
          // 2010/10/26 Sasaki >>>
//          HNsGrid1.ReadOnly[colIndex, rowIndex] := True;
//          HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   255,   220));
//          HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(255,   255,   220));

          if (HNsGrid1.ReadOnly[colIndex, rowIndex] <> True) then
          HNsGrid1.ReadOnly[colIndex, rowIndex] := True;

          if (HNsGrid1.Colors[colIndex, rowIndex] <> TColor(RGB(255,   255,   220))) then
          HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   255,   220));

          if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> TColor(RGB(255,   255,   220))) then
          HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(255,   255,   220));
          // 2010/10/26 Sasaki <<<
        end;

      end;

    end;

    // 行番号の色変更
    if (colIndex = ctCol_RowNo) then
    begin
      if ((salesSlipCdDtl = salesSlipCdDtl_Discount) and (shipmentCnt <> 0)) then
      begin
        // 2010/10/26 Sasaki >>>
//        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
//        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(255,   192,   203));
//        HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;

        if (HNsGrid1.Colors[colIndex, rowIndex] <> TColor(RGB(255,   192,   203))) then
        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(255,   192,   203));

        if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> TColor(RGB(255,   192,   203))) then
        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(255,   192,   203));

        if (HNsGrid1.FontColors[colIndex, rowIndex] <> clBlack) then
        HNsGrid1.FontColors[colIndex, rowIndex] := clBlack;
        // 2010/10/26 Sasaki <<<
        //TODO:cell.Appearance.BackGradientStyle = this.uGrid_Details.DisplayLayout.Override.HeaderAppearance.BackGradientStyle;
      end
      else
      begin
        // 2010/10/26 Sasaki >>>
//        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(89, 135, 214));
//        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(7, 59, 150));
//        HNsGrid1.FontColors[colIndex, rowIndex] := clWhite;

        if (HNsGrid1.Colors[colIndex, rowIndex] <> TColor(RGB(89, 135, 214))) then
        HNsGrid1.Colors[colIndex, rowIndex] := TColor(RGB(89, 135, 214));
        if (HNsGrid1.ColorsTo[colIndex, rowIndex] <> TColor(RGB(7, 59, 150))) then
        HNsGrid1.ColorsTo[colIndex, rowIndex] := TColor(RGB(7, 59, 150));
        if (HNsGrid1.FontColors[colIndex, rowIndex] <> clWhite) then
        HNsGrid1.FontColors[colIndex, rowIndex] := clWhite;
        // 2010/10/26 Sasaki <<<
      end;
    end;
  end;
  end;
end;

// *************************************************************************
// 受注数処理
// *************************************************************************
procedure TForm4.xIsAllowEditAcceptAnOrderCntColum(rowIndex: Integer; colIndex: Integer; mode:Integer);
var tempStr : string;
    editStatus : Integer;
    salesRowNo :Integer;

begin
  editStatus := RCHNB01003UADM.EditStatus[rowIndex div 2 -1 ];
  salesRowNo := RCHNB01003UADM.SalesRowNo[rowIndex div 2 -1 ];
  case mode of
  // 計上新規の受注数設定
  0:
    begin
      if (RCHNB01003UADM.AcptAnOdrStatusSrc[rowIndex div 2 -1] = AcptAnOdrStatusState_Estimate) then
      // -- UPD 2012/07/31 30182 R.Tachiya -->>>>>
          //xGridColumnDisSet(rowIndex, colIndex, 0)// 編集可能
      begin
        // --- UPD 2013/11/18 Wakita ---------->>>>>
//        if( (acptAnOdrTtlSt.EstmCountReflectDiv = 0) or//受発注管理全体設定マスタ.見積数反映区分 0:出荷数 1:受注数
//            (salesTtlSt.AcpOdrInputDiv = 0) ) then//売上全体設定マスタ.受注数入力区分 0:しない, 1:する
        //if( (acptAnOdrTtlSt.EstmCountReflectDiv = 0) or//受発注管理全体設定マスタ.見積数反映区分 0:出荷数 1:受注数 //DEL 2015/09/01 陳艶丹 For Redmine #47025
        //受発注管理全体設定マスタ.見積数反映区分 0:出荷数 1:受注数、且つ 入力モード（見積計上）
        if( ((acptAnOdrTtlSt.EstmCountReflectDiv = 0) and (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp)) or   //ADD 2015/09/01 陳艶丹 For Redmine #47025
            (salesTtlSt.AcpOdrInputDiv = 0) or //売上全体設定マスタ.受注数入力区分 0:しない, 1:する
            (RCHNB01003UADM.SalesSlipCdDtl[rowIndex div 2 -1] = salesSlipCdDtl_Discount) ) then //値引き
        // --- UPD 2013/11/18 Wakita ----------<<<<<
          begin
            xGridColumnDisSet(rowIndex, colIndex, 1);// 編集不可
          end
        else begin
          xGridColumnDisSet(rowIndex, colIndex, 0)// 編集可能
        end;
      end
      // -- UPD 2012/07/31 30182 R.Tachiya --<<<<<
      else
          xGridColumnDisSet(rowIndex, colIndex, 1);// 編集不可

      if (xGridColumnDisCheck(rowIndex, colIndex, 0) = True) then
      begin
      // 発注選択済み明細判定
      if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 1) = 1) then
       xGridColumnDisSet(rowIndex, colIndex, 1);
      end;
    end;

  // 通常修正、計上編集
  1:
    begin
      case salesSlip_disp.AcptAnOdrStatusDisplay of
        //-----------------------------------------------------------------------------
        // 見積 見積単価
        //-----------------------------------------------------------------------------
        AcptAnOdrStatusState_Estimate,AcptAnOdrStatusState_UnitPriceEstimate:
        begin
           // 編集不可
           xGridColumnDisSet(rowIndex, colIndex, 1);
        end;
        //-----------------------------------------------------------------------------
        // 売上 出荷
        //-----------------------------------------------------------------------------
        AcptAnOdrStatusState_Sales,AcptAnOdrStatusState_Shipment:
        begin
          tempStr := salesSlip_disp.SalesSlipNum;
          if ((salesSlip_disp.AcptAnOdrStatus <> AcptAnOdrStatusState_AcceptAnOrder)
              and (xStringZeroAdd(tempStr, 9) <> ctDefaultSalesSlipNum)) then
          begin
            // 編集不可
            xGridColumnDisSet(rowIndex, colIndex, 1);
          end else
          begin
            case salesSlip_disp.SalesSlipCd of
              SalesSlipCd_Sales:
                begin
                   xGridColumnDisSet(rowIndex, colIndex, 0);
                end;
              SalesSlipCd_RetGoods:
                begin
                   // 編集不可
                   xGridColumnDisSet(rowIndex, colIndex, 1);
                end;
            end;
          end;

        end;
        // --- DEL 2013/04/18 T.Nishi ---------->>>>>
        //// ADD 2013/02/05 T.Miyamoto ------------------------------>>>>>
        ////-----------------------------------------------------------------------------
        //// 受注
        ////-----------------------------------------------------------------------------
        //acptAnOdrStatusState_AcceptAnOrder:
        //begin
        //  // 編集可
        //  xGridColumnDisSet(rowIndex, colIndex, 0);
        //end;
        //// ADD 2013/02/05 T.Miyamoto ------------------------------<<<<<
        // --- DEL 2013/04/18 T.Nishi ----------<<<<<
      end;

      // 発注選択済み明細判定
      if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 1) = 1) then
        xGridColumnDisSet(rowIndex, colIndex, 1);
    end;

  // 通常入力の受注数設定
  2:
    begin
      case salesSlip_disp.AcptAnOdrStatusDisplay of
        //-----------------------------------------------------------------------------
        // 見積 見積単価
        //-----------------------------------------------------------------------------
        AcptAnOdrStatusState_Estimate,AcptAnOdrStatusState_UnitPriceEstimate:
        begin
           // 編集不可
           xGridColumnDisSet(rowIndex, colIndex, 1);
        end;
        //-----------------------------------------------------------------------------
        // 売上 出荷
        //-----------------------------------------------------------------------------
        AcptAnOdrStatusState_Sales,AcptAnOdrStatusState_Shipment:
        begin
          tempStr := salesSlip_disp.SalesSlipNum;
          if ((salesSlip_disp.AcptAnOdrStatus <> AcptAnOdrStatusState_AcceptAnOrder)
              and (xStringZeroAdd(tempStr, 9) <> ctDefaultSalesSlipNum)) then
          begin
            // 編集不可
            xGridColumnDisSet(rowIndex, colIndex, 1);
          end else
          begin
            case salesSlip_disp.SalesSlipCd of
              SalesSlipCd_Sales:
                begin
                   // 売上全体設定マスタ 受注数入力  0:しない　1:する)
                   if (salesTtlSt.AcpOdrInputDiv = 1) then
                      xGridColumnDisSet(rowIndex, colIndex, 0)
                   else
                      xGridColumnDisSet(rowIndex, colIndex, 1);
                end;
              SalesSlipCd_RetGoods:
                begin
                   // 編集不可
                   xGridColumnDisSet(rowIndex, colIndex, 1);
                end;
            end;
          end;

        end;
        // --- DEL 2013/04/18 T.Nishi ---------->>>>>
        //// ADD 2013/02/05 T.Miyamoto ------------------------------>>>>>
        ////-----------------------------------------------------------------------------
        //// 受注
        ////-----------------------------------------------------------------------------
        //acptAnOdrStatusState_AcceptAnOrder:
        //begin
        //  // 編集可
        //  xGridColumnDisSet(rowIndex, colIndex, 0);
        //end;
        //// ADD 2013/02/05 T.Miyamoto ------------------------------<<<<<
        // --- DEL 2013/04/18 T.Nishi ----------<<<<<
      end;

      // 商品値引き判定
      if (editStatus = ctEDITSTATUS_GoodsDiscount) then
      begin
        xGridColumnDisSet(rowIndex, colIndex, 1);
      end;

      // 発注選択済み明細判定
      if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 1) = 1) then
        xGridColumnDisSet(rowIndex, colIndex, 1);

    end;
  end;
end;

// *************************************************************************
// 得意先注番設定処理
// *************************************************************************
procedure TForm4.xIsAllowEditPartySlipNumDtlColumn(rowIndex: Integer; colIndex: Integer; mode:Integer);
begin
  case mode of
  // 計上新規の得意先注番設定
  0:
    begin
      case salesSlip_disp.CustOrderNoDispDiv of
      // 表示しない
      0:
        xGridColumnDisSet(rowIndex, colIndex, 1);
      // 表示する
      1:
        xGridColumnDisSet(rowIndex, colIndex, 0);
      else
        xGridColumnDisSet(rowIndex, colIndex, 0);
      end;
    end;
  1:
    begin

    end;
  end;
end;

// *************************************************************************
// 仕入情報入力設定処理
// *************************************************************************
procedure TForm4.xIsAllowEditSuppli(rowIndex: Integer; colIndex: Integer; mode:Integer);
var editStatus : Integer;
    salesRowNo : Integer;
begin
  editStatus := RCHNB01003UADM.EditStatus[rowIndex div 2 -1 ];
  salesRowNo := RCHNB01003UADM.SalesRowNo[rowIndex div 2 -1 ];
  case mode of
  // 計上新規の仕入情報入力設定
  0:
    begin
      if ((editStatus = ctEDITSTATUS_GoodsDiscount)
        or (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 1) = 1)
        or (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 6) = 1)
        or (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 7) = 0)
        // --- UPD 2013/04/02③ T.Miyamoto ------------------------------>>>>>
        //or (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 8) = 0)) then
        or (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 8) = 0)
        or ((optStockEntCtrl = 1) and // 売仕入同時入力制御オプション(OPT-CPM0050)がオンの場合
            (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 20) = 1))) then
        // --- UPD 2013/04/02③ T.Miyamoto ------------------------------>>>>>
         xGridColumnDisSet(rowIndex, colIndex, 2);
    end;
  1:
    begin

    end;
  end;
end;

// *************************************************************************
// 納品完了予定日処理
// *************************************************************************
procedure TForm4.xIsAllowEditDeliGdsCmpltDueDateColum(rowIndex: Integer; colIndex: Integer; acceptAnOrderCntDisplay:Double; mode:Integer);
begin
// 2011/01/31 >>>
//  if (acceptAnOrderCntDisplay <> 0) then
  if (( salesSlip_disp.AcptAnOdrStatusDisplay = AcptAnOdrStatusState_Estimate) or
      ( salesSlip_disp.AcptAnOdrStatusDisplay = AcptAnOdrStatusState_Sales)) then
// 2011/01/31 <<<
  begin
    xGridColumnDisSet(rowIndex, colIndex, 0);// 編集可能
  end else
  begin
    xGridColumnDisSet(rowIndex, colIndex, 1);// 編集不可
  end;
end;

// *************************************************************************
// 出荷数処理
// *************************************************************************
procedure TForm4.xShipmentCntColumIsAllowEdit(rowIndex: Integer; colIndex: Integer; mode:Integer);
var tempStr: string;
    salesRowNo: Integer;
begin
  salesRowNo := RCHNB01003UADM.SalesRowNo[rowIndex div 2 -1 ];
  case mode of
  // 計上新規の出荷数設定
  0:
    begin
      // 発注選択済み明細判定
      if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 1) = 1) then
        xGridColumnDisSet(rowIndex, colIndex, 1)
      else xGridColumnDisSet(rowIndex, colIndex, 0);
    end;
  // 通常修正、計上編集の受注数設定
  1:
    begin
      case salesSlip_disp.AcptAnOdrStatusDisplay of
        //-----------------------------------------------------------------------------
        // 見積
        //-----------------------------------------------------------------------------
        AcptAnOdrStatusState_Estimate:
        begin
           // 編集可能
           xGridColumnDisSet(rowIndex, colIndex, 0);
        end;
        //-----------------------------------------------------------------------------
        // 単価見積
        //-----------------------------------------------------------------------------
        AcptAnOdrStatusState_UnitPriceEstimate:
        begin
           // 編集不可
           xGridColumnDisSet(rowIndex, colIndex, 1);

        end;
        //-----------------------------------------------------------------------------
        // 売上 出荷
        //-----------------------------------------------------------------------------
        AcptAnOdrStatusState_Sales:
        begin
          tempStr := salesSlip_disp.SalesSlipNum;
          if ((salesSlip_disp.AcptAnOdrStatus = AcptAnOdrStatusState_AcceptAnOrder)
            and (xStringZeroAdd(tempStr, 9) <> ctDefaultSalesSlipNum)) then
          begin
            // 編集不可
            xGridColumnDisSet(rowIndex, colIndex, 1);
          end else
          begin
            // 編集可能
            xGridColumnDisSet(rowIndex, colIndex, 0);
          end;
        end;
        AcptAnOdrStatusState_Shipment:
        begin
            // 編集可能
            xGridColumnDisSet(rowIndex, colIndex, 0);
        end;
        // --- DEL 2013/04/18 T.Nishi ---------->>>>>
        //// ADD 2013/02/05 T.Miyamoto ------------------------------>>>>>
        ////-----------------------------------------------------------------------------
        //// 受注
        ////-----------------------------------------------------------------------------
        //acptAnOdrStatusState_AcceptAnOrder:
        //begin
        //   // 編集不可
        //   xGridColumnDisSet(rowIndex, colIndex, 1);
        //end;
        //// ADD 2013/02/05 T.Miyamoto ------------------------------<<<<<
        // --- DEL 2013/04/18 T.Nishi ----------<<<<<
      end;

      // 発注選択済み明細判定
      //this._salesSlipInputAcs.ExistOrderInfo(salesRowNo)
      if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 1) = 1) then
        xGridColumnDisSet(rowIndex, colIndex, 1);
    end;
  end;
end;

// *************************************************************************
// 定価処理
// *************************************************************************
procedure TForm4.xIsAllowEditListPriceColum(rowIndex: Integer; colIndex: Integer; mode:Integer);
begin
  case mode of
    // 計上新規の定価設定
    0:
      begin
        case salesTtlSt.SlipChngDivLPrice of
          // 修正可能
          0:
            xGridColumnDisSet(rowIndex, colIndex, 0);
          // 修正不可
          1:
            xGridColumnDisSet(rowIndex, colIndex, 1);
        else
            xGridColumnDisSet(rowIndex, colIndex, 0);
        end;
      end;
    // 通常入力
    1:
      begin
        xGridColumnDisSet(rowIndex, colIndex, 0); // ADD 2010/07/01
      end;
  end;
end;


// *************************************************************************
// 原単価／原価率処理
// *************************************************************************
procedure TForm4.xIsAllowEditSalesUnitCostColum(rowIndex: Integer; colIndex: Integer; mode:Integer);
var  salesRowNo : Integer;
begin
  salesRowNo := RCHNB01003UADM.SalesRowNo[rowIndex div 2 -1 ];
  case mode of
    // 計上新規の原単価／原価率設定
    0:
      begin
        case salesTtlSt.CostDspDivCd of
           // しない
           0:
            xGridColumnDisSet(rowIndex, colIndex, 1);
           // する
           1:
            begin
              // HOMEキーによる制御
              if _costDisplay = False then
                xGridColumnDisSet(rowIndex, colIndex, 1)
              else
              begin
                if (salesSlip_disp.SalesSlipCd <> SalesSlipCd_RetGoods) then
                begin
                  case salesTtlSt.SlipChngDivCost of
                    // 修正可能
                    0:
                      xGridColumnDisSet(rowIndex, colIndex, 0);
                    // 修正不可
                    1:
                      xGridColumnDisSet(rowIndex, colIndex, 1);
                    // 未使用
                    2:
                      xGridColumnDisSet(rowIndex, colIndex, 1);
                    // 在庫時不可
                    3:
                      begin
                        //this._salesSlipInputAcs.ExistSalesDetailWarehouseCode(salesRowNo)
                        if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 6) = 1) then
                          xGridColumnDisSet(rowIndex, colIndex, 1)
                        else
                          xGridColumnDisSet(rowIndex, colIndex, 0);
                      end;
                  else
                      xGridColumnDisSet(rowIndex, colIndex, 0);
                  end;
                end else
                begin
                  case salesTtlSt.RetSlipChngDivCost of
                    // 修正可能
                    0:
                      xGridColumnDisSet(rowIndex, colIndex, 0);
                    // 修正不可
                    1:
                      xGridColumnDisSet(rowIndex, colIndex, 1);
                    // 未使用
                    2:
                      xGridColumnDisSet(rowIndex, colIndex, 1);
                    // 在庫時不可
                    3:
                      begin
                        //this._salesSlipInputAcs.ExistSalesDetailWarehouseCode(salesRowNo)
                        if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 6) = 1) then
                          xGridColumnDisSet(rowIndex, colIndex, 1)
                        else
                          xGridColumnDisSet(rowIndex, colIndex, 0);
                      end;
                  else
                      xGridColumnDisSet(rowIndex, colIndex, 0);
                  end;
                end;
              end;
            end;
        end;
      end;
    // 通常入力
    1:
      begin
        case salesTtlSt.CostDspDivCd of
          // しない
          0:
            xGridColumnDisSet(rowIndex, colIndex, 1);
          // する
          1:
          begin
              // HOMEキーによる制御
              if _costDisplay = False then
                xGridColumnDisSet(rowIndex, colIndex, 1)
              else
                // --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
                //xGridColumnDisSet(rowIndex, colIndex, 0);
              begin
                if (optSalesCostCtrl = 1) then // 原価修正制御オプション(OPT-CPM0070)がオンの場合
                begin
                  if (salesSlip_disp.SalesSlipCd <> salesSlipCd_RetGoods) then
                  begin
                    case salesTtlSt.SlipChngDivCost of
                      // 修正可能
                      0:
                        xGridColumnDisSet(rowIndex, colIndex, 0);
                      // 修正不可
                      1:
                        xGridColumnDisSet(rowIndex, colIndex, 1);
                      // 未使用
                      2:
                        xGridColumnDisSet(rowIndex, colIndex, 1);
                      // 在庫時不可
                      3:
                        begin
                          // this._salesSlipInputAcs.ExistSalesDetailWarehouseCode(salesRowNo)
                          if (gpxMAHNB01013B_GridJoinCheck(salesRowNo,
                              rowIndex, -1, 6) = 1) then
                            xGridColumnDisSet(rowIndex, colIndex, 1)
                          else
                            xGridColumnDisSet(rowIndex, colIndex, 0);
                        end;
                    else
                      xGridColumnDisSet(rowIndex, colIndex, 0);
                    end;
                  end
                  else
                  begin
                    case salesTtlSt.RetSlipChngDivCost of
                      // 修正可能
                      0:
                        xGridColumnDisSet(rowIndex, colIndex, 0);
                      // 修正不可
                      1:
                        xGridColumnDisSet(rowIndex, colIndex, 1);
                      // 未使用
                      2:
                        xGridColumnDisSet(rowIndex, colIndex, 1);
                      // 在庫時不可
                      3:
                        begin
                          // this._salesSlipInputAcs.ExistSalesDetailWarehouseCode(salesRowNo)
                          if (gpxMAHNB01013B_GridJoinCheck(salesRowNo,
                              rowIndex, -1, 6) = 1) then
                            xGridColumnDisSet(rowIndex, colIndex, 1)
                          else
                            xGridColumnDisSet(rowIndex, colIndex, 0);
                        end;
                    else
                      xGridColumnDisSet(rowIndex, colIndex, 0);
                    end;
                  end;
                end
                else
                begin
                  xGridColumnDisSet(rowIndex, colIndex, 0);
                end;
              end;
              // --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
          end;
        end;
      end;
  end;
end;

// *************************************************************************
// 売単価／売価率処理
// *************************************************************************
procedure TForm4.xIsAllowEditSalesUnPrcColum(rowIndex: Integer; colIndex: Integer; mode:Integer);
var  salesRowNo : Integer;
begin
  salesRowNo := RCHNB01003UADM.SalesRowNo[rowIndex div 2 -1 ];
  case mode of
    // 計上新規の売単価／売価率設定
    0:
    begin
      if (salesSlip_disp.SalesSlipCd <> SalesSlipCd_RetGoods) then
      begin
        case salesTtlSt.SlipChngDivUnPrc of
          // 修正可能
          0:
            xGridColumnDisSet(rowIndex, colIndex, 0);
          // 修正不可
          1:
            xGridColumnDisSet(rowIndex, colIndex, 1);
          // 在庫時不可
          2:
          begin
            //this._salesSlipInputAcs.ExistSalesDetailWarehouseCode(salesRowNo)
            if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 6) = 1) then
              xGridColumnDisSet(rowIndex, colIndex, 1)
            else
              xGridColumnDisSet(rowIndex, colIndex, 0);
          end;
        else
            xGridColumnDisSet(rowIndex, colIndex, 0);
        end;
      end else
      begin
        case salesTtlSt.RetSlipChngDivUnPrc of
          // 修正可能
          0:
            xGridColumnDisSet(rowIndex, colIndex, 0);
          // 修正不可
          1:
            xGridColumnDisSet(rowIndex, colIndex, 1);
          // 在庫時不可
          2:
          begin
            //this._salesSlipInputAcs.ExistSalesDetailWarehouseCode(salesRowNo)
            if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 6) = 1) then
              xGridColumnDisSet(rowIndex, colIndex, 1)
            else
              xGridColumnDisSet(rowIndex, colIndex, 0);
          end;
        else
            xGridColumnDisSet(rowIndex, colIndex, 0);
        end;
      end;
    end;
    // 通常入力
    1:
      begin
        // --- UPD 2013/04/02① T.Miyamoto ------------------------------>>>>>
        xGridColumnDisSet(rowIndex, colIndex, 0);
        //// --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
        ////xGridColumnDisSet(rowIndex, colIndex, 0);
        //if (optSalesCostCtrl = 1) then // 原価修正制御オプション(OPT-CPM0070)がオンの場合
        //begin
        //  if (salesSlip_disp.SalesSlipCd <> salesSlipCd_RetGoods) then
        //  begin
        //    case salesTtlSt.SlipChngDivUnPrc of
        //      // 修正可能
        //      0:
        //        xGridColumnDisSet(rowIndex, colIndex, 0);
        //      // 修正不可
        //      1:
        //        xGridColumnDisSet(rowIndex, colIndex, 1);
        //      // 在庫時不可
        //      2:
        //        begin
        //          if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1,
        //              6) = 1) then
        //            xGridColumnDisSet(rowIndex, colIndex, 1)
        //          else
        //            xGridColumnDisSet(rowIndex, colIndex, 0);
        //        end;
        //    else
        //      xGridColumnDisSet(rowIndex, colIndex, 0);
        //    end;
        //  end
        //  else
        //  begin
        //    case salesTtlSt.RetSlipChngDivUnPrc of
        //      // 修正可能
        //      0:
        //        xGridColumnDisSet(rowIndex, colIndex, 0);
        //      // 修正不可
        //      1:
        //        xGridColumnDisSet(rowIndex, colIndex, 1);
        //      // 在庫時不可
        //      2:
        //        begin
        //          if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1,
        //              6) = 1) then
        //            xGridColumnDisSet(rowIndex, colIndex, 1)
        //          else
        //            xGridColumnDisSet(rowIndex, colIndex, 0);
        //        end;
        //    else
        //      xGridColumnDisSet(rowIndex, colIndex, 0);
        //    end;
        //  end;
        //end
        //else
        //begin
        //  xGridColumnDisSet(rowIndex, colIndex, 0);
        //end;
        //// --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
        // --- UPD 2013/04/02① T.Miyamoto ------------------------------<<<<<
      end;
  end;
end;



// *************************************************************************
// 明細グリッド・行単位でのセル設定
// *************************************************************************
procedure TForm4.xSettingGridRow(rowIndex: Integer);
var col: Integer;
    salesRowNo: Integer;                    // 行番号
    goodsName: string;                      // 品名
    goodsNo: string;                        // 品番
    goodsKindCode: Integer;                 // 商品種別
    editStatus: Integer;                    // 変更可能ステータス
    rowStatus: Integer;                     // 行ステータス
    acceptAnOrderCntDisplay: Double;        // 受注数
    shipmentCntDisplay: Double;             // 出荷数
    shipmentCnt: Double;
    salesSlipCdDtl: Integer;                // 売上伝票区分(明細)
    rowName: string;
    colName : string; // カラム名 2010/10/26 Sasaki
    cooprtFlag : Boolean; //ADD 2011/11/22
begin
  case salesSlip_disp.SalesGoodsCd of
    //----------------------------------------------------
    // 商品
    //----------------------------------------------------
    salesGoodsCd_Goods:
      begin
        salesRowNo := RCHNB01003UADM.SalesRowNo[rowIndex div 2 -1 ];// 行番号
        goodsName := RCHNB01003UADM.GoodsName[rowIndex div 2 -1 ];// 品名
        goodsNo := RCHNB01003UADM.GoodsNo[rowIndex div 2 -1 ]; // 品番
        goodsKindCode := RCHNB01003UADM.GoodsKindCode[rowIndex div 2 -1 ];// 商品種別
        editStatus := RCHNB01003UADM.EditStatus[rowIndex div 2 -1 ]; // 変更可能ステータス
        rowStatus := RCHNB01003UADM.RowStatus[rowIndex div 2 -1 ]; // 行ステータス
        acceptAnOrderCntDisplay := RCHNB01003UADM.AcceptAnOrderCntDisplay[rowIndex div 2 -1 ];// 受注数
        shipmentCntDisplay := RCHNB01003UADM.ShipmentCntDisplay[rowIndex div 2 -1 ]; // 出荷数
        shipmentCnt := RCHNB01003UADM.ShipmentCnt[rowIndex div 2 -1 ];
        salesSlipCdDtl := RCHNB01003UADM.SalesSlipCdDtl[rowIndex div 2 -1 ];// 売上伝票区分(明細)
        normalInputFlg := False; // ADD 2010/07/01
        //---ADD 2011/11/22-------------->>>>>
        cooprtFlag := False;
        gpxMAHNB01013B_CooprtKindDiv(cooprtFlag);
        //---ADD 2011/11/22--------------<<<<<
        // 指定行の全ての列に対して設定を行う。
        for col := 0 to HNsGrid1.ColCount do
          begin
            // 2010/10/26 Sasaki >>
            colName := xGridColIndexToName(rowIndex,col);
            if (colName = '') then continue;
            // 2010/10/26 Sasaki <<
            //アンダーラインを全てのセルに対して非表示とする
            //TODO:cell.Appearance.FontData.Underline = Infragistics.Win.DefaultableBoolean.False;
             Underlineflag := false;
            if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly)
                or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp))  then
            begin
                //------------------------------------------------
                // 入力モード(読み取り専用or締め済み)
                //------------------------------------------------
                // 商品名未入力
                if (goodsName = '') then
                   xGridColumnDisSet(rowIndex, col, 2) // 使用不可
                else
                   xGridColumnDisSet(rowIndex, col, 1);// 編集不可
            end
            else
            begin
              //------------------------------------------------
              // 全項目無効
              //------------------------------------------------
              if (editStatus =ctEDITSTATUS_AllDisable) then
              begin
                 // 使用不可
                 xGridColumnDisSet(rowIndex, col, 2);
                 // メモ入力
                 // 2010/10/26 Sasaki >>>
//                 if ((col = ctCol_SlipMemoExist) and ((rowIndex mod 2) = 0)) then
                 if ((colName = 'SlipMemoExist') and ((rowIndex mod 2) = 0)) then
                 // 2010/10/26 Sasaki <<<
                    xIsAllowEditSlipMemoExistColumn(rowIndex, col, salesRowNo);
              end

              //------------------------------------------------
              // 参照のみ
              //------------------------------------------------
              else if (editStatus = ctEDITSTATUS_AllReadOnly) then
              begin
                 // 2010/10/26 Sasaki >>>
//                 if ((col = ctCol_RowNo) and ((rowIndex mod 2) = 0)) then
                 if ((colName = 'SalesRowNoDisplay') and ((rowIndex mod 2) = 0)) then
                 // 2010/10/26 Sasaki <<<
                 begin
                   //
                 end
                 // 2010/10/26 Sasaki >>>
//                 else if ((col = ctCol_ShipmentCntDisplay) and ((rowIndex mod 2) = 1)) then
                 else if ((colName = 'ShipmentCntDisplay') and ((rowIndex mod 2) = 1)) then
                 // 2010/10/26 Sasaki <<<
                 begin
                    Underlineflag := true;
                   //TODO:cell.Appearance.FontData.Underline = Infragistics.Win.DefaultableBoolean.True;
                   // 編集不可
                   xGridColumnDisSet(rowIndex, col, 1);
                 end
                 // メモ入力
                 // 2010/10/26 Sasaki >>>
//                 else if ((col = ctCol_SlipMemoExist) and ((rowIndex mod 2) = 0)) then
                 else if ((colName = 'SlipMemoExist') and ((rowIndex mod 2) = 0)) then
                 // 2010/10/26 Sasaki <<<
                 begin
                    // 編集不可
                   xGridColumnDisSet(rowIndex, col, 1);
                   //メモ存在チェック(メモ有無イメージ設定)
                   xIsAllowEditSlipMemoExistColumn(rowIndex, col, salesRowNo);
                 end
                 else
                 begin
                    // 編集不可
                    xGridColumnDisSet(rowIndex, col, 1);
                 end;
              end

              //------------------------------------------------
              // 数量のみ編集可
              //------------------------------------------------
              else if (editStatus = ctEDITSTATUS_ShipmentCountOnly) then
              begin
                 // 出荷数 明細備考
                 // 2010/10/26 Sasaki >>>
//                 if (((col = ctCol_ShipmentCntDisplay) and ((rowIndex mod 2) = 1))
//                     or ((col = ctCol_DtlNote) and ((rowIndex mod 2) = 0))) then
                 if (((colName = 'ShipmentCntDisplay') and ((rowIndex mod 2) = 1)) or
                     ((colName = 'DtlNote') and ((rowIndex mod 2) = 0))) then
                 // 2010/10/26 Sasaki <<<
                 begin
                   // 編集可能
                   xGridColumnDisSet(rowIndex, col, 0);
                 end
                 // 倉庫
                 // 2010/10/26 Sasaki >>>
//                 else if ((col = ctCol_WarehouseCode) and ((rowIndex mod 2) = 0)) then
                 else if ((colName = 'WarehouseCode') and ((rowIndex mod 2) = 0)) then
                 // 2010/10/26 Sasaki <<<
                 begin
                    if ((salesTtlSt.RetGoodsStockEtyDiv = 0)// 返品時在庫登録区分(0:する 1:しない)
                      and (salesSlip_disp.SalesSlipCd = SalesSlipCd_RetGoods)// 返品
                      and (RCHNB01003UADM.SalesSlipDtlNumSrc[rowIndex div 2 -1] <> 0)  // 元データあり
                      and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum)) then // 新規登録
                    begin
                      // 編集可能
                      xGridColumnDisSet(rowIndex, col, 0);
                    end else
                    begin
                      // 編集不可
                      xGridColumnDisSet(rowIndex, col, 1);
                    end;
                 end
                 // メモ入力
                 // 2010/10/26 Sasaki >>>
//                 else if ((col = ctCol_SlipMemoExist) and ((rowIndex mod 2) = 0)) then
                 else if ((colName = 'SlipMemoExist') and ((rowIndex mod 2) = 0)) then
                 // 2010/10/26 Sasaki <<<
                 begin
                    // 編集不可
                    xGridColumnDisSet(rowIndex, col, 1);
                    //メモ存在チェック(メモ有無イメージ設定)
                    xIsAllowEditSlipMemoExistColumn(rowIndex, col, salesRowNo);
                 end
                 else
                 begin
                   // 編集不可
                   xGridColumnDisSet(rowIndex, col, 1);
                 end;
              end

               //------------------------------------------------
              // 計上新規
              //------------------------------------------------
              else if (editStatus = ctEDITSTATUS_AddUpNew) then
              begin
                 // 2010/10/26 Sasaki >>>
//                 if (((col = ctCol_GoodsNo) and ((rowIndex mod 2) = 1)) // 品番
//                     or ((col = ctCol_GoodsMakerCd) and ((rowIndex mod 2) = 1)) // メーカー
//                     or ((col = ctCol_GoodsKindCode) and ((rowIndex mod 2) = 1))   // 純優区分
//                     or ((col = ctCol_BLGoodsCode) and ((rowIndex mod 2) = 0))     // BLコード
//                     or ((col = ctCol_WarehouseCode) and ((rowIndex mod 2) = 0))   // 倉庫コード
//                     or ((col = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 1)) // 売上金額
//                     or ((col = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 0))) then // 原価金額
                 if (((colName = 'GoodsNo') and ((rowIndex mod 2) = 1)) or            // 品番
                     ((colName = 'GoodsMakerCd') and ((rowIndex mod 2) = 1)) or       // メーカー
                     ((colName = 'GoodsKindCode') and ((rowIndex mod 2) = 1)) or      // 純優区分
                     ((colName = 'BLGoodsCode') and ((rowIndex mod 2) = 0)) or        // BLコード
                     //((colName = 'WarehouseCode') and ((rowIndex mod 2) = 0)) or      // 倉庫コード  // DEL 2011/11/22
                     ((cooprtFlag = false) and (colName = 'WarehouseCode') and ((rowIndex mod 2) = 0)) or // 倉庫コード // ADD 2011/11/22
                     ((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 1)) or  // 売上金額
                     ((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 0))) then // 原価金額
                 // 2010/10/26 Sasaki <<<
                 begin
                   // 編集不可
                   xGridColumnDisSet(rowIndex, col, 1);
                 end
                 // 受注数
                 // 「受注数」は見積計上時のみ編集可能
                 // 2010/10/26 Sasaki >>>
//                 else if ((col = ctCol_AcceptAnOrderCntDisplay) and ((rowIndex mod 2) = 0)) then
                 else if ((colName = 'AcceptAnOrderCntDisplay') and ((rowIndex mod 2) = 0)) then
                 // 2010/10/26 Sasaki <<<
                 begin
                    xIsAllowEditAcceptAnOrderCntColum(rowIndex, col, 0);
                 end
                 // 出荷数
                 // 2010/10/26 Sasaki >>>
//                 else if ((col = ctCol_ShipmentCntDisplay) and ((rowIndex mod 2) = 1)) then
                 else if ((colName = 'ShipmentCntDisplay') and ((rowIndex mod 2) = 1)) then
                 // 2010/10/26 Sasaki <<<
                 begin
                    xShipmentCntColumIsAllowEdit(rowIndex, col, 0);
                 end
                 // 定価
                 // 2010/10/26 Sasaki >>>
//                 else if ((col = ctCol_ListPriceDisplay) and ((rowIndex mod 2) = 1)) then
                 else if ((colName = 'ListPriceDisplay') and ((rowIndex mod 2) = 1)) then
                 // 2010/10/26 Sasaki <<<
                 begin
                    xIsAllowEditListPriceColum(rowIndex, col, 0);
                 end
                 // 原単価／原価率
                 // 2010/10/26 Sasaki >>>
//                 else if (((col = ctCol_CostRate) and ((rowIndex mod 2) = 0))
//                          or ((col = ctCol_SalesUnitCost) and ((rowIndex mod 2) = 0))) then
                 else if (((colName = 'CostRate') and ((rowIndex mod 2) = 0)) or
                          ((colName = 'SalesUnitCost') and ((rowIndex mod 2) = 0))) then
                 // 2010/10/26 Sasaki <<<
                   begin
                      xIsAllowEditSalesUnitCostColum(rowIndex, col, 0);
                   end
                 // 売単価／売価率
                 // 2010/10/26 Sasaki >>>
//                 else if (((col = ctCol_SalesUnPrcDisplay) and ((rowIndex mod 2) = 1))
//                          or ((col = ctCol_SalesRate) and ((rowIndex mod 2) = 1))
//                          or ((col = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 1))) then
                 else if (((colName = 'SalesUnPrcDisplay') and ((rowIndex mod 2) = 1)) or
                          ((colName = 'SalesRate') and ((rowIndex mod 2) = 1)) or
                          ((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 1))) then
                 // 2010/10/26 Sasaki <<<
                 begin
                      xIsAllowEditSalesUnPrcColum(rowIndex, col, 0);
                 end
                 // 納品完了予定日
                 // 2010/10/26 Sasaki >>>
//                 else if ((col = ctCol_DeliGdsCmpltDueDate) and ((rowIndex mod 2) = 1)) then
                 else if ((colName = 'DeliGdsCmpltDueDate') and ((rowIndex mod 2) = 1)) then
                 // 2010/10/26 Sasaki <<<
                 begin
                    xIsAllowEditDeliGdsCmpltDueDateColum(rowIndex, col, acceptAnOrderCntDisplay, 0);
                 end
                 // 得意先注番
                 // 2010/10/26 Sasaki >>>
//                 else if ((col = ctCol_PartySlipNumDtl) and ((rowIndex mod 2) = 1)) then
                 else if ((colName = 'PartySlipNumDtl') and ((rowIndex mod 2) = 1)) then
                 // 2010/10/26 Sasaki <<<
                 begin
                    xIsAllowEditPartySlipNumDtlColumn(rowIndex, col, 0);
                 end
                 // メモ入力
                 // 2010/10/26 Sasaki >>>
//                 else if ((col = ctCol_SlipMemoExist) and ((rowIndex mod 2) = 0)) then
                 else if ((colName = 'SlipMemoExist') and ((rowIndex mod 2) = 0)) then
                 // 2010/10/26 Sasaki <<<
                 begin
                    // 編集不可
                    xGridColumnDisSet(rowIndex, col, 1);
                   // メモ存在チェック(メモ有無イメージ設定)
                   xIsAllowEditSlipMemoExistColumn(rowIndex, col, salesRowNo);
                 end
                 // その他
                 else
                 begin
                   // 編集可能
                   xGridColumnDisSet(rowIndex, col, 0);
                 end;

                 // 発注情報入力不可
                 xIsAllowEditUOE(rowIndex, col, 0);

                 // 仕入情報入力不可
                 // 2010/10/26 Sasaki >>>
//                 if (((col = ctCol_SupplierCdForStock) and ((rowIndex mod 2) = 0))
//                   or ((col = ctCol_PartySalesSlipNum) and ((rowIndex mod 2) = 1))
//                   or ((col = ctCol_StockDate) and ((rowIndex mod 2) = 0))) then
                 if (((colName = 'SupplierCdForStock') and ((rowIndex mod 2) = 0)) or
                     ((colName = 'PartySalesSlipNum') and ((rowIndex mod 2) = 1)) or
                     ((colName = 'StockDate') and ((rowIndex mod 2) = 0))) then
                 // 2010/10/26 Sasaki <<<
                 begin
                   xIsAllowEditSuppli(rowIndex, col, 0);
                 end;
              end


              //------------------------------------------------
              // 通常修正、計上編集
              //------------------------------------------------
              else if ((editStatus = ctEDITSTATUS_ExistSlip)
                or (editStatus = ctEDITSTATUS_AddUpEdit)) then
              begin
                //if (this._salesSlipInputAcs.ExistOrderInfo(salesRowNo))
                if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 1) = 1) then
                begin
                    // 発注情報存在時は、全項目変更不可
                    // 2010/10/26 Sasaki >>>
//                    if (((col = ctCol_SupplierCdForStock) and ((rowIndex mod 2) = 0))
//                      or ((col = ctCol_PartySalesSlipNum) and ((rowIndex mod 2) = 1))
//                      or ((col = ctCol_StockDate) and ((rowIndex mod 2) = 0))) then
                    if (((colName = 'SupplierCdForStock') and ((rowIndex mod 2) = 0)) or
                        ((colName = 'PartySalesSlipNum') and ((rowIndex mod 2) = 1)) or
                        ((colName = 'StockDate') and ((rowIndex mod 2) = 0))) then
                    // 2010/10/26 Sasaki <<<
                    begin
                      // 使用不可
                      xGridColumnDisSet(rowIndex, col, 2);
                    end else
                    begin
                      // 編集不可
                      xGridColumnDisSet(rowIndex, col, 1);
                    end;
                end else
                begin
                  // 2010/10/26 Sasaki >>>
//                  if (((col = ctCol_GoodsNo) and ((rowIndex mod 2) = 1)) // 品番
//                     or ((col = ctCol_GoodsMakerCd) and ((rowIndex mod 2) = 1)) // メーカー
//                     or ((col = ctCol_GoodsKindCode) and ((rowIndex mod 2) = 1))   // 純優区分
//                     or ((col = ctCol_BLGoodsCode) and ((rowIndex mod 2) = 0))     // BLコード
//                     or ((col = ctCol_WarehouseCode) and ((rowIndex mod 2) = 0))   // 倉庫コード
//                     or ((col = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 1)) // 売上金額
//                     or ((col = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 0))) then // 原価金額
                  if (((colName = 'GoodsNo') and ((rowIndex mod 2) = 1)) or         // 品番
                      ((colName = 'GoodsMakerCd') and ((rowIndex mod 2) = 1)) or    // メーカー
                      ((colName = 'GoodsKindCode') and ((rowIndex mod 2) = 1)) or   // 純優区分
                      ((colName = 'BLGoodsCode') and ((rowIndex mod 2) = 0)) or     // BLコード
                      ((colName = 'WarehouseCode') and ((rowIndex mod 2) = 0)) or   // 倉庫コード
                      ((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 1)) or // 売上金額
                      ((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 0))) then // 原価金額
                  // 2010/10/26 Sasaki <<<
                   begin
                     // 編集不可
                     xGridColumnDisSet(rowIndex, col, 1);
                   end

                  //-----------------------------------------------------------------------------
                  // 受注数
                  //-----------------------------------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_AcceptAnOrderCntDisplay) and ((rowIndex mod 2) = 0)) then
                  else if ((colName = 'AcceptAnOrderCntDisplay') and ((rowIndex mod 2) = 0)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    xIsAllowEditAcceptAnOrderCntColum(rowIndex, col, 1);
                  end

                  //-----------------------------------------------------------------------------
                  // 出荷数
                  //-----------------------------------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_ShipmentCntDisplay) and ((rowIndex mod 2) = 1)) then
                  else if ((colName = 'ShipmentCntDisplay') and ((rowIndex mod 2) = 1)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    xShipmentCntColumIsAllowEdit(rowIndex, col, 1);
                  end

                  //-----------------------------------------------------------------------------
                  // 定価
                  //-----------------------------------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_ListPriceDisplay) and ((rowIndex mod 2) = 1)) then
                  else if ((colName = 'ListPriceDisplay') and ((rowIndex mod 2) = 1)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    xIsAllowEditListPriceColum(rowIndex, col, 0);
                  end

                  //-----------------------------------------------------------------------------
                  // 原単価／原価率
                  //-----------------------------------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if (((col = ctCol_CostRate) and ((rowIndex mod 2) = 0))
//                          or ((col = ctCol_SalesUnitCost) and ((rowIndex mod 2) = 0))) then
                  else if (((colName = 'CostRate') and ((rowIndex mod 2) = 0))
                          or ((colName = 'SalesUnitCost') and ((rowIndex mod 2) = 0))) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    xIsAllowEditSalesUnitCostColum(rowIndex, col, 0);
                  end

                  //-----------------------------------------------------------------------------
                  // 売単価／売価率
                  //-----------------------------------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if (((col = ctCol_SalesUnPrcDisplay) and ((rowIndex mod 2) = 1))
//                        or ((col = ctCol_SalesRate) and ((rowIndex mod 2) = 1))
//                        or ((col = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 1))) then
                  else if (((colName = 'SalesUnPrcDisplay') and ((rowIndex mod 2) = 1)) or
                           ((colName = 'SalesRate') and ((rowIndex mod 2) = 1)) or
                           ((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 1))) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    xIsAllowEditSalesUnPrcColum(rowIndex, col, 0);
                  end

                  //-----------------------------------------------------------------------------
                  // 納品完了予定日
                  //-----------------------------------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_DeliGdsCmpltDueDate) and ((rowIndex mod 2) = 1)) then
                  else if ((colName = 'DeliGdsCmpltDueDate') and ((rowIndex mod 2) = 1)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    xIsAllowEditDeliGdsCmpltDueDateColum(rowIndex, col, acceptAnOrderCntDisplay, 0);
                  end

                  //-----------------------------------------------------------------------------
                  // 得意先注番
                  //-----------------------------------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_PartySlipNumDtl) and ((rowIndex mod 2) = 1)) then
                  else if ((colName = 'PartySlipNumDtl') and ((rowIndex mod 2) = 1)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    xIsAllowEditPartySlipNumDtlColumn(rowIndex, col, 0);
                  end

                  //-----------------------------------------------------------------------------
                  // メモ入力
                  //-----------------------------------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_SlipMemoExist) and ((rowIndex mod 2) = 0)) then
                  else if ((colName = 'SlipMemoExist') and ((rowIndex mod 2) = 0)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    // 編集不可
                    xGridColumnDisSet(rowIndex, col, 1);
                    //メモ存在チェック(メモ有無イメージ設定)
                    xIsAllowEditSlipMemoExistColumn(rowIndex, col, salesRowNo);
                  end

                  //-----------------------------------------------------------------------------
                  // その他
                  //-----------------------------------------------------------------------------
                  else
                  begin
                    // 編集可能
                    xGridColumnDisSet(rowIndex, col, 0);
                  end;

                  //-------------------------------------------------------------------------
                  // 発注情報入力不可
                  //-----------------------------------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  if (((col = ctCol_BoCode) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_SupplierCdForOrder) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_AcceptAnOrderCntForOrder) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_SupplierSnmForOrder) and ((rowIndex mod 2) = 1))
//                    or ((col = ctCol_DeliveredGoodsDivNm) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_FollowDeliGoodsDivNm) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_UOEResvdSectionNm) and ((rowIndex mod 2) = 1))) then
                  if (((colName = 'BoCode') and ((rowIndex mod 2) = 0)) or
                      ((colName = 'SupplierCdForOrder') and ((rowIndex mod 2) = 0)) or
                      ((colName = 'AcceptAnOrderCntForOrder') and ((rowIndex mod 2) = 0)) or
                      ((colName = 'SupplierSnmForOrder') and ((rowIndex mod 2) = 1)) or
                      ((colName = 'DeliveredGoodsDivNm') and ((rowIndex mod 2) = 0)) or
                      ((colName = 'FollowDeliGoodsDivNm') and ((rowIndex mod 2) = 0)) or
                      ((colName = 'UOEResvdSectionNm') and ((rowIndex mod 2) = 1))) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    xGridColumnDisSet(rowIndex, col, 2);
                  end;

                  //---------------------------------------------------------------------
                  // 仕入情報入力不可
                  //-----------------------------------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  if (((col = ctCol_SupplierCdForStock) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_PartySalesSlipNum) and ((rowIndex mod 2) = 1))
//                    or ((col = ctCol_StockDate) and ((rowIndex mod 2) = 0))) then
                  if (((colName = 'SupplierCdForStock') and ((rowIndex mod 2) = 0)) or
                      ((colName = 'PartySalesSlipNum') and ((rowIndex mod 2) = 1)) or
                      ((colName = 'StockDate') and ((rowIndex mod 2) = 0))) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    xIsAllowEditSuppli(rowIndex, col, 0);
                  end;
                end;

              end

              //------------------------------------------------
              // 行値引
              //------------------------------------------------
              else if (editStatus = ctEDITSTATUS_RowDiscount) then
              begin
                // 売上金額、品名、販売区分は入力可
                // 2010/10/26 Sasaki >>>
//                if (((col = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 1))
//                  or ((col = ctCol_SalesCode) and ((rowIndex mod 2) = 0))
//                  or ((col = ctCol_GoodsName) and ((rowIndex mod 2) = 0))) then
                if (((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 1)) or
                    ((colName = 'SalesCode') and ((rowIndex mod 2) = 0)) or
                    ((colName = 'GoodsName') and ((rowIndex mod 2) = 0))) then
                // 2010/10/26 Sasaki <<<
                begin
                  xGridColumnDisSet(rowIndex, col, 0);

                  //>>>2011/05/25
                  //------------------------------------------------
                  // 販売区分
                  //------------------------------------------------
                  if ((colName = 'SalesCode') and ((rowIndex mod 2) = 0)) then
                  begin
                    case salesTtlSt.SalesCdDspDivCd of
                      0: // する
                        xGridColumnDisSet(rowIndex, col, 0);
                      1: // しない
                        xGridColumnDisSet(rowIndex, col, 2);
                      2: // 必須
                        xGridColumnDisSet(rowIndex, col, 0);
                    else
                      xGridColumnDisSet(rowIndex, col, 0);
                    end;
                  end
                  //<<<2011/05/25

                end
                // 2010/10/26 Sasaki >>>
//                else if (((col = ctCol_SalesUnitCost) and ((rowIndex mod 2) = 0))
//                  or ((col = ctCol_SalesUnPrcDisplay) and ((rowIndex mod 2) = 1))
//                  or ((col = ctCol_AcceptAnOrderCntDisplay) and ((rowIndex mod 2) = 0))
//                  or ((col = ctCol_ShipmentCntDisplay) and ((rowIndex mod 2) = 1))) then
                else if (((colName = 'SalesUnitCost') and ((rowIndex mod 2) = 0)) or
                         ((colName = 'SalesUnPrcDisplay') and ((rowIndex mod 2) = 1)) or
                         ((colName = 'AcceptAnOrderCntDisplay') and ((rowIndex mod 2) = 0)) or
                         ((colName = 'ShipmentCntDisplay') and ((rowIndex mod 2) = 1))) then
                // 2010/10/26 Sasaki <<<
                begin
                  //cell.Appearance.ForeColorDisabled = Color.Transparent;
                  xGridColumnDisSet(rowIndex, col, 2);
                  xTransparentFontColorSet(rowIndex, col, 1);
                end
                else
                begin
                  xGridColumnDisSet(rowIndex, col, 2);
                end;
              end

              //------------------------------------------------
              // 注釈
              //------------------------------------------------
              else if (editStatus = ctEDITSTATUS_Annotation) then
              begin
                // 品名は入力可
                // 2010/10/26 Sasaki >>>
//                if ((col = ctCol_GoodsName) and ((rowIndex mod 2) = 0)) then
                if ((colName = 'GoodsName') and ((rowIndex mod 2) = 0)) then
                // 2010/10/26 Sasaki <<<
                begin
                  xGridColumnDisSet(rowIndex, col, 0);
                end else
                begin
                  xGridColumnDisSet(rowIndex, col, 2);
                end;
              end

              //------------------------------------------------
              // 通常入力
              //------------------------------------------------
              else
              begin

                // --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
                //normalInputFlg := True; // ADD 2010/07/01
                if (optSalesCostCtrl = 1) then // 原価修正制御オプション(OPT-CPM0070)がオンの場合
                begin
                  if (((colName = 'SalesUnitCost'    ) and ((rowIndex mod 2) = 0)) or
                      ((colName = 'CostRate'         ) and ((rowIndex mod 2) = 0)) or
                      ((colName = 'SalesUnPrcDisplay') and ((rowIndex mod 2) = 1)) or
                      ((colName = 'SalesRate'        ) and ((rowIndex mod 2) = 1)) or
                      ((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 1))) then
                  begin
                    if (salesSlip_disp.SalesSlipCd <> SalesSlipCd_RetGoods) then
                    begin
                      case salesTtlSt.SlipChngDivCost of
                        // 未使用
                        2:
                          normalInputFlg := False;
                        else
                          normalInputFlg := True;
                      end;
                    end
                    else
                    begin
                      case salesTtlSt.RetSlipChngDivUnPrc of
                        // 未使用
                        2:
                          normalInputFlg := False;
                        else
                          normalInputFlg := True;
                       end;
                    end;
                  end
                  else
                  begin
                    normalInputFlg := True;
                  end;
                end
                else
                begin
                  normalInputFlg := True;
                end;
                // --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<

                //------------------------------------------------
                // 明細行数
                //------------------------------------------------
                // 2010/10/26 Sasaki >>>
                //if (col = ctCol_RowNo) then
                if (colName = 'SalesRowNoDisplay') then
                // 2010/10/26 Sasaki <<<
                begin
                  xGridColumnDisSet(rowIndex, col, 0);
                end

                //------------------------------------------------
                // 品番
                //------------------------------------------------
                // 2010/10/26 Sasaki >>>
//                else if ((col = ctCol_GoodsNo) and ((rowIndex mod 2) = 1)) then
                else if ((colName = 'GoodsNo') and ((rowIndex mod 2) = 1)) then
                // 2010/10/26 Sasaki <<<
                begin
                  if (i_searchPartsMode = ctGoodsNoSearch) then
                  begin
                    xGridColumnDisSet(rowIndex, col, 0);
                  end else
                  begin
                   if ((goodsNo = '') and (goodsName = '')) then
                   begin
                    xGridColumnDisSet(rowIndex, col, 2);
                   end else
                   begin
                    xGridColumnDisSet(rowIndex, col, 0);
                   end;

                  end;
                end

                //------------------------------------------------
                // 品名
                //------------------------------------------------
                // 2010/10/26 Sasaki >>>
//                else if ((col = ctCol_GoodsName) and ((rowIndex mod 2) = 0)) then
                else if ((colName = 'GoodsName') and ((rowIndex mod 2) = 0)) then
                // 2010/10/26 Sasaki <<<
                begin
                  if (i_searchPartsMode = ctBLCodeSearch) then
                  begin
                    //if (!CheckRowEffective(rowIndex))
                    if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex div 2 -1, -1, 9) = 0) then
                      xGridColumnDisSet(rowIndex, col, 2)
                    else
                      xGridColumnDisSet(rowIndex, col, 0);
                  end else
                  begin
                    xGridColumnDisSet(rowIndex, col, 0);
                  end;
                end

                //------------------------------------------------
                // BLコード
                //------------------------------------------------
                // 2010/10/26 Sasaki >>>
//                else if ((col = ctCol_BLGoodsCode) and ((rowIndex mod 2) = 0)) then
                else if ((colName = 'BLGoodsCode') and ((rowIndex mod 2) = 0)) then
                // 2010/10/26 Sasaki <<<
                begin
                  xGridColumnDisSet(rowIndex, col, 0);
                end

                //------------------------------------------------
                // その他
                //------------------------------------------------
                else
                begin
                  //------------------------------------------------
                  // 品番必須モードand(品番入力なしor品名入力なし)
                  //------------------------------------------------
                  //((this._salesSlipInputInitDataAcs.InputMode == SalesSlipInputInitDataAcs.ctINPUTMODE_NecessaryGoodsNo)
                  if (((goodsNo = '') or (goodsName = '')) and (allDefSet.GoodsNoInpDiv = 1)) then
                  begin
                    xGridColumnDisSet(rowIndex, col, 2);
                  end

                  //------------------------------------------------
                  // ！品番必須モード＆品番入力なし＆品名入力なし
                  //------------------------------------------------
                  //(this._salesSlipInputInitDataAcs.InputMode != SalesSlipInputInitDataAcs.ctINPUTMODE_NecessaryGoodsNo)
                  else if ((goodsName = '') and (allDefSet.GoodsNoInpDiv <> 1)) then
                  begin
                    xGridColumnDisSet(rowIndex, col, 2);
                  end

                  //------------------------------------------------
                  // 受注数
                  //------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_AcceptAnOrderCntDisplay) and ((rowIndex mod 2) = 0)) then
                  else if ((colName = 'AcceptAnOrderCntDisplay') and ((rowIndex mod 2) = 0)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    xIsAllowEditAcceptAnOrderCntColum(rowIndex, col, 2);
                  end

                  //------------------------------------------------
                  // 出荷数
                  //------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_ShipmentCntDisplay) and ((rowIndex mod 2) = 1)) then
                  else if ((colName = 'ShipmentCntDisplay') and ((rowIndex mod 2) = 1)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    xShipmentCntColumIsAllowEdit(rowIndex, col, 1);
                  end

                  //------------------------------------------------
                  // 納品完了予定日
                  //------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_DeliGdsCmpltDueDate) and ((rowIndex mod 2) = 1)) then
                  else if ((colName = 'DeliGdsCmpltDueDate') and ((rowIndex mod 2) = 1)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    xIsAllowEditDeliGdsCmpltDueDateColum(rowIndex, col, acceptAnOrderCntDisplay, 0);
                  end

                  //------------------------------------------------
                  // 明細備考
                  //------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_DtlNote) and ((rowIndex mod 2) = 0)) then
                  else if ((colName = 'DtlNote') and ((rowIndex mod 2) = 0)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    case salesTtlSt.DtlNoteDispDiv of
                      0:
                        xGridColumnDisSet(rowIndex, col, 0);
                      1:
                        xGridColumnDisSet(rowIndex, col, 1);
                    else
                      xGridColumnDisSet(rowIndex, col, 0);
                    end;
                  end

                  //>>>2011/05/25
                  //------------------------------------------------
                  // 販売区分
                  //------------------------------------------------
                  else if ((colName = 'SalesCode') and ((rowIndex mod 2) = 0)) then
                  begin
                    case salesTtlSt.SalesCdDspDivCd of
                      0: // する
                        xGridColumnDisSet(rowIndex, col, 0);
                      1: // しない
                        xGridColumnDisSet(rowIndex, col, 1);
                      2: // 必須
                        xGridColumnDisSet(rowIndex, col, 0);
                    else
                      xGridColumnDisSet(rowIndex, col, 0);
                    end;
                  end
                  //<<<2011/05/25

                  //------------------------------------------------
                  // 得意先注番
                  //------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_PartySlipNumDtl) and ((rowIndex mod 2) = 1)) then
                  else if ((colName = 'PartySlipNumDtl') and ((rowIndex mod 2) = 1)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    xIsAllowEditPartySlipNumDtlColumn(rowIndex, col, 0);
                  end

                  //------------------------------------------------
                  // メモ入力
                  //------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_SlipMemoExist) and ((rowIndex mod 2) = 0)) then
                  else if ((colName = 'SlipMemoExist') and ((rowIndex mod 2) = 0)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    // 編集不可
                    xGridColumnDisSet(rowIndex, col, 1);
                    // メモ存在チェック(メモ有無イメージ設定)
                    xIsAllowEditSlipMemoExistColumn(rowIndex, col, salesRowNo);
                  end

                  //------------------------------------------------
                  // 売上金額
                  //------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 1)) then
                  else if ((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 1)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    // 2010/10/26 Sasaki >>>
//                    if (((col = ctCol_ShipmentCntDisplay) and ((rowIndex mod 2) = 1))
//                      or ((col = ctCol_AcceptAnOrderCntDisplay) and ((rowIndex mod 2) = 0))
//                      or ((col = ctCol_AcceptAnOrderCntForOrder) and ((rowIndex mod 2) = 0))) then
                    if (((colName = 'ShipmentCntDisplay') and ((rowIndex mod 2) = 1)) or
                        ((colName = 'AcceptAnOrderCntDisplay') and ((rowIndex mod 2) = 0)) or
                        ((colName = 'AcceptAnOrderCntForOrder') and ((rowIndex mod 2) = 0))) then
                    // 2010/10/26 Sasaki <<<
                      xGridColumnDisSet(rowIndex, col, 1)
                    else
                      xGridColumnDisSet(rowIndex, col, 0);

                    // ADD 2013/04/11 T.Miyamoto №13 ------------------------------>>>>>
                    if (salesSlip_disp.AcptAnOdrStatusDisplay = acptAnOdrStatusState_AcceptAnOrder) then
                    begin
                      xGridColumnDisSet(rowIndex, col, 1)
                    end;
                    // ADD 2013/04/11 T.Miyamoto №13 ------------------------------<<<<<
                  end

                  //------------------------------------------------
                  // 定価
                  //------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_ListPriceDisplay) and ((rowIndex mod 2) = 1)) then
                  else if ((colName = 'ListPriceDisplay') and ((rowIndex mod 2) = 1)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    //xIsAllowEditListPriceColum(rowIndex, col, 0);// DEL 2010/07/01
                    xIsAllowEditListPriceColum(rowIndex, col, 1);// ADD 2010/07/01
                  end

                  //------------------------------------------------
                  // 原単価／原価率
                  //------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if (((col = ctCol_SalesUnitCost) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_CostRate) and ((rowIndex mod 2) = 0))) then
                  else if (((colName = 'SalesUnitCost') and ((rowIndex mod 2) = 0)) or
                           ((colName = 'CostRate') and ((rowIndex mod 2) = 0))) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    //xIsAllowEditSalesUnitCostColum(rowIndex, col, 0); // DEL 2010/07/01
                    xIsAllowEditSalesUnitCostColum(rowIndex, col, 1); // ADD 2010/07/01
                  end

                  //------------------------------------------------
                  // 売単価／売価率
                  //------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if (((col = ctCol_SalesUnPrcDisplay) and ((rowIndex mod 2) = 1))
//                    or ((col = ctCol_SalesRate) and ((rowIndex mod 2) = 1))
//                    or ((col = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 1))) then
                  else if (((colName = 'SalesUnPrcDisplay') and ((rowIndex mod 2) = 1)) or
                           ((colName = 'SalesRate') and ((rowIndex mod 2) = 1)) or
                           ((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 1))) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    //xIsAllowEditSalesUnPrcColum(rowIndex, col, 0); // DEL 2010/07/01
                    xIsAllowEditSalesUnPrcColum(rowIndex, col, 1); // ADD 2010/07/01
                  end

                  //------------------------------------------------
                  // 原価金額
                  //------------------------------------------------
                  // 2010/10/26 Sasaki >>>
//                  else if ((col = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 0)) then
                  else if ((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 0)) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    xGridColumnDisSet(rowIndex, col, 1);
                  end

                  //------------------------------------------------
                  // その他
                  //------------------------------------------------
                  else
                  begin
                    xGridColumnDisSet(rowIndex, col, 0);
                  end;
                end;

                //------------------------------------------------
                // 発注情報入力不可
                //------------------------------------------------
                xIsAllowEditUOE(rowIndex, col, 0);

                // 金額手入力時、発注不可
                if (RCHNB01003UADM.SalesMoneyInputDiv[rowIndex div 2 -1] = 1) then
                begin
                  // 2010/10/26 Sasaki >>>
//                  if (((col = ctCol_DeliveredGoodsDivNm) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_FollowDeliGoodsDivNm) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_UOEResvdSectionNm) and ((rowIndex mod 2) = 1))
//                    or ((col = ctCol_BoCode) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_SupplierSnmForOrder) and ((rowIndex mod 2) = 1))
//                    or ((col = ctCol_SupplierCdForOrder) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_AcceptAnOrderCntForOrder) and ((rowIndex mod 2) = 0))) then
                  if (((colName = 'DeliveredGoodsDivNm') and ((rowIndex mod 2) = 0)) or
                      ((colName = 'FollowDeliGoodsDivNm') and ((rowIndex mod 2) = 0)) or
                      ((colName = 'UOEResvdSectionNm') and ((rowIndex mod 2) = 1)) or
                      ((colName = 'BoCode') and ((rowIndex mod 2) = 0)) or
                      ((colName = 'SupplierSnmForOrder') and ((rowIndex mod 2) = 1)) or
                      ((colName = 'SupplierCdForOrder') and ((rowIndex mod 2) = 0)) or
                      ((colName = 'AcceptAnOrderCntForOrder') and ((rowIndex mod 2) = 0))) then
                  // 2010/10/26 Sasaki <<<
                    xGridColumnDisSet(rowIndex, col, 2);
                end;

                //------------------------------------------------
                // 仕入情報入力不可
                //------------------------------------------------
                // 2010/10/26 Sasaki >>>
//                if (((col = ctCol_SupplierCdForStock) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_StockDate) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_PartySalesSlipNum) and ((rowIndex mod 2) = 1))) then
                if (((colName = 'SupplierCdForStock') and ((rowIndex mod 2) = 0)) or
                    ((colName = 'StockDate') and ((rowIndex mod 2) = 0)) or
                    ((colName = 'PartySalesSlipNum') and ((rowIndex mod 2) = 1))) then
                // 2010/10/26 Sasaki <<<
                begin
                  xIsAllowEditSuppli(rowIndex, col, 0);
                end;


                //------------------------------------------------
                // ユーザー設定項目別反映
                //------------------------------------------------
                //if (!GetCellEnabled(col.key))
                // 2010/10/26 Sasaki >>>
//                rowName := xGridColIndexToName(rowIndex, col);
//                if rowName <> '' then
//                begin
//                  if (gpxMAHNB01013B_GetCellEnabled(rowName) = 0) then
//                    xGridColumnDisSet(rowIndex, col, 2);
//                end;
                if colName <> '' then
                begin
                  if (gpxMAHNB01013B_GetCellEnabled(colName) = 0) then
                    xGridColumnDisSet(rowIndex, col, 2);
                end;
                // 2010/10/26 Sasaki <<<
              end;
            end;

            //セキュリティ設定
            // 数量
            // 2010/10/26 Sasaki >>>
//            if (((col = ctCol_ShipmentCntDisplay) and ((rowIndex mod 2) = 1))
//              or ((col = ctCol_AcceptAnOrderCntDisplay) and ((rowIndex mod 2) = 0))
//              or ((col = ctCol_AcceptAnOrderCntForOrder) and ((rowIndex mod 2) = 0))) then
               // ----- UPD 2010/11/25 ---------->>>>>
//            if (((colName = 'ShipmentCntDisplay') and ((rowIndex mod 2) = 1)) or
//                ((colName = 'AcceptAnOrderCntDisplay') and ((rowIndex mod 2) = 0)) or
//                ((colName = 'AcceptAnOrderCntForOrder') and ((rowIndex mod 2) = 0))) then
//            // 2010/10/26 Sasaki <<<
//            begin
//              //if (MyOpeCtrl.Disabled((int)SalesSlipInputAcs.OperationCode.CountChange))
////              if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, 15, 13) = 1) then
////              begin
////                if (xGridColumnDisCheck(rowIndex, col, 0) = True) then
////                   xGridColumnDisSet(rowIndex, col, 1);
////              end;
//            end;
            // 出荷数、受注数
            if (((colName = 'ShipmentCntDisplay') and ((rowIndex mod 2) = 1)) or
                ((colName = 'AcceptAnOrderCntDisplay') and ((rowIndex mod 2) = 0))) then
            begin
              if Trim(SalesSlipNum.Text) <> '' then
              begin
                 if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, 15, 13) = 1) then
                 begin
                     if (xGridColumnDisCheck(rowIndex, col, 0) = True) then
                        xGridColumnDisSet(rowIndex, col, 1);
                 end;
              end;
            end
            // 発注数
            else if (((colName = 'AcceptAnOrderCntForOrder') and ((rowIndex mod 2) = 0))) then
            begin
              if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, 15, 13) = 1) then
              begin
                  if (xGridColumnDisCheck(rowIndex, col, 0) = True) then
                     xGridColumnDisSet(rowIndex, col, 1);
              end;
            end;
            // ----- UPD 2010/11/25 ----------<<<<<

            // 売単価、売価率、売上金額
            // 2010/10/26 Sasaki >>>
//            if (((col = ctCol_SalesUnPrcDisplay) and ((rowIndex mod 2) = 1))
//              or ((col = ctCol_SalesRate) and ((rowIndex mod 2) = 1))
//              or ((col = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 1))) then
             if (((colName = 'SalesUnPrcDisplay') and ((rowIndex mod 2) = 1)) or
                ((colName = 'SalesRate') and ((rowIndex mod 2) = 1)) or
                ((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 1))) then
            // 2010/10/26 Sasaki <<<
            begin
              if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, 13, 13) = 1) then
              begin
                 if (xGridColumnDisCheck(rowIndex, col, 0) = True) then
                  xGridColumnDisSet(rowIndex, col, 1);
              end;
              //----ADD 2011/09/20----->>>>>
              if ((colName = 'SalesMoneyDisplay')
                  and ((rowIndex mod 2) = 1)
                  and (salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
//                  and (gpxMAHNB01013B_GridJoinCheck(0, rowIndex - 1 , -1, 9) = 1)//DEL 2011/09/21
                  and (RCHNB01003UADM.SalesSlipDtlNumSrc[salesRowNo -1] <> 0)      //ADD 2011/09/21
                  and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))  then //ADD 2011/09/21
              begin
                if (RCHNB01003UADM.SalesUnPrcTaxExcFl[rowIndex div 2 -1] = 0) then
                begin
                    HNsGrid1.ReadOnly[col, rowIndex] := false;
                end else
                begin
                    HNsGrid1.ReadOnly[col, rowIndex] := true;
                end;
              end;
              //----ADD 2011/09/20-----<<<<<
            end;

            // ----- ADD 2010/11/25 ---------->>>>>
            // 行値引
            if (editStatus = ctEDITSTATUS_RowDiscount) then
            begin
              // 売上金額
              if ((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 1)) then
               begin
                 // 可編集
                 xGridColumnDisSet(rowIndex, col, 0);
               end;
            end;
            // ----- ADD 2010/11/25 ----------<<<<<

            // 原単価、原価率
            // 2010/10/26 Sasaki >>>
//            if (((col = ctCol_SalesUnitCost) and ((rowIndex mod 2) = 0))
//              or ((col = ctCol_CostRate) and ((rowIndex mod 2) = 0))) then
            if (((colName = 'SalesUnitCost') and ((rowIndex mod 2) = 0)) or
                ((colName = 'CostRate') and ((rowIndex mod 2) = 0))) then
            // 2010/10/26 Sasaki <<<
            begin
              if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, 14, 13) = 1) then
              begin
                if (xGridColumnDisCheck(rowIndex, col, 0) = True) then
                   xGridColumnDisSet(rowIndex, col, 1);
              end;
            end;

            // 無効要素のテキストカラー設定
            xIsAllowEditTextColor(rowIndex, col, 0);

            //返品、商品値引きの出荷数、受注数、売上金額のテキストカラー設定
            // 2010/10/26 Sasaki >>>
//            if (((col = ctCol_ShipmentCntDisplay) and ((rowIndex mod 2) = 1))
//              or ((col = ctCol_AcceptAnOrderCntDisplay) and ((rowIndex mod 2) = 0))
//              or ((col = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 1))) then
            if (((colName = 'ShipmentCntDisplay') and ((rowIndex mod 2) = 1)) or
                ((colName = 'AcceptAnOrderCntDisplay') and ((rowIndex mod 2) = 0)) or
                ((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 1))) then
            // 2010/10/26 Sasaki <<<
            begin
              if salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods  then
              begin
                //xAllowEditorFontColorSet(rowIndex, col, clRed);//del 2011/07/16
                // ---------------------- ADD START 2011/07/16 zhubj ----------------->>>>>
                //if (RCHNB01003UADM.ShipmentCntDisplay[rowIndex - 1] = 0)//del 2011/07/22 Redmine #23148 zhubj
                //if ((RCHNB01003UADM.ShipmentCntDisplay[rowIndex div 2 -1] = 0))//add 2011/07/22 Redmine #23148 zhubj //DEL 2011/09/20
                if ((RCHNB01003UADM.ShipmentCntDisplay[rowIndex div 2 -1] = 0) and (colName = 'ShipmentCntDisplay') //ADD 2011/09/20
//                    and (salesSlip_disp.SalesSlipDisplay = 20) //DEL 2011/09/21
                    and ((salesSlip_disp.SalesSlipDisplay = 20) or (salesSlip_disp.SalesSlipDisplay = 40)) //ADD 2011/09/21
                    and (salesSlip_disp.AcptAnOdrStatus = acptAnOdrStatusState_Sales)) then
                    begin
                    // --- DEL 2012/11/01 Wakita ---------->>>>>
                    //   HNsGrid1.ReadOnly[col, rowIndex] := true;
                    // --- DEL 2012/11/01 Wakita ----------<<<<<
                    end
                    else
                    begin
                      if (colName = 'ShipmentCntDisplay') then//ADD 2011/09/20
                       begin                                  //ADD 2011/09/20
                       HNsGrid1.ReadOnly[col, rowIndex] := false;// add 2011/07/22 Redmine #23148 zhubj
                       end;                                    //ADD 2011/09/20
                       xAllowEditorFontColorSet(rowIndex, col, clRed);
                    end;
                 // ---------------------- ADD END   2011/07/16 zhubj -----------------<<<<<
              end
              else
              begin
                // 2010/10/26 Sasaki >>>
//                if ((col = ctCol_AcceptAnOrderCntDisplay) and ((rowIndex mod 2) = 0)) then
                if ((colName = 'AcceptAnOrderCntDisplay') and ((rowIndex mod 2) = 0)) then
                // 2010/10/26 Sasaki <<<
                begin
                  // 売上全体設定マスタ 受注数入力 0:しない　1:する)
                  if (salesTtlSt.AcpOdrInputDiv = 1) then
                  begin
                    xAllowEditorFontColorSet(rowIndex, col, clBlack);
                  end else
                  begin
                    // 非表示
                    //cell.Appearance.ForeColor = Color.Transparent;
                    xTransparentFontColorSet(rowIndex, col, 0);
                  end;
                end else
                begin
                  xAllowEditorFontColorSet(rowIndex, col, clBlack);
                end;
              end;

            end;

            //オープン価格情報表示
            // 2010/10/26 Sasaki >>>
//            if ((col = ctCol_OpenPriceDivDisplay) and ((rowIndex mod 2) = 1)) then
            if ((colName = 'OpenPriceDivDisplay') and ((rowIndex mod 2) = 1)) then
            // 2010/10/26 Sasaki <<<
            begin
              if (RCHNB01003UADM.OpenPriceDiv[rowIndex div 2 -1 ] = 1) then
              begin
                HNsGrid1.Cells[col, rowIndex] := '☆'
              end
              else
              begin
                HNsGrid1.Cells[col, rowIndex] := '';
              end;
            end;

         end;

         if (salesSlip_disp.SalesSlipCd <> salesSlipCd_RetGoods) then //ADD 2011/09/20
         begin   //ADD 2011/09/20

           //売単価、原単価、定価のバックカラー設定
           //原単価
           if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 10) = 1) then
           begin
            if (((rowIndex mod 2) = 0) and (xGridColumnDisCheck(rowIndex, ctCol_SalesUnitCost, 2) = False)) then
            begin
              // 2010/10/26 Sasaki >>>
  //            HNsGrid1.Colors[ctCol_SalesUnitCost, rowIndex] := TColor(RGB(210,   255,   210));
  //            HNsGrid1.ColorsTo[ctCol_SalesUnitCost, rowIndex] := TColor(RGB(210,   255,   210));

              if (HNsGrid1.Colors[ctCol_SalesUnitCost, rowIndex] <> TColor(RGB(210,   255,   210))) then
              HNsGrid1.Colors[ctCol_SalesUnitCost, rowIndex] := TColor(RGB(210,   255,   210));

              if (HNsGrid1.ColorsTo[ctCol_SalesUnitCost, rowIndex] <> TColor(RGB(210,   255,   210))) then
              HNsGrid1.ColorsTo[ctCol_SalesUnitCost, rowIndex] := TColor(RGB(210,   255,   210));
              // 2010/10/26 Sasaki <<<
            end;
           end
           else
           begin
            if (((rowIndex mod 2) = 0) and (xGridColumnDisCheck(rowIndex, ctCol_SalesUnitCost, 2) = False)) then
            begin
              // 2010/10/26 Sasaki >>>
  //            HNsGrid1.Colors[ctCol_SalesUnitCost, rowIndex] := clNone;
  //            HNsGrid1.ColorsTo[ctCol_SalesUnitCost, rowIndex] := clNone;

              if (HNsGrid1.Colors[ctCol_SalesUnitCost, rowIndex] <> clNone) then
              HNsGrid1.Colors[ctCol_SalesUnitCost, rowIndex] := clNone;

              if (HNsGrid1.ColorsTo[ctCol_SalesUnitCost, rowIndex] <> clNone) then
              HNsGrid1.ColorsTo[ctCol_SalesUnitCost, rowIndex] := clNone;
              // 2010/10/26 Sasaki <<<
            end;
           end;

           //売単価
           if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 11) = 1) then
           begin
            if (((rowIndex mod 2) = 1) and (xGridColumnDisCheck(rowIndex, ctCol_SalesUnPrcDisplay, 2) = False)) then
            begin
              // 2010/10/26 Sasaki >>>
  //            HNsGrid1.Colors[ctCol_SalesUnPrcDisplay, rowIndex] := TColor(RGB(210,   255,   210));
  //            HNsGrid1.ColorsTo[ctCol_SalesUnPrcDisplay, rowIndex] := TColor(RGB(210,   255,   210));

              if (HNsGrid1.Colors[ctCol_SalesUnPrcDisplay, rowIndex] <> TColor(RGB(210,   255,   210))) then
              HNsGrid1.Colors[ctCol_SalesUnPrcDisplay, rowIndex] := TColor(RGB(210,   255,   210));
              if (HNsGrid1.ColorsTo[ctCol_SalesUnPrcDisplay, rowIndex] <> TColor(RGB(210,   255,   210))) then
              HNsGrid1.ColorsTo[ctCol_SalesUnPrcDisplay, rowIndex] := TColor(RGB(210,   255,   210));
              // 2010/10/26 Sasaki <<<
            end;
           end
           else
           begin
            if (((rowIndex mod 2) = 1) and (xGridColumnDisCheck(rowIndex, ctCol_SalesUnPrcDisplay, 2) = False)) then
            begin
              // 2010/10/26 Sasaki >>>
  //            HNsGrid1.Colors[ctCol_SalesUnPrcDisplay, rowIndex] := clNone;
  //            HNsGrid1.ColorsTo[ctCol_SalesUnPrcDisplay, rowIndex] := clNone;

              if (HNsGrid1.Colors[ctCol_SalesUnPrcDisplay, rowIndex] <> clNone) then
              HNsGrid1.Colors[ctCol_SalesUnPrcDisplay, rowIndex] := clNone;
              if (HNsGrid1.ColorsTo[ctCol_SalesUnPrcDisplay, rowIndex] <> clNone) then
              HNsGrid1.ColorsTo[ctCol_SalesUnPrcDisplay, rowIndex] := clNone;
              // 2010/10/26 Sasaki <<<
            end else
            begin

  //            xIsAllowEditTextColor(rowIndex, col, 1);
  //            if (HNsGrid1.Colors[col, rowIndex] <> TColor(RGB(210,   255,   210))) then
  //            HNsGrid1.Colors[col, rowIndex] := TColor(RGB(210,   255,   210));
  //
  //            if (HNsGrid1.ColorsTo[col, rowIndex] <> TColor(RGB(255,   255,   220))) then
  //            HNsGrid1.ColorsTo[col, rowIndex] := TColor(RGB(255,   255,   220));

            end;
           end;

           // 定価
           if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 12) = 1)then
           begin
            if (((rowIndex mod 2) = 1) and (xGridColumnDisCheck(rowIndex, ctCol_ListPriceDisplay, 2) = False)) then
            begin
              // 2010/10/26 Sasaki >>>
  //            HNsGrid1.Colors[ctCol_ListPriceDisplay, rowIndex] := TColor(RGB(210,   255,   210));
  //            HNsGrid1.ColorsTo[ctCol_ListPriceDisplay, rowIndex] := TColor(RGB(210,   255,   210));

              if (HNsGrid1.Colors[ctCol_ListPriceDisplay, rowIndex] <> TColor(RGB(210,   255,   210))) then
              HNsGrid1.Colors[ctCol_ListPriceDisplay, rowIndex] := TColor(RGB(210,   255,   210));

              if (HNsGrid1.ColorsTo[ctCol_ListPriceDisplay, rowIndex] <> TColor(RGB(210,   255,   210))) then
              HNsGrid1.ColorsTo[ctCol_ListPriceDisplay, rowIndex] := TColor(RGB(210,   255,   210));
              // 2010/10/26 Sasaki <<<
            end;
           end
           else
           begin
            if (((rowIndex mod 2) = 1) and (xGridColumnDisCheck(rowIndex, ctCol_ListPriceDisplay, 2) = False)) then
            begin
              // 2010/10/26 Sasaki >>>
  //            HNsGrid1.Colors[ctCol_ListPriceDisplay, rowIndex] := clNone;
  //            HNsGrid1.ColorsTo[ctCol_ListPriceDisplay, rowIndex] := clNone;

              if (HNsGrid1.Colors[ctCol_ListPriceDisplay, rowIndex] <> clNone) then
              HNsGrid1.Colors[ctCol_ListPriceDisplay, rowIndex] := clNone;

              if (HNsGrid1.ColorsTo[ctCol_ListPriceDisplay, rowIndex] <> clNone) then
              HNsGrid1.ColorsTo[ctCol_ListPriceDisplay, rowIndex] := clNone;
              // 2010/10/26 Sasaki <<<
            end;
           end;

         end;  //ADD 2011/09/20
         // 2011/08/20 XUJS ADD STA ------>>>>>>
         if (gpxMAHNB01013B_GridJoinCheck(salesRowNo, rowIndex, -1, 19) = 1) then
         begin
           if (RCHNB01003UADM.StdUnPrcUnCst[rowIndex div 2 -1] <> 0) then
           begin
             //if (RCHNB01003UADM.ListPriceDisplay[rowIndex div 2 -1] >    //DEL 2011/12/22 李小路 Redmine#27451
             if (RCHNB01003UADM.ListPriceDisplay[rowIndex div 2 -1] >=     //ADD 2011/12/22 李小路 Redmine#27451
                 RCHNB01003UADM.StdUnPrcUnCst[rowIndex div 2 -1] ) then
               HNsGrid1.LogicalFontColors[ctCol_ListPriceDisplay,1,rowIndex div 2] := clBlue
             else
               HNsGrid1.LogicalFontColors[ctCol_ListPriceDisplay,1,rowIndex div 2] := clRed;
           end;
         end;
         // 2011/08/20 XUJS ADD END ------<<<<<<
      end;



      //----------------------------------------------------
      // 消費税調整、残高調整、売掛消費税調整、売掛残高調整
      //----------------------------------------------------
      salesGoodsCd_ConsTaxAdjust, salesGoodsCd_BalanceAdjust, salesGoodsCd_AccRecConsTaxAdjust, salesGoodsCd_AccRecBalanceAdjust:
        begin
          // 品名
          goodsName := RCHNB01003UADM.GoodsName[rowIndex div 2 -1 ];
          // 商品種別
          goodsKindCode := RCHNB01003UADM.GoodsKindCode[rowIndex div 2 -1 ];
          // 変更可能ステータス
          editStatus := RCHNB01003UADM.EditStatus[rowIndex div 2 -1 ];
          // 行ステータス
          rowStatus := RCHNB01003UADM.RowStatus[rowIndex div 2 -1 ];
          // 受注数
          acceptAnOrderCntDisplay := RCHNB01003UADM.AcceptAnOrderCntDisplay[rowIndex div 2 -1 ];
          // 出荷数
          shipmentCntDisplay := RCHNB01003UADM.ShipmentCntDisplay[rowIndex div 2 -1 ];
          shipmentCnt := RCHNB01003UADM.ShipmentCnt[rowIndex div 2 -1 ];
          // 売上伝票区分(明細
          salesSlipCdDtl := RCHNB01003UADM.SalesSlipCdDtl[rowIndex div 2 -1 ];
          // TODO:指定行の全ての列に対して設定を行う
          for col := 1 to HNsGrid1.ColCount do
          begin
            // 2010/10/26 Sasaki >>>
            colName := xGridColIndexToName(rowIndex,col);
            if (colName = '') then continue;
            // 2010/10/26 Sasaki <<<
            if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly)
              or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp))  then
            begin
              xGridColumnDisSet(rowIndex, col, 1);
            end else
            begin
              if (editStatus = ctEDITSTATUS_AllDisable) then
              begin
                xGridColumnDisSet(rowIndex, col, 2);
              end
              else if (editStatus = ctEDITSTATUS_AllReadOnly) then
              begin
                if (col <> ctCol_RowNo) then
                  xGridColumnDisSet(rowIndex, col, 1);
              end
              else
              begin
                // 2010/10/26 Sasaki >>>
//                if (((col = ctCol_SalesMoneyDisplay) and ((rowIndex mod 2) = 1))
//                  or ((col = ctCol_DtlNote) and ((rowIndex mod 2) = 0))) then
                if (((colName = 'SalesMoneyDisplay') and ((rowIndex mod 2) = 1))
                  or ((colName = 'DtlNote') and ((rowIndex mod 2) = 0))) then
                // 2010/10/26 Sasaki <<<
                begin
                  // 「売上金額」「備考」のみを有効にする
                  xGridColumnDisSet(rowIndex, col, 0);
                end
                else
                begin
                  xGridColumnDisSet(rowIndex, col, 2);
                end;

                if (rowStatus = ctROWSTATUS_COPY) then
                begin
                  if xGridColumnDisCheck(rowIndex, col, 2) = False then
                  begin
                    // 2010/10/26 Sasaki >>>
//                    HNsGrid1.Colors[col,rowIndex] := TColor(RGB(255,   192,   203));
//                    HNsGrid1.ColorsTo[col,rowIndex] := TColor(RGB(255,   192,   203));
//                    HNsGrid1.FontColors[col,rowIndex] := clBlack;
                    if (HNsGrid1.Colors[col,rowIndex] <> TColor(RGB(255,   192,   203))) then
                    HNsGrid1.Colors[col,rowIndex] := TColor(RGB(255,   192,   203));

                    if (HNsGrid1.ColorsTo[col,rowIndex] <> TColor(RGB(255,   192,   203))) then
                    HNsGrid1.ColorsTo[col,rowIndex] := TColor(RGB(255,   192,   203));

                    if (HNsGrid1.FontColors[col,rowIndex] <> clBlack) then
                    HNsGrid1.FontColors[col,rowIndex] := clBlack;
                    // 2010/10/26 Sasaki <<<
                  end;
                end
                else if (rowStatus = ctROWSTATUS_CUT) then
                begin
                  if xGridColumnDisCheck(rowIndex, col, 2) = False then
                  begin
                    // 2010/10/26 Sasaki >>>
//                    HNsGrid1.Colors[col,rowIndex] := TColor(RGB(255,   192,   203));
//                    HNsGrid1.ColorsTo[col,rowIndex] := TColor(RGB(255,   192,   203));
//                    HNsGrid1.FontColors[col,rowIndex] := clGray;

                    if (HNsGrid1.Colors[col,rowIndex] <> TColor(RGB(255,   192,   203))) then
                    HNsGrid1.Colors[col,rowIndex] := TColor(RGB(255,   192,   203));

                    if (HNsGrid1.ColorsTo[col,rowIndex] <> TColor(RGB(255,   192,   203))) then
                    HNsGrid1.ColorsTo[col,rowIndex] := TColor(RGB(255,   192,   203));

                    if (HNsGrid1.FontColors[col,rowIndex] <> clGray) then
                    HNsGrid1.FontColors[col,rowIndex] := clGray;
                    // 2010/10/26 Sasaki <<<
                  end;
                end
                else
                begin
                  if xGridColumnDisCheck(rowIndex, col, 2) = False then
                  begin
                    // 2010/10/26 Sasaki >>>
//                    HNsGrid1.FontColors[col, rowIndex] := clBlack;
//                    HNsGrid1.Colors[col, rowIndex] := clNone;
//                    HNsGrid1.ColorsTo[col, rowIndex] := clNone;

                    if (HNsGrid1.FontColors[col, rowIndex] <> clBlack) then
                    HNsGrid1.FontColors[col, rowIndex] := clBlack;

                    if (HNsGrid1.Colors[col, rowIndex] <> clNone) then
                    HNsGrid1.Colors[col, rowIndex] := clNone;

                    if (HNsGrid1.ColorsTo[col, rowIndex] <> clNone) then
                    HNsGrid1.ColorsTo[col, rowIndex] := clNone;
                    // 2010/10/26 Sasaki <<<
                  end;
                  //(cell.Activation == Infragistics.Win.UltraWinGrid.Activation.NoEdit)
                  //cell.Column.CellActivation == Infragistics.Win.UltraWinGrid.Activation.NoEdit)
                  // 2010/10/26 Sasaki >>>
//                  if ((xGridColumnDisCheck(rowIndex, col, 1) = True)
//                    or ((col = ctCol_CmpltSalesRowNo) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_WarehouseShelfNo) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_OpenPriceDivDisplay) and ((rowIndex mod 2) = 1))
//                    or ((col = ctCol_SupplierStockDisplay) and ((rowIndex mod 2) = 1))
//                    or ((col = ctCol_SlipMemoExist) and ((rowIndex mod 2) = 0))
//                    or ((col = ctCol_SupplierSnmForOrder) and ((rowIndex mod 2) = 1))) then
                  if ((xGridColumnDisCheck(rowIndex, col, 1) = True)
                    or ((colName = 'CmpltSalesRowNo') and ((rowIndex mod 2) = 0))
                    or ((colName = 'WarehouseShelfNo') and ((rowIndex mod 2) = 0))
                    or ((colName = 'OpenPriceDivDisplay') and ((rowIndex mod 2) = 1))
                    or ((colName = 'SupplierStockDisplay') and ((rowIndex mod 2) = 1))
                    or ((colName = 'SlipMemoExist') and ((rowIndex mod 2) = 0))
                    or ((colName = 'SupplierSnmForOrder') and ((rowIndex mod 2) = 1))) then
                  // 2010/10/26 Sasaki <<<
                  begin
                    HNsGrid1.ReadOnly[col, rowIndex] := True;
                    // 2010/10/26 Sasaki >>>
//                    HNsGrid1.Colors[col, rowIndex] := TColor(RGB(255,   255,   220));
//                    HNsGrid1.ColorsTo[col, rowIndex] := TColor(RGB(255,   255,   220));
                    if (HNsGrid1.Colors[col, rowIndex] <> TColor(RGB(255,   255,   220))) then
                    HNsGrid1.Colors[col, rowIndex] := TColor(RGB(255,   255,   220));
                    if (HNsGrid1.ColorsTo[col, rowIndex] <> TColor(RGB(255,   255,   220))) then
                    HNsGrid1.ColorsTo[col, rowIndex] := TColor(RGB(255,   255,   220));
                    // 2010/10/26 Sasaki <<<
                  end
                  else
                  begin
                    if xGridColumnDisCheck(rowIndex, col, 2) = False then
                    begin
                      // 2010/10/26 Sasaki >>>
//                      HNsGrid1.Colors[col, rowIndex] := clNone;
//                      HNsGrid1.ColorsTo[col, rowIndex] := clNone;

                      if (HNsGrid1.Colors[col, rowIndex] <> clNone) then
                      HNsGrid1.Colors[col, rowIndex] := clNone;

                      if (HNsGrid1.ColorsTo[col, rowIndex] <> clNone) then
                      HNsGrid1.ColorsTo[col, rowIndex] := clNone;
                      // 2010/10/26 Sasaki <<<
                    end;
                  end;
                end;

              end;
            end;

            //------------------------------------------------
            // 無効要素のテキストカラー設定
            //------------------------------------------------
            xIsAllowEditTextColor(rowIndex, col, 1);
          end;
        end;
  end;
end;

// *************************************************************************
// 売上明細行オブジェクトのクリアを行います。
// *************************************************************************
procedure TForm4.xSetDetailRowNoEdit(col:Integer ;rowIndex:Integer);
begin
  // 2010/10/26 Sasaki >>>
//   HNsGrid1.ColorsTo[col, rowIndex] := $DEDFDE;
//   HNsGrid1.Colors[col, rowIndex] := $DEDFDE;

  if (HNsGrid1.ColorsTo[col, rowIndex] <> $DEDFDE) then
   HNsGrid1.ColorsTo[col, rowIndex] := $DEDFDE;
  if (HNsGrid1.Colors[col, rowIndex] <> $DEDFDE) then
   HNsGrid1.Colors[col, rowIndex] := $DEDFDE;
  // 2010/10/26 Sasaki <<<
   HNsGrid1.ReadOnly[col, rowIndex] := true;

end;

// *************************************************************************
// 売上明細行オブジェクトのクリアを行います。
// *************************************************************************
procedure TForm4.xSetDetailRowEdit(col:Integer ;rowIndex:Integer);
begin
  // 2010/10/26 Sasaki >>>
//  HNsGrid1.ColorsTo[col, rowIndex] := clNone;
//  HNsGrid1.Colors[col, rowIndex] := clNone;

  if (HNsGrid1.ColorsTo[col, rowIndex] <> clNone) then
  HNsGrid1.ColorsTo[col, rowIndex] := clNone;

  if (HNsGrid1.Colors[col, rowIndex] <> clNone) then
  HNsGrid1.Colors[col, rowIndex] := clNone;
  // 2010/10/26 Sasaki <<<
  HNsGrid1.ReadOnly[col, rowIndex] := False;
end;


// *************************************************************************
// 売上明細行オブジェクトのクリアを行います。
// *************************************************************************
procedure TForm4.xClearSalesDetailRow(salesRowNo: Integer);
var
   iRow: Integer;
begin
    HNsGrid1.LogicalCells[ctCol_GoodsNo, ctRow_GoodsNo, salesRowNo - 1] := '';
    HNsGrid1.LogicalCells[ctCol_BLGoodsCode, ctRow_BLGoodsCode, salesRowNo - 1] := '';
    HNsGrid1.LogicalCells[ctCol_GoodsName, ctRow_GoodsName, salesRowNo - 1] := '';

    HNsGrid1.LogicalCells[ctCol_GoodsKindCode, ctRow_GoodsKindCode, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_GoodsMakerCd, ctRow_GoodsMakerCd, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SupplierCd, ctRow_SupplierCd, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_ListPriceDisplay, ctRow_ListPriceDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SalesUnitCost, ctRow_SalesUnitCost, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_WarehouseCode, ctRow_WarehouseCode, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SupplierStockDisplay, ctRow_SupplierStockDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_CostRate, ctRow_CostRate, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SalesRate, ctRow_SalesRate, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SalesMoneyDisplay, ctRow_SalesMoneyDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_StockDate, ctRow_StockDate, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_BoCode, ctRow_BoCode, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SupplierCdForOrder, ctRow_SupplierCdForOrder, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SupplierSnmForOrder, ctRow_SupplierSnmForOrder, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_DeliveredGoodsDivNm, ctRow_DeliveredGoodsDivNm, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SalesCode, ctRow_SalesCode, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_SalesMoneyDisplay, ctRow_AcceptAnOrderCntDisplay, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntForOrder, ctRow_AcceptAnOrderCntForOrder, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_FollowDeliGoodsDivNm, ctRow_FollowDeliGoodsDivNm, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_UOEResvdSectionNm, ctRow_UOEResvdSectionNm, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_WarehouseShelfNo, ctRow_WarehouseShelfNo, iRow + 1] := '';
    HNsGrid1.LogicalCells[ctCol_RecycleDivNm, ctRow_RecycleDivNm, iRow + 1] := ''; // 2010/05/30
    HNsGrid1.LogicalCells[ctCol_GoodsMngNo, ctRow_GoodsMngNo, iRow + 1] := ''; // 2010/05/30
    HNsGrid1.LogicalCells[ctCol_AddUpInfo, ctRow_AddUpInfo, iRow + 1] :='';   // ADD 2016/01/21 Wakita

    iRow := xFindBySalesSlipNumSalesRowNo('0',salesRowNo);

    RCHNB01003UADM.ClrData(iRow);

    xSalesDetailRowInitialSetting(i_RowMaxCount);
end;

// *************************************************************************
//
// *************************************************************************
function TForm4.xFindBySalesSlipNumSalesRowNo(salesSlipNum: string ; salesRowNo:Integer) :Integer;
var
  iRow: Integer;
begin

   Result := -1;

   for iRow := 0 to i_RowMaxCount do
   begin
      if ((RCHNB01003UADM.SalesRowNo[iRow] = salesRowNo) and
      (RCHNB01003UADM.SalesSlipNum[iRow] = salesSlipNum)) then
      begin
        Result := iRow;
        Break;
      end;
   end;

end;

// *************************************************************************
// 売上明細データテーブルの初期設定を行います。
// *************************************************************************
procedure TForm4.xSalesDetailRowInitialSetting(defaultRowCount: Integer);
var
   i : Integer;
begin
   for i := 1 to defaultRowCount do
   begin
      RCHNB01003UADM.SalesSlipNum[i - 1] := '0';
      RCHNB01003UADM.SalesRowNo[i - 1] := i;
   end;
end;

// *************************************************************************
// 車両検索処理
// *************************************************************************
function TForm4.xCarSearch(carSearchCondition : TCarSearchCondition; salesRowNo : Integer; seachType : Integer):Integer;
begin
  // 検索正常
  Result := 0;

  i_beforeCarSearchBuffer.ProduceFrameNo := Trim(ProduceFrameNo.Text);
  i_beforeCarSearchBuffer.FirstEntryDate := FirstEntryDate.LongDate;
  i_beforeCarSearchBuffer.ColorNo := Trim(ColorNo.Text);
  i_beforeCarSearchBuffer.TrimNo := Trim(TrimNo.Text);

  //------------------------------------------------------
  // カーメーカーコード、車種コード、車種呼称コード設定
  //------------------------------------------------------
  if seachType <> 1 then
  begin
    carSearchCondition.MakerCode := MakerCode.GetInt();
    carSearchCondition.ModelCode := ModelCode.GetInt();
    carSearchCondition.ModelSubCode := ModelSubCode.GetInt();
  end;

  Result := gpxMAHNB01012B_CarSearch(carSearchCondition, salesRowNo, seachType);

end;

procedure TForm4.xSetDisplayCarInfo(salesRowNo : Integer; searchType : Integer);
var
  carInfo: TCarInfo;
begin
  ClearTCarInfo(carInfo);
  gpxMAHNB01012B_GetCarInfoRow(salesRowNo, 1, carInfo);


      xSetDisplayCarInfo2(carInfo, searchType);
end;

// *************************************************************************
// 車両情報画面Enabled設定処理
// *************************************************************************
procedure TForm4.xSetDisplayCarInfoEnable();
var
   acceptAnOrderNo : Integer;
begin
    acceptAnOrderNo := edtAcceptAnOrderNo.GetInt();
    if (acceptAnOrderNo <> 0) then
    begin

    end
    else
    begin

    end;

    //TODO :
end;

// *************************************************************************
// 車両情報画面表示処理
// *************************************************************************
//Update Note: 2010/06/02 譚洪 PM.NS障害・改良対応（７月リリース案件）No.23
//車輌管理の車輌備考を「備考」に初期表示するように修正する。
procedure TForm4.xSetDisplayCarInfo2(carInfo: TCarInfo; searchType : Integer);
var
  acceptAnOrderNo , rowIndex: Integer;
  colorInfoList: TSalesSlipInputCustomArrayB2;
  trimInfoList :TSalesSlipInputCustomArrayB3;
  cEqpDefDspInfoList: TSalesSlipInputCustomArrayB4;
  beforeEquipmentGenreNm, selText : string;
  salesRowNo ,i: Integer;
  colorInfo : TColorInfo;
  trimInfo: TTrimInfo;
  boolRet : Boolean;  //2013/06/04
begin
  // 受注番号
  edtAcceptAnOrderNo.SetInt(carInfo.AcceptAnOrderNo);
  // 型式指定番号
  ModelDesignationNo.SetInt(carInfo.ModelDesignationNo);
  // 類別区分番号
  CategoryNo.SetInt(carInfo.CategoryNo);
  // 管理番号
  CarMngCode.Text := carInfo.CarMngCode;
  // 型式
  FullModel.Text := carInfo.FullModel;
  // エンジン型式
  EngineModelNm.Text := carInfo.EngineModelNm;
  // カーメーカーコード
  MakerCode.SetInt(carInfo.MakerCode);
  // 車種コード
  ModelCode.SetInt(carInfo.ModelCode);
  // 車種呼称コード
  ModelSubCode.SetInt(carInfo.ModelSubCode);

  if (carInfo.ModelCode <> 0) or (carInfo.ModelSubCode <> 0) then
  begin
    ModelFullName.Text := carInfo.ModelFullName;  // 車種名称
  end else
  begin
  // --------UPD 2010/11/25 ------------<<<<<
    //ModelFullName.Text := carInfo.MakerFullName;  // メーカー名称
    if (carInfo.ModelFullName = '') then begin
      ModelFullName.Text := carInfo.MakerFullName;  // メーカー名称
    end else begin
      ModelFullName.Text := carInfo.ModelFullName;  // 車種名称
    end;
  // --------UPD 2010/11/25 ------------->>>>
  end;
//
  CarSlipNote.Text := carInfo.CarNote;     // 車輌備考
  CarNoteCode.SetInt(carInfo.CarNoteCode); // 車輌備考コード // ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218

// --- DEL 2010/07/01 ---------->>>>>
//  // --- ADD 2010/06/02 ---------->>>>>
//  SlipNote.Text := carInfo.CarNote; // 備考1
//  // --- ADD 2010/06/02 ----------<<<<<
// --- DEL 2010/07/01 ---------->>>>>

  if carInfo.Mileage = 0 then
  begin
    Mileage.Text :=  ''; // 走行距離
  end else
  begin
    Mileage.Text :=  FormatFloat('#,##0', carInfo.Mileage); // 走行距離
  end;

  FirstEntryDate.Clear();
  if carInfo.ProduceTypeOfYearInput <> 0 then
  begin
    FirstEntryDate.LongDate := carInfo.ProduceTypeOfYearInput * 100;   // 年式
  end;
  // 生産年式範囲
  FirstEntryDateRange.Caption := carInfo.ProduceTypeOfYearRange;
  // 車台番号
  // --- UPD 2012/06/26 No.476 ---------->>>>>
  //ProduceFrameNo.Text := carInfo.FrameNo;
  // --- DEL 2013/03/21 ---------->>>>>
  //ProduceFrameNo.Text := Trim(carInfo.FrameNo);
  // --- DEL 2013/03/21 ----------<<<<<
  // --- ADD 2013/03/21 ---------->>>>>
  if carInfo.DomesticForeignCode = 2 then
  begin
    if pnl26.Caption <> 'VINコード' then
    begin
      // DEL 2014/10/17 chenyd ----------->>>>>
      // --- ADD 2013/06/19 T.Nishi ---------->>>>>
      //if (StrToIntDef(SalesSlipNum.Text, 0) = 0) then begin
      // --- ADD 2013/06/19 T.Nishi ----------<<<<<
      // DEL 2014/10/17 chenyd -----------<<<<<
      // ADD 2014/10/17 chenyd ----------->>>>>
      if ((salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum) and
          (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and
          (Trim(ProduceFrameNo.Text) <> '')) then begin
      // ADD 22014/10/17 chenyd -----------<<<<<
        // --- ADD 2013/06/04 Wakita ---------->>>>>
        // --- ADD 2013/06/05 Wakita ---------->>>>>
        if (CarMngGuideFlag = False) then
        begin
        // --- ADD 2013/06/05 Wakita ----------<<<<<
          ProduceFrameNo.Text := '';
          salesRowNo := xGetActiveRowSalesRowNo();
          // --- UPD 2014/09/22 鹿庭 ---------->>>>>
          // gpxMAHNB01012B_AfterProduceFrameNoFocus(Trim(ProduceFrameNo.Text), salesRowNo, boolRet, 1);
          gpxMAHNB01012B_AfterProduceFrameNoFocus(Trim(carInfo.FrameNo), salesRowNo, boolRet, 1);
          // --- UPD 2014/09/22 鹿庭 ----------<<<<<
          if boolRet then
          begin
            carInfo.FrameNo := '';
            i_beforeCarSearchBuffer.ProduceFrameNo := '';
          end;
        // --- ADD 2013/06/05 Wakita ---------->>>>>
        end;
        // --- ADD 2013/06/05 Wakita ----------<<<<<
        // --- ADD 2013/06/04 Wakita ----------<<<<<
      // --- ADD 2013/06/19 T.Nishi ---------->>>>>
      end;
      // --- ADD 2013/06/19 T.Nishi ----------<<<<<
      pnl26.Caption := 'VINコード';
      ProduceFrameNoRange.Visible := False;
      // DEL 2014/09/22 鹿庭 ---------->>>>>
      //ProduceFrameNo.Width := 150;
      // DEL 2014/09/22 鹿庭 ----------<<<<<
      ProduceFrameNo.ExtEdit.Column := 17;
      ProduceFrameNo.ExtEdit.EnableChars := [ecAlpha, ecNum];
      // DEL 2013/05/08 2013/05/22配信システムテスト障害№8対応 ----------->>>>>
      //ProduceFrameNo.Text := Trim(carInfo.FrameNo);
      // DEL 2013/05/08 2013/05/22配信システムテスト障害№8対応 -----------<<<<<
    end;
  end else
  begin
    if pnl26.Caption <> '車台番号' then
    begin
      // DEL 2014/10/17 chenyd ----------->>>>>
      // --- ADD 2013/06/19 T.Nishi ---------->>>>>
      //if (StrToIntDef(SalesSlipNum.Text, 0) = 0) then begin
      // --- ADD 2013/06/19 T.Nishi ----------<<<<<
      // DEL 2014/10/17 chenyd -----------<<<<<
      // ADD 2014/10/17 chenyd ----------->>>>>
      if ((salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum) and
          (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Normal) and
          (Trim(ProduceFrameNo.Text) <> '')) then begin
      // ADD 22014/10/17 chenyd -----------<<<<<
        // --- ADD 2013/06/04 Wakita ---------->>>>>
        // --- ADD 2013/06/05 Wakita ---------->>>>>
        if (CarMngGuideFlag = False) then
        begin
        // --- ADD 2013/06/05 Wakita ----------<<<<<
          ProduceFrameNo.Text := '';
          salesRowNo := xGetActiveRowSalesRowNo();
          // --- UPD 2014/09/22 鹿庭 ---------->>>>>
          // gpxMAHNB01012B_AfterProduceFrameNoFocus(Trim(ProduceFrameNo.Text), salesRowNo, boolRet, 1);
          gpxMAHNB01012B_AfterProduceFrameNoFocus(Trim(carInfo.FrameNo), salesRowNo, boolRet, 1);
          // --- UPD 2014/09/22 鹿庭 ----------<<<<<
          if boolRet then
          begin
            carInfo.FrameNo := '';
            i_beforeCarSearchBuffer.ProduceFrameNo := '';
          end;
        // --- ADD 2013/06/05 Wakita ---------->>>>>
        end;
        // --- ADD 2013/06/05 Wakita ----------<<<<<
        // --- ADD 2013/06/04 Wakita ----------<<<<<
      // --- ADD 2013/06/19 T.Nishi ---------->>>>>
      end;
      // --- ADD 2013/06/19 T.Nishi ----------<<<<<
      pnl26.Caption := '車台番号';
      ProduceFrameNoRange.Visible := True;
      // DEL 2014/09/22 鹿庭 ---------->>>>>
      //ProduceFrameNo.Width := 80;
      // DEL 2014/09/22 鹿庭 ----------<<<<<
      ProduceFrameNo.ExtEdit.Column := 8;
      ProduceFrameNo.ExtEdit.EnableChars := [ecNum];
      // DEL 2013/05/08 2013/05/22配信システムテスト障害№8対応 ----------->>>>>
      //ProduceFrameNo.Text := Trim(carInfo.FrameNo);
      // DEL 2013/05/08 2013/05/22配信システムテスト障害№8対応 -----------<<<<<
    end;
  end;
  // --- ADD 2013/03/21 ----------<<<<<
  // ADD 2013/05/08 2013/05/22配信システムテスト障害№8対応 ----------->>>>>
  ProduceFrameNo.Text := Trim(carInfo.FrameNo);
  // ADD 2013/05/08 2013/05/22配信システムテスト障害№8対応 -----------<<<<<
  // --- UPD 2012/06/26 No.476 ----------<<<<<
  // 車台番号範囲
  ProduceFrameNoRange.Caption := carInfo.ProduceFrameNoRange;

  // カラー情報
  gpxMAHNB01012B_GetColorInfo(carInfo.CarRelationGuid, colorInfoList);

  if colorInfoList.Csafield1Count = 0 then
  begin
    HNsGrid2.RowCount := 2;
    HNsGrid2.Cells[1, 1] := '';
    HNsGrid2.Cells[2, 1] := '';
    HNsGrid2.Cells[3, 1] := '';
  end else
  begin
    HNsGrid2.RowCount := colorInfoList.Csafield1Count + 1;
  end;
  for i := 1 to colorInfoList.Csafield1Count do
  begin
    HNsGrid2.Alignments[3, i] := taCenter;
    HNsGrid2.Cells[1, i] := colorInfoList.Csafield1.ColorCode; // カラーコード
    HNsGrid2.Cells[2, i] := colorInfoList.Csafield1.ColorName; // カラー名称
    HNsGrid2.AddCheckBox(3, i, colorInfoList.Csafield1.SelectionState, false); // 選択状態
    inc(colorInfoList.Csafield1);
  end;

  // カラー
  gpxMAHNB01012B_GetSelectColorInfo(carInfo.CarRelationGuid, colorInfo);
  ColorNo.Text := colorInfo.ColorCode;
  // --- ADD 2012/09/04 Wakita ---------->>>>>
  if ((colorInfo.ColorCode = '') and (carInfo.ColorCode <> '')) then
  begin
    ColorNo.Text := carInfo.ColorCode;
  end;
  // --- ADD 2012/09/04 Wakita ----------<<<<<

  // トリム情報
  gpxMAHNB01012B_GetTrimInfo(carInfo.CarRelationGuid, trimInfoList);

  if trimInfoList.Csafield1Count = 0 then
  begin
    HNsGrid4.RowCount := 2;
    HNsGrid4.Cells[1, 1] := '';
    HNsGrid4.Cells[2, 1] := '';
    HNsGrid4.Cells[3, 1] := '';
  end else
  begin
    HNsGrid4.RowCount := trimInfoList.Csafield1Count + 1;
  end;
  for i := 1 to trimInfoList.Csafield1Count do
  begin
    HNsGrid4.Alignments[3, i] := taCenter;
    HNsGrid4.Cells[1, i] := trimInfoList.Csafield1.TrimCode; // トリムコード
    HNsGrid4.Cells[2, i] := trimInfoList.Csafield1.TrimName; // トリム名称
    HNsGrid4.AddCheckBox(3, i, trimInfoList.Csafield1.SelectionState, false); // 選択状態
    inc(trimInfoList.Csafield1);
  end;

  // トリム
  gpxMAHNB01012B_GetSelectTrimInfo(carInfo.CarRelationGuid, trimInfo);
  TrimNo.Text := trimInfo.TrimCode;
  // --- ADD 2012/09/04 Wakita ---------->>>>>
  if ((trimInfo.TrimCode = '') and (carInfo.TrimCode <> '')) then
  begin
    TrimNo.Text := carInfo.TrimCode;
  end;
  // --- ADD 2012/09/04 Wakita ----------<<<<<

  // 諸元情報
  HNsGrid5.RowCount := 2;
  HNsGrid5.Cells[1, 1] := carInfo.ModelGradeNm;  // グレード
  HNsGrid5.Cells[2, 1] := carInfo.BodyName;      // ボディ
  if carInfo.DoorCount = 0 then
  begin
    HNsGrid5.Cells[3, 1] := '';
  end else
  begin
    HNsGrid5.Cells[3, 1] := IntToStr( carInfo.DoorCount);
  end;
  HNsGrid5.Cells[4, 1] := carInfo.EngineModelNm;
  HNsGrid5.Cells[5, 1] := carInfo.EngineDisplaceNm;
  HNsGrid5.Cells[6, 1] := carInfo.EDivNm;
  HNsGrid5.Cells[7, 1] := carInfo.TransmissionNm;
  HNsGrid5.Cells[8, 1] := carInfo.WheelDriveMethodNm;
  HNsGrid5.Cells[9, 1] := carInfo.ShiftNm;
  // グリッド列初期設定処理
  xSettingCarSpecGridCol(carInfo);

  // 装備情報
  gpxMAHNB01012B_GetEquipInfo(carInfo.CarRelationGuid, cEqpDefDspInfoList);
  cEqpDefDspInfoListTemp := cEqpDefDspInfoList;

  if cEqpDefDspInfoList.Csafield1Count = 0 then
  begin
    HNsGrid3.RowCount := 2;
    HNsGrid3.Cells[1, 1] := '';
    HNsGrid3.Cells[2, 1] := '';
    HNsGrid3.Cells[3, 1] := '';
  end else
  begin
    HNsGrid3.RowCount := cEqpDefDspInfoList.Csafield1Count + 1;
  end;
  for rowIndex := 1 to HNsGrid3.RowCount do
  begin
    HNsGrid3.Cells[1, rowIndex] := '';
    HNsGrid3.Cells[2, rowIndex] := '';
  end;

  rowIndex := 1;
  for i := 1 to cEqpDefDspInfoList.Csafield1Count do
  begin
    if cEqpDefDspInfoList.Csafield1.EquipmentGenreNm <> beforeEquipmentGenreNm then
    begin
      HNsGrid3.Cells[1, rowIndex] := cEqpDefDspInfoList.Csafield1.EquipmentGenreNm; // 装備名称
      //HNsGrid3.Cells[3, rowIndex] := IntToStr(cEqpDefDspInfoList.Csafield1.EquipmentGenreCd);
      beforeEquipmentGenreNm := cEqpDefDspInfoList.Csafield1.EquipmentGenreNm;

      rowIndex := rowIndex + 1;
    end else

    if cEqpDefDspInfoList.Csafield1.SelectionState then
    begin
      HNsGrid3.Cells[2, rowIndex - 1] := cEqpDefDspInfoList.Csafield1.EquipmentName;
    end;

    inc(cEqpDefDspInfoList.Csafield1);
  end;
  if rowIndex = 1 then
  begin
    HNsGrid3.RowCount := 2;
  end else
  begin
    HNsGrid3.RowCount := rowIndex;
  end;

  i_StringCarRelationGuid := carInfo.CarRelationGuid;

  // 前回車両情報共通キー(保持用)
  gpxMAHNB01013B_SetSalesDetailData(carInfo.CarRelationGuid, 1);

  // Enabled設定
  acceptAnOrderNo := edtAcceptAnOrderNo.GetInt();
  if acceptAnOrderNo = 0 then
  begin
    xEnableControl(ModelCode, True);
    xEnableControl(ModelSubCode, True);
  end;

  if Trim(MakerCode.Text) = '' then
  begin
    xEnableControl(ModelCode, False);
    xEnableControl(ModelSubCode, False);
  end else if Trim(ModelCode.Text) = '' then
  begin
    xEnableControl(ModelSubCode, False);
  end;

  if ((HNsGrid2.RowCount > 1) and (HNsGrid2.Cells[1, 1] <> ''))
    or ((HNsGrid4.RowCount > 1) and (HNsGrid4.Cells[1, 1] <> ''))
    or ((HNsGrid3.RowCount > 1) and (HNsGrid3.Cells[1, 1] <> '')) then
  begin
    ExpandableGroupBox.Enabled := True;
    Label5.Enabled := True;
    if pnl_DisableInfo.Visible then
    begin
      ExpandableGroupBox.Caption := '-';
    end else
    begin
      ExpandableGroupBox.Caption := '+';
    end;
    //pnl_DisableInfo.Visible := false;
  end else
  begin
    ExpandableGroupBox.Enabled := False;
    Label5.Enabled := False;
    ExpandableGroupBox.Caption := '+';
    pnl_DisableInfo.Visible := false;
  end;
end;

// *************************************************************************
// 画面クリア処理（車両情報）
// *************************************************************************
procedure TForm4.xClearDisplayCarInfo();
var
  rowIndex, colIndex : Integer;
begin
    edtAcceptAnOrderNo.Clear(); // 受注番号

    ModelDesignationNo.Clear(); // 型式指定番号
    CategoryNo.Clear();// 類別区分番号

    CarMngCode.Clear();// 管理番号
    FullModel.Clear();// 型式
    EngineModelNm.Clear();// エンジン型式
    MakerCode.Clear();// カーメーカーコード
    ModelCode.Clear();// 車種コード
    ModelSubCode.Clear();// 車種呼称コード
    ModelFullName.Clear();// 車種名称

    FirstEntryDate.Clear(); // 年式
    FirstEntryDateRange.Caption := ''; // 年式範囲

    ProduceFrameNo.Clear();// 車台番号
    ProduceFrameNoRange.Caption := ''; // 車台番号範囲

    // カラー情報
    for rowIndex := 1 to HNsGrid2.RowCount do
    begin
      for colIndex := 1 to HNsGrid2.ColCount do
      begin
        HNsGrid2.Cells[colIndex, rowIndex] := '';
      end;
    end;
    ColorNo.Text := '';

    // トリム情報
    for rowIndex := 1 to HNsGrid4.RowCount do
    begin
      for colIndex := 1 to HNsGrid4.ColCount do
      begin
        HNsGrid4.Cells[colIndex, rowIndex] := '';
      end;
    end;
    TrimNo.Text := '';

    // 諸元情報
    for rowIndex := 1 to HNsGrid5.RowCount do
    begin
      for colIndex := 1 to HNsGrid5.ColCount do
      begin
        HNsGrid5.Cells[colIndex, rowIndex] := '';
      end;
    end;

    // 装備情報
    for rowIndex := 1 to HNsGrid3.RowCount do
    begin
      for colIndex := 1 to HNsGrid3.ColCount do
      begin
        HNsGrid3.Cells[colIndex, rowIndex] := '';
      end;
    end;

    ExpandableGroupBox.Enabled := false;;
    Label5.Enabled := false;
    ExpandableGroupBox.Caption := '+';
    pnl_DisableInfo.Visible := false;
end;

// *************************************************************************
// 画面クリア処理（車両追加情報)
// *************************************************************************
procedure TForm4.xClearAddCarInfo();
var
  salesRowNo : Integer;
begin
  salesRowNo := xGetActiveRowSalesRowNo();

  CarMngCode.Text := '';
  gpxMAHNB01012B_SettingCarInfoRowFromCarMngCode(salesRowNo, '');

  CarNoteCode.SetInt(0); // ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218
  CarSlipNote.Text := '';
  gpxMAHNB01012B_SettingCarInfoRowFromCarNote(salesRowNo, '');

  //Mileage.SetInt(0);
  Mileage.Text := '';
  gpxMAHNB01012B_SettingCarInfoRowFromMileage(salesRowNo, 0);
end;

// *************************************************************************
// 追加情報タブ項目Visible設定
// *************************************************************************
procedure TForm4.xSettingAddInfoVisible();
var
  salesRowNo : Integer;
  boolRet : Boolean;
begin
  salesRowNo := xGetActiveRowSalesRowNo();
  gpxMAHNB01012B_SettingAddInfoVisible(CustomerCode.GetInt(), CarMngCode.Text, salesRowNo, boolRet);

  AddInfoTabSheet.TabVisible := boolRet;

  if not boolRet then
  begin
    //車輌備考
    CarNoteCode.SetInt(0); // ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218
    CarSlipNote.Text := '';
    //車両走行距離
    //Mileage.SetInt(0);
    Mileage.Text := '';
  end;
end;

// *************************************************************************
// 車種変更ボタンVisible設定
// *************************************************************************
procedure TForm4.xSettingChangeCarInfoVisible();
var
  visibleFlag : Integer;
begin
  gpxMAHNB01012B_GetChangeCarInfoVisible(CustomerCode.GetInt(), CarMngCode.Text, visibleFlag);

  if visibleFlag = 1 then
  begin
     btnChangeCarInfo.Enabled := True;
  end else
  begin
     btnChangeCarInfo.Enabled := False;
  end;
end;

// *************************************************************************
// ActiveRowの行番号取得処理
// *************************************************************************
function TForm4.xGetActiveRowSalesRowNo(): Integer;
var
  index : Integer;
begin
    // 検索正常
  Result := -1;

  if HNsGrid1.LogicalRow <> 0 then
  begin
    index := HNsGrid1.LogicalRow - 1;

    if index < 0 then
    begin
      Exit();
    end;

    Result := RCHNB01003UADM.SalesRowNo[index];
  end;
end;

// *************************************************************************
// 売上明細データテーブルを指定行数へ変更
// *************************************************************************
procedure TForm4.xSettingSalesDetailRowInputRowCount(inputCnt : Integer);
var
   i,rowCount : Integer;
begin

//>>>2010/07/27
//   for i := 1 to  (HNsGrid1.LogicalRowCount -1) do
//   begin
//     if i > inputCnt then
//     begin
//       if (Trim(RCHNB01003UADM.GoodsName[i -1]) = '') then
//       begin
//         HNsGrid1.RemoveLogicalRowsEx(i,1);
//       end;
//     end;
//   end;

//>>>2010/08/02
//  for i := HNsGrid1.LogicalRowCount - 1 downto 1 do begin
//    if (Trim(RCHNB01003UADM.GoodsName[i - 1]) = '') then begin
//      HNsGrid1.RemoveLogicalRowsEx(i, 1);
//    end;
//  end;
  for i := HNsGrid1.LogicalRowCount - 1 downto 1 do begin
    if i > inputCnt then begin
      if (Trim(RCHNB01003UADM.GoodsName[i - 1]) = '') then begin
        HNsGrid1.RemoveLogicalRowsEx(i, 1);
      end;
    end;
  end;
//<<<2010/08/02
//<<<2010/07/27

end;

// *************************************************************************
// 行追加処理
// *************************************************************************
procedure TForm4.xInitialRow();
var
    i,rowCount : Integer;
begin
    if (HNsGrid1.LogicalRowCount <= i_RowMaxCount) then
    begin

        // --- UPD 2010/06/02 ---------->>>>>
        //HNsGrid1.InsertLogicalRows(HNsGrid1.LogicalRowCount, (i_RowMaxCount - HNsGrid1.LogicalRowCount - 1),true);
        HNsGrid1.InsertLogicalRows(HNsGrid1.LogicalRowCount, (i_RowMaxCount + 1 - HNsGrid1.LogicalRowCount),true);
        // --- UPD 2010/06/02 ----------<<<<<

        xInitialSettingGridCol;

        // --- ADD 2010/06/02 ---------->>>>>
        // グリッド設定処理（ユーザー設定より）
        xGridSetting();
        // --- ADD 2010/06/02 ----------<<<<<

        xSettingGrid;
    end;
end;
// ADD 2010/09/10 -- >>>>
procedure TForm4.xSetShipmentDisplay(salesRowNo :Integer);
begin
   //出荷数
   if ((RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '') and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation)
   and (HNsGrid1.LogicalCells[ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, 0] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, salesRowNo] :=
      FloatToStr(RCHNB01003UADM.ShipmentCntDisplay[salesRowNo - 1])  ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, salesRowNo] :='';
   end;
end;
// ADD 2010/09/10 -- <<<<

// --- DEL 2012/05/21 ---------->>>>>
//// ADD 2012/04/11 No.594 ---------->>>>
//procedure TForm4.xSetAcceptAnOrderDisplay(salesRowNo :Integer);
//begin
//   //受注数
//   if ((RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '') and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation)
//   and (HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, 0] <> '')) then
//   begin
//      HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, salesRowNo] :=
//      FloatToStr(RCHNB01003UADM.AcceptAnOrderCntDisplay[salesRowNo - 1])  ;
//   end
//   else
//   begin
//      HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, salesRowNo] :='';
//   end;
//end;
//// ADD 2012/04/11 No.594 ----------<<<<
// --- DEL 2012/05/21 ----------<<<<<

// *************************************************************************
// 明細画面表示処理
// *************************************************************************
procedure TForm4.xSetDeatilRowDisplay(salesRowNo :Integer);
var
   tDate: TDateTime;
begin
   //品番
   HNsGrid1.LogicalCells[ctCol_GoodsNo, ctRow_GoodsNo, salesRowNo] :=
   RCHNB01003UADM.GoodsNo[salesRowNo - 1] ;

   //品名
   HNsGrid1.LogicalCells[ctCol_GoodsName, ctRow_GoodsName, salesRowNo] :=
   RCHNB01003UADM.GoodsName[salesRowNo - 1] ;

   //BLコード
   HNsGrid1.LogicalCells[ctCol_BLGoodsCode, ctRow_BLGoodsCode, salesRowNo] :=
   IntToStr(RCHNB01003UADM.BLGoodsCode[salesRowNo - 1])  ;

   //商品属性(純正優良)
   if ((RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '') and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation)) then
   begin
      HNsGrid1.LogicalCells[ctCol_GoodsKindCode, ctRow_GoodsKindCode, salesRowNo] :=
      IntToStr(RCHNB01003UADM.GoodsKindCode[salesRowNo - 1]);
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_GoodsKindCode, ctRow_GoodsKindCode, salesRowNo] :='';
   end;

   //メーカー
   if (RCHNB01003UADM.GoodsMakerCd[salesRowNo - 1] <> 0) then
   begin
      HNsGrid1.LogicalCells[ctCol_GoodsMakerCd, ctRow_GoodsMakerCd, salesRowNo] :=
      IntToStr(RCHNB01003UADM.GoodsMakerCd[salesRowNo - 1])  ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_GoodsMakerCd, ctRow_GoodsMakerCd, salesRowNo] :='';
   end;

   //仕入先
   if (RCHNB01003UADM.SupplierCd[salesRowNo - 1] <> 0) then
   begin
      HNsGrid1.LogicalCells[ctCol_SupplierCd, ctRow_SupplierCd, salesRowNo] :=
      IntToStr(RCHNB01003UADM.SupplierCd[salesRowNo - 1])  ;

      HNsGrid1.LogicalCells[ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, salesRowNo] :=
      IntToStr(RCHNB01003UADM.SupplierCd[salesRowNo - 1])  ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_SupplierCd, ctRow_SupplierCd, salesRowNo] :='';

      HNsGrid1.LogicalCells[ctCol_SupplierCdForStock, ctRow_SupplierCdForStock, salesRowNo] :='';
   end;

   //出荷数
   if ((RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '') and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation)
   and (HNsGrid1.LogicalCells[ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, 0] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, salesRowNo] :=
      FloatToStr(RCHNB01003UADM.ShipmentCntDisplay[salesRowNo - 1])  ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_ShipmentCntDisplay, ctRow_ShipmentCntDisplay, salesRowNo] :='';
   end;

   //定価
   if (RCHNB01003UADM.ListPriceDisplay[salesRowNo - 1] <> 0) then
   begin
      HNsGrid1.LogicalCells[ctCol_ListPriceDisplay, ctRow_ListPriceDisplay, salesRowNo] :=
      FloatToStr(RCHNB01003UADM.ListPriceDisplay[salesRowNo - 1])  ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_ListPriceDisplay, ctRow_ListPriceDisplay, salesRowNo] :='';
   end;

   //原価単価
   if ((RCHNB01003UADM.SalesUnitCost[salesRowNo - 1] <> 0) and (HNsGrid1.LogicalCells[ctCol_SalesUnitCost, ctRow_SalesUnitCost, 0] <> '') ) then
   begin
      HNsGrid1.LogicalCells[ctCol_SalesUnitCost, ctRow_SalesUnitCost, salesRowNo] :=
      FloatToStr(RCHNB01003UADM.SalesUnitCost[salesRowNo - 1])  ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_SalesUnitCost, ctRow_SalesUnitCost, salesRowNo] :='';
   end;

   //倉庫コード
   HNsGrid1.LogicalCells[ctCol_WarehouseCode, ctRow_WarehouseCode, salesRowNo] :=
   RCHNB01003UADM.WarehouseCode[salesRowNo - 1]  ;

   //倉庫棚番
   HNsGrid1.LogicalCells[ctCol_WarehouseShelfNo, ctRow_WarehouseShelfNo, salesRowNo] :=
   RCHNB01003UADM.WarehouseShelfNo[salesRowNo - 1]  ;

   //現在庫数(表示用)
   if (RCHNB01003UADM.SupplierStockDisplay[salesRowNo - 1] <> 0) then
   begin
      HNsGrid1.LogicalCells[ctCol_SupplierStockDisplay, ctRow_SupplierStockDisplay, salesRowNo] :=
      FloatToStr(RCHNB01003UADM.SupplierStockDisplay[salesRowNo - 1])  ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_SupplierStockDisplay, ctRow_SupplierStockDisplay, salesRowNo] := '0';
   end;

   //原価率
   if ((RCHNB01003UADM.CostRate[salesRowNo - 1] <> 0) and (HNsGrid1.LogicalCells[ctCol_CostRate, ctRow_CostRate, 0] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_CostRate, ctRow_CostRate, salesRowNo] :=
      FloatToStr(RCHNB01003UADM.CostRate[salesRowNo - 1])  ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_CostRate, ctRow_CostRate, salesRowNo] := '';
   end;

   //売価率
   if (RCHNB01003UADM.SalesRate[salesRowNo - 1] <> 0) then
   begin
      HNsGrid1.LogicalCells[ctCol_SalesRate, ctRow_SalesRate, salesRowNo] :=
      FloatToStr(RCHNB01003UADM.SalesRate[salesRowNo - 1])  ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_SalesRate, ctRow_SalesRate, salesRowNo] := '';
   end;

   //売単価
   if (RCHNB01003UADM.SalesUnPrcTaxExcFl[salesRowNo - 1] <> 0) then
   begin
      // UPD 2010/08/23 --- >>>
      if (smallPointFlg) then
      begin
        HNsGrid1.LogicalCells[ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay, salesRowNo] :=
        FloatToStr(RCHNB01003UADM.SalesUnPrcTaxExcFl[salesRowNo - 1]);
      end
      else
      begin
        HNsGrid1.LogicalCells[ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay, salesRowNo] :=
        //IntToStr(Trunc(RCHNB01003UADM.SalesMoneyTaxExc[salesRowNo - 1]));    // DEL 2010/08/25
        IntToStr(Trunc(RCHNB01003UADM.SalesUnPrcTaxExcFl[salesRowNo - 1]));    // ADD 2010/08/25
      end;
      // UPD 2010/08/23 --- <<<
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_SalesUnPrcDisplay, ctRow_SalesUnPrcDisplay, salesRowNo] := '';
   end;

   //売上金額
   if (RCHNB01003UADM.SalesMoneyTaxExc[salesRowNo - 1] <> 0) then
   begin
      HNsGrid1.LogicalCells[ctCol_SalesMoneyDisplay, ctRow_SalesMoneyDisplay, salesRowNo] :=
      FloatToStr(RCHNB01003UADM.SalesMoneyTaxExc[salesRowNo - 1])  ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_SalesMoneyDisplay, ctRow_SalesMoneyDisplay, salesRowNo] := '';
   end;

   //仕入日
   if ((RCHNB01003UADM.StockDate[salesRowNo - 1] <> 0) and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin
      tDate := TicksToTDateTime(RCHNB01003UADM.StockDate[salesRowNo - 1]);

      HNsGrid1.LogicalCells[ctCol_StockDate, ctRow_StockDate, salesRowNo] :=
      FormatDateTime('yyyy/mm/dd', tDate) ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_StockDate, ctRow_StockDate, salesRowNo] := '';
   end;

   //BO
   if ((RCHNB01003UADM.BoCode[salesRowNo - 1] <> '') and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_BoCode, ctRow_BoCode, salesRowNo] :=
      RCHNB01003UADM.BoCode[salesRowNo - 1] ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_BoCode, ctRow_BoCode, salesRowNo] := '';
   end;

   //発注先
   if ((RCHNB01003UADM.SupplierCdForOrder[salesRowNo - 1] <> 0) and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_SupplierCdForOrder, ctRow_SupplierCdForOrder, salesRowNo] :=
      IntToStr(RCHNB01003UADM.SupplierCdForOrder[salesRowNo - 1]) ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_SupplierCdForOrder, ctRow_SupplierCdForOrder, salesRowNo] := '';
   end;

   //発注先名称
   if ((RCHNB01003UADM.SupplierSnmForOrder[salesRowNo - 1] <> '') and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_SupplierSnmForOrder, ctRow_SupplierSnmForOrder, salesRowNo] :=
      RCHNB01003UADM.SupplierSnmForOrder[salesRowNo - 1] ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_SupplierSnmForOrder, ctRow_SupplierSnmForOrder, salesRowNo] := '';
   end;

   //納品区分
   if ((RCHNB01003UADM.DeliveredGoodsDivNm[salesRowNo - 1] <> '') and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_DeliveredGoodsDivNm, ctRow_DeliveredGoodsDivNm, salesRowNo] :=
      RCHNB01003UADM.DeliveredGoodsDivNm[salesRowNo - 1] ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_DeliveredGoodsDivNm, ctRow_DeliveredGoodsDivNm, salesRowNo] := '';
   end;

   //販売区分
   if ((RCHNB01003UADM.SalesCode[salesRowNo - 1] <> 0) and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_SalesCode, ctRow_SalesCode, salesRowNo] :=
      IntToStr(RCHNB01003UADM.SalesCode[salesRowNo - 1]) ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_SalesCode, ctRow_SalesCode, salesRowNo] := '';
   end;

   //受注数量
   if ((RCHNB01003UADM.AcceptAnOrderCntDisplay[salesRowNo - 1] <> 0) and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')
   and (HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, 0] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, salesRowNo] :=
      FloatToStr(RCHNB01003UADM.AcceptAnOrderCntDisplay[salesRowNo - 1]) ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntDisplay, ctRow_AcceptAnOrderCntDisplay, salesRowNo] := '';
   end;

   //原価
   if ((RCHNB01003UADM.Cost[salesRowNo - 1] <> 0) and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')
   and (HNsGrid1.LogicalCells[ctCol_SalesMoneyDisplay, ctRow_AcceptAnOrderCntDisplay, 0] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_SalesMoneyDisplay, ctRow_AcceptAnOrderCntDisplay, salesRowNo] :=
      IntToStr(RCHNB01003UADM.Cost[salesRowNo - 1]) ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_SalesMoneyDisplay, ctRow_AcceptAnOrderCntDisplay, salesRowNo] := '';
   end;

   //納品完了予定日
      // --------UPD 2010/07/01-------->>>>>
   //if ((RCHNB01003UADM.DeliGdsCmpltDueDate[salesRowNo - 1] <> 0) and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   if ((RCHNB01003UADM.DeliGdsCmpltDueDate[salesRowNo - 1] <> '') and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin

//      tDate := TicksToTDateTime(RCHNB01003UADM.DeliGdsCmpltDueDate[salesRowNo - 1]);
//
//      HNsGrid1.LogicalCells[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, salesRowNo] :=
//      FormatDateTime('yyyy/mm/dd', tDate) ;
//   end
//   else
//   begin
//      HNsGrid1.LogicalCells[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, salesRowNo] := '';
    // ADD 2011/09/17 >>>>>>>>>>>>>>
    if (SalesSlipDisplayComBo.SelCode = 20) or (SalesSlipDisplayComBo.SelCode = 40)  then
    begin
        HNsGrid1.LogicalCells[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, salesRowNo] := '';
    end
    else
    begin
       HNsGrid1.LogicalCells[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, salesRowNo] := RCHNB01003UADM.DeliGdsCmpltDueDate[salesRowNo - 1];
    end;
    // ADD 2011/09/17 <<<<<<<<<<<<

     //HNsGrid1.LogicalCells[ctCol_DeliGdsCmpltDueDate, ctRow_DeliGdsCmpltDueDate, salesRowNo] := RCHNB01003UADM.DeliGdsCmpltDueDate[salesRowNo - 1];    // DEL 2011/09/17
   // --------UPD 2010/07/01--------<<<<<
   end;

   // 相手先伝票番号（明細）
   if ((RCHNB01003UADM.PartySlipNumDtl[salesRowNo - 1] <> '') and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl, salesRowNo] :=
      RCHNB01003UADM.PartySlipNumDtl[salesRowNo - 1] ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_PartySlipNumDtl, ctRow_PartySlipNumDtl, salesRowNo] := '';
   end;

   // 明細備考
   if ((RCHNB01003UADM.DtlNote[salesRowNo - 1] <> '') and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_DtlNote, ctRow_DtlNote, salesRowNo] :=
      RCHNB01003UADM.DtlNote[salesRowNo - 1] ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_DtlNote, ctRow_DtlNote, salesRowNo] := '';
   end;

   // 仕入伝票番号
   if ((RCHNB01003UADM.PartySalesSlipNum[salesRowNo - 1] <> '') and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, salesRowNo] :=
      RCHNB01003UADM.PartySalesSlipNum[salesRowNo - 1] ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_PartySalesSlipNum, ctRow_PartySalesSlipNum, salesRowNo] := '';
   end;

   //発注数
   if ((RCHNB01003UADM.AcceptAnOrderCntForOrder[salesRowNo - 1] <> 0) and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntForOrder, ctRow_AcceptAnOrderCntForOrder, salesRowNo] :=
      FloatToStr(RCHNB01003UADM.AcceptAnOrderCntForOrder[salesRowNo - 1]) ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_AcceptAnOrderCntForOrder, ctRow_AcceptAnOrderCntForOrder, salesRowNo] := '';
   end;

   //Ｈ納品区分
   if ((RCHNB01003UADM.FollowDeliGoodsDivNm[salesRowNo - 1] <> '') and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_FollowDeliGoodsDivNm, ctRow_FollowDeliGoodsDivNm, salesRowNo] :=
      RCHNB01003UADM.FollowDeliGoodsDivNm[salesRowNo - 1];
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_FollowDeliGoodsDivNm, ctRow_FollowDeliGoodsDivNm, salesRowNo] := '';
   end;

   //指定拠点
   if ((RCHNB01003UADM.UOEResvdSectionNm[salesRowNo - 1] <> '') and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_UOEResvdSectionNm, ctRow_UOEResvdSectionNm, salesRowNo] :=
      RCHNB01003UADM.UOEResvdSectionNm[salesRowNo - 1];
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_UOEResvdSectionNm, ctRow_UOEResvdSectionNm, salesRowNo] := '';
   end;
   //>>>2010/05/30
   //RC区分
   if ((RCHNB01003UADM.RecycleDivNm[salesRowNo - 1] <> '') and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_RecycleDivNm, ctRow_RecycleDivNm, salesRowNo] :=
           RCHNB01003UADM.RecycleDivNm[salesRowNo - 1];
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_RecycleDivNm, ctRow_RecycleDivNm, salesRowNo] := '';
   end;
   //PS管理番号
   if ((RCHNB01003UADM.GoodsMngNo[salesRowNo - 1] <> 0) and (RCHNB01003UADM.EditStatus[salesRowNo - 1] <> ctEDITSTATUS_Annotation) and (RCHNB01003UADM.GoodsName[salesRowNo - 1] <> '')) then
   begin
      HNsGrid1.LogicalCells[ctCol_GoodsMngNo, ctRow_GoodsMngNo, salesRowNo] :=
      FloatToStr(RCHNB01003UADM.GoodsMngNo[salesRowNo - 1]) ;
   end
   else
   begin
      HNsGrid1.LogicalCells[ctCol_GoodsMngNo, ctRow_GoodsMngNo, salesRowNo] := '';
   end;
   //<<<2010/05/30
   // --- ADD 2016/01/21 Wakita ---------->>>>>
   // 貸出または受注伝票修正時に計上状況を表示
   xAddUpInfoDsp(salesRowNo);
   // --- ADD 2016/01/21 Wakita ----------<<<<<
end;
// ADD 2010/09/10 -- >>>>
procedure TForm4.xSetShipmentFormC(salesDetailArray:TSalesSlipInputCustomArrayA2; salesRowNo:Integer);
var
   salesRowNoFrom, i, tempInt :Integer;
begin
   for i := 1 to salesDetailArray.Csafield1Count do
        begin
            salesRowNoFrom := salesDetailArray.Csafield1.SalesRowNo;
            RCHNB01003UADM.ShipmentCnt[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.ShipmentCnt;
            RCHNB01003UADM.ShipmentCntDisplay[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.ShipmentCntDisplay;

            xSetShipmentDisplay(salesRowNoFrom);

            inc(salesDetailArray.Csafield1);
        end;

end;

// ADD 2010/09/10 -- <<<<
// --- DEL 2012/05/21 ---------->>>>>
// ADD 2012/04/11 No.594 ---------->>>>
//procedure TForm4.xSetAcceptAnOrderFormC(salesDetailArray:TSalesSlipInputCustomArrayA2; salesRowNo:Integer);
//var
//   salesRowNoFrom, i, tempInt :Integer;
//begin
//   for i := 1 to salesDetailArray.Csafield1Count do
//        begin
//            salesRowNoFrom := salesDetailArray.Csafield1.SalesRowNo;
//            if salesDetailArray.Csafield1.AcceptAnOrderCnt = 0 then
//            begin
//              if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ShipmentAddUp)
//              or  (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp)
//              or  (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp)) then
//              begin
//                if (HNsGrid1.ReadOnly[ctCol_AcceptAnOrderCntDisplay,salesRowNoFrom * 2] = False) then
//                begin
//                  RCHNB01003UADM.AcceptAnOrderCntDisplay[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.ShipmentCntDisplay;
//                  RCHNB01003UADM.ShipmentCnt[salesRowNoFrom - 1]:= 0;
//                  RCHNB01003UADM.ShipmentCntDisplay[salesRowNoFrom - 1]:= 0;
//                  xSetShipmentDisplay(salesRowNoFrom);
//                  xSetAcceptAnOrderDisplay(salesRowNoFrom);
//                end
//              end
//              else
//              begin
//                RCHNB01003UADM.AcceptAnOrderCntDisplay[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.ShipmentCntDisplay;
//                xSetAcceptAnOrderDisplay(salesRowNoFrom);
//              end;
//            end;
//            inc(salesDetailArray.Csafield1);
//        end;
//
//end;
// ADD 2012/04/11 No.594 ----------<<<<
// --- DEL 2012/05/21 ----------<<<<<

// *************************************************************************
// 明細画面表示処理
// *************************************************************************
procedure TForm4.xSetDetailRowFormC(salesDetailArray:TSalesSlipInputCustomArrayA2; salesRowNo:Integer);
var
   salesRowNoFrom, i, tempInt :Integer;    // UPD 2010/08/13
   // --- DEL 2012/05/21 ---------->>>>>
   //focusPositionAfterBLCodeSearch : Integer;   // ADD 2012/04/11 No.594
   // --- DEL 2012/05/21 ----------<<<<<
begin
    //smallPointFlg := False;             // ADD 2010/08/13

    // --- DEL 2012/05/21 ---------->>>>>
//    // --- ADD 2012/04/11 No.594 ---------->>>>>
//    gpxMAHNB01013B_GetSalesSlipInputConstructionData(focusPositionAfterBLCodeSearch, 9);
//    // --- ADD 2012/04/11 No.594 ----------<<<<<
    // --- DEL 2012/05/21 ----------<<<<<
    if (salesDetailArray.Csafield1 = nil)  then  Exit; // ADD K2015/04/01 高騁 森川部品個別依頼
    if (salesRowNo <> -1) then
    begin
        RCHNB01003UADM.GoodsNo[salesRowNo - 1]:= salesDetailArray.Csafield1.GoodsNo;
        RCHNB01003UADM.GoodsName[salesRowNo - 1]:= salesDetailArray.Csafield1.GoodsName;
        RCHNB01003UADM.BLGoodsCode[salesRowNo - 1]:= salesDetailArray.Csafield1.BLGoodsCode;

        RCHNB01003UADM.RowStatus[salesRowNo - 1]:= salesDetailArray.Csafield1.RowStatus;
        RCHNB01003UADM.SalesRowNo[salesRowNo - 1]:= salesDetailArray.Csafield1.SalesRowNo;
        RCHNB01003UADM.AcptAnOdrStatusSrc[salesRowNo - 1]:= salesDetailArray.Csafield1.AcptAnOdrStatusSrc;
        RCHNB01003UADM.SalesSlipDtlNumSrc[salesRowNo - 1]:= salesDetailArray.Csafield1.SalesSlipDtlNumSrc;
        RCHNB01003UADM.TaxDiv[salesRowNo - 1]:= salesDetailArray.Csafield1.TaxationDivCd;
        RCHNB01003UADM.SalesMoneyInputDiv[salesRowNo - 1]:= salesDetailArray.Csafield1.SalesMoneyInputDiv;
        RCHNB01003UADM.OpenPriceDiv[salesRowNo - 1]:= salesDetailArray.Csafield1.OpenPriceDiv;


        RCHNB01003UADM.GoodsKindCode[salesRowNo - 1]:= salesDetailArray.Csafield1.GoodsKindCode;
        RCHNB01003UADM.GoodsMakerCd[salesRowNo - 1]:= salesDetailArray.Csafield1.GoodsMakerCd;
        RCHNB01003UADM.SupplierCd[salesRowNo - 1]:= salesDetailArray.Csafield1.SupplierCd;
        RCHNB01003UADM.ShipmentCnt[salesRowNo - 1]:= salesDetailArray.Csafield1.ShipmentCnt;
        RCHNB01003UADM.StdUnPrcLPrice[salesRowNo - 1]:= salesDetailArray.Csafield1.StdUnPrcLPrice;
        RCHNB01003UADM.SalesUnitCost[salesRowNo - 1]:= salesDetailArray.Csafield1.SalesUnitCost;
        RCHNB01003UADM.EditStatus[salesRowNo - 1]:= salesDetailArray.Csafield1.EditStatus;
        RCHNB01003UADM.ShipmentCntDisplay[salesRowNo - 1]:= salesDetailArray.Csafield1.ShipmentCntDisplay;
        RCHNB01003UADM.SalesSlipCdDtl[salesRowNo - 1]:= salesDetailArray.Csafield1.SalesSlipCdDtl;
        RCHNB01003UADM.WarehouseCode[salesRowNo - 1]:= salesDetailArray.Csafield1.WarehouseCode;
        RCHNB01003UADM.SupplierStockDisplay[salesRowNo - 1]:= salesDetailArray.Csafield1.SupplierStockDisplay;

        RCHNB01003UADM.ListPriceTaxExcFl[salesRowNo - 1]:= salesDetailArray.Csafield1.ListPriceTaxExcFl;
        RCHNB01003UADM.ListPriceDisplay[salesRowNo - 1]:= salesDetailArray.Csafield1.ListPriceDisplay;
        RCHNB01003UADM.CostRate[salesRowNo - 1]:= salesDetailArray.Csafield1.CostRate;
        RCHNB01003UADM.SalesRate[salesRowNo - 1]:= salesDetailArray.Csafield1.SalesRate;
        RCHNB01003UADM.SalesUnPrcTaxExcFl[salesRowNo - 1]:= salesDetailArray.Csafield1.SalesUnPrcTaxExcFl;
        RCHNB01003UADM.SalesMoneyTaxExc[salesRowNo - 1]:= salesDetailArray.Csafield1.SalesMoneyTaxExc;
        RCHNB01003UADM.StockDate[salesRowNo - 1]:= salesDetailArray.Csafield1.StockDate;

        RCHNB01003UADM.BoCode[salesRowNo - 1]:= salesDetailArray.Csafield1.BoCode;
        RCHNB01003UADM.SupplierCdForOrder[salesRowNo - 1]:= salesDetailArray.Csafield1.SupplierCdForOrder;
        RCHNB01003UADM.SupplierSnmForOrder[salesRowNo - 1]:= salesDetailArray.Csafield1.SupplierSnmForOrder;

        RCHNB01003UADM.DeliveredGoodsDivNm[salesRowNo - 1]:= salesDetailArray.Csafield1.DeliveredGoodsDivNm;
        RCHNB01003UADM.SalesCode[salesRowNo - 1]:= salesDetailArray.Csafield1.SalesCode;
        RCHNB01003UADM.AcceptAnOrderCntDisplay[salesRowNo - 1]:= salesDetailArray.Csafield1.AcceptAnOrderCnt;
        RCHNB01003UADM.Cost[salesRowNo - 1]:= salesDetailArray.Csafield1.Cost;
        RCHNB01003UADM.DeliGdsCmpltDueDate[salesRowNo - 1]:= salesDetailArray.Csafield1.DeliGdsCmpltDueDate;
        RCHNB01003UADM.PartySalesSlipNum[salesRowNo - 1]:= salesDetailArray.Csafield1.PartySalesSlipNum;
        RCHNB01003UADM.AcceptAnOrderCntForOrder[salesRowNo - 1]:= salesDetailArray.Csafield1.AcptAnOdrRemainCnt;
        RCHNB01003UADM.FollowDeliGoodsDivNm[salesRowNo - 1]:= salesDetailArray.Csafield1.FollowDeliGoodsDivNm;
        RCHNB01003UADM.UOEResvdSectionNm[salesRowNo - 1]:= salesDetailArray.Csafield1.UOEResvdSectionNm;

        RCHNB01003UADM.UOEDeliGoodsDiv[salesRowNo - 1]:= salesDetailArray.Csafield1.UOEDeliGoodsDiv;
        RCHNB01003UADM.FollowDeliGoodsDiv[salesRowNo - 1]:= salesDetailArray.Csafield1.FollowDeliGoodsDiv;
        RCHNB01003UADM.UOEResvdSection[salesRowNo - 1]:= salesDetailArray.Csafield1.UOEResvdSection;

        RCHNB01003UADM.WarehouseShelfNo[salesRowNo - 1]:= salesDetailArray.Csafield1.WarehouseShelfNo;

        RCHNB01003UADM.PartySlipNumDtl[salesRowNo - 1]:= salesDetailArray.Csafield1.PartySlipNumDtl;
        RCHNB01003UADM.DtlNote[salesRowNo - 1]:= salesDetailArray.Csafield1.DtlNote;
        RCHNB01003UADM.SalesSlipDtlNum[salesRowNo - 1]:= salesDetailArray.Csafield1.SalesSlipDtlNum;

        RCHNB01003UADM.AcceptAnOrderNo[salesRowNo - 1]:= salesDetailArray.Csafield1.AcceptAnOrderNo;
        RCHNB01003UADM.AcptAnOdrStatus[salesRowNo - 1]:= salesDetailArray.Csafield1.AcptAnOdrStatus;
        RCHNB01003UADM.SearchPartsModeState[salesRowNo - 1]:= salesDetailArray.Csafield1.SearchPartsModeState;
        //>>>2010/05/30
        RCHNB01003UADM.RecycleDiv[salesRowNo - 1]:= salesDetailArray.Csafield1.RecycleDiv;
        RCHNB01003UADM.RecycleDivNm[salesRowNo - 1]:= salesDetailArray.Csafield1.RecycleDivNm;
        RCHNB01003UADM.GoodsMngNo[salesRowNo - 1]:= salesDetailArray.Csafield1.GoodsMngNo;
        //<<<2010/05/30

        // 2011/08/20 XUJS ADD STA ------>>>>>>
        RCHNB01003UADM.StdUnPrcUnCst[salesRowNo - 1]:= salesDetailArray.Csafield1.StdUnPrcUnCst;
        // 2011/08/20 XUJS ADD END ------<<<<<<

        // --- DEL 2012/05/21 ---------->>>>>
//        // --- ADD 2012/04/11 No.594 ---------->>>>>
//        //新規伝票で且つ
//        //伝票種別「売上」、伝票区分「売上」又は伝票種別「貸出」、伝票区分「売上」で且つ
//        //売上全体設定「受注数入力：する」且つユーザ設定「商品検索後のカーソル位置：受注数」の場合
//        if  ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))
//        and (((AcptAnOdrStatusDisplayComBo.SelCode = 30) and (SalesSlipDisplayComBo.SelCode = 10))
//        or  ((AcptAnOdrStatusDisplayComBo.SelCode = 40) and (SalesSlipDisplayComBo.SelCode = 10)))
//        and (salesTtlSt.AcpOdrInputDiv = 1)
//        and (focusPositionAfterBLCodeSearch = 1)
//        and (RCHNB01003UADM.AcceptAnOrderCntDisplay[salesRowNo - 1] = 0)
//        and not ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ShipmentAddUp)
//             or  (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp)
//             or  (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp)) then
//        begin
//            RCHNB01003UADM.AcceptAnOrderCntDisplay[salesRowNo - 1]:= salesDetailArray.Csafield1.ShipmentCntDisplay;
//            RCHNB01003UADM.ShipmentCnt[salesRowNo - 1]:= 0;
//            RCHNB01003UADM.ShipmentCntDisplay[salesRowNo - 1]:= 0;
//        end;
//        // --- ADD 2012/04/11 No.594 ----------<<<<<
        // --- DEL 2012/05/21 ----------<<<<<

        xSetDeatilRowDisplay(salesRowNo);
    end
    else
    begin
        //xInitialRow; DEL 2010/05/31

        for i := 1 to salesDetailArray.Csafield1Count do
        begin
            salesRowNoFrom := salesDetailArray.Csafield1.SalesRowNo;

//            if (salesDetailArray.Csafield1.GoodsNo = '') then
//            begin
//               xSetDeatilRowDisplay(salesRowNoFrom);
//               inc(salesDetailArray.Csafield1);
//
//               Continue;
//            end;

            RCHNB01003UADM.GoodsNo[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.GoodsNo;
            RCHNB01003UADM.GoodsName[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.GoodsName;
            RCHNB01003UADM.BLGoodsCode[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.BLGoodsCode;

            RCHNB01003UADM.RowStatus[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.RowStatus;
            RCHNB01003UADM.SalesRowNo[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SalesRowNo;
            RCHNB01003UADM.AcptAnOdrStatusSrc[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.AcptAnOdrStatusSrc;
            RCHNB01003UADM.SalesSlipDtlNumSrc[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SalesSlipDtlNumSrc;
            RCHNB01003UADM.TaxDiv[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.TaxationDivCd;
            RCHNB01003UADM.SalesMoneyInputDiv[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SalesMoneyInputDiv;
            RCHNB01003UADM.OpenPriceDiv[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.OpenPriceDiv;

            RCHNB01003UADM.GoodsKindCode[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.GoodsKindCode;
            RCHNB01003UADM.GoodsMakerCd[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.GoodsMakerCd;
            RCHNB01003UADM.SupplierCd[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SupplierCd;
            RCHNB01003UADM.ShipmentCnt[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.ShipmentCnt;

            // ADD 2010/08/13 --->>>>
            // 「出荷数」小数点を含む伝票を修正呼出しした場合は、小数点表示区分に従わず、小数点の入力および表示を可能とする。
            if (not smallPointFlg) then
            begin
              tempInt := Trunc(salesDetailArray.Csafield1.ShipmentCnt * 100);
              if ((tempInt mod 100) <> 0) then
              begin
                smallPointFlg := True;
              end;
            end;
            // ADD 2010/08/13 ---<<<<

            RCHNB01003UADM.StdUnPrcLPrice[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.StdUnPrcLPrice;
            RCHNB01003UADM.SalesUnitCost[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SalesUnitCost;
            RCHNB01003UADM.EditStatus[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.EditStatus;
            RCHNB01003UADM.ShipmentCntDisplay[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.ShipmentCntDisplay;

            RCHNB01003UADM.SalesSlipCdDtl[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SalesSlipCdDtl;
            RCHNB01003UADM.WarehouseCode[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.WarehouseCode;
            RCHNB01003UADM.SupplierStockDisplay[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SupplierStockDisplay;
            // ---ADD 呉元嘯 2021/05/20 BLINCIDENT-2980 小数点有で運用している場合、現在庫数の対応 ------>>>>>
            // 「現在庫数」小数点を含む伝票を修正呼出しした場合は、小数点表示区分に従わず、小数点の入力および表示を可能とする。
            if (not smallPointFlg) then
            begin
              tempInt := Trunc(salesDetailArray.Csafield1.SupplierStockDisplay * 100);
              if ((tempInt mod 100) <> 0) then
              begin
                smallPointFlg := True;
              end;
            end;
            // ---ADD 呉元嘯 2021/05/20 BLINCIDENT-2980 小数点有で運用している場合、現在庫数の対応 ---<<<<
            RCHNB01003UADM.ListPriceTaxExcFl[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.ListPriceTaxExcFl;
            RCHNB01003UADM.ListPriceDisplay[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.ListPriceDisplay;
            RCHNB01003UADM.CostRate[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.CostRate;
            RCHNB01003UADM.SalesRate[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SalesRate;
            // ADD 2010/08/13 --->>>>
            // 「売価率」小数点を含む伝票を修正呼出しした場合は、小数点表示区分に従わず、小数点の入力および表示を可能とする。
            if (not smallPointFlg) then
            begin
              tempInt := Trunc(salesDetailArray.Csafield1.SalesRate * 100);
              if ((tempInt mod 100) <> 0) then
              begin
                smallPointFlg := True;
              end;
            end;
            // ADD 2010/08/13 ---<<<<
            RCHNB01003UADM.SalesUnPrcTaxExcFl[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SalesUnPrcTaxExcFl;
            // ADD 2010/08/13 --->>>>
            // 「売単価」小数点を含む伝票を修正呼出しした場合は、小数点表示区分に従わず、小数点の入力および表示を可能とする。
            if (not smallPointFlg) then
            begin
              tempInt := Trunc(salesDetailArray.Csafield1.SalesUnPrcTaxExcFl * 100);
              if ((tempInt mod 100) <> 0) then
              begin
                smallPointFlg := True;
              end;
            end;
            // ADD 2010/08/13 ---<<<<
            RCHNB01003UADM.SalesMoneyTaxExc[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SalesMoneyTaxExc;
            RCHNB01003UADM.StockDate[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.StockDate;

            RCHNB01003UADM.BoCode[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.BoCode;
            RCHNB01003UADM.SupplierCdForOrder[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SupplierCdForOrder;
            RCHNB01003UADM.SupplierSnmForOrder[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SupplierSnmForOrder;

            RCHNB01003UADM.DeliveredGoodsDivNm[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.DeliveredGoodsDivNm;
            RCHNB01003UADM.SalesCode[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SalesCode;
            RCHNB01003UADM.AcceptAnOrderCntDisplay[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.AcceptAnOrderCnt;
            // ADD 2010/08/13 --->>>>
            // 「受注数」小数点を含む伝票を修正呼出しした場合は、小数点表示区分に従わず、小数点の入力および表示を可能とする。
            if (not smallPointFlg) then
            begin
              tempInt := Trunc(salesDetailArray.Csafield1.AcceptAnOrderCnt * 100);
              if ((tempInt mod 100) <> 0) then
              begin
                smallPointFlg := True;
              end;
            end;
            // ADD 2010/08/13 ---<<<<
            RCHNB01003UADM.Cost[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.Cost;
            RCHNB01003UADM.DeliGdsCmpltDueDate[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.DeliGdsCmpltDueDate;
            RCHNB01003UADM.PartySalesSlipNum[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.PartySalesSlipNum;
            RCHNB01003UADM.AcceptAnOrderCntForOrder[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.AcptAnOdrRemainCnt;
            RCHNB01003UADM.FollowDeliGoodsDivNm[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.FollowDeliGoodsDivNm;
            RCHNB01003UADM.UOEResvdSectionNm[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.UOEResvdSectionNm;

            RCHNB01003UADM.UOEDeliGoodsDiv[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.UOEDeliGoodsDiv;
            RCHNB01003UADM.FollowDeliGoodsDiv[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.FollowDeliGoodsDiv;
            RCHNB01003UADM.UOEResvdSection[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.UOEResvdSection;

            RCHNB01003UADM.WarehouseShelfNo[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.WarehouseShelfNo;
            RCHNB01003UADM.PartySlipNumDtl[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.PartySlipNumDtl;
            RCHNB01003UADM.DtlNote[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.DtlNote;
            RCHNB01003UADM.SalesSlipDtlNum[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SalesSlipDtlNum;

            RCHNB01003UADM.AcceptAnOrderNo[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.AcceptAnOrderNo;
            RCHNB01003UADM.AcptAnOdrStatus[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.AcptAnOdrStatus;
            RCHNB01003UADM.SearchPartsModeState[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.SearchPartsModeState;

            //>>>2010/05/30
            RCHNB01003UADM.RecycleDivNm[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.RecycleDivNm;
            RCHNB01003UADM.RecycleDiv[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.RecycleDiv;
            RCHNB01003UADM.GoodsMngNo[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.GoodsMngNo;
            //<<<2010/05/30

            // 2011/08/20 XUJS ADD STA ------>>>>>>
            RCHNB01003UADM.StdUnPrcUnCst[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.StdUnPrcUnCst;
            // 2011/08/20 XUJS ADD END ------<<<<<<

            // --- DEL 2012/05/21 ---------->>>>>
//            // --- ADD 2012/04/11 No.594 ---------->>>>>
//            //新規伝票で且つ
//            //伝票種別「売上」、伝票区分「売上」又は伝票種別「貸出」、伝票区分「売上」で且つ
//            //売上全体設定「受注数入力：する」且つユーザ設定「商品検索後のカーソル位置：受注数」の場合
//            if  ((salesSlip.SalesSlipNum = ctDefaultSalesSlipNum) or (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))
//            and (((AcptAnOdrStatusDisplayComBo.SelCode = 30) and (SalesSlipDisplayComBo.SelCode = 10))
//            or  ((AcptAnOdrStatusDisplayComBo.SelCode = 40) and (SalesSlipDisplayComBo.SelCode = 10)))
//            and (salesTtlSt.AcpOdrInputDiv = 1)
//            and (focusPositionAfterBLCodeSearch = 1)
//            and (RCHNB01003UADM.AcceptAnOrderCntDisplay[salesRowNoFrom - 1] = 0)
//            and not ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ShipmentAddUp)
//                 or  (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp)
//                 or  (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp)) then
//            begin
//              RCHNB01003UADM.AcceptAnOrderCntDisplay[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.ShipmentCntDisplay;
//              RCHNB01003UADM.ShipmentCnt[salesRowNoFrom - 1]:= 0;
//              RCHNB01003UADM.ShipmentCntDisplay[salesRowNoFrom - 1]:= 0;
////            end
////            else if ((salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ShipmentAddUp)
////                 or  (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AcceptAnOrderAddUp)
////                 or  (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_EstimateAddUp)) then
////            begin
////              RCHNB01003UADM.AcceptAnOrderCntDisplay[salesRowNoFrom - 1]:= salesDetailArray.Csafield1.ShipmentCntDisplay;
////              RCHNB01003UADM.ShipmentCnt[salesRowNoFrom - 1]:= 0;
////              RCHNB01003UADM.ShipmentCntDisplay[salesRowNoFrom - 1]:= 0;
//            end;
//            // --- ADD 2012/04/11 No.594 ----------<<<<<
            // --- DEL 2012/05/21 ----------<<<<<

            xSetDeatilRowDisplay(salesRowNoFrom);

            inc(salesDetailArray.Csafield1);
        end;

    end;

end;

// *************************************************************************
// 明細画面表示処理(初期化)
// *************************************************************************
procedure TForm4.xSetDisplayCustomerInfoInit();
begin
  begin
    // 得意先名称
    //CustomerName.Enabled := false;
    xEnableControl(CustomerName, False);

    // 締日
    TotalDay.Caption := '';

    // 集金月日
    CollectMoney.Caption := '';

    //>>>2010/05/30
    // 問合せ番号
    panel_InquiryNumber.Caption := '';
    //<<<2010/05/30

  end;

end;

// *************************************************************************
// 明細画面表示処理
// *************************************************************************
procedure TForm4.xSetDisplayCustomerInfo(customerInfo : TcustomerInfo);
begin
  begin
    // 得意先名称
    if ((not customerInfo.IsCustomer) or (customerInfo.AccRecDivCd <> 0)) then   // 0:現金 1:売掛
    begin
      xEnableControl(CustomerName, False);
    end else
    begin
      xEnableControl(CustomerName, True);
    end;

    // 締日
    if (customerInfo.TotalDay = 0) then
    begin
      TotalDay.Caption := '';
    end
    else
    begin
      TotalDay.Caption := IntToStr(customerInfo.TotalDay);
    end;

    // 集金月日
    if (customerInfo.CollectMoneyDay = 0) then
    begin
      CollectMoney.Caption := '';
    end
    else
    begin
      CollectMoney.Caption := customerInfo.CollectMoneyName + IntToStr(customerInfo.CollectMoneyDay);
    end;

  end;

end;

// *************************************************************************
// 画面表示処理（売上金額合計情報）
// *************************************************************************
procedure TForm4.xSetDisplayTotalPriceInfo(salesSlip: TSalesSlip);
var
totalAmountDispWayCd, sign : Integer;
parTotalPrice, salesTotal : Int64;
parTotalGrossProfitRate : Double;
begin

  totalAmountDispWayCd := salesSlip.TotalAmountDispWayCd;
  if salesSlip.SalesSlipCd = 1 then
  begin
    sign := -1
  end else
  begin
    sign := 1
  end;
  parTotalPrice := 0;

  case salesSlip.SalesGoodsCd of
  //商品
  0:
    begin
      if (totalAmountDispWayCd = 0) then
      begin
        case salesSlip.ConsTaxLayMethod of
        // 伝票転嫁,明細転嫁
        0, 1:
          begin
            // 売上金額
            salesPriceTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesTotalTaxExc * sign);

            addSalesPriceTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesTotalTaxExc * sign);

            // 消費税
            salesPriceConsTaxTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesSubtotalTax * sign);

            addSalesPriceConsTaxTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesSubtotalTax * sign);

            // 総合計
            parTotalPrice := salesSlip.SalesTotalTaxInc * sign;
            totalPrice.Caption := FormatCurr(ctMoneyFormat, parTotalPrice);

            addTotalPrice.Caption := FormatCurr(ctMoneyFormat, parTotalPrice);
          end;
        // 請求親,請求子,非課税
        2, 3, 9:
          begin
            // 売上金額
            salesPriceTotal.Caption := FormatCurr(ctMoneyFormat, (salesSlip.ItdedSalesInTax + salesSlip.ItdedSalesOutTax + salesSlip.SalSubttlSubToTaxFre +
                                                   salesSlip.ItdedSalesDisOutTax + salesSlip.ItdedSalesDisInTax + salesSlip.ItdedSalesDisTaxFre) * sign);

            addSalesPriceTotal.Caption := FormatCurr(ctMoneyFormat, (salesSlip.ItdedSalesInTax + salesSlip.ItdedSalesOutTax + salesSlip.SalSubttlSubToTaxFre +
                 salesSlip.ItdedSalesDisOutTax + salesSlip.ItdedSalesDisInTax + salesSlip.ItdedSalesDisTaxFre) * sign);

            // 消費税
            salesPriceConsTaxTotal.Caption := FormatCurr(ctMoneyFormat, (salesSlip.SalAmntConsTaxInclu + salesSlip.SalesDisTtlTaxInclu) * sign);

            addSalesPriceConsTaxTotal.Caption := FormatCurr(ctMoneyFormat, (salesSlip.SalAmntConsTaxInclu + salesSlip.SalesDisTtlTaxInclu) * sign);

            // 総合計
            parTotalPrice := ((salesSlip.ItdedSalesInTax + salesSlip.ItdedSalesOutTax + salesSlip.SalSubttlSubToTaxFre +
                           salesSlip.ItdedSalesDisOutTax + salesSlip.ItdedSalesDisInTax + salesSlip.ItdedSalesDisTaxFre +
                           salesSlip.SalAmntConsTaxInclu + salesSlip.SalesDisTtlTaxInclu) * sign);
            totalPrice.Caption := FormatCurr(ctMoneyFormat, parTotalPrice);

            addTotalPrice.Caption := FormatCurr(ctMoneyFormat, parTotalPrice);
          end;
        end;

        // 原価金額
        totalCost.Caption := FormatCurr(ctMoneyFormat, salesSlip.TotalCost * sign);

        addTotalCost.Caption := FormatCurr(ctMoneyFormat, salesSlip.TotalCost * sign);

        salesTotal := salesSlip.SalesTotalTaxExc * sign;

        // 粗利額(常に税抜き)
        totalGrossProfit.Caption := FormatCurr(ctMoneyFormat, salesTotal - salesSlip.TotalCost * sign);

        addTotalGrossProfit.Caption := FormatCurr(ctMoneyFormat, salesTotal - salesSlip.TotalCost * sign);

        // 粗利率(常に税抜きで算出)
        xGetRate1(salesTotal, sign, salesSlip.TotalCost);
      end else
      begin
        // 総額表示する
        // 売上金額
        salesPriceTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesTotalTaxInc * sign);

        addSalesPriceTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesTotalTaxInc * sign);

        // 消費税
        salesPriceConsTaxTotal.Caption := '内(' + FormatCurr(ctMoneyFormat, salesSlip.SalesSubtotalTax * sign);

        addSalesPriceConsTaxTotal.Caption := '内(' + FormatCurr(ctMoneyFormat, salesSlip.SalesSubtotalTax * sign);

        // 原価金額
        totalCost.Caption := FormatCurr(ctMoneyFormat, salesSlip.TotalCost * sign);

        addTotalCost.Caption := FormatCurr(ctMoneyFormat, salesSlip.TotalCost * sign);

        salesTotal := salesSlip.SalesTotalTaxExc * sign;

        // 粗利額(常に税抜き)
        totalGrossProfit.Caption := FormatCurr(ctMoneyFormat, salesTotal - salesSlip.TotalCost * sign);

        addTotalGrossProfit.Caption := FormatCurr(ctMoneyFormat, salesTotal - salesSlip.TotalCost * sign);

        // 粗利率(常に税抜きで算出)
        xGetRate1(salesTotal, sign, salesSlip.TotalCost);

        // 総合計
        parTotalPrice := salesSlip.SalesTotalTaxInc * sign;
        totalPrice.Caption := FormatCurr(ctMoneyFormat, parTotalPrice);

        addTotalPrice.Caption := FormatCurr(ctMoneyFormat, parTotalPrice);
      end;

    end;
  //消費税調整,売掛用消費税調整
  2, 4:
    begin
      if (totalAmountDispWayCd = 0) then
      begin
        // 総額表示しない
        // 売上金額
        salesPriceTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesTotalTaxExc);

        addSalesPriceTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesTotalTaxExc);

        // 消費税
        salesPriceConsTaxTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesSubtotalTax);

        addSalesPriceConsTaxTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesSubtotalTax);


        // 原価金額
        totalCost.Caption := FormatCurr(ctMoneyFormat, salesSlip.TotalCost);

        addTotalCost.Caption := FormatCurr(ctMoneyFormat, salesSlip.TotalCost);

        salesTotal := salesSlip.SalesTotalTaxExc;

        // 粗利額(常に税抜き)
        totalGrossProfit.Caption := FormatCurr(ctMoneyFormat, salesTotal - salesSlip.TotalCost);

        addTotalGrossProfit.Caption := FormatCurr(ctMoneyFormat, salesTotal - salesSlip.TotalCost);

        // 粗利率(常に税抜きで算出)
        xGetRate2(salesTotal, salesSlip.TotalCost);

        // 総合計
        parTotalPrice := salesSlip.SalesTotalTaxInc * sign;
        totalPrice.Caption := FormatCurr(ctMoneyFormat, parTotalPrice);

        addTotalPrice.Caption := FormatCurr(ctMoneyFormat, parTotalPrice);

      end else
      begin
        // 総額表示する
        // 売上金額
        salesPriceTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesTotalTaxInc);

        addSalesPriceTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesTotalTaxInc);

        // 消費税
        salesPriceConsTaxTotal.Caption := '内(' + FormatCurr(ctMoneyFormat, salesSlip.SalesSubtotalTax);

        addSalesPriceConsTaxTotal.Caption := '内(' + FormatCurr(ctMoneyFormat, salesSlip.SalesSubtotalTax);

        // 原価金額
        totalCost.Caption := FormatCurr(ctMoneyFormat, salesSlip.TotalCost);

        addTotalCost.Caption := FormatCurr(ctMoneyFormat, salesSlip.TotalCost);

        salesTotal := salesSlip.SalesTotalTaxExc;

        // 粗利額(常に税抜き)
        totalGrossProfit.Caption := FormatCurr(ctMoneyFormat, salesTotal - salesSlip.TotalCost);

        addTotalGrossProfit.Caption := FormatCurr(ctMoneyFormat, salesTotal - salesSlip.TotalCost);

        // 粗利率(常に税抜きで算出)
        xGetRate2(salesTotal, salesSlip.TotalCost);

        // 総合計
        parTotalPrice := salesSlip.SalesTotalTaxInc * sign;
        totalPrice.Caption := FormatCurr(ctMoneyFormat, parTotalPrice);
        addTotalPrice.Caption := FormatCurr(ctMoneyFormat, parTotalPrice);
      end;
    end;
  //残高調整,売掛用残高調整
  3, 5:
    begin
      if (totalAmountDispWayCd = 0) then
      begin
        // 総額表示しない
        // 売上金額
        salesPriceTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesTotalTaxExc);

        addSalesPriceTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesTotalTaxExc);

        // 消費税
        salesPriceConsTaxTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesSubtotalTax);

        addSalesPriceConsTaxTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesSubtotalTax);

        // 原価金額
        totalCost.Caption := FormatCurr(ctMoneyFormat, salesSlip.TotalCost);

        addTotalCost.Caption := FormatCurr(ctMoneyFormat, salesSlip.TotalCost);

        salesTotal := salesSlip.SalesTotalTaxExc;

        // 粗利額
        totalGrossProfit.Caption := FormatCurr(ctMoneyFormat, salesTotal - salesSlip.TotalCost);

        addTotalGrossProfit.Caption := FormatCurr(ctMoneyFormat, salesTotal - salesSlip.TotalCost);

        // 粗利率
        xGetRate2(salesTotal, salesSlip.TotalCost);

        // 総合計
        parTotalPrice := salesSlip.SalesTotalTaxInc * sign;
        totalPrice.Caption := FormatCurr(ctMoneyFormat, parTotalPrice);
        addTotalPrice.Caption := FormatCurr(ctMoneyFormat, parTotalPrice);
      end else
      begin
        // 総額表示する
        // 売上金額
        salesPriceTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesTotalTaxInc);

        addSalesPriceTotal.Caption := FormatCurr(ctMoneyFormat, salesSlip.SalesTotalTaxInc);

        // 消費税
        salesPriceConsTaxTotal.Caption := '内(' + FormatCurr(ctMoneyFormat, salesSlip.SalesSubtotalTax);

        addSalesPriceConsTaxTotal.Caption := '内(' + FormatCurr(ctMoneyFormat, salesSlip.SalesSubtotalTax);

        // 原価金額
        totalCost.Caption := FormatCurr(ctMoneyFormat, salesSlip.TotalCost);

        addTotalCost.Caption := FormatCurr(ctMoneyFormat, salesSlip.TotalCost);

        salesTotal := salesSlip.SalesTotalTaxExc;

        // 粗利額
        totalGrossProfit.Caption := FormatCurr(ctMoneyFormat, salesTotal - salesSlip.TotalCost);

        addTotalGrossProfit.Caption := FormatCurr(ctMoneyFormat, salesTotal - salesSlip.TotalCost);

        // 粗利率
        xGetRate2(salesTotal, salesSlip.TotalCost);

        // 総合計
        parTotalPrice := salesSlip.SalesTotalTaxInc * sign;
        totalPrice.Caption := FormatCurr(ctMoneyFormat, parTotalPrice);
        addTotalPrice.Caption := FormatCurr(ctMoneyFormat, parTotalPrice);
      end;
    end;

  end;

end;

// *************************************************************************
// 画面項目名称取得処理
// *************************************************************************
procedure TForm4.xGetDisplayName();
var
rateName : WideString;
resultTaxFlg: Boolean; // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
begin
  // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応 ---------->>>>>
  //gpxMAHNB01013B_GetDisplayName(rateName);
  gpxMAHNB01013B_GetDisplayName(rateName, resultTaxFlg);
  if(resultTaxFlg)  then
  begin
    Panel5.Visible := True;
    salesPriceConsTaxTotalTitle.Visible := False;
    Panel5.Caption := string(rateName);
  end else
  begin
    Panel5.Visible := False;
    salesPriceConsTaxTotalTitle.Visible := true;
  // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応 ----------<<<<<
    salesPriceConsTaxTotalTitle.Caption := string(rateName);
    addSalesPriceConsTaxTotalTitle.Caption := string(rateName);
  end;// ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応

  // 車両検索ラベル
  FullModelBtn.Caption := '型式'; // 初期値[型式]
end;

// ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応 ---------->>>>>
// *************************************************************************
// 画面項目名称取得処理
// *************************************************************************
procedure TForm4.xGetTaxRateName(salesSlip : TSalesSlip);
var
taxRateName : WideString;
resultTaxFlg: Boolean;
begin
  gpxMAHNB01013B_GetDisplayName(taxRateName, resultTaxFlg);
  if(resultTaxFlg)  then
  begin
    Panel5.Visible := True;
    salesPriceConsTaxTotalTitle.Visible := False;
    Panel5.Caption := string(taxRateName);
  end else
  begin
    Panel5.Visible := False;
    salesPriceConsTaxTotalTitle.Visible := true;
    salesPriceConsTaxTotalTitle.Caption := string(taxRateName);
    addSalesPriceConsTaxTotalTitle.Caption := string(taxRateName);
  end

end;
// ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応 ----------<<<<<

// *************************************************************************
// 粗利率取得処理1
// *************************************************************************
procedure TForm4.xGetRate1(salesTotal : Int64; sign : Integer; totalCost: Integer);
var
parTotalGrossProfitRate : Double;

begin
  gpxMAHNB01012B_GetRate((salesTotal - totalCost * sign), salesTotal, parTotalGrossProfitRate);
  totalGrossProfitRate.Caption := FormatCurr(ctPercentFormat, parTotalGrossProfitRate);
  addTotalGrossProfitRate.Caption := FormatCurr(ctPercentFormat, parTotalGrossProfitRate);
end;

// *************************************************************************
// 粗利率取得処理2
// *************************************************************************
procedure TForm4.xGetRate2(salesTotal : Int64; totalCost: Integer);
var
  parTotalGrossProfitRate : Double;
begin
  gpxMAHNB01012B_GetRate((salesTotal - totalCost), salesTotal, parTotalGrossProfitRate);
  totalGrossProfitRate.Caption := FormatCurr(ctPercentFormat, parTotalGrossProfitRate);
  addTotalGrossProfitRate.Caption := FormatCurr(ctPercentFormat, parTotalGrossProfitRate);
end;

// *************************************************************************
// 車両項目制御
// *************************************************************************
procedure TForm4.xSetDisplayDetailInfo(salesRowNo :Integer);
var
  parDetailGrossProfitRate, parAddDetailGrossProfitRate : WideString;
  acceptAnOrderNo : Integer;
begin
  gpxMAHNB01013B_GetDetailGrossProfitRate(salesRowNo, parDetailGrossProfitRate, parAddDetailGrossProfitRate);

  // 車両データ既存更新の場合、車両項目無効
  acceptAnOrderNo := edtAcceptAnOrderNo.GetInt;
    //  if acceptAnOrderNo <> 0 then//DEL 2011/11/17
    if ((acceptAnOrderNo <> 0) or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly))then//ADD 2011/11/17
    begin
        xEnableControl(produceFrameNo, False);
        xEnableControl(firstEntryDate, False);
        xEnableControl(FullModelBtn, false);
        xEnableControl(CarMngCode, False);
        xEnableControl(CarMngCodeBtn, False);
        xEnableControl(firstEntryDateRange, False);
        xEnableControl(fullModel, false);
        //xEnableControl(pnl23, false);
        xEnableControl(engineModelNm, False);
        xEnableControl(categoryNo, False);
        xEnableControl(modelDesignationNo, False);
        xEnableControl(engineModelNm, False);
        xEnableControl(modelSubCode, False);
        xEnableControl(modelCode, False);
        xEnableControl(makerCode, False);
        xEnableControl(trimNo, False);
        xEnableControl(colorNo, False);
        xEnableControl(modelFullName, False);
        ModelFullNameBtn.Enabled := false;

        // 車両情報のbackgroundの設定処理
        xCarInfoFormSettingForColor(False);
    end else
    begin
	gpxMAHNB01012B_GetSalesSlip(salesSlip_disp);
        // 商品以外は車両項目無効
        case salesSlip_disp.SalesGoodsCd of
          0:
          begin
            pnl_CarInfo.Enabled := true;
            // --- ADD 2010/06/02 ---------->>>>>
            xEnableControl(carMngNo, True);
            xEnableControl(ModelDesignationNo, True);
            xEnableControl(CategoryNo, True);
            xEnableControl(CarMngCode, True);
            //xEnableControl(CarMngCodeBtn, True);
            xEnableControl(EngineModelNm, True);
            xEnableControl(FullModel, True);
            xEnableControl(pnl23, True);
            xEnableControl(MakerCode, True);
            xEnableControl(ModelFullNameBtn, True);
            xEnableControl(FirstEntryDate, True);
            xEnableControl(ProduceFrameNo, True);
            xEnableControl(ColorNo, True);
            xEnableControl(TrimNo, True);
            HNsGrid5.Enabled := True;
//>>>2010/07/15
//            ExpandableGroupBox.Enabled := False;

            if ((HNsGrid2.RowCount > 1) and (HNsGrid2.Cells[1, 1] <> ''))
              or ((HNsGrid4.RowCount > 1) and (HNsGrid4.Cells[1, 1] <> ''))
              or ((HNsGrid3.RowCount > 1) and (HNsGrid3.Cells[1, 1] <> '')) then
              begin
                 ExpandableGroupBox.Enabled := True;
              end
              else
              begin
                      ExpandableGroupBox.Enabled := False;
              end;

//<<<2010/07/15
            // --- ADD 2010/06/02 ---------->>>>>
            // 車両情報のbackgroundの設定処理
            //xCarInfoFormSettingForColor(True);
          end;
          1, 2, 3, 4, 5:
          begin
            xEnableControl(produceFrameNo, False);
            xEnableControl(firstEntryDate, False);
            xEnableControl(FullModelBtn, false);
            xEnableControl(carMngNo, False);
            xEnableControl(firstEntryDateRange, False);
            xEnableControl(fullModel, false);
            //xEnableControl(pnl23, false);
            xEnableControl(engineModelNm, False);
            xEnableControl(categoryNo, False);
            xEnableControl(modelDesignationNo, False);
            xEnableControl(engineModelNm, False);
            xEnableControl(modelSubCode, False);
            xEnableControl(modelCode, False);
            xEnableControl(makerCode, False);
            xEnableControl(trimNo, False);
            xEnableControl(colorNo, False);
            xEnableControl(modelFullName, False);
            ModelFullNameBtn.Enabled := false;

            // 車両情報のbackgroundの設定処理
            xCarInfoFormSettingForColor(False);
          end;
      end;
    end;
  // 明細粗利率
  detailGrossProfitRate.Caption := string(parDetailGrossProfitRate);

  addDetailGrossProfitRate.Caption := string(parAddDetailGrossProfitRate);

end;

// *************************************************************************
// 指定フォーカス設定処理
// *************************************************************************
procedure TForm4.SetControlFocus();
var
  ddID, tableName : WideString;
  nextCtrl : TWinControl;
begin
  gpxMAHNB01013B_GetItemName(ddID, tableName);

  if (string(ddID) = '') and (string(tableName) = '') then
  Exit;

  if (ddID = 'ResultsAddUpSecCd') then
  begin
      sectionCode.setFocus;
      Form4.ActiveControl := sectionCode;
  end else
  if (ddID = 'CustomerCode') then
  begin
      customerCode.setFocus;
      Form4.ActiveControl := customerCode;
  end else
  if (ddID = 'SalesEmployeeCd') then
  begin
      salesEmployeeCd.setFocus;
      Form4.ActiveControl := salesEmployeeCd;
  end else
  if (ddID = 'FrontEmployeeCd') then
  begin
      frontEmployeeCd.setFocus;
      Form4.ActiveControl := frontEmployeeCd;
  end else
  if (ddID = 'CustomerCode') then
  begin
      customerCode.setFocus;
      Form4.ActiveControl := customerCode;
  end else
  if (ddID ='SalesDate') then
  begin
      if (salesDate.Enabled) then
      begin
          salesDate.setFocus;
          Form4.ActiveControl := salesDate;
      end else
      begin
          salesEmployeeCd.setFocus;
          Form4.ActiveControl := salesEmployeeCd;
      end;
  end else
  if (ddID = 'AddUpADate') then
  begin
      salesEmployeeCd.setFocus;
      Form4.ActiveControl := salesEmployeeCd;
  end else
  if (ddID = partySaleSlipNum.Name) then
  begin
      partySaleSlipNum.setFocus;
      Form4.ActiveControl := partySaleSlipNum;
  end else
  if (Pos(tableName, ddID) > 0) then
  begin
      Panel15.setFocus;
      OldCtrl := Panel15;
  end else
  begin
    OldCtrl := Form4.ActiveControl;

    // ガイドボタンツール有効無効設定処理
    xSettingGuideButtonToolEnabled(OldCtrl);
  end;


end;

// *************************************************************************
// 初期フォーカス設定タイマー起動イベント
// *************************************************************************
procedure TForm4.InitialSetFocusTick();
var
  nextCtrl : TWinControl;
  isSetting : Boolean;
begin
  gpxMAHNB01013B_GetFocusPositionValue(focusPositionValue);

  isSetting := False;

  case focusPositionValue of
    // 拠点
    0:
    begin
      if (sectionCode.Enabled) and (sectionCode.Visible) and (not sectionCode.ReadOnly) then
      begin
          sectionCode.setFocus;
          nextCtrl := sectionCode;
          isSetting := True;
      end;
    end;
    // 担当者
    2:
    begin
      if (salesEmployeeCd.Enabled) and (salesEmployeeCd.Visible) and (not salesEmployeeCd.ReadOnly) then
      begin
          salesEmployeeCd.setFocus;
          nextCtrl := salesEmployeeCd;
          isSetting := true;
      end;
    end;
    // 受注者
    3:
    begin
      if (frontEmployeeCd.Enabled) and (frontEmployeeCd.Visible) and (not frontEmployeeCd.ReadOnly) then
      begin
        frontEmployeeCd.setFocus;
        nextCtrl := frontEmployeeCd;
        isSetting := true;
      end;
    end;
    // 発行者
    4:
    begin
    if (salesInputCode.Enabled) and (salesInputCode.Visible) and (not salesInputCode.ReadOnly) then
      begin
        salesInputCode.setFocus;
        nextCtrl := salesInputCode;
        isSetting := true;
      end;
    end;
    // 伝票番号
    5:
    begin
      if (not salesSlipNum.ReadOnly) and (salesSlipNum.Visible) and (not salesSlipNum.ReadOnly) then
      begin
        salesSlipNum.setFocus;
        nextCtrl := salesSlipNum;
        isSetting := true;
      end;
    end;
    // 伝票種別
    6:
    begin
      if (AcptAnOdrStatusDisplayComBo.Enabled) and (AcptAnOdrStatusDisplayComBo.Visible) then
      begin
        AcptAnOdrStatusDisplayComBo.setFocus;
        nextCtrl := AcptAnOdrStatusDisplayComBo;
        isSetting := true;
      end else
      if (SalesSlipDisplayComBo.Enabled) and (SalesSlipDisplayComBo.Visible) then
      begin
        SalesSlipDisplayComBo.setFocus;
        nextCtrl := SalesSlipDisplayComBo;
        isSetting := true;
      end;
    end;
    // 得意先
    1:
    begin
      if (customerCode.Enabled) and (customerCode.Visible) and (not customerCode.ReadOnly) then
      begin
        customerCode.setFocus;
        nextCtrl := customerCode;
        isSetting := true;
      end;
    end;
  end;
  if (not isSetting) then
  begin
    {-----DEL START 2011/07/19------->>>>
    salesEmployeeCd.setFocus;
    nextCtrl := salesEmployeeCd;
    ------DEL END 2011/07/19---------<<<<}
    //----ADD START 2011/07/19------>>>>
    if salesEmployeeCd.Enabled then
    begin
      salesEmployeeCd.setFocus;
      nextCtrl := salesEmployeeCd;
    end;
    //----ADD END 2011/07/19------<<<<

    // --- ADD 2012/05/24 No.849 ---------->>>>>
    if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp) then
    begin
      SalesSlipNum.setFocus;
      nextCtrl := SalesSlipNum;
    end;
    // --- ADD 2012/05/24 No.849 ----------<<<<<
  end;

  // ガイドボタンツール有効無効設定処理
  xSettingGuideButtonToolEnabled(nextCtrl);

  if nextCtrl.CanFocus then
  begin
    Form4.ActiveControl := nextCtrl;
    OldCtrl := nextCtrl;
  end;

  Form4.Refresh();
end;

// *************************************************************************
// ガイドボタンツール有効無効設定処理
// *************************************************************************
procedure TForm4.xSettingGuideButtonToolEnabled(nextCtrl: TWinControl);
var
  targetControl : TWinControl;
  // --- UPD 2014/05/28 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
  //guideEnableControlArray: array [0 .. 30] of string;
  guideEnableControlArray: array [0 .. 31] of string;
  // --- UPD 2014/05/28 T.Miyamoto 仕掛一覧№2218 ------------------------------<<<<<
  salesSlipDetailInputControlArray: array [0 .. 15] of string;
  flag, salesSlipDetailInputflag: boolean;
  i : Integer;
begin
  flag := false;
  salesSlipDetailInputflag := false;

  guideEnableControlArray[0] := SectionCode.Name;
  guideEnableControlArray[1] := SubSectionCode.Name;
  guideEnableControlArray[2] := SalesEmployeeCd.Name;
  guideEnableControlArray[3] := FrontEmployeeCd.Name;
  guideEnableControlArray[4] := SalesInputCode.Name;
  guideEnableControlArray[5] := SalesSlipNum.Name;
  guideEnableControlArray[6] := CustomerCode.Name;
  guideEnableControlArray[7] := AddresseeCode.Name;
  guideEnableControlArray[8] := SlipNoteCode.Name;
  guideEnableControlArray[9] := SlipNote2Code.Name;
  guideEnableControlArray[10] := SlipNote3Code.Name;

  guideEnableControlArray[11] := MakerCode.Name;
  guideEnableControlArray[12] := ModelCode.Name;
  guideEnableControlArray[13] := ModelSubCode.Name;
  guideEnableControlArray[14] := CarMngCode.Name;
  guideEnableControlArray[15] := RetGoodsReason.Name;
  // --- UPD 2014/05/28 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
  // 車輌備考コード・車輌備考の両方でガイドを有効にする
  //// --- UPD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
  ////guideEnableControlArray[16] := CarSlipNote.Name;
  //guideEnableControlArray[16] := CarNoteCode.Name;
  //// --- UPD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------<<<<<
  guideEnableControlArray[16] := CarSlipNote.Name;
  guideEnableControlArray[31] := CarNoteCode.Name;
  // --- UPD 2014/05/28 T.Miyamoto 仕掛一覧№2218 ------------------------------<<<<<
  guideEnableControlArray[17] := SectionCodeBtn.Name;
  guideEnableControlArray[18] := SubSectionCodeBtn.Name;
  guideEnableControlArray[19] := SalesEmployeeCdBtn.Name;
  guideEnableControlArray[20] := FrontEmployeeCdBtn.Name;
  guideEnableControlArray[21] := SalesInputCodeBtn.Name;

  guideEnableControlArray[22] := SalesSlipNumBtn.Name;
  guideEnableControlArray[23] := CustomerCodeBtn.Name;
  guideEnableControlArray[24] := AddresseeCodeBtn.Name;
  guideEnableControlArray[25] := SlipNoteCodeBtn.Name;
  guideEnableControlArray[26] := SlipNote2CodeBtn.Name;
  guideEnableControlArray[27] := SlipNote3CodeBtn.Name;
  guideEnableControlArray[28] := ModelFullNameBtn.Name;
  guideEnableControlArray[29] := CarMngCodeBtn.Name;
  guideEnableControlArray[30] := SlipNoteGuideBtn.Name;

  salesSlipDetailInputControlArray[0] := BitBtn_Action.Name;
  salesSlipDetailInputControlArray[1] := btnInputChange.Name;
  salesSlipDetailInputControlArray[2] := btnInputStockInfo.Name;
  salesSlipDetailInputControlArray[3] := btnInputOrderInfo.Name;
  salesSlipDetailInputControlArray[4] := btnLineDiscount.Name;
  salesSlipDetailInputControlArray[5] := btnGoodsDiscount.Name;
  salesSlipDetailInputControlArray[6] := btnAnnotation.Name;
  salesSlipDetailInputControlArray[7] := btnChangeCarInfo.Name;
  salesSlipDetailInputControlArray[8] := btnStockSearch.Name;
  salesSlipDetailInputControlArray[9] := btnChangeWarehouse.Name;
  salesSlipDetailInputControlArray[10] := btnTBO.Name;

  salesSlipDetailInputControlArray[11] := btnCopyStockBefLine.Name;
  salesSlipDetailInputControlArray[12] := btnCopyStockAllLine.Name;
  salesSlipDetailInputControlArray[13] := HNsGrid1.Name;
  salesSlipDetailInputControlArray[14] := pnl1.Name;
  salesSlipDetailInputControlArray[15] := Panel15.Name;

  if NextCtrl = nil then Exit;
  targetControl :=  nextCtrl;
  if nextCtrl.Parent <> nil then
  begin
     if (nextCtrl.Parent is THEdit) or (nextCtrl.Parent is THNedit) then
     begin
          targetControl :=  nextCtrl.Parent;
     end;
  end;

  for i := 0 to High(guideEnableControlArray) do
  begin
      if guideEnableControlArray[i] = targetControl.Name then
      begin
         flag := true;
      end;
  end;

  for i := 0 to High(salesSlipDetailInputControlArray) do
  begin
      if salesSlipDetailInputControlArray[i] = targetControl.Name then
      begin
         salesSlipDetailInputflag := true;
      end;
  end;

  try   // 2011/01/31 Add
  // --- UPD 2012/05/24 No.849 ---------->>>>>
  //if (salesSlip_disp.InputMode = 7) or (salesSlip_disp.InputMode = 6) then
  if (salesSlip_disp.InputMode = 7) then
  // --- UPD 2012/05/24 No.849 ----------<<<<<
  begin
      guideButton.Enabled := False; // ガイド
  end else begin
//    if (xHeaderContainsFocus() <> True) and (xTabFooterContainsFocus() <> True) then
    if salesSlipDetailInputflag then
    begin
      //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
      SettingToolBarButtonEnabled(nil); // ADD 2011/12/21 tianjw Redmine#27290
    end else begin

      if flag then
      begin
        if CarMngCode.Name = targetControl.Name then
        begin
          gpxMAHNB01013B_GetOptCarMng(optCarMng);
          if optCarMng = 1 then
          begin
            // --- ADD m.suzuki 2010/11/01 ---------->>>>>
            //guideButton.Enabled := true; // ガイド
            guideButton.Enabled := CarMngCodeBtn.Enabled; // ガイド
            // --- ADD m.suzuki 2010/11/01 ----------<<<<<
          end else begin
            guideButton.Enabled := False; // ガイド
          end;
        end else begin
           guideButton.Enabled := true; // ガイド
        end;
      end else begin
          guideButton.Enabled := False; // ガイド
      end;
    end;
   end;
// 2011/01/31 >>>
  finally
    // ツールバーオプション側のボタンは、最後にEnabledをオリジナルからコピーする
    toolMenu_guideButton.Enabled := guideButton.Enabled;
  end;
// 2011/01/31 <<<
end;


// *************************************************************************
// 伝票備考、伝票備考２、伝票備考３の入力桁数設定処理
// *************************************************************************
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 徐錦山
// 作 成 日  2011/08/09  修正内容 : 連番922
//                                  伝票印刷パターン設定で、備考桁数をバイト換算に変更の対応
//----------------------------------------------------------------------------//
procedure TForm4.xSetNoteCharCnt();
var
slipNoteCharCnt, slipNote2CharCnt, slipNote3CharCnt: Integer;
begin
     // 伝票備考、伝票備考２、伝票備考３の入力桁数取得
     gpxMAHNB01013B_SetNoteCharCnt(slipNoteCharCnt, slipNote2CharCnt, slipNote3CharCnt);

     // 伝票備考の入力桁数
     if slipNoteCharCnt = -1 then
     begin
       // todo uiSetControl1.GetSettingColumnCount("tEdit_SlipNote")
       // --- 2011/08/09 XUJS EDT STA --->>>>>>
       //SlipNote.ExtEdit.Column := 30;
       SlipNote.ExtEdit.Column := 60;
       // --- 2011/08/09 XUJS EDT END ---<<<<<<
     end else begin
       // --- 2011/08/09 XUJS EDT STA --->>>>>>
       //SlipNote.ExtEdit.Column := slipNoteCharCnt;
       SlipNote.ExtEdit.Column := slipNoteCharCnt * 2;
       // --- 2011/08/09 XUJS EDT END ---<<<<<<
     end;

     // 伝票備考２の入力桁数
     if slipNote2CharCnt = -1 then
     begin
       // todo uiSetControl1.GetSettingColumnCount("tEdit_SlipNote")
       // --- 2011/08/09 XUJS EDT STA --->>>>>>
       //SlipNote2.ExtEdit.Column := 30;
       SlipNote2.ExtEdit.Column := 60;
       // --- 2011/08/09 XUJS EDT END ---<<<<<<
     end else begin
       // --- 2011/08/09 XUJS EDT STA --->>>>>>
       //SlipNote2.ExtEdit.Column := slipNote2CharCnt;
       SlipNote2.ExtEdit.Column := slipNote2CharCnt * 2;
       // --- 2011/08/09 XUJS EDT END ---<<<<<<
     end;

     // 伝票備考３の入力桁数
     if slipNote3CharCnt = -1 then
     begin
       // todo uiSetControl1.GetSettingColumnCount("tEdit_SlipNote")
       // --- 2011/08/09 XUJS EDT STA --->>>>>>
       //SlipNote3.ExtEdit.Column := 30;
       SlipNote3.ExtEdit.Column := 60;
       // --- 2011/08/09 XUJS EDT END ---<<<<<<
     end else begin
       // --- 2011/08/09 XUJS EDT STA --->>>>>>
       //SlipNote3.ExtEdit.Column := slipNote3CharCnt;
       SlipNote3.ExtEdit.Column := slipNote3CharCnt * 2;
       // --- 2011/08/09 XUJS EDT END ---<<<<<<
     end;

end;

// *************************************************************************
// 売上データクラス→画面格納処理
// *************************************************************************
procedure TForm4.xSetDisplay();
var
  parTotalGrossProfitRate : Double;
  name, sCustomerSnm : string; // 2010/07/27
begin

  sCustomerSnm := salesSlip_disp.CustomerSnm; // 2010/07/27

  gpxMAHNB01012B_GetSalesSlip(salesSlip_disp);

  gpxMAHNB01013B_GetDisplayHeaderFooterInfo(inputModeTitle, defaultSalesSlipNumDf, i_searchPartsMode, operationCodeFlg);

  // --- ADD m.suzuki 2010/10/29 ---------->>>>>
  //// --- ADD m.suzuki 2010/10/28 ---------->>>>>
  ////伝票区分の再構築
  //xSetItemtSalesSlipCd(salesSlip_disp, salesSlip_disp.AcptAnOdrStatusDisplay, True);
  //// --- ADD m.suzuki 2010/10/28 ----------<<<<<
  //伝票区分の再構築(売上or返品の状態は維持する)
  xSetItemtSalesSlipCdKeepSlipCd(salesSlip_disp, salesSlip_disp.AcptAnOdrStatusDisplay, True);
  // --- ADD m.suzuki 2010/10/29 ----------<<<<<

//>>>2010/07/27
  if (salesSlip_disp.AccRecDivCd = 0) and
     (sCustomerSnm <> '') and
     (salesSlip_disp.CustomerSnm <> '') then begin
    salesSlip_disp.CustomerSnm := sCustomerSnm;
  end;
//<<<2010/07/27

  SetDisplayHeaderFooterInfo(salesSlip_disp);
  //画面表示処理（売上金額合計情報）
  xSetDisplayTotalPriceInfo(salesSlip_disp);
  xGetTaxRateName(salesSlip_disp);   // ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応

end;

// --- ADD 2010/06/02 ---------->>>>>
// *************************************************************************
// フッタ部フォーカス設定処理
// *************************************************************************
procedure TForm4.xSetHeaderControl();
begin
   //ヘッダ部
   if (FullModel.ReadOnly = False) then
   begin
      FullModel.SetFocus;
   end
   else if (CustomerCode.ReadOnly = False) then
   begin
     CustomerCode.SetFocus;
   end
   else if (SalesEmployeeCd.ReadOnly = False) then
   begin
     SalesEmployeeCd.SetFocus;
   end;
   // ----------- ADD 連番729 2011/08/18 -------------------->>>>>
   if Form4.ActiveControl <> HNsGrid1 then begin
     detailCopyButton.Enabled := False;
     toolMenu_detailCopyBtn.Enabled := False;
     // --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 --------->>>>>
     // --- ADD  譚洪 2015/10/26 Redmine#47609 ---------->>>>>
     if(isOptPermitForFuJi)then
     begin
     // --- ADD  譚洪 2015/10/26 Redmine#47609 ----------<<<<<
     UOEDataGet.Enabled := False;
     toolMenu_UOEDataGet.Enabled := False;
     end;// ADD  譚洪 2015/10/26 Redmine#47609
     // --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ---------<<<<<
     // --- DEL  30757 佐々木　貴英 K2015/10/05 ----------------->>>>>
     //// --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 --------->>>>>
     //UOEDataGet.Enabled := False;
     //toolMenu_UOEDataGet.Enabled := False;
     //// --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 ---------<<<<<
     // --- DEL  30757 佐々木　貴英 K2015/10/05 -----------------<<<<<
   end;
   // ----------- ADD 連番729 2011/08/18 --------------------<<<<<
end;
// *************************************************************************
// フッタ部フォーカス設定処理
// *************************************************************************
function TForm4.xSetFootControl():Boolean;
begin

   Result := True;

   if (uTabControl_Footer.ActivePage = ts1) then
   begin
     if (SlipNoteCode.ReadOnly = False) then
     begin
       SlipNoteCode.SetFocus;

     end
     else if (SlipNote2Code.ReadOnly = False) then
     begin
       SlipNote2Code.SetFocus;
     end
     else if (SlipNote3Code.ReadOnly = False) then
     begin
       SlipNote3Code.SetFocus;
     end
     else
     begin
       Result := False;
     end;
   end
   else if (uTabControl_Footer.ActivePage = ts2) then
   begin
     if (SlipMemo1.ReadOnly = False) then
     begin
       SlipMemo1.SetFocus;
     end
     else
     begin
       Result := False;
     end;
   end
   else if (uTabControl_Footer.ActivePage = AddInfoTabSheet) then
   begin
     // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
     if (CarNoteCode.ReadOnly = False) then
     begin
       CarNoteCode.SetFocus;
     end else
     // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------<<<<<
     if (CarSlipNote.ReadOnly = False) then
     begin
       CarSlipNote.SetFocus;
     end
     else
     begin
       Result := False;
     end;
   end;
end;
// --- ADD 2010/06/02 ----------<<<<<

// *************************************************************************
// 売上データクラス→画面格納処理
// *************************************************************************
//procedure TForm4.xSetNextControl(nextControl : TWinControl);
// --- UPD 2012/05/10 ---------->>>>>
//procedure TForm4.xSetNextControl();
function TForm4.xSetNextControl():Boolean;
// --- UPD 2012/05/10 ---------->>>>>
var
PrevCtrl, NextCtrl: TWinControl;   // ADD 2010/08/13
rowIndex, colIndex : Integer;      // ADD 2010/09/14
value : string;                    // ADD 2010/09/14
valid : Boolean;                   // ADD 2010/09/14
diffInt, diffIntTwo : LongInt;     // ADD 2010/09/14
salesRowNo, iRow, status : Integer;    // ADD 2010/09/15
//isNullSaleCdFlg, flag : Boolean;  // ADD 2011/12/01 YANGMJ REDMINE#8344   // DEL 2012/01/18 YANGMJ ソースマージ
colKey:string;                    // ADD 2011/12/21 凌小青 REDMINE#27309
st: Integer;//2012/05/16
begin

   Result := True;  //2012/05/10

//   isNullSaleCdFlg :=True; // ADD 2011/12/01 YANGMJ REDMINE#8344  // DEL 2012/01/18 YANGMJ ソースマージ
//   flag := False; // ADD 2011/12/01 YANGMJ REDMINE#8344  // DEL 2012/01/18 YANGMJ ソースマージ
   colKey := (xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col));// ADD 2011/12/21 凌小青 REDMINE#27309
   if (xHeaderContainsFocus()) then
         begin
           // --- UPD 2010/07/07 ---------->>>>>
           //if (CarMngCode.ReadOnly = True) then
           if ((not CarMngCode.CanFocus()) or (CarMngCode.ReadOnly = True)) then
           // --- UPD 2010/07/07 ----------<<<<<
           begin
               if (ModelDesignationNo.ReadOnly = True) then
               begin
                  if (HNsGrid1.Enabled = True) then
                  begin
                     //----ADD START 2011/07/19-------->>>>
                     if salesSlip_disp.InputMode <> ctINPUTMODE_SalesSlip_ReadOnly then
                     begin
                        HNsGrid1.SetFocus;
                     end;
                     //----ADD END 2011/07/19--------<<<<
                     //HNsGrid1.SetFocus; //DEL 2011/07/19
                     if i_searchPartsMode = 1 then
                     begin
                     // --- ADD 2010/07/07 ---------->>>>>
                       //HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2);
                       if (HNsGrid1.ReadOnly[ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2]) then
                       begin
                          HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.LogicalRow * 2);
                       end else
                       begin
                          HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2);
                       end;
                     end
                     else
                     begin
                       //HNsGrid1.FocusCell(ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1);
                       if (HNsGrid1.ReadOnly[ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1]) then
                       begin
                          HNsGrid1.FocusCell(ctCol_GoodsName, HNsGrid1.LogicalRow * 2);
                       end else
                       begin
                          HNsGrid1.FocusCell(ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1);
                       end;
                     // --- ADD 2010/07/07 ----------<<<<<
                     end;
                  end
                  else
                  begin
                     if (uTabControl_Footer.ActivePage = ts1) then
                     begin
                        SlipNoteCode.SetFocus;
                     end
                     else if (uTabControl_Footer.ActivePage = ts2) then
                     begin
                       if (SlipMemo1.ReadOnly = False) then
                       begin
                         SlipMemo1.SetFocus;
                       end;
                     end
                     else if (uTabControl_Footer.ActivePage = AddInfoTabSheet) then
                     begin
                       // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
                       if (CarNoteCode.ReadOnly = False) then
                       begin
                         CarNoteCode.SetFocus;
                       end else
                       // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------<<<<<
                       if (CarSlipNote.ReadOnly = False) then
                       begin
                         CarSlipNote.SetFocus;
                       end;
                     end;
                  end;
               end
               else
               begin
                 ModelDesignationNo.SetFocus;
               end;
           end else
           begin
             CarMngCode.SetFocus;
           end;
         end else if (CarMngCode.Focused) then
         begin
           if (ModelDesignationNo.ReadOnly = True) then
           begin
              if (HNsGrid1.Enabled = True) then
              begin
                 HNsGrid1.SetFocus;
                 if i_searchPartsMode = 1 then
                 begin
                   HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2);
                 end
                 else
                 begin
                   HNsGrid1.FocusCell(ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1);
                 end;
              end
              else
              begin
                 if (uTabControl_Footer.ActivePage = ts1) then
                 begin
                    SlipNoteCode.SetFocus;
                 end
                 else if (uTabControl_Footer.ActivePage = ts2) then
                 begin
                   if (SlipMemo1.ReadOnly = False) then
                   begin
                     SlipMemo1.SetFocus;
                   end;
                 end
                 else if (uTabControl_Footer.ActivePage = AddInfoTabSheet) then
                 begin
                   // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
                   if (CarNoteCode.ReadOnly = False) then
                   begin
                     CarNoteCode.SetFocus;
                   end else
                   // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------<<<<<
                   if (CarSlipNote.ReadOnly = False) then
                   begin
                     CarSlipNote.SetFocus;
                   end;
                 end;
              end;
           end
           else
           begin
             ModelDesignationNo.SetFocus;
           end;
           // --- UPD 2010/08/13  --- >>>>
         end else if (FirstEntryDate.Focused
                    or (Form4.ActiveControl.Name = 'FirstEntryDateJpn')
                    or (Form4.ActiveControl.Name = 'FirstEntryDateYear')
                    or (Form4.ActiveControl.Name = 'FirstEntryDateMonth')) then
           // --- UPD 2010/08/13 --- <<<<
         begin
           ProduceFrameNo.SetFocus;
         end else if (CarMngCodeBtn.Focused or ModelDesignationNo.Focused
         or CategoryNo.Focused or EngineModelNm.Focused
         or FullModelBtn.Focused or FullModel.Focused
         or MakerCode.Focused or ModelCode.Focused
         or ModelSubCode.Focused or ModelFullName.Focused
         or ProduceFrameNo.Focused or ColorNo.Focused or TrimNo.Focused) then
         begin
         // ADD 2010/08/13 --->>>>
           // BL検索モード
           if (i_searchPartsMode = 1) then
           begin
              if (FullModel.Focused) then
              begin
                 PrevCtrl := FullModel;
                 NextCtrl := HNsGrid1;
                 xArrowKeyMain(PrevCtrl,NextCtrl,VK_DOWN);

                 if (not fullModeFlg) then
                 begin
                    Exit;
                 end;
                 // --- ADD 2010/08/13 --- >>>>
              end
              else
              begin
                // --- ADD 2012/08/06 Wakita ---------->>>>>
                PrevCtrl := Form4.ActiveControl;
                NextCtrl := HNsGrid1;
                xArrowKeyMain(PrevCtrl,NextCtrl,VK_DOWN);
                // --- ADD 2012/08/06 Wakita ----------<<<<<
                if (FullModel.DataText = '') then
                begin
                  FullModel.SetFocus;
                  NextCtrl := FullModel;
                  Exit;
                end;
              end;
              // --- ADD 2010/08/13 --- <<<<
           end;
           //--- ADD BY 凌小青 on 2011/12/21 for Redmine#27309 ----->>>>>
           //---UPD BY 凌小青 on 2013/01/14 for Redmine#33793 ------>>>>>
           //if IsGoodsNoFromXMLExist and ((colKey = 'BLGoodsCode') or (colKey = 'GoodsNo')) then
           if ((colKey = 'BLGoodsCode') or (colKey = 'GoodsNo')) then
           //---UPD BY 凌小青 on 2013/01/14 for Redmine#33793 ------<<<<<
           begin
               detailCopyButton.Enabled := True;
               toolMenu_detailCopyBtn.Enabled := True;
           end
           else
           begin
               detailCopyButton.Enabled := False;
               toolMenu_detailCopyBtn.Enabled := False;
           end;
           //--- ADD BY 凌小青 on 2011/12/21 for Redmine#27309-----<<<<<<
           // --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ----------------->>>>>
           // --- ADD  譚洪 2015/10/26 Redmine#47609 ---------->>>>>
           if(isOptPermitForFuJi)then
           begin
           // --- ADD  譚洪 2015/10/26 Redmine#47609 ----------<<<<<
           if (Form4.ActiveControl = HNsGrid1) or (Form4.ActiveControl.Name = '') then
           begin
               // --- UPD 呉元嘯 2020/11/09 PMKOBETSU-4085対応 -------->>>>>
               //UOEDataGet.Enabled := True;
               //toolMenu_UOEDataGet.Enabled := True;
               //一括値引と返品の場合、「回答取込」ボタンが非活性
               if (discountAllLineflag = False) and (salesSlip_disp.SalesSlipCd <> salesSlipCd_RetGoods)then
               begin
                 UOEDataGet.Enabled := True;
                 toolMenu_UOEDataGet.Enabled := True;
               end
               else
               begin
                 UOEDataGet.Enabled := False;
                 toolMenu_UOEDataGet.Enabled := False;
               end;
               // --- UPD 呉元嘯 2020/11/09 PMKOBETSU-4085対応 --------<<<<<
           end else
           begin
               UOEDataGet.Enabled := False;
               toolMenu_UOEDataGet.Enabled := False;
           end;
           end;// ADD  譚洪 2015/10/26 Redmine#47609
           // --- ADD  黄興貴 K2015/04/29 回答取込パタン追加 -----------------<<<<<

           // --- DEL  30757 佐々木　貴英 K2015/10/05 ----------------->>>>>
           // --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 ----------------->>>>>
           //if (Form4.ActiveControl = HNsGrid1) or (Form4.ActiveControl.Name = '') then
           //begin
           //    UOEDataGet.Enabled := True;
           //    toolMenu_UOEDataGet.Enabled := True;
           //end else
           //begin
           //    UOEDataGet.Enabled := False;
           //    toolMenu_UOEDataGet.Enabled := False;
           //end;
           // --- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 -----------------<<<<<
           // --- DEL  30757 佐々木　貴英 K2015/10/05 -----------------<<<<<
           // ADD 2010/08/13 ---<<<<
           if (HNsGrid1.Enabled = True) then
           begin
             // --- ADD 2012/08/06 Wakita ---------->>>>>
             PrevCtrl := Form4.ActiveControl;
             NextCtrl := HNsGrid1;
             xArrowKeyMain(PrevCtrl,NextCtrl,VK_DOWN);
             // --- ADD 2012/08/06 Wakita ----------<<<<<

             // --- DEL 2013/03/21 ---------->>>>>
             //HNsGrid1.SetFocus;
             // --- DEL 2013/03/21 ----------<<<<<
             // --- ADD 2013/03/21 ---------->>>>>
             // ハンドル位置チェックでエラーとなった場合、
             // フォーカスを車台番号のままとする
             if (PrevCtrl = nil) or (NextCtrl = nil) or (NextCtrl.Name <> 'ProduceFrameNo') or (PrevCtrl.Name <> 'ProduceFrameNo') then
             begin
               HNsGrid1.SetFocus;
             end;
             // --- ADD 2013/03/21 ----------<<<<<
             if i_searchPartsMode = 1 then
             begin
               // ---- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
               //HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2);
               // 仕入の場合
               if ((HNsGrid1.ColWidths[ctCol_StockDate] <> 0) and
                   (HNsGrid1.ColWidths[ctCol_SupplierCdForOrder] = 0) and
                   (HNsGrid1.ColWidths[ctCol_DtlNote] = 0)) then
               begin
                 if (optStockDateCtrl = 1) then // 仕入日付フォーカス制御オプション(OPT-CPM0060)がオンの場合
                 begin
                   HNsGrid1.GotoCell(ctCol_StockDate, HNsGrid1.Row);
                 end
                 else
                 begin
                   HNsGrid1.GotoCell(ctCol_PartySalesSlipNum, HNsGrid1.Row);
                 end;
                 HNsGrid1.ShowInplaceEdit;
               end
               else
               begin
                 HNsGrid1.FocusCell(ctCol_BLGoodsCode, HNsGrid1.LogicalRow * 2);
               end;
               // ---- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
             end
             else
             begin
               // ---- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
               //HNsGrid1.FocusCell(ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1);
               // 仕入の場合
               if ((HNsGrid1.ColWidths[ctCol_StockDate] <> 0) and
                   (HNsGrid1.ColWidths[ctCol_SupplierCdForOrder] = 0) and
                   (HNsGrid1.ColWidths[ctCol_DtlNote] = 0)) then
               begin
                 if (optStockDateCtrl = 1) then // 仕入日付フォーカス制御オプション(OPT-CPM0060)がオンの場合
                 begin
                   HNsGrid1.GotoCell(ctCol_StockDate, HNsGrid1.Row);
                 end
                 else
                 begin
                   HNsGrid1.GotoCell(ctCol_PartySalesSlipNum, HNsGrid1.Row);
                 end;
                 HNsGrid1.ShowInplaceEdit;
               end
               else
               begin
                 HNsGrid1.FocusCell(ctCol_GoodsNo, HNsGrid1.LogicalRow * 2 + 1);
                 // --- ADD 2016/02/17 Wakita ---------->>>>>
                 // 編集モードへ切り替える
                 HNsGrid1.ShowInplaceEdit;
                 // --- ADD 2016/02/17 Wakita ----------<<<<<
               end;
               // ---- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
             end;
           end
           else
           begin
             if (uTabControl_Footer.ActivePage = ts1) then
                 begin
                    SlipNoteCode.SetFocus;
                 end
                 else if (uTabControl_Footer.ActivePage = ts2) then
             begin
               if (SlipMemo1.ReadOnly = False) then
               begin
                 SlipMemo1.SetFocus;
               end;
             end
             else if (uTabControl_Footer.ActivePage = AddInfoTabSheet) then
             begin
               // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
               if (CarNoteCode.ReadOnly = False) then
               begin
                 CarNoteCode.SetFocus;
               end else
               // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------<<<<<
               if (CarSlipNote.ReadOnly = False) then
               begin
                 CarSlipNote.SetFocus;
               end;
             end;
           end;
         // --- UPD 2012/12/21 T.Miyamoto ------------------------------>>>>>
         //end else if (Form4.ActiveControl = HNsGrid1) then
         end else if ((Form4.ActiveControl = HNsGrid1) or
                      (Form4.ActiveControl.Name = '')) then
         // --- UPD 2012/12/21 T.Miyamoto ------------------------------<<<<<
         begin
         // --- ADD 2012/05/10 ---------->>>>>
         if (i_InputType_bk = 2) then
         begin
           f3_focusFlg := True;
         end
         else
         begin
         // --- ADD 2012/05/10 ----------<<<<<

             // UPD 2010/09/15 -- >>>>
             // UPD 2010/09/14 -- >>>>
             rowIndex := HNsGrid1.Row;
             colIndex := HNsGrid1.Col;
             iRow := rowIndex div 2 - 1;
             salesRowNo := RCHNB01003UADM.SalesRowNo[iRow];
             value := HNsGrid1.CurrentCell;
             //f3_enableFlg := True;      //DEL 2011/09/08
             isShipmentCntError := False;//ADD 2011/07/27
             //xPriceCheckProc(colIndex, rowIndex, iRow, salesRowNo, value);      // ADD 2010/09/14  // DEL 2011/12/01 YANGMJ REDMINE#8344
//             xPriceCheckProc(colIndex, rowIndex, iRow, salesRowNo, value, flag); // ADD 2011/12/01 YANGMJ REDMINE#8344  // DEL 2012/01/18 YANGMJ ソースマージ
             xPriceCheckProc(colIndex, rowIndex, iRow, salesRowNo, value); // ADD 2012/01/18 YANGMJ ソースマージ
             // add 2011/08/02
             // 出荷数
             if isShipmentCntError then begin
                HNsGrid1.Cells[ctCol_ShipmentCntDisplay, (rowIndex div 2) * 2 + 1] :=  FloatToStr(RCHNB01003UADM.ShipmentCntDisplay[rowIndex div 2 -1]);
             end;
             // add 2011/08/02
             // MOD 2010/11/25 --- >>>>
              status := gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,4);
              if (status = -1) then
              begin
                HNsGrid1.GotoCell(ctCol_SalesMoneyDisplay, (rowIndex div 2) * 2 + 1);
                HNsGrid1.ShowInplaceEdit;

                f3_focusFlg := False;
                Result := False;  //2012/05/10
              end
              else
              begin
                status := gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,3);
                if (status = -1) then
                begin
                  HNsGrid1.GotoCell(ctCol_ShipmentCntDisplay, (rowIndex div 2) * 2 + 1);
                  HNsGrid1.ShowInplaceEdit;

                  f3_focusFlg := False;
                  Result := False;  //2012/05/10
                end
                else
                begin
// -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
//                  //-----ADD 2011/12/01 YANGMJ REDMINE#8344----->>>>>
//                  if (salesTtlSt.SalesCdDspDivCd = 2) then begin
//                    if flag then
//                    begin
//                      checkFlg := True;
//                      HNsGrid1.FocusCell(ctCol_SalesCode, (rowIndex div 2) * 2);
//                      HNsGrid1.ShowInplaceEdit;
//                      isNullSaleCdFlg := False;
//                      f3_focusFlg := False;
//                    end else begin
//                      status := gpxMAHNB01013B_CheckDetailAction(iRow, 0 , 5);
//                      if (status = -1) then begin
//                        checkFlg := True;
//                        HNsGrid1.FocusCell(ctCol_SalesCode, (rowIndex div 2) * 2);
//                        HNsGrid1.ShowInplaceEdit;
//                        isNullSaleCdFlg := False;
//                        f3_focusFlg := False;
//                      end;
//                    end;
//                  end;
//                  if isNullSaleCdFlg then
//                  begin
//                  //-----ADD 2011/12/01 YANGMJ REDMINE#8344-----<<<<<
// -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
                    //HNsGrid1.Enabled := False; //ADD 2011/12/01 LIUZY REDMINE#8379 // DEL 2012/01/18 YANGMJ ソースマージ
                    status := gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,6); //ADD 2011/09/08
                    //status := gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,1); //DEL 2011/09/08
                    //HNsGrid1.Enabled := True; //ADD 2011/12/01 LIUZY REDMINE#8379 // DEL 2012/01/18 YANGMJ ソースマージ
                    if (status = -1) then
                    begin
                        gpxMAHNB01013B_GetGrossProfitRateFlg(grossProfitRateFlg);
                        if (grossProfitRateFlg) then
                        begin
                          checkFlg := True;
                          // --- ADD 2012/05/16 ---------->>>>>
                          if (HNsGrid1.col = ctCol_CostRate) and (HNsGrid1.Row mod 2 = 0) then
                          //原価率
                          begin
                            HNsGrid1.LogicalCells[ctCol_CostRate, ctRow_CostRate, salesRowNo] :=
                            FloatToStr(RCHNB01003UADM.CostRate[salesRowNo - 1]);
                            st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,HNsGrid1.LogicalCells[ctCol_CostRate, ctRow_CostRate, salesRowNo],HNsGrid1.OriginalCellValue,'CostRate');
                          end
                          else if (HNsGrid1.col = ctCol_SalesUnitCost) and (HNsGrid1.Row mod 2 = 0) then
                          //原単価
                          begin
                            HNsGrid1.LogicalCells[ctCol_SalesUnitCost, ctRow_SalesUnitCost, salesRowNo] :=
                            FloatToStr(RCHNB01003UADM.SalesUnitCost[salesRowNo - 1]);
                            if (HNsGrid1.LogicalCells[ctCol_CostRate, ctRow_CostRate, salesRowNo]) = '' then
                            begin
                              st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,HNsGrid1.LogicalCells[ctCol_SalesUnitCost, ctRow_SalesUnitCost, salesRowNo],HNsGrid1.OriginalCellValue,'SalesUnitCost');
                            end
                            else
                            begin
                              st := gpxMAHNB01013B_uGridDetailsAfterCellUpdate(iRow,FloatToStr(RCHNB01003UADM.CostRate[salesRowNo - 1]),FloatToStr(RCHNB01003UADM.CostRate[salesRowNo - 1]),'CostRate');
                            end;
                          end
                          else
                          begin
                          // --- ADD 2012/05/16 ----------<<<<<
                          HNsGrid1.GotoCell(ctCol_SalesRate, (rowIndex div 2) * 2 + 1);
                          HNsGrid1.FocusCell(9, (rowIndex div 2) * 2 + 1);
                          // --- ADD 2012/05/16 ---------->>>>>
                          end;
                          // --- ADD 2012/05/16 ----------<<<<<
                          // --- ADD 2012/04/23 ---------->>>>>
                          HNsGrid1.ShowInplaceEdit;
                          f3_focusFlg := False;
                          // --- ADD 2012/04/23 ----------<<<<<
                          Result := False;  //2012/05/10
                        end
                        else
                        begin
                          // ----- ADD 2011/09/21 ----------------------------------->>>>>
                          if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
                          and (RCHNB01003UADM.SalesSlipDtlNumSrc[salesRowNo -1] <> 0)
                          and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))  then
                          begin
                            checkFlg := False;
                          end
                          else
                          begin
                          // ----- ADD 2011/09/21 -----------------------------------<<<<<
                              status := gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,2);

                              if (status = -1) then
                              begin
                              HNsGrid1.GotoCell(ctCol_SalesRate, (rowIndex div 2) * 2 + 1);
                              HNsGrid1.FocusCell(9, (rowIndex div 2) * 2 + 1);
                              // --- ADD 2012/04/23 ---------->>>>>
                              HNsGrid1.ShowInplaceEdit;
                              f3_focusFlg := False;
                              // --- ADD 2012/04/23 ----------<<<<<
                              Result := False;  //2012/05/10
                              end
                              else
                              begin
                                checkFlg := False;
                              end;
                          end;// ADD 2011/09/21
                        end;
                        //HNsGrid1.ShowInplaceEdit; //ADD 2011/11/30 LIUZY REDMINE#8379  // DEL 2012/01/18 YANGMJ ソースマージ
                    end
// -----DEL 2012/01/18 YANGMJ ソースマージ ----->>>>>
//                    // -----ADD 2011/12/01 LIUZY REDMINE#8379 ----- >>>>>
//                    else if (status = 9) then
//                    begin
//                      HNsGrid1.SetFocus;
//                      HNsGrid1.GotoCell(ctCol_SalesRate, (rowIndex div 2) * 2 + 1);
//                      HNsGrid1.FocusCell(9, (rowIndex div 2) * 2 + 1);
//                      HNsGrid1.ShowInplaceEdit;
//                      f3_focusFlg := False;
//                      checkPrice := True;
//                    end
//                    // -----ADD 2011/12/01 LIUZY REDMINE#8379 ----- <<<<<
// -----DEL 2012/01/18 YANGMJ ソースマージ -----<<<<<
                    // ADD 2010/09/13 --- >>>>
                    else if (status = 3) then
                    begin
                      //HNsGrid1.GotoCell(ctCol_SalesUnPrcDisplay, (rowIndex div 2) * 2 + 1);   // ADD 2010/09/14
                      HNsGrid1.SetFocus;
                      HNsGrid1.FocusCell(ctCol_SalesUnPrcDisplay, (rowIndex div 2) * 2 + 1);  // ADD 2010/09/14
                      HNsGrid1.GotoCell(ctCol_SalesUnPrcDisplay, (rowIndex div 2) * 2 + 1);
                      //HNsGrid1.ShowInplaceEdit; //ADD 2011/11/30 LIUZY REDMINE#8379 // DEL 2012/01/18 YANGMJ ソースマージ
                    end
                    // ADD 2010/09/13 --- <<<<
                    // --- ADD 2010/07/19 -------------->>>>>
                    else if (status = 1) then
                    begin
                      // ADD 2012/05/17  ----- >>>>>
                      HNsGrid1.FocusCell(ctCol_SalesRate, (rowIndex div 2) * 2 + 1);
                      // ADD 2012/05/17  ----- <<<<<
                      // ----- ADD 2011/09/21 ----------------------------------->>>>>
                      if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
                      and (RCHNB01003UADM.SalesSlipDtlNumSrc[salesRowNo -1] <> 0)
                      and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))  then
                      begin
                        f3_focusFlg := True;
                      end
                      else
                      begin
                      // ----- ADD 2011/09/21 -----------------------------------<<<<<
                          status := gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,2);

                          if (status = -1) then
                          begin
                            HNsGrid1.GotoCell(ctCol_SalesRate, (rowIndex div 2) * 2 + 1);
                            HNsGrid1.FocusCell(9, (rowIndex div 2) * 2 + 1);
                            //HNsGrid1.ShowInplaceEdit; //ADD 2011/11/30 LIUZY REDMINE#8379 // DEL 2012/01/18 YANGMJ ソースマージ
                            // --- ADD 2012/04/23 ---------->>>>>
                            HNsGrid1.ShowInplaceEdit;
                            f3_focusFlg := False;
                            // --- ADD 2012/04/23 ----------<<<<<
                            Result := False;  //2012/05/10
                          end
                          else
                          begin
                            f3_focusFlg := True;
                          end;
                      end;// ADD 2011/09/21
                    end
                    // --- ADD 2010/07/19 --------------<<<<<
                    else
                    begin
                      // ----- ADD 2011/09/21 ----------------------------------->>>>>
                      if ((salesSlip_disp.SalesSlipCd = salesSlipCd_RetGoods)
                      and (RCHNB01003UADM.SalesSlipDtlNumSrc[salesRowNo -1] <> 0)
                      and (salesSlip_disp.SalesSlipNum = ctDefaultSalesSlipNum))  then
                      begin
                        f3_focusFlg := True;
                      end
                      else
                      begin
                      // ----- ADD 2011/09/21 -----------------------------------<<<<<
                          status := gpxMAHNB01013B_CheckDetailAction(iRow, 0 ,2);

                          if (status = -1) then
                          begin
                            HNsGrid1.GotoCell(ctCol_SalesRate, (rowIndex div 2) * 2 + 1);
                            HNsGrid1.FocusCell(9, (rowIndex div 2) * 2 + 1);
                            //HNsGrid1.ShowInplaceEdit;//ADD 2011/11/30 LIUZY REDMINE#8379  // DEL 2012/01/18 YANGMJ ソースマージ
                            // --- ADD 2012/04/23 ---------->>>>>
                            HNsGrid1.ShowInplaceEdit;
                            f3_focusFlg := False;
                            // --- ADD 2012/04/23 ----------<<<<<
                            Result := False;  //2012/05/10
                          end
                          else if (status = 1) then
                          begin
                            f3_focusFlg := True;
                          end
                          else
                          begin
                            f3_focusFlg := True;
                          end;
                      end;// ADD 2011/09/21
                    end;
                  end;
                end;
              //end;//ADD 2011/12/01 YANGMJ REDMINE#8344 // DEL 2012/01/18 YANGMJ ソースマージ
             // MOD 2010/11/25 --- <<<<<
             // MOD 2010/11/25 --- >>>>

             // --- ADD 2012/05/10 ---------->>>>>
             end;
             // --- ADD 2012/05/10 ----------<<<<<

             if (f3_focusFlg) then
             begin
                // --- ADD 2012/06/13 Wakita ---------->>>>>
                rowChangedFlg := True;
                // --- ADD 2012/06/13 Wakita ----------<<<<<
                if (uTabControl_Footer.ActivePage = ts1) then
                 begin
                    //SlipNoteCode.SetFocus; //DEL 2011/07/19
                    //---ADD START 2011/07/19----->>>>
                    if SlipNoteCode.Enabled then
                    begin
                       SlipNoteCode.SetFocus;
                    end;
                    //---ADD END 2011/07/19-----<<<<
                 end
                 else if (uTabControl_Footer.ActivePage = ts2) then
                 begin
                   if (SlipMemo1.ReadOnly = False) then
                   begin
                     SlipMemo1.SetFocus;
                   end;
                 end
                 else if (uTabControl_Footer.ActivePage = AddInfoTabSheet) then
                 begin
                   // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
                   if (CarNoteCode.ReadOnly = False) then
                   begin
                     CarNoteCode.SetFocus;
                   end else
                   // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------<<<<<
                   if (CarSlipNote.ReadOnly = False) then
                   begin
                     CarSlipNote.SetFocus;
                   end;
                 end;
             end
             else
             begin

             end;

             f3_focusFlg := False;
             // UPD 2010/09/14 -- <<<<
             // UPD 2010/09/15 -- <<<<
         end;
end;
// *************************************************************************
// 売上データ保存後処理
// *************************************************************************
procedure TForm4.xdoSaveAfter(saveStatus : Integer);
var
beforeSalesSlipNumText:  WideString;
salesRowNo, searchType: Integer;
salesDetailArray: TSalesSlipInputCustomArrayA2;
begin
    case saveStatus of
      0:
      begin
        gpxMAHNB01013B_GetBeforeSalesSlipNumText(beforeSalesSlipNumText);
        pnl_BeforeSalesSlipNum.Caption := beforeSalesSlipNumText;

        xSetDisplay();

        // --- ADD m.suzuki 2010/06/12 ---------->>>>>
        // QRｺｰﾄﾞ作成処理呼び出し
        xMakeQRCall;
        // --- ADD m.suzuki 2010/06/12 ----------<<<<<

        // 車両情報画面表示処理
        salesRowNo := xGetActiveRowSalesRowNo();
        searchType := 0;
        // --- UPD 2010/06/02 ---------->>>>>
        //xSetDisplayCarInfo(salesRowNo, searchType);
        xSetDisplayCarInfo(1, searchType);
        // --- UPD 2010/06/02 ----------<<<<<

        // --- ADD 2013/02/20 Wakita ② ---------->>>>>
        //値引モード
        if(discountAllLineflag)then
        begin
            //「一括値引」→「売上」
            xNotDiscountInitalSet();
        end;
        // --- ADD 2013/02/20 Wakita ② ----------<<<<<

        xDeatilClearDisplay();

        // 明細データ設定
        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        // --- ADD 2010/05/31 ---------->>>>>
        xInitialRow;
        // --- ADD 2010/05/31 ----------<<<<<

        HEdit_InquiryNumber.DataText := ''; //ADD 2011/09/28

        xSetDetailRowFormC(salesDetailArray,-1);

        xSettingGrid();

        xSlipMemoInfoFormSetting(salesRowNo);

        //追加情報タブ項目Visible設定
        xSettingAddInfoVisible();


      end;
      // 排他（別端末更新済）
      800:
      begin
        // 担当者にフォーカスをセット（一時的に）
        salesEmployeeCd.setFocus;
        //this.timer_InitialSetFocus.Enabled = true;
      end;

      // 排他（別端末物理削除済）
      801:
      begin
        // 担当者にフォーカスをセット（一時的に）
        salesEmployeeCd.setFocus;
        //this.timer_InitialSetFocus.Enabled = true;
      end;

      // 排他（別端末更新済）
      999:
      begin
        // 担当者にフォーカスをセット（一時的に）
        salesEmployeeCd.setFocus;
        //this.timer_InitialSetFocus.Enabled = true;
      end;

      850:
      begin
        xDeatilClearDisplay();
        // 明細データ設定
        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        // --- ADD 2010/05/31 ---------->>>>>
        xInitialRow;
        // --- ADD 2010/05/31 ----------<<<<<

        xSetDetailRowFormC(salesDetailArray,-1);
        xSettingGrid();
      end;

      851:
      begin
        xDeatilClearDisplay();
        // 明細データ設定
        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        // --- ADD 2010/05/31 ---------->>>>>
        xInitialRow;
        // --- ADD 2010/05/31 ----------<<<<<

        xSetDetailRowFormC(salesDetailArray,-1);
        xSettingGrid();
      end;

      852:
      begin
        xDeatilClearDisplay();
        // 明細データ設定
        gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

        // --- ADD 2010/05/31 ---------->>>>>
        xInitialRow;
        // --- ADD 2010/05/31 ----------<<<<<

        xSetDetailRowFormC(salesDetailArray,-1);

        xSettingGrid();
      end;
    end;

    //this.Cursor = Cursors.Default;

//    SettingAddUpButtonToolEnabled();
    //SettingToolBarButtonEnabled(); // DEL 2011/12/21 tianjw Redmine#27290
    SettingToolBarButtonEnabled(nil); // ADD 2011/12/21 tianjw Redmine#27290

    xDeatilClearDisplay();

    if SectionCode.Enabled then
    begin
         SectionCode.SetFocus;
    end else if SectionCode.Focused = False then
    begin
         SalesEmployeeCd.SetFocus;
    end;

    // フッタタブ位置セット
    uTabControl_Footer.ActivePage := ts1;
end;

// *************************************************************************
// 売上データsave
// *************************************************************************
procedure TForm4.xdoSave(printSlipFlag: Boolean);
var
beforeSalesSlipNumText,svCustomerSnm:  WideString;
//isSave: Boolean; // DEL 2011/02/11
isSave, isErrorFlag: Boolean; // ADD 2011/02/11
ctTabKeyAddInfo, settingAddInfoVisibleFlg, salesRowNo, searchType, result, saveStatus : Integer;
salesDetailArray: TSalesSlipInputCustomArrayA2;
// --- ADD m.suzuki 2010/06/12 ---------->>>>>
isMakeQR: Boolean;
// --- ADD m.suzuki 2010/06/12 ----------<<<<<
name: WideString; // ADD 2010/11/02
salesSlipCurrent : TSalesSlip;
// 2011/01/31 >>>
scmFlg : Boolean;
cmtFlg : Boolean;
// 2011/01/31 <<<
slipNote2ErrFlag: Boolean; // ADD K2011/08/12
salesDateErrFlag: Boolean; // ADD K2011/09/01
tSalesDate: TDateTime; // ADD K2011/09/01

// ADD 2011/09/17 >>>>
thread4: Thread_ReadInitDataFourth;
thread4Bool : Boolean;
// ADD 2011/09/17 <<<<

// ADD 2013/03/28 SCM障害№192対応 ------------------------->>>>>
isSCMSave: Integer;  // SCMデータ取得結果
carInfo: TCarInfo;   // 車輌情報
// ADD 2013/03/28 SCM障害№192対応 -------------------------<<<<<

begin
  gpxMAHNB01013B_DoCacheImage();
  gpxMAHNB01013B_DoAddLine(5,0,0); // ADD 2011/02/11
  // 続けて入力しますか
  // --- ADD m.suzuki 2010/06/12 ---------->>>>>
  //gpxMAHNB01013B_AfterSave(result, CarMngCode.Text, printSlipFlag);

  // --- ADD 2010/07/16 ---------->>>>>
  if checkBox_MakeQR.Visible then
  BEGIN
      isMakeQR := checkBox_MakeQR.Checked;
  END else begin
      isMakeQR := False;
  END;
  //isMakeQR := checkBox_MakeQR.Checked;
  // --- ADD 2010/07/16 ----------<<<<<
  // ---------------------- ADD START 2011/07/23  ----------------->>>>>
  //if isScmReadCheck then //DEL  鄧潘ハン 2012/01/12   Redmine#27954
  if panel_InquiryNumber.Visible then //ADD  鄧潘ハン 2012/01/12   Redmine#27954
  // SFからの問合せ／発注
  begin
      if (salesSlip_disp.AcptAnOdrStatusDisplay = 10) or (salesSlip_disp.AcptAnOdrStatusDisplay = 30) then
       begin
          // 手動回答
          salesSlip_disp.AutoAnswerDivSCM := 1;
       end else
       begin
          // 通常
          salesSlip_disp.AutoAnswerDivSCM := 0;
       end;
  end else
  begin
     salesSlip_disp.InquiryNumber := 0;//ADD  鄧潘ハン 2012/01/12   Redmine#27954
     // SFからの電話、FAX等の問合せ／発注
     // PCCオプション導入時
     if optPcc = 1 then
     begin
       // PCC連携有り
       if (customerInfo.OnlineKindDiv <> 0) then
       begin
         if (salesSlip_disp.AcptAnOdrStatusDisplay = 10) or (salesSlip_disp.AcptAnOdrStatusDisplay = 30) then
         begin
           // 伝票種別「売上or見積」、手動回答
           salesSlip_disp.AutoAnswerDivSCM := 1;
         end else
         begin
           // 伝票種別「売上or見積」以外、通常
           salesSlip_disp.AutoAnswerDivSCM := 0;
         end;
       end else
       // PCC連携無し
       begin
          // 通常
          salesSlip_disp.AutoAnswerDivSCM := 0;
       end;
    end else
    // PCCオプション導入しない
    begin
      // 通常
      salesSlip_disp.AutoAnswerDivSCM := 0;
    end
  end;
  // ----ADD 2013/02/18 wangqx 管理№140---- >>>>>
  // 赤伝際、自動区分は通常で設定する
  if (salesSlip_disp.DebitNoteDiv = 1) then
  begin
    salesSlip_disp.AutoAnswerDivSCM := 0;
  end;
  // ----ADD 2013/02/18 wangqx 管理№140---- <<<<<
  gpxMAHNB01013B_SetSalesSlipByObj(salesSlip_disp);
  // ---------------------- ADD END   2011/07/23  -----------------<<<<<
  //---ADD 2010/11/26 -----------<<<<<
   if salesSlip_disp.AccRecDivCd = 0 then
   begin
     if Trim(salesSlip_disp.CustomerSnm) <> CustomerName.Text then
      begin
        if CustomerCode.Text<> '' then
        begin
          name := CustomerName.Text;
          if Length(name) > 20 then
          begin
            name := Copy(name, 1, 20);
          end;
          salesSlip_disp.CustomerSnm := name;
          salesSlip_disp.CustomerName := name;
          salesSlip_disp.CustomerName2 := '';
        end;
      end else
      begin
          salesSlip_disp.CustomerSnm :=  CustomerName.Text;
          salesSlip_disp.CustomerName :=  CustomerName.Text;
          salesSlip_disp.CustomerName2 := '';
      end;
   gpxMAHNB01013B_SetSalesSlipByObj(salesSlip_disp);
   end;
   //---ADD 2010/11/26 ----------->>>>>

  // --- ADD 2013/04/18 Wakita ---------->>>>>
  // 車輌管理番号が設定されていて備考１が未設定の場合、車輌備考を設定する
  if (TrimRight(CarSlipNote.Text) <> '') and (TrimRight(SlipNote.Text) = '') then
  begin
    // 車輌備考を備考に設定
    SlipNote.Text := CarSlipNote.Text;
    salesSlip_disp.SlipNote := TrimRight(SlipNote.Text);
    gpxMAHNB01013B_SetSalesSlipByObj(salesSlip_disp);
  end;
  // --- ADD 2013/04/18 Wakita ----------<<<<<

  b_CloseFlg := True;

  // DEL 2011/09/21 >>>>
  // ADD 2011/09/17 >>>>
//  Panel1.Enabled := False;
//  pnl_Header.Enabled := False;
//  pnl_CarInfo.Enabled := False;
//  Panel17.Enabled := False;
//  uTabControl_Footer.Enabled := False;
//
//
//  gpxMAHNB01013B_SetAfterSaveData(result, CarMngCode.Text, printSlipFlag, isMakeQR, scmFlg, cmtFlg);
//
//  thread4 := Thread_ReadInitDataFourth.Create;
//
//  while not thread4.abort do
//  begin
//    Application.ProcessMessages;
//    Sleep(100);
//  end;
//
//  if (thread4.abort) then
//  begin
//      thread4.Free;
//  end;
//
//  gpxMAHNB01013B_GetAfterSaveData(result, isMakeQR, scmFlg, cmtFlg);
//
//  Panel1.Enabled := True;
//  pnl_Header.Enabled := True;
//  pnl_CarInfo.Enabled := True;
//  Panel17.Enabled := True;
//  uTabControl_Footer.Enabled := True;
  // ADD 2011/09/17 <<<<
  // DEL 2011/09/21 <<<<

// 2011/01/31 >>>
//  gpxMAHNB01013B_AfterSave(result, CarMngCode.Text, printSlipFlag, isMakeQR, False);
// ----- DEL K2011/09/01 --------------------------->>>>>
//   gpxMAHNB01013B_AfterSave(result, CarMngCode.Text, printSlipFlag, isMakeQR, scmFlg, cmtFlg, slipNote2ErrFlag); // UPD K2011/08/12
// ----- DEL K2011/09/01 ---------------------------<<<<<
// ----- DEL K2011/09/20 --------------------------->>>>>
// ----- ADD K2011/09/01 --------------------------->>>>>
// gpxMAHNB01013B_AfterSave(result, CarMngCode.Text, printSlipFlag, isMakeQR, scmFlg, cmtFlg, slipNote2ErrFlag ,salesDateErrFlag);
// ----- ADD K2011/09/01 ---------------------------<<<<<
// ----- DEL K2011/09/20 ---------------------------<<<<<
// UPD 2013/03/28 SCM障害№192対応 -------------------------------->>>>>
//gpxMAHNB01013B_AfterSave(result, CarMngCode.Text, printSlipFlag, isMakeQR, scmFlg, cmtFlg, slipNote2ErrFlag ,salesDateErrFlag); // ADD K2011/09/22
gpxMAHNB01013B_AfterSave(result, CarMngCode.Text, printSlipFlag, isMakeQR, scmFlg, cmtFlg, slipNote2ErrFlag ,salesDateErrFlag, isSCMSave); // ADD K2011/09/22
// UPD 2013/03/28 SCM障害№192対応 --------------------------------<<<<<

// 2011/01/31 <<<
// ----- ADD K2011/09/01 --------------------------->>>>>
  // ----- ADD K2011/12/09 --------------------------->>>>>
  // ----- UPD T.Miyamoto 2012/11/13 ------------------------------>>>>>
  //if (loginEnterpriseCode = login_EnterpriseCode) then
  if (loginEnterpriseCode = login_EnterpriseCode) or (optDateCtrl <> 0) then
  // ----- UPD T.Miyamoto 2012/11/13 ------------------------------<<<<<
  begin
  // ----- ADD K2011/12/09 ---------------------------<<<<<
      if salesDateErrFlag then
      begin
        if preSalesDate = 0 then
        begin
          if Length(IntToStr(salesSlip_disp.SalesDate)) = 8 then
          begin
            tSalesDate := StrToDateTime(FormatFloat('0000/00/00', salesSlip_disp.SalesDate));
          end else
          begin
            tSalesDate := TicksToTDateTime(salesSlip_disp.SalesDate);
          end;
        end else
        begin
          if Length(IntToStr(preSalesDate)) = 8 then
          begin
            tSalesDate := StrToDateTime(FormatFloat('0000/00/00', preSalesDate));
          end else
          begin
            tSalesDate := TicksToTDateTime(preSalesDate);
          end;
        end;
        SalesDate.SetDate(StrToInt(FormatDateTime('yyyy', tSalesDate)),
        StrToInt(FormatDateTime('mm', tSalesDate)),
        StrToInt(FormatDateTime('dd', tSalesDate)));
        SalesDate.SetFocus;
        preSalesDate := 0;
      end;
  end;//ADD K2011/12/09
// ----- ADD K2011/09/01 ---------------------------<<<<<
// ----- ADD K2011/08/12 --------------------------->>>>>
  // ----- ADD K2011/12/09 --------------------------->>>>>
  if (loginEnterpriseCode = login_EnterpriseCode) then
  begin
  // ----- ADD K2011/12/09 ---------------------------<<<<<
    if slipNote2ErrFlag then
    begin
      SlipNote2.SetFocus;
    end;
  end;// ADD K2011/12/09
// ----- ADD K2011/08/12 ---------------------------<<<<<
  checkBox_MakeQR.Checked := isMakeQR;
  // --- ADD m.suzuki 2010/06/12 ----------<<<<<

  // ---ADD 2011/02/11------------->>>>
  gpxMAHNB01013B_GetErrorFlag(isErrorFlag);
  if isErrorFlag then
  begin
    _isErrorFlag := isErrorFlag;
    newButton.Visible := False; // 新規(F9)
    saveButton.Visible := False; // 確定(F10)
    deleteSlipButton.Visible := False; // 伝票削除(F12)
    returnButton.Visible := False; // 戻る(F2)
    forwardButton.Visible := False; // 進む(F3
    guideButton.Visible := False; // ガイド(F5)
    searchCarChangeButton.Visible := False; // 検索切替(F4)
    ReadSlipButton.Visible := False; // 伝票呼出(X)
    shipmentAddUpButton.Visible := False; // 貸出計上(I)
    acceptAnOrderAddUpButton.Visible := False; // 受注計上(H)
    estimateAddUpButton.Visible := False; // 見積計上(Q)
    SlipHeaderCopyButton.Visible := False; // 見出貼付(F6)
    updateButton.Visible := False; // 更新(V)
    toolRetryButton.Visible := False; // 元に戻す(U)
    toolRedSlipButton.Visible := False; // 赤伝(R)
    toolReturnSlipButton.Visible := False; // 返品(Y)
    toolCopySlipButton.Visible := False; // 伝票複写(P)
    toolSetupButton.Visible := False; // 設定(O)
    toolReNewalbtn.Visible := False; // 最新情報(A)
    toolReferenceListButton.Visible := False; // 問合せ一覧
    toolHisSearchButton.Visible := False; // 履歴検索 // ADD　2018/09/04 譚洪　履歴自動表示の対応
    //toolReplyTransactionButton.Visible := False; // 回答処理
    toolMailButton.Visible := False; // メール
    dateUpdateBottun.Visible := False; // 日付修正  // ADD 2011/08/02
    detailCopyButton.Visible := False; // 明細貼付  // ADD 連番729 2011/08/18
    UOEDataGet.Visible := False;// ADD  黄興貴 K2015/04/29 回答取込パタン追加
    discountAllLineBottun.Visible := False; // 一括値引 //ADD 2013/01/24 鄧潘ハン REDMINE#34141
    allSecInfoButton.Visible := False;  // 在庫情報 // ADD K2015/04/01 高騁 森川部品個別依頼
    DorpdownList.Visible := False;
    // ---UPD 2011/03/07------------->>>>
//    SalesSlipNum.Visible := False; // 伝票番号
//    SalesSlipNumBtn.Visible := False; // 伝票番号BTN
    pnl8.Visible := False;    //伝票番号
    // ---UPD 2011/03/07-------------<<<<
  end;
  // ---ADD 2011/02/11-------------<<<<

  // 保存状態取得
  gpxMAHNB01013B_GetSaveStatus(saveStatus);

  // --- ADD 2010/06/02 ---------->>>>>
  //得意先名称保存
  svCustomerSnm := salesSlip_disp.CustomerSnm;
  // --- ADD 2010/06/02 ----------<<<<<

  // ADD 2013/03/28 SCM障害№192対応 -------------------------------->>>>>
  // SCM受注の続きがある場合（問合せ一覧を元にしています）
  if isSCMSave = 1 then
  begin
     isScmReadCheck := true;
    // 表示明細初期化
    xInitialRow();
    // データ取得・表示終了まで終了ボタン使用不可
    b_CloseFlg := True;

    // ADD 2013/06/06 湯上 2013/06/18配信 システムテスト障害№28 --------->>>>>>>>>>>>>>>>>>>>>>>>>
    gpxMAHNB01013B_GetBeforeSalesSlipNumText(beforeSalesSlipNumText);
    pnl_BeforeSalesSlipNum.Caption := beforeSalesSlipNumText;
    // ADD 2013/06/06 湯上 2013/06/18配信 システムテスト障害№28 ---------<<<<<<<<<<<<<<<<<<<<<<<<<

    // 売上情報
    xSetDisplay();

    // 売上金額変更後発生イベント処理
    xSalesPriceChanged();

    // 車両情報画面表示処理
    salesRowNo := xGetActiveRowSalesRowNo();
    searchType := 0;
    xSetDisplayCarInfo(salesRowNo, searchType);
    gpxMAHNB01012B_GetCarInfoRow(salesRowNo, 1, carInfo);
    if (carInfo.CategoryNo = 0) and (i_searchPartsMode = 1) and (salesSlip_disp.InquiryNumber <> 0) then
    begin
      xChangeSearchMode(0);
      // 車両情報テーブル行の型式指定番号および類別区分番号セット
      gpxMAHNB01012B_SettingCarInfoRowFromCategoryNoAndDesignationNo(salesRowNo, carInfo.ModelDesignationNo, 0);
    end;
    // 車両項目制御
    xSetDisplayDetailInfo(salesRowNo);

    // セルアクティブ時ボタン有効無効コントロール処理
    xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

    // 明細データクリア
    xDeatilClearDisplay();

    gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

    xSetDetailRowFormC(salesDetailArray,-1);

    xSettingGrid();

    if (salesSlip_disp.SalesSlipCd = salesSlipCdDtl_RetGoods) then begin
      xDeleteEmptyRow();
    end else begin
      if (salesSlip_disp.SalesSlipNum <> ctDefaultSalesSlipNum) then begin
        xSettingSalesDetailRowInputRowCount(salesSlip_disp.DetailRowCountForReadSlip);
      end;
    end;

    HNsGrid1.SetFocus;

    HNsGrid1.FocusCell(ctCol_SupplierCd, HNsGrid1.LogicalRow * 2 + 1);

    // 車両情報設定処理
    salesRowNo := xGetActiveRowSalesRowNo();
    xCarInfoFormSetting(salesRowNo);

    xSlipMemoInfoFormSetting(salesRowNo);

    // ガイドボタンツール有効無効設定処理
    xSettingGuideButtonToolEnabled(OldCtrl);
    xSettingVisible();

    //追加情報タブ項目Visible設定
    xSettingAddInfoVisible();

    //伝票備考、伝票備考２、伝票備考３の入力桁数を制御する
    xSetNoteCharCnt();
    xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);
    OldCtrl := Form4.ActiveControl;
    searchCarDiv := false;
    gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv);
    //値引モード
    if(discountAllLineflag)then
    begin
        //「一括値引」→「売上」
        xNotDiscountInitalSet();
    end;

    // 終了ボタン使用可能
    b_CloseFlg := False;

  // フッタタブ位置セット
  uTabControl_Footer.ActivePage := ts1;

  end
  else begin
  // ADD 2013/03/28 SCM障害№192対応 --------------------------------<<<<<

  if result <> -1 then
  begin
       xdoSaveAfter(saveStatus);
  end;

  case result of
    -1:
    begin
      // --- DEL 2010/06/02 ---------->>>>>
//      // 車両情報画面表示処理
//      salesRowNo := xGetActiveRowSalesRowNo();
//      searchType := 0;
//      xSetDisplayCarInfo(salesRowNo, searchType);
//
//      xDeatilClearDisplay();
//      // 明細データ設定
//      gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);
//
//      // --- ADD 2010/05/31 ---------->>>>>
//      xInitialRow;
//      // --- ADD 2010/05/31 ----------<<<<<
//
//      xSetDetailRowFormC(salesDetailArray,-1);
//      xSettingGrid();

     // --- DEL 2010/06/02 ----------<<<<<

     setSaveFlag := -1;     // ADD 2010/06/02
     //----ADD START 2011/07/19------>>>>
     if cmtFlg then
     begin
       gpxMAHNB01013B_GetBeforeSalesSlipNumText(beforeSalesSlipNumText);
       pnl_BeforeSalesSlipNum.Caption := beforeSalesSlipNumText;
       xSetDisplay();
       if (not salesSlipNum.ReadOnly) and (salesSlipNum.Visible) then
       begin
         salesSlipNum.SetFocus;
       end;
     end;
     //---ADD END 2011/07/19---------<<<<
    end;
    0:
    begin
// 2011/01/31 >>>
      if (scmFlg and cmtFlg) then begin
      //>>>2011/03/04
      // SCM情報が存在する伝票は行追加不可
        xDeleteEmptyRow();
      //<<<2011/03/04
      end
      else begin
// 2011/01/31 <<<
        setSaveFlag := 0;      // ADD 2010/06/02

        xSetDisplay();

        xDeatilClearDisplay();
        if (i_searchPartsMode = 2) then
        begin
          xSettingFocus2('GoodsNoTP');
        end else
        if (i_searchPartsMode = 1) then
        begin
          xSettingFocus2('BLGoodsCodeTP');
        end;
        xChangeSearchModeReflect();

        // --- ADD 2010/06/02 ---------->>>>>
        //得意先名称セット
        CustomerName.DataText := svCustomerSnm;
        // --- ADD 2010/06/02 ----------<<<<<

        // --- UPD 2010/05/31 ---------->>>>>
        //xSetDisplayDetailInfo();
        xSetDisplayDetailInfo(salesRowNo);
        // --- UPD 2010/05/31 ----------<<<<<

        //>>>2010/11/02
        searchCarDiv := false;
        gpxMAHNB01012B_SetGetSearchCarDiv(1, searchCarDiv);
        //<<<2010/11/02
      end;  // 2011/01/31
      // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
      //値引モード
      if(discountAllLineflag)then
      begin
         //一括値引Grid初期化
         xDiscountGridInitial();
      end;
      // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
    end;
    1:
    begin
     // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
     //値引モード
     if(discountAllLineflag)then
     begin
        //「一括値引」→「売上」
        xNotDiscountInitalSet();
     end;
     // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<
     setSaveFlag := 1;    // ADD 2010/06/02

     xSetDisplay();
     xDeatilClearDisplay();
     // --- UPD 2010/05/31 ---------->>>>>
     //xSetDisplayDetailInfo();
     xSetDisplayDetailInfo(salesRowNo);
     // --- UPD 2010/05/31 ----------<<<<<
     xChangeSearchModeReflect();
     //追加情報タブ項目Visible設定
     xSettingAddInfoVisible();

     // --- ADD 2010/06/02 ---------->>>>>
     InitialSetFocusTick();
     // --- ADD 2010/06/02 ----------<<<<<
    end;
  end;

  // ADD 2013/03/28 SCM障害№192対応 -------------------------------->>>>>
    isScmReadCheck := false;
  end;
  // ADD 2013/03/28 SCM障害№192対応 --------------------------------<<<<<
 {-----DEL START 2011/07/19-------->>>>
  //>>>2011/03/04
  // SCM情報が存在する伝票は行追加不可
  if (scmFlg and cmtFlg) then begin
    xDeleteEmptyRow();
  end;
  //<<<2011/03/04
  -----DEL END 2011/07/19--------<<<<}

  //>>>2011/05/24
  // ファンクション入力制御
  xActiveCellButtonEnabledControl(xGridColIndexToName(HNsGrid1.Row,HNsGrid1.Col),HNsGrid1.LogicalRow);
  //<<<2011/05/24

  b_CloseFlg := False;
end;

// *************************************************************************
// 管理番号ガイド表示後の処理
// *************************************************************************
procedure TForm4.xAfterCarMngNoGuideReturn(paraStatus:Integer; selectedInfo:TCarMangInputExtraInfo; inputflag:Integer);
var
  salesRowNo, status, searchType : Integer;
  returnFlag, clearCarInfoFlag : Boolean;
  control : TWinControl;
  vk_code: Word;
begin
  salesRowNo := xGetActiveRowSalesRowNo();
  //管理番号でのガイド表示設定
  status := gpxMAHNB01013B_AfterCarMngNoGuideReturn(paraStatus, selectedInfo, inputflag, salesRowNo, CarMngCode.Text, returnFlag, clearCarInfoFlag);

  if returnFlag then
  begin
    //ガイド表示後のフォーカス制御
    if ('新規登録' = selectedInfo.CarMngCode) then
    begin
        ModelDesignationNo.setFocus;
    end else
    begin

      // 得意先コード
      // --- ADD 2015/06/03 T.Nishi ---------->>>>>
      //Customercode.SetInt内で再算出処理が行われるが、この処理が不十分（再計算までされない）
      //Customercode.SetInt内で処理が行われないようにcustomerCodeExitFlgをfalseにする。
      //再算出処理は後続のxForwardNextFocus()関数で行う。
      customerCodeExitFlg := False;
      // --- ADD 2015/06/03 T.Nishi ----------<<<<<
      CustomerCode.SetInt(selectedInfo.CustomerCode);

      // 次の項目へフォーカス移動
      control := CustomerCode;
      vk_code := VK_RETURN;
      xForwardNextFocus(control, vk_code);

      CarMngCode.DataText := selectedInfo.CarMngCode;
      // 追加情報タブ項目Visible設定
      xSettingAddInfoVisible();

      // 型式指定番号
      ModelDesignationNo.SetInt(selectedInfo.ModelDesignationNo);
      // 類別番号
      CategoryNo.SetInt(selectedInfo.CategoryNo);
      searchType := 0;

      // 車両情報画面表示処理
      xSetDisplayCarInfo(salesRowNo, searchType);

//      // 追加情報タブ項目Visible設定
//      xSettingAddInfoVisible();

      // 車種変更ボタンVisible設定
      xSettingChangeCarInfoVisible();

      // --- UPD 2010/05/31 ---------->>>>>
      if (status = 1) then
      begin
         // --- UPD 2010/06/26 ---------->>>>>
//        if (xGetNextCtrlAfterCarSearch <> nil) then
//        begin
//          xGetNextCtrlAfterCarSearch.SetFocus;
//        end;
        if (xGetNextCtrlAfterCarSearch(control) <> nil) then
        begin
          xGetNextCtrlAfterCarSearch(control).SetFocus;
        end;
        // --- UPD 2010/06/26 ----------<<<<<
      end else if (status = 0) then
      begin
        ModelDesignationNo.SetFocus;
      end;
      // --- UPD 2010/05/31 ----------<<<<<

    end;
  end;

  if clearCarInfoFlag then
  begin
    // 画面クリア処理（車両情報）
    xClearDisplayCarInfo();
  end;

end;

// *************************************************************************
// 次の項目へフォーカス移動
// *************************************************************************
procedure TForm4.xForwardNextFocus(control : TWinControl; vk_code: Integer );
begin
  // 次の項目へフォーカス移動
// --- UPD 2014/06/17 T.Miyamoto ------------------------------>>>>>
//  ArrowKeyControl1ChangeFocus(control, control, vk_code);
//  if control <> nil then control.SetFocus;
  isSaveFlg := False;
  ArrowKeyControl1ChangeFocus(control, control, vk_code);
  if (isSaveFlg = False) and (control <> nil) then control.SetFocus;
// --- UPD 2014/06/17 T.Miyamoto ------------------------------>>>>>
end;

// *************************************************************************
// 伝票削除
// *************************************************************************
procedure TForm4.xDeleteSalesSlip();
var
  status, searchType, salesRowNo : Integer;
  NextCtrl: TWinControl;
  beforeSalesSlipNumText : WideString;
  salesDetailArray: TSalesSlipInputCustomArrayA2;
  carInfo: TCarInfo;
  check:Boolean;
  outDialogResult, outStatus: Integer;
begin
  //伝票削除処理
  gpxMAHNB01013B_Delete(check, outDialogResult, outStatus);

  gpxMAHNB01013B_GetSalesAllDetailDataTable(salesDetailArray);

  xSetDetailRowFormC(salesDetailArray,-1);
  if (not check) then
    //指定フォーカス設定処理
    SetControlFocus();

  // 6: DialogResult.Yes
  if (check and (outDialogResult = 6)) then
  begin
    case outStatus of
      0:
      begin
        gpxMAHNB01013B_GetBeforeSalesSlipNumText(beforeSalesSlipNumText);
        pnl_BeforeSalesSlipNum.Caption := beforeSalesSlipNumText;

        // 画面初期化処理
        // ----- UPD 2010/05/21 ------------>>>>>
        //xClear(False, False, False, False, False);
        //xClear(False, False, False, False, False, False);
        //xClear(False, False, False, False, False, False, False);//ADD 2010/06/02
        // ----- UPD 2010/05/21 ------------>>>>>
        xClear(False, False, False, False, False, False, False, 0);
//<<<2010/05/30
        InitialSetFocusTick();
      end;
      // 排他（別端末更新済）
      800:
      begin
        // 担当者にフォーカスをセット（一時的に）
        salesEmployeeCd.setFocus;

        gpxMAHNB01013B_GetStatus(status);
        if (status = 0) then
        begin
          xSetDisplay();
          gpxMAHNB01012B_GetSalesSlip(salesSlip_disp);
          if ((salesSlip_disp.InputMode = 3) or (salesSlip_disp.InputMode = 4)
              or (salesSlip_disp.InputMode = 5)) then
            xDeleteEmptyRow;

          // 明細グリッド設定処理
          xsettingGrid;
        end;

        // 明細グリッドにフォーカスをセット
        Panel15.setFocus;
      end;
      // 排他（別端末物理削除済）
      801:
      begin
        // 担当者にフォーカスをセット（一時的に）
        salesEmployeeCd.setFocus;

        // 画面初期化処理Clear（start）
        xSetDisplay();

        // 車両情報画面表示処理
        salesRowNo := xGetActiveRowSalesRowNo();
        searchType := 0;
        xSetDisplayCarInfo(salesRowNo, searchType);

        // 車両項目制御
        // --- UPD 2010/05/31 ---------->>>>>
        //xSetDisplayDetailInfo();
        xSetDisplayDetailInfo(salesRowNo);
        // --- UPD 2010/05/31 ----------<<<<<

        // 車両情報設定処理
        xCarInfoFormSetting(salesRowNo);

        // セルアクティブ時ボタン有効無効コントロール処理
        xActiveCellButtonEnabledControl('',HNsGrid1.LogicalRow);

        // 明細データクリア
        xDeatilClearDisplay();
        // 画面初期化処理Clear（end）

        InitialSetFocusTick();
      end;
    end;
  end;

end;

function TForm4.xChangeAcptAnOdrStatus(var salesSlip: TSalesSlip; isCache: Boolean) : Boolean;
var
  changeAcptAnOdrStatus, formatFlg : Boolean;
  svCode, code: Integer;
  exist, clearDisplayCarInfo, clearAddUpInfo, checkAcptAnOdrStatus : boolean;
begin
  changeAcptAnOdrStatus := True;
  formatFlg := True;
  svCode := salesSlip.AcptAnOdrStatusDisplay;

  code := AcptAnOdrStatusDisplayComBo.SelCode;

  if code = -1 then
  begin
    changeAcptAnOdrStatus := false;
  end else if salesSlip.AcptAnOdrStatusDisplay <> code then
  begin
    gpxMAHNB01012B_ExistSalesDetail(exist);

    if exist then
    begin
      formatFlg := False;
      gpxMAHNB01012B_ChangeCheckAcptAnOdrStatus(code, salesSlip, clearDisplayCarInfo,clearAddUpInfo, checkAcptAnOdrStatus);

      if not checkAcptAnOdrStatus then
      begin
        changeAcptAnOdrStatus := false;
      end else
      begin
        if clearDisplayCarInfo then
        begin
          xDeatilClearTable();
          xDeatilClearDisplay();
          xClearDisplayCarInfo();
        end;

        if clearAddUpInfo then
        begin

        end;
      end;
    end;
  end  else
  begin
    changeAcptAnOdrStatus := false;
  end;

  if changeAcptAnOdrStatus then
  begin
    // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
    //値引モード
    if discountAllLineflag then
    begin
       xDeatilClearTable();
       xDeatilClearDisplay();
       //「一括値引」→「売上」
       xNotDiscountInitalSet();
    end;
    // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
    gpxMAHNB01012B_ChangeAcptAnOdrStatus(code, salesSlip, svCode);

    // 売上金額変更後発生イベント処理
    xSalesPriceChanged();
    // 明細部変更後発生イベント処理
    xSalesSlipDetailInput_DetailChanged(xGetActiveRowSalesRowNo());

    // フッタタブ位置セット
    uTabControl_Footer.ActivePage := ts1;

    // 売上商品区分コンボエディタアイテム設定処理
    xSetItemtSalesGoodsCd(code, formatFlg);
    xSetItemtSalesSlipCd(salesSlip, code, formatFlg);

    // 売上商品区分を取得
    if SalesGoodsCdComBo.SelCode = -1 then
    begin
      salesSlip.SalesGoodsCd := 0;
    end else
    begin
      salesSlip.SalesGoodsCd := SalesGoodsCdComBo.SelCode;
    end;

    if isCache then
    begin
      // 売上データキャッシュ処理
      gpxMAHNB01012B_Cache(salesSlip);
    end;
  end;

  // 売上データクラス→画面格納処理
  SetDisplayHeaderFooterInfo(salesSlip);

  //画面表示処理（売上金額合計情報）
  xSetDisplayTotalPriceInfo(salesSlip);
end;

//// *************************************************************************
//// 部品検索切替反映処理
//// *************************************************************************
//procedure TForm4.xChangeSearchModeReflect(searchPartsModeProperty : Integer);
//begin
//    // 部品検索切替反映処理
//    if searchPartsModeProperty = 1 then
//    begin
//      SearchMode.Caption := ctSearchMode_BLSearch;
//    end else if searchPartsModeProperty = 2 then
//    begin
//      SearchMode.Caption := ctSearchMode_GoodsNoSearch;
//    end;
//
//    // 売上データクラス→画面格納処理
//    xSetDisplay();
//    // 明細グリッド設定処理
//    xSettingGrid();
//    // todo
//    // 明細フォーカス位置設定
////    if Panel15.Focused then
////    begin
////      if searchPartsModeProperty = 2 then
////
////    end;
//
//    // todo
//    // 移動先テーブル再設定処理
//
//end;

// *************************************************************************
// 数組の設定
// *************************************************************************
procedure TForm4.xSetConstArray();
begin
    toolManagerKeys[0] := 'UltraToolbar_MainMenu';
    toolManagerKeys[1] := 'UltraToolbar_Standard';

    toolbarKeys[0, 0] := 'PopupMenuTool_Files';
    toolbarKeys[0, 1] := 'PopupMenuTool_Edits';
    toolbarKeys[0, 2] := 'PopupMenuTool_Tools';
    toolbarKeys[0, 3] := 'LabelTool_Dummy';
    toolbarKeys[0, 4] := 'LabelTool_LoginSectionTitle';
    toolbarKeys[0, 5] := 'LabelTool_LoginSectionName';
    toolbarKeys[0, 6] := 'LabelTool_LoginTitle';
    toolbarKeys[0, 7] := 'LabelTool_LoginName';
// 2011/01/31 >>>
//    toolbarKeys[1, 0] := 'ButtonTool_Close';
//    toolbarKeys[1, 1] := 'ButtonTool_New';
//    toolbarKeys[1, 2] := 'ButtonTool_Save';
//    toolbarKeys[1, 3] := 'ButtonTool_DeleteSlip';
//    toolbarKeys[1, 4] := 'ButtonTool_Return';
//    toolbarKeys[1, 5] := 'ButtonTool_Forward';
//    toolbarKeys[1, 6] := 'ButtonTool_Guide';
//    toolbarKeys[1, 7] := 'ButtonTool_SearchChange';
//    toolbarKeys[1, 8] := 'ButtonTool_ReadSlip';
//    toolbarKeys[1, 9] := 'ButtonTool_ShipmentAddUp';
//    toolbarKeys[1, 10] := 'ButtonTool_AcceptAnOrderAddUp';
//    toolbarKeys[1, 11] := 'ButtonTool_EstimateAddUp';
//    toolbarKeys[1, 12] := 'ButtonTool_SlipHeaderCopy';
//    toolbarKeys[1, 13] := 'ButtonTool_Update';
//    toolbarKeys[1, 14] := 'ButtonTool_Retry';
//    toolbarKeys[1, 15] := 'ButtonTool_RedSlip';
//    toolbarKeys[1, 16] := 'ButtonTool_ReturnSlip';
//    toolbarKeys[1, 17] := 'ButtonTool_CopySlip';
//    toolbarKeys[1, 18] := 'ButtonTool_Setup';
//    toolbarKeys[1, 19] := 'ButtonTool_ReNewal';
//    // --- ADD m.suzuki 2010/06/12 ---------->>>>>
//    toolbarKeys[1, 20] := 'ButtonTool_ReferenceList';
//    // --- ADD m.suzuki 2010/06/12 ----------<<<<<
//    //---ADD 2010/07/06---------->>>>>
//    toolbarKeys[1, 21] := 'ButtonTool_ReplyTransaction';
//    toolbarKeys[1, 22] := 'ButtonTool_Mail';
//    //---ADD 2010/07/06----------<<<<<

    toolbarKeys[1, ctToolButtonIndex_Close] := 'ButtonTool_Close';
    toolbarKeys[1, ctToolButtonIndex_New] := 'ButtonTool_New';
    toolbarKeys[1, ctToolButtonIndex_Save] := 'ButtonTool_Save';
    toolbarKeys[1, ctToolButtonIndex_DeleteSlip] := 'ButtonTool_DeleteSlip';
    toolbarKeys[1, ctToolButtonIndex_Return] := 'ButtonTool_Return';
    toolbarKeys[1, ctToolButtonIndex_Forward] := 'ButtonTool_Forward';
    toolbarKeys[1, ctToolButtonIndex_Guide] := 'ButtonTool_Guide';
    toolbarKeys[1, ctToolButtonIndex_SearchCarChange] := 'ButtonTool_SearchChange';
    toolbarKeys[1, ctToolButtonIndex_ReadSlip] := 'ButtonTool_ReadSlip';
    toolbarKeys[1, ctToolButtonIndex_ShipmentAddUp] := 'ButtonTool_ShipmentAddUp';
    toolbarKeys[1, ctToolButtonIndex_AcceptAnOrderAddUp] := 'ButtonTool_AcceptAnOrderAddUp';
    toolbarKeys[1, ctToolButtonIndex_EstimateAddUp] := 'ButtonTool_EstimateAddUp';
    toolbarKeys[1, ctToolButtonIndex_SlipHeaderCopy] := 'ButtonTool_SlipHeaderCopy';
    toolbarKeys[1, ctToolButtonIndex_Update] := 'ButtonTool_Update';
    toolbarKeys[1, ctToolButtonIndex_Retry] := 'ButtonTool_Retry';
    toolbarKeys[1, ctToolButtonIndex_RedSlip] := 'ButtonTool_RedSlip';
    toolbarKeys[1, ctToolButtonIndex_ReturnSlip] := 'ButtonTool_ReturnSlip';
    toolbarKeys[1, ctToolButtonIndex_CopySlip] := 'ButtonTool_CopySlip';
    toolbarKeys[1, ctToolButtonIndex_Setup] := 'ButtonTool_Setup';
    toolbarKeys[1, ctToolButtonIndex_ReNewal] := 'ButtonTool_ReNewal';
    toolbarKeys[1, ctToolButtonIndex_ReferenceList] := 'ButtonTool_ReferenceList';
    toolbarKeys[1, ctToolButtonIndex_Mail] := 'ButtonTool_Mail';
    toolbarKeys[1, ctToolButtonIndex_DateUpdate] := 'ButtonTool_DateUpdate';   // ADD 2011/08/02
    toolbarKeys[1, ctToolButtonIndex_DetailCopy] := 'ButtonTool_DetailCopy';   // ADD 連番729 2011/08/18
    toolbarKeys[1, ctToolButtonIndex_DiscountAllLine] := 'ButtonTool_DiscountAllLine'; // ADD 2013/01/24 鄧潘ハン REDMINE#34141
    toolbarKeys[1, ctToolButtonIndex_AllSecInfo] := 'ButtonTool_AllSecInfo'; // ADD K2015/04/01 高騁 森川部品個別依頼
    toolbarKeys[1, ctToolButtonIndex_UOEDataGet] := 'ButtonTool_UOEDataGet'; // ADD  黄興貴 K2015/04/29 回答取込パタン追加
    toolbarKeys[1, ctToolButtonIndex_HisSearch] := 'ButtonTool_HisSearch';  // ADD　2018/09/04 譚洪　履歴自動表示の対応
    toolbarKeys[1, ctToolButtonIndex_GetTaxRate] := 'ButtonTool_GetTaxRate';// ADD　譚洪 2020/02/24 PMKOBETSU-2912の対応
    toolbarKeys[1, ctToolButtonIndex_EBooks] := 'ButtonTool_EBooks'; // 電帳// ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応
// 2011/01/31 <<<

    // todo
    toolManagerButtons[0] := nil;
    // todo end
    toolManagerButtons[1] := tlb1;

    // todo
    tToolButtons[0, 0] := nil;
    tToolButtons[0, 1] := nil;
    tToolButtons[0, 2] := nil;
    tToolButtons[0, 3] := nil;
    tToolButtons[0, 4] := nil;
    tToolButtons[0, 5] := nil;
    tToolButtons[0, 6] := nil;
    tToolButtons[0, 7] := nil;
    // todo end
// 2011/01/31 >>>
//    tToolButtons[1, 0] := closeButton;
//    tToolButtons[1, 1] := newButton;
//    tToolButtons[1, 2] := saveButton;
//    tToolButtons[1, 3] := deleteSlipButton;
//    tToolButtons[1, 4] := returnButton;
//    tToolButtons[1, 5] := forwardButton;
//    tToolButtons[1, 6] := guideButton;
//    tToolButtons[1, 7] := searchCarChangeButton;
//    tToolButtons[1, 8] := ReadSlipButton;
//    tToolButtons[1, 9] := shipmentAddUpButton;
//    tToolButtons[1, 10] := acceptAnOrderAddUpButton;
//    tToolButtons[1, 11] := estimateAddUpButton;
//    tToolButtons[1, 12] := SlipHeaderCopyButton;
//    tToolButtons[1, 13] := updateButton;
//    tToolButtons[1, 14] := toolRetryButton;
//    tToolButtons[1, 15] := toolRedSlipButton;
//    tToolButtons[1, 16] := toolReturnSlipButton;
//    tToolButtons[1, 17] := toolCopySlipButton;
//    tToolButtons[1, 18] := toolSetupButton;
//    tToolButtons[1, 19] := toolReNewalbtn;
//    // --- ADD m.suzuki 2010/06/12 ---------->>>>>
//    tToolButtons[1, 20] := toolReferenceListButton;
//    // --- ADD m.suzuki 2010/06/12 ----------<<<<<
//    //---ADD 2010/07/06---------->>>>>
//    tToolButtons[1, 21] := toolReplyTransactionButton;
//    tToolButtons[1, 22] := toolMailButton;
//    //---ADD 2010/07/06----------<<<<<

//    //---ADD 2010/07/06---------->>>>>
//    tToolButtonsVisible[0] := True;  // 終了(F1)
//    tToolButtonsVisible[1] := True;  // 新規(F9)
//    tToolButtonsVisible[2] := True;  // 確定(F10)
//    tToolButtonsVisible[3] := True;  // 伝票削除(F12)
//    tToolButtonsVisible[4] := True;  // 戻る(F2)
//    tToolButtonsVisible[5] := True;  // 進む(F3)
//    tToolButtonsVisible[6] := True;  // ガイド(F5)
//    tToolButtonsVisible[7] := True;  // 検索切替(F4)
//    tToolButtonsVisible[8] := True;  // 伝票呼出(X)
//    tToolButtonsVisible[9] := True;  // 貸出計上(I)
//    tToolButtonsVisible[10] := True;  // 受注計上(H)
//    tToolButtonsVisible[11] := True;  // 見積計上(Q)
//    tToolButtonsVisible[12] := True;  // 見出貼付(F6)
//    tToolButtonsVisible[13] := True;  // 更新(V)
//    tToolButtonsVisible[14] := True;  // 元に戻す(U)
//    tToolButtonsVisible[15] := True;  // 赤伝(R)
//    tToolButtonsVisible[16] := True;  // 返品(Y)
//    tToolButtonsVisible[17] := True;  // 伝票複写(P)
//    tToolButtonsVisible[18] := True;  // 設定(O)
//    tToolButtonsVisible[19] := True;  // 最新情報(A)
//    tToolButtonsVisible[20] := True;  // 問合せ一覧
//    tToolButtonsVisible[21] := True;  // 回答処理
//    tToolButtonsVisible[22] := True;  // メール
//    //---ADD 2010/07/06----------<<<<<


    tToolButtons[1, ctToolButtonIndex_Close] := closeButton;
    tToolButtons[1, ctToolButtonIndex_New] := newButton;
    tToolButtons[1, ctToolButtonIndex_Save] := saveButton;
    tToolButtons[1, ctToolButtonIndex_DeleteSlip] := deleteSlipButton;
    tToolButtons[1, ctToolButtonIndex_Return] := returnButton;
    tToolButtons[1, ctToolButtonIndex_Forward] := forwardButton;
    tToolButtons[1, ctToolButtonIndex_Guide] := guideButton;
    tToolButtons[1, ctToolButtonIndex_SearchCarChange] := searchCarChangeButton;
    tToolButtons[1, ctToolButtonIndex_ReadSlip] := ReadSlipButton;
    tToolButtons[1, ctToolButtonIndex_ShipmentAddUp] := shipmentAddUpButton;
    tToolButtons[1, ctToolButtonIndex_AcceptAnOrderAddUp] := acceptAnOrderAddUpButton;
    tToolButtons[1, ctToolButtonIndex_EstimateAddUp] := estimateAddUpButton;
    tToolButtons[1, ctToolButtonIndex_SlipHeaderCopy] := SlipHeaderCopyButton;
    tToolButtons[1, ctToolButtonIndex_Update] := updateButton;
    tToolButtons[1, ctToolButtonIndex_Retry] := toolRetryButton;
    tToolButtons[1, ctToolButtonIndex_RedSlip] := toolRedSlipButton;
    tToolButtons[1, ctToolButtonIndex_ReturnSlip] := toolReturnSlipButton;
    tToolButtons[1, ctToolButtonIndex_CopySlip] := toolCopySlipButton;
    tToolButtons[1, ctToolButtonIndex_Setup] := toolSetupButton;
    tToolButtons[1, ctToolButtonIndex_ReNewal] := toolReNewalbtn;
    tToolButtons[1, ctToolButtonIndex_ReferenceList] := toolReferenceListButton;
    tToolButtons[1, ctToolButtonIndex_Mail] := toolMailButton;
    tToolButtons[1, ctToolButtonIndex_DateUpdate] := dateUpdateBottun;    // ADD 2011/08/02
    tToolButtons[1, ctToolButtonIndex_DetailCopy] := detailCopyButton;    // ADD 連番729 2011/08/18
    tToolButtons[1, ctToolButtonIndex_UOEDataGet] := UOEDataGet;// ADD  黄興貴 K2015/04/29 回答取込パタン追加
    tToolButtons[1, ctToolButtonIndex_DiscountAllLine] := discountAllLineBottun;  // ADD 2013/01/24 鄧潘ハン REDMINE#34141
    tToolButtons[1, ctToolButtonIndex_AllSecInfo] := allSecInfoButton; // ADD K2015/04/01 高騁 森川部品個別依頼
    tToolButtons[1, ctToolButtonIndex_HisSearch] := toolHisSearchButton;// 履歴検索 // ADD　2018/09/04 譚洪　履歴自動表示の対応
    tToolButtons[1, ctToolButtonIndex_GetTaxRate] := toolGetTaxRateButton;// 税率入力 // ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応
    tToolButtons[1, ctToolButtonIndex_EBooks] := toolEBooksButton; // 電帳// ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応
    //---ADD 2010/07/06---------->>>>>
    tToolButtonsVisible[ctToolButtonIndex_Close] := True;  // 終了(F1)
    tToolButtonsVisible[ctToolButtonIndex_New] := True;  // 新規(F9)
    tToolButtonsVisible[ctToolButtonIndex_Save] := True;  // 確定(F10)
    tToolButtonsVisible[ctToolButtonIndex_DeleteSlip] := True;  // 伝票削除(F12)
    tToolButtonsVisible[ctToolButtonIndex_Return] := True;  // 戻る(F2)
    tToolButtonsVisible[ctToolButtonIndex_Forward] := True;  // 進む(F3)
    tToolButtonsVisible[ctToolButtonIndex_Guide] := True;  // ガイド(F5)
    tToolButtonsVisible[ctToolButtonIndex_SearchCarChange] := True;  // 検索切替(F4)
    tToolButtonsVisible[ctToolButtonIndex_ReadSlip] := True;  // 伝票呼出(X)
    tToolButtonsVisible[ctToolButtonIndex_ShipmentAddUp] := True;  // 貸出計上(I)
    tToolButtonsVisible[ctToolButtonIndex_AcceptAnOrderAddUp] := True;  // 受注計上(H)
    tToolButtonsVisible[ctToolButtonIndex_EstimateAddUp] := True;  // 見積計上(Q)
    tToolButtonsVisible[ctToolButtonIndex_SlipHeaderCopy] := True;  // 見出貼付(F6)
    tToolButtonsVisible[ctToolButtonIndex_Update] := True;  // 更新(V)
    tToolButtonsVisible[ctToolButtonIndex_Retry] := True;  // 元に戻す(U)
    // --- ADD 2013/02/18 Wakita ---------->>>>>
    if (b_redSlipVisible) then
    begin
    // --- ADD 2013/02/18 Wakita ----------<<<<<
    tToolButtonsVisible[ctToolButtonIndex_RedSlip] := True;  // 赤伝(R)
    tToolButtonsVisible[ctToolButtonIndex_ReturnSlip] := True;  // 返品(Y)
    // --- ADD 2013/02/18 Wakita ---------->>>>>
    end
    else
    begin
    tToolButtonsVisible[ctToolButtonIndex_RedSlip] := False;  // 赤伝(R)
    tToolButtonsVisible[ctToolButtonIndex_ReturnSlip] := False;  // 返品(Y)
    end;
    // --- ADD 2013/02/18 Wakita ----------<<<<<
    tToolButtonsVisible[ctToolButtonIndex_CopySlip] := True;  // 伝票複写(P)
    tToolButtonsVisible[ctToolButtonIndex_Setup] := True;  // 設定(O)
    tToolButtonsVisible[ctToolButtonIndex_ReNewal] := True;  // 最新情報(A)
    tToolButtonsVisible[ctToolButtonIndex_ReferenceList] := True;  // 問合せ一覧
    tToolButtonsVisible[ctToolButtonIndex_Mail] := True;  // メール
    tToolButtonsVisible[ctToolButtonIndex_DateUpdate] := True;  // 日付修正  // ADD 2011/08/02
    tToolButtonsVisible[ctToolButtonIndex_DetailCopy] := True;  // 明細貼付  // ADD 連番729 2011/08/18
    tToolButtonsVisible[ctToolButtonIndex_DiscountAllLine] := True;  // ADD 2013/01/24 鄧潘ハン REDMINE#34141
    tToolButtonsVisible[ctToolButtonIndex_AllSecInfo] := True; // 在庫情報 // ADD K2015/04/01 高騁 森川部品個別依頼
    tToolButtonsVisible[ctToolButtonIndex_UOEDataGet] := True; // ADD  黄興貴 K2015/04/29 回答取込パタン追加
    tToolButtonsVisible[ctToolButtonIndex_HisSearch] := True;  // 履歴検索 // ADD　2018/09/04 譚洪　履歴自動表示の対応
    tToolButtonsVisible[ctToolButtonIndex_GetTaxRate] := True;  // 税率入力 // ADD 譚洪 22020/02/24 PMKOBETSU-2912の対応
    tToolButtonsVisible[ctToolButtonIndex_EBooks] := True;   // 電帳// ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応
// 2011/01/31 <<<

end;

// ADD 2010/08/13  --- >>>>
// *************************************************************************
// 数組の設定
// *************************************************************************
procedure TForm4.xSetBitbtnConstArray();
begin

    bitButtons[0] := btnInputStockInfo;
    bitButtons[1] := btnInputOrderInfo;

end;
// ADD 2010/08/13 ---- <<<<

// *************************************************************************
// ツールバーマネージャーのカスタマイズ情報のロード
// *************************************************************************
procedure TForm4.xLoadToolManagerCustomizeInfo();
var
  toolMenuCustomizeSettingNotNull, toolBarVisible, toolButtonCustomizeSettingNotNull : Boolean;
  i, j, toolBarDockedRow, toolBarDockedColumn, toolBarDockedPosition, toolBarCustomizedVisible : Integer;
begin
  xSetConstArray();
  i := 1;
  while i < Length(toolManagerKeys) do

  begin
    gpxMAHNB01013B_setToolMenuCustomizeSetting(toolManagerKeys[i]);
//    gpxMAHNB01013B_getToolMenuCustomizeSetting(toolMenuCustomizeSettingNotNull, toolBarVisible, toolBarDockedRow, toolBarDockedColumn, toolBarDockedPosition);
//    if toolMenuCustomizeSettingNotNull then
//    begin
//      toolManagerButtons[i].Visible := toolBarVisible;
        //            toolBar.DockedRow = toolMenuCustomizeSetting.DockedRow;
        //            toolBar.DockedColumn = toolMenuCustomizeSetting.DockedColumn;
        //            toolBar.DockedPosition = (Infragistics.Win.UltraWinToolbars.DockedPosition)toolMenuCustomizeSetting.DockedPosition;
      j := 0;
      while j < Length(toolbarKeys[i]) do
      begin
        if toolbarKeys[i, j] <> '' then
        begin
          gpxMAHNB01013B_setToolButtonCustomizeSetting(toolbarKeys[i, j]);
          gpxMAHNB01013B_getToolButtonCustomizeSetting(toolButtonCustomizeSettingNotNull, toolBarCustomizedVisible);
          if toolButtonCustomizeSettingNotNull then
          begin
            if toolBarCustomizedVisible = 2 then
            begin
              if tToolButtons[i, j] is TToolButton then
              begin
                TToolButton(tToolButtons[i, j]).Visible := False;
                tToolButtonsVisible[j] := False;
                // ------  ADD K2015/04/01 高騁 森川部品個別依頼------->>>>>
                if (TToolButton(tToolButtons[i, j]) = allSecInfoButton) and isSetupClick then
                begin
                   xAllSecStockInfoProc(HNsGrid1.LogicalRow,True,True);
                end;
                // ------  ADD K2015/04/01 高騁 森川部品個別依頼-------<<<<<
              end
              else
              begin
                TMenuItem(tToolButtons[i, j]).Visible := False;
                // ------  ADD K2015/04/01 高騁 森川部品個別依頼------->>>>>
                if (TMenuItem(tToolButtons[i, j]) = toolMenu_allSecInfoBtn) and isSetupClick then
                begin
                   xAllSecStockInfoProc(HNsGrid1.LogicalRow,True,True);
                end;
                // ------  ADD K2015/04/01 高騁 森川部品個別依頼-------<<<<<
              end;
            end else
            begin
              if tToolButtons[i, j] is TToolButton then
              begin
                TToolButton(tToolButtons[i, j]).Visible := True;
                tToolButtonsVisible[j] := True;
              end
              else
              begin
                TMenuItem(tToolButtons[i, j]).Visible := True;
              end;
            end;
          end;
          j := j + 1;
          Continue;
        end else
        begin
          Break;
        end;

      end;
//    end;
    i := i + 1;
    Continue;
  end;

end;

// ADD 2010/08/13 ---- >>>>
// *************************************************************************
// Bitbtnのカスタマイズ情報のロード
// *************************************************************************
procedure TForm4.xLoadBitbtnCustomizeInfo();
var
  toolMenuCustomizeSettingNotNull, toolBarVisible, toolButtonCustomizeSettingNotNull : Boolean;
  i, bitButtonsVisible : Integer;
begin

  xSetBitbtnConstArray();

  i := 0;
  while i < Length(bitButtons) do

  begin
    gpxMAHNB01013B_GetBitButtonCustomizeSetting(bitButtons[i].Name, bitButtonsVisible);

     // ------DEL 2010/10/21-------->>>>>
//    if (((bitButtons[i].Name = 'btnInputStockInfo') and (not inputStockFlg))
//        or ((bitButtons[i].Name = 'btnInputOrderInfo') and (not inputOrderFlg))) then
//    begin
//       Break;
//    end;
      // ------DEL 2010/10/21--------<<<<<
    if (bitButtonsVisible = 1) then
    begin
       bitButtons[i].Visible := True;
    end
    else if (bitButtonsVisible = 2) then

    begin
       bitButtons[i].Visible := False;
    end;
    // ------ADD 2010/10/21-------->>>>>
    if ((bitButtons[i].Name = 'btnInputStockInfo') and (not inputStockFlg)) then
    begin
      bitButtons[i].Visible := False;
    end
    else if ((bitButtons[i].Name = 'btnInputOrderInfo') and (not inputOrderFlg)) then
    begin
      bitButtons[i].Visible := False;
    end;
    // ------ADD 2010/10/21--------<<<<<
    i := i + 1;
    Continue;
  end;
end;
// ADD 2010/08/13 ---- <<<<

// *************************************************************************
// ツールバーマネージャーのカスタマイズ情報の保存
// *************************************************************************
procedure TForm4.xSaveToolManagerCustomizeInfo();
var
  i, j : Integer;
  key: string;
  visible, paraVisible: Boolean;
  dockedRow, dockedColumn, dockedPosition:Integer;
begin
  i := 1;
  while i < Length(toolManagerKeys) do
  begin
    j := 0;
    while j < Length(toolbarKeys[i]) do
    if toolbarKeys[i, j] <> '' then
    begin
      if tToolButtons[i, j] is TToolButton then
      begin
        paraVisible := TToolButton(tToolButtons[i, j]).Visible
      end else
      begin
        paraVisible := TMenuItem(tToolButtons[i, j]).Visible
      end;
      gpxMAHNB01013B_SaveToolbarCustomizeSetting(toolbarKeys[i, j], paraVisible);
      j := j + 1;
      Continue;
    end else
    begin
      Break;
    end;

    key := toolManagerKeys[i];
    visible := toolManagerButtons[i].Visible;
//    dockedRow :=
//    dockedColumn :=
//    dockedPosition :=
    gpxMAHNB01013B_SaveToolManagerCustomizeInfo(key, visible, dockedRow, dockedColumn, dockedPosition);
    i := i + 1;
    Continue;
  end;

  gpxMAHNB01013B_SaveCustomizeXml();

end;

// *************************************************************************
// グリッド設定処理（ユーザー設定より）
// *************************************************************************
//----------------------------------------------------------------------------//
// 管理番号  10704766-00 作成担当 : 梁森東
// 作 成 日  2011/08/09  修正内容 : 連番４、979
//                                  ユーザー設定の入力制御にアクティブ色項目を追加
//----------------------------------------------------------------------------//
procedure TForm4.xGridSetting();
var
  ultraOptionSetValue, i, j,fontSizeValue,colorsValue: Integer;
begin
  gpxMAHNB01013B_GetParam(startKeyName, endKeyNameList);    // ADD 2010/04/29 FOR #20933

  gpxMAHNB01012B_GetSalesSlip(salesSlip_disp);
  gpxMAHNB01013B_GetDisplayHeaderFooterInfo(inputModeTitle, defaultSalesSlipNumDf, i_searchPartsMode, operationCodeFlg);

     // --- DEL 2010/06/02 ---------->>>>>
//  InitialSetFocusTick();
    // --- DEL 2010/06/02 ----------<<<<<

//    // グリッド列表示非表示設定処理
//    this.SettingGridColVisible(StatusType.SalesGoodsCd, salesSlip.SalesGoodsCd);
//    this.SettingGridColVisible(StatusType.AcptAnOdrStatus, salesSlip.AcptAnOdrStatus);
//    this.SettingGridColVisible(StatusType.AcptAnOdrStatusAndSalesSlipCd, salesSlip.AcptAnOdrStatus * 10 + salesSlip.SalesSlipCd);
//    this.SettingGridColVisible(StatusType.InputChange, 0);
//    this.ChangeInputType(0);

//  // フォントサイズ
//  this.uGrid_Details.DisplayLayout.Appearance.FontData.SizeInPoints = salesInputConstruction.FontSizeValue;

  ultraOptionSetValue := gpxMAHNB01013B_GetUltraOptionSetValue();
  if ultraOptionSetValue = 0 then
  begin
    pnl1.Visible := False;
  end else
  begin
    pnl1.Visible := True;
  end;

  // フォントサイズ
  gpxMAHNB01013B_GetSalesSlipInputConstructionData(fontSizeValue, 3);
  //アクティブ色項目
  gpxMAHNB01013B_GetSalesSlipInputConstructionData(colorsValue,7);       // ADD 2011/08/09
  if (fontSizeValue <> 0) then
  begin
     for i := 0 to HNsGrid1.RowCount - 1 do
     begin
       for j := 0 to HNsGrid1.ColCount - 1 do
       begin
          HNsGrid1.FontSizes[j,i] := fontSizeValue;
       end;
     end;
  end;
  // ADD 2011/08/09 ---------------->>>>>>>>
  if (colorsValue = 0) then
  begin
    HNsGrid1.ActiveCellColor := clYellow;
  end;
  if(colorsValue = 1) then
  begin
    HNsGrid1.ActiveCellColor := $0094E6FB;
  end;
  // ADD 2011/08/09 ----------------<<<<<<<<<
end;

// *************************************************************************
// グリッド設定処理（ユーザー設定より）
// *************************************************************************
procedure TForm4.xSettingToolBarButtonCaption();
var
  ultraOptionSetValue : Integer;
begin
  try // 2011/01/31
    if xTabFooterContainsFocus then
    begin
        saveButton.Caption := '保存(F10)';
        saveButton.Hint := '現在編集中の情報を保存します。';
    end else begin
        saveButton.Caption := '確定(F10)';
        saveButton.Hint := '次グループへ移動します。';
    end;
// 2011/01/31 >>>
  finally
    toolMenu_saveButton.Caption := saveButton.Caption;
    toolMenu_saveButton.Hint := saveButton.Hint;
  end;
// 2011/01/31 <<<
end;

// *************************************************************************
// 商品区分コンボエディタアイテム設定処理
// *************************************************************************
procedure TForm4.xSetItemtSalesGoodsCd(acptAnOdrStatus : Integer; formatFlg: Boolean);
begin
  case acptAnOdrStatus of
    // 10:見積. 15:単価見積
    10, 15 : begin
      SalesGoodsCdComBo.HClear();

      SalesGoodsCdComBo.HAdd(0, '商品');

      if formatFlg then
      begin
        SalesGoodsCdComBo.SelCode := 0;
      end;
    end;
    // 30:売上
    30 : begin
      SalesGoodsCdComBo.HClear();

      SalesGoodsCdComBo.HAdd(0, '商品');
      SalesGoodsCdComBo.HAdd(2, '消費税調整');
      SalesGoodsCdComBo.HAdd(3, '残高調整');
      SalesGoodsCdComBo.HAdd(4, '売掛消費税調整');
      SalesGoodsCdComBo.HAdd(5, '売掛残高調整');

      if formatFlg then
      begin
        SalesGoodsCdComBo.SelCode := 0;
      end;
    end;
    // 40:出荷
    40 : begin
      SalesGoodsCdComBo.HClear();

      SalesGoodsCdComBo.HAdd(0, '商品');

      if formatFlg then
      begin
        SalesGoodsCdComBo.SelCode := 0;
      end;
    end;
    // --- DEL 2013/04/18 T.Nishi ---------->>>>>
    //// ADD 2013/02/05 T.Miyamoto ------------------------------>>>>>
    //// 20:受注
    //20 : begin
    //  SalesGoodsCdComBo.HClear();
    //
    //  SalesGoodsCdComBo.HAdd(0, '商品');
    //
    //  if formatFlg then
    //  begin
    //    SalesGoodsCdComBo.SelCode := 0;
    //  end;
    //end;
    //// ADD 2013/02/05 T.Miyamoto ------------------------------<<<<<
    // --- DEL 2013/04/18 T.Nishi ----------<<<<<
  end;
end;

// *************************************************************************
// 伝票区分コンボエディタアイテム設定処理
// *************************************************************************
procedure TForm4.xSetItemtSalesSlipCd(var salesSlip : TSalesSlip; acptAnOdrStatus : Integer; formatFlg: Boolean);
var
  salesSlip2 : TSalesSlip;
begin
  // --- ADD 2013/02/04 Wakita ---------->>>>>
  gpxMAHNB01013B_BeginControllingByOperationAuthority
  (b_revisionVisible, b_deleteVisible, b_redSlipVisible,b_slipDiscountVisible);
  // --- ADD 2013/02/04 Wakita ----------<<<<<
  case acptAnOdrStatus of
    // --- UPD 2013/04/18 T.Nishi ---------->>>>>
    //// UPD 2013/02/05 T.Miyamoto ------------------------------>>>>>
    ////// 10:見積. 15:単価見積
    ////10, 15 : begin
    //// 10:見積. 15:単価見積. 20:受注
    //10, 15, 20 : begin
    //// UPD 2013/02/05 T.Miyamoto ------------------------------<<<<<
    10, 15 : begin
    // --- UPD 2013/04/18 T.Nishi ----------<<<<<
      SalesSlipDisplayComBo.HClear();

      if salesSlip.AccRecDivCd <> 0 then
      begin
        SalesSlipDisplayComBo.HAdd(10, '掛売上');
      end else
      begin
        SalesSlipDisplayComBo.HAdd(30, '現金売上');
      end;

      gpxMAHNB01012B_GetSalesSlip(salesSlip2);
      if (formatFlg) or (salesSlip2.AccRecDivCd <> salesSlip.AccRecDivCd) then
      begin
        SalesSlipDisplayComBo.ItemIndex := 0;
        if salesSlip.AccRecDivCd <> 0 then
        begin
          salesSlip.SalesSlipDisplay := 10;
          // --- ADD m.suzuki 2010/10/28 ---------->>>>>
          SalesSlipDisplayComBo.SelCode := 10; // ItemIndexを書き換えてもSelCodeが変わらない為。
          // --- ADD m.suzuki 2010/10/28 ----------<<<<<
        end else
        begin
          salesSlip.SalesSlipDisplay := 30;
          // --- ADD m.suzuki 2010/10/28 ---------->>>>>
          SalesSlipDisplayComBo.SelCode := 30;
          // --- ADD m.suzuki 2010/10/28 ----------<<<<<
        end;

        gpxMAHNB01012B_SetSlipCdAndAccRecDivCdFromDisplay(salesSlip);
      end;
    end;
    // 30:売上
    30 : begin
      SalesSlipDisplayComBo.HClear();

      if salesSlip.AccRecDivCd <> 0 then
      begin
        SalesSlipDisplayComBo.HAdd(10, '掛売上');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        // --- UPD 2013/02/20 Wakita ① ---------->>>>>
        //if (b_redSlipVisible) then
        if ((b_redSlipVisible) or (isSalesSlipSearch)) then
        // --- UPD 2013/02/20 Wakita ① ----------<<<<<
        begin
        // --- ADD 2013/02/04 Wakita ----------<<<<<
        SalesSlipDisplayComBo.HAdd(20, '掛返品');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        end
        // --- ADD 2013/02/04 Wakita ----------<<<<<
      end else
      begin
        SalesSlipDisplayComBo.HAdd(30, '現金売上');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        // --- UPD 2013/02/20 Wakita ① ---------->>>>>
        //if (b_redSlipVisible) then
        if ((b_redSlipVisible) or (isSalesSlipSearch)) then
        // --- UPD 2013/02/20 Wakita ① ----------<<<<<
        begin
        // --- ADD 2013/02/04 Wakita ----------<<<<<
        SalesSlipDisplayComBo.HAdd(40, '現金返品');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        end
        // --- ADD 2013/02/04 Wakita ----------<<<<<
      end;
      gpxMAHNB01012B_GetSalesSlip(salesSlip2);
      if (formatFlg) or (salesSlip2.AccRecDivCd <> salesSlip.AccRecDivCd) then
      begin
        SalesSlipDisplayComBo.ItemIndex := 0;
        if salesSlip.AccRecDivCd <> 0 then
        begin
          salesSlip.SalesSlipDisplay := 10;
          // --- ADD 2010/07/06 ---------->>>>>
          SalesSlipDisplayComBo.SelCode := 10;
          // --- ADD 2010/07/06 ----------<<<<<
        end else
        begin
          salesSlip.SalesSlipDisplay := 30;
          // --- ADD 2010/07/06 ---------->>>>>
          SalesSlipDisplayComBo.SelCode := 30;
          // --- ADD 2010/07/06 ----------<<<<<
        end;
        gpxMAHNB01012B_SetSlipCdAndAccRecDivCdFromDisplay(salesSlip);
      end;
    end;
    // 40:出荷
    40 : begin
      SalesSlipDisplayComBo.HClear();

      if salesSlip.AccRecDivCd <> 0 then
      begin
        SalesSlipDisplayComBo.HAdd(10, '掛売上');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        // --- UPD 2013/02/20 Wakita ① ---------->>>>>
        //if (b_redSlipVisible) then
        if ((b_redSlipVisible) or (isSalesSlipSearch)) then
        // --- UPD 2013/02/20 Wakita ① ----------<<<<<
        begin
        // --- ADD 2013/02/04 Wakita ----------<<<<<
        SalesSlipDisplayComBo.HAdd(20, '掛返品');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        end
        // --- ADD 2013/02/04 Wakita ----------<<<<<
      end else
      begin
        SalesSlipDisplayComBo.HAdd(30, '現金売上');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        // --- UPD 2013/02/20 Wakita ① ---------->>>>>
        //if (b_redSlipVisible) then
        if ((b_redSlipVisible) or (isSalesSlipSearch)) then
        // --- UPD 2013/02/20 Wakita ① ----------<<<<<
        begin
        // --- ADD 2013/02/04 Wakita ----------<<<<<
        SalesSlipDisplayComBo.HAdd(40, '現金返品');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        end
        // --- ADD 2013/02/04 Wakita ----------<<<<<
      end;

      gpxMAHNB01012B_GetSalesSlip(salesSlip2);
      if (formatFlg) or (salesSlip2.AccRecDivCd <> salesSlip.AccRecDivCd) then
      begin
        SalesSlipDisplayComBo.ItemIndex := 0;
        if salesSlip.AccRecDivCd <> 0 then
        begin
          salesSlip.SalesSlipDisplay := 10;
          // --- ADD m.suzuki 2010/10/28 ---------->>>>>
          SalesSlipDisplayComBo.SelCode := 10;
          // --- ADD m.suzuki 2010/10/28 ----------<<<<<
        end else
        begin
          salesSlip.SalesSlipDisplay := 30;
          // --- ADD m.suzuki 2010/10/28 ---------->>>>>
          SalesSlipDisplayComBo.SelCode := 30;
          // --- ADD m.suzuki 2010/10/28 ----------<<<<<
        end;

        gpxMAHNB01012B_SetSlipCdAndAccRecDivCdFromDisplay(salesSlip);
      end;
    end;
  end;
end;
// --- ADD m.suzuki 2010/10/29 ---------->>>>>
// *************************************************************************
// 伝票区分コンボエディタアイテム設定処理 (売上or返品の状態を維持する)
// *************************************************************************
procedure TForm4.xSetItemtSalesSlipCdKeepSlipCd(var salesSlip : TSalesSlip; acptAnOdrStatus : Integer; formatFlg: Boolean);
var
  salesSlip2 : TSalesSlip;
  salesSlipDisplayBk: Integer;
begin
  // 変更前の値を退避する。
  salesSlipDisplayBk := salesSlip.SalesSlipDisplay;

  // --- ADD 2013/02/04 Wakita ---------->>>>>
  gpxMAHNB01013B_BeginControllingByOperationAuthority
    (b_revisionVisible, b_deleteVisible, b_redSlipVisible,b_slipDiscountVisible);
  // --- ADD 2013/02/04 Wakita ----------<<<<<

  case acptAnOdrStatus of
    // 10:見積. 15:単価見積
    10, 15 : begin
      SalesSlipDisplayComBo.HClear();

      if salesSlip.AccRecDivCd <> 0 then
      begin
        SalesSlipDisplayComBo.HAdd(10, '掛売上');
      end else
      begin
        SalesSlipDisplayComBo.HAdd(30, '現金売上');
      end;

      gpxMAHNB01012B_GetSalesSlip(salesSlip2);
      if (formatFlg) or (salesSlip2.AccRecDivCd <> salesSlip.AccRecDivCd) then
      begin
        SalesSlipDisplayComBo.ItemIndex := 0;
        if salesSlip.AccRecDivCd <> 0 then
        begin
          salesSlip.SalesSlipDisplay := 10;
          SalesSlipDisplayComBo.SelCode := 10; // ItemIndexを書き換えてもSelCodeが変わらない為。
        end else
        begin
          salesSlip.SalesSlipDisplay := 30;
          SalesSlipDisplayComBo.SelCode := 30;
        end;

        gpxMAHNB01012B_SetSlipCdAndAccRecDivCdFromDisplay(salesSlip);
      end;
    end;
    // 30:売上
    30 : begin
      SalesSlipDisplayComBo.HClear();

      if salesSlip.AccRecDivCd <> 0 then
      begin
        SalesSlipDisplayComBo.HAdd(10, '掛売上');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        // --- UPD 2013/02/20 Wakita ① ---------->>>>>
        //if (b_redSlipVisible) then
        if ((b_redSlipVisible) or (isSalesSlipSearch)) then
        // --- UPD 2013/02/20 Wakita ① ----------<<<<<
        begin
        // --- ADD 2013/02/04 Wakita ----------<<<<<
        SalesSlipDisplayComBo.HAdd(20, '掛返品');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        end
        // --- ADD 2013/02/04 Wakita ----------<<<<<
      end else
      begin
        SalesSlipDisplayComBo.HAdd(30, '現金売上');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        // --- UPD 2013/02/20 Wakita ① ---------->>>>>
        //if (b_redSlipVisible) then
        if ((b_redSlipVisible) or (isSalesSlipSearch)) then
        // --- UPD 2013/02/20 Wakita ① ----------<<<<<
        begin
        // --- ADD 2013/02/04 Wakita ----------<<<<<
        SalesSlipDisplayComBo.HAdd(40, '現金返品');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        end
        // --- ADD 2013/02/04 Wakita ----------<<<<<
      end;
      gpxMAHNB01012B_GetSalesSlip(salesSlip2);
      if (formatFlg) or (salesSlip2.AccRecDivCd <> salesSlip.AccRecDivCd) then
      begin
        if salesSlip.AccRecDivCd <> 0 then
        begin
          // 売上(10,30) / 返品(20,40)
          if ((salesSlipDisplayBk = 10) or (salesSlipDisplayBk = 30)) then
          begin
            // 売上：10,30 -> 10
            SalesSlipDisplayComBo.ItemIndex := 0;
            salesSlip.SalesSlipDisplay := 10;
            SalesSlipDisplayComBo.SelCode := 10;
          end else begin
            // 返品：20,40 -> 20
            SalesSlipDisplayComBo.ItemIndex := 1;
            salesSlip.SalesSlipDisplay := 20;
            SalesSlipDisplayComBo.SelCode := 20;
          end;
        end else
        begin
          // 売上(10,30) / 返品(20,40)
          if ((salesSlipDisplayBk = 10) or (salesSlipDisplayBk = 30)) then
          begin
            // 売上：10,30 -> 30
            SalesSlipDisplayComBo.ItemIndex := 0;
            salesSlip.SalesSlipDisplay := 30;
            SalesSlipDisplayComBo.SelCode := 30;
          end else begin
            // 返品：20,40 -> 40
            SalesSlipDisplayComBo.ItemIndex := 1;
            salesSlip.SalesSlipDisplay := 40;
            SalesSlipDisplayComBo.SelCode := 40;
          end;
        end;
        gpxMAHNB01012B_SetSlipCdAndAccRecDivCdFromDisplay(salesSlip);
      end;
    end;
    // 40:出荷
    40 : begin
      SalesSlipDisplayComBo.HClear();

      if salesSlip.AccRecDivCd <> 0 then
      begin
        SalesSlipDisplayComBo.HAdd(10, '掛売上');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        // --- UPD 2013/02/20 Wakita ① ---------->>>>>
        //if (b_redSlipVisible) then
        if ((b_redSlipVisible) or (isSalesSlipSearch)) then
        // --- UPD 2013/02/20 Wakita ① ----------<<<<<
        begin
        // --- ADD 2013/02/04 Wakita ----------<<<<<
        SalesSlipDisplayComBo.HAdd(20, '掛返品');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        end
        // --- ADD 2013/02/04 Wakita ----------<<<<<
      end else
      begin
        SalesSlipDisplayComBo.HAdd(30, '現金売上');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        // --- UPD 2013/02/20 Wakita ① ---------->>>>>
        //if (b_redSlipVisible) then
        if ((b_redSlipVisible) or (isSalesSlipSearch)) then
        // --- UPD 2013/02/20 Wakita ① ----------<<<<<
        begin
        // --- ADD 2013/02/04 Wakita ----------<<<<<
        SalesSlipDisplayComBo.HAdd(40, '現金返品');
        // --- ADD 2013/02/04 Wakita ---------->>>>>
        end
        // --- ADD 2013/02/04 Wakita ----------<<<<<
      end;

      gpxMAHNB01012B_GetSalesSlip(salesSlip2);
      if (formatFlg) or (salesSlip2.AccRecDivCd <> salesSlip.AccRecDivCd) then
      begin
        if salesSlip.AccRecDivCd <> 0 then
        begin
          // 売上(10,30) / 返品(20,40)
          if ((salesSlipDisplayBk = 10) or (salesSlipDisplayBk = 30)) then
          begin
            // 売上：10,30 -> 10
            SalesSlipDisplayComBo.ItemIndex := 0;
            salesSlip.SalesSlipDisplay := 10;
            SalesSlipDisplayComBo.SelCode := 10;
          end else begin
            // 返品：20,40 -> 20
            SalesSlipDisplayComBo.ItemIndex := 1;
            salesSlip.SalesSlipDisplay := 20;
            SalesSlipDisplayComBo.SelCode := 20;
          end;
        end else
        begin
          // 売上(10,30) / 返品(20,40)
          if ((salesSlipDisplayBk = 10) or (salesSlipDisplayBk = 30)) then
          begin
            // 売上：10,30 -> 30
            SalesSlipDisplayComBo.ItemIndex := 0;
            salesSlip.SalesSlipDisplay := 30;
            SalesSlipDisplayComBo.SelCode := 30;
          end else begin
            // 返品：20,40 -> 40
            SalesSlipDisplayComBo.ItemIndex := 1;
            salesSlip.SalesSlipDisplay := 40;
            SalesSlipDisplayComBo.SelCode := 40;
          end;
        end;

        gpxMAHNB01012B_SetSlipCdAndAccRecDivCdFromDisplay(salesSlip);
      end;
    end;
  end;
end;
// --- ADD m.suzuki 2010/10/29 ----------<<<<<

// *************************************************************************
// 売上金額変更後発生イベント処理
// *************************************************************************
procedure TForm4.xSalesPriceChanged();
var
  salesSlip: TSalesSlip;
begin
  // 売上金額変更後発生イベント処理
  gpxMAHNB01013B_SalesPriceChanged();
  gpxMAHNB01012B_GetSalesSlip(salesSlip);
  // 画面表示処理（売上金額合計情報）
  xSetDisplayTotalPriceInfo(salesSlip);

end;

// *************************************************************************
// 伝票メモ表示処理
// *************************************************************************
procedure TForm4.xSlipMemoInfoFormSetting(salesRowNo : Integer);
var
  salesDetailArray: TSalesSlipInputCustomArrayA2;
begin

  gpxMAHNB01013B_GetSalesDetailDataTable(salesDetailArray, salesRowNo);

  if (salesDetailArray.Csafield1Count = 0) then
  begin
     Exit;
  end;

  xMemoInputSetting(True);

  if ((salesDetailArray.Csafield1.GoodsNo <> '') or (salesDetailArray.Csafield1.GoodsName <> ''))
    and (salesDetailArray.Csafield1.EditStatus <> 6)
    and (salesDetailArray.Csafield1.EditStatus <> 7)
    and (salesDetailArray.Csafield1.EditStatus <> 2) then
    begin
      SlipMemo1.Text := salesDetailArray.Csafield1.SlipMemo1;
      SlipMemo2.Text := salesDetailArray.Csafield1.SlipMemo2;
      SlipMemo3.Text := salesDetailArray.Csafield1.SlipMemo3;
      InsideMemo1.Text := salesDetailArray.Csafield1.InsideMemo1;
      InsideMemo2.Text := salesDetailArray.Csafield1.InsideMemo2;
      InsideMemo3.Text := salesDetailArray.Csafield1.InsideMemo3;
    end else
    begin
      xMemoInputSetting(False);
    end;
end;

// *************************************************************************
// 伝票メモ入力設定
// *************************************************************************
procedure TForm4.xMemoInputSetting(input : Boolean);
begin
  xEnableControl(InsideMemo1, input);
  xEnableControl(InsideMemo2, input);
  xEnableControl(InsideMemo3, input);
  xEnableControl(SlipMemo1, input);
  xEnableControl(SlipMemo2, input);
  xEnableControl(SlipMemo3, input);
//  InsideMemo1.Enabled := input;
//  InsideMemo2.Enabled := input;
//  InsideMemo3.Enabled := input;
//  SlipMemo1.Enabled := input;
//  SlipMemo2.Enabled := input;
//  SlipMemo3.Enabled := input;

  if not input then
  begin
    InsideMemo1.Text := '';
    InsideMemo2.Text := '';
    InsideMemo3.Text := '';
    SlipMemo1.Text := '';
    SlipMemo2.Text := '';
    SlipMemo3.Text := '';

//    InsideMemo1.Color := clBtnFace;
//    InsideMemo2.Color := clBtnFace;
//    InsideMemo3.Color := clBtnFace;
//    SlipMemo1.Color := clBtnFace;
//    SlipMemo2.Color := clBtnFace;
//    SlipMemo3.Color := clBtnFace;
  end
  else
  begin
//    InsideMemo1.Color := clWhite;
//    InsideMemo2.Color := clWhite;
//    InsideMemo3.Color := clWhite;
//    SlipMemo1.Color := clWhite;
//    SlipMemo2.Color := clWhite;
//    SlipMemo3.Color := clWhite;
  end;
end;

// *************************************************************************
// 車両情報設定処理
// *************************************************************************
procedure TForm4.xCarInfoFormSetting(salesRowNo : Integer);
var
  isGoodsFlg, carInfoRowFlg: Boolean;
  rowIndex: Integer;
  tempInt : Integer;
begin

  gpxMAHNB01013B_CarInfoFormSetting(salesRowNo, isGoodsFlg, carInfoRowFlg);

if carInfoRowFlg then
  begin
    xSetDisplayCarInfo(salesRowNo, 0);
  end;

  if isGoodsFlg then
  begin

    // 車両情報
    if (edtAcceptAnOrderNo.GetInt <> 0) then
    begin
      xEnableControl(ProduceFrameNo, False);
      xEnableControl(FirstEntryDate, False);
      xEnableControl(FullModelBtn, False); // 検索切替
      xEnableControl(CarMngNo, False);
      xEnableControl(FirstEntryDateRange, False);
      //xEnableControl(pnl23, False);
      xEnableControl(FullModel,  False);
      xEnableControl(EngineModelNm, False);
      xEnableControl(CategoryNo, False);
      xEnableControl(ModelDesignationNo, False);
      xEnableControl(ModelSubCode, False);
      xEnableControl(ModelCode, False);
      xEnableControl(MakerCode, False);
      xEnableControl(TrimNo, False);
      xEnableControl(ColorNo, False);
      xEnableControl(ModelFullName, False);
      ModelFullNameBtn.Enabled := false;

      // 車両情報のbackgroundの設定処理
      xCarInfoFormSettingForColor(False);
//      this._carOtherInfoInput.uGrid_EquipInfo.DisplayLayout.Bands[0].Columns[1].CellActivation = Infragistics.Win.UltraWinGrid.Activation.NoEdit; // 2009/09/10 ADD

    end else
    begin
      xEnableControl(ProduceFrameNo, True);
      xEnableControl(FirstEntryDate, True);
      // --- UPD m.suzuki 2010/06/16 ---------->>>>>
      //xEnableControl(FullModelBtn, True); // 検索切替
      if (i_searchPartsMode = ctBLCodeSearch) then
      begin
        xEnableControl(FullModelBtn, True); // 検索切替
      end;
      // --- UPD m.suzuki 2010/06/16 ----------<<<<<
      xEnableControl(CarMngNo, True);
      xEnableControl(FirstEntryDateRange, True);
      //xEnableControl(pnl23, True);
      xEnableControl(FullModel,  True);
      xEnableControl(EngineModelNm, True);
      xEnableControl(CategoryNo, True);
      xEnableControl(ModelDesignationNo, True);
      xEnableControl(ModelSubCode, True);
      xEnableControl(ModelCode, True);
      xEnableControl(MakerCode, True);
      xEnableControl(TrimNo, True);
      xEnableControl(ColorNo, True);
      xEnableControl(ModelFullName, True);
      ModelFullNameBtn.Enabled := true;

      // 車両情報のbackgroundの設定処理
      //xCarInfoFormSettingForColor(True);
//      this._carOtherInfoInput.uGrid_EquipInfo.DisplayLayout.Bands[0].Columns[1].CellActivation = Infragistics.Win.UltraWinGrid.Activation.AllowEdit; // 2009/09/10 ADD
    end;

    // カラー・トリム・装備情報
    if (((HNsGrid2.RowCount > 1) and (HNsGrid2.Cells[1, 1] <> ''))
      or ((HNsGrid4.RowCount > 1) and (HNsGrid4.Cells[1, 1] <> ''))
      or ((HNsGrid3.RowCount > 1) and (HNsGrid3.Cells[1, 1] <> ''))) then
    begin
      ExpandableGroupBox.Enabled := True;
    end else
    begin
      ExpandableGroupBox.Enabled := False
    end;

  end;

end;

// *************************************************************************
// 明細部変更後発生イベント処理
// *************************************************************************
procedure TForm4.xSalesSlipDetailInput_DetailChanged(salesRowNo : Integer);
var
  salesSlip : TSalesSlip;
begin
  // 伝票情報
  gpxMAHNB01012B_GetSalesSlip(salesSlip);

  // 売上データキャッシュ処理
  gpxMAHNB01012B_Cache(salesSlip);

  // 画面表示処理（売上金額合計情報）
  xSetDisplayTotalPriceInfo(salesSlip);

  // フッタ画面表示処理（明細情報）
  // --- UPD 2010/05/31 ---------->>>>>
  //xSetDisplayDetailInfo();
  xSetDisplayDetailInfo(salesRowNo);
  // --- UPD 2010/05/31 ----------<<<<<
end;

// *************************************************************************
// ツールバー設定イベント
// *************************************************************************
procedure TForm4.xToolButtonSettingDetail();
begin
  //guideButton.Enabled :=

//  if (ActiveControl = HNsGrid1) or (HNsGrid1.Focused = True) then
//  begin
    try // 2011/01/31
      // ----UPD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
      //shipmentAddUpButton.Enabled := True; // 貸出計上
      //acceptAnOrderAddUpButton.Enabled := True; // 受注計上
      //estimateAddUpButton.Enabled := True; // 見積計上
      if(discountAllLineflag) then
      begin
         if (ActiveControl = HNsGrid1) or (HNsGrid1.Focused = True)  then
         begin
             shipmentAddUpButton.Enabled := False; // 貸出計上
             acceptAnOrderAddUpButton.Enabled := False; // 受注計上
             estimateAddUpButton.Enabled := False; // 見積計上
         end
         else
         begin
             shipmentAddUpButton.Enabled := True; // 貸出計上
             acceptAnOrderAddUpButton.Enabled := True; // 受注計上
             estimateAddUpButton.Enabled := True; // 見積計上
         end;
      end
      else
      begin
          shipmentAddUpButton.Enabled := True; // 貸出計上
          acceptAnOrderAddUpButton.Enabled := True; // 受注計上
          estimateAddUpButton.Enabled := True; // 見積計上
      end;
      // ----UPD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
// 2011/01/31 >>>
    finally
      toolMenu_shipmentAddUpButton.Enabled := shipmentAddUpButton.Enabled;
      toolMenu_acceptAnOrderAddUpButton.Enabled := acceptAnOrderAddUpButton.Enabled;
      toolMenu_estimateAddUpButton.Enabled := estimateAddUpButton.Enabled;
    end;
// 2011/01/31 <<<
//  end;
end;

// *************************************************************************
// ネクストコントロール取得処理
// *************************************************************************
function TForm4.xGetNextControl(prevCtrl: TWinControl; mode : Integer) : TWinControl;
var
  nextCtrol : TWinControl;
  i, j : Integer;
  nextControlNm : string;
  headerList, footerList : WideString;
  headerTs, footTs, ts2, ts3:TStringList;
  isheaderItems, isfootItems : Boolean;
begin
   isheaderItems := False;
   isfootItems := False;

   gpxMAHNB01012B_GetFocusConstructionValue(headerList, footerList);

   headerTs := TStringList.Create;
   headerTs.Delimiter := ',';
   headerTs.DelimitedText := headerList;
   footTs := TStringList.Create;
   footTs.Delimiter := ',';
   footTs.DelimitedText := footerList;

  case mode of
    0: begin
       for i := 0 to headerTs.Count - 3 do
       begin
         ts2 := TStringList.Create;
         ts2.Delimiter := '-';
         ts2.DelimitedText := headerTs[i];

        if prevCtrl.Name = ts2[0] then
        begin
          isheaderItems := True;

          for j := 1 to headerTs.Count - 2 - i do
          begin
            ts3 := TStringList.Create;
            ts3.Delimiter := '-';
            ts3.DelimitedText := headerTs[i+j];
            nextControlNm := ts3[0];

            if ts3[2] = 'False' then
            begin
              Continue;
            end;

            nextCtrol := xGetControlByName(nextControlNm);

            if ((nextCtrol is THEdit) and (THEdit(nextCtrol).ReadOnly))
              or ((nextCtrol is THNEdit) and (THNEdit(nextCtrol).ReadOnly)) then
            begin
              Continue;
            end;

            // ---- UPD 2010/06/02 --------->>>>>
            if (((nextCtrol.Name = CarMngCode.Name) and (not carMngNo.Visible))
            or ((nextCtrol.Name = SubSectionCode.Name) and (not pnl_SubSection.Visible))
            or ((nextCtrol.Name = AcptAnOdrStatusDisplayComBo.Name) and (not pnl9.Enabled))
            or ((nextCtrol.Name = SalesSlipDisplayComBo.Name) and (not pnl10.Enabled))
            or ((nextCtrol.Name = FrontEmployeeCd.Name) and (not pnl_FrontEmployee.Visible))
            or ((nextCtrol.Name = SalesInputCode.Name) and (not pnl_SalesInputCode.Visible))) then
            // ---- UPD 2010/06/02 ---------<<<<<
            begin
              Continue;
            end;

            if (nextCtrol.Enabled) and (nextCtrol.Visible)
              and (prevCtrl <> nextCtrol) then
            begin
              Result := nextCtrol;
              Exit;
            end;
          end;
        end;
       end;

       ts2 := TStringList.Create;
       ts2.Delimiter := '-';
       ts2.DelimitedText := headerTs[headerTs.Count - 2];
       if (isheaderItems) or (prevCtrl.Name = ts2[0]) then
       begin
       // --- ADD 2010/08/13 --- >>>>
         if ((i_searchPartsMode = 1) and (FullModel.DataText = '')) then
         begin
           Result := prevCtrl;
           Exit;
         end
         else
         begin
           //hNsGrid1EnterShow := True; // DEL 2011/09/29
           Result := HNsGrid1;
           Exit;
         end;
       // --- ADD 2010/08/13 --- <<<<

       end;

       for i := 0 to footTs.Count - 3 do
       begin
         ts2 := TStringList.Create;
         ts2.Delimiter := '-';
         ts2.DelimitedText := footTs[i];

         if prevCtrl.Name = ts2[0] then
         begin
            for j := 1 to footTs.Count - 2 - i do
            begin
              ts3 := TStringList.Create;
              ts3.Delimiter := '-';
              ts3.DelimitedText := footTs[i+j];
              nextControlNm := ts3[0];

              if ts3[2] = 'False' then
              begin
                Continue;
              end;

              nextCtrol := xGetControlByName(nextControlNm);

              if ((nextCtrol is THEdit) and (THEdit(nextCtrol).ReadOnly))
              or ((nextCtrol is THNEdit) and (THNEdit(nextCtrol).ReadOnly)) then
              begin
                Continue;
              end;

              // ---- UPD 2010/06/02 --------->>>>>
              if (((nextCtrol.Name = RetGoodsReason.Name) and (not pnl46.Visible))
              or ((nextCtrol.Name = PartySaleSlipNum.Name) and (not pnl_PartySaleSlipNum.Visible))
              or ((nextCtrol.Name = SlipNote2Code.Name) and (not pnl_SlipNote2.Visible))
              or ((nextCtrol.Name = SlipNote2.Name) and (not pnl_SlipNote2.Visible))
              or ((nextCtrol.Name = SlipNote3.Name) and (not pnl_SlipNote3.Visible))
              or ((nextCtrol.Name = SlipNote3Code.Name) and (not pnl_SlipNote3.Visible))) then
              // ---- UPD 2010/06/02 ---------<<<<<
              begin
                Continue;
              end;

              if (nextCtrol.Enabled) and (nextCtrol.Visible)
                and (prevCtrl <> nextCtrol) then
              begin
                // --- UPD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
                //if ((nextCtrol.Name = CarSlipNote.Name) or (nextCtrol.Name = Mileage.Name)) then
                if ((nextCtrol.Name = CarNoteCode.Name) or (nextCtrol.Name = CarSlipNote.Name) or (nextCtrol.Name = Mileage.Name)) then
                // --- UPD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------<<<<<
                begin
                  if not (AddInfoTabSheet.TabVisible) then
                  begin
                    Continue;
                  end;

                  if uTabControl_Footer.ActivePage <> AddInfoTabSheet then
                  begin
                    uTabControl_Footer.ActivePage := AddInfoTabSheet;
                  end;
                end;

                Result := nextCtrol;
                Exit;
              end;
            end;
         end;
       end;

       Result := prevCtrl;

    end;
    1: begin
      for i := 0 to footTs.Count - 2 do
       begin
         ts2 := TStringList.Create;
         ts2.Delimiter := '-';
         ts2.DelimitedText := footTs[i];

         if prevCtrl.Name = ts2[0] then
         begin
            isfootItems := True;

            for j := 1 to i do
            begin
              ts3 := TStringList.Create;
              ts3.Delimiter := '-';
              ts3.DelimitedText := footTs[i-j];
              nextControlNm := ts3[0];

              if ts3[2] = 'False' then
              begin
                Continue;
              end;

              nextCtrol := xGetControlByName(nextControlNm);

              if ((nextCtrol is THEdit) and (THEdit(nextCtrol).ReadOnly))
              or ((nextCtrol is THNEdit) and (THNEdit(nextCtrol).ReadOnly)) then
              begin
                Continue;
              end;
              // ---- UPD 2010/06/02 --------->>>>>
              if (((nextCtrol.Name = RetGoodsReason.Name) and (not pnl46.Visible))
              or ((nextCtrol.Name = PartySaleSlipNum.Name) and (not pnl_PartySaleSlipNum.Visible))
              or ((nextCtrol.Name = SlipNote2Code.Name) and (not pnl_SlipNote2.Visible))
              or ((nextCtrol.Name = SlipNote2.Name) and (not pnl_SlipNote2.Visible))
              or ((nextCtrol.Name = SlipNote3.Name) and (not pnl_SlipNote3.Visible))
              or ((nextCtrol.Name = SlipNote3Code.Name) and (not pnl_SlipNote3.Visible))) then
              // ---- UPD 2010/06/02 ---------<<<<<
              begin
                Continue;
              end;

              if (nextCtrol.Enabled) and (nextCtrol.Visible)
                and (prevCtrl <> nextCtrol) then
              begin
                if (ts1.ContainsControl(nextCtrol))
                  and (ts1.TabVisible) and (uTabControl_Footer.ActivePage <> ts1) then
                begin
                  uTabControl_Footer.ActivePage := ts1;
                end;

                Result := nextCtrol;
                Exit;
              end;
            end;
         end;
       end;

       if Result <> nil then
       begin
         Exit;
       end else
       begin
         if isfootItems then
         begin
           hNsGrid1EnterShow := True;
           Result := HNsGrid1;
           Exit;
         end;
       end;

      for i := 1 to headerTs.Count - 3 do
       begin
         ts2 := TStringList.Create;
         ts2.Delimiter := '-';
         ts2.DelimitedText := headerTs[i];

        if prevCtrl.Name = ts2[0] then
        begin
          for j := 1 to i do
          begin
            ts3 := TStringList.Create;
            ts3.Delimiter := '-';
            ts3.DelimitedText := headerTs[i-j];
            nextControlNm := ts3[0];

            if ts3[2] = 'False' then
            begin
              Continue;
            end;

            nextCtrol := xGetControlByName(nextControlNm);

            if ((nextCtrol is THEdit) and (THEdit(nextCtrol).ReadOnly))
              or ((nextCtrol is THNEdit) and (THNEdit(nextCtrol).ReadOnly)) then
            begin
              Continue;
            end;
            // ---- UPD 2010/06/02 --------->>>>>
            if (((nextCtrol.Name = CarMngCode.Name) and (not carMngNo.Visible))
            or ((nextCtrol.Name = SubSectionCode.Name) and (not pnl_SubSection.Visible))
            or ((nextCtrol.Name = AcptAnOdrStatusDisplayComBo.Name) and (not pnl9.Enabled))
            or ((nextCtrol.Name = SalesSlipDisplayComBo.Name) and (not pnl10.Enabled))
            or ((nextCtrol.Name = FrontEmployeeCd.Name) and (not pnl_FrontEmployee.Visible))
            or ((nextCtrol.Name = SalesInputCode.Name) and (not pnl_SalesInputCode.Visible))) then
            // ---- UPD 2010/06/02 ---------<<<<<
            begin
              Continue;
            end;

            if (nextCtrol.Enabled) and (nextCtrol.Visible)
              and (prevCtrl <> nextCtrol) then
            begin
              Result := nextCtrol;
              Exit;
            end;
          end;
        end;
       end;

       if Result <> nil then
       begin
         Exit;
       end else
       begin
         Result := prevCtrl
       end;
    end;
  end;
end;

// *************************************************************************
//  ネクストコントロール取得処理(フッタ部)
// *************************************************************************
function TForm4.xGetNextControlForFooter(prevCtrl: TWinControl; mode : Integer) : TWinControl;
begin

end;

// *************************************************************************
//  コントロールのEnableの設定
// *************************************************************************
procedure TForm4.xEnableControl(AControl : TWinControl; Enable : Boolean);
begin
  if Enable then
  begin
    AControl.Enabled := True;

    if AControl is THEdit then
    begin
      THEdit(AControl).ReadOnly := False;
      THEdit(AControl).Color := clWhite;
    end else if AControl is THNEdit then
    begin
      THNEdit(AControl).ReadOnly := False;
      THNEdit(AControl).Color := clWhite;
    end else if AControl is THDateEdit then
    begin
      THDateEdit(AControl).Enabled := True;
      THDateEdit(AControl).Color := clWhite;
    end else if AControl is TPanel then
    begin
      TPanel(AControl).Enabled := True;
    end else if AControl is THComboBox then
    begin
      THComboBox(AControl).Enabled := True;
    end else if AControl is TButton then
    begin
      TButton(AControl).Enabled := True;
    end;
  end else
  begin
    if AControl is THEdit then
    begin
      THEdit(AControl).ReadOnly := True;
      THEdit(AControl).Color := clBtnFace;

      if (AControl.Name = 'SectionName')
        or (AControl.Name = 'SubSectionName')
        or (AControl.Name = 'CustomerName')
        or (AControl.Name = 'SalesEmployeeNm')
        or (AControl.Name = 'FrontEmployeeNm')
        or (AControl.Name = 'SalesInputName')
        or (AControl.Name = 'CarMngCode')
        or (AControl.Name = 'EngineModelNm')
        or (AControl.Name = 'FullModel')
        or (AControl.Name = 'ProduceFrameNo')
        or (AControl.Name = 'ModelFullName')
        or (AControl.Name = 'ColorNo')
        or (AControl.Name = 'ModelCode')
        or (AControl.Name = 'MakerCode')
        or (AControl.Name = 'ModelSubCode') then
      begin
        THEdit(AControl).Color := clInactiveBorder;
      end;
    end else if AControl is THNEdit then
    begin
      THNEdit(AControl).ReadOnly := True;
      THNEdit(AControl).Color := clBtnFace;

      if (AControl.Name = 'MakerCode')
        or (AControl.Name = 'ModelCode')
        or (AControl.Name = 'ModelSubCode') then
      begin
        THNEdit(AControl).Color := clInactiveBorder;
      end;
    end else if AControl is THDateEdit then
    begin
      THDateEdit(AControl).Enabled := False;
      THDateEdit(AControl).Color := clBtnFace;
    end else if AControl is TPanel then
    begin
      TPanel(AControl).Enabled := False;
    end else if AControl is THComboBox then
    begin
      THComboBox(AControl).Enabled := False;
    end else if AControl is TButton then
    begin
      TButton(AControl).Enabled := False;
    end;
  end;
end;

// *************************************************************************
// 項目のAlignmentの設定処理 ES_Right、ES_Left、ES_Center
// *************************************************************************
procedure TForm4.xSetControlAlignment(AControl : TWinControl; Alignment : Integer);
begin
  SetWindowLong(AControl.Handle,GWL_STYLE,GetWindowLong(AControl.Handle,GWL_STYLE) or Alignment);
end;

// *************************************************************************
// 項目のAlignmentの初期値設定
// *************************************************************************
procedure TForm4.xInitControlAlignment();
begin
  xSetControlAlignment(SectionCode, ES_Right); // 拠点
  xSetControlAlignment(SubSectionCode, ES_Right); // 部門
  xSetControlAlignment(CustomerCode, ES_Right); // 得意先
  xSetControlAlignment(SalesEmployeeCd, ES_Right); // 担当者
  xSetControlAlignment(FrontEmployeeCd, ES_Right); // 受注者
  xSetControlAlignment(SalesInputCode, ES_Right); // 発行者
  xSetControlAlignment(SalesSlipNum, ES_Right); // 伝票番号
  xSetControlAlignment(CarMngCode, ES_Left); // 管理番号
  xSetControlAlignment(ModelDesignationNo, ES_Right); // 型式指定番号
  xSetControlAlignment(CategoryNo, ES_Right); // 類別区分番号
  xSetControlAlignment(FullModel, ES_Left); // 型式／モデルプレート
  xSetControlAlignment(EngineModelNm, ES_Left); // エンジン型式
  xSetControlAlignment(MakerCode, ES_Right); // カーメーカーコード
  xSetControlAlignment(ModelCode, ES_Right); // 車種コード
  xSetControlAlignment(ModelSubCode, ES_Right); // 車種呼称コード
  xSetControlAlignment(FirstEntryDate, ES_Right); // 年式
  xSetControlAlignment(ProduceFrameNo, ES_Right);// 車台番号
  xSetControlAlignment(Mileage, ES_Right);// 走行距離
end;

// *************************************************************************
// 年式のチャック処理
// *************************************************************************
function TForm4.xCheckDateForFirstEntryDate() : Boolean;
var
  FirstEntryDateYear, FirstEntryDateMonth, FirstEntryDateDay : Integer;
begin
  Result := True;

  // ---------UPD 2010/09/07--------->>>>>
  //FirstEntryDate.GetDate(FirstEntryDateYear, FirstEntryDateMonth, FirstEntryDateDay);
  FirstEntryDateYear := FirstEntryDate.LongDate div 10000;
  FirstEntryDateMonth := FirstEntryDate.LongDate div 100 mod 100;
  FirstEntryDateDay := FirstEntryDate.LongDate mod 100;

  //if FirstEntryDateYear <> -1 then
  if FirstEntryDateYear <> 0 then
  begin
    if (FirstEntryDateYear < 1900) or (FirstEntryDateYear > 3000) then
    begin
      Result := False;
      Exit;
    end;
  end;

  // --- UPD 2010/09/06 ---------->>>>>
//  if (FirstEntryDateYear <> -1) and (FirstEntryDateMonth <> -1) then
  //if (FirstEntryDateMonth <> -1) then
  if (FirstEntryDateMonth <> 0) then
  // --- UPD 2010/09/06 ----------<<<<<
  begin
    if (FirstEntryDateMonth < 1) or (FirstEntryDateMonth > 12) then
    begin
      Result := False;
      Exit;
    end;
  end;
  // ---------UPD 2010/09/07---------<<<<<
  // ADD 2012/02/07 李小路 REDMINE#28291 ----->>>>>
  if (FirstEntryDateYear <= 0) and (FirstEntryDateMonth > 0) then
  begin
      Result := False;
      Exit;
  end;
  // ADD 2012/02/07 李小路 REDMINE#28291 -----<<<<<
end;

// *************************************************************************
// 売上日のチャック処理
// *************************************************************************
function TForm4.xCheckDateForSalesDate(salesDate: Integer) : Boolean;
var
 dt: TDateTime;
 yearStr : string;
 st: Integer; // 2010/08/30
begin
  Result := True;
  if (Length(IntToStr(SalesDate)) <> 8) then
  begin
     Result := False;
     Exit;
  end;

   yearStr := Copy(IntToStr(SalesDate), 0, 4);

  if (StrToInt(yearStr) < 1900) then
  begin
      Result := False;
      Exit;
  end;

  try
     dt := StrToDateTime(FormatFloat('0000/00/00', salesDate))
  except
     Result := False;
      Exit;
  end;

  //>>>2010/08/30
  st := gpxMAHNB01013B_ExistTaxRateRangeMethod(salesDate);
  if st <> 0 then begin
    Result := False;
    Exit;
  end;
  //<<<2010/08/30

  Exit;
end;

// ADD 2012/10/15 --- >>>
// *************************************************************************
// 仕入日のチャック処理
// *************************************************************************
function TForm4.xCheckDateForStockDate(var dateTime:TDateTime; stockDate: string ) : Boolean;
var
  n:integer;
  CustomDate, cellValue : string;
  systemDate : TDateTime;
begin
  Result := True;
  cellValue := stockDate;

  try

     //システム日付
     CustomDate :=FormatDateTime('yyyymmdd',Now());

     // '/'区別
     n := POS('/',cellValue);

     if(n <=0) then
     begin
       if Length(cellValue) = 1 then
       begin
         cellValue := '0' + cellValue;
         cellValue := copy(CustomDate,1,6) + cellValue;
         Insert('/',cellValue,7);
         Insert('/',cellValue,5);
       end
       else if Length(cellValue) = 3  then
       begin
         cellValue := '0' + cellValue;
         cellValue := copy(CustomDate,1,4) + cellValue;
         Insert('/',cellValue,7);
         Insert('/',cellValue,5);
       end
       else if ((Length(cellValue) = 0) or (Length(cellValue) = 5) or (Length(cellValue) = 7)) then
       begin
         Result := False;
         Exit;
       end
       else
       begin
         cellValue := copy(CustomDate,1,8-Length(cellValue)) + cellValue;
         Insert('/',cellValue,7);
         Insert('/',cellValue,5);
       end;

     end;

     dateTime := strtodatetime(cellValue);
     //systemDate := strtodatetime('1752/9/14');  // DEL 2012/12/18
     systemDate := strtodatetime('1753/01/01');   // ADD 2012/12/18
     if (systemDate > dateTime) then
     begin
        Result := False;
     end
     else
     begin
        Result := True;
     end;


   except
     Result := False;
   end;

  Exit;
end;
// ADD 2012/10/15 --- <<<


// *************************************************************************
// 車両情報のbackgroundの設定処理
// *************************************************************************
procedure TForm4.xCarInfoFormSettingForColor(enabledValue: Boolean);

begin
  if enabledValue then
  begin
    produceFrameNo.Color := clWhite;
    firstEntryDate.Color := clWhite;
    carMngCode.Color := clWhite;
    fullModel.Color := clWhite;
    engineModelNm.Color := clWhite;
    categoryNo.Color := clWhite;
    modelDesignationNo.Color := clWhite;
    engineModelNm.Color := clWhite;
    modelSubCode.Color := clWhite;
    modelCode.Color := clWhite;
    makerCode.Color := clWhite;
    trimNo.Color := clWhite;
    colorNo.Color := clWhite;
    modelFullName.Color := clWhite;
  end else
  begin
    produceFrameNo.Color := clInactiveBorder;
    firstEntryDate.Color := clBtnFace;
    carMngCode.Color := clInactiveBorder;
    fullModel.Color := clInactiveBorder;
    engineModelNm.Color := clBtnFace;
    categoryNo.Color := clBtnFace;
    modelDesignationNo.Color := clBtnFace;
    engineModelNm.Color := clInactiveBorder;
    modelSubCode.Color := clInactiveBorder;
    modelCode.Color := clInactiveBorder;
    makerCode.Color := clInactiveBorder;
    trimNo.Color := clInactiveBorder;
    colorNo.Color := clInactiveBorder;
    modelFullName.Color := clInactiveBorder;
  end;

end;

// *************************************************************************
//  計上ボタンツール有効無効設定処理
// *************************************************************************
procedure TForm4.xSettingAddUpButtonToolEnabled(nextControl: TWinControl);

begin
//  if nextControl = nil then exit;

  try // 2011/01/31
    if nextControl = HNsGrid1 then
    begin
        if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_ReadOnly)
        or (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_AddUp) then
        begin
            shipmentAddUpButton.Enabled := false; // 貸出計上
            acceptAnOrderAddUpButton.Enabled := false; // 受注計上
            estimateAddUpButton.Enabled := false;
        end else begin
            case salesSlip_disp.AcptAnOdrStatusDisplay of
            10:
            begin
              shipmentAddUpButton.Enabled := false; // 貸出計上
              acceptAnOrderAddUpButton.Enabled := false; // 受注計上
              estimateAddUpButton.Enabled := false;
            end;
            15:
            begin
              shipmentAddUpButton.Enabled := false; // 貸出計上
              acceptAnOrderAddUpButton.Enabled := false; // 受注計上
              estimateAddUpButton.Enabled := false;
            end;
            30:
            begin
              shipmentAddUpButton.Enabled := true; // 貸出計上
              acceptAnOrderAddUpButton.Enabled := true; // 受注計上
              estimateAddUpButton.Enabled := true;
            end;
            40:
            begin
              shipmentAddUpButton.Enabled := false; // 貸出計上
              acceptAnOrderAddUpButton.Enabled := true; // 受注計上
              estimateAddUpButton.Enabled := true;
            end;
            end;
        end;
    end else
    begin
        shipmentAddUpButton.Enabled := true; // 貸出計上
        acceptAnOrderAddUpButton.Enabled := true; // 受注計上
        estimateAddUpButton.Enabled := true;
    end;
// 2011/01/31 >>>
  finally
    toolMenu_shipmentAddUpButton.Enabled := shipmentAddUpButton.Enabled;
    toolMenu_acceptAnOrderAddUpButton.Enabled := acceptAnOrderAddUpButton.Enabled;
    toolMenu_estimateAddUpButton.Enabled := estimateAddUpButton.Enabled;
  end;
// 2011/01/31 <<<
end;

// *************************************************************************
//  車両検索後のコントロール取得処理
// *************************************************************************
// --- UPD 2010/06/26 ---------->>>>>
//function TForm4.xGetNextCtrlAfterCarSearch(): TWinControl;
function TForm4.xGetNextCtrlAfterCarSearch(prevCtrl: TWinControl): TWinControl;
// --- UPD 2010/06/26 ----------<<<<<
var
  focusPositionAfterCarSearchValue : Integer;
begin
  gpxMAHNB01013B_GetSalesSlipInputConstructionData(focusPositionAfterCarSearchValue, 4);

  // --- ADD 2010/06/26 ---------->>>>>
  if (focusPositionAfterCarSearchValue = 0) then
  begin
    Result := xGetNextControl(prevCtrl, 0);
    Exit;
  end;
  // --- ADD 2010/06/26 ----------<<<<<

  if (focusPositionAfterCarSearchValue = 1)
     and (FirstEntryDate.Visible) and (not FirstEntryDate.ReadOnly) then
  begin
    Result := FirstEntryDate;
    Exit;
  end;

  if (focusPositionAfterCarSearchValue = 2)
     and (ProduceFrameNo.Visible) and (not ProduceFrameNo.ReadOnly) then
  begin
    Result := ProduceFrameNo;
    Exit;
  end;

  if (focusPositionAfterCarSearchValue = 3)
     and (HNsGrid1.Enabled) then
  begin
    Result := HNsGrid1;
    Exit;
  end;
end;

// --- ADD 2013/05/10 T.Miyamoto ---------->>>>>
// *************************************************************************
//  車両検索後のコントロール取得処理(車輌未検索の場合)
// *************************************************************************
function TForm4.xGetNextCtrlNotCarSearch(): TWinControl;
begin
  Result := ModelDesignationNo; //型式指定番号

  if (CategoryNo.GetInt() <> 0) then
  begin
    Result := CategoryNo; //類別番号
  end else if (Trim(FullModel.Text) <> '') then
  begin
    Result := FullModel; //フル型式
  end else if (Trim(EngineModelNm.Text) <> '') then
  begin
    Result := EngineModelNm; //エンジン型式
  end;
end;
// --- ADD 2013/05/10 T.Miyamoto ----------<<<<<

// *************************************************************************
//  Row明細色の設定
// *************************************************************************
procedure TForm4.xSetGridSelRowColor(grid : THNsGrid; rowIndex : Integer);
var
  i : Integer;
begin
  if not setColorFlag then
  begin
    Exit;
  end;

  grid.SelectRows(rowIndex ,1);

  // 方法3
  grid.RowColor[rowIndex] := $0094E6FB;
  grid.RowColorTo[rowIndex] := $001595EE;

  for i := 1 to grid.RowCount do
  begin
    if i <> rowIndex then
    begin
      if i mod 2 <> 0 then
      begin
        grid.RowColor[i] := clWindow;
        grid.RowColorTo[i] := clWindow;
      end else
      begin
        grid.RowColor[i] := $00FAE6E6;
        grid.RowColorTo[i] := $00FAE6E6;
      end;
    end;
  end;
end;

// *************************************************************************
//  Column明細色の設定
// *************************************************************************
procedure TForm4.xSetGridSelColColor(grid : THNsGrid; colIndex : Integer);
var
  i , j: Integer;
begin
  if colIndex = 0 then
  begin
    colIndex := colIndex + 1;
  end;

  grid.SelectCols(colIndex, 1);

  for i := 1 to grid.RowCount do
  begin
    if i mod 2 <> 0 then
    begin
      grid.RowColor[i] := clWindow;
      grid.RowColorTo[i] := clWindow;

      grid.Colors[colIndex, i] := $0094E6FB;
      grid.ColorsTo[colIndex, i] := $001595EE;
    end else
    begin
      grid.RowColor[i] := $00FAE6E6;
      grid.RowColorTo[i] := $00FAE6E6;

      grid.Colors[colIndex, i] := $0094E6FB;
      grid.ColorsTo[colIndex, i] := $001595EE;
    end;
  end;
end;

// *************************************************************************
//  グリッド列初期設定処理
// *************************************************************************
procedure TForm4.xSettingCarSpecGridCol(carInfo: TCarInfo);
begin
  HNsGrid5.Cells[10, 0] := carInfo.AddiCarSpecTitle1;
  HNsGrid5.Cells[10, 1] := carInfo.AddiCarSpec1;
  if carInfo.AddiCarSpecTitle1 = '' then
  begin
    HNsGrid5.HideColumn(10);
  end else
  begin
    HNsGrid5.UnHideColumn(10);
    HNsGrid5.Alignments[10, 0] := taCenter;
  end;

  HNsGrid5.Cells[11, 0] := carInfo.AddiCarSpecTitle2;
  HNsGrid5.Cells[11, 1] := carInfo.AddiCarSpec2;
  if carInfo.AddiCarSpecTitle2 = '' then
  begin
    HNsGrid5.HideColumn(11);
  end else
  begin
    HNsGrid5.UnHideColumn(11);
    HNsGrid5.Alignments[11, 0] := taCenter;
  end;

  HNsGrid5.Cells[12, 0] := carInfo.AddiCarSpecTitle3;
  HNsGrid5.Cells[12, 1] := carInfo.AddiCarSpec3;
  if carInfo.AddiCarSpecTitle3 = '' then
  begin
    HNsGrid5.HideColumn(12);
  end else
  begin
    HNsGrid5.UnHideColumn(12);
    HNsGrid5.Alignments[12, 0] := taCenter;
  end;

  HNsGrid5.Cells[13, 0] := carInfo.AddiCarSpecTitle4;
  HNsGrid5.Cells[13, 1] := carInfo.AddiCarSpec4;
  if carInfo.AddiCarSpecTitle4 = '' then
  begin
    HNsGrid5.HideColumn(13);
  end else
  begin
    HNsGrid5.UnHideColumn(13);
    HNsGrid5.Alignments[13, 0] := taCenter;
  end;

  HNsGrid5.Cells[14, 0] := carInfo.AddiCarSpecTitle5;
  HNsGrid5.Cells[14, 1] := carInfo.AddiCarSpec5;
  if carInfo.AddiCarSpecTitle5 = '' then
  begin
    HNsGrid5.HideColumn(14);
  end else
  begin
    HNsGrid5.UnHideColumn(14);
    HNsGrid5.Alignments[14, 0] := taCenter;
  end;

  HNsGrid5.Cells[15, 0] := carInfo.AddiCarSpecTitle6;
  HNsGrid5.Cells[15, 1] := carInfo.AddiCarSpec6;
  if carInfo.AddiCarSpecTitle6 = '' then
  begin
    HNsGrid5.HideColumn(15);
  end else
  begin
    HNsGrid5.UnHideColumn(15);
    HNsGrid5.Alignments[15, 0] := taCenter;
  end;

end;

// *************************************************************************
//  HeaderItems設定処理
// *************************************************************************
procedure TForm4.xSetItemsDictionary();
var
  i: Integer;
  headControlNames, footControlNames: string;
  funtcionControlNames, funtcionDetailControlNames: string;
begin
  headControlNames := SectionCode.Name + '&' + pnl2.Caption
          + ',' + SubSectionCode.Name + '&' + pnl_SubSection.Caption
          + ',' + CustomerCode.Name + '&' + pnl4.Caption
          + ',' + CustomerName.Name + '&' + '得意先名称'
          + ',' + CustomerClaimConfirmationBtn.Name + '&' + CustomerClaimConfirmationBtn.Caption
          + ',' + SalesEmployeeCd.Name + '&' + pnl5.Caption
          + ',' + FrontEmployeeCd.Name + '&' + pnl_FrontEmployee.Caption
          + ',' + SalesInputCode.Name + '&' + pnl_SalesInputCode.Caption
          + ',' + AcptAnOdrStatusDisplayComBo.Name + '&' + pnl9.Caption
          + ',' + SalesSlipDisplayComBo.Name + '&' + pnl10.Caption
          + ',' + SalesDate.Name + '&' + pnl_SalesDate.Caption
          + ',' + CarMngCode.Name + '&' + carMngNo.Caption
          + ',' + ModelDesignationNo.Name + '&' + pnl_ModelDesignationNo.Caption
          + ',' + EngineModelNm.Name + '&' + Label1.Caption
          + ',' + FullModel.Name + '&' + FullModelBtn.Caption
          // --- UPD 2010/06/02 ---------->>>>>
//          + ',' + MakerCode.Name + '&' + 'メーカーコード'
          + ',' + MakerCode.Name + '&' + '車種メーカー'
          // --- UPD 2010/06/02 ----------<<<<<
          + ',' + ModelCode.Name + '&' + '車種コード'
          + ',' + ModelSubCode.Name + '&' + '車種呼称コード'
          + ',' + ModelFullName.Name + '&' + '車種名称'
          + ',' + FirstEntryDate.Name + '&' + pnl25.Caption
          + ',' + ProduceFrameNo.Name + '&' + pnl26.Caption
          + ',' + ColorNo.Name + '&' + Label3.Caption
          + ',' + TrimNo.Name + '&' + Label7.Caption;

  footControlNames := SlipNoteCode.Name + '&' + '伝票備考コード'
          + ',' + SlipNote.Name + '&' + '伝票備考'
          + ',' + SlipNote2Code.Name + '&' + '伝票備考２コード'
          + ',' + SlipNote2.Name + '&' + '伝票備考２'
          + ',' + SlipNote3Code.Name + '&' + '伝票備考３コード'
          + ',' + SlipNote3.Name + '&' + '伝票備考３'
          + ',' + AddresseeCode.Name + '&' + '納入先コード'
          + ',' + AddresseeName.Name + '&' + pnl_AddresseeCode.Caption
          + ',' + DeliveredGoodsDivComBo.Name + '&' + pnl_DeliveredGoodsDiv.Caption
          + ',' + AddresseeConfirmationBtn.Name + '&' + AddresseeConfirmationBtn.Caption
          + ',' + RetGoodsReason.Name + '&' + pnl46.Caption
          + ',' + PartySaleSlipNum.Name + '&' + pnl_PartySaleSlipNum.Caption
          // ADD 2013/02/12 SCM障害№10280対応------------------------>>>>>
          + ',' + HEdit_PartySalesSlipNum.Name + '&' + Label_PartySalesSlipNum.Caption
          // ADD 2013/02/12 SCM障害№10280対応------------------------<<<<<
          // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
          + ',' + CarNoteCode.Name + '&' + '車輌備考コード'
          // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------<<<<<
          + ',' + CarSlipNote.Name + '&' + Panel54.Caption
          + ',' + Mileage.Name + '&' + Panel57.Caption;
  //---ADD 2010/07/06---------->>>>>
  funtcionControlNames := 'ButtonTool_Close' + '&' + '終了(F1)'
          + ',' + 'ButtonTool_New' + '&' + '新規(F9)'
          + ',' + 'ButtonTool_Save' + '&' + '確定(F10)'
          + ',' + 'ButtonTool_DeleteSlip' + '&' + '伝票削除(F12)'
          + ',' + 'ButtonTool_Return' + '&' + '戻る(F2)'
          + ',' + 'ButtonTool_Forward' + '&' + '進む(F3)'
          + ',' + 'ButtonTool_Guide' + '&' + 'ガイド(F5)'
          + ',' + 'ButtonTool_SearchChange' + '&' + '検索切替(F4)'
          + ',' + 'ButtonTool_ReadSlip' + '&' + '伝票呼出(X)'
          + ',' + 'ButtonTool_ShipmentAddUp' + '&' + '貸出計上(I)'
          + ',' + 'ButtonTool_AcceptAnOrderAddUp' + '&' + '受注計上(H)'
          + ',' + 'ButtonTool_EstimateAddUp' + '&' + '見積計上(Q)'
          + ',' + 'ButtonTool_SlipHeaderCopy' + '&' + '見出貼付(F6)'
          + ',' + 'ButtonTool_Update' + '&' + '更新(V)'
          + ',' + 'ButtonTool_Retry' + '&' + '元に戻す(U)'
          + ',' + 'ButtonTool_RedSlip' + '&' + '赤伝(R)'
          + ',' + 'ButtonTool_ReturnSlip' + '&' + '返品(Y)'
          + ',' + 'ButtonTool_CopySlip' + '&' + '伝票複写(P)'
          //+ ',' + 'ButtonTool_Setup' + '&' + '設定(O)'  // DEL 2010/11/25
          + ',' + 'ButtonTool_Setup' + '&' + '設定(O)' // 2010/12/02
          + ',' + 'ButtonTool_ReNewal' + '&' + '最新情報(A)'
          + ',' + 'ButtonTool_ReferenceList' + '&' + '問合せ一覧'
          + ',' + 'ButtonTool_ReplyTransaction' + '&' + '回答処理'
          + ',' + 'ButtonTool_Mail' + '&' + 'メール'
          + ',' + 'ButtonTool_DateUpdate' + '&' + '日付修正(F8)'       // ADD 2011/08/02
          // ----UPD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
          //+ ',' + 'ButtonTool_DetailCopy' + '&' + '明細貼付(D)';      // ADD 連番729 2011/08/18
          + ',' + 'ButtonTool_DetailCopy' + '&' + '明細貼付(D)'
          + ',' + 'ButtonTool_UOEDataGet' + '&' + '回答取込(T)'// ADD  黄興貴 K2015/04/29 回答取込パタン追加
          // + ',' + 'ButtonTool_DiscountAllLine' + '&' + '一括値引(E)';  // DEL K2015/04/01 高騁 森川部品個別依頼
          // ------  ADD K2015/04/01 高騁 森川部品個別依頼------->>>>>
          + ',' + 'ButtonTool_DiscountAllLine' + '&' + '一括値引(E)'
          // ----- UPD　2018/09/04 譚洪　履歴自動表示の対応 ------>>>>>
          //+ ',' + 'ButtonTool_AllSecInfo' + '&' + '在庫情報(S)';
          + ',' + 'ButtonTool_AllSecInfo' + '&' + '在庫情報(S)'
          //----- UPD 譚洪 2020/02/24 PMKOBETSU-2912の対応------->>>>>
          //+ ',' + 'ButtonTool_HisSearch' + '&' + '履歴検索(F)';
          + ',' + 'ButtonTool_HisSearch' + '&' + '履歴検索(F)'
          // --- UPD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応  ----->>>>>
          //+ ',' + 'ButtonTool_GetTaxRate' + '&' + '消費税率(J)';
          + ',' + 'ButtonTool_GetTaxRate' + '&' + '消費税率(J)'
          + ',' + 'ButtonTool_EBooks' + '&' + '電帳.DX(G)';
          // --- UPD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応 -----<<<<<
          //----- UPD 譚洪 2020/02/24 PMKOBETSU-2912の対応-------<<<<<
          // ----- UPD　2018/09/04 譚洪　履歴自動表示の対応 ------<<<<<
          // ------  ADD K2015/04/01 高騁 森川部品個別依頼-------<<<<<
          // ----UPD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
    //---ADD 2010/07/06----------<<<<<

    //---ADD 2010/08/13---------->>>>>
  funtcionDetailControlNames := 'btnInputStockInfo' + '&' + '仕入(F6)'
          + ',' + 'btnInputOrderInfo' + '&' + '発注(F12)';
    //---ADD 2010/08/13----------<<<<<

  //---UPD 2010/07/06---------->>>>>
//  gpxMAHNB01013B_SetItemsDictionary(headControlNames, footControlNames);
  gpxMAHNB01013B_SetItemsDictionary(headControlNames, footControlNames, funtcionControlNames, funtcionDetailControlNames);
  //---UPD 2010/07/06----------<<<<<

end;

// *************************************************************************
//  nameより、コントロールの取込
// *************************************************************************
function TForm4.xGetControlByName(name : string) : TWinControl;
begin
   Result := SectionCode;

  // 拠点コード
  if name = SectionCode.Name then
  begin
    Result := SectionCode;
    Exit;
  end;

  // 部門コード
  if name = SubSectionCode.Name then
  begin
    Result := SubSectionCode;
    Exit;
  end;

  // 得意先コード
  if name = CustomerCode.Name then
  begin
    Result := CustomerCode;
    Exit;
  end;

  // 得意先
  if name = CustomerName.Name then
  begin
    Result := CustomerName;
    Exit;
  end;

  // 請求先
  if name = CustomerClaimConfirmationBtn.Name then
  begin
    Result := CustomerClaimConfirmationBtn;
    Exit;
  end;

  //
  if name = SalesEmployeeCd.Name then
  begin
    Result := SalesEmployeeCd;
    Exit;
  end;

  if name = FrontEmployeeCd.Name then
  begin
    Result := FrontEmployeeCd;
    Exit;
  end;

  if name = SalesInputCode.Name then
  begin
    Result := SalesInputCode;
    Exit;
  end;

  if name = AcptAnOdrStatusDisplayComBo.Name then
  begin
    Result := AcptAnOdrStatusDisplayComBo;
    Exit;
  end;

  if name = SalesSlipDisplayComBo.Name then
  begin
    Result := SalesSlipDisplayComBo;
    Exit;
  end;

  if name = SalesDate.Name then
  begin
    Result := SalesDate;
    Exit;
  end;

  if name = CarMngCode.Name then
  begin
    Result := CarMngCode;
    Exit;
  end;

  if name = ModelDesignationNo.Name then
  begin
    Result := ModelDesignationNo;
    Exit;
  end;

  if name = EngineModelNm.Name then
  begin
    Result := EngineModelNm;
    Exit;
  end;

  if name = FullModel.Name then
  begin
    Result := FullModel;
    Exit;
  end;

  if name = MakerCode.Name then
  begin
    Result := MakerCode;
    Exit;
  end;

  if name = ModelCode.Name then
  begin
    Result := ModelCode;
    Exit;
  end;

  if name = ModelSubCode.Name then
  begin
    Result := ModelSubCode;
    Exit;
  end;

  if name = ModelFullName.Name then
  begin
    Result := ModelFullName;
    Exit;
  end;

  if name = FirstEntryDate.Name then
  begin
    Result := FirstEntryDate;
    Exit;
  end;

  if name = ProduceFrameNo.Name then
  begin
    Result := ProduceFrameNo;
    Exit;
  end;

  if name = ColorNo.Name then
  begin
    Result := ColorNo;
    Exit;
  end;

  if name = TrimNo.Name then
  begin
    Result := TrimNo;
    Exit;
  end;

  if name = SlipNoteCode.Name then
  begin
    Result := SlipNoteCode;
    Exit;
  end;

  if name = SlipNote.Name then
  begin
    Result := SlipNote;
    Exit;
  end;

  if name = SlipNote2Code.Name then
  begin
    Result := SlipNote2Code;
    Exit;
  end;

  if name = SlipNote2.Name then
  begin
    Result := SlipNote2;
    Exit;
  end;

  if name = SlipNote3Code.Name then
  begin
    Result := SlipNote3Code;
    Exit;
  end;

  if name = SlipNote3.Name then
  begin
    Result := SlipNote3;
    Exit;
  end;

  if name = AddresseeCode.Name then
  begin
    Result := AddresseeCode;
    Exit;
  end;

  if name = AddresseeName.Name then
  begin
    Result := AddresseeName;
    Exit;
  end;

  if name = DeliveredGoodsDivComBo.Name then
  begin
    Result := DeliveredGoodsDivComBo;
    Exit;
  end;

  if name = AddresseeConfirmationBtn.Name then
  begin
    Result := AddresseeConfirmationBtn;
    Exit;
  end;

  if name = RetGoodsReason.Name then
  begin
    Result := RetGoodsReason;
    Exit;
  end;

  if name = PartySaleSlipNum.Name then
  begin
    Result := PartySaleSlipNum;
    Exit;
  end;

  // --- ADD 2014/05/19 T.Miyamoto 仕掛一覧№2218 ------------------------------>>>>>
  if name = CarNoteCode.Name then
  begin
    Result := CarNoteCode;
    Exit;
  end;
  // --- ADD 2014/05/19 T.Miyamoto -仕掛一覧№2218 -----------------------------<<<<<

  if name = CarSlipNote.Name then
  begin
    Result := CarSlipNote;
    Exit;
  end;

  if name = Mileage.Name then
  begin
    Result := Mileage;
    Exit;
  end;
  // ADD 2013/02/12 SCM障害№10280対応------------------------>>>>>
  // 指示書番号
  if name = HEdit_PartySalesSlipNum.Name then
  begin
    Result := HEdit_PartySalesSlipNum;
    Exit;
  end;
  // ADD 2013/02/12 SCM障害№10280対応------------------------<<<<<
end;

// *************************************************************************
//  粗利金額、原価金額、明細粗利率、伝票粗利率の表示の設定処理
// *************************************************************************
procedure TForm4.xSetMoneyVisible(visible: Boolean);
begin
  totalGrossProfitTitle.Visible := visible;
  totalGrossProfit.Visible := visible;
  detailGrossProfitRateTitle.Visible := visible;
  totalGrossProfitRateTitle.Visible := visible;
  totalCostTitle.Visible := visible;
  totalCost.Visible := visible;
  detailGrossProfitRate.Visible := visible;
  totalGrossProfitRate.Visible := visible;
end;

// --- ADD 2010/06/02 ---------->>>>>
// *************************************************************************
//
// *************************************************************************
procedure TForm4.xSetDetailGridForModel(rowIndex: Integer; colCnt: Integer);
var
  col: Integer;
begin

  if (salesSlip_disp.InputMode <> ctINPUTMODE_SalesSlip_Red) then Exit; // 2010/10/26 Sasaki Add

  if rowIndex < i_RowMaxCount then
  begin
    for col := 1 to colCnt do
    begin
      if (salesSlip_disp.InputMode = ctINPUTMODE_SalesSlip_Red) then
      begin
        // 使用不可
        xGridColumnDisSet(rowIndex, col, 2);
      end;
    end;
  end;
end;
// --- ADD 2010/06/02 ----------<<<<<

// 2011/01/31 Del >>>
//// --- ADD 2010/07/08 ---------->>>>>
//procedure TForm4.xSetReplyTransactionButtonEnable();
//var
//  rowIndex : Integer;
//  salesSlip: TSalesSlip;
//begin
//  gpxMAHNB01012B_GetSalesSlip(salesSlip);
//
//  //・伝票種別＝貸出
//  //・伝票種別＝単価見積
//  if (salesSlip.AcptAnOdrStatusDisplay = 40)
//    or (salesSlip.AcptAnOdrStatusDisplay = 15) then
//  begin
//    ReplyTransactionButton.Enabled := False;
//    toolReplyTransactionButton.Enabled := False;
//  end else
//  begin
//    ReplyTransactionButton.Enabled := True;
//    toolReplyTransactionButton.Enabled := True;
//  end;
//
//  //・伝票種別＝売上　で出荷数と発注数が入力されていない
//  if (salesSlip.AcptAnOdrStatusDisplay = 30) then
//  begin
//    for rowIndex := 0 to HNsGrid1.LogicalRowCount - 1 do
//    begin
//      if HNsGrid1.ReadOnly[ctCol_ShipmentCntDisplay, rowIndex * 2 + 1] = False then
//      begin
//        if (HNsGrid1.cells[ctCol_ShipmentCntDisplay, rowIndex * 2 + 1] = '')
//        and (HNsGrid1.cells[ctCol_AcceptAnOrderCntForOrder, rowIndex * 2] = '') then
//        begin
//          ReplyTransactionButton.Enabled := False;
//          toolReplyTransactionButton.Enabled := False;
//          Exit;
//        end;
//      end;
//    end;
//    ReplyTransactionButton.Enabled := True;
//    toolReplyTransactionButton.Enabled := True;
//  end;
//end;
//// --- ADD 2010/07/08 ----------<<<<<
// 2011/01/31 Del <<<

// *************************************************************************
// 新規
// *************************************************************************
procedure TForm4.xtoolbarSet;
var
widthTemp : Integer;
// 2011/01/31 >>>
  buttonVisible : Boolean;
  buttonVisible2 : Boolean;
  dropDownVisible: Boolean;
  index : Integer;
// 2011/01/31 <<<
begin
  widthTemp := 0;

  //SCM自動回答ｵﾌﾟｼｮﾝ設定時のみ表示
  if (optScm = 0) then
  begin
// 2011/01/31 >>>
//    tToolButtonsVisible[20] := False;
//    tToolButtonsVisible[21] := False;
    tToolButtonsVisible[ctToolButtonIndex_ReferenceList] := False;
// 2011/01/31 <<<
  end;
  //QRｺｰﾄﾞ携帯ﾒｰﾙｵﾌﾟｼｮﾝ設定時のみ表示
  if (optQRMail = 0) then
  begin
// 2011/01/31 >>>
//    tToolButtonsVisible[22] := False;
    tToolButtonsVisible[ctToolButtonIndex_Mail] := False;
// 2011/01/31 <<<
  end;
  //赤伝（Ｘ）
  if (not b_redSlipVisible) then
  begin
// 2011/01/31 >>>
//    tToolButtonsVisible[15] := False;
    tToolButtonsVisible[ctToolButtonIndex_RedSlip] := False;
// 2011/01/31 <<<
    // --- ADD 2013/02/04 Wakita ---------->>>>>
    tToolButtonsVisible[ctToolButtonIndex_ReturnSlip] := False;
    // --- ADD 2013/02/04 Wakita ----------<<<<<
  end;
  //伝票呼出（Ｘ）
  if (not b_revisionVisible) then
  begin
// 2011/01/31 >>>
//    tToolButtonsVisible[8] := False;
    tToolButtonsVisible[ctToolButtonIndex_ReadSlip] := False;
// 2011/01/31 <<<
  end;
  //伝票削除（Ｘ）
  if (not b_deleteVisible) then
  begin
// 2011/01/31 >>>
//    tToolButtonsVisible[3] := False;
    tToolButtonsVisible[ctToolButtonIndex_DeleteSlip] := False;
// 2011/01/31 <<<
  end else
  begin
//    tToolButtonsVisible[3] := True;    // DEL 2010/07/19
  end;

  // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
  //伝票値引(E)
  if(not b_slipDiscountVisible) then
  begin
    tToolButtonsVisible[ctToolButtonIndex_DiscountAllLine] := False;
  end;
  // ----ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<

  // ------  ADD K2015/04/01 高騁 森川部品個別依頼------->>>>>
  //在庫情報(S)
  if(not isOptPermitForMoriKawa) then
  begin
    tToolButtonsVisible[ctToolButtonIndex_AllSecInfo] := False;
  end;
  // ------  ADD K2015/04/01 高騁 森川部品個別依頼-------<<<<<

  // --- DEL  譚洪 2015/10/26 Redmine#47609 ------------------>>>>>
  // ---- ADD  黄興貴 K2015/04/29 回答取込パタン追加 ---- >>>>>
//  if(not isOptPermitForFuJi) then
//  begin
//    tToolButtonsVisible[ctToolButtonIndex_UOEDataGet] := False;
//  end;
  // ---- ADD 黄興貴 K2015/04/29 回答取込パタン追加 ---- <<<<<

  // ---- ADD  紀飛 K2015/06/18 WebUOE発注回答取込 ---- >>>>>
//  if(not isOptPermitForMeiGo) then
//  begin
//    tToolButtonsVisible[ctToolButtonIndex_UOEDataGet] := False;
//  end;
  // ---- ADD 紀飛 K2015/06/18 WebUOE発注回答取込 ---- <<<<<
  // --- DEL  譚洪 2015/10/26 Redmine#47609 ------------------<<<<<

    // --- ADD  譚洪 2015/10/26 Redmine#47609 ------------------>>>>>
    if(not isOptPermitForMeiGo and not isOptPermitForFuJi) then
    begin
      tToolButtonsVisible[ctToolButtonIndex_UOEDataGet] := False;
    end;
    // --- ADD  譚洪 2015/10/26 Redmine#47609 ------------------<<<<<
    // --- ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応--->>>>>
    if(not isOptPermitForEBooks) then
    begin
      tToolButtonsVisible[ctToolButtonIndex_EBooks] := False;
    end;
    // --- ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応---<<<<<

// 2011/01/31 >>>
//  //終了(F1)
//  if (tToolButtonsVisible[0]) then
//  begin
//    closeButton.Visible := True;
//    widthTemp := widthTemp + closeButton.Width;
//  end
//  else
//  begin
//    closeButton.Visible := False;
//  end;
//  //新規(F9)
//  if (tToolButtonsVisible[1]) then
//  begin
//    newButton.Visible := True;
//    widthTemp := widthTemp + newButton.Width;
//  end
//  else
//  begin
//    newButton.Visible := False;
//  end;
//  //確定(F10)
//  if (tToolButtonsVisible[2]) then
//  begin
//    saveButton.Visible := True;
//    widthTemp := widthTemp + saveButton.Width;
//  end
//  else
//  begin
//    saveButton.Visible := False;
//  end;
//  //伝票削除(F12)
//  if (tToolButtonsVisible[3]) then
//  begin
//    deleteSlipButton.Visible := True;
//    widthTemp := widthTemp + deleteSlipButton.Width;
//  end
//  else
//  begin
//    deleteSlipButton.Visible := False;
//  end;
//  //戻る(F2)
//  if (tToolButtonsVisible[4]) then
//  begin
//    returnButton.Visible := True;
//    widthTemp := widthTemp + returnButton.Width;
//  end
//  else
//  begin
//    returnButton.Visible := False;
//  end;
//  //進む(F3)
//  if (tToolButtonsVisible[5]) then
//  begin
//    forwardButton.Visible := True;
//    widthTemp := widthTemp + forwardButton.Width;
//  end
//  else
//  begin
//    forwardButton.Visible := False;
//  end;
//  //ガイド(F5)
//  if (tToolButtonsVisible[6]) then
//  begin
//    guideButton.Visible := True;
//    widthTemp := widthTemp + guideButton.Width;
//  end
//  else
//  begin
//    guideButton.Visible := False;
//  end;
//  //検索切替(F4)
//  if (tToolButtonsVisible[7]) then
//  begin
//    searchCarChangeButton.Visible := True;
//    widthTemp := widthTemp + searchCarChangeButton.Width;
//  end
//  else
//  begin
//    searchCarChangeButton.Visible := False;
//  end;
//  //伝票呼出(X)
//  if (tToolButtonsVisible[8]) then
//  begin
//    ReadSlipButton.Visible := True;
//    widthTemp := widthTemp + ReadSlipButton.Width;
//  end
//  else
//  begin
//    ReadSlipButton.Visible := False;
//  end;
//  //貸出計上(I)
//  if (tToolButtonsVisible[9]) then
//  begin
//    shipmentAddUpButton.Visible := True;
//    widthTemp := widthTemp + shipmentAddUpButton.Width;
//  end
//  else
//  begin
//    shipmentAddUpButton.Visible := False;
//  end;
//  //受注計上(H)
//  if (tToolButtonsVisible[10]) then
//  begin
//    acceptAnOrderAddUpButton.Visible := True;
//    widthTemp := widthTemp + acceptAnOrderAddUpButton.Width;
//  end
//  else
//  begin
//    acceptAnOrderAddUpButton.Visible := False;
//  end;
//  //見積計上(Q)
//  if (tToolButtonsVisible[11]) then
//  begin
//    estimateAddUpButton.Visible := True;
//    widthTemp := widthTemp + estimateAddUpButton.Width;
//  end
//  else
//  begin
//    estimateAddUpButton.Visible := False;
//  end;
//  //見出貼付(F6)
//  if (tToolButtonsVisible[12]) then
//  begin
//    SlipHeaderCopyButton.Visible := True;
//    widthTemp := widthTemp + SlipHeaderCopyButton.Width;
//  end
//  else
//  begin
//    SlipHeaderCopyButton.Visible := False;
//  end;
//  //更新(V)
//  if (tToolButtonsVisible[13]) then
//  begin
//    updateButton.Visible := True;
//    widthTemp := widthTemp + updateButton.Width;
//  end
//  else
//  begin
//    updateButton.Visible := False;
//  end;
//
//  widthTemp := widthTemp + DorpdownList.Width;
//
//  if (widthTemp > Form4.Width - 90) then
//  begin
//
//    toolRetryButton.Visible := False;
//    toolRedSlipButton.Visible := False;
//    toolReturnSlipButton.Visible := False;
//    toolCopySlipButton.Visible := False;
//    toolSetupButton.Visible := False;
//    toolReNewalbtn.Visible := False;
//    toolReferenceListButton.Visible := False;
//    toolReplyTransactionButton.Visible := False;
//    toolMailButton.Visible := False;
//
//    DorpdownList.Visible := False;
//
//    //元に戻す(U)
//    if (tToolButtonsVisible[14]) then
//    begin
//      retryButton.Visible := True;
//      DorpdownList.Visible := True;
//    end
//    else
//    begin
//      retryButton.Visible := False;
//    end;
//
//    //赤伝(R)　
//    if (tToolButtonsVisible[15]) then
//    begin
//      redSlipButton.Visible := True;
//      DorpdownList.Visible := True;
//    end
//    else
//    begin
//      redSlipButton.Visible := False;
//    end;
//
//    //返品(Y)　
//    if (tToolButtonsVisible[16]) then
//    begin
//      returnSlipButton.Visible := True;
//      DorpdownList.Visible := True;
//    end
//    else
//    begin
//      returnSlipButton.Visible := False;
//    end;
//
//    //伝票複写(P)　
//    if (tToolButtonsVisible[17]) then
//    begin
//      copySlipButton.Visible := True;
//      DorpdownList.Visible := True;
//    end
//    else
//    begin
//      copySlipButton.Visible := False;
//    end;
//
//    //設定(O)　
//    if (tToolButtonsVisible[18]) then
//    begin
//      SetupButton.Visible := True;
//      DorpdownList.Visible := True;
//    end
//    else
//    begin
//      SetupButton.Visible := False;
//    end;
//
//    //最新情報(A)
//    if (tToolButtonsVisible[19]) then
//    begin
//      ReNewalbtn.Visible := True;
//      DorpdownList.Visible := True;
//    end
//    else
//    begin
//      ReNewalbtn.Visible := False;
//    end;
//
//    //問合せ一覧
//    if (tToolButtonsVisible[20]) then
//    begin
//      ReferenceListButton.Visible := True;
//      DorpdownList.Visible := True;
//    end
//    else
//    begin
//      ReferenceListButton.Visible := False;
//    end;
//
//    //回答処理
//    if (tToolButtonsVisible[21]) then
//    begin
//      ReplyTransactionButton.Visible := True;
//      DorpdownList.Visible := True;
//    end
//    else
//    begin
//      ReplyTransactionButton.Visible := False;
//    end;
//
//    //メール
//    if (tToolButtonsVisible[22]) then
//    begin
//      MailButton.Visible := True;
//      DorpdownList.Visible := True;
//    end
//    else
//    begin
//      MailButton.Visible := False;
//    end;
//  end
//  else
//  begin
//    //元に戻す(U)
//    if (tToolButtonsVisible[14]) then
//    begin
//      toolRetryButton.Visible := True;
//      widthTemp := widthTemp + toolRetryButton.Width;
//
//      if (widthTemp > Form4.Width - 90) then
//      begin
//        toolRedSlipButton.Visible := False;
//        toolReturnSlipButton.Visible := False;
//        toolCopySlipButton.Visible := False;
//        toolSetupButton.Visible := False;
//        toolReNewalbtn.Visible := False;
//        toolReferenceListButton.Visible := False;
//        toolReplyTransactionButton.Visible := False;
//        toolMailButton.Visible := False;
//
//        DorpdownList.Visible := False;
//
//        //元に戻す(U)
//        retryButton.Visible := False;
//
//        //赤伝(R)　
//        if (tToolButtonsVisible[15]) then
//        begin
//          redSlipButton.Visible := True;
//          DorpdownList.Visible := True;
//        end
//        else
//        begin
//          redSlipButton.Visible := False;
//        end;
//
//        //返品(Y)　
//        if (tToolButtonsVisible[16]) then
//        begin
//          returnSlipButton.Visible := True;
//          DorpdownList.Visible := True;
//        end
//        else
//        begin
//          returnSlipButton.Visible := False;
//        end;
//
//        //伝票複写(P)　
//        if (tToolButtonsVisible[17]) then
//        begin
//          copySlipButton.Visible := True;
//          DorpdownList.Visible := True;
//        end
//        else
//        begin
//          copySlipButton.Visible := False;
//        end;
//
//        //設定(O)　
//        if (tToolButtonsVisible[18]) then
//        begin
//          SetupButton.Visible := True;
//          DorpdownList.Visible := True;
//        end
//        else
//        begin
//          SetupButton.Visible := False;
//        end;
//
//        //最新情報(A)
//        if (tToolButtonsVisible[19]) then
//        begin
//          ReNewalbtn.Visible := True;
//          DorpdownList.Visible := True;
//        end
//        else
//        begin
//          ReNewalbtn.Visible := False;
//        end;
//
//        //問合せ一覧
//        if (tToolButtonsVisible[20]) then
//        begin
//          ReferenceListButton.Visible := True;
//          DorpdownList.Visible := True;
//        end
//        else
//        begin
//          ReferenceListButton.Visible := False;
//        end;
//
//        //回答処理
//        if (tToolButtonsVisible[21]) then
//        begin
//          ReplyTransactionButton.Visible := True;
//          DorpdownList.Visible := True;
//        end
//        else
//        begin
//          ReplyTransactionButton.Visible := False;
//        end;
//
//        //メール
//        if (tToolButtonsVisible[22]) then
//        begin
//          MailButton.Visible := True;
//          DorpdownList.Visible := True;
//        end
//        else
//        begin
//          MailButton.Visible := False;
//        end;
//      end
//      else
//      begin
//        //赤伝(R)
//        xtoolbarSet8(widthTemp);
//      end;
//    end
//    //赤伝(R)
//    else if (tToolButtonsVisible[15]) then
//    begin
//      toolRetryButton.Visible := False;
//      xtoolbarSet8(widthTemp);
//    end
//    //返品(Y)
//    else if (tToolButtonsVisible[16]) then
//    begin
//      toolRetryButton.Visible := False;
//      toolRedSlipButton.Visible := False;
//      xtoolbarSet7(widthTemp);
//    end
//    //伝票複写(P)
//    else if (tToolButtonsVisible[17]) then
//    begin
//      toolRetryButton.Visible := False;
//      toolRedSlipButton.Visible := False;
//      toolReturnSlipButton.Visible := False;
//      xtoolbarSet6(widthTemp);
//    end
//    //設定(O)
//    else if (tToolButtonsVisible[18]) then
//    begin
//      toolRetryButton.Visible := False;
//      toolRedSlipButton.Visible := False;
//      toolReturnSlipButton.Visible := False;
//      toolCopySlipButton.Visible := False;
//      xtoolbarSet5(widthTemp);
//    end
//    //最新情報(A)
//    else if (tToolButtonsVisible[19]) then
//    begin
//      toolRetryButton.Visible := False;
//      toolRedSlipButton.Visible := False;
//      toolReturnSlipButton.Visible := False;
//      toolCopySlipButton.Visible := False;
//      toolSetupButton.Visible := False;
//      xtoolbarSet4(widthTemp);
//    end
//    //問合せ一覧
//    else if (tToolButtonsVisible[20]) then
//    begin
//      toolRetryButton.Visible := False;
//      toolRedSlipButton.Visible := False;
//      toolReturnSlipButton.Visible := False;
//      toolCopySlipButton.Visible := False;
//      toolSetupButton.Visible := False;
//      toolReNewalbtn.Visible := False;
//      xtoolbarSet3(widthTemp);
//    end
//    //回答処理
//    else if (tToolButtonsVisible[21]) then
//    begin
//      toolRetryButton.Visible := False;
//      toolRedSlipButton.Visible := False;
//      toolReturnSlipButton.Visible := False;
//      toolCopySlipButton.Visible := False;
//      toolSetupButton.Visible := False;
//      toolReNewalbtn.Visible := False;
//      toolReferenceListButton.Visible := False;
//      xtoolbarSet2(widthTemp);
//    end
//    //メール
//    else if (tToolButtonsVisible[22]) then
//    begin
//      toolRetryButton.Visible := False;
//      toolRedSlipButton.Visible := False;
//      toolReturnSlipButton.Visible := False;
//      toolCopySlipButton.Visible := False;
//      toolSetupButton.Visible := False;
//      toolReNewalbtn.Visible := False;
//      toolReferenceListButton.Visible := False;
//      toolReplyTransactionButton.Visible := False;
//      xtoolbarSet1(widthTemp);
//    end
//    else
//    begin
//      toolRetryButton.Visible := False;
//      toolRedSlipButton.Visible := False;
//      toolReturnSlipButton.Visible := False;
//      toolCopySlipButton.Visible := False;
//      toolSetupButton.Visible := False;
//      toolReNewalbtn.Visible := False;
//      toolReferenceListButton.Visible := False;
//      toolReplyTransactionButton.Visible := False;
//
//      retryButton.Visible := False;
//      redSlipButton.Visible := False;
//      returnSlipButton.Visible := False;
//      copySlipButton.Visible := False;
//      SetupButton.Visible := False;
//      ReNewalbtn.Visible := False;
//      ReferenceListButton.Visible := False;
//      ReplyTransactionButton.Visible := False;
//      MailButton.Visible := False;
//
//      DorpdownList.Visible := False;
//    end;
//  end;


  dropDownVisible := False;
  for index := 0 to ctToolButtonCount-1 do
  begin
    buttonVisible := tToolButtonsVisible[index];
    buttonVisible2 := tToolButtonsVisible[index];

    if (dropDownVisible) then
    begin
      buttonVisible := False;
    end
    else begin
      if (buttonVisible) then
        widthTemp := widthTemp + TToolButton(tToolButtons[1,index]).Width;
      if (widthTemp > Form4.Width - 70) then
      begin
        buttonVisible := False;
        buttonVisible2 := True;
        dropDownVisible := True;
      end;
    end;

    if (buttonVisible and buttonVisible2) then
      buttonVisible2 := False;

    case index of
      ctToolButtonIndex_Close:
        begin
          closeButton.Visible := buttonVisible;
          toolMenu_closeButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_New:
        begin
          newButton.Visible := buttonVisible;
          toolMenu_newButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_Save :
        begin
          saveButton.Visible := buttonVisible;
          toolMenu_saveButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_DeleteSlip:
        begin
          deleteSlipButton.Visible := buttonVisible;
          toolMenu_deleteSlipButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_Return:
        begin
          returnButton.Visible := buttonVisible;
          toolMenu_returnButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_Forward:
        begin
          forwardButton.Visible := buttonVisible;
          toolMenu_forwardButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_Guide:
        begin
          guideButton.Visible := buttonVisible;
          toolMenu_guideButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_SearchCarChange:
        begin
          searchCarChangeButton.Visible := buttonVisible;
          toolMenu_searchCarChangeButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_ReadSlip:
        begin
          ReadSlipButton.Visible := buttonVisible;
          toolMenu_ReadSlipButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_ShipmentAddUp:
        begin
          shipmentAddUpButton.Visible := buttonVisible;
          toolMenu_shipmentAddUpButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_AcceptAnOrderAddUp:
        begin
          acceptAnOrderAddUpButton.Visible := buttonVisible;
          toolMenu_acceptAnOrderAddUpButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_EstimateAddUp:
        begin
          estimateAddUpButton.Visible := buttonVisible;
          toolMenu_estimateAddUpButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_SlipHeaderCopy:
        begin
          SlipHeaderCopyButton.Visible := buttonVisible;
          toolMenu_SlipHeaderCopyButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_Update:
        begin
          updateButton.Visible := buttonVisible;
          toolMenu_UpdateButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_Retry:
        begin
          toolRetryButton.Visible := buttonVisible;
          retryButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_RedSlip:
        begin
          toolRedSlipButton.Visible := buttonVisible;
          RedSlipButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_ReturnSlip:
        begin
          toolReturnSlipButton.Visible := buttonVisible;
          ReturnSlipButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_CopySlip:
        begin
          toolCopySlipButton.Visible := buttonVisible;
          CopySlipButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_Setup:
        begin
          toolSetupButton.Visible := buttonVisible;
          SetupButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_ReNewal:
        begin
          toolReNewalbtn.Visible := buttonVisible;
          ReNewalbtn.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_ReferenceList:
        begin
          toolReferenceListButton.Visible := buttonVisible;
          ReferenceListButton.Visible := buttonVisible2;
        end;
      ctToolButtonIndex_Mail:
        begin
          toolMailButton.Visible := buttonVisible;
          MailButton.Visible := buttonVisible2;
        end;
// ------------ ADD 2011/08/02 ----------------- >>>>>
      ctToolButtonIndex_DateUpdate:
        begin
          dateUpdateBottun.Visible := buttonVisible;
          DateUpdatebtn.Visible := buttonVisible2;
        end;
// ------------ ADD 2011/08/02 ----------------- <<<<<
// ------------ ADD 連番729 2011/08/18 ----------------- >>>>>
      ctToolButtonIndex_DetailCopy:
        begin
          detailCopyButton.Visible := buttonVisible;
          toolMenu_detailCopyBtn.Visible := buttonVisible2;
        end;
// ------------ ADD 連番729 2011/08/18 ----------------- <<<<<
// ------------ ADD 2013/01/24 鄧潘ハン REDMINE#34141---- >>>>>
       ctToolButtonIndex_DiscountAllLine:
        begin
          discountAllLineBottun.Visible := buttonVisible;
          toolMenu_discountAllLineBtn.Visible := buttonVisible2;
        end;
// ------------ ADD 2013/01/24 鄧潘ハン REDMINE#34141---- <<<<<
// ------   ADD K2015/04/01 高騁 森川部品個別依頼 ------->>>>>
        ctToolButtonIndex_AllSecInfo:
          begin
            allSecInfoButton.visible := buttonVisible;
            toolMenu_allSecInfoBtn.visible := buttonVisible2;
          end;
// ------   ADD K2015/04/01 高騁 森川部品個別依頼 -------<<<<<
// ------------ ADD  黄興貴 K2015/04/29 回答取込パタン追加 ---- >>>>>
       ctToolButtonIndex_UOEDataGet:
       begin
         //if(isOptPermitForFuJi) then begin// DEL 譚洪 2015/10/26 Redmine#47609
         if(isOptPermitForFuJi or isOptPermitForMeiGo) then begin// ADD 譚洪 2015/10/26 Redmine#47609
           UOEDataGet.Visible := buttonVisible;
           toolMenu_UOEDataGet.Visible := buttonVisible2;
         end
         else begin
           UOEDataGet.Visible := False;
           toolMenu_UOEDataGet.Visible := False;
         end;
       end;
// ------------ ADD  黄興貴 K2015/04/29 回答取込パタン追加 ---- <<<<<
// ------------ ADD  2018/09/04 譚洪　履歴自動表示の対応 ---- >>>>>
       ctToolButtonIndex_HisSearch:
        begin
          toolHisSearchButton.Visible := buttonVisible;
          HisSearchButton.Visible := buttonVisible2;
        end;
// ------------ ADD  2018/09/04 譚洪　履歴自動表示の対応 ---- <<<<<
// ------------ ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応 ---- >>>>>
       ctToolButtonIndex_GetTaxRate:
        begin
          toolGetTaxRateButton.Visible := buttonVisible;
          GetTaxRateButton.Visible := buttonVisible2;
        end;
// ------------ ADD 譚洪 2020/02/24 PMKOBETSU-2912の対応 ---- <<<<<
// --- ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応  ----->>>>>
       ctToolButtonIndex_EBooks:
        begin
           if(isOptPermitForEBooks) then begin
          toolEBooksButton.Visible := buttonVisible;
          EBooksButton.Visible := buttonVisible2;
         end
         else begin
           toolEBooksButton.Visible := False;
           EBooksButton.Visible := False;
         end;

        end;
// --- ADD 陳艶丹 2022/04/26 PMKOBETSU-4208 電子帳簿対応  -----<<<<<

    end;
  end;
  DorpdownList.Visible := dropDownVisible;
// 2011/01/31 <<<
end;

// 2011/01/31 >>>
(*
// *************************************************************************
// ツールバイの赤伝(R)　
// *************************************************************************
procedure TForm4.xtoolbarSet8(widthTemp : Integer);
begin
    if (tToolButtonsVisible[15]) then
    begin
      toolRedSlipButton.Visible := True;
      widthTemp := widthTemp + toolRedSlipButton.Width;

      if (widthTemp > Form4.Width - 90) then
      begin
        toolReturnSlipButton.Visible := False;
        toolCopySlipButton.Visible := False;
        toolSetupButton.Visible := False;
        toolReNewalbtn.Visible := False;
        toolReferenceListButton.Visible := False;
        toolReplyTransactionButton.Visible := False;
        toolMailButton.Visible := False;

        DorpdownList.Visible := False;
        retryButton.Visible := False;
        redSlipButton.Visible := False;

        //返品(Y)　
        if (tToolButtonsVisible[16]) then
        begin
          returnSlipButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          returnSlipButton.Visible := False;
        end;

        //伝票複写(P)　
        if (tToolButtonsVisible[17]) then
        begin
          copySlipButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          copySlipButton.Visible := False;
        end;

        //設定(O)　
        if (tToolButtonsVisible[18]) then
        begin
          SetupButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          SetupButton.Visible := False;
        end;

        //最新情報(A)
        if (tToolButtonsVisible[19]) then
        begin
          ReNewalbtn.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReNewalbtn.Visible := False;
        end;

        //問合せ一覧
        if (tToolButtonsVisible[20]) then
        begin
          ReferenceListButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReferenceListButton.Visible := False;
        end;

        //回答処理
        if (tToolButtonsVisible[21]) then
        begin
          ReplyTransactionButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReplyTransactionButton.Visible := False;
        end;

        //メール
        if (tToolButtonsVisible[22]) then
        begin
          MailButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          MailButton.Visible := False;
        end;

      end
      else
      begin
        //返品(Y)
        xtoolbarSet7(widthTemp);
      end;
    end
    else
    //返品(Y)
    if (tToolButtonsVisible[16]) then
    begin
      toolRedSlipButton.Visible := False;
      xtoolbarSet7(widthTemp);
    end
    //伝票複写(P)
    else if (tToolButtonsVisible[17]) then
    begin
      toolRedSlipButton.Visible := False;
      toolReturnSlipButton.Visible := False;
      xtoolbarSet6(widthTemp);
    end
    //設定(O)
    else if (tToolButtonsVisible[18]) then
    begin
      toolRedSlipButton.Visible := False;
      toolReturnSlipButton.Visible := False;
      toolCopySlipButton.Visible := False;
      xtoolbarSet5(widthTemp);
    end
    //最新情報(A)
    else if (tToolButtonsVisible[19]) then
    begin
      toolRedSlipButton.Visible := False;
      toolReturnSlipButton.Visible := False;
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      xtoolbarSet4(widthTemp);
    end
    //問合せ一覧
    else if (tToolButtonsVisible[20]) then
    begin
      toolRedSlipButton.Visible := False;
      toolReturnSlipButton.Visible := False;
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      xtoolbarSet3(widthTemp);
    end
    //回答処理
    else if (tToolButtonsVisible[21]) then
    begin
      toolRedSlipButton.Visible := False;
      toolReturnSlipButton.Visible := False;
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      xtoolbarSet2(widthTemp);
    end
    //メール
    else if (tToolButtonsVisible[22]) then
    begin
      toolRedSlipButton.Visible := False;
      toolReturnSlipButton.Visible := False;
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      toolReplyTransactionButton.Visible := False;
      xtoolbarSet1(widthTemp);
    end
    else
    begin

      toolRedSlipButton.Visible := False;
      toolReturnSlipButton.Visible := False;
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      toolReplyTransactionButton.Visible := False;

      retryButton.Visible := False;
      redSlipButton.Visible := False;
      returnSlipButton.Visible := False;
      copySlipButton.Visible := False;
      SetupButton.Visible := False;
      ReNewalbtn.Visible := False;
      ReferenceListButton.Visible := False;
      ReplyTransactionButton.Visible := False;
      MailButton.Visible := False;

      DorpdownList.Visible := False;
    end;
end;

// *************************************************************************
// ツールバイの返品(Y)　
// *************************************************************************
procedure TForm4.xtoolbarSet7(widthTemp : Integer);
begin
    if (tToolButtonsVisible[16]) then
    begin
      toolReturnSlipButton.Visible := True;
      widthTemp := widthTemp + toolReturnSlipButton.Width;

      if (widthTemp > Form4.Width - 90) then
      begin
        toolCopySlipButton.Visible := False;
        toolSetupButton.Visible := False;
        toolReNewalbtn.Visible := False;
        toolReferenceListButton.Visible := False;
        toolReplyTransactionButton.Visible := False;
        toolMailButton.Visible := False;

        DorpdownList.Visible := False;
        retryButton.Visible := False;
        redSlipButton.Visible := False;
        returnSlipButton.Visible := False;

        //伝票複写(P)　
        if (tToolButtonsVisible[17]) then
        begin
          copySlipButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          copySlipButton.Visible := False;
        end;

        //設定(O)　
        if (tToolButtonsVisible[18]) then
        begin
          SetupButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          SetupButton.Visible := False;
        end;

        //最新情報(A)
        if (tToolButtonsVisible[19]) then
        begin
          ReNewalbtn.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReNewalbtn.Visible := False;
        end;

        //問合せ一覧
        if (tToolButtonsVisible[20]) then
        begin
          ReferenceListButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReferenceListButton.Visible := False;
        end;

        //回答処理
        if (tToolButtonsVisible[21]) then
        begin
          ReplyTransactionButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReplyTransactionButton.Visible := False;
        end;

        //メール
        if (tToolButtonsVisible[22]) then
        begin
          MailButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          MailButton.Visible := False;
        end;

      end
      else
      begin
        xtoolbarSet6(widthTemp);
      end;
    end
    else
    //伝票複写(P)
    if (tToolButtonsVisible[17]) then
    begin
      toolReturnSlipButton.Visible := False;
      xtoolbarSet6(widthTemp);
    end
    //設定(O)
    else if (tToolButtonsVisible[18]) then
    begin
      toolReturnSlipButton.Visible := False;
      toolCopySlipButton.Visible := False;
      xtoolbarSet5(widthTemp);
    end
    //最新情報(A)
    else if (tToolButtonsVisible[19]) then
    begin
      toolReturnSlipButton.Visible := False;
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      xtoolbarSet4(widthTemp);
    end
    //問合せ一覧
    else if (tToolButtonsVisible[20]) then
    begin
      toolReturnSlipButton.Visible := False;
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      xtoolbarSet3(widthTemp);
    end
    //回答処理
    else if (tToolButtonsVisible[21]) then
    begin
      toolReturnSlipButton.Visible := False;
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      xtoolbarSet2(widthTemp);
    end
    //メール
    else if (tToolButtonsVisible[22]) then
    begin
      toolReturnSlipButton.Visible := False;
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      toolReplyTransactionButton.Visible := False;
      xtoolbarSet1(widthTemp);
    end
    else
    begin
      toolReturnSlipButton.Visible := False;
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      toolReplyTransactionButton.Visible := False;

      retryButton.Visible := False;
      redSlipButton.Visible := False;
      returnSlipButton.Visible := False;
      copySlipButton.Visible := False;
      SetupButton.Visible := False;
      ReNewalbtn.Visible := False;
      ReferenceListButton.Visible := False;
      ReplyTransactionButton.Visible := False;
      MailButton.Visible := False;

      DorpdownList.Visible := False;
    end;
end;

// *************************************************************************
// ツールバイの伝票複写(P)
// *************************************************************************
procedure TForm4.xtoolbarSet6(widthTemp : Integer);
begin
    if (tToolButtonsVisible[17]) then
    begin
      toolCopySlipButton.Visible := True;
      widthTemp := widthTemp + toolCopySlipButton.Width;

      if (widthTemp > Form4.Width - 90) then
      begin
        toolSetupButton.Visible := False;
        toolReNewalbtn.Visible := False;
        toolReferenceListButton.Visible := False;
        toolReplyTransactionButton.Visible := False;
        toolMailButton.Visible := False;

        DorpdownList.Visible := False;
        retryButton.Visible := False;
        redSlipButton.Visible := False;
        returnSlipButton.Visible := False;
        copySlipButton.Visible := False;

        //設定(O)　
        if (tToolButtonsVisible[18]) then
        begin
          SetupButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          SetupButton.Visible := False;
        end;

        //最新情報(A)
        if (tToolButtonsVisible[19]) then
        begin
          ReNewalbtn.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReNewalbtn.Visible := False;
        end;

        //問合せ一覧
        if (tToolButtonsVisible[20]) then
        begin
          ReferenceListButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReferenceListButton.Visible := False;
        end;

        //回答処理
        if (tToolButtonsVisible[21]) then
        begin
          ReplyTransactionButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReplyTransactionButton.Visible := False;
        end;

        //メール
        if (tToolButtonsVisible[22]) then
        begin
          MailButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          MailButton.Visible := False;
        end;

      end
      else
      begin
        xtoolbarSet5(widthTemp);
      end;
    end
    else
    //設定(O)
    if (tToolButtonsVisible[18]) then
    begin
      toolCopySlipButton.Visible := False;
      xtoolbarSet5(widthTemp);
    end
    //最新情報(A)
    else if (tToolButtonsVisible[19]) then
    begin
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      xtoolbarSet4(widthTemp);
    end
    //問合せ一覧
    else if (tToolButtonsVisible[20]) then
    begin
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      xtoolbarSet3(widthTemp);
    end
    //回答処理
    else if (tToolButtonsVisible[21]) then
    begin
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      xtoolbarSet2(widthTemp);
    end
    //メール
    else if (tToolButtonsVisible[22]) then
    begin
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      toolReplyTransactionButton.Visible := False;
      xtoolbarSet1(widthTemp);
    end
    else
    begin
      toolCopySlipButton.Visible := False;
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      toolReplyTransactionButton.Visible := False;

      retryButton.Visible := False;
      redSlipButton.Visible := False;
      returnSlipButton.Visible := False;
      copySlipButton.Visible := False;
      SetupButton.Visible := False;
      ReNewalbtn.Visible := False;
      ReferenceListButton.Visible := False;
      ReplyTransactionButton.Visible := False;
      MailButton.Visible := False;

      DorpdownList.Visible := False;
    end;
end;

// *************************************************************************
// ツールバイの設定(O)
// *************************************************************************
procedure TForm4.xtoolbarSet5(widthTemp : Integer);
begin
    if (tToolButtonsVisible[18]) then
    begin
      toolSetupButton.Visible := True;
      widthTemp := widthTemp + toolSetupButton.Width;

      if (widthTemp > Form4.Width - 90) then
      begin
        toolReNewalbtn.Visible := False;
        toolReferenceListButton.Visible := False;
        toolReplyTransactionButton.Visible := False;
        toolMailButton.Visible := False;

        DorpdownList.Visible := False;
        retryButton.Visible := False;
        redSlipButton.Visible := False;
        returnSlipButton.Visible := False;
        copySlipButton.Visible := False;
        SetupButton.Visible := False;

        //最新情報(A)
        if (tToolButtonsVisible[19]) then
        begin
          ReNewalbtn.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReNewalbtn.Visible := False;
        end;

        //問合せ一覧
        if (tToolButtonsVisible[20]) then
        begin
          ReferenceListButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReferenceListButton.Visible := False;
        end;

        //回答処理
        if (tToolButtonsVisible[21]) then
        begin
          ReplyTransactionButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReplyTransactionButton.Visible := False;
        end;

        //メール
        if (tToolButtonsVisible[22]) then
        begin
          MailButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          MailButton.Visible := False;
        end;

      end
      else
      begin
        //最新情報(A)
        xtoolbarSet4(widthTemp);
      end;
    end
    else
    if (tToolButtonsVisible[19]) then
    begin
      //最新情報(A)
      toolSetupButton.Visible := False;
      xtoolbarSet4(widthTemp);
    end
    //問合せ一覧
    else if (tToolButtonsVisible[20]) then
    begin
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      xtoolbarSet3(widthTemp);
    end
    //回答処理
    else if (tToolButtonsVisible[21]) then
    begin
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      xtoolbarSet2(widthTemp);
    end
    //メール
    else if (tToolButtonsVisible[22]) then
    begin
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      toolReplyTransactionButton.Visible := False;
      xtoolbarSet1(widthTemp);
    end
    else
    begin
      toolSetupButton.Visible := False;
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      toolReplyTransactionButton.Visible := False;

      retryButton.Visible := False;
      redSlipButton.Visible := False;
      returnSlipButton.Visible := False;
      copySlipButton.Visible := False;
      SetupButton.Visible := False;
      ReNewalbtn.Visible := False;
      ReferenceListButton.Visible := False;
      ReplyTransactionButton.Visible := False;
      MailButton.Visible := False;

      DorpdownList.Visible := False;
    end;
end;

// *************************************************************************
// ツールバイの最新情報(A)
// *************************************************************************
procedure TForm4.xtoolbarSet4(widthTemp : Integer);
begin
    if (tToolButtonsVisible[19]) then
    begin
      toolReNewalbtn.Visible := True;
      widthTemp := widthTemp + toolReNewalbtn.Width;

      if (widthTemp > Form4.Width - 90) then
      begin
        toolReferenceListButton.Visible := False;
        toolReplyTransactionButton.Visible := False;
        toolMailButton.Visible := False;

        DorpdownList.Visible := False;
        retryButton.Visible := False;
        redSlipButton.Visible := False;
        returnSlipButton.Visible := False;
        copySlipButton.Visible := False;
        SetupButton.Visible := False;
        ReNewalbtn.Visible := False;

        //問合せ一覧
        if (tToolButtonsVisible[20]) then
        begin
          ReferenceListButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReferenceListButton.Visible := False;
        end;

        //回答処理
        if (tToolButtonsVisible[21]) then
        begin
          ReplyTransactionButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReplyTransactionButton.Visible := False;
        end;

        //メール
        if (tToolButtonsVisible[22]) then
        begin
          MailButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          MailButton.Visible := False;
        end;
      end
      else
      //問合せ一覧
      begin
        xtoolbarSet3(widthTemp);
      end;
    end
    else
    //問合せ一覧
    if (tToolButtonsVisible[20]) then
    begin
      toolReNewalbtn.Visible := False;
      xtoolbarSet3(widthTemp);
    end
    //回答処理
    else if (tToolButtonsVisible[21]) then
    begin
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      xtoolbarSet2(widthTemp);
    end
    //メール
    else if (tToolButtonsVisible[22]) then
    begin
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      toolReplyTransactionButton.Visible := False;
      xtoolbarSet1(widthTemp);
    end
    else
    begin
      toolReNewalbtn.Visible := False;
      toolReferenceListButton.Visible := False;
      toolReplyTransactionButton.Visible := False;

      retryButton.Visible := False;
      redSlipButton.Visible := False;
      returnSlipButton.Visible := False;
      copySlipButton.Visible := False;
      SetupButton.Visible := False;
      ReNewalbtn.Visible := False;
      ReferenceListButton.Visible := False;
      ReplyTransactionButton.Visible := False;
      MailButton.Visible := False;

      DorpdownList.Visible := False;
    end;
end;

// *************************************************************************
// ツールバイの問合せ一覧
// *************************************************************************
procedure TForm4.xtoolbarSet3(widthTemp : Integer);
begin
    if (tToolButtonsVisible[20]) then
    begin
      toolReferenceListButton.Visible := True;
      widthTemp := widthTemp + toolReferenceListButton.Width;

      if (widthTemp > Form4.Width - 90) then
      begin
        toolReplyTransactionButton.Visible := False;
        toolMailButton.Visible := False;

        DorpdownList.Visible := False;
        retryButton.Visible := False;
        redSlipButton.Visible := False;
        returnSlipButton.Visible := False;
        copySlipButton.Visible := False;
        SetupButton.Visible := False;
        ReNewalbtn.Visible := False;
        ReferenceListButton.Visible := False;

        //回答処理
        if (tToolButtonsVisible[21]) then
        begin
          ReplyTransactionButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          ReplyTransactionButton.Visible := False;
        end;

        //メール
        if (tToolButtonsVisible[22]) then
        begin
          MailButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          MailButton.Visible := False;
        end;

      end
      else
      //回答処理
      begin
        xtoolbarSet2(widthTemp);
      end;
    end
    //回答処理
    else
    if (tToolButtonsVisible[21]) then
    begin
      toolReferenceListButton.Visible := False;
      xtoolbarSet2(widthTemp);
    end
    //メール
    else if (tToolButtonsVisible[22]) then
    begin
      toolReferenceListButton.Visible := False;
      toolReplyTransactionButton.Visible := False;
      xtoolbarSet1(widthTemp);
    end
    else
    begin
      toolReferenceListButton.Visible := False;
      toolReplyTransactionButton.Visible := False;

      retryButton.Visible := False;
      redSlipButton.Visible := False;
      returnSlipButton.Visible := False;
      copySlipButton.Visible := False;
      SetupButton.Visible := False;
      ReNewalbtn.Visible := False;
      ReferenceListButton.Visible := False;
      ReplyTransactionButton.Visible := False;
      MailButton.Visible := False;

      DorpdownList.Visible := False;
    end;
end;

// *************************************************************************
// ツールバイの回答処理
// *************************************************************************
procedure TForm4.xtoolbarSet2(widthTemp : Integer);
begin
    if (tToolButtonsVisible[21]) then
    begin
      toolReplyTransactionButton.Visible := True;
      widthTemp := widthTemp + toolReplyTransactionButton.Width;

      if (widthTemp > Form4.Width - 90) then
      begin
        toolMailButton.Visible := False;

        DorpdownList.Visible := False;
        retryButton.Visible := False;
        redSlipButton.Visible := False;
        returnSlipButton.Visible := False;
        copySlipButton.Visible := False;
        SetupButton.Visible := False;
        ReNewalbtn.Visible := False;
        ReferenceListButton.Visible := False;
        ReplyTransactionButton.Visible := False;

        //メール
        if (tToolButtonsVisible[22]) then
        begin
          MailButton.Visible := True;
          DorpdownList.Visible := True;
        end
        else
        begin
          MailButton.Visible := False;
        end;

      end
      else
      begin
        //メール
        xtoolbarSet1(widthTemp);
      end;
    end
    //メール
    else
    if (tToolButtonsVisible[22]) then
    begin
      toolReplyTransactionButton.Visible := False;
      xtoolbarSet1(widthTemp);
    end
    else
    begin
      toolReplyTransactionButton.Visible := False;

      retryButton.Visible := False;
      redSlipButton.Visible := False;
      returnSlipButton.Visible := False;
      copySlipButton.Visible := False;
      SetupButton.Visible := False;
      ReNewalbtn.Visible := False;
      ReferenceListButton.Visible := False;
      ReplyTransactionButton.Visible := False;
      MailButton.Visible := False;

      DorpdownList.Visible := False;
    end;
end;

// *************************************************************************
// ツールバイのメール
// *************************************************************************
procedure TForm4.xtoolbarSet1(widthTemp : Integer);
begin
    if (tToolButtonsVisible[22]) then
    begin
      toolMailButton.Visible := True;

      retryButton.Visible := False;
      redSlipButton.Visible := False;
      returnSlipButton.Visible := False;
      copySlipButton.Visible := False;
      SetupButton.Visible := False;
      ReNewalbtn.Visible := False;
      ReferenceListButton.Visible := False;
      ReplyTransactionButton.Visible := False;
      MailButton.Visible := False;

      DorpdownList.Visible := False;
    end
    else
    begin
      toolMailButton.Visible := False;

      retryButton.Visible := False;
      redSlipButton.Visible := False;
      returnSlipButton.Visible := False;
      copySlipButton.Visible := False;
      SetupButton.Visible := False;
      ReNewalbtn.Visible := False;
      ReferenceListButton.Visible := False;
      ReplyTransactionButton.Visible := False;
      MailButton.Visible := False;

      DorpdownList.Visible := False;
    end;
end;
*)
// 2011/01/31 <<<

//>>>2010/07/15
procedure TForm4.FreeLib();
begin
  FreeLibraryMAHNB01012B(HDllCALL1);
  FreeLibraryMAHNB01019B(HDllCALL1);
  FreeLibraryMAHNB01013B(HDllCALL1);
end;
//<<<2010/07/15

// UPD 2010/09/14 -- >>>>
//function TForm4.Minutes(Time: TDateTime) : Integer;
//var
//H, M, S, MS:word;
//begin
//  DecodeTime(Time, H, M, S, MS);
//  result := H*3600 +  60*M + S
//end;

function TForm4.Minutes(Time: TDateTime) : LongInt;
var
H, M, S, MS:word;
begin
  DecodeTime(Time, H, M, S, MS);
  result := H*3600*1000 +  60*M*1000 + S*1000 + MS
end;

function TForm4.MinuteDiff(Beginning :TDateTime; Ending:TDateTime):LongInt;
begin
   result :=  Minutes(Ending - Beginning);
end;

//--------------- ADD 2011/07/20 -------------------- >>>>>
// *************************************************************************
// Gridの内容を数字に転化できるかとうか判断
// *************************************************************************
function TForm4.CanStrToFloat(str : string) : Boolean;
var
  tmp : Double;
  flg : Boolean;
begin
  flg := True;
  try
    tmp := StrToFloat(AnsiReplaceStr(str, ',', ''));
    flg := True;
  except on e: Exception do
    flg := False;
  end;

  Result := flg;
end;
//--------------- ADD 2011/07/20 -------------------- <<<<<

//function TForm4.MinuteDiff(Beginning :TDateTime; Ending:TDateTime):Integer;
//begin
//   result :=  Minutes(Ending - Beginning);
//end;
// UPD 2010/09/14 -- <<<<

// ADD 2012/02/09 李占川 Redmine#28289 --- >>>>>
procedure TForm4.Timer5Timer(Sender: TObject);
var printThreadOverFlag: Boolean;
begin
  gpxMAHNB01012B_GetPrintThreadOverFlag(printThreadOverFlag);

  if (printThreadOverFlag) then
  begin
    Timer5.Enabled := false;
    Close;
  end;

end;
// ADD 2012/02/09 李占川 Redmine#28289 --- <<<<
// --- ADD 2012/08/21 Wakita ---------->>>>>
// *************************************************************************
// 車輌情報からファンクションキーによるフォーカス移動時に車輌情報を保存
// *************************************************************************
procedure TForm4.xSettingKeepCarInfo();
var
  PrevCtrl: TWinControl;
begin
    // 管理番号、類別、エンジン型式、型式、
    // 車種、年式、車台番号、カラー、トリム
    if ((Form4.ActiveControl.Name = 'CarMngCode')         or
        (Form4.ActiveControl.Name = 'ModelDesignationNo') or
        (Form4.ActiveControl.Name = 'CategoryNo')         or
        (Form4.ActiveControl.Name = 'EngineModelNm')      or
        (Form4.ActiveControl.Name = 'FullModel')          or
        (Form4.ActiveControl.Name = 'MakerCode')          or
        (Form4.ActiveControl.Name = 'ModelCode')          or
        (Form4.ActiveControl.Name = 'ModelSubCode')       or
        (Form4.ActiveControl.Name = 'ModelFullName')      or
        (Form4.ActiveControl.Name = 'FirstEntryDate')     or
        (Form4.ActiveControl.Name = 'ProduceFrameNo')     or
        (Form4.ActiveControl.Name = 'ColorNo')            or
        (Form4.ActiveControl.Name = 'TrimNo')) then
    begin
        PrevCtrl := Form4.ActiveControl;
        // 次の項目へフォーカス移動
        ArrowKeyControl1ChangeFocus(PrevCtrl, PrevCtrl, 0);
    end;
end;
// --- ADD 2012/08/21 Wakita ----------<<<<<

// --- ADD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ---------->>>>>
//**********************************************************************
// 行削除権限の判定処理
//----------------------------------------------------------------------
// 引  数 iChkRow  :Integer  チェック行
// 戻り値          :Boolean  False:権限なし
//**********************************************************************
function TForm4.xRowDelChk(iChkRow: Integer): Boolean;
var  ret:Boolean;	// ADD 2014/11/11 Wakita 仕掛一覧№1912 システムテスト障害対応
begin
  Result := True;

  // --- ADD 2014/11/11 Wakita 仕掛一覧№1912 システムテスト障害対応 ---------->>>>>
  // SCM情報ありの伝票の場合、行操作不可
  if (salesSlip_disp.InquiryNumber <> 0) then
  begin
    if (salesSlip_disp.SalesSlipNum <> ctDefaultSalesSlipNum) then
    begin
      // SCM情報存在チェック
      gpxMAHNB01013B_ExistSCMInfo(ret, salesSlip_disp.SalesSlipNum, iChkRow);
      if (ret) then
      begin
        Result := False;
        Exit;
      end;
    end;
  end;
// --- ADD 2014/11/11 Wakita 仕掛一覧№1912 システムテスト障害対応 ----------<<<<<

  // --- DEL 2014/08/21 Wakita 仕掛一覧№1912 システムテスト障害対応 ---------->>>>>
//  if (RCHNB01003UADM.EditStatus[iChkRow - 1] = ctEDITSTATUS_ExistSlip) and  //行編集ステータス（通常修正）
//     (gpxMAHNB01013B_GetOperationSt(ctOperationCode_RowDelete) = True) then //システムロール設定で伝票修正(行削除)の操作権限が無効
//  begin
//    Result := False;
//  end;
  // --- DEL 2014/08/21 Wakita 仕掛一覧№1912 システムテスト障害対応 ----------<<<<<

  // --- ADD 2014/08/21 Wakita 仕掛一覧№1912 システムテスト障害対応 ---------->>>>>
  if (RCHNB01003UADM.SalesSlipDtlNum[iChkRow -1] <> 0) then
  begin
    // 行編集ステータス（行値引き、注釈、商品値引き、通常修正）
    // システムロール設定で伝票修正(行削除)の操作権限が無効
    if (gpxMAHNB01013B_GetOperationSt(ctOperationCode_RowDelete) = True) then
    begin
      Result := False;
    end;
  end;
  // --- ADD 2014/08/21 Wakita 仕掛一覧№1912 システムテスト障害対応 ---------->>>>>

end;

//**********************************************************************
// 行削除権限の判定処理（複数明細）
//----------------------------------------------------------------------
// 引  数 iFromRow :Integer  チェック開始行
//        iToRow   :Integer  チェック終了行
// 戻り値          :Boolean  False:権限なし
//**********************************************************************
function TForm4.xRowDelChkFromTo(iFromRow, iToRow: Integer): Boolean;
var
  iChkRow :Integer;
begin
  Result := True;

  for iChkRow := iFromRow to iToRow do
  begin
    Result := xRowDelChk(iChkRow);
    if (Result = False) then Break;
  end;
end;
// --- ADD 2014/07/15 T.Miyamoto 仕掛一覧№1912 ----------<<<<<

// --- ADD 2016/01/21 Wakita ---------->>>>>
//**********************************************************************
// 計上情報の表示
//----------------------------------------------------------------------
// 引  数 iSalesRowNo :Integer  チェック行
//**********************************************************************
procedure TForm4.xAddUpinfoDsp(iSalesRowNo: Integer);
type
  tAddUpStr   = array[ctAddUpInfo_Def..ctAddUpInfo_Already] of String;
  tAddUpColor = array[ctAddUpInfo_Def..ctAddUpInfo_Already] of TColor;
const
  cAddUpStr   :tAddUpStr   = ('', '未', '部', '済'); //計上状況文字
  cAddUpColor :tAddUpColor = (ctAddUpColor_Def
                             ,ctAddUpColor_Non
                             ,ctAddUpColor_Part
                             ,ctAddUpColor_Already);
var
  iChkAddUp :Integer;
begin
  // 売上明細データテーブルの指定したレコードから計上状況を取得する
  iChkAddUp := gpxMAHNB01013B_GridJoinCheck(iSalesRowNo, ctRow_AddUpInfo, 0, ctGridCheckMode_AddUpInfo);
  // 計上状況文字表示
  HNsGrid1.LogicalCells[ctCol_AddUpInfo, ctRow_AddUpInfo, iSalesRowNo] := cAddUpStr[iChkAddUp];
  //計上済表示カラー
  HNsGrid1.LogicalColors  [ctCol_AddUpInfo, ctRow_AddUpInfo, iSalesRowNo] := cAddUpColor[iChkAddUp];
  HNsGrid1.LogicalColorsTo[ctCol_AddUpInfo, ctRow_AddUpInfo, iSalesRowNo] := cAddUpColor[iChkAddUp];
end;

//**********************************************************************
// ヒント表示イベント(Application)
//**********************************************************************
procedure TForm4.AppShowHint(var HintStr: string; var CanShow: Boolean; var HintInfo: THintInfo);
var
  ACol, ARow :Integer;
  salesRowNo :Integer;
  StockCountInfo :WideString;
begin
  with HintInfo do
  begin
    //明細グリッドでのイベント
    if (HintControl = HNsGrid1) then
    begin
      //マウスカーソルからセル位置取得
      HNsGrid1.MouseToCell(CursorPos.x, CursorPos.y, ACol, ARow);
      salesRowNo := RCHNB01003UADM.SalesRowNo[ARow div 2 - 1];

      //出荷数でのヒント表示
      if ((ACol = ctCol_ShipmentCntDisplay) and ((ARow mod 2) = 1)) then
      begin
        if ((RCHNB01003UADM.AcptAnOdrStatus[salesRowNo -1] <> acptAnOdrStatusState_AcceptAnOrder) //受注ステータス≠20:受注
          and (gpxMAHNB01013B_GridJoinCheck(salesRowNo, ARow, -1, 1) = 0)) then
        begin
          if ((RCHNB01003UADM.AcptAnOdrStatus[salesRowNo -1] = acptAnOdrStatusState_Shipment) and //受注ステータス＝40:貸出
              (RCHNB01003UADM.AcptAnOdrStatusSrc[salesRowNo -1] = 0) and                          //受注ステータス(元)＝0→元伝
              (RCHNB01003UADM.SalesSlipDtlNum[salesRowNo -1] <> 0)) then                          //売上明細通番≠0→新規明細以外
          begin
            gpxMAHNB01012B_CreateStockCountInfoString(salesRowNo, StockCountInfo);
            if (StockCountInfo <> '') then
            begin
              HintStr := '数量情報' + StockCountInfo;
              //マウスカーソルが対象セルから外れた時に強制的にヒントを更新させる
              CursorRect := HNsGrid1.CellRect(ACol, ARow);
              //ヒントが表示されてから1秒後にヒントを更新(イベント再起動)
              //※一定時間経過で自動的に消えるのを回避
              ReshowTimeout := 1000;
            end;
          end;
        end;
      //受注数でのヒント表示
      end else if ((ACol = ctCol_AcceptAnOrderCntDisplay) and ((ARow mod 2) = 0)) then
      begin
        if ((RCHNB01003UADM.AcptAnOdrStatus[salesRowNo -1] = acptAnOdrStatusState_AcceptAnOrder)
            and (gpxMAHNB01013B_GridJoinCheck(salesRowNo, ARow, -1, 1) = 0)) then
        begin
          if ((RCHNB01003UADM.AcptAnOdrStatusSrc[salesRowNo -1] = 0) and  //受注ステータス(元)＝0→元伝
              (RCHNB01003UADM.SalesSlipDtlNum[salesRowNo -1] <> 0)) then  //売上明細通番≠0→新規明細以外
          begin
            gpxMAHNB01012B_CreateStockCountInfoString(salesRowNo, StockCountInfo);
            if (StockCountInfo <> '') then
            begin
              HintStr := '数量情報' + StockCountInfo;
              //マウスカーソルが対象セルから外れた時に強制的にヒントを更新させる
              CursorRect := HNsGrid1.CellRect(ACol, ARow);
              //ヒントが表示されてから1秒後にヒントを更新(イベント再起動)
              //※一定時間経過で自動的に消えるのを回避
              ReshowTimeout := 1000;
            end;
          end;
        end;
      end;
    end;
  end;
end;
// --- ADD 2016/01/21 Wakita ----------<<<<<


end.
