<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SFCMN00002C</name>
    </assembly>
    <members>
        <member name="T:Broadleaf.Library.Globarization.TDateTimeFormat">
            <summary>
            <see cref="T:Broadleaf.Library.Globarization.TDateTime"/>TDateTimeクラスで利用する列挙体です。
            TDateTimeで利用するDateTime型の内部形式を定義します
            </summary>
            <remarks>
            <br><see cref="T:Broadleaf.Library.Globarization.TDateTimeFormat"/>TDateTimeで利用するDateTime型の内部形式を定義します</br>
            </remarks>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeFormat.df4Y2M2D">
            <summary>
            "YYYYMMDD"の形式(例: 20050301)
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeFormat.df2Y2M2D">
            <summary>
            "YYMMDD"の形式(例: 050301)
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeFormat.dfG2Y2M2D">
            <summary>
            (和暦)GGYYMMDDの形式(例: 170301)
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeFormat.df4Y2M">
            <summary>
            YYYY年MM月の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeFormat.df2Y2M">
            <summary>
            YY年MM月の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeFormat.dfG2Y2M">
            <summary>
            元号YY年MM月の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeFormat.df2M2D">
            <summary>
            MM月DD日の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeFormat.df4Y">
            <summary>
            YYYY年の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeFormat.df2Y">
            <summary>
            MM月の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeFormat.dfG2Y">
            <summary>
            元号YY年の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeFormat.df2M">
            <summary>
            MM月の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeFormat.df2D">
            <summary>
            DD日の形式
            </summary>
        </member>
        <member name="T:Broadleaf.Library.Globarization.TDateTimeStringFormat">
            <summary>
            <see cref="T:Broadleaf.Library.Globarization.TDateTime"/>TDateTimeクラスで利用する列挙体です。
            TDateTimeで扱う日付型を文字列に変換する際の出力形式を定義します
            </summary>
            <remarks>
            <br><see cref="T:Broadleaf.Library.Globarization.TDateTimeStringFormat"/>TDateTimeで扱う日付型を文字列に変換する際の出力形式を定義します</br>
            </remarks>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeStringFormat.df4Y2M2D">
            <summary>
            "YYYY年MM月DD日"の形式(例: "2005年03月01日")
            "YYYYMMDD"
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeStringFormat.df2Y2M2D">
            <summary>
            "YY年MM月DD日"の形式(例: "05年03月01日")
            "YYMMDD":
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeStringFormat.dfG2Y2M2D">
            <summary>
            元号YY年MM月DD日の形式(例: "平成17年03月01日")
            "GGYYMMDD":
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeStringFormat.df4Y2M">
            <summary>
            YYYY年MM月の形式(例: "2005年03月")
            "YYYYMM":
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeStringFormat.df2Y2M">
            <summary>
            xx年xx月の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeStringFormat.dfG2Y2M">
            <summary>
            元号xx年xx月xx日の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeStringFormat.df2M2D">
            <summary>
            xx月xx日の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeStringFormat.df4Y">
            <summary>
            xxxx年の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeStringFormat.df2Y">
            <summary>
            xx月の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeStringFormat.dfG2Y">
            <summary>
            元号xx年の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeStringFormat.df2M">
            <summary>
            xx月の形式
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeStringFormat.df2D">
            <summary>
            xx日の形式
            </summary>
        </member>
        <member name="T:Broadleaf.Library.Globarization.TLongDateEditor">
            <summary>
            LongDate形式日付の編集方法
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TLongDateEditor.Non">
            <summary>
            編集無し
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TLongDateEditor.ZeroSuppress">
            <summary>
            ゼロサプレス
            </summary>
        </member>
        <member name="T:Broadleaf.Library.Globarization.TDateTimeGengouMode">
            <summary>
            元号リスト取得時のモード。どの元号以降を取得するかの設定に使用する。
            ※改元がある際は、なるべく事前にモードを増やすようにしてください。
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeGengouMode.Default">
            <summary>
            デフォルト（明治以降と同様の動作をします）：0
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeGengouMode.StartsWithMeiji">
            <summary>
            明治以降を取得するモード：1
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeGengouMode.StartsWithTaisho">
            <summary>
            大正以降を取得するモード：2
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeGengouMode.StartsWithShowa">
            <summary>
            昭和以降を取得するモード：3
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeGengouMode.StartsWithHeisei">
            <summary>
            平成以降を取得するモード：4
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTimeGengouMode.StartsWithWahei">
            <summary>
            和平以降を取得するモード：5
            </summary>
        </member>
        <member name="T:Broadleaf.Library.Globarization.EraInfo">
            <summary>
            元号データクラス
            </summary>
            <remarks>
            <br>Note       : XMLから読み込んだ元号の情報を保持するクラスです。</br>
            <br>Programmer : 31983 友廣 真一</br>
            <br>Date       : 2018.12.12</br>
            </remarks>
        </member>
        <member name="F:Broadleaf.Library.Globarization.EraInfo._eraName">
            <summary>
            元号名（例：平成）
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.EraInfo._eraShortName">
            <summary>
            元号略称（例：平）
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.EraInfo._eraUpperInitial">
            <summary>
            元号大文字頭文字（例：H）
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.EraInfo._eraLowerInitial">
            <summary>
            元号小文字頭文字（例：h）
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.EraInfo._startDate">
            <summary>
            元号開始日
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.EraInfo._endDate">
            <summary>
            元号終了日（現行の元号の場合は、DateTime.MaxValueを設定）
            </summary>
        </member>
        <member name="P:Broadleaf.Library.Globarization.EraInfo.EraName">
            <summary>
            元号名（例：平成）
            </summary>
        </member>
        <member name="P:Broadleaf.Library.Globarization.EraInfo.EraShortName">
            <summary>
            元号略称（例：平）
            </summary>
        </member>
        <member name="P:Broadleaf.Library.Globarization.EraInfo.EraUpperInitial">
            <summary>
            元号大文字頭文字（例：H）
            </summary>
        </member>
        <member name="P:Broadleaf.Library.Globarization.EraInfo.EraLowerInitial">
            <summary>
            元号小文字頭文字（例：h）
            </summary>
        </member>
        <member name="P:Broadleaf.Library.Globarization.EraInfo.StartDate">
            <summary>
            元号開始日
            </summary>
        </member>
        <member name="P:Broadleaf.Library.Globarization.EraInfo.EndDate">
            <summary>
            元号終了日
            </summary>
        </member>
        <member name="P:Broadleaf.Library.Globarization.EraInfo.IsPresentEra">
            <summary>
            現在の元号か否か
            </summary>
        </member>
        <member name="P:Broadleaf.Library.Globarization.EraInfo.BaseYear">
            <summary>
            西暦→和暦年変換時の基準年
            （開始年の1年前。西暦から基準年を引くことで和暦年を算出する）
            </summary>
        </member>
        <member name="T:Broadleaf.Library.Globarization.FormDateFormatInfo">
            <summary>
            各フォームのフォーマット情報
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.FormDateFormatInfo._formName">
            <summary>
            フォーム名
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.FormDateFormatInfo._dateFormatInfoArray">
            <summary>
            
            </summary>
        </member>
        <member name="P:Broadleaf.Library.Globarization.FormDateFormatInfo.FormName">
            <summary>
            フォーム名
            </summary>
        </member>
        <member name="P:Broadleaf.Library.Globarization.FormDateFormatInfo.DateFormatInfoArray">
            <summary>
            
            </summary>
        </member>
        <member name="T:Broadleaf.Library.Globarization.DateFormatInfo">
            <summary>
            各コンポーネントの日付フォーマット情報
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.DateFormatInfo._componentName">
            <summary>
            コンポーネント名
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.DateFormatInfo._dateFormat">
            <summary>
            日付フォーマット
            </summary>
        </member>
        <member name="P:Broadleaf.Library.Globarization.DateFormatInfo.ComponentName">
            <summary>
            コンポーネント名称
            </summary>
        </member>
        <member name="P:Broadleaf.Library.Globarization.DateFormatInfo.DateFormat">
            <summary>
            日付フォーマット
            </summary>
        </member>
        <member name="T:Broadleaf.Library.Globarization.TDateTime">
            <summary>
            日付時刻操作クラス
            </summary>
            <remarks>
            <br>Note       :  日付,時刻に関連する各種操作を提供します</br>
            <br>Programmer : 980056 R.Sokei</br>
            <br>Date       : 2004.11.27</br>
            <br></br>
            </remarks>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTime.ERAINFO_XML_FILENAME">
            <summary>
            元号情報のXMLファイル
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTime.DATETIMEFORMATINFO_XML_FILENAME">
            <summary>
            日付フォーマット情報のXMLファイル
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTime._eraInfoList">
            <summary>
            元号情報
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTime._eraNameList">
            <summary>
            元号リスト
            </summary>
        </member>
        <member name="F:Broadleaf.Library.Globarization.TDateTime._formDateTimeFormat">
            <summary>
            日付フォーマット情報リスト
            </summary>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.#ctor">
            **********************************************************************
            Module name      : xDateTime
            <summary>
                               日付時刻クラスコンストラクタ
            </summary>
            ----------------------------------------------------------------------
            <remarks>
            <br>Note　　　　　　 :   日付時刻クラスコンストラクタ</br>
            <br>Programer        :   R.Sokei                     </br>
            <br>Date             :   2004.12.04                  </br>
            <br>Update Note      :                  </br>
            </remarks>
            **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetSFDateNow">
            **********************************************************************
            Module name      : GetSFDateNow
            <summary>
                               SF.NETシステムで定義されているシステム日付
                               を取得します(SF.NETシステム日付)
            </summary>
            <returns>
                               SFシステム日付(DateTime型)
            </returns>
            ----------------------------------------------------------------------
            <remarks>
            <br>Note　　　　　　 :   SF.NETシステムの現在の日付と時刻を取得します</br>
            <br>Programer        :   R.Sokei                                     </br>
            <br>Date             :   2004.12.06                                  </br>
            <br>Update Note      :                  </br>
            </remarks>
            **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetSFDateNow(System.String)">
            **********************************************************************
            Module name      : GetSFDateNow
            <summary>
                               SF.NETシステムで定義されているシステム日付
                               を取得します(SF.NETシステム日付)
            </summary>
            <param name="dateFormat">
                               日付フォーマット形式
            </param>
            <returns>
                               SFシステム日付(Int型)(YYYYMMDD形式)
            </returns>
            ----------------------------------------------------------------------
            <remarks>
            <br>Note　　　　　　 :   SFシステムの現在の日付を取得する</br>
            <br>                     戻り値は、指定された形式(YYYYMMDD,YYYYMM･･･)のint型を返す</br>
            <br>Programer        :   R.Sokei                         </br>
            <br>Date             :   2004.12.06                      </br>
            <br>Update Note      :                 </br>
            </remarks>
            **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.LongDateToDateTime(System.Int32)">
            **********************************************************************
            Module name      : LongDateToDateTime
            <summary>
                               LongDate型(YYYYMMDD)の日付をDateTime型に変換します
            </summary>
            <param name="inLongDate">
                               変換対象日付(LonDate形式)
            </param>
            <returns>
                               日付変換結果(DateTime型)
            </returns>
            ----------------------------------------------------------------------
            <remarks>
            <list type="bullet">
            <item>longDateFormat形式 : 変換例(入力が2004/12/10の場合)</item>
            <item>YYYYMMDD : 20041210</item>
            <item>YYYYMM   : 200412</item>
            <item>YYMMDD   : 041210</item>
            <item>MMDD     : 1210</item>
            </list>
            <br>Note　　　　　　 :   LongDate形式(YYYYMMDD)の日付をDateTime型に変換する</br>
            <br>Programer        :   R.Sokei                                    </br>
            <br>Date             :   2004.12.06                                      </br>
            <br>Update Note      :                  </br>
            </remarks>
            **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.LongDateToDateTime(System.String,System.Int32)">
            **********************************************************************
            Module name      : LongDateToDateTime
            <summary>
                               LongDate型(YYYYMMDD)の日付をDateTime型に変換します
            </summary>
            <param name="longDateFormat">
                               LongDate日付フォーマット形式
            </param>
            <param name="inLongDate">
                               変換対象日付(LonDate形式)
            </param>
            <returns>
                               日付変換結果(DateTime型)
            </returns>
            ----------------------------------------------------------------------
            <remarks>
            <list type="bullet">
            <item>longDateFormat形式 : 変換例(入力が2004/12/10の場合)</item>
            <item>YYYYMMDD : 20041210</item>
            <item>YYYYMM   : 200412</item>
            <item>YYMMDD   : 041210</item>
            <item>MMDD     : 1210</item>
            </list>
            <br>Note　　　　　　 :   LongDate形式(YYYYMMDD)の日付をDateTime型に変換する</br>
            <br>Programer        :   R.Sokei                                    </br>
            <br>Date             :   2004.12.06                                      </br>
            <br>Update Note      :                  </br>
            </remarks>
            **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.DateTimeParseExact(System.String,System.String)">
            **********************************************************************
            Module name      : DateTimeParseExact
            <summary>
                               日付時刻を表す文字列をDateTime型に変換します
            </summary>
            <param name="inStrDate">
                               変換対象日付(string型)
            </param>
            <param name="dateFormatStr">
                               変換対象日付のフォーマット形式(YYYYMMDD,YYYYMM,...)
            </param>
            <returns>
                               日付変換結果(DateTime型)
            </returns>
            ----------------------------------------------------------------------
            <remarks>
            <br>Note　　　　　　 :   日付時刻を表す文字列をDateTime型に変換します</br>
            <br>Programer        :   R.Sokei</br>
            <br>Date             :   2004.12.06</br>
            <br>Update Note      :</br>
            </remarks>
            **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetYearFromJapaneseYear(System.String)">
            <summary>
            和暦の年から西暦に変換して返却します。
            本メソッドで扱える和暦は明治以降のものとし、
            漢字2文字（例：平成）・漢字先頭1文字（例：平）・略号半角大文字（例：H）・略号半角小文字（例：h）のみを扱います。
            それ以外のものを付与している場合は、例外を返却します。
            </summary>
            <exception cref="T:System.FormatException">
            下記の場合、FormatExceptionが発生します。
            　・引数が空文字の場合
            　・元号に明治以降の元号を指定していない場合
            　・元号の指定が漢字2文字・漢字先頭1文字・略号半角大文字・略号半角小文字以外の場合
            　・元号を除いた文字列に数字以外のものが含まれる場合
            　・元号を除いた文字列の桁数が3桁以上の場合
            </exception>
            <exception cref="T:System.ArgumentNullException">
            引数がnullの場合、ArgumentNullExceptionが発生します
            </exception>
            <param name="japaneseYearStr">和暦の年（元号＋年の結合文字列）</param>
            <returns>西暦の年</returns>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetYearFromJapaneseYear(System.String,System.String)">
            <summary>
            和暦の年から西暦に変換して返却します。
            本メソッドで扱える和暦は明治以降のものとし、
            漢字2文字（例：平成）・漢字先頭1文字（例：平）・略号半角大文字（例：H）・略号半角小文字（例：h）のみを扱います。
            それ以外のものを付与している場合は、例外を返却します。
            </summary>
            <exception cref="T:System.FormatException">
            下記の場合、FormatExceptionが発生します。
            　・引数が空文字の場合
            　・元号に明治以降の元号を指定していない場合
            　・元号の指定が漢字2文字・漢字先頭1文字・略号半角大文字・略号半角小文字以外の場合
            　・元号を除いた文字列に数字以外のものが含まれる場合
            　・元号を除いた文字列の桁数が3桁以上の場合
            </exception>
            <exception cref="T:System.ArgumentNullException">
            引数がnullの場合、ArgumentNullExceptionが発生します
            </exception>
            <param name="gengo">元号</param>
            <param name="japaneseYear">和暦の年（年のみ）</param>
            <returns>西暦の年</returns>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.DateTimeToLongDate(System.DateTime)">
            **********************************************************************
            Module name      : DateTimeToLongDate
            <summary>
                               DateTime型の日付をLongDate型(YYYYMMDD)に変換します
            </summary>
            <param name="inDateTime">
                               変換対象日付(DateTime型)
            </param>
            <returns>
                               日付変換結果(LonDate形式)
            </returns>
            ----------------------------------------------------------------------
            <remarks>
            <br>Note　　　　　　 :   DateTime型の日付をLongDate形式(YYYYMMDD)に変換する</br>
            <br>Programer        :   R.Sokei</br>
            <br>Date             :   2004.12.06</br>
            <br>Update Note      :</br>
            </remarks>
            **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.DateTimeToLongDate(System.String,System.DateTime)">
            **********************************************************************
            Module name      : DateTimeToLongDate
            <summary>
                               DateTime型の日付をLongDate型(YYYYMMDD)に変換します
            </summary>
            <param name="dateFormat">
                               日付フォーマット形式
            </param>
            <param name="inDateTime">
                               変換対象日付(DateTime型)
            </param>
            <returns>
                               日付変換結果(LonDate形式)
            </returns>
            ----------------------------------------------------------------------
            <remarks>
            <br>Note　　　　　　 :   DateTime型の日付をLongDate形式(YYYYMMDD)に変換する</br>
            <br>Programer        :   R.Sokei</br>
            <br>Date             :   2004.12.06</br>
            <br>Update Note      :</br>
            </remarks>
            **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.SplitDate(System.String,System.Int32,System.String@,System.Int32@,System.Int32@,System.Int32@)">
            **********************************************************************
            Module name      : SplitDate
            <summary>
                               指定された日付を(元号,年,月,日)に分割します
            </summary>
            <param name="dateFormat">
                               日付フォーマット形式
            </param>
            <param name="orgDate">
                               分割対象日付(YYYYMMDD形式)
            </param>
            <param name="rGengo">
                               分割結果(元号)
            </param>
            <param name="rYear">
                               分割結果(年)
            </param>
            <param name="rMonth">
                               分割結果(月)
            </param>
            <param name="rDay">
                               分割結果(日)
            </param>
            <returns>
                               分割結果(0:成功, -1:分割失敗)
            </returns>
            ----------------------------------------------------------------------
            <remarks>
            <br>Note　　　　　　 :   日付を年,月,日に分割して指定された引数に返す</br>
            <br>                     戻り値は、分割結果(成否)を返す</br>
            <br>Programer        :   R.Sokei                            </br>
            <br>Date             :   2004.12.06                              </br>
            <br>Update Note      :                  </br>
            </remarks>
            **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.SplitDate(System.String,System.DateTime,System.String@,System.Int32@,System.Int32@,System.Int32@)">
            **********************************************************************
            Module name      : SplitDate
            <summary>
                               指定された日付を(元号,年,月,日)に分割します
            </summary>
            <param name="dateFormat">
                               日付フォーマット形式
            </param>
            <param name="orgDate">
                               分割対象日付(DateTime型)
            </param>
            <param name="rGengo">
                               分割結果(元号)
            </param>
            <param name="rYear">
                               分割結果(年)
            </param>
            <param name="rMonth">
                               分割結果(月)
            </param>
            <param name="rDay">
                               分割結果(日)
            </param>
            <returns>
                               分割結果(0:成功, -1:分割失敗)
            </returns>
            ----------------------------------------------------------------------
            <remarks>
            <br>Note　　　　　　 :   日付を年,月,日に分割して指定された引数に返す</br>
            <br>                     戻り値は、分割結果(成否)を返す</br>
            <br>Programer        :   R.Sokei                            </br>
            <br>Date             :   2004.12.06                              </br>
            <br>Update Note      :                  </br>
            </remarks>
            **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetJapaneseEraFromYMD(System.Int32,System.Int32,System.Int32,System.String@,System.Int32@)">
            <summary>
            西暦の年月日を元に和暦の元号と年を返却します。
            ※CultureInfoに"ja-JP"を設定した際のDateTime.ToString(DateTime, CultureInfo)と同様に、
            　明治時代は1868年1月1日～とし、それより前の日を指定した場合はArgumentOutOfRangeExceptionをthrowします。
            　また、未来の日付に関しては、最新の元号を返却します。
            </summary>
            <param name="year">西暦の年</param>
            <param name="month">月</param>
            <param name="day">日</param>
            <param name="gengo">元号（返却値）</param>
            <param name="japaneseYear">和暦の年（返却値）</param>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetJapaneseEraFromYMD(System.DateTime,System.String@,System.Int32@)">
            <summary>
            西暦の年月日を元に和暦の元号と年を返却します。
            ※CultureInfoに"ja-JP"を設定した際のDateTime.ToString(DateTime, CultureInfo)と同様に、
            　明治時代は1868年1月1日～とし、それより前の日を指定した場合はArgumentOutOfRangeExceptionをthrowします。
            　また、未来の日付に関しては、最新の元号を返却します。
            </summary>
            <param name="dt">取得対象の日付</param>
            <param name="gengo">元号（返却値）</param>
            <param name="japaneseYear">和暦の年（返却値）</param>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.DateTimeToString(System.String,System.DateTime)">
             <summary>
             DateTime --> 日付文字列変換
             </summary>
             <param name="dateFormat">日付フォーマット形式</param>
             <param name="inDateTime">変換対象日付(DateTime型)</param>
             <returns>日付変換結果(指定された形式の文字列)</returns>
             <remarks>
             <br>Note		 :   DateTime型,LongDate型(YYYYMMDD)の日付を指定されたフォーマット</br>
            	<br>		 	     形式の文字列に変換します</br>
            	<br>					</br>
            	<br>					</br>
            
            	日付フォーマットは、以下の様式を指定します
             <list type="bullet">
            	<item>フォーマット形式(dateFormat) : 出力結果(例)</item>
            	<item>YYYYMMDD   : 2004年01月01日</item>
            	<item>YYYYmmdd   : 2004年 1月 1日</item>
            	<item>YYYYMM     : 2004年01月</item>
            	<item>YYYYmm     : 2004年 1月</item>
            	<item>GGYYMMDD   : 平成16年01月01日</item>
            	<item>GGyymmdd   : 平成 5年 1月 1日</item>
            	<item>GGYYMM     : 平成16年01月</item>
            	<item>GGyymm     : 平成 5年 1月</item>
            	<item>ggYYMM     : H16年01月</item>
            	<item>ggyymm     : H 5年 1月</item>
            	<item>ggYY/MM/DD : H16/01/01</item>
            	<item>ggyy/mm/dd : H 5/ 1/ 1</item>
            	<item>ggYY/MM    : H16/01</item>
            	<item>ggyy/mm    : H 5/ 1</item>
            	<item>ggYY.MM.DD : H16.01.01</item>
            	<item>ggyy.mm.dd : H 5. 1. 1</item>
            	<item>ggYY.MM    : H16.01</item>
            	<item>ggyy.mm    : H 5. 1</item>
            	<item>GGYY       : 平成16年</item>
            	<item>ggYY       : H16年</item>
            	<item>GGyy       : 平成 5年</item>
            	<item>ggyy       : H 5年</item>
            	<item>YYYY/MM/DD : 2004/01/01</item>
            	<item>YYYY/mm/dd : 2004/ 1/ 1</item>
            	<item>YYYY.MM.DD : 2004.01.01</item>
            	<item>YYYY.mm.dd : 2004. 1. 1</item>
            	<item>exggYY     : H16</item>
            	<item>exggyy     : H 5</item>
            	<item>ggYY.      : H16</item>
            	<item>ggyy.      : H 5</item>
            	<item>ggYY/      : H16</item>
            	<item>ggyy/      : H 5</item>
            	<item>GG         : 平成</item>
            	<item>gg         : H</item>
             <item>GGYY/MM    : H18/08
             この定義が間違っています。 本来 GGYY/MM では以下の exGGYY/MM と同等の結果を返さなければ
            	いけませんが、既にこの定義を使用している処理があるのでこのままにしておきます。</item>
            	<item>				exGGYY/MM  : 上記 GGYY/MM の代わりに使用してください。 元号 + 年 + / +月  例) 平成18/08</item>
             </list>
            	<br>				</br>
             <br>Programer        :   R.Sokei</br>
             <br>Date             :   2004.12.06</br>
             </remarks>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.DateTimeToString(System.String,System.DateTime,System.String)">
            <summary>
            DateTime --> 日付文字列変換
            </summary>
            <param name="dateFormat">日付フォーマット形式</param>
            <param name="inDateTime">変換対象日付(DateTime型)</param>
            <param name="defaultStr">inDateTimeが不正な日付、最小値だった場合に返す文字列</param>
            <returns>日付変換結果(指定された形式の文字列)</returns>
            <remarks>
            <list type="bullet">
            <item>フォーマット形式(dateFormat) : 出力結果(例)</item>
            <item>YYYYMMDD   : 2004年01月01日</item>
            <item>YYYYmmdd   : 2004年 1月 1日</item>
            <item>YYYYMM     : 2004年01月</item>
            <item>YYYYmm     : 2004年 1月</item>
            <item>GGYYMMDD   : 平成16年01月01日</item>
            <item>GGyymmdd   : 平成 5年 1月 1日</item>
            <item>GGYYMM     : 平成16年01月</item>
            <item>GGyymm     : 平成 5年 1月</item>
            <item>ggYYMM     : H16年01月</item>
            <item>ggyymm     : H 5年 1月</item>
            <item>ggYY/MM/DD : H16/01/01</item>
            <item>ggyy/mm/dd : H 5/ 1/ 1</item>
            <item>ggYY/MM    : H16/01</item>
            <item>ggyy/mm    : H 5/ 1</item>
            <item>ggYY.MM.DD : H16.01.01</item>
            <item>ggyy.mm.dd : H 5. 1. 1</item>
            <item>ggYY.MM    : H16.01</item>
            <item>ggyy.mm    : H 5. 1</item>
            <item>GGYY       : 平成16年</item>
            <item>ggYY       : H16年</item>
            <item>GGyy       : 平成 5年</item>
            <item>ggyy       : H 5年</item>
            <item>YYYY/MM/DD : 2004/01/01</item>
            <item>YYYY/mm/dd : 2004/ 1/ 1</item>
            <item>YYYY.MM.DD : 2004.01.01</item>
            <item>YYYY.mm.dd : 2004. 1. 1</item>
            <item>exggYY     : H16</item>
            <item>exggyy     : H 5</item>
            <item>ggYY.      : H16</item>
            <item>ggyy.      : H 5</item>
            <item>ggYY/      : H16</item>
            <item>ggyy/      : H 5</item>
            <item>GG         : 平成</item>
            <item>gg         : H</item>
            <item>GGYY/MM    : H18/08
            この定義が間違っています。 本来 GGYY/MM では以下の exGGYY/MM と同等の結果を返さなければ
            いけませんが、既にこの定義を使用している処理があるのでこのままにしておきます。</item>
            <item>				exGGYY/MM  : 上記 GGYY/MM の代わりに使用してください。 元号 + 年 + / +月  例) 平成18/08</item>
            </list>
            <br>Note       : DateTimeを指定された日付フォーマット形式の文字列に変換します</br>
            <br>Programmer : 980056 R.Sokei</br>
            <br>Date       : 2005.08.04</br>
            </remarks>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetLastDate(System.Int32,System.Int32)">
            <summary>
            月内日数を取得する(末日取得)
            </summary>
            <param name="year">年</param>
            <param name="month">月</param>
            <remarks>
            <br>Note       : </br>
            <br>Programmer : R.Sokei</br>
            <br>Date       : 2005.07.10</br>
            </remarks>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetLastDate(System.Int32)">
            <summary>
            月内日数を取得する(末日取得)
            </summary>
            <param name="inLongDate">YYYYMMDD形式(8桁)の日付</param>
            <remarks>
            <br>Note       : </br>
            <br>Programmer : R.Sokei</br>
            <br>Date       : 2005.07.10</br>
            </remarks>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.DateTimeToStringArray(System.String,System.DateTime)">
             <summary>
            
             </summary>
             <param name="dateFormat"></param>
             <param name="inDateTime"></param>
             <returns></returns>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.LongDateToString(System.String,System.String,System.Int32,Broadleaf.Library.Globarization.TLongDateEditor)">
            <summary>
             LongDate形式の日付を指定されたフォーマット 形式の文字列に変換します
            </summary>
            <param name="longDateFormat">変換対象日付のフォーマット形式(LongDate形式 YYYYMMDD or YYYYMM)</param>
            <param name="dateFormat">変換する日付フォーマット形式(YYYYMMDD, YYYYMM・・・)</param>
            <param name="inLongDate">変換対象日付(LongDate形式)</param>
            <param name="longDateEditor">LongDate形式日付の編集方法(TLongDateEditor.ZeroSuppress は、longDateFormatが"YYYYMMDD","YYYYMM"時のみ有効)</param>
            <returns>日付変換結果(string)</returns>
            <remarks>
            <list type="bullet">
            <item>フォーマット形式(dateFormat) : 出力結果(例)</item>
            <item>YYYYMMDD   : 2004年01月01日</item>
            <item>YYYYmmdd   : 2004年 1月 1日</item>
            <item>YYYYMM     : 2004年01月</item>
            <item>YYYYmm     : 2004年 1月</item>
            <item>GGYYMMDD   : 平成16年01月01日</item>
            <item>GGyymmdd   : 平成 5年 1月 1日</item>
            <item>GGYYMM     : 平成16年01月</item>
            <item>GGyymm     : 平成 5年 1月</item>
            <item>ggYYMM     : H16年01月</item>
            <item>ggyymm     : H 5年 1月</item>
            <item>ggYY/MM/DD : H16/01/01</item>
            <item>ggyy/mm/dd : H 5/ 1/ 1</item>
            <item>ggYY/MM    : H16/01</item>
            <item>ggyy/mm    : H 5/ 1</item>
            <item>ggYY.MM.DD : H16.01.01</item>
            <item>ggyy.mm.dd : H 5. 1. 1</item>
            <item>ggYY.MM    : H16.01</item>
            <item>ggyy.mm    : H 5. 1</item>
            <item>GGYY       : 平成16年</item>
            <item>ggYY       : H16年</item>
            <item>GGyy       : 平成 5年</item>
            <item>ggyy       : H 5年</item>
            <item>YYYY/MM/DD : 2004/01/01</item>
            <item>YYYY/mm/dd : 2004/ 1/ 1</item>
            <item>YYYY.MM.DD : 2004.01.01</item>
            <item>YYYY.mm.dd : 2004. 1. 1</item>
            <item>exggYY     : H16</item>
            <item>exggyy     : H 5</item>
            <item>ggYY.      : H16</item>
            <item>ggyy.      : H 5</item>
            <item>ggYY/      : H16</item>
            <item>ggyy/      : H 5</item>
            <item>GG         : 平成</item>
            <item>gg         : H</item>
            <item>GGYY/MM    : H18/08
            この定義が間違っています。 本来 GGYY/MM では以下の exGGYY/MM と同等の結果を返さなければ
            いけませんが、既にこの定義を使用している処理があるのでこのままにしておきます。</item>
            <item>				exGGYY/MM  : 上記 GGYY/MM の代わりに使用してください。 元号 + 年 + / +月  例) 平成18/08</item>
            </list>
            <br>Note　　　　　　 :   LongDate形式の日付を指定されたフォーマット 形式の文字列に変換します</br>
            <br>                     文字列左側は必要に応じてゼロ埋めされます</br>
            <br>                     longDateFormatがYYYYMMDD形式の場合に、日付が00だと、全て空白で戻ります</br>
            <br>Programer        :   R.Sokei</br>
            <br>Date             :   2004.12.06</br>
            <br>Update Note      :</br>
            </remarks>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.ChangeDateFormatZeroSuppress(System.String@,System.Int32@,System.String)">
            <summary>
            編集文字列変更処理(ゼロサプレス)
            </summary>
            <param name="inLongDataFormat">数値形式の入力日付のフォーマット(YYYYMMDD or YYYYMM)</param>
            <param name="inLongDate">数値形式の入力日付</param>
            <param name="orgDateFormat">変換する日付フォーマット</param>
            <returns></returns>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.LongDateToString(System.String,System.String,System.Int32)">
            **********************************************************************
            Module name      : LongDateToString
            <summary>
                               LongDate形式の日付を指定されたフォーマット 形式の文字列に変換します
            </summary>
            <param name="longDateFormat">
                               変換対象日付のフォーマット形式(LongDate形式 YYYYMMDD or YYYYMM)
            </param>
            <param name="dateFormat">
                               日付フォーマット形式(YYYYMMDD, YYYYMM・・・)
            </param>
            <param name="inLongDate">
                               変換対象日付(LongDate形式)
            </param>
            <returns>
                               日付変換結果(string)
            </returns>
            ----------------------------------------------------------------------
            <remarks>
            <list type="bullet">
            <item>フォーマット形式(dateFormat) : 出力結果(例)</item>
            <item>YYYYMMDD   : 2004年01月01日</item>
            <item>YYYYmmdd   : 2004年 1月 1日</item>
            <item>YYYYMM     : 2004年01月</item>
            <item>YYYYmm     : 2004年 1月</item>
            <item>GGYYMMDD   : 平成16年01月01日</item>
            <item>GGyymmdd   : 平成 5年 1月 1日</item>
            <item>GGYYMM     : 平成16年01月</item>
            <item>GGyymm     : 平成 5年 1月</item>
            <item>ggYYMM     : H16年01月</item>
            <item>ggyymm     : H 5年 1月</item>
            <item>ggYY/MM/DD : H16/01/01</item>
            <item>ggyy/mm/dd : H 5/ 1/ 1</item>
            <item>ggYY/MM    : H16/01</item>
            <item>ggyy/mm    : H 5/ 1</item>
            <item>ggYY.MM.DD : H16.01.01</item>
            <item>ggyy.mm.dd : H 5. 1. 1</item>
            <item>ggYY.MM    : H16.01</item>
            <item>ggyy.mm    : H 5. 1</item>
            <item>GGYY       : 平成16年</item>
            <item>ggYY       : H16年</item>
            <item>GGyy       : 平成 5年</item>
            <item>ggyy       : H 5年</item>
            <item>YYYY/MM/DD : 2004/01/01</item>
            <item>YYYY/mm/dd : 2004/ 1/ 1</item>
            <item>YYYY.MM.DD : 2004.01.01</item>
            <item>YYYY.mm.dd : 2004. 1. 1</item>
            <item>exggYY     : H16</item>
            <item>exggyy     : H 5</item>
            <item>ggYY.      : H16</item>
            <item>ggyy.      : H 5</item>
            <item>ggYY/      : H16</item>
            <item>ggyy/      : H 5</item>
            <item>GG         : 平成</item>
            <item>gg         : H</item>
            <item>GGYY/MM    : H18/08
            この定義が間違っています。 本来 GGYY/MM では以下の exGGYY/MM と同等の結果を返さなければ
            いけませんが、既にこの定義を使用している処理があるのでこのままにしておきます。</item>
            <item>				exGGYY/MM  : 上記 GGYY/MM の代わりに使用してください。 元号 + 年 + / +月  例) 平成18/08</item>
            </list>
            <br>Note　　　　　　 :   LongDate形式の日付を指定されたフォーマット 形式の文字列に変換します</br>
            <br>                     文字列左側は必要に応じてゼロ埋めされます</br>
            <br>Programer        :   R.Sokei</br>
            <br>Date             :   2004.12.06</br>
            <br>Update Note      :</br>
            </remarks>
            **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.LongDateToString(System.String,System.Int32)">
            **********************************************************************
            Module name      : LongDateToString
            <summary>
                               LongDate形式の日付を指定されたフォーマット 形式の文字列に変換します
            </summary>
            <param name="dateFormat">
                               日付フォーマット形式
            </param>
            <param name="inLongDate">
                               変換対象日付(LongDate形式)
            </param>
            <returns>
                               日付変換結果(string)
            </returns>
            ----------------------------------------------------------------------
            <remarks>
            <br>Note　　　　　　 :   LongDate形式の日付をYYYYMMDDの文字列に変換します</br>
            <br>                     文字列左側は必要に応じてゼロ埋めされます</br>
            <br>Programer        :   R.Sokei</br>
            <br>Date             :   2004.12.06</br>
            <br>Update Note      :</br>
            </remarks>
            **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetRyakGou(System.String)">
            **********************************************************************
            Module name      : GetRyakGou
            <summary>
                               指定された元号の略号を取得する
                               指定された元号が存在しない場合は、最新の元号の略称を返却する
            </summary>
            <param name="inGengou">
                               元号
            </param>
            <returns>
                               略号
            </returns>
            ----------------------------------------------------------------------
            <remarks>
            <br>Note　　　　　　 :   指定された元号の略号を取得する</br>
            <br>Programer        :   R.Sokei                            </br>
            <br>Date             :   2004.12.06                              </br>
            <br>Update Note      :                  </br>
            </remarks>
            **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetDayOfWeek(System.DateTime)">
             **********************************************************************
             Module name      : GetDayOfWeek
             <summary>
                                曜日を取得する
            
             </summary>
             <param name="inDateTime">
                                対象日付
             </param>
             <returns>
                                曜日
             </returns>
             ----------------------------------------------------------------------
             <remarks>
             <br>Note　　　　　　 :   曜日を取得する</br>
             <br>Programer        :   R.Sokei                            </br>
             <br>Date             :   2004.12.06                              </br>
             <br>Update Note      :                  </br>
             </remarks>
             **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetDayOfWeek(System.String,System.DateTime)">
             **********************************************************************
             Module name      : GetDayOfWeek
             <summary>
                                曜日を取得する
            
             </summary>
             <param name="dateFormat">
                                曜日フォーマット形式
             </param>
             <param name="inDateTime">
                                対象日付
             </param>
             <returns>
                                曜日
             </returns>
             ----------------------------------------------------------------------
             <remarks>
             <br>Note　　　　　　 :   曜日を取得する    </br>
             <br>Programer        :   R.Sokei           </br>
             <br>Date             :   2004.12.06        </br>
             <br>Update Note      :                     </br>
             </remarks>
             **********************************************************************
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.IsAvailableDate(Broadleaf.Library.Globarization.TDateTimeFormat,System.DateTime)">
            <summary>
            日付の有効性チェック処理
            </summary>
            <param name="dateFormat">入力日付文字列の日付形式</param>
            <param name="inDateTime">チェック対象日付(DateTime)</param>
            <returns>日付有効性: true:有効, false:無効(不正な日付)</returns>
            <remarks>
            <br>Note       : 指定された日付文字列のの有効性チェックします</br>
            <br>Programmer : 980056 R.Sokei</br>
            <br>Date       : 2005.03.22</br>
            </remarks>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.IsAvailableDate(Broadleaf.Library.Globarization.TDateTimeFormat,System.String)">
            <summary>
            日付の有効性チェック処理
            </summary>
            <param name="dateFormat">入力日付文字列の日付形式</param>
            <param name="inDateTimeString">チェック対象日付文字列</param>
            <returns>日付有効性: true:有効, false:無効(不正な日付)</returns>
            <remarks>
            <br>Note       : 指定された日付文字列のの有効性チェックします</br>
            <br>Programmer : 980056 R.Sokei</br>
            <br>Date       : 2005.03.22</br>
            </remarks>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.IsAvailableDate(System.DateTime)">
            <summary>
            日付の有効性チェック処理
            </summary>
            <param name="inDateTime">チェック対象日付(DateTime)</param>
            <returns>日付有効性: true:有効, false:無効(不正な日付)</returns>
            <remarks>
            <br>Note       : 指定された日付文字列のの有効性チェックします</br>
            <br>Programmer : 980056 R.Sokei</br>
            <br>Date       : 2005.03.22</br>
            </remarks>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.IsAvailableDate(System.DateTime,System.Int32)">
            <summary>
            日付の有効性チェック処理
            </summary>
            <param name="inDateTime">チェック対象日付(DateTime)</param>
            <param name="mode">0:MinValue(0001/01/01)を不正な無効な日付と判定する, 1:0:MinValue(0001/01/01)を有効な日付と判定する</param>
            <returns>日付有効性: true:有効, false:無効(不正な日付)</returns>
            <remarks>
            <br>Note       : 指定された日付文字列のの有効性チェックします</br>
            <br>Programmer : 980056 R.Sokei</br>
            <br>Date       : 2005.03.22</br>
            </remarks>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetGengouList(System.Collections.ArrayList@)">
            <summary>
            元号リスト取得
            </summary>
            <param name="rGList">元号リスト(取得用)</param>
            <returns>処理ステータス 0:成功</returns>
            <remarks>
            <br>Note       : 元号リストを取得します</br>
            <br>Programmer : 980056 R.Sokei</br>
            <br>Date       : 2005.03.22</br>
            </remarks>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetGengouList(System.Collections.ArrayList@,Broadleaf.Library.Globarization.TDateTimeGengouMode)">
            <summary>
            元号リスト取得（特定の元号以降を取得）
            </summary>
            <param name="rGList">元号リスト(取得要)</param>
            <param name="mode">取得する元号のモード</param>
            <returns>処理ステータス 0:成功</returns>
            <remarks>
            <br>Note       : 元号リストを取得します</br>
            <br>             基本的に今後は取得した元号リストから不要な元号を削除する処理を各プログラム内で行わず、本メソッドを使用してください。</br>
            <br>Programmer : 31983 S.Tomohiro</br>
            <br>Date       : 2018.12.11</br>
            </remarks>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.JapaneseDateStringToLongDate(System.String)">
            <summary>
            和暦文字列-->LongDate(YYYYMMDD)変換
            ※本メソッドでは、原則として元号＋年月日の文字列を対象とします。
            　また、年月日の区切り文字は、"/" "-" "."の3種類を許容します。
            　元号については、漢字2文字・漢字先頭1文字・略号半角大文字・略号半角小文字を許容します。
            　それ以外の形式の値が来た場合も、.NET Frameworkの動作に従って変換を試みますが、
            　動作する端末の状態によっては、新元号への対応ができない場合があります。
            </summary>
            <param name="japaneseDate">和暦文字列(例 "平成17年8月1日")</param>
            <returns>変換日付(YYYYMMDD)</returns>
            <remarks>
            <br>Note       : 和暦文字列をLongDate型(YYYYMMDD)の日付に変換します</br>
            <br>Programmer : 980056 R.Sokei</br>
            <br>Date       : 2005.08.08</br>
            </remarks>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetDateFormat(System.String,System.String)">
            <summary>
            日付部品（TDateEdit・TDateEdit2・BDateEdit）の日付フォーマット取得処理。
            指定したフォーム名とコンポーネント名から、日付フォーマットを取得する。
            XMLに設定がない場合は、string.Emptyを返却する。
            </summary>
            <param name="formName">フォーム名</param>
            <param name="componentName">コンポーネント名</param>
            <returns>XMLに設定されている日付フォーマット。設定がない場合はstring.Empty。</returns>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetBaseYear(System.String)">
            <summary>
            指定した元号の基準年（足すと西暦になる年。各元号の0年に相当）取得処理。
            元号情報に存在しない元号を指定された場合は0を返却します。
            </summary>
            <param name="eraName">元号名</param>
            <returns>基準年</returns>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetEraInfoList">
            <summary>
            元号情報リストの取得。
            元号情報が読み込まれていない場合はXMLを読み込んで返却、読み込み済みの場合は読み込み済みデータを返却する。
            </summary>
            <returns>元号情報リスト</returns>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.GetEraNameList">
            <summary>
            元号名リストの取得。
            元号情報が読み込まれていない場合はXMLを読み込んで返却、読み込み済みの場合は読み込み済みデータを返却する。
            </summary>
            <returns>元号情報リスト</returns>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.ReadEraInfoXml">
            <summary>
            元号情報XMLの読み込み処理
            </summary>
        </member>
        <member name="M:Broadleaf.Library.Globarization.TDateTime.ReadDateFormatInfoXml">
            <summary>
            日付フォーマット情報XMLの読み込み処理
            日付フォーマット情報は任意情報のため、ファイルがない場合や1件もデータがない場合でもエラーとしない。
            </summary>
        </member>
    </members>
</doc>
